WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#183: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:TYPO_SPELLING: 'usefull' may be misspelled - perhaps 'useful'?
#228: FILE: Documentation/pps.txt:41:
+usefull besides(!) the gathering of timestamps as it is the central
 ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'intialization' may be misspelled - perhaps 'initialization'?
#297: FILE: Documentation/pps.txt:110:
+intialization routine as follow:
 ^^^^^^^^^^^^^

WARNING:REPEATED_WORD: Possible repeated word: 'cat'
#346: FILE: Documentation/pps.txt:159:
+    $ cat cat /sys/class/pps/00/assert

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#370: FILE: MAINTAINERS:2698:
+P:	Rodolfo Giometti
+M:	giometti@enneenne.com

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'L:' before 'W:'
#372: FILE: MAINTAINERS:2700:
+W:	http://wiki.enneenne.com/index.php/LinuxPPS_support
+L:	linuxpps@ml.enneenne.com

CHECK:SPACING: No space is necessary after a cast
#417: FILE: drivers/char/lp.c:759:
+	struct parport *port = (struct parport *) data;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#422: FILE: drivers/char/lp.c:764:
+	parport_write_control(port,
+		parport_read_control(port) | PARPORT_CONTROL_SELECT);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#427: FILE: drivers/char/lp.c:769:
+^I^I^Iparport_read_control(port) & ~PARPORT_CONTROL_SELECT); $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#427: FILE: drivers/char/lp.c:769:
+		parport_write_control(port,
+			parport_read_control(port) & ~PARPORT_CONTROL_SELECT); 

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#446: FILE: drivers/char/lp.c:852:
+		port->pps_info.mode = PPS_CAPTUREASSERT | PPS_OFFSETASSERT | \

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around port->pps_info
#452: FILE: drivers/char/lp.c:858:
+		port->pps_source = pps_register_source(&(port->pps_info),

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#453: FILE: drivers/char/lp.c:859:
+		port->pps_source = pps_register_source(&(port->pps_info),
+				PPS_CAPTUREASSERT | PPS_OFFSETASSERT,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#455: FILE: drivers/char/lp.c:861:
+^I^Iif (port->pps_source < 0) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#457: FILE: drivers/char/lp.c:863:
+^I^I^I^I^Iport->pps_info.path);^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#457: FILE: drivers/char/lp.c:863:
+			err("cannot register PPS source \"%s\"",
+					port->pps_info.path);	

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#460: FILE: drivers/char/lp.c:866:
+			info("PPS source #%d \"%s\" added to the system",
+					port->pps_source, port->pps_info.path);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#462: FILE: drivers/char/lp.c:868:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#462: FILE: drivers/char/lp.c:868:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#465: FILE: drivers/char/lp.c:871:
+		err("PPS support disabled due port \"%s\" is in polling mode",
+			port->pps_info.path);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around port->pps_info
#479: FILE: drivers/char/lp.c:921:
+		pps_unregister_source(&(port->pps_info));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#481: FILE: drivers/char/lp.c:923:
+		dbg("PPS source #%d \"%s\" removed from the system",
+			port->pps_source, port->pps_info.path);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#499: FILE: drivers/pps/Kconfig:7:
+config PPS
+	tristate "PPS support"
+	depends on EXPERIMENTAL
+	---help---
+	  PPS (Pulse Per Second) is a special pulse provided by some GPS
+	  antennas. Userland can use it to get an high time reference.
+
+	  Some antennas' PPS signals are connected with the CD (Carrier
+	  Detect) pin of the serial line they use to communicate with the
+	  host. In this case use the SERIAL_LINE client support.
+
+	  Some antennas' PPS signals are connected with some special host
+	  inputs so you have to enable the corresponding client support.
+
+	  This PPS support can also be built as a module.  If so, the module
+	  will be called pps-core.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#516: FILE: drivers/pps/Kconfig:24:
+config PPS_DEBUG
+	bool "PPS debugging messages"
+	depends on PPS 
+	help
+	  Say Y here if you want the PPS support to produce a bunch of debug
+	  messages to the system log.  Select this if you are having a
+	  problem with PPS support and want to see more of what is going on.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#518: FILE: drivers/pps/Kconfig:26:
+^Idepends on PPS $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#576: FILE: drivers/pps/clients/Kconfig:31:
+config PPS_CLIENT_LP
+	bool "Parallel printer support"
+	depends on PRINTER != n && ! ( PPS = m && PRINTER = y )
+	help
+	  If you say yes here you get support for a PPS source connected
+	  with the interrupt pin of your parallel port.
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#602: FILE: drivers/pps/clients/ktimer.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#619: FILE: drivers/pps/clients/ktimer.c:18:
+ *   along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#620: FILE: drivers/pps/clients/ktimer.c:19:
+ *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#623: FILE: drivers/pps/clients/ktimer.c:22:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#640: FILE: drivers/pps/clients/ktimer.c:39:
+static void pps_ktimer_event(unsigned long ptr) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#646: FILE: drivers/pps/clients/ktimer.c:45:
+	ktimer.expires = jiffies+HZ;   /* 1 second */
 	                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#655: FILE: drivers/pps/clients/ktimer.c:54:
+	info("echo %s %s for source %d",
+	 event&PPS_CAPTUREASSERT ? "assert" : "",

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#655: FILE: drivers/pps/clients/ktimer.c:54:
+	 event&PPS_CAPTUREASSERT ? "assert" : "",
 	      ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#656: FILE: drivers/pps/clients/ktimer.c:55:
+	 event&PPS_CAPTURECLEAR ? "clear" : "",
 	      ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#663: FILE: drivers/pps/clients/ktimer.c:62:
+	name		: "ktimer",
 	    		^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#665: FILE: drivers/pps/clients/ktimer.c:64:
+	mode		: PPS_CAPTUREASSERT|PPS_OFFSETASSERT|PPS_ECHOASSERT| \
 	    		                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#665: FILE: drivers/pps/clients/ktimer.c:64:
+	mode		: PPS_CAPTUREASSERT|PPS_OFFSETASSERT|PPS_ECHOASSERT| \
 	    		                                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#665: FILE: drivers/pps/clients/ktimer.c:64:
+	mode		: PPS_CAPTUREASSERT|PPS_OFFSETASSERT|PPS_ECHOASSERT| \
 	    		                                                   ^

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#665: FILE: drivers/pps/clients/ktimer.c:64:
+	mode		: PPS_CAPTUREASSERT|PPS_OFFSETASSERT|PPS_ECHOASSERT| \

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#666: FILE: drivers/pps/clients/ktimer.c:65:
+			  PPS_CANWAIT|PPS_TSFMT_TSPEC,
 			             ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#667: FILE: drivers/pps/clients/ktimer.c:66:
+^Iecho ^I^I: pps_ktimer_echo,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#685: FILE: drivers/pps/clients/ktimer.c:84:
+	ret = pps_register_source(&pps_ktimer_info,
+				PPS_CAPTUREASSERT|PPS_OFFSETASSERT,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#685: FILE: drivers/pps/clients/ktimer.c:84:
+				PPS_CAPTUREASSERT|PPS_OFFSETASSERT,
 				                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#695: FILE: drivers/pps/clients/ktimer.c:94:
+	ktimer.expires = jiffies+HZ;   /* 1 second */
 	                        ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#715: FILE: drivers/pps/kapi.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#732: FILE: drivers/pps/kapi.c:18:
+ *   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#733: FILE: drivers/pps/kapi.c:19:
+ *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#736: FILE: drivers/pps/kapi.c:22:
+
+

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#762: FILE: drivers/pps/kapi.c:48:
+static inline int __pps_register_source(struct pps_source_info_s *info, int default_params, int try_id)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#773: FILE: drivers/pps/kapi.c:59:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#773: FILE: drivers/pps/kapi.c:59:
+	else {

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#784: FILE: drivers/pps/kapi.c:70:
+	if ((info->mode&default_params) != default_params) {
 	               ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#788: FILE: drivers/pps/kapi.c:74:
+	if ((info->mode&(PPS_ECHOASSERT|PPS_ECHOCLEAR)) != 0 && info->echo == NULL) {
 	               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#788: FILE: drivers/pps/kapi.c:74:
+	if ((info->mode&(PPS_ECHOASSERT|PPS_ECHOCLEAR)) != 0 && info->echo == NULL) {
 	                               ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info->echo"
#788: FILE: drivers/pps/kapi.c:74:
+	if ((info->mode&(PPS_ECHOASSERT|PPS_ECHOCLEAR)) != 0 && info->echo == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#792: FILE: drivers/pps/kapi.c:78:
+	if ((info->mode&(PPS_TSFMT_TSPEC|PPS_TSFMT_NTPFP)) == 0) {
 	               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#792: FILE: drivers/pps/kapi.c:78:
+	if ((info->mode&(PPS_TSFMT_TSPEC|PPS_TSFMT_NTPFP)) == 0) {
 	                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#828: FILE: drivers/pps/kapi.c:114:
+{  $

WARNING:TYPO_SPELLING: 'unknow' may be misspelled - perhaps 'unknown'?
#836: FILE: drivers/pps/kapi.c:122:
+		err("warning! Try to unregister an unknow PPS source");
 		                                   ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#841: FILE: drivers/pps/kapi.c:127:
+^Ipps_source[i].info = NULL; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#844: FILE: drivers/pps/kapi.c:130:
+} $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#868: FILE: drivers/pps/kapi.c:154:
+	 * array... */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'unknow' may be misspelled - perhaps 'unknown'?
#875: FILE: drivers/pps/kapi.c:161:
+		err("unknow source for event!");
 		     ^^^^^^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#878: FILE: drivers/pps/kapi.c:164:
+	if ((event&(PPS_CAPTUREASSERT|PPS_CAPTURECLEAR)) == 0 ) {
 	          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#878: FILE: drivers/pps/kapi.c:164:
+	if ((event&(PPS_CAPTUREASSERT|PPS_CAPTURECLEAR)) == 0 ) {
 	                             ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#878: FILE: drivers/pps/kapi.c:164:
+	if ((event&(PPS_CAPTUREASSERT|PPS_CAPTURECLEAR)) == 0 ) {

WARNING:TYPO_SPELLING: 'unknow' may be misspelled - perhaps 'unknown'?
#879: FILE: drivers/pps/kapi.c:165:
+		err("unknow event (%x) for source %d", event, source);
 		     ^^^^^^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#884: FILE: drivers/pps/kapi.c:170:
+	if ((pps_source[source].params.mode&(PPS_ECHOASSERT|PPS_ECHOCLEAR)) != 0)
 	                                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#884: FILE: drivers/pps/kapi.c:170:
+	if ((pps_source[source].params.mode&(PPS_ECHOASSERT|PPS_ECHOCLEAR)) != 0)
 	                                                   ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#889: FILE: drivers/pps/kapi.c:175:
+	if (event&PPS_CAPTUREASSERT) {
 	         ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#891: FILE: drivers/pps/kapi.c:177:
+		if (pps_source[source].params.mode&PPS_OFFSETASSERT)
 		                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#897: FILE: drivers/pps/kapi.c:183:
+^I^Idbg("capture assert seq #%lu for source %d", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#898: FILE: drivers/pps/kapi.c:184:
+		dbg("capture assert seq #%lu for source %d", 
+			pps_source[source].assert_sequence, source);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#900: FILE: drivers/pps/kapi.c:186:
+	if (event&PPS_CAPTURECLEAR) {
 	         ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#902: FILE: drivers/pps/kapi.c:188:
+		if (pps_source[source].params.mode&PPS_OFFSETCLEAR)
 		                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#908: FILE: drivers/pps/kapi.c:194:
+^I^Idbg("capture clear seq #%lu for source %d", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#909: FILE: drivers/pps/kapi.c:195:
+		dbg("capture clear seq #%lu for source %d", 
+			pps_source[source].clear_sequence, source);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#917: FILE: drivers/pps/kapi.c:203:
+EXPORT_SYMBOL(pps_register_source);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#918: FILE: drivers/pps/kapi.c:204:
+EXPORT_SYMBOL(pps_unregister_source);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#919: FILE: drivers/pps/kapi.c:205:
+EXPORT_SYMBOL(pps_event);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#926: FILE: drivers/pps/pps.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#943: FILE: drivers/pps/pps.c:18:
+ *   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#944: FILE: drivers/pps/pps.c:19:
+ *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#947: FILE: drivers/pps/pps.c:22:
+
+

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#964: FILE: drivers/pps/pps.c:39:
+static struct sock *nl_sk = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:CODE_INDENT: code indent should use tabs where possible
#1001: FILE: drivers/pps/pps.c:76:
+^I^I^I     ^IPPS_MAX_NAME_LEN) == 0 ||$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1001: FILE: drivers/pps/pps.c:76:
+^I^I^I     ^IPPS_MAX_NAME_LEN) == 0 ||$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1003: FILE: drivers/pps/pps.c:78:
+^I^I^I     ^IPPS_MAX_NAME_LEN) == 0))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1003: FILE: drivers/pps/pps.c:78:
+^I^I^I     ^IPPS_MAX_NAME_LEN) == 0))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1003: FILE: drivers/pps/pps.c:78:
+		     strncmp(pps_source[i].info->name, path,
+			     	PPS_MAX_NAME_LEN) == 0))

CHECK:SPACING: No space is necessary after a cast
#1027: FILE: drivers/pps/pps.c:102:
+		nlh = (struct nlmsghdr *) skb->data;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1029: FILE: drivers/pps/pps.c:104:
+		dbg("New message from PID %d (flags %x)",
+			nlh->nlmsg_pid, nlh->nlmsg_flags);

CHECK:SPACING: No space is necessary after a cast
#1032: FILE: drivers/pps/pps.c:107:
+		nlpps = (struct pps_netlink_msg*) NLMSG_DATA(nlh);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1032: FILE: drivers/pps/pps.c:107:
+		nlpps = (struct pps_netlink_msg*) NLMSG_DATA(nlh);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#1037: FILE: drivers/pps/pps.c:112:
+		case PPS_CREATE : {
 		                ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#1053: FILE: drivers/pps/pps.c:128:
+		case PPS_DESTROY : {
 		                 ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#1062: FILE: drivers/pps/pps.c:137:
+		case PPS_SETPARMS : {
 		                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1069: FILE: drivers/pps/pps.c:144:
+^I^I ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1069: FILE: drivers/pps/pps.c:144:
+^I^I ^I}$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#1077: FILE: drivers/pps/pps.c:152:
+			if ((nlpps->params.mode&~pps_source[source].info->mode) != 0) {
 			                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1081: FILE: drivers/pps/pps.c:156:
+^I^I ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1081: FILE: drivers/pps/pps.c:156:
+^I^I ^I}$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1082: FILE: drivers/pps/pps.c:157:
+			if ((nlpps->params.mode&(PPS_CAPTUREASSERT|PPS_CAPTURECLEAR)) == 0) {
 			                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1082: FILE: drivers/pps/pps.c:157:
+			if ((nlpps->params.mode&(PPS_CAPTUREASSERT|PPS_CAPTURECLEAR)) == 0) {
 			                                          ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1087: FILE: drivers/pps/pps.c:162:
+			if ((nlpps->params.mode&(PPS_TSFMT_TSPEC|PPS_TSFMT_NTPFP)) == 0) {
 			                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1087: FILE: drivers/pps/pps.c:162:
+			if ((nlpps->params.mode&(PPS_TSFMT_TSPEC|PPS_TSFMT_NTPFP)) == 0) {
 			                                        ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1097: FILE: drivers/pps/pps.c:172:
+			if (pps_source[source].info->mode&PPS_CANWAIT)
 			                                 ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#1106: FILE: drivers/pps/pps.c:181:
+		case PPS_GETPARMS : {
 		                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1120: FILE: drivers/pps/pps.c:195:
+^I ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1120: FILE: drivers/pps/pps.c:195:
+^I ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1122: FILE: drivers/pps/pps.c:197:
+^I ^Icase PPS_GETCAP : {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1122: FILE: drivers/pps/pps.c:197:
+^I ^Icase PPS_GETCAP : {$

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#1122: FILE: drivers/pps/pps.c:197:
+	 	case PPS_GETCAP : {
 	 	                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1136: FILE: drivers/pps/pps.c:211:
+^I ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1136: FILE: drivers/pps/pps.c:211:
+^I ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1138: FILE: drivers/pps/pps.c:213:
+^I ^Icase PPS_FETCH : {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1138: FILE: drivers/pps/pps.c:213:
+^I ^Icase PPS_FETCH : {$

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#1138: FILE: drivers/pps/pps.c:213:
+	 	case PPS_FETCH : {
 	 	               ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1148: FILE: drivers/pps/pps.c:223:
+			if ((nlpps->tsformat != PPS_TSFMT_TSPEC) != 0 ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nlpps->tsformat != PPS_TSFMT_TSPEC'
#1148: FILE: drivers/pps/pps.c:223:
+			if ((nlpps->tsformat != PPS_TSFMT_TSPEC) != 0 ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1152: FILE: drivers/pps/pps.c:227:
+^I^I ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1152: FILE: drivers/pps/pps.c:227:
+^I^I ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1154: FILE: drivers/pps/pps.c:229:
+^I^I ^I/* Manage the timeout */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1154: FILE: drivers/pps/pps.c:229:
+^I^I ^I/* Manage the timeout */$

CHECK:BRACES: braces {} should be used on all arms of this statement
#1155: FILE: drivers/pps/pps.c:230:
+			if (nlpps->timeout.tv_sec != -1) {
[...]
+			else
[...]

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1156: FILE: drivers/pps/pps.c:231:
+				timeout = nlpps->timeout.tv_sec*HZ;
 				                               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1157: FILE: drivers/pps/pps.c:232:
+				timeout += nlpps->timeout.tv_nsec/(1000000000/HZ);
 				                                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1157: FILE: drivers/pps/pps.c:232:
+				timeout += nlpps->timeout.tv_nsec/(1000000000/HZ);
 				                                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1161: FILE: drivers/pps/pps.c:236:
+^I^I  ^I^I^Iif (timeout <= 0) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1161: FILE: drivers/pps/pps.c:236:
+^I^I  ^I^I^Iif (timeout <= 0) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1167: FILE: drivers/pps/pps.c:242:
+^I^I ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1167: FILE: drivers/pps/pps.c:242:
+^I^I ^I}$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1168: FILE: drivers/pps/pps.c:243:
+		 	}
+			else

ERROR:CODE_INDENT: code indent should use tabs where possible
#1181: FILE: drivers/pps/pps.c:256:
+^I ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1181: FILE: drivers/pps/pps.c:256:
+^I ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1183: FILE: drivers/pps/pps.c:258:
+^I ^Icase PPS_KC_BIND : {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1183: FILE: drivers/pps/pps.c:258:
+^I ^Icase PPS_KC_BIND : {$

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#1183: FILE: drivers/pps/pps.c:258:
+	 	case PPS_KC_BIND : {
 	 	                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1189: FILE: drivers/pps/pps.c:264:
+^I ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1189: FILE: drivers/pps/pps.c:264:
+^I ^I}$

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#1191: FILE: drivers/pps/pps.c:266:
+		case PPS_FIND_SRC : {
 		                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1198: FILE: drivers/pps/pps.c:273:
+^I^I ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1198: FILE: drivers/pps/pps.c:273:
+^I^I ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1209: FILE: drivers/pps/pps.c:284:
+^I ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1209: FILE: drivers/pps/pps.c:284:
+^I ^I}$

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#1211: FILE: drivers/pps/pps.c:286:
+		case PPS_FIND_PATH : {
 		                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1218: FILE: drivers/pps/pps.c:293:
+^I^I ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1218: FILE: drivers/pps/pps.c:293:
+^I^I ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1229: FILE: drivers/pps/pps.c:304:
+^I ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1229: FILE: drivers/pps/pps.c:304:
+^I ^I}$

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#1231: FILE: drivers/pps/pps.c:306:
+		default : {
 		        ^

WARNING:TYPO_SPELLING: 'Unknow' may be misspelled - perhaps 'Unknown'?
#1232: FILE: drivers/pps/pps.c:307:
+			/* Unknow command */
 			   ^^^^^^

WARNING:TYPO_SPELLING: 'unknow' may be misspelled - perhaps 'unknown'?
#1233: FILE: drivers/pps/pps.c:308:
+			dbg("unknow command %d", nlpps->cmd);
 			     ^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1265: FILE: drivers/pps/pps.c:340:
+	nl_sk = netlink_kernel_create(NETLINK_PPSAPI, 0,
+					pps_nl_data_ready, THIS_MODULE);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!nl_sk"
#1266: FILE: drivers/pps/pps.c:341:
+	if (nl_sk == NULL) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1273: FILE: drivers/pps/pps.c:348:
+	memset(pps_source, 0, sizeof(struct pps_s)*PPS_MAX_SOURCES);
 	                                          ^

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#1283: FILE: drivers/pps/pps.c:358:
+	info("Software ver. %s - Copyright 2005-2007 Rodolfo Giometti <giometti@linux.it>", PPS_VERSION);

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#1287: FILE: drivers/pps/pps.c:362:
+pps_sysfs_register_error :
                          ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1306: FILE: drivers/pps/sysfs.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1323: FILE: drivers/pps/sysfs.c:18:
+ *   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1324: FILE: drivers/pps/sysfs.c:19:
+ *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1327: FILE: drivers/pps/sysfs.c:22:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1391: FILE: drivers/pps/sysfs.c:86:
+^I^I.mode = _mode, ^I^I^I^I^I^I\$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1421: FILE: drivers/pps/sysfs.c:116:
+void pps_sysfs_remove_source_entry(struct pps_source_info_s *info, int id) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info"
#1425: FILE: drivers/pps/sysfs.c:120:
+	if (info == NULL || info->dir == NULL || id >= PPS_MAX_SOURCES)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info->dir"
#1425: FILE: drivers/pps/sysfs.c:120:
+	if (info == NULL || info->dir == NULL || id >= PPS_MAX_SOURCES)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1430: FILE: drivers/pps/sysfs.c:125:
+		class_device_remove_file(&info->class_dev,
+					&pps_class_device_attributes[i]);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1435: FILE: drivers/pps/sysfs.c:130:
+int pps_sysfs_create_source_entry(struct pps_source_info_s *info, int id) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info"
#1440: FILE: drivers/pps/sysfs.c:135:
+	if (info == NULL || id >= PPS_MAX_SOURCES)

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1449: FILE: drivers/pps/sysfs.c:144:
+	strlcpy(info->class_dev.class_id, buf, KOBJ_NAME_LEN);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1460: FILE: drivers/pps/sysfs.c:155:
+	if (info->mode&PPS_CAPTUREASSERT) {
 	              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1462: FILE: drivers/pps/sysfs.c:157:
+		ret = class_device_create_file(&info->class_dev,
+					&pps_class_device_attributes[0]);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1467: FILE: drivers/pps/sysfs.c:162:
+	if (info->mode&PPS_CAPTURECLEAR) {
 	              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1469: FILE: drivers/pps/sysfs.c:164:
+		ret = class_device_create_file(&info->class_dev,
+					&pps_class_device_attributes[1]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1477: FILE: drivers/pps/sysfs.c:172:
+		ret = class_device_create_file(&info->class_dev,
+					&pps_class_device_attributes[i]);

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#1484: FILE: drivers/pps/sysfs.c:179:
+error_class_device_create_file :
                                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1487: FILE: drivers/pps/sysfs.c:182:
+		class_device_remove_file(&info->class_dev,
+					&pps_class_device_attributes[i]);

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#1492: FILE: drivers/pps/sysfs.c:187:
+error_class_device_register :
                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1556: FILE: drivers/serial/serial_core.c:657:
+	snprintf(state->pps_info.name, PPS_MAX_NAME_LEN, "%s%d",
+		drv->driver_name, port->line);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1558: FILE: drivers/serial/serial_core.c:659:
+	snprintf(state->pps_info.path, PPS_MAX_NAME_LEN, "/dev/%s%d",
+		drv->name, port->line);

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#1560: FILE: drivers/serial/serial_core.c:661:
+	state->pps_info.mode = PPS_CAPTUREBOTH | \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#1564: FILE: drivers/serial/serial_core.c:665:
+	ret = pps_register_source(&state->pps_info, PPS_CAPTUREBOTH | \

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1573: FILE: drivers/serial/serial_core.c:674:
+	info("PPS source #%d \"%s\" added to the system ",
+		port->pps_source, state->pps_info.path);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1583: FILE: drivers/serial/serial_core.c:684:
+	dbg("PPS source #%d \"%s\" removed from the system",
+	port->pps_source, state->pps_info.path);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1606: FILE: drivers/serial/serial_core.c:869:
+^I^Ielse^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1618: FILE: drivers/serial/serial_core.c:2167:
+ ^I * Add the PPS support for the current port.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1618: FILE: drivers/serial/serial_core.c:2167:
+ ^I * Add the PPS support for the current port.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1619: FILE: drivers/serial/serial_core.c:2168:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1619: FILE: drivers/serial/serial_core.c:2168:
+ ^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1630: FILE: drivers/serial/serial_core.c:2421:
+ ^I * Remove PPS support from the current port.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1630: FILE: drivers/serial/serial_core.c:2421:
+ ^I * Remove PPS support from the current port.$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1686: FILE: include/linux/parport.h:529:
+	dbg("parport_pc: PPS assert event at %lu on source #%d",
+		jiffies, port->pps_source);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1698: FILE: include/linux/pps.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1715: FILE: include/linux/pps.h:18:
+ *   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1716: FILE: include/linux/pps.h:19:
+ *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1719: FILE: include/linux/pps.h:22:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1728: FILE: include/linux/pps.h:31:
+#define dbg(format, arg...) printk(KERN_DEBUG "%s: " format "\n" , \

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#1728: FILE: include/linux/pps.h:31:
+#define dbg(format, arg...) printk(KERN_DEBUG "%s: " format "\n" , \
                                                                  ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1729: FILE: include/linux/pps.h:32:
+	KBUILD_MODNAME , ## arg)
 	               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1734: FILE: include/linux/pps.h:37:
+#define err(format, arg...) printk(KERN_ERR "%s: " format "\n" , \

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#1734: FILE: include/linux/pps.h:37:
+#define err(format, arg...) printk(KERN_ERR "%s: " format "\n" , \
                                                                ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1735: FILE: include/linux/pps.h:38:
+	KBUILD_MODNAME , ## arg)
 	               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1736: FILE: include/linux/pps.h:39:
+#define info(format, arg...) printk(KERN_INFO "%s: " format "\n" , \

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#1736: FILE: include/linux/pps.h:39:
+#define info(format, arg...) printk(KERN_INFO "%s: " format "\n" , \
                                                                  ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1737: FILE: include/linux/pps.h:40:
+	KBUILD_MODNAME , ## arg)
 	               ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1766: FILE: include/linux/pps.h:69:
+	volatile pps_seq_t assert_sequence;	/* PPS' assert event seq # */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1767: FILE: include/linux/pps.h:70:
+	volatile pps_seq_t clear_sequence;	/* PPS' clear event seq # */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1768: FILE: include/linux/pps.h:71:
+	volatile pps_timeu_t assert_tu;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1769: FILE: include/linux/pps.h:72:
+	volatile pps_timeu_t clear_tu;

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1782: FILE: include/linux/pps.h:85:
+static inline int pps_is_allocated(int source) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pps_source[source].info"
#1783: FILE: include/linux/pps.h:86:
+	return pps_source[source].info != NULL;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1790: FILE: include/linux/pps.h:93:
+extern int pps_register_source(struct pps_source_info_s *info, int default_params, int try_id);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1791: FILE: include/linux/pps.h:94:
+extern void pps_unregister_source(struct pps_source_info_s *info);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1792: FILE: include/linux/pps.h:95:
+extern void pps_event(int source, int event, void *data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1794: FILE: include/linux/pps.h:97:
+extern int pps_procfs_create_source_entry(struct pps_source_info_s *info, int id);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1795: FILE: include/linux/pps.h:98:
+extern void pps_procfs_remove_source_entry(struct pps_source_info_s *info, int id);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1796: FILE: include/linux/pps.h:99:
+extern int pps_procfs_register(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1797: FILE: include/linux/pps.h:100:
+extern void pps_procfs_unregister(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1799: FILE: include/linux/pps.h:102:
+extern int pps_sysfs_create_source_entry(struct pps_source_info_s *info, int id);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1800: FILE: include/linux/pps.h:103:
+extern void pps_sysfs_remove_source_entry(struct pps_source_info_s *info, int id);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1801: FILE: include/linux/pps.h:104:
+extern int pps_sysfs_register(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1802: FILE: include/linux/pps.h:105:
+extern void pps_sysfs_unregister(void);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1836: FILE: include/linux/serial_core.h:307:
+        struct pps_source_info_s pps_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1836: FILE: include/linux/serial_core.h:307:
+        struct pps_source_info_s pps_info;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1856: FILE: include/linux/serial_core.h:479:
+			dbg("serial8250: PPS assert event at %lu on source #%d",
+				jiffies, up->port.pps_source);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1858: FILE: include/linux/serial_core.h:481:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#1858: FILE: include/linux/serial_core.h:481:
+		else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1861: FILE: include/linux/serial_core.h:484:
+			dbg("serial8250: PPS clear event at %lu on source #%d",
+				jiffies, up->port.pps_source);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1877: FILE: include/linux/timepps.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1894: FILE: include/linux/timepps.h:18:
+ *   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1895: FILE: include/linux/timepps.h:19:
+ *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1903: FILE: include/linux/timepps.h:27:
+ * ^I   based on code by Reg Clemens <reg@dwf.com>$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1920: FILE: include/linux/timepps.h:44:
+ * means the bit is set.  */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1934: FILE: include/linux/timepps.h:58:
+typedef struct pps_handle_s {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1939: FILE: include/linux/timepps.h:63:
+typedef unsigned long pps_seq_t;	/* sequence number */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1941: FILE: include/linux/timepps.h:65:
+typedef struct ntp_fp {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1946: FILE: include/linux/timepps.h:70:
+typedef union pps_timeu {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1952: FILE: include/linux/timepps.h:76:
+typedef struct pps_info {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1966: FILE: include/linux/timepps.h:90:
+typedef struct pps_params {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1991: FILE: include/linux/timepps.h:115:
+                                           future use." */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1991: FILE: include/linux/timepps.h:115:
+#define PPS_CANPOLL		0x200	/* "This bit is reserved for
+                                           future use." */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1991: FILE: include/linux/timepps.h:115:
+                                           future use." */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2006: FILE: include/linux/timepps.h:130:
+#define PPS_KC_HARDPPS_PLL	1	/* hardpps() constrained to
+					   use a phase-locked loop */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2006: FILE: include/linux/timepps.h:130:
+					   use a phase-locked loop */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2008: FILE: include/linux/timepps.h:132:
+#define PPS_KC_HARDPPS_FLL	2	/* hardpps() constrained to
+					   use a frequency-locked loop */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2008: FILE: include/linux/timepps.h:132:
+					   use a frequency-locked loop */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2026: FILE: include/linux/timepps.h:150:
+};
+#define PPSAPI_MAX_PAYLOAD	sizeof(struct pps_netlink_msg)

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#2046: FILE: include/linux/timepps.h:170:
+	pps_params_t	parm;		  /* PPS parameters */
 	            	^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2060: FILE: include/linux/timepps.h:184:
+ * Bits set in `*obligatory' must be set.  Returned bits may be set. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2061: FILE: include/linux/timepps.h:185:
+extern int pps_allowed_mode(const struct pps *pps, mode_t fmode, int *obligatory);

CHECK:SPACING: No space is necessary after a cast
#2092: FILE: include/linux/timepps.h:216:
+	nlh = (struct nlmsghdr *) alloca(NLMSG_SPACE(PPSAPI_MAX_PAYLOAD));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!nlh"
#2093: FILE: include/linux/timepps.h:217:
+	if (nlh == NULL)

CHECK:SPACING: No space is necessary after a cast
#2102: FILE: include/linux/timepps.h:226:
+	iov.iov_base = (void *) nlh;

CHECK:SPACING: No space is necessary after a cast
#2104: FILE: include/linux/timepps.h:228:
+	msg.msg_name = (void *) &dest_addr;

WARNING:INLINE: plain inline is preferred over __inline
#2133: FILE: include/linux/timepps.h:257:
+static __inline int time_pps_create(int source, pps_handle_t *handle)

CHECK:SPACING: No space is necessary after a cast
#2151: FILE: include/linux/timepps.h:275:
+	ret = bind(handle->socket, (struct sockaddr *) &src_addr, sizeof(src_addr));

WARNING:INLINE: plain inline is preferred over __inline
#2171: FILE: include/linux/timepps.h:295:
+static __inline int time_pps_destroy(pps_handle_t handle)

WARNING:INLINE: plain inline is preferred over __inline
#2191: FILE: include/linux/timepps.h:315:
+static __inline int time_pps_setparams(pps_handle_t handle, const pps_params_t *ppsparams)

WARNING:INLINE: plain inline is preferred over __inline
#2208: FILE: include/linux/timepps.h:332:
+static __inline int time_pps_getparams(pps_handle_t handle, pps_params_t *ppsparams)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2222: FILE: include/linux/timepps.h:346:
+^I*ppsparams = nlpps.params; $

WARNING:INLINE: plain inline is preferred over __inline
#2228: FILE: include/linux/timepps.h:352:
+static __inline int time_pps_getcap(pps_handle_t handle, int *mode)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2242: FILE: include/linux/timepps.h:366:
+^I*mode = nlpps.mode; $

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#2248: FILE: include/linux/timepps.h:372:
+static __inline int time_pps_fetch(pps_handle_t handle, const int tsformat, pps_info_t *ppsinfobuf, const struct timespec *timeout)

WARNING:INLINE: plain inline is preferred over __inline
#2248: FILE: include/linux/timepps.h:372:
+static __inline int time_pps_fetch(pps_handle_t handle, const int tsformat, pps_info_t *ppsinfobuf, const struct timespec *timeout)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2261: FILE: include/linux/timepps.h:385:
+		nlpps.timeout.tv_sec = nlpps.timeout.tv_nsec = -1;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2268: FILE: include/linux/timepps.h:392:
+^I*ppsinfobuf = nlpps.info; $

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#2274: FILE: include/linux/timepps.h:398:
+static __inline int time_pps_kcbind(pps_handle_t handle, const int kernel_consumer, const int edge, const int tsformat)

WARNING:INLINE: plain inline is preferred over __inline
#2274: FILE: include/linux/timepps.h:398:
+static __inline int time_pps_kcbind(pps_handle_t handle, const int kernel_consumer, const int edge, const int tsformat)

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#2295: FILE: include/linux/timepps.h:419:
+static __inline int time_pps_findsource(int index, char *path, int pathlen, char *idstring, int idlen)

WARNING:INLINE: plain inline is preferred over __inline
#2295: FILE: include/linux/timepps.h:419:
+static __inline int time_pps_findsource(int index, char *path, int pathlen, char *idstring, int idlen)

CHECK:SPACING: No space is necessary after a cast
#2314: FILE: include/linux/timepps.h:438:
+	ret = bind(sock, (struct sockaddr *) &src_addr, sizeof(src_addr));

WARNING:INLINE: plain inline is preferred over __inline
#2337: FILE: include/linux/timepps.h:461:
+static __inline void time_pps_readlink(char *link, int linklen, char *path, int pathlen)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2341: FILE: include/linux/timepps.h:465:
+	i = readlink(link, path, pathlen-1);
 	                                ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#2351: FILE: include/linux/timepps.h:475:
+	return;
+}

WARNING:INLINE: plain inline is preferred over __inline
#2353: FILE: include/linux/timepps.h:477:
+static __inline int time_pps_findpath(char *path, int pathlen, char *idstring, int idlen)

CHECK:SPACING: No space is necessary after a cast
#2372: FILE: include/linux/timepps.h:496:
+	ret = bind(sock, (struct sockaddr *) &src_addr, sizeof(src_addr));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000465943.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 81 errors, 93 warnings, 103 checks, 2105 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000465943.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
