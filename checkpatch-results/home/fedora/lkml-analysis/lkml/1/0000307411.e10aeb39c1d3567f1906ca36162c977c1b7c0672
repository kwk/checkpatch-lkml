WARNING:TYPO_SPELLING: 'build-in' may be misspelled - perhaps 'built-in'?
#31: 
truly random data. The random data source is the build-in hardware 
                                                 ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: braces {} should be used on all arms of this statement
#127: FILE: drivers/s390/crypto/zcrypt_api.c:465:
+		if (try_module_get(zdev->ap_dev->drv->driver.owner)) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#132: FILE: drivers/s390/crypto/zcrypt_api.c:470:
+		} else

CHECK:SPACING: No space is necessary after a cast
#166: FILE: drivers/s390/crypto/zcrypt_api.c:1111:
+		rc = zcrypt_rng((char *) zcrypt_rng_buffer);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SIZEOF_PARENTHESIS: sizeof *data should be sizeof(*data)
#169: FILE: drivers/s390/crypto/zcrypt_api.c:1114:
+		zcrypt_rng_buffer_index = rc / sizeof *data;

WARNING:SIZEOF_PARENTHESIS: sizeof *data should be sizeof(*data)
#172: FILE: drivers/s390/crypto/zcrypt_api.c:1117:
+	return sizeof *data;

CHECK:BRACES: braces {} should be used on all arms of this statement
#185: FILE: drivers/s390/crypto/zcrypt_api.c:1130:
+	if (zcrypt_rng_device_count == 0) {
[...]
+	} else
[...]

CHECK:SPACING: No space is necessary after a cast
#186: FILE: drivers/s390/crypto/zcrypt_api.c:1131:
+		zcrypt_rng_buffer = (u32 *) get_zeroed_page(GFP_KERNEL);

CHECK:BRACES: Unbalanced braces around else statement
#196: FILE: drivers/s390/crypto/zcrypt_api.c:1141:
+	} else

CHECK:SPACING: No space is necessary after a cast
#202: FILE: drivers/s390/crypto/zcrypt_api.c:1147:
+	free_page((unsigned long) zcrypt_rng_buffer);

CHECK:SPACING: No space is necessary after a cast
#214: FILE: drivers/s390/crypto/zcrypt_api.c:1159:
+		free_page((unsigned long) zcrypt_rng_buffer);

WARNING:TYPO_SPELLING: 'carefull' may be misspelled - perhaps 'careful'?
#232: FILE: drivers/s390/crypto/zcrypt_api.h:105:
+ * and stored in a page. Be carefull when increasing this buffer due to size
                             ^^^^^^^^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct zcrypt_device *' should also have an identifier name
#244: FILE: drivers/s390/crypto/zcrypt_api.h:117:
+	long (*rng)(struct zcrypt_device *, char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#244: FILE: drivers/s390/crypto/zcrypt_api.h:117:
+	long (*rng)(struct zcrypt_device *, char *);

CHECK:CAMELCASE: Avoid CamelCase: <rng_type6CPRB_msgX>
#261: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:364:
+static void rng_type6CPRB_msgX(struct ap_device *ap_dev,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#263: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:366:
+			       unsigned random_number_length)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#273: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:376:
+	} __attribute__((packed)) *msg = ap_msg->message;

CHECK:CAMELCASE: Avoid CamelCase: <ToCardLen1>
#279: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:382:
+		.ToCardLen1	= sizeof *msg - sizeof(msg->hdr),

WARNING:SIZEOF_PARENTHESIS: sizeof *msg should be sizeof(*msg)
#279: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:382:
+		.ToCardLen1	= sizeof *msg - sizeof(msg->hdr),

CHECK:CAMELCASE: Avoid CamelCase: <FromCardLen1>
#280: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:383:
+		.FromCardLen1	= sizeof *msg - sizeof(msg->hdr),

WARNING:SIZEOF_PARENTHESIS: sizeof *msg should be sizeof(*msg)
#280: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:383:
+		.FromCardLen1	= sizeof *msg - sizeof(msg->hdr),

WARNING:SIZEOF_PARENTHESIS: sizeof *msg should be sizeof(*msg)
#286: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:389:
+		.req_parml	= sizeof *msg - sizeof(msg->hdr) -

WARNING:SIZEOF_PARENTHESIS: sizeof *msg should be sizeof(*msg)
#288: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:391:
+		.rpl_msgbl	= sizeof *msg - sizeof(msg->hdr),

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#292: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:395:
+	msg->hdr.FromCardLen2 = random_number_length,
+	msg->cprbx = static_cprbx;

CHECK:CAMELCASE: Avoid CamelCase: <FromCardLen2>
#292: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:395:
+	msg->hdr.FromCardLen2 = random_number_length,

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#294: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:397:
+	msg->cprbx.rpl_datal = random_number_length,
+	msg->cprbx.domain = AP_QID_QUEUE(ap_dev->qid);

WARNING:SIZEOF_PARENTHESIS: sizeof *msg should be sizeof(*msg)
#301: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:404:
+	ap_msg->length = sizeof *msg;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#313: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:562:
+static int convert_type86_rng(struct zcrypt_device *zdev,
+			  struct ap_message *reply,

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#320: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:569:
+	} __attribute__((packed)) *msg = reply->message;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#340: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:640:
+static int convert_response_rng(struct zcrypt_device *zdev,
+				 struct ap_message *reply,

CHECK:SPACING: No space is necessary after a cast
#357: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:657:
+		       *(unsigned int *) reply->message,

CHECK:SPACING: No space is necessary after a cast
#358: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:658:
+		       *(unsigned int *) (reply->message+4));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#358: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:658:
+		       *(unsigned int *) (reply->message+4));
 		                                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#379: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:841:
+static long zcrypt_pcixcc_rng(struct zcrypt_device *zdev,
+				    char *buffer)

CHECK:SPACING: No space is necessary after a cast
#390: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:852:
+	ap_msg.psmid = (((unsigned long long) current->pid) << 32) +

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#442: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:1013:
+	} __attribute__((packed)) *reply;

CHECK:SPACING: No space is necessary after a cast
#445: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:1016:
+	ap_msg.message = (void *) get_zeroed_page(GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#475: FILE: drivers/s390/crypto/zcrypt_pcixcc.c:1046:
+	free_page((unsigned long) ap_msg.message);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000307411.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 17 warnings, 21 checks, 430 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000307411.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
