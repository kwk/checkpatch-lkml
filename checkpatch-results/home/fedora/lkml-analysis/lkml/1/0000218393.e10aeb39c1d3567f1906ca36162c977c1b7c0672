WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#77: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#124: FILE: drivers/staging/me4000/me4000.c:1:
+/* Device driver for Meilhaus ME-4000 board family.

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#140: FILE: drivers/staging/me4000/me4000.c:17:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#141: FILE: drivers/staging/me4000/me4000.c:18:
+ *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#151: FILE: drivers/staging/me4000/me4000.c:28:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#153: FILE: drivers/staging/me4000/me4000.c:30:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/pgtable.h> instead of <asm/pgtable.h>
#164: FILE: drivers/staging/me4000/me4000.c:41:
+#include <asm/pgtable.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#165: FILE: drivers/staging/me4000/me4000.c:42:
+#include <asm/uaccess.h>

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: drivers/staging/me4000/me4000.c:55:
+    ("Device Driver Module for Meilhaus ME-4000 boards version 1.0.5");$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#186: FILE: drivers/staging/me4000/me4000.c:63:
+static int me4000_ao_major_driver_no = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#187: FILE: drivers/staging/me4000/me4000.c:64:
+static int me4000_ai_major_driver_no = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#188: FILE: drivers/staging/me4000/me4000.c:65:
+static int me4000_dio_major_driver_no = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#189: FILE: drivers/staging/me4000/me4000.c:66:
+static int me4000_cnt_major_driver_no = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#190: FILE: drivers/staging/me4000/me4000.c:67:
+static int me4000_ext_int_major_driver_no = 0;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#214: FILE: drivers/staging/me4000/me4000.c:91:
+/*-----------------------------------------------------------------------------
+  Module stuff

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#215: FILE: drivers/staging/me4000/me4000.c:92:
+  ---------------------------------------------------------------------------*/

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#216: FILE: drivers/staging/me4000/me4000.c:93:
+int init_module(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#217: FILE: drivers/staging/me4000/me4000.c:94:
+void cleanup_module(void);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#220: FILE: drivers/staging/me4000/me4000.c:97:
+/*-----------------------------------------------------------------------------
+  Board detection and initialization

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#221: FILE: drivers/staging/me4000/me4000.c:98:
+  ---------------------------------------------------------------------------*/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#227: FILE: drivers/staging/me4000/me4000.c:104:
+static int get_registers(struct pci_dev *dev, me4000_info_t * info);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#228: FILE: drivers/staging/me4000/me4000.c:105:
+static int init_board_info(struct pci_dev *dev, me4000_info_t * board_info);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#229: FILE: drivers/staging/me4000/me4000.c:106:
+static int alloc_ao_contexts(me4000_info_t * info);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#230: FILE: drivers/staging/me4000/me4000.c:107:
+static void release_ao_contexts(me4000_info_t * board_info);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#231: FILE: drivers/staging/me4000/me4000.c:108:
+static int alloc_ai_context(me4000_info_t * info);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#232: FILE: drivers/staging/me4000/me4000.c:109:
+static int alloc_dio_context(me4000_info_t * info);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#233: FILE: drivers/staging/me4000/me4000.c:110:
+static int alloc_cnt_context(me4000_info_t * info);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#234: FILE: drivers/staging/me4000/me4000.c:111:
+static int alloc_ext_int_context(me4000_info_t * info);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#237: FILE: drivers/staging/me4000/me4000.c:114:
+/*-----------------------------------------------------------------------------
+  Stuff used by all device parts

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#238: FILE: drivers/staging/me4000/me4000.c:115:
+  ---------------------------------------------------------------------------*/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#243: FILE: drivers/staging/me4000/me4000.c:120:
+				me4000_info_t * board_info);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#247: FILE: drivers/staging/me4000/me4000.c:124:
+/*-----------------------------------------------------------------------------
+  Analog output stuff

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#248: FILE: drivers/staging/me4000/me4000.c:125:
+  ---------------------------------------------------------------------------*/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#275: FILE: drivers/staging/me4000/me4000.c:152:
+static int me4000_ao_prepare(me4000_ao_context_t * ao_info);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#276: FILE: drivers/staging/me4000/me4000.c:153:
+static int me4000_ao_reset(me4000_ao_context_t * ao_info);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#281: FILE: drivers/staging/me4000/me4000.c:158:
+static int me4000_ao_simultaneous_ex_trig(me4000_ao_context_t * ao_context);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#282: FILE: drivers/staging/me4000/me4000.c:159:
+static int me4000_ao_simultaneous_sw(me4000_ao_context_t * ao_context);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#283: FILE: drivers/staging/me4000/me4000.c:160:
+static int me4000_ao_simultaneous_disable(me4000_ao_context_t * ao_context);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#284: FILE: drivers/staging/me4000/me4000.c:161:
+static int me4000_ao_simultaneous_update(me4000_ao_channel_list_t * channels,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#285: FILE: drivers/staging/me4000/me4000.c:162:
+					 me4000_ao_context_t * ao_context);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#287: FILE: drivers/staging/me4000/me4000.c:164:
+static int me4000_ao_synchronous_ex_trig(me4000_ao_context_t * ao_context);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#288: FILE: drivers/staging/me4000/me4000.c:165:
+static int me4000_ao_synchronous_sw(me4000_ao_context_t * ao_context);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#289: FILE: drivers/staging/me4000/me4000.c:166:
+static int me4000_ao_synchronous_disable(me4000_ao_context_t * ao_context);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#292: FILE: drivers/staging/me4000/me4000.c:169:
+				     me4000_ao_context_t * ao_context);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#294: FILE: drivers/staging/me4000/me4000.c:171:
+				     me4000_ao_context_t * ao_context);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#297: FILE: drivers/staging/me4000/me4000.c:174:
+/*-----------------------------------------------------------------------------
+  Analog input stuff

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#298: FILE: drivers/staging/me4000/me4000.c:175:
+  ---------------------------------------------------------------------------*/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#312: FILE: drivers/staging/me4000/me4000.c:189:
+static int me4000_ai_prepare(me4000_ai_context_t * ai_context);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#313: FILE: drivers/staging/me4000/me4000.c:190:
+static int me4000_ai_reset(me4000_ai_context_t * ai_context);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#323: FILE: drivers/staging/me4000/me4000.c:200:
+static int me4000_ai_sc_setup(me4000_ai_sc_t * arg,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#324: FILE: drivers/staging/me4000/me4000.c:201:
+			      me4000_ai_context_t * ai_context);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#325: FILE: drivers/staging/me4000/me4000.c:202:
+static int me4000_ai_offset_enable(me4000_ai_context_t * ai_context);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#326: FILE: drivers/staging/me4000/me4000.c:203:
+static int me4000_ai_offset_disable(me4000_ai_context_t * ai_context);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#327: FILE: drivers/staging/me4000/me4000.c:204:
+static int me4000_ai_fullscale_enable(me4000_ai_context_t * ai_context);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#328: FILE: drivers/staging/me4000/me4000.c:205:
+static int me4000_ai_fullscale_disable(me4000_ai_context_t * ai_context);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#329: FILE: drivers/staging/me4000/me4000.c:206:
+static int me4000_ai_fsm_state(int *arg, me4000_ai_context_t * ai_context);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#331: FILE: drivers/staging/me4000/me4000.c:208:
+				      me4000_ai_context_t * ai_context);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#334: FILE: drivers/staging/me4000/me4000.c:211:
+/*-----------------------------------------------------------------------------
+  EEPROM stuff

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#335: FILE: drivers/staging/me4000/me4000.c:212:
+  ---------------------------------------------------------------------------*/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#336: FILE: drivers/staging/me4000/me4000.c:213:
+static int me4000_eeprom_read(me4000_eeprom_t * arg,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#337: FILE: drivers/staging/me4000/me4000.c:214:
+			      me4000_ai_context_t * ai_context);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#338: FILE: drivers/staging/me4000/me4000.c:215:
+static int me4000_eeprom_write(me4000_eeprom_t * arg,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#339: FILE: drivers/staging/me4000/me4000.c:216:
+			       me4000_ai_context_t * ai_context);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#340: FILE: drivers/staging/me4000/me4000.c:217:
+static unsigned short eeprom_read_cmd(me4000_ai_context_t * ai_context,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#342: FILE: drivers/staging/me4000/me4000.c:219:
+static int eeprom_write_cmd(me4000_ai_context_t * ai_context, unsigned long cmd,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#346: FILE: drivers/staging/me4000/me4000.c:223:
+/*-----------------------------------------------------------------------------
+  Digital I/O stuff

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#347: FILE: drivers/staging/me4000/me4000.c:224:
+  ---------------------------------------------------------------------------*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#356: FILE: drivers/staging/me4000/me4000.c:233:
+/*-----------------------------------------------------------------------------
+  Counter stuff

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#357: FILE: drivers/staging/me4000/me4000.c:234:
+  ---------------------------------------------------------------------------*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#366: FILE: drivers/staging/me4000/me4000.c:243:
+/*-----------------------------------------------------------------------------
+  External interrupt routines

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#367: FILE: drivers/staging/me4000/me4000.c:244:
+  ---------------------------------------------------------------------------*/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#373: FILE: drivers/staging/me4000/me4000.c:250:
+				me4000_ext_int_context_t * ext_int_context);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#377: FILE: drivers/staging/me4000/me4000.c:254:
+/*-----------------------------------------------------------------------------
+  The interrupt service routines

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#378: FILE: drivers/staging/me4000/me4000.c:255:
+  ---------------------------------------------------------------------------*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#384: FILE: drivers/staging/me4000/me4000.c:261:
+/*-----------------------------------------------------------------------------
+  Inline functions

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#385: FILE: drivers/staging/me4000/me4000.c:262:
+  ---------------------------------------------------------------------------*/

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#386: FILE: drivers/staging/me4000/me4000.c:263:
+static int inline me4000_buf_count(me4000_circ_buf_t, int);

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#387: FILE: drivers/staging/me4000/me4000.c:264:
+static int inline me4000_buf_space(me4000_circ_buf_t, int);

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#388: FILE: drivers/staging/me4000/me4000.c:265:
+static int inline me4000_space_to_end(me4000_circ_buf_t, int);

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#389: FILE: drivers/staging/me4000/me4000.c:266:
+static int inline me4000_values_to_end(me4000_circ_buf_t, int);

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#391: FILE: drivers/staging/me4000/me4000.c:268:
+static void inline me4000_outb(unsigned char value, unsigned long port);

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#392: FILE: drivers/staging/me4000/me4000.c:269:
+static void inline me4000_outl(unsigned long value, unsigned long port);

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#393: FILE: drivers/staging/me4000/me4000.c:270:
+static unsigned long inline me4000_inl(unsigned long port);

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#394: FILE: drivers/staging/me4000/me4000.c:271:
+static unsigned char inline me4000_inb(unsigned long port);

WARNING:LINE_SPACING: Missing a blank line after declarations
#410: FILE: drivers/staging/me4000/me4000.c:287:
+	int n;
+	end = size - buf.tail;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#440: FILE: drivers/staging/me4000/me4000.c:317:
+	unsigned long value;
+	value = inl(port);

WARNING:LINE_SPACING: Missing a blank line after declarations
#448: FILE: drivers/staging/me4000/me4000.c:325:
+	unsigned char value;
+	value = inb(port);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#459: FILE: drivers/staging/me4000/me4000.c:336:
+static struct file_operations me4000_ao_fops_sing = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:INDENTED_LABEL: labels should not be indented
#460: FILE: drivers/staging/me4000/me4000.c:337:
+      owner:THIS_MODULE,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#461: FILE: drivers/staging/me4000/me4000.c:338:
+      write:me4000_ao_write_sing,
            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#461: FILE: drivers/staging/me4000/me4000.c:338:
+      write:me4000_ao_write_sing,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#462: FILE: drivers/staging/me4000/me4000.c:339:
+      ioctl:me4000_ao_ioctl_sing,
            ^

WARNING:INDENTED_LABEL: labels should not be indented
#462: FILE: drivers/staging/me4000/me4000.c:339:
+      ioctl:me4000_ao_ioctl_sing,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#463: FILE: drivers/staging/me4000/me4000.c:340:
+      open:me4000_open,
           ^

WARNING:INDENTED_LABEL: labels should not be indented
#463: FILE: drivers/staging/me4000/me4000.c:340:
+      open:me4000_open,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#464: FILE: drivers/staging/me4000/me4000.c:341:
+      release:me4000_release,
              ^

WARNING:INDENTED_LABEL: labels should not be indented
#464: FILE: drivers/staging/me4000/me4000.c:341:
+      release:me4000_release,

WARNING:CONST_STRUCT: struct file_operations should normally be const
#467: FILE: drivers/staging/me4000/me4000.c:344:
+static struct file_operations me4000_ao_fops_wrap = {

WARNING:INDENTED_LABEL: labels should not be indented
#468: FILE: drivers/staging/me4000/me4000.c:345:
+      owner:THIS_MODULE,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#469: FILE: drivers/staging/me4000/me4000.c:346:
+      write:me4000_ao_write_wrap,
            ^

WARNING:INDENTED_LABEL: labels should not be indented
#469: FILE: drivers/staging/me4000/me4000.c:346:
+      write:me4000_ao_write_wrap,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#470: FILE: drivers/staging/me4000/me4000.c:347:
+      ioctl:me4000_ao_ioctl_wrap,
            ^

WARNING:INDENTED_LABEL: labels should not be indented
#470: FILE: drivers/staging/me4000/me4000.c:347:
+      ioctl:me4000_ao_ioctl_wrap,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#471: FILE: drivers/staging/me4000/me4000.c:348:
+      open:me4000_open,
           ^

WARNING:INDENTED_LABEL: labels should not be indented
#471: FILE: drivers/staging/me4000/me4000.c:348:
+      open:me4000_open,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#472: FILE: drivers/staging/me4000/me4000.c:349:
+      release:me4000_release,
              ^

WARNING:INDENTED_LABEL: labels should not be indented
#472: FILE: drivers/staging/me4000/me4000.c:349:
+      release:me4000_release,

WARNING:CONST_STRUCT: struct file_operations should normally be const
#475: FILE: drivers/staging/me4000/me4000.c:352:
+static struct file_operations me4000_ao_fops_cont = {

WARNING:INDENTED_LABEL: labels should not be indented
#476: FILE: drivers/staging/me4000/me4000.c:353:
+      owner:THIS_MODULE,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#477: FILE: drivers/staging/me4000/me4000.c:354:
+      write:me4000_ao_write_cont,
            ^

WARNING:INDENTED_LABEL: labels should not be indented
#477: FILE: drivers/staging/me4000/me4000.c:354:
+      write:me4000_ao_write_cont,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#478: FILE: drivers/staging/me4000/me4000.c:355:
+      poll:me4000_ao_poll_cont,
           ^

WARNING:INDENTED_LABEL: labels should not be indented
#478: FILE: drivers/staging/me4000/me4000.c:355:
+      poll:me4000_ao_poll_cont,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#479: FILE: drivers/staging/me4000/me4000.c:356:
+      ioctl:me4000_ao_ioctl_cont,
            ^

WARNING:INDENTED_LABEL: labels should not be indented
#479: FILE: drivers/staging/me4000/me4000.c:356:
+      ioctl:me4000_ao_ioctl_cont,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#480: FILE: drivers/staging/me4000/me4000.c:357:
+      open:me4000_open,
           ^

WARNING:INDENTED_LABEL: labels should not be indented
#480: FILE: drivers/staging/me4000/me4000.c:357:
+      open:me4000_open,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#481: FILE: drivers/staging/me4000/me4000.c:358:
+      release:me4000_release,
              ^

WARNING:INDENTED_LABEL: labels should not be indented
#481: FILE: drivers/staging/me4000/me4000.c:358:
+      release:me4000_release,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#482: FILE: drivers/staging/me4000/me4000.c:359:
+      fsync:me4000_ao_fsync_cont,
            ^

WARNING:INDENTED_LABEL: labels should not be indented
#482: FILE: drivers/staging/me4000/me4000.c:359:
+      fsync:me4000_ao_fsync_cont,

WARNING:CONST_STRUCT: struct file_operations should normally be const
#485: FILE: drivers/staging/me4000/me4000.c:362:
+static struct file_operations me4000_ai_fops_sing = {

WARNING:INDENTED_LABEL: labels should not be indented
#486: FILE: drivers/staging/me4000/me4000.c:363:
+      owner:THIS_MODULE,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#487: FILE: drivers/staging/me4000/me4000.c:364:
+      ioctl:me4000_ai_ioctl_sing,
            ^

WARNING:INDENTED_LABEL: labels should not be indented
#487: FILE: drivers/staging/me4000/me4000.c:364:
+      ioctl:me4000_ai_ioctl_sing,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#488: FILE: drivers/staging/me4000/me4000.c:365:
+      open:me4000_open,
           ^

WARNING:INDENTED_LABEL: labels should not be indented
#488: FILE: drivers/staging/me4000/me4000.c:365:
+      open:me4000_open,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#489: FILE: drivers/staging/me4000/me4000.c:366:
+      release:me4000_release,
              ^

WARNING:INDENTED_LABEL: labels should not be indented
#489: FILE: drivers/staging/me4000/me4000.c:366:
+      release:me4000_release,

WARNING:CONST_STRUCT: struct file_operations should normally be const
#492: FILE: drivers/staging/me4000/me4000.c:369:
+static struct file_operations me4000_ai_fops_cont_sw = {

WARNING:INDENTED_LABEL: labels should not be indented
#493: FILE: drivers/staging/me4000/me4000.c:370:
+      owner:THIS_MODULE,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#494: FILE: drivers/staging/me4000/me4000.c:371:
+      read:me4000_ai_read,
           ^

WARNING:INDENTED_LABEL: labels should not be indented
#494: FILE: drivers/staging/me4000/me4000.c:371:
+      read:me4000_ai_read,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#495: FILE: drivers/staging/me4000/me4000.c:372:
+      poll:me4000_ai_poll,
           ^

WARNING:INDENTED_LABEL: labels should not be indented
#495: FILE: drivers/staging/me4000/me4000.c:372:
+      poll:me4000_ai_poll,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#496: FILE: drivers/staging/me4000/me4000.c:373:
+      ioctl:me4000_ai_ioctl_sw,
            ^

WARNING:INDENTED_LABEL: labels should not be indented
#496: FILE: drivers/staging/me4000/me4000.c:373:
+      ioctl:me4000_ai_ioctl_sw,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#497: FILE: drivers/staging/me4000/me4000.c:374:
+      open:me4000_open,
           ^

WARNING:INDENTED_LABEL: labels should not be indented
#497: FILE: drivers/staging/me4000/me4000.c:374:
+      open:me4000_open,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#498: FILE: drivers/staging/me4000/me4000.c:375:
+      release:me4000_release,
              ^

WARNING:INDENTED_LABEL: labels should not be indented
#498: FILE: drivers/staging/me4000/me4000.c:375:
+      release:me4000_release,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#499: FILE: drivers/staging/me4000/me4000.c:376:
+      fasync:me4000_ai_fasync,
             ^

WARNING:INDENTED_LABEL: labels should not be indented
#499: FILE: drivers/staging/me4000/me4000.c:376:
+      fasync:me4000_ai_fasync,

WARNING:CONST_STRUCT: struct file_operations should normally be const
#502: FILE: drivers/staging/me4000/me4000.c:379:
+static struct file_operations me4000_ai_fops_cont_et = {

WARNING:INDENTED_LABEL: labels should not be indented
#503: FILE: drivers/staging/me4000/me4000.c:380:
+      owner:THIS_MODULE,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#504: FILE: drivers/staging/me4000/me4000.c:381:
+      read:me4000_ai_read,
           ^

WARNING:INDENTED_LABEL: labels should not be indented
#504: FILE: drivers/staging/me4000/me4000.c:381:
+      read:me4000_ai_read,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#505: FILE: drivers/staging/me4000/me4000.c:382:
+      poll:me4000_ai_poll,
           ^

WARNING:INDENTED_LABEL: labels should not be indented
#505: FILE: drivers/staging/me4000/me4000.c:382:
+      poll:me4000_ai_poll,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#506: FILE: drivers/staging/me4000/me4000.c:383:
+      ioctl:me4000_ai_ioctl_ext,
            ^

WARNING:INDENTED_LABEL: labels should not be indented
#506: FILE: drivers/staging/me4000/me4000.c:383:
+      ioctl:me4000_ai_ioctl_ext,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#507: FILE: drivers/staging/me4000/me4000.c:384:
+      open:me4000_open,
           ^

WARNING:INDENTED_LABEL: labels should not be indented
#507: FILE: drivers/staging/me4000/me4000.c:384:
+      open:me4000_open,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#508: FILE: drivers/staging/me4000/me4000.c:385:
+      release:me4000_release,
              ^

WARNING:INDENTED_LABEL: labels should not be indented
#508: FILE: drivers/staging/me4000/me4000.c:385:
+      release:me4000_release,

WARNING:CONST_STRUCT: struct file_operations should normally be const
#511: FILE: drivers/staging/me4000/me4000.c:388:
+static struct file_operations me4000_ai_fops_cont_et_value = {

WARNING:INDENTED_LABEL: labels should not be indented
#512: FILE: drivers/staging/me4000/me4000.c:389:
+      owner:THIS_MODULE,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#513: FILE: drivers/staging/me4000/me4000.c:390:
+      read:me4000_ai_read,
           ^

WARNING:INDENTED_LABEL: labels should not be indented
#513: FILE: drivers/staging/me4000/me4000.c:390:
+      read:me4000_ai_read,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#514: FILE: drivers/staging/me4000/me4000.c:391:
+      poll:me4000_ai_poll,
           ^

WARNING:INDENTED_LABEL: labels should not be indented
#514: FILE: drivers/staging/me4000/me4000.c:391:
+      poll:me4000_ai_poll,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#515: FILE: drivers/staging/me4000/me4000.c:392:
+      ioctl:me4000_ai_ioctl_ext,
            ^

WARNING:INDENTED_LABEL: labels should not be indented
#515: FILE: drivers/staging/me4000/me4000.c:392:
+      ioctl:me4000_ai_ioctl_ext,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#516: FILE: drivers/staging/me4000/me4000.c:393:
+      open:me4000_open,
           ^

WARNING:INDENTED_LABEL: labels should not be indented
#516: FILE: drivers/staging/me4000/me4000.c:393:
+      open:me4000_open,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#517: FILE: drivers/staging/me4000/me4000.c:394:
+      release:me4000_release,
              ^

WARNING:INDENTED_LABEL: labels should not be indented
#517: FILE: drivers/staging/me4000/me4000.c:394:
+      release:me4000_release,

WARNING:CONST_STRUCT: struct file_operations should normally be const
#520: FILE: drivers/staging/me4000/me4000.c:397:
+static struct file_operations me4000_ai_fops_cont_et_chanlist = {

WARNING:INDENTED_LABEL: labels should not be indented
#521: FILE: drivers/staging/me4000/me4000.c:398:
+      owner:THIS_MODULE,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#522: FILE: drivers/staging/me4000/me4000.c:399:
+      read:me4000_ai_read,
           ^

WARNING:INDENTED_LABEL: labels should not be indented
#522: FILE: drivers/staging/me4000/me4000.c:399:
+      read:me4000_ai_read,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#523: FILE: drivers/staging/me4000/me4000.c:400:
+      poll:me4000_ai_poll,
           ^

WARNING:INDENTED_LABEL: labels should not be indented
#523: FILE: drivers/staging/me4000/me4000.c:400:
+      poll:me4000_ai_poll,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#524: FILE: drivers/staging/me4000/me4000.c:401:
+      ioctl:me4000_ai_ioctl_ext,
            ^

WARNING:INDENTED_LABEL: labels should not be indented
#524: FILE: drivers/staging/me4000/me4000.c:401:
+      ioctl:me4000_ai_ioctl_ext,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#525: FILE: drivers/staging/me4000/me4000.c:402:
+      open:me4000_open,
           ^

WARNING:INDENTED_LABEL: labels should not be indented
#525: FILE: drivers/staging/me4000/me4000.c:402:
+      open:me4000_open,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#526: FILE: drivers/staging/me4000/me4000.c:403:
+      release:me4000_release,
              ^

WARNING:INDENTED_LABEL: labels should not be indented
#526: FILE: drivers/staging/me4000/me4000.c:403:
+      release:me4000_release,

WARNING:CONST_STRUCT: struct file_operations should normally be const
#529: FILE: drivers/staging/me4000/me4000.c:406:
+static struct file_operations me4000_dio_fops = {

WARNING:INDENTED_LABEL: labels should not be indented
#530: FILE: drivers/staging/me4000/me4000.c:407:
+      owner:THIS_MODULE,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#531: FILE: drivers/staging/me4000/me4000.c:408:
+      ioctl:me4000_dio_ioctl,
            ^

WARNING:INDENTED_LABEL: labels should not be indented
#531: FILE: drivers/staging/me4000/me4000.c:408:
+      ioctl:me4000_dio_ioctl,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#532: FILE: drivers/staging/me4000/me4000.c:409:
+      open:me4000_open,
           ^

WARNING:INDENTED_LABEL: labels should not be indented
#532: FILE: drivers/staging/me4000/me4000.c:409:
+      open:me4000_open,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#533: FILE: drivers/staging/me4000/me4000.c:410:
+      release:me4000_release,
              ^

WARNING:INDENTED_LABEL: labels should not be indented
#533: FILE: drivers/staging/me4000/me4000.c:410:
+      release:me4000_release,

WARNING:CONST_STRUCT: struct file_operations should normally be const
#536: FILE: drivers/staging/me4000/me4000.c:413:
+static struct file_operations me4000_cnt_fops = {

WARNING:INDENTED_LABEL: labels should not be indented
#537: FILE: drivers/staging/me4000/me4000.c:414:
+      owner:THIS_MODULE,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#538: FILE: drivers/staging/me4000/me4000.c:415:
+      ioctl:me4000_cnt_ioctl,
            ^

WARNING:INDENTED_LABEL: labels should not be indented
#538: FILE: drivers/staging/me4000/me4000.c:415:
+      ioctl:me4000_cnt_ioctl,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#539: FILE: drivers/staging/me4000/me4000.c:416:
+      open:me4000_open,
           ^

WARNING:INDENTED_LABEL: labels should not be indented
#539: FILE: drivers/staging/me4000/me4000.c:416:
+      open:me4000_open,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#540: FILE: drivers/staging/me4000/me4000.c:417:
+      release:me4000_release,
              ^

WARNING:INDENTED_LABEL: labels should not be indented
#540: FILE: drivers/staging/me4000/me4000.c:417:
+      release:me4000_release,

WARNING:CONST_STRUCT: struct file_operations should normally be const
#543: FILE: drivers/staging/me4000/me4000.c:420:
+static struct file_operations me4000_ext_int_fops = {

WARNING:INDENTED_LABEL: labels should not be indented
#544: FILE: drivers/staging/me4000/me4000.c:421:
+      owner:THIS_MODULE,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#545: FILE: drivers/staging/me4000/me4000.c:422:
+      ioctl:me4000_ext_int_ioctl,
            ^

WARNING:INDENTED_LABEL: labels should not be indented
#545: FILE: drivers/staging/me4000/me4000.c:422:
+      ioctl:me4000_ext_int_ioctl,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#546: FILE: drivers/staging/me4000/me4000.c:423:
+      open:me4000_open,
           ^

WARNING:INDENTED_LABEL: labels should not be indented
#546: FILE: drivers/staging/me4000/me4000.c:423:
+      open:me4000_open,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#547: FILE: drivers/staging/me4000/me4000.c:424:
+      release:me4000_release,
              ^

WARNING:INDENTED_LABEL: labels should not be indented
#547: FILE: drivers/staging/me4000/me4000.c:424:
+      release:me4000_release,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#548: FILE: drivers/staging/me4000/me4000.c:425:
+      fasync:me4000_ext_int_fasync,
             ^

WARNING:INDENTED_LABEL: labels should not be indented
#548: FILE: drivers/staging/me4000/me4000.c:425:
+      fasync:me4000_ext_int_fasync,

WARNING:CONST_STRUCT: struct file_operations should normally be const
#551: FILE: drivers/staging/me4000/me4000.c:428:
+static struct file_operations *me4000_ao_fops_array[] = {

WARNING:TYPO_SPELLING: 'continous' may be misspelled - perhaps 'continuous'?
#554: FILE: drivers/staging/me4000/me4000.c:431:
+	&me4000_ao_fops_cont,	// continous operations
 	                     	   ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONST_STRUCT: struct file_operations should normally be const
#557: FILE: drivers/staging/me4000/me4000.c:434:
+static struct file_operations *me4000_ai_fops_array[] = {

WARNING:TYPO_SPELLING: 'continous' may be misspelled - perhaps 'continuous'?
#560: FILE: drivers/staging/me4000/me4000.c:437:
+	&me4000_ai_fops_cont_et,	// continous operations with external trigger
 	                        	   ^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#575: FILE: drivers/staging/me4000/me4000.c:452:
+		printk(KERN_ERR "ME4000:init_module():Can't register driver\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#584: FILE: drivers/staging/me4000/me4000.c:461:
+		printk(KERN_ERR "ME4000:init_module():Can't get AO major no\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#597: FILE: drivers/staging/me4000/me4000.c:474:
+		printk(KERN_ERR "ME4000:init_module():Can't get AI major no\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#610: FILE: drivers/staging/me4000/me4000.c:487:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#624: FILE: drivers/staging/me4000/me4000.c:501:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#638: FILE: drivers/staging/me4000/me4000.c:515:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#652: FILE: drivers/staging/me4000/me4000.c:529:
+		printk(KERN_ERR

WARNING:INDENTED_LABEL: labels should not be indented
#659: FILE: drivers/staging/me4000/me4000.c:536:
+      INIT_ERROR_7:

WARNING:INDENTED_LABEL: labels should not be indented
#662: FILE: drivers/staging/me4000/me4000.c:539:
+      INIT_ERROR_6:

WARNING:INDENTED_LABEL: labels should not be indented
#665: FILE: drivers/staging/me4000/me4000.c:542:
+      INIT_ERROR_5:

WARNING:INDENTED_LABEL: labels should not be indented
#668: FILE: drivers/staging/me4000/me4000.c:545:
+      INIT_ERROR_4:

WARNING:INDENTED_LABEL: labels should not be indented
#671: FILE: drivers/staging/me4000/me4000.c:548:
+      INIT_ERROR_3:

WARNING:INDENTED_LABEL: labels should not be indented
#674: FILE: drivers/staging/me4000/me4000.c:551:
+      INIT_ERROR_2:

WARNING:INDENTED_LABEL: labels should not be indented
#678: FILE: drivers/staging/me4000/me4000.c:555:
+      INIT_ERROR_1:

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#703: FILE: drivers/staging/me4000/me4000.c:580:
+			if (ao_context->circ_buf.buf)
+				kfree(ao_context->circ_buf.buf);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#710: FILE: drivers/staging/me4000/me4000.c:587:
+		if (board_info->ai_context->circ_buf.buf)
+			kfree(board_info->ai_context->circ_buf.buf);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#733: FILE: drivers/staging/me4000/me4000.c:610:
+static int get_registers(struct pci_dev *dev, me4000_info_t * board_info)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#735: FILE: drivers/staging/me4000/me4000.c:612:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#740: FILE: drivers/staging/me4000/me4000.c:617:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_registers', this function's name, in a string
#741: FILE: drivers/staging/me4000/me4000.c:618:
+		       "ME4000:get_registers():PCI base address 1 is not available\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_registers', this function's name, in a string
#747: FILE: drivers/staging/me4000/me4000.c:624:
+	    ("get_registers():PLX configuration registers at address 0x%4lX [0x%4lX]\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#754: FILE: drivers/staging/me4000/me4000.c:631:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_registers', this function's name, in a string
#755: FILE: drivers/staging/me4000/me4000.c:632:
+		       "ME4000:get_registers():PCI base address 2 is not available\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_registers', this function's name, in a string
#760: FILE: drivers/staging/me4000/me4000.c:637:
+	PDEBUG("get_registers():ME4000 registers at address 0x%4lX [0x%4lX]\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#767: FILE: drivers/staging/me4000/me4000.c:644:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_registers', this function's name, in a string
#768: FILE: drivers/staging/me4000/me4000.c:645:
+		       "ME4000:get_registers():PCI base address 3 is not available\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_registers', this function's name, in a string
#773: FILE: drivers/staging/me4000/me4000.c:650:
+	PDEBUG("get_registers():Timer registers at address 0x%4lX [0x%4lX]\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#780: FILE: drivers/staging/me4000/me4000.c:657:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_registers', this function's name, in a string
#781: FILE: drivers/staging/me4000/me4000.c:658:
+		       "get_registers():ME4000:PCI base address 5 is not available\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_registers', this function's name, in a string
#786: FILE: drivers/staging/me4000/me4000.c:663:
+	PDEBUG("get_registers():Program registers at address 0x%4lX [0x%4lX]\n",

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#793: FILE: drivers/staging/me4000/me4000.c:670:
+			   me4000_info_t * board_info)

WARNING:LINE_SPACING: Missing a blank line after declarations
#798: FILE: drivers/staging/me4000/me4000.c:675:
+	struct list_head *board_p;
+	board_info->pci_dev_p = pci_dev_p;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#807: FILE: drivers/staging/me4000/me4000.c:684:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'init_board_info', this function's name, in a string
#808: FILE: drivers/staging/me4000/me4000.c:685:
+		       "ME4000:init_board_info():Device ID not valid\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#821: FILE: drivers/staging/me4000/me4000.c:698:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'init_board_info', this function's name, in a string
#822: FILE: drivers/staging/me4000/me4000.c:699:
+		       "ME4000:init_board_info():Cannot get index of baord\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#836: FILE: drivers/staging/me4000/me4000.c:713:
+		printk(KERN_WARNING

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'init_board_info', this function's name, in a string
#837: FILE: drivers/staging/me4000/me4000.c:714:
+		       "ME4000:init_board_info: Can't get serial_no\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'init_board_info', this function's name, in a string
#840: FILE: drivers/staging/me4000/me4000.c:717:
+	PDEBUG("init_board_info():serial_no = 0x%x\n", board_info->serial_no);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#846: FILE: drivers/staging/me4000/me4000.c:723:
+		printk(KERN_WARNING

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'init_board_info', this function's name, in a string
#847: FILE: drivers/staging/me4000/me4000.c:724:
+		       "ME4000:init_board_info():Can't get hw_revision\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'init_board_info', this function's name, in a string
#850: FILE: drivers/staging/me4000/me4000.c:727:
+	PDEBUG("init_board_info():hw_revision = 0x%x\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'init_board_info', this function's name, in a string
#855: FILE: drivers/staging/me4000/me4000.c:732:
+	PDEBUG("init_board_info():vendor_id = 0x%x\n", board_info->vendor_id);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'init_board_info', this function's name, in a string
#859: FILE: drivers/staging/me4000/me4000.c:736:
+	PDEBUG("init_board_info():device_id = 0x%x\n", board_info->device_id);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'init_board_info', this function's name, in a string
#863: FILE: drivers/staging/me4000/me4000.c:740:
+	PDEBUG("init_board_info():pci_func_no = 0x%x\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'init_board_info', this function's name, in a string
#868: FILE: drivers/staging/me4000/me4000.c:745:
+	PDEBUG("init_board_info():pci_dev_no = 0x%x\n", board_info->pci_dev_no);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'init_board_info', this function's name, in a string
#872: FILE: drivers/staging/me4000/me4000.c:749:
+	PDEBUG("init_board_info():pci_bus_no = 0x%x\n", board_info->pci_bus_no);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'init_board_info', this function's name, in a string
#876: FILE: drivers/staging/me4000/me4000.c:753:
+	PDEBUG("init_board_info():irq = %d\n", board_info->irq);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#881: FILE: drivers/staging/me4000/me4000.c:758:
+static int alloc_ao_contexts(me4000_info_t * info)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#890: FILE: drivers/staging/me4000/me4000.c:767:
+			printk(KERN_ERR

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#890: FILE: drivers/staging/me4000/me4000.c:767:
+		if (!ao_context) {
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'alloc_ao_contexts', this function's name, in a string
#891: FILE: drivers/staging/me4000/me4000.c:768:
+			       "alloc_ao_contexts():Can't get memory for ao context\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#908: FILE: drivers/staging/me4000/me4000.c:785:
+				printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'alloc_ao_contexts', this function's name, in a string
#909: FILE: drivers/staging/me4000/me4000.c:786:
+				       "alloc_ao_contexts():Can't get circular buffer\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#997: FILE: drivers/staging/me4000/me4000.c:874:
+				printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'alloc_ao_contexts', this function's name, in a string
#998: FILE: drivers/staging/me4000/me4000.c:875:
+				       "alloc_ao_contexts():Can't get interrupt line");

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1000: FILE: drivers/staging/me4000/me4000.c:877:
+				if (ao_context->circ_buf.buf)
+					kfree(ao_context->circ_buf.buf);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1014: FILE: drivers/staging/me4000/me4000.c:891:
+static void release_ao_contexts(me4000_info_t * board_info)

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1025: FILE: drivers/staging/me4000/me4000.c:902:
+		if (ao_context->circ_buf.buf)
+			kfree(ao_context->circ_buf.buf);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1031: FILE: drivers/staging/me4000/me4000.c:908:
+static int alloc_ai_context(me4000_info_t * info)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1038: FILE: drivers/staging/me4000/me4000.c:915:
+			printk(KERN_ERR

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1038: FILE: drivers/staging/me4000/me4000.c:915:
+		if (!ai_context) {
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'alloc_ai_context', this function's name, in a string
#1039: FILE: drivers/staging/me4000/me4000.c:916:
+			       "ME4000:alloc_ai_context():Can't get memory for ai context\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1084: FILE: drivers/staging/me4000/me4000.c:961:
+static int alloc_dio_context(me4000_info_t * info)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1091: FILE: drivers/staging/me4000/me4000.c:968:
+			printk(KERN_ERR

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1091: FILE: drivers/staging/me4000/me4000.c:968:
+		if (!dio_context) {
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'alloc_dio_context', this function's name, in a string
#1092: FILE: drivers/staging/me4000/me4000.c:969:
+			       "ME4000:alloc_dio_context():Can't get memory for dio context\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1121: FILE: drivers/staging/me4000/me4000.c:998:
+static int alloc_cnt_context(me4000_info_t * info)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1128: FILE: drivers/staging/me4000/me4000.c:1005:
+			printk(KERN_ERR

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1128: FILE: drivers/staging/me4000/me4000.c:1005:
+		if (!cnt_context) {
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'alloc_cnt_context', this function's name, in a string
#1129: FILE: drivers/staging/me4000/me4000.c:1006:
+			       "ME4000:alloc_cnt_context():Can't get memory for cnt context\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1152: FILE: drivers/staging/me4000/me4000.c:1029:
+static int alloc_ext_int_context(me4000_info_t * info)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1160: FILE: drivers/staging/me4000/me4000.c:1037:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'alloc_ext_int_context', this function's name, in a string
#1161: FILE: drivers/staging/me4000/me4000.c:1038:
+			       "ME4000:alloc_ext_int_context():Can't get memory for cnt context\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_probe', this function's name, in a string
#1188: FILE: drivers/staging/me4000/me4000.c:1065:
+	CALL_PDEBUG("me4000_probe() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1193: FILE: drivers/staging/me4000/me4000.c:1070:
+		printk(KERN_ERR

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1193: FILE: drivers/staging/me4000/me4000.c:1070:
+	if (!board_info) {
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1206: FILE: drivers/staging/me4000/me4000.c:1083:
+		printk(KERN_ERR "me4000_probe():Cannot get registers\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_probe', this function's name, in a string
#1206: FILE: drivers/staging/me4000/me4000.c:1083:
+		printk(KERN_ERR "me4000_probe():Cannot get registers\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1213: FILE: drivers/staging/me4000/me4000.c:1090:
+		printk(KERN_ERR "me4000_probe():Cannot enable PCI device\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_probe', this function's name, in a string
#1213: FILE: drivers/staging/me4000/me4000.c:1090:
+		printk(KERN_ERR "me4000_probe():Cannot enable PCI device\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1220: FILE: drivers/staging/me4000/me4000.c:1097:
+		printk(KERN_ERR "me4000_probe():Cannot request I/O regions\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_probe', this function's name, in a string
#1220: FILE: drivers/staging/me4000/me4000.c:1097:
+		printk(KERN_ERR "me4000_probe():Cannot request I/O regions\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1227: FILE: drivers/staging/me4000/me4000.c:1104:
+		printk(KERN_ERR "me4000_probe():Cannot init baord info\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_probe', this function's name, in a string
#1227: FILE: drivers/staging/me4000/me4000.c:1104:
+		printk(KERN_ERR "me4000_probe():Cannot init baord info\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1234: FILE: drivers/staging/me4000/me4000.c:1111:
+		printk(KERN_ERR "me4000_probe:Can't download firmware\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_probe', this function's name, in a string
#1234: FILE: drivers/staging/me4000/me4000.c:1111:
+		printk(KERN_ERR "me4000_probe:Can't download firmware\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1241: FILE: drivers/staging/me4000/me4000.c:1118:
+		printk(KERN_ERR "me4000_probe:Can't reset board\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_probe', this function's name, in a string
#1241: FILE: drivers/staging/me4000/me4000.c:1118:
+		printk(KERN_ERR "me4000_probe:Can't reset board\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1248: FILE: drivers/staging/me4000/me4000.c:1125:
+		printk(KERN_ERR "me4000_probe():Cannot allocate ao contexts\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_probe', this function's name, in a string
#1248: FILE: drivers/staging/me4000/me4000.c:1125:
+		printk(KERN_ERR "me4000_probe():Cannot allocate ao contexts\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1255: FILE: drivers/staging/me4000/me4000.c:1132:
+		printk(KERN_ERR "me4000_probe():Cannot allocate ai context\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_probe', this function's name, in a string
#1255: FILE: drivers/staging/me4000/me4000.c:1132:
+		printk(KERN_ERR "me4000_probe():Cannot allocate ai context\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1262: FILE: drivers/staging/me4000/me4000.c:1139:
+		printk(KERN_ERR "me4000_probe():Cannot allocate dio context\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_probe', this function's name, in a string
#1262: FILE: drivers/staging/me4000/me4000.c:1139:
+		printk(KERN_ERR "me4000_probe():Cannot allocate dio context\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1269: FILE: drivers/staging/me4000/me4000.c:1146:
+		printk(KERN_ERR "me4000_probe():Cannot allocate cnt context\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_probe', this function's name, in a string
#1269: FILE: drivers/staging/me4000/me4000.c:1146:
+		printk(KERN_ERR "me4000_probe():Cannot allocate cnt context\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1276: FILE: drivers/staging/me4000/me4000.c:1153:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_probe', this function's name, in a string
#1277: FILE: drivers/staging/me4000/me4000.c:1154:
+		       "me4000_probe():Cannot allocate ext_int context\n");

WARNING:INDENTED_LABEL: labels should not be indented
#1283: FILE: drivers/staging/me4000/me4000.c:1160:
+      PROBE_ERROR_7:

WARNING:INDENTED_LABEL: labels should not be indented
#1286: FILE: drivers/staging/me4000/me4000.c:1163:
+      PROBE_ERROR_6:

WARNING:INDENTED_LABEL: labels should not be indented
#1289: FILE: drivers/staging/me4000/me4000.c:1166:
+      PROBE_ERROR_5:

WARNING:INDENTED_LABEL: labels should not be indented
#1292: FILE: drivers/staging/me4000/me4000.c:1169:
+      PROBE_ERROR_4:

WARNING:INDENTED_LABEL: labels should not be indented
#1295: FILE: drivers/staging/me4000/me4000.c:1172:
+      PROBE_ERROR_3:

WARNING:INDENTED_LABEL: labels should not be indented
#1298: FILE: drivers/staging/me4000/me4000.c:1175:
+      PROBE_ERROR_2:

WARNING:INDENTED_LABEL: labels should not be indented
#1302: FILE: drivers/staging/me4000/me4000.c:1179:
+      PROBE_ERROR_1:

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1306: FILE: drivers/staging/me4000/me4000.c:1183:
+static int me4000_xilinx_download(me4000_info_t * info)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_xilinx_download', this function's name, in a string
#1314: FILE: drivers/staging/me4000/me4000.c:1191:
+	CALL_PDEBUG("me4000_xilinx_download() is executed\n");

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1335: FILE: drivers/staging/me4000/me4000.c:1212:
+	udelay(20);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1337: FILE: drivers/staging/me4000/me4000.c:1214:
+		printk(KERN_ERR "me4000_xilinx_download():Can't init Xilinx\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_xilinx_download', this function's name, in a string
#1337: FILE: drivers/staging/me4000/me4000.c:1214:
+		printk(KERN_ERR "me4000_xilinx_download():Can't init Xilinx\n");

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1348: FILE: drivers/staging/me4000/me4000.c:1225:
+	udelay(10);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1353: FILE: drivers/staging/me4000/me4000.c:1230:
+		udelay(10);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1357: FILE: drivers/staging/me4000/me4000.c:1234:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_xilinx_download', this function's name, in a string
#1358: FILE: drivers/staging/me4000/me4000.c:1235:
+			       "me4000_xilinx_download():Xilinx is still busy (idx = %d)\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_xilinx_download', this function's name, in a string
#1364: FILE: drivers/staging/me4000/me4000.c:1241:
+	PDEBUG("me4000_xilinx_download():%d bytes written\n", idx);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_xilinx_download', this function's name, in a string
#1368: FILE: drivers/staging/me4000/me4000.c:1245:
+		PDEBUG("me4000_xilinx_download():Done flag is set\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_xilinx_download', this function's name, in a string
#1369: FILE: drivers/staging/me4000/me4000.c:1246:
+		PDEBUG("me4000_xilinx_download():Download was successful\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1371: FILE: drivers/staging/me4000/me4000.c:1248:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_xilinx_download', this function's name, in a string
#1372: FILE: drivers/staging/me4000/me4000.c:1249:
+		       "ME4000:me4000_xilinx_download():DONE flag is not set\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1373: FILE: drivers/staging/me4000/me4000.c:1250:
+		printk(KERN_ERR

WARNING:TYPO_SPELLING: 'succesful' may be misspelled - perhaps 'successful'?
#1374: FILE: drivers/staging/me4000/me4000.c:1251:
+		       "ME4000:me4000_xilinx_download():Download not succesful\n");
 		                                                     ^^^^^^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_xilinx_download', this function's name, in a string
#1374: FILE: drivers/staging/me4000/me4000.c:1251:
+		       "ME4000:me4000_xilinx_download():Download not succesful\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1386: FILE: drivers/staging/me4000/me4000.c:1263:
+static int me4000_reset_board(me4000_info_t * info)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_reset_board', this function's name, in a string
#1390: FILE: drivers/staging/me4000/me4000.c:1267:
+	CALL_PDEBUG("me4000_reset_board() is executed\n");

WARNING:TYPO_SPELLING: 'adustment' may be misspelled - perhaps 'adjustment'?
#1422: FILE: drivers/staging/me4000/me4000.c:1299:
+	/* Set the adustment register for AO demux */
 	           ^^^^^^^^^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1427: FILE: drivers/staging/me4000/me4000.c:1304:
+	if (!(me4000_inl(info->me4000_regbase + ME4000_DIO_DIR_REG) & 0x1)) {
+		me4000_outl(0x1, info->me4000_regbase + ME4000_DIO_CTRL_REG);
+	}

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_open', this function's name, in a string
#1447: FILE: drivers/staging/me4000/me4000.c:1324:
+	CALL_PDEBUG("me4000_open() is executed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_open', this function's name, in a string
#1455: FILE: drivers/staging/me4000/me4000.c:1332:
+		PDEBUG("me4000_open():board = %d ao = %d mode = %d\n", board,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1467: FILE: drivers/staging/me4000/me4000.c:1344:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_open', this function's name, in a string
#1468: FILE: drivers/staging/me4000/me4000.c:1345:
+			       "ME4000:me4000_open():Board %d not in device list\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1483: FILE: drivers/staging/me4000/me4000.c:1360:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_open', this function's name, in a string
#1484: FILE: drivers/staging/me4000/me4000.c:1361:
+			       "ME4000:me4000_open():Device %d not in device list\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1491: FILE: drivers/staging/me4000/me4000.c:1368:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_open', this function's name, in a string
#1492: FILE: drivers/staging/me4000/me4000.c:1369:
+			       "ME4000:me4000_open():Mode is not valid\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mode != ME4000_AO_CONV_MODE_SINGLE'
#1497: FILE: drivers/staging/me4000/me4000.c:1374:
+		if ((mode != ME4000_AO_CONV_MODE_SINGLE)
+		    && (dev >= board_info->board_p->ao.fifo_count)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev >= board_info->board_p->ao.fifo_count'
#1497: FILE: drivers/staging/me4000/me4000.c:1374:
+		if ((mode != ME4000_AO_CONV_MODE_SINGLE)
+		    && (dev >= board_info->board_p->ao.fifo_count)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1498: FILE: drivers/staging/me4000/me4000.c:1375:
+		if ((mode != ME4000_AO_CONV_MODE_SINGLE)
+		    && (dev >= board_info->board_p->ao.fifo_count)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1499: FILE: drivers/staging/me4000/me4000.c:1376:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_open', this function's name, in a string
#1500: FILE: drivers/staging/me4000/me4000.c:1377:
+			       "ME4000:me4000_open():AO %d only in single mode available\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1508: FILE: drivers/staging/me4000/me4000.c:1385:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_open', this function's name, in a string
#1509: FILE: drivers/staging/me4000/me4000.c:1386:
+			       "ME4000:me4000_open():AO %d already in use\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_open', this function's name, in a string
#1536: FILE: drivers/staging/me4000/me4000.c:1413:
+		PDEBUG("me4000_open():ai board = %d mode = %d\n", board, mode);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1547: FILE: drivers/staging/me4000/me4000.c:1424:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_open', this function's name, in a string
#1548: FILE: drivers/staging/me4000/me4000.c:1425:
+			       "ME4000:me4000_open():Board %d not in device list\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1557: FILE: drivers/staging/me4000/me4000.c:1434:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_open', this function's name, in a string
#1558: FILE: drivers/staging/me4000/me4000.c:1435:
+			       "ME4000:me4000_open():Mode is not valid\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1565: FILE: drivers/staging/me4000/me4000.c:1442:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_open', this function's name, in a string
#1566: FILE: drivers/staging/me4000/me4000.c:1443:
+			       "ME4000:me4000_open():AI already in use\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_open', this function's name, in a string
#1590: FILE: drivers/staging/me4000/me4000.c:1467:
+		PDEBUG("me4000_open():board = %d\n", board);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1601: FILE: drivers/staging/me4000/me4000.c:1478:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_open', this function's name, in a string
#1602: FILE: drivers/staging/me4000/me4000.c:1479:
+			       "ME4000:me4000_open():Board %d not in device list\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1613: FILE: drivers/staging/me4000/me4000.c:1490:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_open', this function's name, in a string
#1614: FILE: drivers/staging/me4000/me4000.c:1491:
+			       "ME4000:me4000_open():DIO already in use\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_open', this function's name, in a string
#1635: FILE: drivers/staging/me4000/me4000.c:1512:
+		PDEBUG("me4000_open():board = %d\n", board);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1646: FILE: drivers/staging/me4000/me4000.c:1523:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_open', this function's name, in a string
#1647: FILE: drivers/staging/me4000/me4000.c:1524:
+			       "ME4000:me4000_open():Board %d not in device list\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1658: FILE: drivers/staging/me4000/me4000.c:1535:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_open', this function's name, in a string
#1659: FILE: drivers/staging/me4000/me4000.c:1536:
+			       "ME4000:me4000_open():CNT already in use\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_open', this function's name, in a string
#1678: FILE: drivers/staging/me4000/me4000.c:1555:
+		PDEBUG("me4000_open():board = %d\n", board);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1689: FILE: drivers/staging/me4000/me4000.c:1566:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_open', this function's name, in a string
#1690: FILE: drivers/staging/me4000/me4000.c:1567:
+			       "ME4000:me4000_open():Board %d not in device list\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1701: FILE: drivers/staging/me4000/me4000.c:1578:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_open', this function's name, in a string
#1702: FILE: drivers/staging/me4000/me4000.c:1579:
+			       "ME4000:me4000_open():External interrupt already in use\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1721: FILE: drivers/staging/me4000/me4000.c:1598:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_open', this function's name, in a string
#1722: FILE: drivers/staging/me4000/me4000.c:1599:
+			       "ME4000:me4000_open():Can't get interrupt line");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1730: FILE: drivers/staging/me4000/me4000.c:1607:
+		printk(KERN_ERR "ME4000:me4000_open():Major number unknown\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_open', this function's name, in a string
#1730: FILE: drivers/staging/me4000/me4000.c:1607:
+		printk(KERN_ERR "ME4000:me4000_open():Major number unknown\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_release', this function's name, in a string
#1745: FILE: drivers/staging/me4000/me4000.c:1622:
+	CALL_PDEBUG("me4000_release() is executed\n");

WARNING:TYPO_SPELLING: 'externel' may be misspelled - perhaps 'external'?
#1782: FILE: drivers/staging/me4000/me4000.c:1659:
+		/* Disable the externel interrupt */
 		               ^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1793: FILE: drivers/staging/me4000/me4000.c:1670:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_release', this function's name, in a string
#1794: FILE: drivers/staging/me4000/me4000.c:1671:
+		       "ME4000:me4000_release():Major number unknown\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1803: FILE: drivers/staging/me4000/me4000.c:1680:
+static int me4000_ao_prepare(me4000_ao_context_t * ao_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_prepare', this function's name, in a string
#1807: FILE: drivers/staging/me4000/me4000.c:1684:
+	CALL_PDEBUG("me4000_ao_prepare() is executed\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#1812: FILE: drivers/staging/me4000/me4000.c:1689:
+		unsigned long mode = me4000_inl(ao_context->ctrl_reg);
+		if ((mode & ME4000_AO_CONV_MODE_CONTINUOUS)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1813: FILE: drivers/staging/me4000/me4000.c:1690:
+		if ((mode & ME4000_AO_CONV_MODE_CONTINUOUS)
+		    && (mode & ME4000_AO_CTRL_BIT_ENABLE_FIFO)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1834: FILE: drivers/staging/me4000/me4000.c:1711:
+		unsigned long mode = me4000_inl(ao_context->ctrl_reg);
+		if ((mode & ME4000_AO_CONV_MODE_WRAPAROUND)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1835: FILE: drivers/staging/me4000/me4000.c:1712:
+		if ((mode & ME4000_AO_CONV_MODE_WRAPAROUND)
+		    && (mode & ME4000_AO_CTRL_BIT_ENABLE_FIFO)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1856: FILE: drivers/staging/me4000/me4000.c:1733:
+		unsigned long mode = me4000_inl(ao_context->ctrl_reg);
+		if (!

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1874: FILE: drivers/staging/me4000/me4000.c:1751:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_prepare', this function's name, in a string
#1875: FILE: drivers/staging/me4000/me4000.c:1752:
+		       "ME4000:me4000_ao_prepare():Invalid mode specified\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1882: FILE: drivers/staging/me4000/me4000.c:1759:
+static int me4000_ao_reset(me4000_ao_context_t * ao_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_reset', this function's name, in a string
#1888: FILE: drivers/staging/me4000/me4000.c:1765:
+	CALL_PDEBUG("me4000_ao_reset() is executed\n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1903: FILE: drivers/staging/me4000/me4000.c:1780:
+		while (inl(ao_context->status_reg) & ME4000_AO_STATUS_BIT_FSM) {
+			sleep_on_timeout(&queue, 1);
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1938: FILE: drivers/staging/me4000/me4000.c:1815:
+		while (inl(ao_context->status_reg) & ME4000_AO_STATUS_BIT_FSM) {
+			sleep_on_timeout(&queue, 1);
+		}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1979: FILE: drivers/staging/me4000/me4000.c:1856:
+				    size_t cnt, loff_t * offp)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_write_sing', this function's name, in a string
#1985: FILE: drivers/staging/me4000/me4000.c:1862:
+	CALL_PDEBUG("me4000_ao_write_sing() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1988: FILE: drivers/staging/me4000/me4000.c:1865:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_write_sing', this function's name, in a string
#1989: FILE: drivers/staging/me4000/me4000.c:1866:
+		       "me4000_ao_write_sing():Write count is not 2\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1994: FILE: drivers/staging/me4000/me4000.c:1871:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_write_sing', this function's name, in a string
#1995: FILE: drivers/staging/me4000/me4000.c:1872:
+		       "me4000_ao_write_sing():Cannot copy data from user\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2005: FILE: drivers/staging/me4000/me4000.c:1882:
+				    size_t cnt, loff_t * offp)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_write_wrap', this function's name, in a string
#2014: FILE: drivers/staging/me4000/me4000.c:1891:
+	CALL_PDEBUG("me4000_ao_write_wrap() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2018: FILE: drivers/staging/me4000/me4000.c:1895:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_write_wrap', this function's name, in a string
#2019: FILE: drivers/staging/me4000/me4000.c:1896:
+		       "ME4000:me4000_ao_write_wrap():There is already a conversion running\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2024: FILE: drivers/staging/me4000/me4000.c:1901:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_write_wrap', this function's name, in a string
#2025: FILE: drivers/staging/me4000/me4000.c:1902:
+		       "me4000_ao_write_wrap():Can't load more than %d values\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2039: FILE: drivers/staging/me4000/me4000.c:1916:
+			printk(KERN_ERR

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2044: FILE: drivers/staging/me4000/me4000.c:1921:
+		if (((ao_context->fifo_reg & 0xFF) == ME4000_AO_01_FIFO_REG)
+		    || ((ao_context->fifo_reg & 0xFF) == ME4000_AO_03_FIFO_REG))

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_write_wrap', this function's name, in a string
#2048: FILE: drivers/staging/me4000/me4000.c:1925:
+	CALL_PDEBUG("me4000_ao_write_wrap() is leaved with %d\n", i * 2);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2054: FILE: drivers/staging/me4000/me4000.c:1931:
+				    size_t cnt, loff_t * offp)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_write_cont', this function's name, in a string
#2069: FILE: drivers/staging/me4000/me4000.c:1946:
+	CALL_PDEBUG("me4000_ao_write_cont() is executed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_write_cont', this function's name, in a string
#2075: FILE: drivers/staging/me4000/me4000.c:1952:
+		PDEBUG("me4000_ao_write_cont():Count is 0\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_write_cont', this function's name, in a string
#2080: FILE: drivers/staging/me4000/me4000.c:1957:
+		PDEBUG("me4000_ao_write_cont():Append data to data stream\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2084: FILE: drivers/staging/me4000/me4000.c:1961:
+					printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_write_cont', this function's name, in a string
#2085: FILE: drivers/staging/me4000/me4000.c:1962:
+					       "ME4000:me4000_ao_write_cont():Broken pipe in nonblocking write\n");

WARNING:LONG_LINE_STRING: line length of 106 exceeds 100 columns
#2092: FILE: drivers/staging/me4000/me4000.c:1969:
+					    ("me4000_ao_write_cont():Returning from nonblocking write\n");

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_write_cont', this function's name, in a string
#2092: FILE: drivers/staging/me4000/me4000.c:1969:
+					    ("me4000_ao_write_cont():Returning from nonblocking write\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2102: FILE: drivers/staging/me4000/me4000.c:1979:
+					printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_write_cont', this function's name, in a string
#2103: FILE: drivers/staging/me4000/me4000.c:1980:
+					       "me4000_ao_write_cont():Broken pipe in blocking write\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2107: FILE: drivers/staging/me4000/me4000.c:1984:
+					printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_write_cont', this function's name, in a string
#2108: FILE: drivers/staging/me4000/me4000.c:1985:
+					       "me4000_ao_write_cont():Wait for free buffer interrupted from signal\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_write_cont', this function's name, in a string
#2113: FILE: drivers/staging/me4000/me4000.c:1990:
+			PDEBUG("me4000_ao_write_cont():Space to end = %d\n", c);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_write_cont', this function's name, in a string
#2125: FILE: drivers/staging/me4000/me4000.c:2002:
+			    ("me4000_ao_write_cont():Copy %d values from user space\n",

WARNING:LONG_LINE_STRING: line length of 105 exceeds 100 columns
#2156: FILE: drivers/staging/me4000/me4000.c:2033:
+					    ("me4000_ao_write_cont():Broken pipe detected after sync\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_write_cont', this function's name, in a string
#2156: FILE: drivers/staging/me4000/me4000.c:2033:
+					    ("me4000_ao_write_cont():Broken pipe detected after sync\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2160: FILE: drivers/staging/me4000/me4000.c:2037:
+					printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_write_cont', this function's name, in a string
#2161: FILE: drivers/staging/me4000/me4000.c:2038:
+					       "me4000_ao_write_cont():Wait on state machine after sync interrupted\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_write_cont', this function's name, in a string
#2167: FILE: drivers/staging/me4000/me4000.c:2044:
+		PDEBUG("me4000_ao_write_cont():Preload DAC FIFO\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2170: FILE: drivers/staging/me4000/me4000.c:2047:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_write_cont', this function's name, in a string
#2171: FILE: drivers/staging/me4000/me4000.c:2048:
+			       "me4000_ao_write_cont():Can't Preload DAC FIFO while conversion is running\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_write_cont', this function's name, in a string
#2199: FILE: drivers/staging/me4000/me4000.c:2076:
+		    ("me4000_ao_write_cont():Write %d values to DAC on 0x%lX\n",

CHECK:BRACES: braces {} should be used on all arms of this statement
#2207: FILE: drivers/staging/me4000/me4000.c:2084:
+			if (((ao_context->fifo_reg & 0xFF) ==
[...]
+			} else
[...]

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2209: FILE: drivers/staging/me4000/me4000.c:2086:
+			     ME4000_AO_01_FIFO_REG)
+			    || ((ao_context->fifo_reg & 0xFF) ==

CHECK:SPACING: No space is necessary after a cast
#2211: FILE: drivers/staging/me4000/me4000.c:2088:
+				lvalue = ((u32) svalue) << 16;

CHECK:BRACES: Unbalanced braces around else statement
#2212: FILE: drivers/staging/me4000/me4000.c:2089:
+			} else

CHECK:SPACING: No space is necessary after a cast
#2213: FILE: drivers/staging/me4000/me4000.c:2090:
+				lvalue = (u32) svalue;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_write_cont', this function's name, in a string
#2236: FILE: drivers/staging/me4000/me4000.c:2113:
+				    ("me4000_ao_write_cont():Count reached 0\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_write_cont', this function's name, in a string
#2246: FILE: drivers/staging/me4000/me4000.c:2123:
+			    ("me4000_ao_write_cont():Wrote %d values to buffer\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_write_cont', this function's name, in a string
#2264: FILE: drivers/staging/me4000/me4000.c:2141:
+				    ("me4000_ao_write_cont():Enable Interrupts\n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2273: FILE: drivers/staging/me4000/me4000.c:2150:
+	if (filep->f_flags & O_NONBLOCK) {
+		return (ret == 0) ? -EAGAIN : 2 * ret;
+	}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2280: FILE: drivers/staging/me4000/me4000.c:2157:
+static unsigned int me4000_ao_poll_cont(struct file *file_p, poll_table * wait)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_poll_cont', this function's name, in a string
#2285: FILE: drivers/staging/me4000/me4000.c:2162:
+	CALL_PDEBUG("me4000_ao_poll_cont() is executed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_poll_cont', this function's name, in a string
#2295: FILE: drivers/staging/me4000/me4000.c:2172:
+	CALL_PDEBUG("me4000_ao_poll_cont():Return mask %lX\n", mask);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_fsync_cont', this function's name, in a string
#2306: FILE: drivers/staging/me4000/me4000.c:2183:
+	CALL_PDEBUG("me4000_ao_fsync_cont() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2314: FILE: drivers/staging/me4000/me4000.c:2191:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_fsync_cont', this function's name, in a string
#2315: FILE: drivers/staging/me4000/me4000.c:2192:
+			       "me4000_ao_fsync_cont():Broken pipe detected\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2320: FILE: drivers/staging/me4000/me4000.c:2197:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_fsync_cont', this function's name, in a string
#2321: FILE: drivers/staging/me4000/me4000.c:2198:
+			       "me4000_ao_fsync_cont():Wait on state machine interrupted\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_ioctl_sing', this function's name, in a string
#2334: FILE: drivers/staging/me4000/me4000.c:2211:
+	CALL_PDEBUG("me4000_ao_ioctl_sing() is executed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_ioctl_sing', this function's name, in a string
#2340: FILE: drivers/staging/me4000/me4000.c:2217:
+		PDEBUG("me4000_ao_ioctl_sing():Wrong magic number\n");

CHECK:SPACING: No space is necessary after a cast
#2355: FILE: drivers/staging/me4000/me4000.c:2232:
+		return me4000_get_user_info((me4000_user_info_t *) arg,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2373: FILE: drivers/staging/me4000/me4000.c:2250:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_ioctl_sing', this function's name, in a string
#2374: FILE: drivers/staging/me4000/me4000.c:2251:
+		       "me4000_ao_ioctl_sing():Service number invalid\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_ioctl_wrap', this function's name, in a string
#2386: FILE: drivers/staging/me4000/me4000.c:2263:
+	CALL_PDEBUG("me4000_ao_ioctl_wrap() is executed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_ioctl_wrap', this function's name, in a string
#2392: FILE: drivers/staging/me4000/me4000.c:2269:
+		PDEBUG("me4000_ao_ioctl_wrap():Wrong magic number\n");

CHECK:SPACING: No space is necessary after a cast
#2405: FILE: drivers/staging/me4000/me4000.c:2282:
+		return me4000_ao_timer_set_divisor((u32 *) arg, ao_context);

CHECK:SPACING: No space is necessary after a cast
#2413: FILE: drivers/staging/me4000/me4000.c:2290:
+		return me4000_get_user_info((me4000_user_info_t *) arg,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_ioctl_cont', this function's name, in a string
#2438: FILE: drivers/staging/me4000/me4000.c:2315:
+	CALL_PDEBUG("me4000_ao_ioctl_cont() is executed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_ioctl_cont', this function's name, in a string
#2444: FILE: drivers/staging/me4000/me4000.c:2321:
+		PDEBUG("me4000_ao_ioctl_cont():Wrong magic number\n");

CHECK:SPACING: No space is necessary after a cast
#2457: FILE: drivers/staging/me4000/me4000.c:2334:
+		return me4000_ao_timer_set_divisor((u32 *) arg, ao_context);

CHECK:SPACING: No space is necessary after a cast
#2471: FILE: drivers/staging/me4000/me4000.c:2348:
+		return me4000_get_user_info((me4000_user_info_t *) arg,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2488: FILE: drivers/staging/me4000/me4000.c:2365:
+static int me4000_ao_start(unsigned long *arg, me4000_ao_context_t * ao_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_start', this function's name, in a string
#2496: FILE: drivers/staging/me4000/me4000.c:2373:
+	CALL_PDEBUG("me4000_ao_start() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2499: FILE: drivers/staging/me4000/me4000.c:2376:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_start', this function's name, in a string
#2500: FILE: drivers/staging/me4000/me4000.c:2377:
+		       "me4000_ao_start():Cannot copy data from user\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2520: FILE: drivers/staging/me4000/me4000.c:2397:
+					printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_start', this function's name, in a string
#2521: FILE: drivers/staging/me4000/me4000.c:2398:
+					       "ME4000:me4000_ao_start():Wait on start of state machine interrupted\n");

WARNING:TYPO_SPELLING: 'diffrent' may be misspelled - perhaps 'different'?
#2524: FILE: drivers/staging/me4000/me4000.c:2401:
+				if (((jiffies - ref) > (timeout * HZ / USER_HZ))) {	// 2.6 has diffrent definitions for HZ in user and kernel space
 				                                                   	           ^^^^^^^^

WARNING:LONG_LINE_COMMENT: line length of 151 exceeds 100 columns
#2524: FILE: drivers/staging/me4000/me4000.c:2401:
+				if (((jiffies - ref) > (timeout * HZ / USER_HZ))) {	// 2.6 has diffrent definitions for HZ in user and kernel space

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2525: FILE: drivers/staging/me4000/me4000.c:2402:
+					printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_start', this function's name, in a string
#2526: FILE: drivers/staging/me4000/me4000.c:2403:
+					       "ME4000:me4000_ao_start():Timeout reached\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2538: FILE: drivers/staging/me4000/me4000.c:2415:
+static int me4000_ao_stop(me4000_ao_context_t * ao_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_stop', this function's name, in a string
#2546: FILE: drivers/staging/me4000/me4000.c:2423:
+	CALL_PDEBUG("me4000_ao_stop() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2558: FILE: drivers/staging/me4000/me4000.c:2435:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_stop', this function's name, in a string
#2559: FILE: drivers/staging/me4000/me4000.c:2436:
+			       "me4000_ao_stop():Wait on state machine after stop interrupted\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2571: FILE: drivers/staging/me4000/me4000.c:2448:
+static int me4000_ao_immediate_stop(me4000_ao_context_t * ao_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_immediate_stop', this function's name, in a string
#2579: FILE: drivers/staging/me4000/me4000.c:2456:
+	CALL_PDEBUG("me4000_ao_immediate_stop() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2590: FILE: drivers/staging/me4000/me4000.c:2467:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_immediate_stop', this function's name, in a string
#2591: FILE: drivers/staging/me4000/me4000.c:2468:
+			       "me4000_ao_immediate_stop():Wait on state machine after stop interrupted\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2603: FILE: drivers/staging/me4000/me4000.c:2480:
+static int me4000_ao_timer_set_divisor(u32 * arg,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2604: FILE: drivers/staging/me4000/me4000.c:2481:
+				       me4000_ao_context_t * ao_context)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2617: FILE: drivers/staging/me4000/me4000.c:2494:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_timer_set_divisor', this function's name, in a string
#2618: FILE: drivers/staging/me4000/me4000.c:2495:
+		       "me4000_ao_timer_set_divisor():Can't set timer while DAC is running\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2627: FILE: drivers/staging/me4000/me4000.c:2504:
+		printk(KERN_ERR

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2644: FILE: drivers/staging/me4000/me4000.c:2521:
+				      me4000_ao_context_t * ao_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_ex_trig_set_edge', this function's name, in a string
#2650: FILE: drivers/staging/me4000/me4000.c:2527:
+	CALL_PDEBUG("me4000_ao_ex_trig_set_edge() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2658: FILE: drivers/staging/me4000/me4000.c:2535:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_ex_trig_set_edge', this function's name, in a string
#2659: FILE: drivers/staging/me4000/me4000.c:2536:
+		       "me4000_ao_ex_trig_set_edge():Can't set trigger while DAC is running\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2687: FILE: drivers/staging/me4000/me4000.c:2564:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_ex_trig_set_edge', this function's name, in a string
#2688: FILE: drivers/staging/me4000/me4000.c:2565:
+		       "me4000_ao_ex_trig_set_edge():Invalid trigger mode\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2695: FILE: drivers/staging/me4000/me4000.c:2572:
+static int me4000_ao_ex_trig_enable(me4000_ao_context_t * ao_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_ex_trig_enable', this function's name, in a string
#2700: FILE: drivers/staging/me4000/me4000.c:2577:
+	CALL_PDEBUG("me4000_ao_ex_trig_enable() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2705: FILE: drivers/staging/me4000/me4000.c:2582:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_ex_trig_enable', this function's name, in a string
#2706: FILE: drivers/staging/me4000/me4000.c:2583:
+		       "me4000_ao_ex_trig_enable():Can't enable trigger while DAC is running\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2719: FILE: drivers/staging/me4000/me4000.c:2596:
+static int me4000_ao_ex_trig_disable(me4000_ao_context_t * ao_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_ex_trig_disable', this function's name, in a string
#2724: FILE: drivers/staging/me4000/me4000.c:2601:
+	CALL_PDEBUG("me4000_ao_ex_trig_disable() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2729: FILE: drivers/staging/me4000/me4000.c:2606:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_ex_trig_disable', this function's name, in a string
#2730: FILE: drivers/staging/me4000/me4000.c:2607:
+		       "me4000_ao_ex_trig_disable():Can't disable trigger while DAC is running\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2743: FILE: drivers/staging/me4000/me4000.c:2620:
+static int me4000_ao_simultaneous_disable(me4000_ao_context_t * ao_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_simultaneous_disable', this function's name, in a string
#2747: FILE: drivers/staging/me4000/me4000.c:2624:
+	CALL_PDEBUG("me4000_ao_simultaneous_disable() is executed\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2751: FILE: drivers/staging/me4000/me4000.c:2628:
+	/* Be careful here because this function is called from
+	   me4000_ao_synchronous disable */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2751: FILE: drivers/staging/me4000/me4000.c:2628:
+	   me4000_ao_synchronous disable */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2754: FILE: drivers/staging/me4000/me4000.c:2631:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_simultaneous_disable', this function's name, in a string
#2755: FILE: drivers/staging/me4000/me4000.c:2632:
+		       "me4000_ao_simultaneous_disable():Can't disable while DAC is running\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2769: FILE: drivers/staging/me4000/me4000.c:2646:
+static int me4000_ao_simultaneous_ex_trig(me4000_ao_context_t * ao_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_simultaneous_ex_trig', this function's name, in a string
#2773: FILE: drivers/staging/me4000/me4000.c:2650:
+	CALL_PDEBUG("me4000_ao_simultaneous_ex_trig() is executed\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2785: FILE: drivers/staging/me4000/me4000.c:2662:
+static int me4000_ao_simultaneous_sw(me4000_ao_context_t * ao_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_simultaneous_sw', this function's name, in a string
#2789: FILE: drivers/staging/me4000/me4000.c:2666:
+	CALL_PDEBUG("me4000_ao_simultaneous_sw() is executed\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2801: FILE: drivers/staging/me4000/me4000.c:2678:
+static int me4000_ao_preload(me4000_ao_context_t * ao_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_preload', this function's name, in a string
#2803: FILE: drivers/staging/me4000/me4000.c:2680:
+	CALL_PDEBUG("me4000_ao_preload() is executed\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2807: FILE: drivers/staging/me4000/me4000.c:2684:
+static int me4000_ao_preload_update(me4000_ao_context_t * ao_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_preload_update', this function's name, in a string
#2813: FILE: drivers/staging/me4000/me4000.c:2690:
+	CALL_PDEBUG("me4000_ao_preload_update() is executed\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2819: FILE: drivers/staging/me4000/me4000.c:2696:
+		/* The channels we update must be in the following state :
+		   - Mode A

CHECK:SPACING: No space is necessary after a cast
#2831: FILE: drivers/staging/me4000/me4000.c:2708:
+			      (((me4000_ao_context_t *) entry)->index + 16)))) {

CHECK:SPACING: No space is necessary after a cast
#2834: FILE: drivers/staging/me4000/me4000.c:2711:
+				      (((me4000_ao_context_t *) entry)->index));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2844: FILE: drivers/staging/me4000/me4000.c:2721:
+static int me4000_ao_simultaneous_update(me4000_ao_channel_list_t * arg,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2845: FILE: drivers/staging/me4000/me4000.c:2722:
+					 me4000_ao_context_t * ao_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_simultaneous_update', this function's name, in a string
#2852: FILE: drivers/staging/me4000/me4000.c:2729:
+	CALL_PDEBUG("me4000_ao_simultaneous_update() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2857: FILE: drivers/staging/me4000/me4000.c:2734:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_simultaneous_update', this function's name, in a string
#2858: FILE: drivers/staging/me4000/me4000.c:2735:
+		       "ME4000:me4000_ao_simultaneous_update():Can't copy command\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2865: FILE: drivers/staging/me4000/me4000.c:2742:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_simultaneous_update', this function's name, in a string
#2866: FILE: drivers/staging/me4000/me4000.c:2743:
+		       "ME4000:me4000_ao_simultaneous_update():Can't get buffer\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2876: FILE: drivers/staging/me4000/me4000.c:2753:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_simultaneous_update', this function's name, in a string
#2877: FILE: drivers/staging/me4000/me4000.c:2754:
+		       "ME4000:me4000_ao_simultaneous_update():Can't copy list\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2889: FILE: drivers/staging/me4000/me4000.c:2766:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_simultaneous_update', this function's name, in a string
#2890: FILE: drivers/staging/me4000/me4000.c:2767:
+			       "ME4000:me4000_ao_simultaneous_update():Invalid board number specified\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2903: FILE: drivers/staging/me4000/me4000.c:2780:
+static int me4000_ao_synchronous_ex_trig(me4000_ao_context_t * ao_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_synchronous_ex_trig', this function's name, in a string
#2908: FILE: drivers/staging/me4000/me4000.c:2785:
+	CALL_PDEBUG("me4000_ao_synchronous_ex_trig() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2913: FILE: drivers/staging/me4000/me4000.c:2790:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_synchronous_ex_trig', this function's name, in a string
#2914: FILE: drivers/staging/me4000/me4000.c:2791:
+		       "me4000_ao_synchronous_ex_trig(): DAC is running\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2939: FILE: drivers/staging/me4000/me4000.c:2816:
+static int me4000_ao_synchronous_sw(me4000_ao_context_t * ao_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_synchronous_sw', this function's name, in a string
#2944: FILE: drivers/staging/me4000/me4000.c:2821:
+	CALL_PDEBUG("me4000_ao_synchronous_sw() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2949: FILE: drivers/staging/me4000/me4000.c:2826:
+		printk(KERN_ERR "me4000_ao_synchronous_sw(): DAC is running\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_synchronous_sw', this function's name, in a string
#2949: FILE: drivers/staging/me4000/me4000.c:2826:
+		printk(KERN_ERR "me4000_ao_synchronous_sw(): DAC is running\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2974: FILE: drivers/staging/me4000/me4000.c:2851:
+static int me4000_ao_synchronous_disable(me4000_ao_context_t * ao_context)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2980: FILE: drivers/staging/me4000/me4000.c:2857:
+				     me4000_ao_context_t * ao_context)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2989: FILE: drivers/staging/me4000/me4000.c:2866:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_get_free_buffer', this function's name, in a string
#2990: FILE: drivers/staging/me4000/me4000.c:2867:
+		       "ME4000:me4000_ao_get_free_buffer():Can't copy to user space\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2998: FILE: drivers/staging/me4000/me4000.c:2875:
+				     me4000_ao_context_t * ao_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_ex_trig_timeout', this function's name, in a string
#3005: FILE: drivers/staging/me4000/me4000.c:2882:
+	CALL_PDEBUG("me4000_ao_ex_trig_timeout() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3008: FILE: drivers/staging/me4000/me4000.c:2885:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_ex_trig_timeout', this function's name, in a string
#3009: FILE: drivers/staging/me4000/me4000.c:2886:
+		       "me4000_ao_ex_trig_timeout():Cannot copy data from user\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3024: FILE: drivers/staging/me4000/me4000.c:2901:
+					printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_ex_trig_timeout', this function's name, in a string
#3025: FILE: drivers/staging/me4000/me4000.c:2902:
+					       "ME4000:me4000_ao_ex_trig_timeout():Wait on start of state machine interrupted\n");

WARNING:TYPO_SPELLING: 'diffrent' may be misspelled - perhaps 'different'?
#3028: FILE: drivers/staging/me4000/me4000.c:2905:
+				if (((jiffies - ref) > (timeout * HZ / USER_HZ))) {	// 2.6 has diffrent definitions for HZ in user and kernel space
 				                                                   	           ^^^^^^^^

WARNING:LONG_LINE_COMMENT: line length of 151 exceeds 100 columns
#3028: FILE: drivers/staging/me4000/me4000.c:2905:
+				if (((jiffies - ref) > (timeout * HZ / USER_HZ))) {	// 2.6 has diffrent definitions for HZ in user and kernel space

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3029: FILE: drivers/staging/me4000/me4000.c:2906:
+					printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_ex_trig_timeout', this function's name, in a string
#3030: FILE: drivers/staging/me4000/me4000.c:2907:
+					       "ME4000:me4000_ao_ex_trig_timeout():Timeout reached\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3039: FILE: drivers/staging/me4000/me4000.c:2916:
+					printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_ex_trig_timeout', this function's name, in a string
#3040: FILE: drivers/staging/me4000/me4000.c:2917:
+					       "ME4000:me4000_ao_ex_trig_timeout():Wait on start of state machine interrupted\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3046: FILE: drivers/staging/me4000/me4000.c:2923:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_ex_trig_timeout', this function's name, in a string
#3047: FILE: drivers/staging/me4000/me4000.c:2924:
+		       "ME4000:me4000_ao_ex_trig_timeout():External Trigger is not enabled\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#3054: FILE: drivers/staging/me4000/me4000.c:2931:
+static int me4000_ao_enable_do(me4000_ao_context_t * ao_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_enable_do', this function's name, in a string
#3059: FILE: drivers/staging/me4000/me4000.c:2936:
+	CALL_PDEBUG("me4000_ao_enable_do() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3063: FILE: drivers/staging/me4000/me4000.c:2940:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_enable_do', this function's name, in a string
#3064: FILE: drivers/staging/me4000/me4000.c:2941:
+		       "me4000_ao_enable_do():Only available for analog output 3\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3071: FILE: drivers/staging/me4000/me4000.c:2948:
+		printk(KERN_ERR "me4000_ao_enable_do(): DAC is running\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_enable_do', this function's name, in a string
#3071: FILE: drivers/staging/me4000/me4000.c:2948:
+		printk(KERN_ERR "me4000_ao_enable_do(): DAC is running\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#3085: FILE: drivers/staging/me4000/me4000.c:2962:
+static int me4000_ao_disable_do(me4000_ao_context_t * ao_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_disable_do', this function's name, in a string
#3090: FILE: drivers/staging/me4000/me4000.c:2967:
+	CALL_PDEBUG("me4000_ao_disable_do() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3094: FILE: drivers/staging/me4000/me4000.c:2971:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3102: FILE: drivers/staging/me4000/me4000.c:2979:
+		printk(KERN_ERR "me4000_ao_disable_do(): DAC is running\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_disable_do', this function's name, in a string
#3102: FILE: drivers/staging/me4000/me4000.c:2979:
+		printk(KERN_ERR "me4000_ao_disable_do(): DAC is running\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#3115: FILE: drivers/staging/me4000/me4000.c:2992:
+static int me4000_ao_fsm_state(int *arg, me4000_ao_context_t * ao_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_fsm_state', this function's name, in a string
#3119: FILE: drivers/staging/me4000/me4000.c:2996:
+	CALL_PDEBUG("me4000_ao_fsm_state() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3126: FILE: drivers/staging/me4000/me4000.c:3003:
+		printk(KERN_ERR "me4000_ao_fsm_state():Broken pipe detected\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_fsm_state', this function's name, in a string
#3126: FILE: drivers/staging/me4000/me4000.c:3003:
+		printk(KERN_ERR "me4000_ao_fsm_state():Broken pipe detected\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3131: FILE: drivers/staging/me4000/me4000.c:3008:
+		printk(KERN_ERR "me4000_ao_fsm_state():Cannot copy to user\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_fsm_state', this function's name, in a string
#3131: FILE: drivers/staging/me4000/me4000.c:3008:
+		printk(KERN_ERR "me4000_ao_fsm_state():Cannot copy to user\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#3140: FILE: drivers/staging/me4000/me4000.c:3017:
+static int me4000_ai_prepare(me4000_ai_context_t * ai_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_prepare', this function's name, in a string
#3145: FILE: drivers/staging/me4000/me4000.c:3022:
+	CALL_PDEBUG("me4000_ai_prepare() is executed\n");

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'ai_context->mode'
#3151: FILE: drivers/staging/me4000/me4000.c:3028:
+	me4000_outl(ai_context->
+		    mode | ME4000_AI_CTRL_BIT_STOP |

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3176: FILE: drivers/staging/me4000/me4000.c:3053:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_prepare', this function's name, in a string
#3177: FILE: drivers/staging/me4000/me4000.c:3054:
+			       "ME4000:me4000_ai_prepare():Can't get interrupt line");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3185: FILE: drivers/staging/me4000/me4000.c:3062:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_prepare', this function's name, in a string
#3186: FILE: drivers/staging/me4000/me4000.c:3063:
+			       "ME4000:me4000_ai_prepare():Can't get circular buffer\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#3200: FILE: drivers/staging/me4000/me4000.c:3077:
+static int me4000_ai_reset(me4000_ai_context_t * ai_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_reset', this function's name, in a string
#3206: FILE: drivers/staging/me4000/me4000.c:3083:
+	CALL_PDEBUG("me4000_ai_reset() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3224: FILE: drivers/staging/me4000/me4000.c:3101:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_reset', this function's name, in a string
#3225: FILE: drivers/staging/me4000/me4000.c:3102:
+			       "me4000_ai_reset():Wait on state machine after stop interrupted\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_ioctl_sing', this function's name, in a string
#3267: FILE: drivers/staging/me4000/me4000.c:3144:
+	CALL_PDEBUG("me4000_ai_ioctl_sing() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3272: FILE: drivers/staging/me4000/me4000.c:3149:
+		printk(KERN_ERR "me4000_ai_ioctl_sing():Wrong magic number\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_ioctl_sing', this function's name, in a string
#3272: FILE: drivers/staging/me4000/me4000.c:3149:
+		printk(KERN_ERR "me4000_ai_ioctl_sing():Wrong magic number\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3276: FILE: drivers/staging/me4000/me4000.c:3153:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_ioctl_sing', this function's name, in a string
#3277: FILE: drivers/staging/me4000/me4000.c:3154:
+		       "me4000_ai_ioctl_sing():Service number to high\n");

CHECK:SPACING: No space is necessary after a cast
#3283: FILE: drivers/staging/me4000/me4000.c:3160:
+		return me4000_ai_single((me4000_ai_single_t *) arg, ai_context);

CHECK:SPACING: No space is necessary after a cast
#3289: FILE: drivers/staging/me4000/me4000.c:3166:
+		return me4000_ai_ex_trig_setup((me4000_ai_trigger_t *) arg,

CHECK:SPACING: No space is necessary after a cast
#3292: FILE: drivers/staging/me4000/me4000.c:3169:
+		return me4000_get_user_info((me4000_user_info_t *) arg,

CHECK:SPACING: No space is necessary after a cast
#3303: FILE: drivers/staging/me4000/me4000.c:3180:
+		return me4000_eeprom_read((me4000_eeprom_t *) arg, ai_context);

CHECK:SPACING: No space is necessary after a cast
#3305: FILE: drivers/staging/me4000/me4000.c:3182:
+		return me4000_eeprom_write((me4000_eeprom_t *) arg, ai_context);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3307: FILE: drivers/staging/me4000/me4000.c:3184:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_ioctl_sing', this function's name, in a string
#3308: FILE: drivers/staging/me4000/me4000.c:3185:
+		       "me4000_ai_ioctl_sing():Invalid service number\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#3314: FILE: drivers/staging/me4000/me4000.c:3191:
+static int me4000_ai_single(me4000_ai_single_t * arg,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#3315: FILE: drivers/staging/me4000/me4000.c:3192:
+			    me4000_ai_context_t * ai_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_single', this function's name, in a string
#3323: FILE: drivers/staging/me4000/me4000.c:3200:
+	CALL_PDEBUG("me4000_ai_single() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3330: FILE: drivers/staging/me4000/me4000.c:3207:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_single', this function's name, in a string
#3331: FILE: drivers/staging/me4000/me4000.c:3208:
+		       "ME4000:me4000_ai_single():Can't copy from user space\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3343: FILE: drivers/staging/me4000/me4000.c:3220:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_single', this function's name, in a string
#3344: FILE: drivers/staging/me4000/me4000.c:3221:
+		       "ME4000:me4000_ai_single():Invalid range specified\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3352: FILE: drivers/staging/me4000/me4000.c:3229:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_single', this function's name, in a string
#3353: FILE: drivers/staging/me4000/me4000.c:3230:
+			       "ME4000:me4000_ai_single():Analog input is not available\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3360: FILE: drivers/staging/me4000/me4000.c:3237:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_single', this function's name, in a string
#3361: FILE: drivers/staging/me4000/me4000.c:3238:
+			       "ME4000:me4000_ai_single():Analog input is not available in differential mode\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3366: FILE: drivers/staging/me4000/me4000.c:3243:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_single', this function's name, in a string
#3367: FILE: drivers/staging/me4000/me4000.c:3244:
+		       "ME4000:me4000_ai_single():Invalid mode specified\n");

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'cmd.mode'
#3384: FILE: drivers/staging/me4000/me4000.c:3261:
+	me4000_outl(cmd.channel | cmd.range | cmd.
+		    mode | ME4000_AI_LIST_LAST_ENTRY,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3398: FILE: drivers/staging/me4000/me4000.c:3275:
+				printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_single', this function's name, in a string
#3399: FILE: drivers/staging/me4000/me4000.c:3276:
+				       "ME4000:me4000_ai_single():Wait on start of state machine interrupted\n");

WARNING:TYPO_SPELLING: 'diffrent' may be misspelled - perhaps 'different'?
#3402: FILE: drivers/staging/me4000/me4000.c:3279:
+			if (((jiffies - jiffy) > (cmd.timeout * HZ / USER_HZ)) && cmd.timeout) {	// 2.6 has diffrent definitions for HZ in user and kernel space
 			                                                                        	           ^^^^^^^^

WARNING:LONG_LINE: line length of 167 exceeds 100 columns
#3402: FILE: drivers/staging/me4000/me4000.c:3279:
+			if (((jiffies - jiffy) > (cmd.timeout * HZ / USER_HZ)) && cmd.timeout) {	// 2.6 has diffrent definitions for HZ in user and kernel space

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3403: FILE: drivers/staging/me4000/me4000.c:3280:
+				printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_single', this function's name, in a string
#3404: FILE: drivers/staging/me4000/me4000.c:3281:
+				       "ME4000:me4000_ai_single():Timeout reached\n");

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#3413: FILE: drivers/staging/me4000/me4000.c:3290:
+		udelay(10);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3417: FILE: drivers/staging/me4000/me4000.c:3294:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_single', this function's name, in a string
#3418: FILE: drivers/staging/me4000/me4000.c:3295:
+			       "ME4000:me4000_ai_single():Value not available after wait\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3429: FILE: drivers/staging/me4000/me4000.c:3306:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_single', this function's name, in a string
#3430: FILE: drivers/staging/me4000/me4000.c:3307:
+		       "ME4000:me4000_ai_single():Can't copy to user space\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_ioctl_sw', this function's name, in a string
#3442: FILE: drivers/staging/me4000/me4000.c:3319:
+	CALL_PDEBUG("me4000_ai_ioctl_sw() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3447: FILE: drivers/staging/me4000/me4000.c:3324:
+		printk(KERN_ERR "me4000_ai_ioctl_sw():Wrong magic number\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_ioctl_sw', this function's name, in a string
#3447: FILE: drivers/staging/me4000/me4000.c:3324:
+		printk(KERN_ERR "me4000_ai_ioctl_sw():Wrong magic number\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3451: FILE: drivers/staging/me4000/me4000.c:3328:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_ioctl_sw', this function's name, in a string
#3452: FILE: drivers/staging/me4000/me4000.c:3329:
+		       "me4000_ai_ioctl_sw():Service number to high\n");

CHECK:SPACING: No space is necessary after a cast
#3458: FILE: drivers/staging/me4000/me4000.c:3335:
+		return me4000_ai_sc_setup((me4000_ai_sc_t *) arg, ai_context);

CHECK:SPACING: No space is necessary after a cast
#3460: FILE: drivers/staging/me4000/me4000.c:3337:
+		return me4000_ai_config((me4000_ai_config_t *) arg, ai_context);

CHECK:SPACING: No space is necessary after a cast
#3470: FILE: drivers/staging/me4000/me4000.c:3347:
+		return me4000_get_user_info((me4000_user_info_t *) arg,

CHECK:SPACING: No space is necessary after a cast
#3473: FILE: drivers/staging/me4000/me4000.c:3350:
+		return me4000_eeprom_read((me4000_eeprom_t *) arg, ai_context);

CHECK:SPACING: No space is necessary after a cast
#3475: FILE: drivers/staging/me4000/me4000.c:3352:
+		return me4000_eeprom_write((me4000_eeprom_t *) arg, ai_context);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3480: FILE: drivers/staging/me4000/me4000.c:3357:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_ioctl_sw', this function's name, in a string
#3481: FILE: drivers/staging/me4000/me4000.c:3358:
+		       "ME4000:me4000_ai_ioctl_sw():Invalid service number %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_ioctl_ext', this function's name, in a string
#3493: FILE: drivers/staging/me4000/me4000.c:3370:
+	CALL_PDEBUG("me4000_ai_ioctl_ext() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3498: FILE: drivers/staging/me4000/me4000.c:3375:
+		printk(KERN_ERR "me4000_ai_ioctl_ext():Wrong magic number\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_ioctl_ext', this function's name, in a string
#3498: FILE: drivers/staging/me4000/me4000.c:3375:
+		printk(KERN_ERR "me4000_ai_ioctl_ext():Wrong magic number\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3502: FILE: drivers/staging/me4000/me4000.c:3379:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_ioctl_ext', this function's name, in a string
#3503: FILE: drivers/staging/me4000/me4000.c:3380:
+		       "me4000_ai_ioctl_ext():Service number to high\n");

CHECK:SPACING: No space is necessary after a cast
#3509: FILE: drivers/staging/me4000/me4000.c:3386:
+		return me4000_ai_sc_setup((me4000_ai_sc_t *) arg, ai_context);

CHECK:SPACING: No space is necessary after a cast
#3511: FILE: drivers/staging/me4000/me4000.c:3388:
+		return me4000_ai_config((me4000_ai_config_t *) arg, ai_context);

CHECK:SPACING: No space is necessary after a cast
#3523: FILE: drivers/staging/me4000/me4000.c:3400:
+		return me4000_ai_ex_trig_setup((me4000_ai_trigger_t *) arg,

CHECK:SPACING: No space is necessary after a cast
#3528: FILE: drivers/staging/me4000/me4000.c:3405:
+		return me4000_get_user_info((me4000_user_info_t *) arg,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3534: FILE: drivers/staging/me4000/me4000.c:3411:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_ioctl_ext', this function's name, in a string
#3535: FILE: drivers/staging/me4000/me4000.c:3412:
+		       "ME4000:me4000_ai_ioctl_ext():Invalid service number %d\n",

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#3552: FILE: drivers/staging/me4000/me4000.c:3429:
+static int me4000_ai_config(me4000_ai_config_t * arg,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#3553: FILE: drivers/staging/me4000/me4000.c:3430:
+			    me4000_ai_context_t * ai_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_config', this function's name, in a string
#3564: FILE: drivers/staging/me4000/me4000.c:3441:
+	CALL_PDEBUG("me4000_ai_config() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3570: FILE: drivers/staging/me4000/me4000.c:3447:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_config', this function's name, in a string
#3571: FILE: drivers/staging/me4000/me4000.c:3448:
+		       "ME4000:me4000_ai_config():Conversion is not stopped\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3579: FILE: drivers/staging/me4000/me4000.c:3456:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_config', this function's name, in a string
#3580: FILE: drivers/staging/me4000/me4000.c:3457:
+		       "ME4000:me4000_ai_config():Can't copy from user space\n");

WARNING:LONG_LINE_STRING: line length of 109 exceeds 100 columns
#3586: FILE: drivers/staging/me4000/me4000.c:3463:
+	    ("me4000_ai_config():chan = %ld, pre_chan = %ld, scan_low = %ld, scan_high = %ld, count = %ld\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_config', this function's name, in a string
#3586: FILE: drivers/staging/me4000/me4000.c:3463:
+	    ("me4000_ai_config():chan = %ld, pre_chan = %ld, scan_low = %ld, scan_high = %ld, count = %ld\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3593: FILE: drivers/staging/me4000/me4000.c:3470:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_config', this function's name, in a string
#3594: FILE: drivers/staging/me4000/me4000.c:3471:
+			       "ME4000:me4000_ai_config():Sample and Hold is not available for this board\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3602: FILE: drivers/staging/me4000/me4000.c:3479:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_config', this function's name, in a string
#3603: FILE: drivers/staging/me4000/me4000.c:3480:
+		       "me4000_ai_config():Channel list is to large\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3611: FILE: drivers/staging/me4000/me4000.c:3488:
+		printk(KERN_ERR

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#3611: FILE: drivers/staging/me4000/me4000.c:3488:
+	if (!list) {
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_config', this function's name, in a string
#3612: FILE: drivers/staging/me4000/me4000.c:3489:
+		       "ME4000:me4000_ai_config():Can't get memory for channel list\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3620: FILE: drivers/staging/me4000/me4000.c:3497:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_config', this function's name, in a string
#3621: FILE: drivers/staging/me4000/me4000.c:3498:
+		       "ME4000:me4000_ai_config():Can't copy from user space\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3628: FILE: drivers/staging/me4000/me4000.c:3505:
+		printk(KERN_WARNING

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_config', this function's name, in a string
#3629: FILE: drivers/staging/me4000/me4000.c:3506:
+		       "me4000_ai_config():Last entry bit is not set\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3637: FILE: drivers/staging/me4000/me4000.c:3514:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_config', this function's name, in a string
#3638: FILE: drivers/staging/me4000/me4000.c:3515:
+			       "ME4000:me4000_ai_config():Mode is not equal for all entries\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3649: FILE: drivers/staging/me4000/me4000.c:3526:
+				printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_config', this function's name, in a string
#3650: FILE: drivers/staging/me4000/me4000.c:3527:
+				       "ME4000:me4000_ai_config():Channel is not available for single ended\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3659: FILE: drivers/staging/me4000/me4000.c:3536:
+				printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_config', this function's name, in a string
#3660: FILE: drivers/staging/me4000/me4000.c:3537:
+				       "ME4000:me4000_ai_config():Channel is not available for differential\n");

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#3671: FILE: drivers/staging/me4000/me4000.c:3548:
+			if ((list[i] & 0xC0) != ME4000_AI_LIST_RANGE_BIPOLAR_10
+			    && (list[i] & 0xC0) !=

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3673: FILE: drivers/staging/me4000/me4000.c:3550:
+				printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_config', this function's name, in a string
#3674: FILE: drivers/staging/me4000/me4000.c:3551:
+				       "ME4000:me4000_ai_config():Bipolar is not selected in differential mode\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3684: FILE: drivers/staging/me4000/me4000.c:3561:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_config', this function's name, in a string
#3685: FILE: drivers/staging/me4000/me4000.c:3562:
+			       "ME4000:me4000_ai_config():Channel timer divisor is to low\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd.sh'
#3691: FILE: drivers/staging/me4000/me4000.c:3568:
+		if ((cmd.sh) && (cmd.timer.chan != ME4000_AI_MIN_TICKS)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd.timer.chan != ME4000_AI_MIN_TICKS'
#3691: FILE: drivers/staging/me4000/me4000.c:3568:
+		if ((cmd.sh) && (cmd.timer.chan != ME4000_AI_MIN_TICKS)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3692: FILE: drivers/staging/me4000/me4000.c:3569:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_config', this function's name, in a string
#3693: FILE: drivers/staging/me4000/me4000.c:3570:
+			       "ME4000:me4000_ai_config():Channel timer divisor must be at minimum when sample and hold is activated\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3700: FILE: drivers/staging/me4000/me4000.c:3577:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_config', this function's name, in a string
#3701: FILE: drivers/staging/me4000/me4000.c:3578:
+			       "ME4000:me4000_ai_config():Channel pre timer divisor is to low\n");

CHECK:SPACING: No space is necessary after a cast
#3718: FILE: drivers/staging/me4000/me4000.c:3595:
+			    (u64) cmd.timer.scan_low | ((u64) cmd.timer.

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'cmd.timer.scan_high'
#3719: FILE: drivers/staging/me4000/me4000.c:3596:
+			    (u64) cmd.timer.scan_low | ((u64) cmd.timer.
+							scan_high << 32);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3724: FILE: drivers/staging/me4000/me4000.c:3601:
+					printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_config', this function's name, in a string
#3725: FILE: drivers/staging/me4000/me4000.c:3602:
+					       "ME4000:me4000_ai_config():Scan timer divisor is to low\n");

CHECK:SPACING: No space is necessary after a cast
#3734: FILE: drivers/staging/me4000/me4000.c:3611:
+				tmp = (u32) (scan & 0xFFFFFFFF);

CHECK:SPACING: No space is necessary after a cast
#3737: FILE: drivers/staging/me4000/me4000.c:3614:
+				tmp = (u32) ((scan >> 32) & 0xFFFFFFFF);

CHECK:SPACING: No space is necessary after a cast
#3744: FILE: drivers/staging/me4000/me4000.c:3621:
+				tmp = (u32) (scan & 0xFFFFFFFF);

CHECK:SPACING: No space is necessary after a cast
#3747: FILE: drivers/staging/me4000/me4000.c:3624:
+				tmp = (u32) ((scan >> 32) & 0xFFFFFFFF);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'ai_context->scan_pre_timer_high_reg'
#3750: FILE: drivers/staging/me4000/me4000.c:3627:
+					    ai_context->
+					    scan_pre_timer_high_reg);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'ai_context->scan_pre_timer_high_reg'
#3761: FILE: drivers/staging/me4000/me4000.c:3638:
+					    ai_context->
+					    scan_pre_timer_high_reg);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#3777: FILE: drivers/staging/me4000/me4000.c:3654:
+	for (i = 0; i < cmd.channel_list.count; i++) {
+		me4000_outl(list[i], ai_context->channel_list_reg);
+	}

WARNING:INDENTED_LABEL: labels should not be indented
#3797: FILE: drivers/staging/me4000/me4000.c:3674:
+      AI_CONFIG_ERR:

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#3819: FILE: drivers/staging/me4000/me4000.c:3696:
+	if (list)
+		kfree(list);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#3823: FILE: drivers/staging/me4000/me4000.c:3700:
+
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#3825: FILE: drivers/staging/me4000/me4000.c:3702:
+static int ai_common_start(me4000_ai_context_t * ai_context)

WARNING:LINE_SPACING: Missing a blank line after declarations
#3828: FILE: drivers/staging/me4000/me4000.c:3705:
+	u32 tmp;
+	CALL_PDEBUG("ai_common_start() is executed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ai_common_start', this function's name, in a string
#3828: FILE: drivers/staging/me4000/me4000.c:3705:
+	CALL_PDEBUG("ai_common_start() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3834: FILE: drivers/staging/me4000/me4000.c:3711:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ai_common_start', this function's name, in a string
#3835: FILE: drivers/staging/me4000/me4000.c:3712:
+		       "ME4000:ai_common_start():Conversion is not stopped\n");

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#3858: FILE: drivers/staging/me4000/me4000.c:3735:
+	} else if (ai_context->sample_counter
+		   && ai_context->sample_counter_reload) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#3888: FILE: drivers/staging/me4000/me4000.c:3765:
+static int me4000_ai_start(me4000_ai_context_t * ai_context)

WARNING:LINE_SPACING: Missing a blank line after declarations
#3891: FILE: drivers/staging/me4000/me4000.c:3768:
+	int err;
+	CALL_PDEBUG("me4000_ai_start() is executed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_start', this function's name, in a string
#3891: FILE: drivers/staging/me4000/me4000.c:3768:
+	CALL_PDEBUG("me4000_ai_start() is executed\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#3905: FILE: drivers/staging/me4000/me4000.c:3782:
+			      me4000_ai_context_t * ai_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_start_ex', this function's name, in a string
#3912: FILE: drivers/staging/me4000/me4000.c:3789:
+	CALL_PDEBUG("me4000_ai_start_ex() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3915: FILE: drivers/staging/me4000/me4000.c:3792:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_start_ex', this function's name, in a string
#3916: FILE: drivers/staging/me4000/me4000.c:3793:
+		       "me4000_ai_start_ex():Cannot copy data from user\n");

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#3929: FILE: drivers/staging/me4000/me4000.c:3806:
+		while (!
+		       (inl(ai_context->status_reg) & ME4000_AI_STATUS_BIT_FSM))
+		{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3934: FILE: drivers/staging/me4000/me4000.c:3811:
+				printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_start_ex', this function's name, in a string
#3935: FILE: drivers/staging/me4000/me4000.c:3812:
+				       "ME4000:me4000_ai_start_ex():Wait on start of state machine interrupted\n");

WARNING:TYPO_SPELLING: 'diffrent' may be misspelled - perhaps 'different'?
#3938: FILE: drivers/staging/me4000/me4000.c:3815:
+			if (((jiffies - ref) > (timeout * HZ / USER_HZ))) {	// 2.6 has diffrent definitions for HZ in user and kernel space
 			                                                   	           ^^^^^^^^

WARNING:LONG_LINE_COMMENT: line length of 143 exceeds 100 columns
#3938: FILE: drivers/staging/me4000/me4000.c:3815:
+			if (((jiffies - ref) > (timeout * HZ / USER_HZ))) {	// 2.6 has diffrent definitions for HZ in user and kernel space

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3939: FILE: drivers/staging/me4000/me4000.c:3816:
+				printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_start_ex', this function's name, in a string
#3940: FILE: drivers/staging/me4000/me4000.c:3817:
+				       "ME4000:me4000_ai_start_ex():Timeout reached\n");

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#3945: FILE: drivers/staging/me4000/me4000.c:3822:
+		while (!
+		       (inl(ai_context->status_reg) & ME4000_AI_STATUS_BIT_FSM))
+		{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3950: FILE: drivers/staging/me4000/me4000.c:3827:
+				printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_start_ex', this function's name, in a string
#3951: FILE: drivers/staging/me4000/me4000.c:3828:
+				       "ME4000:me4000_ai_start_ex():Wait on start of state machine interrupted\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#3960: FILE: drivers/staging/me4000/me4000.c:3837:
+static int me4000_ai_stop(me4000_ai_context_t * ai_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_stop', this function's name, in a string
#3966: FILE: drivers/staging/me4000/me4000.c:3843:
+	CALL_PDEBUG("me4000_ai_stop() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3988: FILE: drivers/staging/me4000/me4000.c:3865:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_stop', this function's name, in a string
#3989: FILE: drivers/staging/me4000/me4000.c:3866:
+			       "ME4000:me4000_ai_stop():Wait on state machine after stop interrupted\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#3997: FILE: drivers/staging/me4000/me4000.c:3874:
+static int me4000_ai_immediate_stop(me4000_ai_context_t * ai_context)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4025: FILE: drivers/staging/me4000/me4000.c:3902:
+			printk(KERN_ERR

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4034: FILE: drivers/staging/me4000/me4000.c:3911:
+static int me4000_ai_ex_trig_enable(me4000_ai_context_t * ai_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_ex_trig_enable', this function's name, in a string
#4039: FILE: drivers/staging/me4000/me4000.c:3916:
+	CALL_PDEBUG("me4000_ai_ex_trig_enable() is executed\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4050: FILE: drivers/staging/me4000/me4000.c:3927:
+static int me4000_ai_ex_trig_disable(me4000_ai_context_t * ai_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_ex_trig_disable', this function's name, in a string
#4055: FILE: drivers/staging/me4000/me4000.c:3932:
+	CALL_PDEBUG("me4000_ai_ex_trig_disable() is executed\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4066: FILE: drivers/staging/me4000/me4000.c:3943:
+static int me4000_ai_ex_trig_setup(me4000_ai_trigger_t * arg,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4067: FILE: drivers/staging/me4000/me4000.c:3944:
+				   me4000_ai_context_t * ai_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_ex_trig_setup', this function's name, in a string
#4074: FILE: drivers/staging/me4000/me4000.c:3951:
+	CALL_PDEBUG("me4000_ai_ex_trig_setup() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4079: FILE: drivers/staging/me4000/me4000.c:3956:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_ex_trig_setup', this function's name, in a string
#4080: FILE: drivers/staging/me4000/me4000.c:3957:
+		       "ME4000:me4000_ai_ex_trig_setup():Can't copy from user space\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4091: FILE: drivers/staging/me4000/me4000.c:3968:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_ex_trig_setup', this function's name, in a string
#4092: FILE: drivers/staging/me4000/me4000.c:3969:
+			       "ME4000:me4000_ai_ex_trig_setup():No analog trigger available\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4098: FILE: drivers/staging/me4000/me4000.c:3975:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_ex_trig_setup', this function's name, in a string
#4099: FILE: drivers/staging/me4000/me4000.c:3976:
+		       "ME4000:me4000_ai_ex_trig_setup():Invalid trigger mode specified\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4116: FILE: drivers/staging/me4000/me4000.c:3993:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_ex_trig_setup', this function's name, in a string
#4117: FILE: drivers/staging/me4000/me4000.c:3994:
+		       "ME4000:me4000_ai_ex_trig_setup():Invalid trigger edge specified\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4126: FILE: drivers/staging/me4000/me4000.c:4003:
+static int me4000_ai_sc_setup(me4000_ai_sc_t * arg,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4127: FILE: drivers/staging/me4000/me4000.c:4004:
+			      me4000_ai_context_t * ai_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_sc_setup', this function's name, in a string
#4132: FILE: drivers/staging/me4000/me4000.c:4009:
+	CALL_PDEBUG("me4000_ai_sc_setup() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4137: FILE: drivers/staging/me4000/me4000.c:4014:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_sc_setup', this function's name, in a string
#4138: FILE: drivers/staging/me4000/me4000.c:4015:
+		       "ME4000:me4000_ai_sc_setup():Can't copy from user space\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4149: FILE: drivers/staging/me4000/me4000.c:4026:
+			      loff_t * offp)

CHECK:SPACING: No space is necessary after a cast
#4152: FILE: drivers/staging/me4000/me4000.c:4029:
+	s16 *buffer = (s16 *) buff;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_read', this function's name, in a string
#4161: FILE: drivers/staging/me4000/me4000.c:4038:
+	CALL_PDEBUG("me4000_ai_read() is executed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_read', this function's name, in a string
#4167: FILE: drivers/staging/me4000/me4000.c:4044:
+		PDEBUG("me4000_ai_read():Count is 0\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_read', this function's name, in a string
#4177: FILE: drivers/staging/me4000/me4000.c:4054:
+				    ("me4000_ai_read():Returning from nonblocking read\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4185: FILE: drivers/staging/me4000/me4000.c:4062:
+				printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_read', this function's name, in a string
#4186: FILE: drivers/staging/me4000/me4000.c:4063:
+				       "ME4000:me4000_ai_read():Conversion interrupted\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4195: FILE: drivers/staging/me4000/me4000.c:4072:
+				printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_read', this function's name, in a string
#4196: FILE: drivers/staging/me4000/me4000.c:4073:
+				       "ME4000:me4000_ai_read():Wait on values interrupted from signal\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_read', this function's name, in a string
#4204: FILE: drivers/staging/me4000/me4000.c:4081:
+		PDEBUG("me4000_ai_read():%d values to end\n", c);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_read', this function's name, in a string
#4208: FILE: drivers/staging/me4000/me4000.c:4085:
+		PDEBUG("me4000_ai_read():Copy %d values to user space\n", c);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4215: FILE: drivers/staging/me4000/me4000.c:4092:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_read', this function's name, in a string
#4216: FILE: drivers/staging/me4000/me4000.c:4093:
+			       "ME4000:me4000_ai_read():Cannot copy new values to user\n");

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#4234: FILE: drivers/staging/me4000/me4000.c:4111:
+			if (ai_context->sample_counter
+			    && !ai_context->sample_counter_reload) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#4240: FILE: drivers/staging/me4000/me4000.c:4117:
+			} else if (ai_context->sample_counter
+				   && ai_context->sample_counter_reload) {

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#4246: FILE: drivers/staging/me4000/me4000.c:4123:
+					/* Enable Half Full Interrupt and Sample Counter Interrupt */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4263: FILE: drivers/staging/me4000/me4000.c:4140:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_read', this function's name, in a string
#4264: FILE: drivers/staging/me4000/me4000.c:4141:
+		       "ME4000:me4000_ai_read():Conversion not running after complete read\n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#4268: FILE: drivers/staging/me4000/me4000.c:4145:
+	if (filep->f_flags & O_NONBLOCK) {
+		return (k == 0) ? -EAGAIN : 2 * ret;
+	}

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_read', this function's name, in a string
#4272: FILE: drivers/staging/me4000/me4000.c:4149:
+	CALL_PDEBUG("me4000_ai_read() is leaved\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4276: FILE: drivers/staging/me4000/me4000.c:4153:
+static unsigned int me4000_ai_poll(struct file *file_p, poll_table * wait)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_poll', this function's name, in a string
#4281: FILE: drivers/staging/me4000/me4000.c:4158:
+	CALL_PDEBUG("me4000_ai_poll() is executed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_poll', this function's name, in a string
#4292: FILE: drivers/staging/me4000/me4000.c:4169:
+	PDEBUG("me4000_ai_poll():Return mask %lX\n", mask);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4297: FILE: drivers/staging/me4000/me4000.c:4174:
+static int me4000_ai_offset_enable(me4000_ai_context_t * ai_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_offset_enable', this function's name, in a string
#4301: FILE: drivers/staging/me4000/me4000.c:4178:
+	CALL_PDEBUG("me4000_ai_offset_enable() is executed\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4310: FILE: drivers/staging/me4000/me4000.c:4187:
+static int me4000_ai_offset_disable(me4000_ai_context_t * ai_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_offset_disable', this function's name, in a string
#4314: FILE: drivers/staging/me4000/me4000.c:4191:
+	CALL_PDEBUG("me4000_ai_offset_disable() is executed\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4323: FILE: drivers/staging/me4000/me4000.c:4200:
+static int me4000_ai_fullscale_enable(me4000_ai_context_t * ai_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_fullscale_enable', this function's name, in a string
#4327: FILE: drivers/staging/me4000/me4000.c:4204:
+	CALL_PDEBUG("me4000_ai_fullscale_enable() is executed\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4336: FILE: drivers/staging/me4000/me4000.c:4213:
+static int me4000_ai_fullscale_disable(me4000_ai_context_t * ai_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_fullscale_disable', this function's name, in a string
#4340: FILE: drivers/staging/me4000/me4000.c:4217:
+	CALL_PDEBUG("me4000_ai_fullscale_disable() is executed\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4349: FILE: drivers/staging/me4000/me4000.c:4226:
+static int me4000_ai_fsm_state(int *arg, me4000_ai_context_t * ai_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_fsm_state', this function's name, in a string
#4353: FILE: drivers/staging/me4000/me4000.c:4230:
+	CALL_PDEBUG("me4000_ai_fsm_state() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4360: FILE: drivers/staging/me4000/me4000.c:4237:
+		printk(KERN_ERR "me4000_ai_fsm_state():Cannot copy to user\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_fsm_state', this function's name, in a string
#4360: FILE: drivers/staging/me4000/me4000.c:4237:
+		printk(KERN_ERR "me4000_ai_fsm_state():Cannot copy to user\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4368: FILE: drivers/staging/me4000/me4000.c:4245:
+				      me4000_ai_context_t * ai_context)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4377: FILE: drivers/staging/me4000/me4000.c:4254:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_get_count_buffer', this function's name, in a string
#4378: FILE: drivers/staging/me4000/me4000.c:4255:
+		       "ME4000:me4000_ai_get_count_buffer():Can't copy to user space\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4387: FILE: drivers/staging/me4000/me4000.c:4264:
+static int eeprom_write_cmd(me4000_ai_context_t * ai_context, unsigned long cmd,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eeprom_write_cmd', this function's name, in a string
#4393: FILE: drivers/staging/me4000/me4000.c:4270:
+	CALL_PDEBUG("eeprom_write_cmd() is executed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eeprom_write_cmd', this function's name, in a string
#4395: FILE: drivers/staging/me4000/me4000.c:4272:
+	PDEBUG("eeprom_write_cmd():Write command 0x%08lX with length = %d\n",

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#4409: FILE: drivers/staging/me4000/me4000.c:4286:
+		if (cmd & ((0x1 << (length - 1)) >> i)) {
[...]
+		} else {
[...]

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4444: FILE: drivers/staging/me4000/me4000.c:4321:
+static unsigned short eeprom_read_cmd(me4000_ai_context_t * ai_context,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eeprom_read_cmd', this function's name, in a string
#4451: FILE: drivers/staging/me4000/me4000.c:4328:
+	CALL_PDEBUG("eeprom_read_cmd() is executed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eeprom_read_cmd', this function's name, in a string
#4453: FILE: drivers/staging/me4000/me4000.c:4330:
+	PDEBUG("eeprom_read_cmd():Read command 0x%08lX with length = %d\n", cmd,

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#4469: FILE: drivers/staging/me4000/me4000.c:4346:
+		if (cmd & ((0x1 << (length - 1)) >> i)) {
[...]
+		} else {
[...]

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eeprom_read_cmd', this function's name, in a string
#4502: FILE: drivers/staging/me4000/me4000.c:4379:
+			PDEBUG("eeprom_read_cmd():OR with 0x%04X\n",

WARNING:TYPO_SPELLING: 'Dont't' may be misspelled - perhaps 'Don't'?
#4505: FILE: drivers/staging/me4000/me4000.c:4382:
+			PDEBUG("eeprom_read_cmd():Dont't OR\n");
 			                          ^^^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'eeprom_read_cmd', this function's name, in a string
#4505: FILE: drivers/staging/me4000/me4000.c:4382:
+			PDEBUG("eeprom_read_cmd():Dont't OR\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4523: FILE: drivers/staging/me4000/me4000.c:4400:
+static int me4000_eeprom_write(me4000_eeprom_t * arg,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4524: FILE: drivers/staging/me4000/me4000.c:4401:
+			       me4000_ai_context_t * ai_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_eeprom_write', this function's name, in a string
#4532: FILE: drivers/staging/me4000/me4000.c:4409:
+	CALL_PDEBUG("me4000_eeprom_write() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4536: FILE: drivers/staging/me4000/me4000.c:4413:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_eeprom_write', this function's name, in a string
#4537: FILE: drivers/staging/me4000/me4000.c:4414:
+		       "ME4000:me4000_eeprom_write():Cannot copy from user\n");

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'setup.uni_10_offset'
#4576: FILE: drivers/staging/me4000/me4000.c:4453:
+								     setup.
+								     uni_10_offset);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'setup.uni_10_fullscale'
#4588: FILE: drivers/staging/me4000/me4000.c:4465:
+								     setup.
+								     uni_10_fullscale);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'setup.uni_2_5_offset'
#4600: FILE: drivers/staging/me4000/me4000.c:4477:
+								     setup.
+								     uni_2_5_offset);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'setup.uni_2_5_fullscale'
#4612: FILE: drivers/staging/me4000/me4000.c:4489:
+								     setup.
+								     uni_2_5_fullscale);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'setup.bi_10_offset'
#4624: FILE: drivers/staging/me4000/me4000.c:4501:
+								     setup.
+								     bi_10_offset);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'setup.bi_10_fullscale'
#4636: FILE: drivers/staging/me4000/me4000.c:4513:
+								     setup.
+								     bi_10_fullscale);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'setup.bi_2_5_offset'
#4648: FILE: drivers/staging/me4000/me4000.c:4525:
+								     setup.
+								     bi_2_5_offset);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'setup.bi_2_5_fullscale'
#4660: FILE: drivers/staging/me4000/me4000.c:4537:
+								     setup.
+								     bi_2_5_fullscale);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'setup.diff_10_offset'
#4672: FILE: drivers/staging/me4000/me4000.c:4549:
+								     setup.
+								     diff_10_offset);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'setup.diff_10_fullscale'
#4684: FILE: drivers/staging/me4000/me4000.c:4561:
+									setup.
+									diff_10_fullscale);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'setup.diff_2_5_offset'
#4696: FILE: drivers/staging/me4000/me4000.c:4573:
+								     setup.
+								     diff_2_5_offset);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'setup.diff_2_5_fullscale'
#4708: FILE: drivers/staging/me4000/me4000.c:4585:
+									setup.
+									diff_2_5_fullscale);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4720: FILE: drivers/staging/me4000/me4000.c:4597:
+static int me4000_eeprom_read(me4000_eeprom_t * arg,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4721: FILE: drivers/staging/me4000/me4000.c:4598:
+			      me4000_ai_context_t * ai_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_eeprom_read', this function's name, in a string
#4727: FILE: drivers/staging/me4000/me4000.c:4604:
+	CALL_PDEBUG("me4000_eeprom_read() is executed\n");

WARNING:TYPO_SPELLING: 'differntial' may be misspelled - perhaps 'differential'?
#4778: FILE: drivers/staging/me4000/me4000.c:4655:
+	/* Command for differntial 10V offset */
 	               ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'differntial' may be misspelled - perhaps 'differential'?
#4788: FILE: drivers/staging/me4000/me4000.c:4665:
+	/* Command for differntial 2,5V offset */
 	               ^^^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4800: FILE: drivers/staging/me4000/me4000.c:4677:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_eeprom_read', this function's name, in a string
#4801: FILE: drivers/staging/me4000/me4000.c:4678:
+		       "ME4000:me4000_eeprom_read():Cannot copy to user\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_ioctl', this function's name, in a string
#4815: FILE: drivers/staging/me4000/me4000.c:4692:
+	CALL_PDEBUG("me4000_dio_ioctl() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4820: FILE: drivers/staging/me4000/me4000.c:4697:
+		printk(KERN_ERR "me4000_dio_ioctl():Wrong magic number\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_ioctl', this function's name, in a string
#4820: FILE: drivers/staging/me4000/me4000.c:4697:
+		printk(KERN_ERR "me4000_dio_ioctl():Wrong magic number\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4824: FILE: drivers/staging/me4000/me4000.c:4701:
+		printk(KERN_ERR "me4000_dio_ioctl():Service number to high\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_ioctl', this function's name, in a string
#4824: FILE: drivers/staging/me4000/me4000.c:4701:
+		printk(KERN_ERR "me4000_dio_ioctl():Service number to high\n");

CHECK:SPACING: No space is necessary after a cast
#4830: FILE: drivers/staging/me4000/me4000.c:4707:
+		return me4000_dio_config((me4000_dio_config_t *) arg,

CHECK:SPACING: No space is necessary after a cast
#4833: FILE: drivers/staging/me4000/me4000.c:4710:
+		return me4000_dio_set_byte((me4000_dio_byte_t *) arg,

CHECK:SPACING: No space is necessary after a cast
#4836: FILE: drivers/staging/me4000/me4000.c:4713:
+		return me4000_dio_get_byte((me4000_dio_byte_t *) arg,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4841: FILE: drivers/staging/me4000/me4000.c:4718:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_ioctl', this function's name, in a string
#4842: FILE: drivers/staging/me4000/me4000.c:4719:
+		       "ME4000:me4000_dio_ioctl():Invalid service number %d\n",

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4849: FILE: drivers/staging/me4000/me4000.c:4726:
+static int me4000_dio_config(me4000_dio_config_t * arg,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4850: FILE: drivers/staging/me4000/me4000.c:4727:
+			     me4000_dio_context_t * dio_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_config', this function's name, in a string
#4856: FILE: drivers/staging/me4000/me4000.c:4733:
+	CALL_PDEBUG("me4000_dio_config() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4861: FILE: drivers/staging/me4000/me4000.c:4738:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_config', this function's name, in a string
#4862: FILE: drivers/staging/me4000/me4000.c:4739:
+		       "ME4000:me4000_dio_config():Can't copy from user space\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4868: FILE: drivers/staging/me4000/me4000.c:4745:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_config', this function's name, in a string
#4869: FILE: drivers/staging/me4000/me4000.c:4746:
+		       "ME4000:me4000_dio_config():Port %d is not available\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_config', this function's name, in a string
#4874: FILE: drivers/staging/me4000/me4000.c:4751:
+	PDEBUG("me4000_dio_config(): port %d, mode %d, function %d\n", cmd.port,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4881: FILE: drivers/staging/me4000/me4000.c:4758:
+				printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_config', this function's name, in a string
#4882: FILE: drivers/staging/me4000/me4000.c:4759:
+				       "ME4000:me4000_dio_config():Cannot set to input on opto isolated versions\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4916: FILE: drivers/staging/me4000/me4000.c:4793:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_config', this function's name, in a string
#4917: FILE: drivers/staging/me4000/me4000.c:4794:
+			       "ME4000:me4000_dio_config():Mode %d is not available\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4934: FILE: drivers/staging/me4000/me4000.c:4811:
+				printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_config', this function's name, in a string
#4935: FILE: drivers/staging/me4000/me4000.c:4812:
+				       "ME4000:me4000_dio_config():Cannot set to output on opto isolated versions\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4948: FILE: drivers/staging/me4000/me4000.c:4825:
+				printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_config', this function's name, in a string
#4949: FILE: drivers/staging/me4000/me4000.c:4826:
+				       "ME4000:me4000_dio_config():Cannot set to FIFO low output on opto isolated versions\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4965: FILE: drivers/staging/me4000/me4000.c:4842:
+				printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_config', this function's name, in a string
#4966: FILE: drivers/staging/me4000/me4000.c:4843:
+				       "ME4000:me4000_dio_config():Cannot set to FIFO high output on opto isolated versions\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4977: FILE: drivers/staging/me4000/me4000.c:4854:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_config', this function's name, in a string
#4978: FILE: drivers/staging/me4000/me4000.c:4855:
+			       "ME4000:me4000_dio_config():Mode %d is not available\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5014: FILE: drivers/staging/me4000/me4000.c:4891:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_config', this function's name, in a string
#5015: FILE: drivers/staging/me4000/me4000.c:4892:
+			       "ME4000:me4000_dio_config():Mode %d is not available\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5051: FILE: drivers/staging/me4000/me4000.c:4928:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_config', this function's name, in a string
#5052: FILE: drivers/staging/me4000/me4000.c:4929:
+			       "ME4000:me4000_dio_config():Mode %d is not available\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5057: FILE: drivers/staging/me4000/me4000.c:4934:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_config', this function's name, in a string
#5058: FILE: drivers/staging/me4000/me4000.c:4935:
+		       "ME4000:me4000_dio_config():Port %d is not available\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_config', this function's name, in a string
#5063: FILE: drivers/staging/me4000/me4000.c:4940:
+	PDEBUG("me4000_dio_config(): port %d, mode %d, function %d\n", cmd.port,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd.mode == ME4000_DIO_FIFO_HIGH'
#5066: FILE: drivers/staging/me4000/me4000.c:4943:
+	if ((cmd.mode == ME4000_DIO_FIFO_HIGH)
+	    || (cmd.mode == ME4000_DIO_FIFO_LOW)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd.mode == ME4000_DIO_FIFO_LOW'
#5066: FILE: drivers/staging/me4000/me4000.c:4943:
+	if ((cmd.mode == ME4000_DIO_FIFO_HIGH)
+	    || (cmd.mode == ME4000_DIO_FIFO_LOW)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5067: FILE: drivers/staging/me4000/me4000.c:4944:
+	if ((cmd.mode == ME4000_DIO_FIFO_HIGH)
+	    || (cmd.mode == ME4000_DIO_FIFO_LOW)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5081: FILE: drivers/staging/me4000/me4000.c:4958:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_config', this function's name, in a string
#5082: FILE: drivers/staging/me4000/me4000.c:4959:
+			       "ME4000:me4000_dio_config():Invalid port function specified\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#5090: FILE: drivers/staging/me4000/me4000.c:4967:
+static int me4000_dio_set_byte(me4000_dio_byte_t * arg,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#5091: FILE: drivers/staging/me4000/me4000.c:4968:
+			       me4000_dio_context_t * dio_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_set_byte', this function's name, in a string
#5096: FILE: drivers/staging/me4000/me4000.c:4973:
+	CALL_PDEBUG("me4000_dio_set_byte() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5101: FILE: drivers/staging/me4000/me4000.c:4978:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_set_byte', this function's name, in a string
#5102: FILE: drivers/staging/me4000/me4000.c:4979:
+		       "ME4000:me4000_dio_set_byte():Can't copy from user space\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5108: FILE: drivers/staging/me4000/me4000.c:4985:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_set_byte', this function's name, in a string
#5109: FILE: drivers/staging/me4000/me4000.c:4986:
+		       "ME4000:me4000_dio_set_byte():Port %d is not available\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5116: FILE: drivers/staging/me4000/me4000.c:4993:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_set_byte', this function's name, in a string
#5117: FILE: drivers/staging/me4000/me4000.c:4994:
+			       "ME4000:me4000_dio_set_byte():Port %d is not in output mode\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5124: FILE: drivers/staging/me4000/me4000.c:5001:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_set_byte', this function's name, in a string
#5125: FILE: drivers/staging/me4000/me4000.c:5002:
+			       "ME4000:me4000_dio_set_byte():Port %d is not in output mode\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5132: FILE: drivers/staging/me4000/me4000.c:5009:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_set_byte', this function's name, in a string
#5133: FILE: drivers/staging/me4000/me4000.c:5010:
+			       "ME4000:me4000_dio_set_byte():Port %d is not in output mode\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5140: FILE: drivers/staging/me4000/me4000.c:5017:
+			printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_set_byte', this function's name, in a string
#5141: FILE: drivers/staging/me4000/me4000.c:5018:
+			       "ME4000:me4000_dio_set_byte():Port %d is not in output mode\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5147: FILE: drivers/staging/me4000/me4000.c:5024:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_set_byte', this function's name, in a string
#5148: FILE: drivers/staging/me4000/me4000.c:5025:
+		       "ME4000:me4000_dio_set_byte():Port %d is not available\n",

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#5156: FILE: drivers/staging/me4000/me4000.c:5033:
+static int me4000_dio_get_byte(me4000_dio_byte_t * arg,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#5157: FILE: drivers/staging/me4000/me4000.c:5034:
+			       me4000_dio_context_t * dio_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_get_byte', this function's name, in a string
#5162: FILE: drivers/staging/me4000/me4000.c:5039:
+	CALL_PDEBUG("me4000_dio_get_byte() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5167: FILE: drivers/staging/me4000/me4000.c:5044:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_get_byte', this function's name, in a string
#5168: FILE: drivers/staging/me4000/me4000.c:5045:
+		       "ME4000:me4000_dio_get_byte():Can't copy from user space\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5174: FILE: drivers/staging/me4000/me4000.c:5051:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_get_byte', this function's name, in a string
#5175: FILE: drivers/staging/me4000/me4000.c:5052:
+		       "ME4000:me4000_dio_get_byte():Port %d is not available\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5189: FILE: drivers/staging/me4000/me4000.c:5066:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_get_byte', this function's name, in a string
#5190: FILE: drivers/staging/me4000/me4000.c:5067:
+		       "ME4000:me4000_dio_get_byte():Port %d is not available\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5198: FILE: drivers/staging/me4000/me4000.c:5075:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_get_byte', this function's name, in a string
#5199: FILE: drivers/staging/me4000/me4000.c:5076:
+		       "ME4000:me4000_dio_get_byte():Can't copy to user space\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#5206: FILE: drivers/staging/me4000/me4000.c:5083:
+static int me4000_dio_reset(me4000_dio_context_t * dio_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_dio_reset', this function's name, in a string
#5208: FILE: drivers/staging/me4000/me4000.c:5085:
+	CALL_PDEBUG("me4000_dio_reset() is executed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_cnt_ioctl', this function's name, in a string
#5229: FILE: drivers/staging/me4000/me4000.c:5106:
+	CALL_PDEBUG("me4000_cnt_ioctl() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5234: FILE: drivers/staging/me4000/me4000.c:5111:
+		printk(KERN_ERR "me4000_dio_ioctl():Wrong magic number\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5238: FILE: drivers/staging/me4000/me4000.c:5115:
+		printk(KERN_ERR "me4000_dio_ioctl():Service number to high\n");

CHECK:SPACING: No space is necessary after a cast
#5244: FILE: drivers/staging/me4000/me4000.c:5121:
+		return me4000_cnt_read((me4000_cnt_t *) arg, cnt_context);

CHECK:SPACING: No space is necessary after a cast
#5246: FILE: drivers/staging/me4000/me4000.c:5123:
+		return me4000_cnt_write((me4000_cnt_t *) arg, cnt_context);

CHECK:SPACING: No space is necessary after a cast
#5248: FILE: drivers/staging/me4000/me4000.c:5125:
+		return me4000_cnt_config((me4000_cnt_config_t *) arg,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5253: FILE: drivers/staging/me4000/me4000.c:5130:
+		printk(KERN_ERR

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#5261: FILE: drivers/staging/me4000/me4000.c:5138:
+static int me4000_cnt_config(me4000_cnt_config_t * arg,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#5262: FILE: drivers/staging/me4000/me4000.c:5139:
+			     me4000_cnt_context_t * cnt_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_cnt_config', this function's name, in a string
#5269: FILE: drivers/staging/me4000/me4000.c:5146:
+	CALL_PDEBUG("me4000_cnt_config() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5274: FILE: drivers/staging/me4000/me4000.c:5151:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_cnt_config', this function's name, in a string
#5275: FILE: drivers/staging/me4000/me4000.c:5152:
+		       "ME4000:me4000_cnt_config():Can't copy from user space\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5291: FILE: drivers/staging/me4000/me4000.c:5168:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_cnt_config', this function's name, in a string
#5292: FILE: drivers/staging/me4000/me4000.c:5169:
+		       "ME4000:me4000_cnt_config():Counter %d is not available\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5318: FILE: drivers/staging/me4000/me4000.c:5195:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_cnt_config', this function's name, in a string
#5319: FILE: drivers/staging/me4000/me4000.c:5196:
+		       "ME4000:me4000_cnt_config():Mode %d is not available\n",

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#5330: FILE: drivers/staging/me4000/me4000.c:5207:
+static int me4000_cnt_read(me4000_cnt_t * arg,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#5331: FILE: drivers/staging/me4000/me4000.c:5208:
+			   me4000_cnt_context_t * cnt_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_cnt_read', this function's name, in a string
#5337: FILE: drivers/staging/me4000/me4000.c:5214:
+	CALL_PDEBUG("me4000_cnt_read() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5342: FILE: drivers/staging/me4000/me4000.c:5219:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_cnt_read', this function's name, in a string
#5343: FILE: drivers/staging/me4000/me4000.c:5220:
+		       "ME4000:me4000_cnt_read():Can't copy from user space\n");

CHECK:SPACING: No space is necessary after a cast
#5353: FILE: drivers/staging/me4000/me4000.c:5230:
+		cmd.value |= ((u16) tmp) << 8;

CHECK:SPACING: No space is necessary after a cast
#5359: FILE: drivers/staging/me4000/me4000.c:5236:
+		cmd.value |= ((u16) tmp) << 8;

CHECK:SPACING: No space is necessary after a cast
#5365: FILE: drivers/staging/me4000/me4000.c:5242:
+		cmd.value |= ((u16) tmp) << 8;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5368: FILE: drivers/staging/me4000/me4000.c:5245:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_cnt_read', this function's name, in a string
#5369: FILE: drivers/staging/me4000/me4000.c:5246:
+		       "ME4000:me4000_cnt_read():Counter %d is not available\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5377: FILE: drivers/staging/me4000/me4000.c:5254:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_cnt_read', this function's name, in a string
#5378: FILE: drivers/staging/me4000/me4000.c:5255:
+		       "ME4000:me4000_cnt_read():Can't copy to user space\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#5385: FILE: drivers/staging/me4000/me4000.c:5262:
+static int me4000_cnt_write(me4000_cnt_t * arg,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#5386: FILE: drivers/staging/me4000/me4000.c:5263:
+			    me4000_cnt_context_t * cnt_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_cnt_write', this function's name, in a string
#5392: FILE: drivers/staging/me4000/me4000.c:5269:
+	CALL_PDEBUG("me4000_cnt_write() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5397: FILE: drivers/staging/me4000/me4000.c:5274:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_cnt_write', this function's name, in a string
#5398: FILE: drivers/staging/me4000/me4000.c:5275:
+		       "ME4000:me4000_cnt_write():Can't copy from user space\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5423: FILE: drivers/staging/me4000/me4000.c:5300:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_cnt_write', this function's name, in a string
#5424: FILE: drivers/staging/me4000/me4000.c:5301:
+		       "ME4000:me4000_cnt_write():Counter %d is not available\n",

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#5432: FILE: drivers/staging/me4000/me4000.c:5309:
+static int me4000_cnt_reset(me4000_cnt_context_t * cnt_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_cnt_reset', this function's name, in a string
#5434: FILE: drivers/staging/me4000/me4000.c:5311:
+	CALL_PDEBUG("me4000_cnt_reset() is executed\n");

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#5454: FILE: drivers/staging/me4000/me4000.c:5331:
+/*------------------------------------ External Interrupt stuff ------------------------------------*/

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ext_int_ioctl', this function's name, in a string
#5461: FILE: drivers/staging/me4000/me4000.c:5338:
+	CALL_PDEBUG("me4000_ext_int_ioctl() is executed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5466: FILE: drivers/staging/me4000/me4000.c:5343:
+		printk(KERN_ERR "me4000_ext_int_ioctl():Wrong magic number\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ext_int_ioctl', this function's name, in a string
#5466: FILE: drivers/staging/me4000/me4000.c:5343:
+		printk(KERN_ERR "me4000_ext_int_ioctl():Wrong magic number\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5470: FILE: drivers/staging/me4000/me4000.c:5347:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ext_int_ioctl', this function's name, in a string
#5471: FILE: drivers/staging/me4000/me4000.c:5348:
+		       "me4000_ext_int_ioctl():Service number to high\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5484: FILE: drivers/staging/me4000/me4000.c:5361:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ext_int_ioctl', this function's name, in a string
#5485: FILE: drivers/staging/me4000/me4000.c:5362:
+		       "ME4000:me4000_ext_int_ioctl():Invalid service number %d\n",

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#5492: FILE: drivers/staging/me4000/me4000.c:5369:
+static int me4000_ext_int_enable(me4000_ext_int_context_t * ext_int_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ext_int_enable', this function's name, in a string
#5496: FILE: drivers/staging/me4000/me4000.c:5373:
+	CALL_PDEBUG("me4000_ext_int_enable() is executed\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#5505: FILE: drivers/staging/me4000/me4000.c:5382:
+static int me4000_ext_int_disable(me4000_ext_int_context_t * ext_int_context)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ext_int_disable', this function's name, in a string
#5509: FILE: drivers/staging/me4000/me4000.c:5386:
+	CALL_PDEBUG("me4000_ext_int_disable() is executed\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#5519: FILE: drivers/staging/me4000/me4000.c:5396:
+				me4000_ext_int_context_t * ext_int_context)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#5521: FILE: drivers/staging/me4000/me4000.c:5398:
+{
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ext_int_count', this function's name, in a string
#5522: FILE: drivers/staging/me4000/me4000.c:5399:
+	CALL_PDEBUG("me4000_ext_int_count() is executed\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#5530: FILE: drivers/staging/me4000/me4000.c:5407:
+static int me4000_get_user_info(me4000_user_info_t * arg,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#5531: FILE: drivers/staging/me4000/me4000.c:5408:
+				me4000_info_t * board_info)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_get_user_info', this function's name, in a string
#5535: FILE: drivers/staging/me4000/me4000.c:5412:
+	CALL_PDEBUG("me4000_get_user_info() is executed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ext_int_fasync', this function's name, in a string
#5576: FILE: drivers/staging/me4000/me4000.c:5453:
+	CALL_PDEBUG("me4000_ext_int_fasync() is executed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ext_int_fasync', this function's name, in a string
#5583: FILE: drivers/staging/me4000/me4000.c:5460:
+	CALL_PDEBUG("me4000_ext_int_fasync() is leaved\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_isr', this function's name, in a string
#5598: FILE: drivers/staging/me4000/me4000.c:5475:
+	ISR_PDEBUG("me4000_ao_isr() is executed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_isr', this function's name, in a string
#5604: FILE: drivers/staging/me4000/me4000.c:5481:
+		ISR_PDEBUG("me4000_ao_isr():incorrect interrupt num: %d\n",

WARNING:TYPO_SPELLING: 'rised' may be misspelled - perhaps 'raised'?
#5609: FILE: drivers/staging/me4000/me4000.c:5486:
+	/* Check if this DAC rised an interrupt */
 	                     ^^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_isr', this function's name, in a string
#5613: FILE: drivers/staging/me4000/me4000.c:5490:
+		ISR_PDEBUG("me4000_ao_isr():Not this DAC\n");

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5621: FILE: drivers/staging/me4000/me4000.c:5498:
+	if (!(tmp & ME4000_AO_STATUS_BIT_EF) && (tmp & ME4000_AO_STATUS_BIT_HF)
+	    && (tmp & ME4000_AO_STATUS_BIT_HF)) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_isr', this function's name, in a string
#5623: FILE: drivers/staging/me4000/me4000.c:5500:
+		ISR_PDEBUG("me4000_ao_isr():Fifo empty\n");

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5625: FILE: drivers/staging/me4000/me4000.c:5502:
+	} else if ((tmp & ME4000_AO_STATUS_BIT_EF)
+		   && (tmp & ME4000_AO_STATUS_BIT_HF)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5626: FILE: drivers/staging/me4000/me4000.c:5503:
+		   && (tmp & ME4000_AO_STATUS_BIT_HF)
+		   && (tmp & ME4000_AO_STATUS_BIT_HF)) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_isr', this function's name, in a string
#5628: FILE: drivers/staging/me4000/me4000.c:5505:
+		ISR_PDEBUG("me4000_ao_isr():Fifo under half full\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_isr', this function's name, in a string
#5631: FILE: drivers/staging/me4000/me4000.c:5508:
+		ISR_PDEBUG("me4000_ao_isr():Fifo full\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_isr', this function's name, in a string
#5634: FILE: drivers/staging/me4000/me4000.c:5511:
+	ISR_PDEBUG("me4000_ao_isr():Try to write 0x%04X values\n", c);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_isr', this function's name, in a string
#5639: FILE: drivers/staging/me4000/me4000.c:5516:
+		ISR_PDEBUG("me4000_ao_isr():Values to end = %d\n", c1);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_isr', this function's name, in a string
#5645: FILE: drivers/staging/me4000/me4000.c:5522:
+			    ("me4000_ao_isr():Work done or buffer empty\n");

CHECK:BRACES: Unbalanced braces around else statement
#5659: FILE: drivers/staging/me4000/me4000.c:5536:
+		} else

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_isr', this function's name, in a string
#5670: FILE: drivers/staging/me4000/me4000.c:5547:
+		ISR_PDEBUG("me4000_ao_isr():%d values wrote to port 0x%04X\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_isr', this function's name, in a string
#5679: FILE: drivers/staging/me4000/me4000.c:5556:
+		    ("me4000_ao_isr():Disable Interrupt because no values left in buffer\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5696: FILE: drivers/staging/me4000/me4000.c:5573:
+		printk(KERN_ERR "ME4000:me4000_ao_isr():Broken pipe\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ao_isr', this function's name, in a string
#5696: FILE: drivers/staging/me4000/me4000.c:5573:
+		printk(KERN_ERR "ME4000:me4000_ao_isr():Broken pipe\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ao_context->wait_queue
#5704: FILE: drivers/staging/me4000/me4000.c:5581:
+	wake_up_interruptible(&(ao_context->wait_queue));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#5724: FILE: drivers/staging/me4000/me4000.c:5601:
+	ISR_PDEBUG("me4000_ai_isr() is executed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#5734: FILE: drivers/staging/me4000/me4000.c:5611:
+		ISR_PDEBUG("me4000_ai_isr():incorrect interrupt num: %d\n",

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#5742: FILE: drivers/staging/me4000/me4000.c:5619:
+		    ("me4000_ai_isr():Fifo half full interrupt occured\n");
 		                                               ^^^^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#5742: FILE: drivers/staging/me4000/me4000.c:5619:
+		    ("me4000_ai_isr():Fifo half full interrupt occured\n");

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5749: FILE: drivers/staging/me4000/me4000.c:5626:
+		    !(tmp & ME4000_AI_STATUS_BIT_HF_DATA)
+		    && (tmp & ME4000_AI_STATUS_BIT_EF_DATA)) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#5750: FILE: drivers/staging/me4000/me4000.c:5627:
+			ISR_PDEBUG("me4000_ai_isr():Fifo full\n");

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5764: FILE: drivers/staging/me4000/me4000.c:5641:
+			   !(tmp & ME4000_AI_STATUS_BIT_HF_DATA)
+			   && (tmp & ME4000_AI_STATUS_BIT_EF_DATA)) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#5765: FILE: drivers/staging/me4000/me4000.c:5642:
+			ISR_PDEBUG("me4000_ai_isr():Fifo half full\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#5770: FILE: drivers/staging/me4000/me4000.c:5647:
+			    ("me4000_ai_isr():Can't determine state of fifo\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#5773: FILE: drivers/staging/me4000/me4000.c:5650:
+		ISR_PDEBUG("me4000_ai_isr():Try to read %d values\n", c);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#5778: FILE: drivers/staging/me4000/me4000.c:5655:
+			ISR_PDEBUG("me4000_ai_isr():Space to end = %d\n", c1);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#5784: FILE: drivers/staging/me4000/me4000.c:5661:
+				    ("me4000_ai_isr():Work done or buffer full\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#5799: FILE: drivers/staging/me4000/me4000.c:5676:
+		    ("me4000_ai_isr():reset interrupt fifo half full interrupt\n");

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#5811: FILE: drivers/staging/me4000/me4000.c:5688:
+		    ("me4000_ai_isr():Sample counter interrupt occured\n");
 		                                               ^^^^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#5811: FILE: drivers/staging/me4000/me4000.c:5688:
+		    ("me4000_ai_isr():Sample counter interrupt occured\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#5815: FILE: drivers/staging/me4000/me4000.c:5692:
+			    ("me4000_ai_isr():Single data block available\n");

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5820: FILE: drivers/staging/me4000/me4000.c:5697:
+			     (i < ME4000_AI_FIFO_COUNT / 2)
+			     && (inl(ai_context->ctrl_reg) &

CHECK:BRACES: braces {} should be used on all arms of this statement
#5822: FILE: drivers/staging/me4000/me4000.c:5699:
+				if (me4000_space_to_end
[...]
+				} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#5831: FILE: drivers/staging/me4000/me4000.c:5708:
+				} else

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#5834: FILE: drivers/staging/me4000/me4000.c:5711:
+			ISR_PDEBUG("me4000_ai_isr():%d values read\n", i);

WARNING:LONG_LINE_STRING: line length of 104 exceeds 100 columns
#5839: FILE: drivers/staging/me4000/me4000.c:5716:
+				    ("me4000_ai_isr():Interrupt from adjustable half full threshold\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#5839: FILE: drivers/staging/me4000/me4000.c:5716:
+				    ("me4000_ai_isr():Interrupt from adjustable half full threshold\n");

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5846: FILE: drivers/staging/me4000/me4000.c:5723:
+				    !(tmp & ME4000_AI_STATUS_BIT_HF_DATA)
+				    && (tmp & ME4000_AI_STATUS_BIT_EF_DATA)) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#5848: FILE: drivers/staging/me4000/me4000.c:5725:
+					    ("me4000_ai_isr():Fifo full\n");

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5859: FILE: drivers/staging/me4000/me4000.c:5736:
+				} else if ((tmp & ME4000_AI_STATUS_BIT_FF_DATA)
+					   && !(tmp &

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5861: FILE: drivers/staging/me4000/me4000.c:5738:
+						ME4000_AI_STATUS_BIT_HF_DATA)
+					   && (tmp &

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#5864: FILE: drivers/staging/me4000/me4000.c:5741:
+					    ("me4000_ai_isr():Fifo half full\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#5869: FILE: drivers/staging/me4000/me4000.c:5746:
+					    ("me4000_ai_isr():Sample count values\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#5873: FILE: drivers/staging/me4000/me4000.c:5750:
+				    ("me4000_ai_isr():Try to read %d values\n",

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'ai_context->circ_buf'
#5878: FILE: drivers/staging/me4000/me4000.c:5755:
+					c1 = me4000_space_to_end(ai_context->
+								 circ_buf,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#5881: FILE: drivers/staging/me4000/me4000.c:5758:
+					    ("me4000_ai_isr():Space to end = %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#5888: FILE: drivers/staging/me4000/me4000.c:5765:
+						    ("me4000_ai_isr():Work done or buffer full\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#5902: FILE: drivers/staging/me4000/me4000.c:5779:
+				    ("me4000_ai_isr():Multiple data block available\n");

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5909: FILE: drivers/staging/me4000/me4000.c:5786:
+				    !(tmp & ME4000_AI_STATUS_BIT_HF_DATA)
+				    && (tmp & ME4000_AI_STATUS_BIT_EF_DATA)) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#5911: FILE: drivers/staging/me4000/me4000.c:5788:
+					    ("me4000_ai_isr():Fifo full\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#5927: FILE: drivers/staging/me4000/me4000.c:5804:
+						    ("me4000_ai_isr():Space to end = %d\n",

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#5929: FILE: drivers/staging/me4000/me4000.c:5806:
+						if (c1 > c)

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#5932: FILE: drivers/staging/me4000/me4000.c:5809:
+						if (c1 <= 0) {

WARNING:LONG_LINE_STRING: line length of 107 exceeds 100 columns
#5934: FILE: drivers/staging/me4000/me4000.c:5811:
+							    ("me4000_ai_isr():Work done or buffer full\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#5934: FILE: drivers/staging/me4000/me4000.c:5811:
+							    ("me4000_ai_isr():Work done or buffer full\n");

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5950: FILE: drivers/staging/me4000/me4000.c:5827:
+				} else if ((tmp & ME4000_AI_STATUS_BIT_FF_DATA)
+					   && !(tmp &

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5952: FILE: drivers/staging/me4000/me4000.c:5829:
+						ME4000_AI_STATUS_BIT_HF_DATA)
+					   && (tmp &

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#5955: FILE: drivers/staging/me4000/me4000.c:5832:
+					    ("me4000_ai_isr():Fifo half full\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#5963: FILE: drivers/staging/me4000/me4000.c:5840:
+						    ("me4000_ai_isr():Space to end = %d\n",

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#5965: FILE: drivers/staging/me4000/me4000.c:5842:
+						if (c1 > c)

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#5968: FILE: drivers/staging/me4000/me4000.c:5845:
+						if (c1 <= 0) {

WARNING:LONG_LINE_STRING: line length of 107 exceeds 100 columns
#5970: FILE: drivers/staging/me4000/me4000.c:5847:
+							    ("me4000_ai_isr():Work done or buffer full\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#5970: FILE: drivers/staging/me4000/me4000.c:5847:
+							    ("me4000_ai_isr():Work done or buffer full\n");

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5989: FILE: drivers/staging/me4000/me4000.c:5866:
+					     (i < ME4000_AI_FIFO_COUNT / 2)
+					     && (inl(ai_context->ctrl_reg) &

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#5992: FILE: drivers/staging/me4000/me4000.c:5869:
+						if (me4000_space_to_end

CHECK:BRACES: braces {} should be used on all arms of this statement
#5992: FILE: drivers/staging/me4000/me4000.c:5869:
+						if (me4000_space_to_end
[...]
+						} else
[...]

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'ai_context->circ_buf.buf'
#5996: FILE: drivers/staging/me4000/me4000.c:5873:
+							*(ai_context->circ_buf.
+							  buf +

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'ai_context->circ_buf.head'
#5998: FILE: drivers/staging/me4000/me4000.c:5875:
+							  ai_context->circ_buf.
+							  head) =

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'ai_context->circ_buf.head'
#6001: FILE: drivers/staging/me4000/me4000.c:5878:
+							ai_context->circ_buf.
+							    head =

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'ai_context->circ_buf.head'
#6003: FILE: drivers/staging/me4000/me4000.c:5880:
+							    (ai_context->
+							     circ_buf.head +

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#6007: FILE: drivers/staging/me4000/me4000.c:5884:
+						} else

CHECK:BRACES: Unbalanced braces around else statement
#6007: FILE: drivers/staging/me4000/me4000.c:5884:
+						} else

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#6011: FILE: drivers/staging/me4000/me4000.c:5888:
+					    ("me4000_ai_isr():%d values read\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#6019: FILE: drivers/staging/me4000/me4000.c:5896:
+		    ("me4000_ai_isr():reset interrupt from sample counter\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#6031: FILE: drivers/staging/me4000/me4000.c:5908:
+		ISR_PDEBUG("me4000_ai_isr():Wake up waiting process\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ai_context->wait_queue
#6032: FILE: drivers/staging/me4000/me4000.c:5909:
+		wake_up_interruptible(&(ai_context->wait_queue));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#6039: FILE: drivers/staging/me4000/me4000.c:5916:
+		    ("me4000_ai_isr():Disable Interrupt because no space left in buffer\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#6050: FILE: drivers/staging/me4000/me4000.c:5927:
+	printk(KERN_ERR "ME4000:me4000_ai_isr():Time lapse = %lu\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ai_isr', this function's name, in a string
#6050: FILE: drivers/staging/me4000/me4000.c:5927:
+	printk(KERN_ERR "ME4000:me4000_ai_isr():Time lapse = %lu\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ext_int_isr', this function's name, in a string
#6062: FILE: drivers/staging/me4000/me4000.c:5939:
+	ISR_PDEBUG("me4000_ext_int_isr() is executed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ext_int_isr', this function's name, in a string
#6068: FILE: drivers/staging/me4000/me4000.c:5945:
+		ISR_PDEBUG("me4000_ext_int_isr():incorrect interrupt num: %d\n",

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#6075: FILE: drivers/staging/me4000/me4000.c:5952:
+		ISR_PDEBUG("me4000_ext_int_isr():External interrupt occured\n");
 		                                                    ^^^^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'me4000_ext_int_isr', this function's name, in a string
#6075: FILE: drivers/staging/me4000/me4000.c:5952:
+		ISR_PDEBUG("me4000_ext_int_isr():External interrupt occured\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6263: FILE: drivers/staging/me4000/me4000.h:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6276: FILE: drivers/staging/me4000/me4000.h:14:
+/*=============================================================================
+  The version of the driver release

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6277: FILE: drivers/staging/me4000/me4000.h:15:
+  ===========================================================================*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6282: FILE: drivers/staging/me4000/me4000.h:20:
+/*=============================================================================
+  Debug section

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6283: FILE: drivers/staging/me4000/me4000.h:21:
+  ===========================================================================*/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#6292: FILE: drivers/staging/me4000/me4000.h:30:
+#define CALL_PDEBUG(fmt, args...) printk(KERN_DEBUG"ME4000:" fmt, ##args)

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#6292: FILE: drivers/staging/me4000/me4000.h:30:
+#define CALL_PDEBUG(fmt, args...) printk(KERN_DEBUG"ME4000:" fmt, ##args)

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#6299: FILE: drivers/staging/me4000/me4000.h:37:
+#define ISR_PDEBUG(fmt, args...) printk(KERN_DEBUG"ME4000:" fmt, ##args)

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#6299: FILE: drivers/staging/me4000/me4000.h:37:
+#define ISR_PDEBUG(fmt, args...) printk(KERN_DEBUG"ME4000:" fmt, ##args)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#6306: FILE: drivers/staging/me4000/me4000.h:44:
+#define PORT_PDEBUG(fmt, args...) printk(KERN_DEBUG"ME4000:" fmt, ##args)

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#6306: FILE: drivers/staging/me4000/me4000.h:44:
+#define PORT_PDEBUG(fmt, args...) printk(KERN_DEBUG"ME4000:" fmt, ##args)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#6313: FILE: drivers/staging/me4000/me4000.h:51:
+#define PDEBUG(fmt, args...) printk(KERN_DEBUG"ME4000:" fmt, ##args)

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#6313: FILE: drivers/staging/me4000/me4000.h:51:
+#define PDEBUG(fmt, args...) printk(KERN_DEBUG"ME4000:" fmt, ##args)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6319: FILE: drivers/staging/me4000/me4000.h:57:
+/*=============================================================================
+  PCI vendor and device IDs

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6320: FILE: drivers/staging/me4000/me4000.h:58:
+  ===========================================================================*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6342: FILE: drivers/staging/me4000/me4000.h:80:
+/*=============================================================================
+  Device names, for entries in /proc/..

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6343: FILE: drivers/staging/me4000/me4000.h:81:
+  ===========================================================================*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6353: FILE: drivers/staging/me4000/me4000.h:91:
+/*=============================================================================
+  ME-4000 base register offsets

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6354: FILE: drivers/staging/me4000/me4000.h:92:
+  ===========================================================================*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6409: FILE: drivers/staging/me4000/me4000.h:147:
+/*=============================================================================
+  Value to adjust Demux

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6410: FILE: drivers/staging/me4000/me4000.h:148:
+  ===========================================================================*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6415: FILE: drivers/staging/me4000/me4000.h:153:
+/*=============================================================================
+  Counter base register offsets

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6416: FILE: drivers/staging/me4000/me4000.h:154:
+  ===========================================================================*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6424: FILE: drivers/staging/me4000/me4000.h:162:
+/*=============================================================================
+  PLX base register offsets

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6425: FILE: drivers/staging/me4000/me4000.h:163:
+  ===========================================================================*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6431: FILE: drivers/staging/me4000/me4000.h:169:
+/*=============================================================================
+  Bits for the PLX_ICSR register

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6432: FILE: drivers/staging/me4000/me4000.h:170:
+  ===========================================================================*/

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#6434: FILE: drivers/staging/me4000/me4000.h:172:
+#define PLX_INTCSR_LOCAL_INT1_EN             0x01	// If set, local interrupt 1 is enabled (r/w)

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#6435: FILE: drivers/staging/me4000/me4000.h:173:
+#define PLX_INTCSR_LOCAL_INT1_POL            0x02	// If set, local interrupt 1 polarity is active high (r/w)

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#6437: FILE: drivers/staging/me4000/me4000.h:175:
+#define PLX_INTCSR_LOCAL_INT2_EN             0x08	// If set, local interrupt 2 is enabled (r/w)

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#6438: FILE: drivers/staging/me4000/me4000.h:176:
+#define PLX_INTCSR_LOCAL_INT2_POL            0x10	// If set, local interrupt 2 polarity is active high (r/w)

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#6439: FILE: drivers/staging/me4000/me4000.h:177:
+#define PLX_INTCSR_LOCAL_INT2_STATE          0x20	// If set, local interrupt 2 is active  (r/_)

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#6441: FILE: drivers/staging/me4000/me4000.h:179:
+#define PLX_INTCSR_SOFT_INT                  0x80	// If set, a software interrupt is generated (r/w)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6444: FILE: drivers/staging/me4000/me4000.h:182:
+/*=============================================================================
+  Bits for the PLX_ICR register

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6445: FILE: drivers/staging/me4000/me4000.h:183:
+  ===========================================================================*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6458: FILE: drivers/staging/me4000/me4000.h:196:
+/*=============================================================================
+  Bits for the ME4000_AO_CTRL_REG register

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6459: FILE: drivers/staging/me4000/me4000.h:197:
+  ===========================================================================*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6475: FILE: drivers/staging/me4000/me4000.h:213:
+/*=============================================================================
+  Bits for the ME4000_AO_STATUS_REG register

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6476: FILE: drivers/staging/me4000/me4000.h:214:
+  ===========================================================================*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6484: FILE: drivers/staging/me4000/me4000.h:222:
+/*=============================================================================
+  Bits for the ME4000_AI_CTRL_REG register

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6485: FILE: drivers/staging/me4000/me4000.h:223:
+  ===========================================================================*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6512: FILE: drivers/staging/me4000/me4000.h:250:
+/*=============================================================================
+  Bits for the ME4000_AI_STATUS_REG register

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6513: FILE: drivers/staging/me4000/me4000.h:251:
+  ===========================================================================*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6525: FILE: drivers/staging/me4000/me4000.h:263:
+/*=============================================================================
+  Bits for the ME4000_IRQ_STATUS_REG register

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6526: FILE: drivers/staging/me4000/me4000.h:264:
+  ===========================================================================*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6538: FILE: drivers/staging/me4000/me4000.h:276:
+/*=============================================================================
+  Bits for the ME4000_DIO_CTRL_REG register

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6539: FILE: drivers/staging/me4000/me4000.h:277:
+  ===========================================================================*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6559: FILE: drivers/staging/me4000/me4000.h:297:
+/*=============================================================================
+  Bits for the ME4000_CNT_CTRL_REG register

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6560: FILE: drivers/staging/me4000/me4000.h:298:
+  ===========================================================================*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6574: FILE: drivers/staging/me4000/me4000.h:312:
+/*=============================================================================
+  Extract information from minor device number

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6575: FILE: drivers/staging/me4000/me4000.h:313:
+  ===========================================================================*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6591: FILE: drivers/staging/me4000/me4000.h:329:
+/*=============================================================================
+  Circular buffer used for analog input/output reads/writes.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6592: FILE: drivers/staging/me4000/me4000.h:330:
+  ===========================================================================*/

WARNING:NEW_TYPEDEFS: do not add new typedefs
#6594: FILE: drivers/staging/me4000/me4000.h:332:
+typedef struct me4000_circ_buf {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#6596: FILE: drivers/staging/me4000/me4000.h:334:
+	int volatile head;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#6597: FILE: drivers/staging/me4000/me4000.h:335:
+	int volatile tail;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6601: FILE: drivers/staging/me4000/me4000.h:339:
+/*=============================================================================
+  Information about the hardware capabilities

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6602: FILE: drivers/staging/me4000/me4000.h:340:
+  ===========================================================================*/

WARNING:NEW_TYPEDEFS: do not add new typedefs
#6604: FILE: drivers/staging/me4000/me4000.h:342:
+typedef struct me4000_ao_info {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#6609: FILE: drivers/staging/me4000/me4000.h:347:
+typedef struct me4000_ai_info {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#6616: FILE: drivers/staging/me4000/me4000.h:354:
+typedef struct me4000_dio_info {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#6620: FILE: drivers/staging/me4000/me4000.h:358:
+typedef struct me4000_cnt_info {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#6624: FILE: drivers/staging/me4000/me4000.h:362:
+typedef struct me4000_board {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6659: FILE: drivers/staging/me4000/me4000.h:397:
+/*=============================================================================
+  PCI device table.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6661: FILE: drivers/staging/me4000/me4000.h:399:
+  ===========================================================================*/

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#6663: FILE: drivers/staging/me4000/me4000.h:401:
+static struct pci_device_id me4000_pci_table[] __devinitdata = {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6689: FILE: drivers/staging/me4000/me4000.h:427:
+/*=============================================================================
+  Global board and subdevice information structures

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6690: FILE: drivers/staging/me4000/me4000.h:428:
+  ===========================================================================*/

WARNING:NEW_TYPEDEFS: do not add new typedefs
#6692: FILE: drivers/staging/me4000/me4000.h:430:
+typedef struct me4000_info {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#6731: FILE: drivers/staging/me4000/me4000.h:469:
+typedef struct me4000_ao_context {

WARNING:TYPO_SPELLING: 'continous' may be misspelled - perhaps 'continuous'?
#6734: FILE: drivers/staging/me4000/me4000.h:472:
+	int mode;		// Indicates mode (0 = single, 1 = wraparound, 2 = continous)
 	         		                                                   ^^^^^^^^^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#6742: FILE: drivers/staging/me4000/me4000.h:480:
+	int volatile pipe_flag;	// Indicates broken pipe set from me4000_ao_isr()

WARNING:NEW_TYPEDEFS: do not add new typedefs
#6753: FILE: drivers/staging/me4000/me4000.h:491:
+typedef struct me4000_ai_context {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#6790: FILE: drivers/staging/me4000/me4000.h:528:
+typedef struct me4000_dio_context {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#6805: FILE: drivers/staging/me4000/me4000.h:543:
+typedef struct me4000_cnt_context {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#6818: FILE: drivers/staging/me4000/me4000.h:556:
+typedef struct me4000_ext_int_context {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6834: FILE: drivers/staging/me4000/me4000.h:572:
+/*=============================================================================
+  Application include section starts here

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6835: FILE: drivers/staging/me4000/me4000.h:573:
+  ===========================================================================*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6838: FILE: drivers/staging/me4000/me4000.h:576:
+/*-----------------------------------------------------------------------------
+  Defines for analog input

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6839: FILE: drivers/staging/me4000/me4000.h:577:
+  ----------------------------------------------------------------------------*/

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#6847: FILE: drivers/staging/me4000/me4000.h:585:
+#define ME4000_AI_BUFFER_SIZE ^I^I(32 * 1024)^I// Size in bytes$

WARNING:TYPO_SPELLING: 'Continous' may be misspelled - perhaps 'Continuous'?
#6883: FILE: drivers/staging/me4000/me4000.h:621:
+#define ME4000_AI_ACQ_MODE_SOFTWARE		0x01	// Continous sampling with software start
                                    		    	   ^^^^^^^^^

WARNING:TYPO_SPELLING: 'Continous' may be misspelled - perhaps 'Continuous'?
#6884: FILE: drivers/staging/me4000/me4000.h:622:
+#define ME4000_AI_ACQ_MODE_EXT			0x02	// Continous sampling with external trigger start
                               			    	   ^^^^^^^^^

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#6884: FILE: drivers/staging/me4000/me4000.h:622:
+#define ME4000_AI_ACQ_MODE_EXT			0x02	// Continous sampling with external trigger start

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#6886: FILE: drivers/staging/me4000/me4000.h:624:
+#define ME4000_AI_ACQ_MODE_EXT_SINGLE_CHANLIST	0x04	// Sample one channel list by external trigger

WARNING:TYPO_SPELLING: 'Staus' may be misspelled - perhaps 'Status'?
#6888: FILE: drivers/staging/me4000/me4000.h:626:
+/* Staus of AI FSM */
    ^^^^^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#6893: FILE: drivers/staging/me4000/me4000.h:631:
+#define ME4000_AI_GAIN_1_UNI_OFFSET		10.0E-3
                                    		     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#6894: FILE: drivers/staging/me4000/me4000.h:632:
+#define ME4000_AI_GAIN_1_UNI_FULLSCALE		9950.0E-3
                                       		       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#6896: FILE: drivers/staging/me4000/me4000.h:634:
+#define ME4000_AI_GAIN_1_BI_FULLSCALE		9950.0E-3
                                      		       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#6897: FILE: drivers/staging/me4000/me4000.h:635:
+#define ME4000_AI_GAIN_4_UNI_OFFSET		10.0E-3
                                    		     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#6898: FILE: drivers/staging/me4000/me4000.h:636:
+#define ME4000_AI_GAIN_4_UNI_FULLSCALE		2450.0E-3
                                       		       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#6900: FILE: drivers/staging/me4000/me4000.h:638:
+#define ME4000_AI_GAIN_4_BI_FULLSCALE		2450.0E-3
                                      		       ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6913: FILE: drivers/staging/me4000/me4000.h:651:
+/*-----------------------------------------------------------------------------
+  Defines for analog output

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6914: FILE: drivers/staging/me4000/me4000.h:652:
+  ----------------------------------------------------------------------------*/

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#6921: FILE: drivers/staging/me4000/me4000.h:659:
+#define ME4000_AO_BUFFER_SIZE ^I^I^I(32 * 1024)^I// Size in bytes$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#6923: FILE: drivers/staging/me4000/me4000.h:661:
+#define ME4000_AO_BUFFER_COUNT ^I^I^I((ME4000_AO_BUFFER_SIZE) / 2)^I// Size in values$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6940: FILE: drivers/staging/me4000/me4000.h:678:
+/*-----------------------------------------------------------------------------
+  Defines for eeprom

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6941: FILE: drivers/staging/me4000/me4000.h:679:
+  ----------------------------------------------------------------------------*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6974: FILE: drivers/staging/me4000/me4000.h:712:
+/*-----------------------------------------------------------------------------
+  Defines for digital I/O

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6975: FILE: drivers/staging/me4000/me4000.h:713:
+  ----------------------------------------------------------------------------*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6992: FILE: drivers/staging/me4000/me4000.h:730:
+/*-----------------------------------------------------------------------------
+  Defines for counters

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6993: FILE: drivers/staging/me4000/me4000.h:731:
+  ----------------------------------------------------------------------------*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#7007: FILE: drivers/staging/me4000/me4000.h:745:
+/*-----------------------------------------------------------------------------
+  General type definitions

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#7008: FILE: drivers/staging/me4000/me4000.h:746:
+  ----------------------------------------------------------------------------*/

WARNING:NEW_TYPEDEFS: do not add new typedefs
#7010: FILE: drivers/staging/me4000/me4000.h:748:
+typedef struct me4000_user_info {

WARNING:TYPO_SPELLING: 'fo' may be misspelled - perhaps 'of'?
#7029: FILE: drivers/staging/me4000/me4000.h:767:
+	int ao_fifo_count;	// Count fo analog output fifos
 	                  	         ^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#7041: FILE: drivers/staging/me4000/me4000.h:779:
+/*-----------------------------------------------------------------------------
+  Type definitions for analog output

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#7042: FILE: drivers/staging/me4000/me4000.h:780:
+  ----------------------------------------------------------------------------*/

WARNING:NEW_TYPEDEFS: do not add new typedefs
#7044: FILE: drivers/staging/me4000/me4000.h:782:
+typedef struct me4000_ao_channel_list {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#7050: FILE: drivers/staging/me4000/me4000.h:788:
+/*-----------------------------------------------------------------------------
+  Type definitions for analog input

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#7051: FILE: drivers/staging/me4000/me4000.h:789:
+  ----------------------------------------------------------------------------*/

WARNING:NEW_TYPEDEFS: do not add new typedefs
#7053: FILE: drivers/staging/me4000/me4000.h:791:
+typedef struct me4000_ai_channel_list {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#7058: FILE: drivers/staging/me4000/me4000.h:796:
+typedef struct me4000_ai_timer {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#7065: FILE: drivers/staging/me4000/me4000.h:803:
+typedef struct me4000_ai_config {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#7071: FILE: drivers/staging/me4000/me4000.h:809:
+typedef struct me4000_ai_single {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#7079: FILE: drivers/staging/me4000/me4000.h:817:
+typedef struct me4000_ai_trigger {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#7084: FILE: drivers/staging/me4000/me4000.h:822:
+typedef struct me4000_ai_sc {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#7090: FILE: drivers/staging/me4000/me4000.h:828:
+/*-----------------------------------------------------------------------------
+  Type definitions for eeprom

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#7091: FILE: drivers/staging/me4000/me4000.h:829:
+  ----------------------------------------------------------------------------*/

WARNING:NEW_TYPEDEFS: do not add new typedefs
#7093: FILE: drivers/staging/me4000/me4000.h:831:
+typedef struct me4000_eeprom {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#7110: FILE: drivers/staging/me4000/me4000.h:848:
+/*-----------------------------------------------------------------------------
+  Type definitions for digital I/O

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#7111: FILE: drivers/staging/me4000/me4000.h:849:
+  ----------------------------------------------------------------------------*/

WARNING:NEW_TYPEDEFS: do not add new typedefs
#7113: FILE: drivers/staging/me4000/me4000.h:851:
+typedef struct me4000_dio_config {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#7119: FILE: drivers/staging/me4000/me4000.h:857:
+typedef struct me4000_dio_byte {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#7125: FILE: drivers/staging/me4000/me4000.h:863:
+/*-----------------------------------------------------------------------------
+  Type definitions for counters

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#7126: FILE: drivers/staging/me4000/me4000.h:864:
+  ----------------------------------------------------------------------------*/

WARNING:NEW_TYPEDEFS: do not add new typedefs
#7128: FILE: drivers/staging/me4000/me4000.h:866:
+typedef struct me4000_cnt {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#7133: FILE: drivers/staging/me4000/me4000.h:871:
+typedef struct me4000_cnt_config {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#7139: FILE: drivers/staging/me4000/me4000.h:877:
+/*-----------------------------------------------------------------------------
+  Type definitions for external interrupt

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#7140: FILE: drivers/staging/me4000/me4000.h:878:
+  ----------------------------------------------------------------------------*/

WARNING:NEW_TYPEDEFS: do not add new typedefs
#7142: FILE: drivers/staging/me4000/me4000.h:880:
+typedef struct {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#7148: FILE: drivers/staging/me4000/me4000.h:886:
+/*-----------------------------------------------------------------------------
+  The ioctls of the board

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#7149: FILE: drivers/staging/me4000/me4000.h:887:
+  ----------------------------------------------------------------------------*/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7153: FILE: drivers/staging/me4000/me4000.h:891:
+#define ME4000_GET_USER_INFO          _IOR (ME4000_MAGIC, 0, me4000_user_info_t)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7153: FILE: drivers/staging/me4000/me4000.h:891:
+#define ME4000_GET_USER_INFO          _IOR (ME4000_MAGIC, 0, me4000_user_info_t)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7155: FILE: drivers/staging/me4000/me4000.h:893:
+#define ME4000_AO_START               _IOW (ME4000_MAGIC, 1, unsigned long)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7155: FILE: drivers/staging/me4000/me4000.h:893:
+#define ME4000_AO_START               _IOW (ME4000_MAGIC, 1, unsigned long)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7156: FILE: drivers/staging/me4000/me4000.h:894:
+#define ME4000_AO_STOP                _IO  (ME4000_MAGIC, 2)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7156: FILE: drivers/staging/me4000/me4000.h:894:
+#define ME4000_AO_STOP                _IO  (ME4000_MAGIC, 2)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7157: FILE: drivers/staging/me4000/me4000.h:895:
+#define ME4000_AO_IMMEDIATE_STOP      _IO  (ME4000_MAGIC, 3)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7157: FILE: drivers/staging/me4000/me4000.h:895:
+#define ME4000_AO_IMMEDIATE_STOP      _IO  (ME4000_MAGIC, 3)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7158: FILE: drivers/staging/me4000/me4000.h:896:
+#define ME4000_AO_RESET               _IO  (ME4000_MAGIC, 4)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7158: FILE: drivers/staging/me4000/me4000.h:896:
+#define ME4000_AO_RESET               _IO  (ME4000_MAGIC, 4)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7159: FILE: drivers/staging/me4000/me4000.h:897:
+#define ME4000_AO_PRELOAD             _IO  (ME4000_MAGIC, 5)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7159: FILE: drivers/staging/me4000/me4000.h:897:
+#define ME4000_AO_PRELOAD             _IO  (ME4000_MAGIC, 5)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7160: FILE: drivers/staging/me4000/me4000.h:898:
+#define ME4000_AO_PRELOAD_UPDATE      _IO  (ME4000_MAGIC, 6)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7160: FILE: drivers/staging/me4000/me4000.h:898:
+#define ME4000_AO_PRELOAD_UPDATE      _IO  (ME4000_MAGIC, 6)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7161: FILE: drivers/staging/me4000/me4000.h:899:
+#define ME4000_AO_EX_TRIG_ENABLE      _IO  (ME4000_MAGIC, 7)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7161: FILE: drivers/staging/me4000/me4000.h:899:
+#define ME4000_AO_EX_TRIG_ENABLE      _IO  (ME4000_MAGIC, 7)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7162: FILE: drivers/staging/me4000/me4000.h:900:
+#define ME4000_AO_EX_TRIG_DISABLE     _IO  (ME4000_MAGIC, 8)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7162: FILE: drivers/staging/me4000/me4000.h:900:
+#define ME4000_AO_EX_TRIG_DISABLE     _IO  (ME4000_MAGIC, 8)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7163: FILE: drivers/staging/me4000/me4000.h:901:
+#define ME4000_AO_EX_TRIG_SETUP       _IOW (ME4000_MAGIC, 9, int)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7163: FILE: drivers/staging/me4000/me4000.h:901:
+#define ME4000_AO_EX_TRIG_SETUP       _IOW (ME4000_MAGIC, 9, int)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7164: FILE: drivers/staging/me4000/me4000.h:902:
+#define ME4000_AO_TIMER_SET_DIVISOR   _IOW (ME4000_MAGIC, 10, unsigned long)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7164: FILE: drivers/staging/me4000/me4000.h:902:
+#define ME4000_AO_TIMER_SET_DIVISOR   _IOW (ME4000_MAGIC, 10, unsigned long)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7165: FILE: drivers/staging/me4000/me4000.h:903:
+#define ME4000_AO_ENABLE_DO           _IO  (ME4000_MAGIC, 11)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7165: FILE: drivers/staging/me4000/me4000.h:903:
+#define ME4000_AO_ENABLE_DO           _IO  (ME4000_MAGIC, 11)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7166: FILE: drivers/staging/me4000/me4000.h:904:
+#define ME4000_AO_DISABLE_DO          _IO  (ME4000_MAGIC, 12)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7166: FILE: drivers/staging/me4000/me4000.h:904:
+#define ME4000_AO_DISABLE_DO          _IO  (ME4000_MAGIC, 12)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7167: FILE: drivers/staging/me4000/me4000.h:905:
+#define ME4000_AO_FSM_STATE           _IOR (ME4000_MAGIC, 13, int)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7167: FILE: drivers/staging/me4000/me4000.h:905:
+#define ME4000_AO_FSM_STATE           _IOR (ME4000_MAGIC, 13, int)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7169: FILE: drivers/staging/me4000/me4000.h:907:
+#define ME4000_AI_SINGLE              _IOR (ME4000_MAGIC, 14, me4000_ai_single_t)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7169: FILE: drivers/staging/me4000/me4000.h:907:
+#define ME4000_AI_SINGLE              _IOR (ME4000_MAGIC, 14, me4000_ai_single_t)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7170: FILE: drivers/staging/me4000/me4000.h:908:
+#define ME4000_AI_START               _IOW (ME4000_MAGIC, 15, unsigned long)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7170: FILE: drivers/staging/me4000/me4000.h:908:
+#define ME4000_AI_START               _IOW (ME4000_MAGIC, 15, unsigned long)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7171: FILE: drivers/staging/me4000/me4000.h:909:
+#define ME4000_AI_STOP                _IO  (ME4000_MAGIC, 16)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7171: FILE: drivers/staging/me4000/me4000.h:909:
+#define ME4000_AI_STOP                _IO  (ME4000_MAGIC, 16)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7172: FILE: drivers/staging/me4000/me4000.h:910:
+#define ME4000_AI_IMMEDIATE_STOP      _IO  (ME4000_MAGIC, 17)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7172: FILE: drivers/staging/me4000/me4000.h:910:
+#define ME4000_AI_IMMEDIATE_STOP      _IO  (ME4000_MAGIC, 17)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7173: FILE: drivers/staging/me4000/me4000.h:911:
+#define ME4000_AI_EX_TRIG_ENABLE      _IO  (ME4000_MAGIC, 18)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7173: FILE: drivers/staging/me4000/me4000.h:911:
+#define ME4000_AI_EX_TRIG_ENABLE      _IO  (ME4000_MAGIC, 18)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7174: FILE: drivers/staging/me4000/me4000.h:912:
+#define ME4000_AI_EX_TRIG_DISABLE     _IO  (ME4000_MAGIC, 19)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7174: FILE: drivers/staging/me4000/me4000.h:912:
+#define ME4000_AI_EX_TRIG_DISABLE     _IO  (ME4000_MAGIC, 19)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7175: FILE: drivers/staging/me4000/me4000.h:913:
+#define ME4000_AI_EX_TRIG_SETUP       _IOW (ME4000_MAGIC, 20, me4000_ai_trigger_t)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7175: FILE: drivers/staging/me4000/me4000.h:913:
+#define ME4000_AI_EX_TRIG_SETUP       _IOW (ME4000_MAGIC, 20, me4000_ai_trigger_t)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7176: FILE: drivers/staging/me4000/me4000.h:914:
+#define ME4000_AI_CONFIG              _IOW (ME4000_MAGIC, 21, me4000_ai_config_t)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7176: FILE: drivers/staging/me4000/me4000.h:914:
+#define ME4000_AI_CONFIG              _IOW (ME4000_MAGIC, 21, me4000_ai_config_t)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7177: FILE: drivers/staging/me4000/me4000.h:915:
+#define ME4000_AI_SC_SETUP            _IOW (ME4000_MAGIC, 22, me4000_ai_sc_t)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7177: FILE: drivers/staging/me4000/me4000.h:915:
+#define ME4000_AI_SC_SETUP            _IOW (ME4000_MAGIC, 22, me4000_ai_sc_t)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7178: FILE: drivers/staging/me4000/me4000.h:916:
+#define ME4000_AI_FSM_STATE           _IOR (ME4000_MAGIC, 23, int)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7178: FILE: drivers/staging/me4000/me4000.h:916:
+#define ME4000_AI_FSM_STATE           _IOR (ME4000_MAGIC, 23, int)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7180: FILE: drivers/staging/me4000/me4000.h:918:
+#define ME4000_DIO_CONFIG             _IOW (ME4000_MAGIC, 24, me4000_dio_config_t)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7180: FILE: drivers/staging/me4000/me4000.h:918:
+#define ME4000_DIO_CONFIG             _IOW (ME4000_MAGIC, 24, me4000_dio_config_t)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7181: FILE: drivers/staging/me4000/me4000.h:919:
+#define ME4000_DIO_GET_BYTE           _IOR (ME4000_MAGIC, 25, me4000_dio_byte_t)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7181: FILE: drivers/staging/me4000/me4000.h:919:
+#define ME4000_DIO_GET_BYTE           _IOR (ME4000_MAGIC, 25, me4000_dio_byte_t)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7182: FILE: drivers/staging/me4000/me4000.h:920:
+#define ME4000_DIO_SET_BYTE           _IOW (ME4000_MAGIC, 26, me4000_dio_byte_t)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7182: FILE: drivers/staging/me4000/me4000.h:920:
+#define ME4000_DIO_SET_BYTE           _IOW (ME4000_MAGIC, 26, me4000_dio_byte_t)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7183: FILE: drivers/staging/me4000/me4000.h:921:
+#define ME4000_DIO_RESET              _IO  (ME4000_MAGIC, 27)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7183: FILE: drivers/staging/me4000/me4000.h:921:
+#define ME4000_DIO_RESET              _IO  (ME4000_MAGIC, 27)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7185: FILE: drivers/staging/me4000/me4000.h:923:
+#define ME4000_CNT_READ               _IOR (ME4000_MAGIC, 28, me4000_cnt_t)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7185: FILE: drivers/staging/me4000/me4000.h:923:
+#define ME4000_CNT_READ               _IOR (ME4000_MAGIC, 28, me4000_cnt_t)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7186: FILE: drivers/staging/me4000/me4000.h:924:
+#define ME4000_CNT_WRITE              _IOW (ME4000_MAGIC, 29, me4000_cnt_t)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7186: FILE: drivers/staging/me4000/me4000.h:924:
+#define ME4000_CNT_WRITE              _IOW (ME4000_MAGIC, 29, me4000_cnt_t)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7187: FILE: drivers/staging/me4000/me4000.h:925:
+#define ME4000_CNT_CONFIG             _IOW (ME4000_MAGIC, 30, me4000_cnt_config_t)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7187: FILE: drivers/staging/me4000/me4000.h:925:
+#define ME4000_CNT_CONFIG             _IOW (ME4000_MAGIC, 30, me4000_cnt_config_t)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7188: FILE: drivers/staging/me4000/me4000.h:926:
+#define ME4000_CNT_RESET              _IO  (ME4000_MAGIC, 31)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7188: FILE: drivers/staging/me4000/me4000.h:926:
+#define ME4000_CNT_RESET              _IO  (ME4000_MAGIC, 31)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7190: FILE: drivers/staging/me4000/me4000.h:928:
+#define ME4000_EXT_INT_DISABLE        _IO  (ME4000_MAGIC, 32)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7190: FILE: drivers/staging/me4000/me4000.h:928:
+#define ME4000_EXT_INT_DISABLE        _IO  (ME4000_MAGIC, 32)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7191: FILE: drivers/staging/me4000/me4000.h:929:
+#define ME4000_EXT_INT_ENABLE         _IO  (ME4000_MAGIC, 33)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7191: FILE: drivers/staging/me4000/me4000.h:929:
+#define ME4000_EXT_INT_ENABLE         _IO  (ME4000_MAGIC, 33)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7192: FILE: drivers/staging/me4000/me4000.h:930:
+#define ME4000_EXT_INT_COUNT          _IOR (ME4000_MAGIC, 34, int)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7192: FILE: drivers/staging/me4000/me4000.h:930:
+#define ME4000_EXT_INT_COUNT          _IOR (ME4000_MAGIC, 34, int)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7194: FILE: drivers/staging/me4000/me4000.h:932:
+#define ME4000_AI_OFFSET_ENABLE       _IO  (ME4000_MAGIC, 35)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7194: FILE: drivers/staging/me4000/me4000.h:932:
+#define ME4000_AI_OFFSET_ENABLE       _IO  (ME4000_MAGIC, 35)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7195: FILE: drivers/staging/me4000/me4000.h:933:
+#define ME4000_AI_OFFSET_DISABLE      _IO  (ME4000_MAGIC, 36)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7195: FILE: drivers/staging/me4000/me4000.h:933:
+#define ME4000_AI_OFFSET_DISABLE      _IO  (ME4000_MAGIC, 36)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7196: FILE: drivers/staging/me4000/me4000.h:934:
+#define ME4000_AI_FULLSCALE_ENABLE    _IO  (ME4000_MAGIC, 37)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7196: FILE: drivers/staging/me4000/me4000.h:934:
+#define ME4000_AI_FULLSCALE_ENABLE    _IO  (ME4000_MAGIC, 37)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7197: FILE: drivers/staging/me4000/me4000.h:935:
+#define ME4000_AI_FULLSCALE_DISABLE   _IO  (ME4000_MAGIC, 38)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7197: FILE: drivers/staging/me4000/me4000.h:935:
+#define ME4000_AI_FULLSCALE_DISABLE   _IO  (ME4000_MAGIC, 38)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7199: FILE: drivers/staging/me4000/me4000.h:937:
+#define ME4000_AI_EEPROM_READ         _IOR (ME4000_MAGIC, 39, me4000_eeprom_t)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7199: FILE: drivers/staging/me4000/me4000.h:937:
+#define ME4000_AI_EEPROM_READ         _IOR (ME4000_MAGIC, 39, me4000_eeprom_t)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7200: FILE: drivers/staging/me4000/me4000.h:938:
+#define ME4000_AI_EEPROM_WRITE        _IOW (ME4000_MAGIC, 40, me4000_eeprom_t)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7200: FILE: drivers/staging/me4000/me4000.h:938:
+#define ME4000_AI_EEPROM_WRITE        _IOW (ME4000_MAGIC, 40, me4000_eeprom_t)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7202: FILE: drivers/staging/me4000/me4000.h:940:
+#define ME4000_AO_SIMULTANEOUS_EX_TRIG _IO  (ME4000_MAGIC, 41)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7202: FILE: drivers/staging/me4000/me4000.h:940:
+#define ME4000_AO_SIMULTANEOUS_EX_TRIG _IO  (ME4000_MAGIC, 41)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7203: FILE: drivers/staging/me4000/me4000.h:941:
+#define ME4000_AO_SIMULTANEOUS_SW      _IO  (ME4000_MAGIC, 42)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7203: FILE: drivers/staging/me4000/me4000.h:941:
+#define ME4000_AO_SIMULTANEOUS_SW      _IO  (ME4000_MAGIC, 42)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7204: FILE: drivers/staging/me4000/me4000.h:942:
+#define ME4000_AO_SIMULTANEOUS_DISABLE _IO  (ME4000_MAGIC, 43)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7204: FILE: drivers/staging/me4000/me4000.h:942:
+#define ME4000_AO_SIMULTANEOUS_DISABLE _IO  (ME4000_MAGIC, 43)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7205: FILE: drivers/staging/me4000/me4000.h:943:
+#define ME4000_AO_SIMULTANEOUS_UPDATE  _IOW (ME4000_MAGIC, 44, me4000_ao_channel_list_t)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7205: FILE: drivers/staging/me4000/me4000.h:943:
+#define ME4000_AO_SIMULTANEOUS_UPDATE  _IOW (ME4000_MAGIC, 44, me4000_ao_channel_list_t)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7207: FILE: drivers/staging/me4000/me4000.h:945:
+#define ME4000_AO_SYNCHRONOUS_EX_TRIG  _IO  (ME4000_MAGIC, 45)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7207: FILE: drivers/staging/me4000/me4000.h:945:
+#define ME4000_AO_SYNCHRONOUS_EX_TRIG  _IO  (ME4000_MAGIC, 45)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7208: FILE: drivers/staging/me4000/me4000.h:946:
+#define ME4000_AO_SYNCHRONOUS_SW       _IO  (ME4000_MAGIC, 46)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7208: FILE: drivers/staging/me4000/me4000.h:946:
+#define ME4000_AO_SYNCHRONOUS_SW       _IO  (ME4000_MAGIC, 46)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7209: FILE: drivers/staging/me4000/me4000.h:947:
+#define ME4000_AO_SYNCHRONOUS_DISABLE  _IO  (ME4000_MAGIC, 47)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7209: FILE: drivers/staging/me4000/me4000.h:947:
+#define ME4000_AO_SYNCHRONOUS_DISABLE  _IO  (ME4000_MAGIC, 47)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7211: FILE: drivers/staging/me4000/me4000.h:949:
+#define ME4000_AO_EX_TRIG_TIMEOUT      _IOW (ME4000_MAGIC, 48, unsigned long)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7211: FILE: drivers/staging/me4000/me4000.h:949:
+#define ME4000_AO_EX_TRIG_TIMEOUT      _IOW (ME4000_MAGIC, 48, unsigned long)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7212: FILE: drivers/staging/me4000/me4000.h:950:
+#define ME4000_AO_GET_FREE_BUFFER      _IOR (ME4000_MAGIC, 49, unsigned long)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7212: FILE: drivers/staging/me4000/me4000.h:950:
+#define ME4000_AO_GET_FREE_BUFFER      _IOR (ME4000_MAGIC, 49, unsigned long)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7214: FILE: drivers/staging/me4000/me4000.h:952:
+#define ME4000_AI_GET_COUNT_BUFFER     _IOR (ME4000_MAGIC, 50, unsigned long)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#7214: FILE: drivers/staging/me4000/me4000.h:952:
+#define ME4000_AI_GET_COUNT_BUFFER     _IOR (ME4000_MAGIC, 50, unsigned long)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000218393.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 195 errors, 928 warnings, 141 checks, 7121 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000218393.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
