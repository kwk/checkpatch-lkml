WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
* Rename ide-cd kernel module to ide-cd_mod in preparation to moving code out

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#75: FILE: drivers/ide/Kconfig:209:
+config BLK_DEV_IDECD_VERBOSE_ERRORS
+	bool "Verbose error logging for IDE/ATAPI CDROM driver" if EMBEDDED
+	depends on BLK_DEV_IDECD
+	default y
+	help
+	  Turn this on to have the driver print out the meanings of the
+	  ATAPI error codes.  This will use up additional 8kB of kernel-space
+	  memory, though.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#497: FILE: drivers/ide/ide-cd.h:149:
+void ide_cd_log_error(const char *, struct request *, struct request_sense *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#497: FILE: drivers/ide/ide-cd.h:149:
+void ide_cd_log_error(const char *, struct request *, struct request_sense *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request_sense *' should also have an identifier name
#497: FILE: drivers/ide/ide-cd.h:149:
+void ide_cd_log_error(const char *, struct request *, struct request_sense *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#505: FILE: drivers/ide/ide-cd_verbose.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#523: FILE: drivers/ide/ide-cd_verbose.c:19:
+	/* Suppress printing unit attention and `in progress of becoming ready'
+	   errors when we're not being verbose. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#523: FILE: drivers/ide/ide-cd_verbose.c:19:
+	   errors when we're not being verbose. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#529: FILE: drivers/ide/ide-cd_verbose.c:25:
+	printk(KERN_ERR "%s: error code: 0x%02x  sense_key: 0x%02x  "

WARNING:SPLIT_STRING: quoted string split across lines
#530: FILE: drivers/ide/ide-cd_verbose.c:26:
+	printk(KERN_ERR "%s: error code: 0x%02x  sense_key: 0x%02x  "
+			"asc: 0x%02x  ascq: 0x%02x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#536: FILE: drivers/ide/ide-cd_verbose.c:32:
+ * From Table 57 of the SFF8090 Ver. 3 (Mt. Fuji) draft standard. */

WARNING:SPLIT_STRING: quoted string split across lines
#637: FILE: drivers/ide/ide-cd_verbose.c:133:
+	{ 0x015d00, "Failure prediction threshold exceeded"
+		    " - Predicted logical unit failure" },

WARNING:SPLIT_STRING: quoted string split across lines
#639: FILE: drivers/ide/ide-cd_verbose.c:135:
+	{ 0x015d01, "Failure prediction threshold exceeded"
+		    " - Predicted media failure" },

WARNING:SPLIT_STRING: quoted string split across lines
#645: FILE: drivers/ide/ide-cd_verbose.c:141:
+	{ 0x020401, "Logical unit not ready"
+		    " - in progress [sic] of becoming ready" },

WARNING:SPLIT_STRING: quoted string split across lines
#718: FILE: drivers/ide/ide-cd_verbose.c:214:
+	{ 0x056f00, "Copy protection key exchange failure"
+		    " - Authentication failure" },

WARNING:SPLIT_STRING: quoted string split across lines
#721: FILE: drivers/ide/ide-cd_verbose.c:217:
+	{ 0x056f02, "Copy protection key exchange failure"
+		     " - Key not established" },

WARNING:SPLIT_STRING: quoted string split across lines
#725: FILE: drivers/ide/ide-cd_verbose.c:221:
+	{ 0x056f05, "Drive region must be permanent"
+		    " / region reset count error" },

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#741: FILE: drivers/ide/ide-cd_verbose.c:237:
+	 * that these can have _any_ key value associated with them... */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#762: FILE: drivers/ide/ide-cd_verbose.c:258:
+	printk(KERN_ERR "ATAPI device %s:\n", name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#764: FILE: drivers/ide/ide-cd_verbose.c:260:
+		printk(KERN_CONT "  Error: ");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#764: FILE: drivers/ide/ide-cd_verbose.c:260:
+		printk(KERN_CONT "  Error: ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#766: FILE: drivers/ide/ide-cd_verbose.c:262:
+		printk("  Deferred Error: ");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#768: FILE: drivers/ide/ide-cd_verbose.c:264:
+		printk(KERN_CONT "  Vendor-specific Error: ");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#768: FILE: drivers/ide/ide-cd_verbose.c:264:
+		printk(KERN_CONT "  Vendor-specific Error: ");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#770: FILE: drivers/ide/ide-cd_verbose.c:266:
+		printk(KERN_CONT "  Unknown Error Type: ");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#770: FILE: drivers/ide/ide-cd_verbose.c:266:
+		printk(KERN_CONT "  Unknown Error Type: ");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#775: FILE: drivers/ide/ide-cd_verbose.c:271:
+	printk(KERN_CONT "%s -- (Sense key=0x%02x)\n", s, sense->sense_key);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#775: FILE: drivers/ide/ide-cd_verbose.c:271:
+	printk(KERN_CONT "%s -- (Sense key=0x%02x)\n", s, sense->sense_key);

CHECK:BRACES: braces {} should be used on all arms of this statement
#792: FILE: drivers/ide/ide-cd_verbose.c:288:
+			if (sense_data_texts[mid].asc_ascq == key ||
[...]
+			} else if (sense_data_texts[mid].asc_ascq > key)
[...]
+			else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#793: FILE: drivers/ide/ide-cd_verbose.c:289:
+			    sense_data_texts[mid].asc_ascq == (0xff0000|key)) {
 			                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!s"
#803: FILE: drivers/ide/ide-cd_verbose.c:299:
+	if (s == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#810: FILE: drivers/ide/ide-cd_verbose.c:306:
+	printk(KERN_ERR "  %s -- (asc=0x%02x, ascq=0x%02x)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#811: FILE: drivers/ide/ide-cd_verbose.c:307:
+	printk(KERN_ERR "  %s -- (asc=0x%02x, ascq=0x%02x)\n",
+			s, sense->asc, sense->ascq);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "failed_command"
#813: FILE: drivers/ide/ide-cd_verbose.c:309:
+	if (failed_command != NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#815: FILE: drivers/ide/ide-cd_verbose.c:311:
+		int lo = 0, mid, hi = ARRAY_SIZE(packet_command_texts);
+		s = NULL;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#831: FILE: drivers/ide/ide-cd_verbose.c:327:
+		printk(KERN_ERR "  The failed \"%s\" packet command "

WARNING:SPLIT_STRING: quoted string split across lines
#832: FILE: drivers/ide/ide-cd_verbose.c:328:
+		printk(KERN_ERR "  The failed \"%s\" packet command "
+				"was: \n  \"", s);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#832: FILE: drivers/ide/ide-cd_verbose.c:328:
+				"was: \n  \"", s);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#834: FILE: drivers/ide/ide-cd_verbose.c:330:
+			printk(KERN_CONT "%02x ", failed_command->cmd[i]);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#834: FILE: drivers/ide/ide-cd_verbose.c:330:
+			printk(KERN_CONT "%02x ", failed_command->cmd[i]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#835: FILE: drivers/ide/ide-cd_verbose.c:331:
+		printk(KERN_CONT "\"\n");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#835: FILE: drivers/ide/ide-cd_verbose.c:331:
+		printk(KERN_CONT "\"\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#846: FILE: drivers/ide/ide-cd_verbose.c:342:
+		printk(KERN_ERR "  Command is %02d%% complete\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#847: FILE: drivers/ide/ide-cd_verbose.c:343:
+		printk(KERN_ERR "  Command is %02d%% complete\n",
+				progress / 0xffff);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#852: FILE: drivers/ide/ide-cd_verbose.c:348:
+		printk(KERN_ERR "  Error in %s byte %d",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#853: FILE: drivers/ide/ide-cd_verbose.c:349:
+		printk(KERN_ERR "  Error in %s byte %d",
+				(sense->sks[0] & 0x40) != 0 ?

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#858: FILE: drivers/ide/ide-cd_verbose.c:354:
+			printk(KERN_CONT " bit %d", sense->sks[0] & 0x07);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#858: FILE: drivers/ide/ide-cd_verbose.c:354:
+			printk(KERN_CONT " bit %d", sense->sks[0] & 0x07);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#860: FILE: drivers/ide/ide-cd_verbose.c:356:
+		printk(KERN_CONT "\n");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#860: FILE: drivers/ide/ide-cd_verbose.c:356:
+		printk(KERN_CONT "\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000345049.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 43 warnings, 7 checks, 770 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000345049.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
