WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
This patch introduces three new hooks. The inode_getsecctx hook is used to get

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#78: FILE: include/linux/security.h:1362:
+ * ^IMust be called with inode->i_mutex locked.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#80: FILE: include/linux/security.h:1364:
+ * ^I@inode we wish to set the security context of.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#81: FILE: include/linux/security.h:1365:
+ * ^I@ctx contains the string which we wish to set in the inode.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#82: FILE: include/linux/security.h:1366:
+ * ^I@ctxlen contains the length of @ctx.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#85: FILE: include/linux/security.h:1369:
+ * ^IChange the security context of an inode.  Updates the$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#86: FILE: include/linux/security.h:1370:
+ * ^Iincore security context managed by the security module and invokes the$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#87: FILE: include/linux/security.h:1371:
+ * ^Ifs code as needed (via __vfs_setxattr_noperm) to update any backing$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#88: FILE: include/linux/security.h:1372:
+ * ^Ixattrs that represent the context.  Example usage:  NFS server invokes$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#89: FILE: include/linux/security.h:1373:
+ * ^Ithis hook to change the security context in its incore inode and on the$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#90: FILE: include/linux/security.h:1374:
+ * ^Ibacking filesystem to a value provided by the client on a SETATTR$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#91: FILE: include/linux/security.h:1375:
+ * ^Ioperation.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#93: FILE: include/linux/security.h:1377:
+ * ^IMust be called with inode->i_mutex locked.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#95: FILE: include/linux/security.h:1379:
+ * ^I@dentry contains the inode we wish to set the security context of.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#96: FILE: include/linux/security.h:1380:
+ * ^I@ctx contains the string which we wish to set in the inode.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#97: FILE: include/linux/security.h:1381:
+ * ^I@ctxlen contains the length of @ctx.$

WARNING:TYPO_SPELLING: 'relavent' may be misspelled - perhaps 'relevant'?
#100: FILE: include/linux/security.h:1384:
+ * 	Returns a string containing all relavent security context information
    	                                ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#100: FILE: include/linux/security.h:1384:
+ * ^IReturns a string containing all relavent security context information$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#102: FILE: include/linux/security.h:1386:
+ * ^I@inode we wish to set the security context of.$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#138: FILE: include/linux/security.h:2587:
+}
+static inline int security_inode_setsecctx(struct dentry *dentry, void *ctx, u32 ctxlen)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#142: FILE: include/linux/security.h:2591:
+}
+static inline int security_inode_getsecctx(struct inode *inode, void **ctx, u32 *ctxlen)

WARNING:LINE_SPACING: Missing a blank line after declarations
#240: FILE: security/selinux/hooks.c:5274:
+	int len = 0;
+	len = selinux_inode_getsecurity(inode, XATTR_SELINUX_SUFFIX,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#241: FILE: security/selinux/hooks.c:5275:
+	len = selinux_inode_getsecurity(inode, XATTR_SELINUX_SUFFIX,
+						ctx, true);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#275: FILE: security/smack/smack_lsm.c:3039:
+^Ireturn __vfs_setxattr_noperm(dentry, XATTR_NAME_SMACK, ctx, ctxlen, 0);^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#281: FILE: security/smack/smack_lsm.c:3045:
+	int len = 0;
+	len = smack_inode_getsecurity(inode, XATTR_SMACK_SUFFIX, ctx, true);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000076738.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 21 warnings, 3 checks, 209 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000076738.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
