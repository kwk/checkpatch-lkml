WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
14:45:51.237238 Out 00:1b:21:xx:xx:xx ethertype Unknown (0x0033), length 72:

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: pcap-linux.c:1936:
+       printf("Using %s filter\n", handle->md.use_bpf?"kernel":"userland");$

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#113: FILE: pcap-linux.c:1936:
+       printf("Using %s filter\n", handle->md.use_bpf?"kernel":"userland");
                                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#113: FILE: pcap-linux.c:1936:
+       printf("Using %s filter\n", handle->md.use_bpf?"kernel":"userland");
                                                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: pcap-linux.c:3104:
+               bp = (unsigned char*)h.raw + tp_mac;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: pcap-linux.c:3104:
+               bp = (unsigned char*)h.raw + tp_mac;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#150: FILE: pcap-linux.c:3104:
+               bp = (unsigned char*)h.raw + tp_mac;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: pcap-linux.c:3146:
+                       tp_snaplen += SLL_HDR_LEN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: pcap-linux.c:3146:
+                       tp_snaplen += SLL_HDR_LEN;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: pcap-linux.c:3147:
+                       tp_len += SLL_HDR_LEN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: pcap-linux.c:3147:
+                       tp_len += SLL_HDR_LEN;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: pcap-linux.c:3151:
+               /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: pcap-linux.c:3152:
+                * Add VLAN TAG if set in TPACKET2$

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: pcap-linux.c:3153:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: pcap-linux.c:3154:
+               if (handle->md.tp_version == TPACKET_V2 && (h.h2->tp_vlan_tci)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: pcap-linux.c:3154:
+               if (handle->md.tp_version == TPACKET_V2 && (h.h2->tp_vlan_tci)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#170: FILE: pcap-linux.c:3154:
+               if (handle->md.tp_version == TPACKET_V2 && (h.h2->tp_vlan_tci)) {
                        struct vlan_tag *tag;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'h.h2->tp_vlan_tci'
#170: FILE: pcap-linux.c:3154:
+               if (handle->md.tp_version == TPACKET_V2 && (h.h2->tp_vlan_tci)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: pcap-linux.c:3156:
+                       int ethlen;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: pcap-linux.c:3156:
+                       int ethlen;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: pcap-linux.c:3160:
+                       if (!handle->md.cooked) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: pcap-linux.c:3160:
+                       if (!handle->md.cooked) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#178: FILE: pcap-linux.c:3160:
+                       if (!handle->md.cooked) {
+                               ethlen = 2 * ETH_ALEN;

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#178: FILE: pcap-linux.c:3160:
+                       if (!handle->md.cooked) {
[...]
+                       } else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: pcap-linux.c:3161:
+                               ethlen = 2 * ETH_ALEN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: pcap-linux.c:3161:
+                               ethlen = 2 * ETH_ALEN;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: pcap-linux.c:3162:
+                       } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: pcap-linux.c:3162:
+                       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#180: FILE: pcap-linux.c:3162:
+                       } else {
+                               ethlen = sizeof(struct sll_header) - sizeof(sll->sll_protocol);

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: pcap-linux.c:3163:
+                               ethlen = sizeof(struct sll_header) - sizeof(sll->sll_protocol);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: pcap-linux.c:3163:
+                               ethlen = sizeof(struct sll_header) - sizeof(sll->sll_protocol);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: pcap-linux.c:3164:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: pcap-linux.c:3164:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: pcap-linux.c:3165:
+                       memmove(bp, bp + VLAN_TAG_LEN, ethlen);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: pcap-linux.c:3165:
+                       memmove(bp, bp + VLAN_TAG_LEN, ethlen);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#184: FILE: pcap-linux.c:3166:
+                       tag = (struct vlan_tag *)(bp + ethlen);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: pcap-linux.c:3166:
+                       tag = (struct vlan_tag *)(bp + ethlen);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: pcap-linux.c:3171:
+                       tp_snaplen += VLAN_TAG_LEN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: pcap-linux.c:3171:
+                       tp_snaplen += VLAN_TAG_LEN;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: pcap-linux.c:3172:
+                       tp_len += VLAN_TAG_LEN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: pcap-linux.c:3172:
+                       tp_len += VLAN_TAG_LEN;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#196: FILE: pcap-linux.c:3176:
+               /* run filter on received packet$

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: pcap-linux.c:3177:
+                * If the kernel filtering is enabled we need to run the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: pcap-linux.c:3178:
+                * filter until all the frames present into the ring$

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: pcap-linux.c:3179:
+                * at filter creation time are processed.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: pcap-linux.c:3180:
+                * In such case md.use_bpf is used as a counter for the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: pcap-linux.c:3181:
+                * packet we need to filter.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: pcap-linux.c:3182:
+                * Note: alternatively it could be possible to stop applying$

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: pcap-linux.c:3183:
+                * the filter when the ring became empty, but it can possibly$

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: pcap-linux.c:3184:
+                * happen a lot later... */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#204: FILE: pcap-linux.c:3184:
+                * happen a lot later... */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: pcap-linux.c:3185:
+               run_bpf = (!handle->md.use_bpf) ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: pcap-linux.c:3185:
+               run_bpf = (!handle->md.use_bpf) ||$

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: pcap-linux.c:3186:
+                       ((handle->md.use_bpf>1) && handle->md.use_bpf--);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: pcap-linux.c:3186:
+                       ((handle->md.use_bpf>1) && handle->md.use_bpf--);$

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#206: FILE: pcap-linux.c:3186:
+                       ((handle->md.use_bpf>1) && handle->md.use_bpf--);
                                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: pcap-linux.c:3187:
+               if (run_bpf && handle->fcode.bf_insns &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: pcap-linux.c:3187:
+               if (run_bpf && handle->fcode.bf_insns &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#207: FILE: pcap-linux.c:3187:
+               if (run_bpf && handle->fcode.bf_insns &&
[...]
+                       goto skip;

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: pcap-linux.c:3188:
+                               (bpf_filter(handle->fcode.bf_insns, bp,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#208: FILE: pcap-linux.c:3188:
+               if (run_bpf && handle->fcode.bf_insns &&
+                               (bpf_filter(handle->fcode.bf_insns, bp,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: pcap-linux.c:3188:
+                               (bpf_filter(handle->fcode.bf_insns, bp,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: pcap-linux.c:3189:
+                                       tp_len, tp_snaplen) == 0))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: pcap-linux.c:3189:
+                                       tp_len, tp_snaplen) == 0))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: pcap-linux.c:3190:
+                       goto skip;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: pcap-linux.c:3190:
+                       goto skip;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: pcap-linux.c:3192:
+               /* get required packet info from ring header */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: pcap-linux.c:3193:
+               pcaphdr.ts.tv_sec = tp_sec;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: pcap-linux.c:3193:
+               pcaphdr.ts.tv_sec = tp_sec;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: pcap-linux.c:3194:
+               pcaphdr.ts.tv_usec = tp_usec;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: pcap-linux.c:3194:
+               pcaphdr.ts.tv_usec = tp_usec;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: pcap-linux.c:3195:
+               pcaphdr.caplen = tp_snaplen;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: pcap-linux.c:3195:
+               pcaphdr.caplen = tp_snaplen;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: pcap-linux.c:3196:
+               pcaphdr.len = tp_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: pcap-linux.c:3196:
+               pcaphdr.len = tp_len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: pcap-linux.c:4311:
+        * Is filter testing some encapsulated packets - VLAN, MPLS?$

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: pcap-linux.c:4312:
+        * put to userland after encapsulated packet is restored from TCI$

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: pcap-linux.c:4313:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: pcap-linux.c:4314:
+       if (handle->md.tp_version == TPACKET_V2 && orig_nl!=-1U)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#237: FILE: pcap-linux.c:4314:
+       if (handle->md.tp_version == TPACKET_V2 && orig_nl!=-1U)
+               return 0;

ERROR:SPACING: spaces required around that '!=' (ctx:VxO)
#237: FILE: pcap-linux.c:4314:
+       if (handle->md.tp_version == TPACKET_V2 && orig_nl!=-1U)
                                                          ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#237: FILE: pcap-linux.c:4314:
+       if (handle->md.tp_version == TPACKET_V2 && orig_nl!=-1U)
                                                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: pcap-linux.c:4315:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: pcap-linux.c:4315:
+               return 0;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000028134.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 45 errors, 35 warnings, 4 checks, 128 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000028134.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
