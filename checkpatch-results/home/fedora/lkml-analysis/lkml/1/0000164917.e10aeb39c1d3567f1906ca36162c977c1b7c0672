WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#55: 
 arch/arm/{mach-pxa => plat-pxa}/dma.c |    6 +-

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#242: FILE: arch/arm/plat-pxa/dma.c:2:
+ *  linux/arch/arm/plat-pxa/dma.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#263: FILE: arch/arm/plat-pxa/include/plat/dma.h:1:
+#ifndef __PLAT_DMA_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#266: FILE: arch/arm/plat-pxa/include/plat/dma.h:4:
+#define DMAC_REG(x)	(*((volatile u32 *)(DMAC_REGS_VIRT + (x))))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#275: FILE: arch/arm/plat-pxa/include/plat/dma.h:13:
+#define DRCMR(n)	DMAC_REG((((n) < 64) ? 0x0100 : 0x1100) + \
+				 (((n) & 0x3f) << 2))

CHECK:BIT_MACRO: Prefer using the BIT macro
#278: FILE: arch/arm/plat-pxa/include/plat/dma.h:16:
+#define DCSR_RUN	(1 << 31)	/* Run Bit (read / write) */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#279: FILE: arch/arm/plat-pxa/include/plat/dma.h:17:
+#define DCSR_NODESC	(1 << 30)	/* No-Descriptor Fetch (read / write) */

CHECK:BIT_MACRO: Prefer using the BIT macro
#280: FILE: arch/arm/plat-pxa/include/plat/dma.h:18:
+#define DCSR_STOPIRQEN	(1 << 29)	/* Stop Interrupt Enable (read / write) */

CHECK:BIT_MACRO: Prefer using the BIT macro
#281: FILE: arch/arm/plat-pxa/include/plat/dma.h:19:
+#define DCSR_REQPEND	(1 << 8)	/* Request Pending (read-only) */

CHECK:BIT_MACRO: Prefer using the BIT macro
#282: FILE: arch/arm/plat-pxa/include/plat/dma.h:20:
+#define DCSR_STOPSTATE	(1 << 3)	/* Stop State (read-only) */

CHECK:BIT_MACRO: Prefer using the BIT macro
#283: FILE: arch/arm/plat-pxa/include/plat/dma.h:21:
+#define DCSR_ENDINTR	(1 << 2)	/* End Interrupt (read / write) */

CHECK:BIT_MACRO: Prefer using the BIT macro
#284: FILE: arch/arm/plat-pxa/include/plat/dma.h:22:
+#define DCSR_STARTINTR	(1 << 1)	/* Start Interrupt (read / write) */

CHECK:BIT_MACRO: Prefer using the BIT macro
#285: FILE: arch/arm/plat-pxa/include/plat/dma.h:23:
+#define DCSR_BUSERR	(1 << 0)	/* Bus Error Interrupt (read / write) */

CHECK:BIT_MACRO: Prefer using the BIT macro
#287: FILE: arch/arm/plat-pxa/include/plat/dma.h:25:
+#define DCSR_EORIRQEN	(1 << 28)       /* End of Receive Interrupt Enable (R/W) */

CHECK:BIT_MACRO: Prefer using the BIT macro
#288: FILE: arch/arm/plat-pxa/include/plat/dma.h:26:
+#define DCSR_EORJMPEN	(1 << 27)       /* Jump to next descriptor on EOR */

CHECK:BIT_MACRO: Prefer using the BIT macro
#289: FILE: arch/arm/plat-pxa/include/plat/dma.h:27:
+#define DCSR_EORSTOPEN	(1 << 26)       /* STOP on an EOR */

CHECK:BIT_MACRO: Prefer using the BIT macro
#290: FILE: arch/arm/plat-pxa/include/plat/dma.h:28:
+#define DCSR_SETCMPST	(1 << 25)       /* Set Descriptor Compare Status */

CHECK:BIT_MACRO: Prefer using the BIT macro
#291: FILE: arch/arm/plat-pxa/include/plat/dma.h:29:
+#define DCSR_CLRCMPST	(1 << 24)       /* Clear Descriptor Compare Status */

CHECK:BIT_MACRO: Prefer using the BIT macro
#292: FILE: arch/arm/plat-pxa/include/plat/dma.h:30:
+#define DCSR_CMPST	(1 << 10)       /* The Descriptor Compare Status */

CHECK:BIT_MACRO: Prefer using the BIT macro
#293: FILE: arch/arm/plat-pxa/include/plat/dma.h:31:
+#define DCSR_EORINTR	(1 << 9)        /* The end of Receive */

CHECK:BIT_MACRO: Prefer using the BIT macro
#295: FILE: arch/arm/plat-pxa/include/plat/dma.h:33:
+#define DRCMR_MAPVLD	(1 << 7)	/* Map Valid (read / write) */

CHECK:BIT_MACRO: Prefer using the BIT macro
#299: FILE: arch/arm/plat-pxa/include/plat/dma.h:37:
+#define DDADR_STOP	(1 << 0)	/* Stop (read / write) */

CHECK:BIT_MACRO: Prefer using the BIT macro
#301: FILE: arch/arm/plat-pxa/include/plat/dma.h:39:
+#define DCMD_INCSRCADDR	(1 << 31)	/* Source Address Increment Setting. */

CHECK:BIT_MACRO: Prefer using the BIT macro
#302: FILE: arch/arm/plat-pxa/include/plat/dma.h:40:
+#define DCMD_INCTRGADDR	(1 << 30)	/* Target Address Increment Setting. */

CHECK:BIT_MACRO: Prefer using the BIT macro
#303: FILE: arch/arm/plat-pxa/include/plat/dma.h:41:
+#define DCMD_FLOWSRC	(1 << 29)	/* Flow Control by the source. */

CHECK:BIT_MACRO: Prefer using the BIT macro
#304: FILE: arch/arm/plat-pxa/include/plat/dma.h:42:
+#define DCMD_FLOWTRG	(1 << 28)	/* Flow Control by the target. */

CHECK:BIT_MACRO: Prefer using the BIT macro
#305: FILE: arch/arm/plat-pxa/include/plat/dma.h:43:
+#define DCMD_STARTIRQEN	(1 << 22)	/* Start Interrupt Enable */

CHECK:BIT_MACRO: Prefer using the BIT macro
#306: FILE: arch/arm/plat-pxa/include/plat/dma.h:44:
+#define DCMD_ENDIRQEN	(1 << 21)	/* End Interrupt Enable */

CHECK:BIT_MACRO: Prefer using the BIT macro
#307: FILE: arch/arm/plat-pxa/include/plat/dma.h:45:
+#define DCMD_ENDIAN	(1 << 18)	/* Device Endian-ness. */

CHECK:BIT_MACRO: Prefer using the BIT macro
#308: FILE: arch/arm/plat-pxa/include/plat/dma.h:46:
+#define DCMD_BURST8	(1 << 16)	/* 8 byte burst */

CHECK:BIT_MACRO: Prefer using the BIT macro
#311: FILE: arch/arm/plat-pxa/include/plat/dma.h:49:
+#define DCMD_WIDTH1	(1 << 14)	/* 1 byte width */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#321: FILE: arch/arm/plat-pxa/include/plat/dma.h:59:
+typedef struct pxa_dma_desc {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#322: FILE: arch/arm/plat-pxa/include/plat/dma.h:60:
+	volatile u32 ddadr;	/* Points to the next descriptor + flags */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#323: FILE: arch/arm/plat-pxa/include/plat/dma.h:61:
+	volatile u32 dsadr;	/* DSADR value for the current transfer */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#324: FILE: arch/arm/plat-pxa/include/plat/dma.h:62:
+	volatile u32 dtadr;	/* DTADR value for the current transfer */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#325: FILE: arch/arm/plat-pxa/include/plat/dma.h:63:
+	volatile u32 dcmd;	/* DCMD value for the current transfer */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#328: FILE: arch/arm/plat-pxa/include/plat/dma.h:66:
+typedef enum {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#340: FILE: arch/arm/plat-pxa/include/plat/dma.h:78:
+int pxa_request_dma (char *name,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#341: FILE: arch/arm/plat-pxa/include/plat/dma.h:79:
+int pxa_request_dma (char *name,
+			 pxa_dma_prio prio,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#345: FILE: arch/arm/plat-pxa/include/plat/dma.h:83:
+void pxa_free_dma (int dma_ch);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000164917.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 12 warnings, 28 checks, 236 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000164917.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
