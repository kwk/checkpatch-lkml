WARNING:TYPO_SPELLING: 'improvments' may be misspelled - perhaps 'improvements'?
#30: 
  * Fix some small bugs (or code efficiency improvments) for various uses
                                            ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#88: FILE: drivers/base/node.c:29:
+	BUILD_BUG_ON((NR_CPUS/32 * 9) > (PAGE_SIZE-1));
 	                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#88: FILE: drivers/base/node.c:29:
+	BUILD_BUG_ON((NR_CPUS/32 * 9) > (PAGE_SIZE-1));
 	                                          ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#88: FILE: drivers/base/node.c:29:
+	BUILD_BUG_ON((NR_CPUS/32 * 9) > (PAGE_SIZE-1));

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#91: FILE: drivers/base/node.c:31:
+	len = type?
 	          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#92: FILE: drivers/base/node.c:32:
+		cpulist_scnprintf(buf, PAGE_SIZE-2, *mask):
 		                                ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#92: FILE: drivers/base/node.c:32:
+		cpulist_scnprintf(buf, PAGE_SIZE-2, *mask):
 		                                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#93: FILE: drivers/base/node.c:33:
+		cpumask_scnprintf(buf, PAGE_SIZE-2, *mask);
 		                                ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#104: FILE: drivers/base/node.c:43:
+}
+static inline ssize_t node_read_cpulist(struct sys_device *dev, char *buf)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#109: FILE: drivers/base/node.c:48:
+static SYSDEV_ATTR(cpumap,  S_IRUGO, node_read_cpumask, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#110: FILE: drivers/base/node.c:49:
+static SYSDEV_ATTR(cpulist, S_IRUGO, node_read_cpulist, NULL);

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#144: FILE: drivers/base/topology.c:49:
+		n = type?
 		        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#145: FILE: drivers/base/topology.c:50:
+			cpulist_scnprintf(buf, len-2, *mask):
 			                          ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#145: FILE: drivers/base/topology.c:50:
+			cpulist_scnprintf(buf, len-2, *mask):
 			                                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#146: FILE: drivers/base/topology.c:51:
+			cpumask_scnprintf(buf, len-2, *mask);
 			                          ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#170: FILE: drivers/base/topology.c:72:
+#define define_siblings_show_func(name)		\
+	define_siblings_show_map(name); define_siblings_show_list(name)

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#170: FILE: drivers/base/topology.c:72:
+#define define_siblings_show_func(name)		\
+	define_siblings_show_map(name); define_siblings_show_list(name)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#182: FILE: drivers/base/topology.c:95:
+#define ref_thread_siblings_attr	\
+		&attr_thread_siblings.attr, &attr_thread_siblings_list.attr,

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#193: FILE: drivers/base/topology.c:105:
+#define ref_core_siblings_attr		\
+		&attr_core_siblings.attr, &attr_core_siblings_list.attr,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#211: FILE: drivers/pci/pci-sysfs.c:81:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#213: FILE: drivers/pci/pci-sysfs.c:83:
+static ssize_t local_cpulist_show(struct device *dev,
+			struct device_attribute *attr, char *buf)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#219: FILE: drivers/pci/pci-sysfs.c:89:
+	len = cpulist_scnprintf(buf, PAGE_SIZE-2, mask);
 	                                      ^

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#251: FILE: drivers/pci/probe.c:93:
+	ret = type?
 	          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#252: FILE: drivers/pci/probe.c:94:
+		cpulist_scnprintf(buf, PAGE_SIZE-2, cpumask):
 		                                ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#252: FILE: drivers/pci/probe.c:94:
+		cpulist_scnprintf(buf, PAGE_SIZE-2, cpumask):
 		                                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#253: FILE: drivers/pci/probe.c:95:
+		cpumask_scnprintf(buf, PAGE_SIZE-2, cpumask);
 		                                ^

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#260: FILE: drivers/pci/probe.c:101:
+static ssize_t inline pci_bus_show_cpumaskaffinity(struct device *dev,

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#261: FILE: drivers/pci/probe.c:102:
+static ssize_t inline pci_bus_show_cpumaskaffinity(struct device *dev,
+					struct device_attribute *attr,

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#267: FILE: drivers/pci/probe.c:108:
+static ssize_t inline pci_bus_show_cpulistaffinity(struct device *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#268: FILE: drivers/pci/probe.c:109:
+static ssize_t inline pci_bus_show_cpulistaffinity(struct device *dev,
+					struct device_attribute *attr,

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'pci_bus_show_cpumaskaffinity' to 'cpuaffinity_show'
#272: FILE: drivers/pci/probe.c:113:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#274: FILE: drivers/pci/probe.c:115:
+DEVICE_ATTR(cpuaffinity,     S_IRUGO, pci_bus_show_cpumaskaffinity, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'pci_bus_show_cpulistaffinity' to 'cpulistaffinity_show'
#275: FILE: drivers/pci/probe.c:116:
+DEVICE_ATTR(cpulistaffinity, S_IRUGO, pci_bus_show_cpulistaffinity, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#275: FILE: drivers/pci/probe.c:116:
+DEVICE_ATTR(cpulistaffinity, S_IRUGO, pci_bus_show_cpulistaffinity, NULL);

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#285: FILE: kernel/cpuset.c:2372:
+	seq_printf(m, "Cpus_allowed_list:\t");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#288: FILE: kernel/cpuset.c:2375:
+	seq_printf(m, "\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#293: FILE: kernel/cpuset.c:2380:
+	seq_printf(m, "Mems_allowed_list:\t");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#296: FILE: kernel/cpuset.c:2383:
+	seq_printf(m, "\n");

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#304: FILE: kernel/sched_stats.h:12:
+	int mask_len = NR_CPUS/32 * 9;
 	                      ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#304: FILE: kernel/sched_stats.h:12:
+	int mask_len = NR_CPUS/32 * 9;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mask_str"
#307: FILE: kernel/sched_stats.h:15:
+	if (mask_str == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000298060.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 11 errors, 13 warnings, 17 checks, 226 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000298060.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
