WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
In linear cramfs, it is used to suport XIP on NOR. However it is also helpful on OneNAND. It makes a filesystem faster by removing compression overhead.

WARNING:TYPO_SPELLING: 'suport' may be misspelled - perhaps 'support'?
#31: 
In linear cramfs, it is used to suport XIP on NOR. However it is also helpful on OneNAND. It makes a filesystem faster by removing compression overhead.
                                ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#71: FILE: fs/cramfs/inode.c:149:
+static void *cramfs_read(struct super_block *sb, unsigned int offset, unsigned int len, struct page **pg)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#80: FILE: fs/cramfs/inode.c:180:
+^I * Use page directly either $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#86: FILE: fs/cramfs/inode.c:186:
+		struct page *page = NULL;
+		page = read_mapping_page(mapping, blocknr, NULL);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#120: FILE: fs/cramfs/inode.c:388:
+		de = cramfs_read(sb, OFFSET(inode) + offset, sizeof(*de)+256, NULL);
 		                                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#129: FILE: fs/cramfs/inode.c:438:
+		de = cramfs_read(dir->i_sb, OFFSET(dir) + offset, sizeof(*de)+256, NULL);
 		                                                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#155: FILE: fs/cramfs/inode.c:500:
+		memcpy(pgdata,
+			cramfs_read(sb, blkptr_offset, PAGE_CACHE_SIZE, &pg),

CHECK:SPACING: No space is necessary after a cast
#172: FILE: fs/cramfs/inode.c:515:
+			start_offset = *(u32 *) cramfs_read(sb, blkptr_offset-4, 4, NULL);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#172: FILE: fs/cramfs/inode.c:515:
+			start_offset = *(u32 *) cramfs_read(sb, blkptr_offset-4, 4, NULL);
 			                                                     ^

CHECK:SPACING: No space is necessary after a cast
#173: FILE: fs/cramfs/inode.c:516:
+		compr_len = (*(u32 *) cramfs_read(sb, blkptr_offset, 4, &pg) - start_offset);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000333609.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 4 warnings, 6 checks, 135 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000333609.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
