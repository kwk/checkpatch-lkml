WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
The following documentation is added to illuminate the working of this state

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#369: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#709: FILE: fs/fscache/fsc-internal.h:67:
+extern void fscache_withdrawing_object(struct fscache_cache *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fscache_cache *' should also have an identifier name
#709: FILE: fs/fscache/fsc-internal.h:67:
+extern void fscache_withdrawing_object(struct fscache_cache *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fscache_object *' should also have an identifier name
#709: FILE: fs/fscache/fsc-internal.h:67:
+extern void fscache_withdrawing_object(struct fscache_cache *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#711: FILE: fs/fscache/fsc-internal.h:69:
+extern void fscache_enqueue_object(struct fscache_object *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fscache_object *' should also have an identifier name
#711: FILE: fs/fscache/fsc-internal.h:69:
+extern void fscache_enqueue_object(struct fscache_object *);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#716: FILE: fs/fscache/fsc-internal.h:74:
+#define fscache_start_operations(obj) BUG()

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#737: FILE: fs/fscache/fsc-internal.h:211:
+	BUG_ON(atomic_read(&cookie->usage) <= 0);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#749: FILE: fs/fscache/fsc-object.c:1:
+/* FS-Cache object state machine handler

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "object"
#833: FILE: fs/fscache/fsc-object.c:85:
+	ASSERT(object != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#858: FILE: fs/fscache/fsc-object.c:110:
+		 * operations and queue dependent operations for processing */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#890: FILE: fs/fscache/fsc-object.c:142:
+		 * and the death of all child objects of this object */

WARNING:INDENTED_LABEL: labels should not be indented
#892: FILE: fs/fscache/fsc-object.c:144:
+	dying:

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#935: FILE: fs/fscache/fsc-object.c:187:
+		 * obsolete too */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#951: FILE: fs/fscache/fsc-object.c:203:
+		 * active service */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#966: FILE: fs/fscache/fsc-object.c:218:
+		 * deceased */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#968: FILE: fs/fscache/fsc-object.c:220:
+		printk(KERN_ERR "FS-Cache:"

WARNING:SPLIT_STRING: quoted string split across lines
#969: FILE: fs/fscache/fsc-object.c:221:
+		printk(KERN_ERR "FS-Cache:"
+		       " Unexpected event in dead state %lx\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#971: FILE: fs/fscache/fsc-object.c:223:
+		BUG();

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#974: FILE: fs/fscache/fsc-object.c:226:
+		printk(KERN_ERR "FS-Cache: Unknown object state %u\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#976: FILE: fs/fscache/fsc-object.c:228:
+		BUG();

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1049: FILE: fs/fscache/fsc-object.c:301:
+	printk(KERN_ERR "FS-Cache:"

WARNING:SPLIT_STRING: quoted string split across lines
#1050: FILE: fs/fscache/fsc-object.c:302:
+	printk(KERN_ERR "FS-Cache:"
+	       " Unsupported event %lx [mask %lx] in state %s\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1053: FILE: fs/fscache/fsc-object.c:305:
+	BUG();

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "object->cookie"
#1090: FILE: fs/fscache/fsc-object.c:342:
+	ASSERT(object->cookie != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "object->cookie->parent"
#1091: FILE: fs/fscache/fsc-object.c:343:
+	ASSERT(object->cookie->parent != NULL);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1125: FILE: fs/fscache/fsc-object.c:377:
+			 * add ourself to the list multiple times */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1131: FILE: fs/fscache/fsc-object.c:383:
+				 * to wake the chain up */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "parent"
#1168: FILE: fs/fscache/fsc-object.c:420:
+	ASSERT(parent != NULL);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1215: FILE: fs/fscache/fsc-object.c:467:
+		 * and read requests to begin returning ENODATA */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1255: FILE: fs/fscache/fsc-object.c:507:
+	 * result, in which case there may be data available */

WARNING:MEMORY_BARRIER: memory barrier without comment
#1277: FILE: fs/fscache/fsc-object.c:529:
+		smp_wmb();

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1379: FILE: fs/fscache/fsc-object.c:631:
+		 * from the object pointer */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1486: FILE: fs/fscache/fsc-object.c:738:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1552: FILE: fs/fscache/fsc-object.c:804:
+		BUG();

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000201680.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 29 warnings, 7 checks, 1178 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000201680.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
