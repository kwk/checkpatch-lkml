ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#143: FILE: arch/alpha/boot/misc.c:80:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#207: FILE: arch/alpha/boot/misc.c:160:
+	free_mem_end_ptr	=3D (ulg)output_start + ksize + 0x200000;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#207: FILE: arch/alpha/boot/misc.c:160:
+	free_mem_end_ptr	=3D (ulg)output_start + ksize + 0x200000;
 	                	^

ERROR:DEFINE_ARCH_HAS: #define of 'ARCH_HAS_DECOMP_WDOG' is wrong - use Kconfig variables or standard guards instead
#287: FILE: arch/arm/boot/compressed/misc.c:235:
+#define ARCH_HAS_DECOMP_WDOG

The ARCH_HAS_xyz and ARCH_HAVE_xyz patterns are wrong.

For big conceptual features use Kconfig symbols instead.  And for
smaller things where we have compatibility fallback functions but
want architectures able to override them with optimized ones, we
should either use weak functions (appropriate for some cases), or
the symbol that protects them should be the same symbol we use.

See: https://lore.kernel.org/lkml/CA+55aFycQ9XJvEOsiM3txHL5bjUc8CeKWJNR_H+MiicaddB42Q@mail.gmail.com/

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#305: FILE: arch/arm/boot/compressed/misc.c:306:
+	free_mem_end_ptr	=3D free_mem_ptr_end_p;
 	                	^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#340: FILE: arch/cris/arch-v10/boot/compressed/misc.c:102:
+static long free_mem_end_ptr =3D 0;
                              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#406: FILE: arch/cris/arch-v32/boot/compressed/misc.c:106:
+static long free_mem_end_ptr =3D 0;
                              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#941: FILE: init/do_mounts_rd.c:242:
+       void *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#943: FILE: init/do_mounts_rd.c:244:
+       if (size <0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#943: FILE: init/do_mounts_rd.c:244:
+       if (size <0)
+               error("Malloc error");

ERROR:SPACING: spaces required around that '<' (ctx:WxV)
#943: FILE: init/do_mounts_rd.c:244:
+       if (size <0)
                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#944: FILE: init/do_mounts_rd.c:245:
+               error("Malloc error");$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#944: FILE: init/do_mounts_rd.c:245:
+               error("Malloc error");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#945: FILE: init/do_mounts_rd.c:246:
+       if (!malloc_ptr)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#945: FILE: init/do_mounts_rd.c:246:
+       if (!malloc_ptr)
+               malloc_ptr =3D free_mem_ptr;

ERROR:CODE_INDENT: code indent should use tabs where possible
#946: FILE: init/do_mounts_rd.c:247:
+               malloc_ptr =3D free_mem_ptr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#946: FILE: init/do_mounts_rd.c:247:
+               malloc_ptr =3D free_mem_ptr;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#946: FILE: init/do_mounts_rd.c:247:
+               malloc_ptr =3D free_mem_ptr;
                           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#948: FILE: init/do_mounts_rd.c:249:
+       malloc_ptr =3D (malloc_ptr + 3) & ~3;     /* Align */$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#948: FILE: init/do_mounts_rd.c:249:
+       malloc_ptr =3D (malloc_ptr + 3) & ~3;     /* Align */

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#948: FILE: init/do_mounts_rd.c:249:
+       malloc_ptr =3D (malloc_ptr + 3) & ~3;     /* Align */
                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#950: FILE: init/do_mounts_rd.c:251:
+       p =3D (void *)malloc_ptr;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#950: FILE: init/do_mounts_rd.c:251:
+       p =3D (void *)malloc_ptr;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#950: FILE: init/do_mounts_rd.c:251:
+       p =3D (void *)malloc_ptr;
          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#951: FILE: init/do_mounts_rd.c:252:
+       malloc_ptr +=3D size;$

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#951: FILE: init/do_mounts_rd.c:252:
+       malloc_ptr +=3D size;
                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#953: FILE: init/do_mounts_rd.c:254:
+       if (free_mem_end_ptr && malloc_ptr >=3D free_mem_end_ptr)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#953: FILE: init/do_mounts_rd.c:254:
+       if (free_mem_end_ptr && malloc_ptr >=3D free_mem_end_ptr)
+               error("Out of memory");

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#953: FILE: init/do_mounts_rd.c:254:
+       if (free_mem_end_ptr && malloc_ptr >=3D free_mem_end_ptr)
                                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#954: FILE: init/do_mounts_rd.c:255:
+               error("Out of memory");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#954: FILE: init/do_mounts_rd.c:255:
+               error("Out of memory");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#956: FILE: init/do_mounts_rd.c:257:
+       malloc_count++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#957: FILE: init/do_mounts_rd.c:258:
+       return p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#962: FILE: init/do_mounts_rd.c:263:
+       malloc_count--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#963: FILE: init/do_mounts_rd.c:264:
+       if (!malloc_count)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#963: FILE: init/do_mounts_rd.c:264:
+       if (!malloc_count)
+               malloc_ptr =3D free_mem_ptr;

ERROR:CODE_INDENT: code indent should use tabs where possible
#964: FILE: init/do_mounts_rd.c:265:
+               malloc_ptr =3D free_mem_ptr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#964: FILE: init/do_mounts_rd.c:265:
+               malloc_ptr =3D free_mem_ptr;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#964: FILE: init/do_mounts_rd.c:265:
+               malloc_ptr =3D free_mem_ptr;
                           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#992: FILE: init/do_mounts_rd.c:1096:
+    arch_decomp_wdog();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#994: FILE: init/do_mounts_rd.c:1098:
+    r =3D inflate_block(&e);$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#994: FILE: init/do_mounts_rd.c:1098:
+    r =3D inflate_block(&e);
       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#995: FILE: init/do_mounts_rd.c:1099:
+    if (r)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#995: FILE: init/do_mounts_rd.c:1099:
+    if (r)
+	    return r;

WARNING:TABSTOP: Statements should start on a tabstop
#996: FILE: init/do_mounts_rd.c:1100:
+	    return r;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000319457.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 18 errors, 27 warnings, 0 checks, 818 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000319457.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
