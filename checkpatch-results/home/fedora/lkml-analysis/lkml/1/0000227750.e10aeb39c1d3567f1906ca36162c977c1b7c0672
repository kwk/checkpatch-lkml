CHECK:LINE_SPACING: Please don't use multiple blank lines
#66: FILE: mm/memcontrol.c:543:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#71: FILE: mm/memcontrol.c:548:
+^Istruct mem_cgroup ^I   *hot_memcg;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#75: FILE: mm/memcontrol.c:552:
+};
+DEFINE_PER_CPU(struct memcg_percpu_vec, memcg_free_vec);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#106: FILE: mm/memcontrol.c:583:
+release_page_cgroup(struct mem_cgroup_per_zone *mz,struct page_cgroup *pc)
                                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#126: FILE: mm/memcontrol.c:603:
+	struct memcg_percpu_vec *mpv;
+	mpv = &per_cpu(memcg_free_vec, cpu);

WARNING:LINE_SPACING: Missing a blank line after declarations
#134: FILE: mm/memcontrol.c:611:
+	struct memcg_percpu_vec *mpv;
+	mpv = &per_cpu(memcg_free_vec, cpu);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#139: FILE: mm/memcontrol.c:616:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#149: FILE: mm/memcontrol.c:626:
+	struct memcg_percpu_vec *mpv;
+	mpv = &get_cpu_var(memcg_free_vec);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#179: FILE: mm/memcontrol.c:656:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: mm/memcontrol.c:1274:
+static int cpu_memcgroup_callback(struct notifier_block *nb,
+			unsigned long action, void *hcpu)

ERROR:SPACING: space required before the open parenthesis '('
#241: FILE: mm/memcontrol.c:1278:
+	switch(action) {

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#260: FILE: mm/memcontrol.c:1297:
+static struct notifier_block __refdata memcgroup_nb =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#271: FILE: mm/memcontrol.c:1311:
+		cpu_memcgroup_callback(&memcgroup_nb,
+					(unsigned long)CPU_UP_PREPARE,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000227750.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 4 warnings, 6 checks, 215 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000227750.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
