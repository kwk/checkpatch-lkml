WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
The following changes since commit b27fef5b222564b6e7ae71f7110c233b2fb45a38:

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id 'b27fef5b222564b6e7ae71f7110c233b2fb45a38', maybe rebased or not pulled?
#38: 
The following changes since commit b27fef5b222564b6e7ae71f7110c233b2fb45a38:

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#142: FILE: include/linux/sched.h:882:
+extern void partition_sched_domains(int ndoms_new, struct cpumask *doms_new,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#186: FILE: include/linux/sched.h:2245:
+extern long sched_setaffinity(pid_t pid, const struct cpumask *new_mask);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#187: FILE: include/linux/sched.h:2246:
+extern long sched_getaffinity(pid_t pid, struct cpumask *mask);

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#245: FILE: kernel/sched.c:2052:
this_cpu)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#982: FILE: kernel/sched.c:6154:
+		if (p->mm && printk_ratelimit()) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#983: FILE: kernel/sched.c:6155:
+			printk(KERN_INFO "process %d (%s) no "

WARNING:SPLIT_STRING: quoted string split across lines
#984: FILE: kernel/sched.c:6156:
+			printk(KERN_INFO "process %d (%s) no "
+			       "longer affine to cpu%d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1030: FILE: kernel/sched.c:6527:
+			BUG_ON(!cpumask_test_cpu(cpu, rq->rd->span));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1050: FILE: kernel/sched.c:6589:
+			BUG_ON(!cpumask_test_cpu(cpu, rq->rd->span));

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1728: FILE: kernel/sched.c:7436:
+				SD_NODES_PER_DOMAIN*cpumask_weight(nodemask)) {
 				                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc_node(sizeof(*sg)...) over kmalloc_node(sizeof(struct sched_group)...)
#1877: FILE: kernel/sched.c:7562:
+		sg = kmalloc_node(sizeof(struct sched_group) + cpumask_size(),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc_node(sizeof(*sg)...) over kmalloc_node(sizeof(struct sched_group)...)
#1923: FILE: kernel/sched.c:7597:
+			sg = kmalloc_node(sizeof(struct sched_group) +

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1975: FILE: kernel/sched.c:7645:
+		cpu_to_allnodes_group(cpumask_first(cpu_map), cpu_map, &sg,
 								tmpmask);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2512: FILE: kernel/sched_rt.c:817:
+	if (p->rt.nr_cpus_allowed != 1
+	    && cpupri_find(&rq->rd->cpupri, p, mask))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000200171.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 7 warnings, 8 checks, 2433 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000200171.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
