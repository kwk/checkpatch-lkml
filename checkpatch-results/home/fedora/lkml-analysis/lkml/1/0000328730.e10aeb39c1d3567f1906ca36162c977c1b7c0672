WARNING:TYPO_SPELLING: 'wont' may be misspelled - perhaps 'won't'?
#39: 
> functional (and wont even build/boot) at the moment. Thanks,
                  ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'convinient' may be misspelled - perhaps 'convenient'?
#51: 
This is most convinient for mmiotrace as it is meant to be a module.
             ^^^^^^^^^^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#89: FILE: arch/x86/Kconfig.debug:141:
+config PAGE_FAULT_HANDLERS
+	bool "Custom page fault handlers"
+	depends on DEBUG_KERNEL
+	help
+	  Allow the use of custom page fault handlers. A kernel module may
+	  register a function that is called on every page fault. Custom
+	  handlers are used by some debugging and reverse engineering tools.
+
 #
 # IO delay types:
 #

Kconfig symbols should have a help text which fully describes
it.

WARNING:LINE_SPACING: Missing a blank line after declarations
#115: FILE: arch/x86/mm/fault.c:59:
+	unsigned long flags;
+	spin_lock_irqsave(&pf_handlers_writer, flags);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#130: FILE: arch/x86/mm/fault.c:74:
+	unsigned long flags;
+	spin_lock_irqsave(&pf_handlers_writer, flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#139: FILE: arch/x86/mm/fault.c:83:
+static int handle_custom_pf(struct pt_regs *regs, unsigned long error_code,
+							unsigned long address)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: include/asm-x86/kdebug.h:41:
+	int (*handler)(struct pt_regs *regs, unsigned long error_code,
+						unsigned long address);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#188: FILE: include/asm-x86/kdebug.h:44:
+extern void register_page_fault_handler(struct pf_handler *new_pfh);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#189: FILE: include/asm-x86/kdebug.h:45:
+extern void unregister_page_fault_handler(struct pf_handler *old_pfh);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000328730.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 4 checks, 95 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000328730.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
