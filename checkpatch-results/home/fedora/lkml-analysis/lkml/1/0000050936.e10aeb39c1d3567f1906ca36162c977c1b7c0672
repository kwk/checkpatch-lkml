CHECK:CAMELCASE: Avoid CamelCase: <ConfigRemarkEdit>
#141: FILE: scripts/kconfig/qconf.h:32:
+class ConfigRemarkEdit;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <QLineEdit>
#149: FILE: scripts/kconfig/qconf.h:201:
+class ConfigRemarkEdit : public QLineEdit {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#151: FILE: scripts/kconfig/qconf.h:203:
+	typedef class QLineEdit Parent;

CHECK:CAMELCASE: Avoid CamelCase: <Parent>
#151: FILE: scripts/kconfig/qconf.h:203:
+	typedef class QLineEdit Parent;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxW)
#153: FILE: scripts/kconfig/qconf.h:205:
+	ConfigRemarkEdit(ConfigView* parent);
 	                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <ConfigView>
#153: FILE: scripts/kconfig/qconf.h:205:
+	ConfigRemarkEdit(ConfigView* parent);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#154: FILE: scripts/kconfig/qconf.h:206:
+	ConfigView* parent(void) const

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#156: FILE: scripts/kconfig/qconf.h:208:
+		return (ConfigView*)Parent::parent();

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#158: FILE: scripts/kconfig/qconf.h:210:
+	void keyPressEvent(QKeyEvent *e);
 	                             ^

CHECK:CAMELCASE: Avoid CamelCase: <keyPressEvent>
#158: FILE: scripts/kconfig/qconf.h:210:
+	void keyPressEvent(QKeyEvent *e);

CHECK:CAMELCASE: Avoid CamelCase: <QKeyEvent>
#158: FILE: scripts/kconfig/qconf.h:210:
+	void keyPressEvent(QKeyEvent *e);

CHECK:CAMELCASE: Avoid CamelCase: <ConfigItem>
#159: FILE: scripts/kconfig/qconf.h:211:
+	void show(ConfigItem *i);

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void hide() should probably be void hide(void)
#160: FILE: scripts/kconfig/qconf.h:212:
+	void hide();

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

WARNING:LINE_SPACING: Missing a blank line after declarations
#163: FILE: scripts/kconfig/qconf.h:215:
+	ConfigItem *item;
+	void saveremark();

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void saveremark() should probably be void saveremark(void)
#163: FILE: scripts/kconfig/qconf.h:215:
+	void saveremark();

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#173: FILE: scripts/kconfig/qconf.h:260:
+	ConfigRemarkEdit* remarkEdit;

CHECK:CAMELCASE: Avoid CamelCase: <remarkEdit>
#173: FILE: scripts/kconfig/qconf.h:260:
+	ConfigRemarkEdit* remarkEdit;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000050936.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 2 warnings, 10 checks, 108 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000050936.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
