WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#67: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#72: FILE: fs/ceph/caps.c:1:
+#include <linux/fs.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#108: FILE: fs/ceph/caps.c:37:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#233: FILE: fs/ceph/caps.c:162:
+	dout("reserve caps ctx=%p need=%d\n", ctx, need);
 	^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#243: FILE: fs/ceph/caps.c:172:
+	BUG_ON(caps_total_count != caps_use_count + caps_reserve_count +

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#256: FILE: fs/ceph/caps.c:185:
+	BUG_ON(have + alloc != need);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#263: FILE: fs/ceph/caps.c:192:
+	BUG_ON(caps_total_count != caps_use_count + caps_reserve_count +

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#268: FILE: fs/ceph/caps.c:197:
+	dout("reserve caps ctx=%p %d = %d used + %d resv + %d avail\n",
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#282: FILE: fs/ceph/caps.c:211:
+	dout("unreserve caps ctx=%p count=%d\n", ctx, ctx->count);
 	^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#285: FILE: fs/ceph/caps.c:214:
+		BUG_ON(caps_reserve_count < ctx->count);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#289: FILE: fs/ceph/caps.c:218:
+		dout("unreserve caps %d = %d used + %d resv + %d avail\n",
 		^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#292: FILE: fs/ceph/caps.c:221:
+		BUG_ON(caps_total_count != caps_use_count + caps_reserve_count +

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#308: FILE: fs/ceph/caps.c:237:
+	dout("get_cap ctx=%p (%d) %d = %d used + %d resv + %d avail\n",
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_cap', this function's name, in a string
#308: FILE: fs/ceph/caps.c:237:
+	dout("get_cap ctx=%p (%d) %d = %d used + %d resv + %d avail\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#311: FILE: fs/ceph/caps.c:240:
+	BUG_ON(!ctx->count);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#312: FILE: fs/ceph/caps.c:241:
+	BUG_ON(ctx->count > caps_reserve_count);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#313: FILE: fs/ceph/caps.c:242:
+	BUG_ON(list_empty(&caps_list));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#322: FILE: fs/ceph/caps.c:251:
+	BUG_ON(caps_total_count != caps_use_count + caps_reserve_count +

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#332: FILE: fs/ceph/caps.c:261:
+	dout("put_cap ctx=%p (%d) %d = %d used + %d resv + %d avail\n",
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'put_cap', this function's name, in a string
#332: FILE: fs/ceph/caps.c:261:
+	dout("put_cap ctx=%p (%d) %d = %d used + %d resv + %d avail\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#355: FILE: fs/ceph/caps.c:284:
+	BUG_ON(caps_total_count != caps_use_count + caps_reserve_count +

WARNING:LINE_SPACING: Missing a blank line after declarations
#421: FILE: fs/ceph/caps.c:350:
+	int mds;
+	spin_lock(&inode->i_lock);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#445: FILE: fs/ceph/caps.c:374:
+			BUG();

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#465: FILE: fs/ceph/caps.c:394:
+	dout("__cap_set_timeouts %p min %lu max %lu\n", &ci->vfs_inode,
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__cap_set_timeouts', this function's name, in a string
#465: FILE: fs/ceph/caps.c:394:
+	dout("__cap_set_timeouts %p min %lu max %lu\n", &ci->vfs_inode,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#481: FILE: fs/ceph/caps.c:410:
+	dout("__cap_delay_requeue %p flags %d at %lu\n", &ci->vfs_inode,
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__cap_delay_requeue', this function's name, in a string
#481: FILE: fs/ceph/caps.c:410:
+	dout("__cap_delay_requeue %p flags %d at %lu\n", &ci->vfs_inode,

WARNING:INDENTED_LABEL: labels should not be indented
#491: FILE: fs/ceph/caps.c:420:
+	no_change:

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#504: FILE: fs/ceph/caps.c:433:
+	dout("__cap_delay_requeue_front %p\n", &ci->vfs_inode);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__cap_delay_requeue_front', this function's name, in a string
#504: FILE: fs/ceph/caps.c:433:
+	dout("__cap_delay_requeue_front %p\n", &ci->vfs_inode);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#521: FILE: fs/ceph/caps.c:450:
+	dout("__cap_delay_cancel %p\n", &ci->vfs_inode);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__cap_delay_cancel', this function's name, in a string
#521: FILE: fs/ceph/caps.c:450:
+	dout("__cap_delay_cancel %p\n", &ci->vfs_inode);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#540: FILE: fs/ceph/caps.c:469:
+		 int fmode, unsigned issued, unsigned wanted,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#540: FILE: fs/ceph/caps.c:469:
+		 int fmode, unsigned issued, unsigned wanted,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#541: FILE: fs/ceph/caps.c:470:
+		 unsigned seq, unsigned mseq, u64 realmino,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#541: FILE: fs/ceph/caps.c:470:
+		 unsigned seq, unsigned mseq, u64 realmino,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#542: FILE: fs/ceph/caps.c:471:
+		 unsigned ttl_ms, unsigned long ttl_from, int flags,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#552: FILE: fs/ceph/caps.c:481:
+	dout("add_cap %p mds%d cap %llx %s seq %d\n", inode,
 	^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new_cap"
#572: FILE: fs/ceph/caps.c:501:
+			if (new_cap == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_add_cap', this function's name, in a string
#614: FILE: fs/ceph/caps.c:543:
+			pr_err("ceph_add_cap: couldn't find snap realm %llu\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#627: FILE: fs/ceph/caps.c:556:
+		dout(" marking %p NOT complete\n", inode);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#639: FILE: fs/ceph/caps.c:568:
+		dout(" issued %s, mds wanted %s, actual %s, queueing\n",
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#650: FILE: fs/ceph/caps.c:579:
+	dout("add_cap inode %p (%llx.%llx) cap %p %s now %s seq %d mds%d\n",
 	^^^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#652: FILE: fs/ceph/caps.c:581:
+	     ceph_cap_string(issued|cap->issued), seq, mds);
 	                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#685: FILE: fs/ceph/caps.c:614:
+		dout("__cap_is_valid %p cap %p issued %s "
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__cap_is_valid', this function's name, in a string
#685: FILE: fs/ceph/caps.c:614:
+		dout("__cap_is_valid %p cap %p issued %s "

WARNING:SPLIT_STRING: quoted string split across lines
#686: FILE: fs/ceph/caps.c:615:
+		dout("__cap_is_valid %p cap %p issued %s "
+		     "but STALE (gen %u vs %u)\n", &cap->ci->vfs_inode,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#711: FILE: fs/ceph/caps.c:640:
+		dout("__ceph_caps_issued %p cap %p issued %s\n",
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__ceph_caps_issued', this function's name, in a string
#711: FILE: fs/ceph/caps.c:640:
+		dout("__ceph_caps_issued %p cap %p issued %s\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#748: FILE: fs/ceph/caps.c:677:
+	dout("__touch_cap %p cap %p mds%d\n", &cap->ci->vfs_inode, cap,
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__touch_cap', this function's name, in a string
#748: FILE: fs/ceph/caps.c:677:
+	dout("__touch_cap %p cap %p mds%d\n", &cap->ci->vfs_inode, cap,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#767: FILE: fs/ceph/caps.c:696:
+		dout("__ceph_caps_issued_mask %p snap issued %s"
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__ceph_caps_issued_mask', this function's name, in a string
#767: FILE: fs/ceph/caps.c:696:
+		dout("__ceph_caps_issued_mask %p snap issued %s"

WARNING:SPLIT_STRING: quoted string split across lines
#768: FILE: fs/ceph/caps.c:697:
+		dout("__ceph_caps_issued_mask %p snap issued %s"
+		     " (mask %s)\n", &ci->vfs_inode,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#779: FILE: fs/ceph/caps.c:708:
+			dout("__ceph_caps_issued_mask %p cap %p issued %s"
 			^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__ceph_caps_issued_mask', this function's name, in a string
#779: FILE: fs/ceph/caps.c:708:
+			dout("__ceph_caps_issued_mask %p cap %p issued %s"

WARNING:SPLIT_STRING: quoted string split across lines
#780: FILE: fs/ceph/caps.c:709:
+			dout("__ceph_caps_issued_mask %p cap %p issued %s"
+			     " (mask %s)\n", &ci->vfs_inode, cap,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#791: FILE: fs/ceph/caps.c:720:
+			dout("__ceph_caps_issued_mask %p combo issued %s"
 			^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__ceph_caps_issued_mask', this function's name, in a string
#791: FILE: fs/ceph/caps.c:720:
+			dout("__ceph_caps_issued_mask %p combo issued %s"

WARNING:SPLIT_STRING: quoted string split across lines
#792: FILE: fs/ceph/caps.c:721:
+			dout("__ceph_caps_issued_mask %p combo issued %s"
+			     " (mask %s)\n", &ci->vfs_inode,

WARNING:TYPO_SPELLING: 'preceeding' may be misspelled - perhaps 'preceding'?
#798: FILE: fs/ceph/caps.c:727:
+				/* touch this + preceeding caps */
 				                ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#836: FILE: fs/ceph/caps.c:765:
+	dout("ceph_caps_revoking %p %s = %d\n", inode,
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_caps_revoking', this function's name, in a string
#836: FILE: fs/ceph/caps.c:765:
+	dout("ceph_caps_revoking %p %s = %d\n", inode,

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#869: FILE: fs/ceph/caps.c:798:
+ * returns true if this is the last cap.  if so, caller should iput.
                                                                ^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#878: FILE: fs/ceph/caps.c:807:
+	dout("__ceph_remove_cap %p from %p\n", cap, &ci->vfs_inode);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__ceph_remove_cap', this function's name, in a string
#878: FILE: fs/ceph/caps.c:807:
+	dout("__ceph_remove_cap %p from %p\n", cap, &ci->vfs_inode);

WARNING:LINE_SPACING: Missing a blank line after declarations
#896: FILE: fs/ceph/caps.c:825:
+		struct ceph_snap_realm *realm = ci->i_snap_realm;
+		spin_lock(&realm->inodes_with_caps_lock);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#926: FILE: fs/ceph/caps.c:855:
+	dout("send_cap_msg %s %llx %llx caps %s wanted %s dirty %s"
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'send_cap_msg', this function's name, in a string
#926: FILE: fs/ceph/caps.c:855:
+	dout("send_cap_msg %s %llx %llx caps %s wanted %s dirty %s"

WARNING:SPLIT_STRING: quoted string split across lines
#927: FILE: fs/ceph/caps.c:856:
+	dout("send_cap_msg %s %llx %llx caps %s wanted %s dirty %s"
+	     " seq %u/%u mseq %u follows %lld size %llu/%llu"

WARNING:SPLIT_STRING: quoted string split across lines
#928: FILE: fs/ceph/caps.c:857:
+	     " seq %u/%u mseq %u follows %lld size %llu/%llu"
+	     " xattr_ver %llu xattr_len %d\n", ceph_cap_op_name(op),

WARNING:LINE_SPACING: Missing a blank line after declarations
#970: FILE: fs/ceph/caps.c:899:
+		char *dst = (char *)fc;
+		dst += sizeof(*fc);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#998: FILE: fs/ceph/caps.c:927:
+		BUG_ON(!session->s_num_cap_releases);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1002: FILE: fs/ceph/caps.c:931:
+		dout(" adding %p release to mds%d msg %p (%d left)\n",
 		^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1005: FILE: fs/ceph/caps.c:934:
+		BUG_ON(msg->front.iov_len + sizeof(*item) > PAGE_CACHE_SIZE);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1018: FILE: fs/ceph/caps.c:947:
+			dout(" release msg %p full\n", msg);
 			^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1020: FILE: fs/ceph/caps.c:949:
+			list_move_tail(&msg->list_head,
+				      &session->s_cap_releases_done);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1022: FILE: fs/ceph/caps.c:951:
+			dout(" release msg %p at %d/%d (%d)\n", msg,
 			^^^^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1031: FILE: fs/ceph/caps.c:960:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'ot' may be misspelled - perhaps 'to'?
#1042: FILE: fs/ceph/caps.c:971:
+ * Make half-hearted attempt ot to invalidate page cache if we are
                              ^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#1053: FILE: fs/ceph/caps.c:982:
+		      unsigned *pflush_tid)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1078: FILE: fs/ceph/caps.c:1007:
+	dout("__send_cap %p cap %p session %p %s -> %s (revoking %s)\n",
 	^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1082: FILE: fs/ceph/caps.c:1011:
+	BUG_ON((retain & CEPH_CAP_PIN) == 0);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1087: FILE: fs/ceph/caps.c:1016:
+		dout(" delaying issued %s -> %s, wanted %s -> %s on send\n",
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1122: FILE: fs/ceph/caps.c:1051:
+		dout(" cap_flush_tid %d\n", (int)flush_tid);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1155: FILE: fs/ceph/caps.c:1084:
+		dout("invalidating pages on %p\n", inode);
 		^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1193: FILE: fs/ceph/caps.c:1122:
+	struct ceph_mds_session *session = NULL; /* if session != NULL, we hold
+						    session->s_mutex */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1193: FILE: fs/ceph/caps.c:1122:
+						    session->s_mutex */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1195: FILE: fs/ceph/caps.c:1124:
+	u64 next_follows = 0;  /* keep track of how far we've gotten through the
+			     i_cap_snaps list, and skip these entries next time

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1196: FILE: fs/ceph/caps.c:1125:
+			     around to avoid an infinite loop */

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1201: FILE: fs/ceph/caps.c:1130:
+	dout("__flush_snaps %p\n", inode);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1217: FILE: fs/ceph/caps.c:1146:
+			dout("oops, wrong session %p mutex\n", session);
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1228: FILE: fs/ceph/caps.c:1157:
+				dout("inverting session/ino locks on %p\n",
 				^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1249: FILE: fs/ceph/caps.c:1178:
+		dout("flush_snaps %p cap_snap %p follows %lld size %llu\n",
 		^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1273: FILE: fs/ceph/caps.c:1202:
+	if (psession)
[...]
+	else if (session) {
[...]

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1300: FILE: fs/ceph/caps.c:1229:
+	BUG_ON(list_empty(&ci->i_dirty_item));

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1306: FILE: fs/ceph/caps.c:1235:
+		dout(" inode %p now flushing seq %lld\n", &ci->vfs_inode,
 		^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1318: FILE: fs/ceph/caps.c:1247:
+ *    cap release further.  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1335: FILE: fs/ceph/caps.c:1264:
+	int mds = -1;   /* keep track of how far we've gone through i_caps list
+			   to avoid an infinite loop on retry */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1335: FILE: fs/ceph/caps.c:1264:
+			   to avoid an infinite loop on retry */

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1377: FILE: fs/ceph/caps.c:1306:
+	dout("check_caps %p file_want %s used %s dirty %s flushing %s"
 	^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1378: FILE: fs/ceph/caps.c:1307:
+	dout("check_caps %p file_want %s used %s dirty %s flushing %s"
+	     " issued %s retain %s %s%s%s\n", inode,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1401: FILE: fs/ceph/caps.c:1330:
+		dout("check_caps trying to invalidate on %p\n", inode);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1410: FILE: fs/ceph/caps.c:1339:
+			dout("check_caps failed to invalidate pages\n");
 			^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1412: FILE: fs/ceph/caps.c:1341:
+			/* we failed to invalidate pages.  check these
+			   caps again later. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1412: FILE: fs/ceph/caps.c:1341:
+			   caps again later. */

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1434: FILE: fs/ceph/caps.c:1363:
+			dout("mds%d revoking %s\n", cap->mds,
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1442: FILE: fs/ceph/caps.c:1371:
+				dout("requesting new max_size\n");
 				^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1449: FILE: fs/ceph/caps.c:1378:
+				dout("i_size approaching max_size\n");
 				^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1456: FILE: fs/ceph/caps.c:1385:
+			dout("flushing dirty caps\n");
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1462: FILE: fs/ceph/caps.c:1391:
+			dout("completed revocation of %s\n",
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1482: FILE: fs/ceph/caps.c:1411:
+			dout(" delaying issued %s -> %s, wanted %s -> %s\n",
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1493: FILE: fs/ceph/caps.c:1422:
+			dout("oops, wrong session %p mutex\n", session);
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1500: FILE: fs/ceph/caps.c:1429:
+				dout("inverting session/ino locks on %p\n",
 				^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1514: FILE: fs/ceph/caps.c:1443:
+				dout("inverting snap/in locks on %p\n",
 				^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1527: FILE: fs/ceph/caps.c:1456:
+			dout(" flushing %s, flushing_caps %s -> %s\n",
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1575: FILE: fs/ceph/caps.c:1504:
+	dout("__mark_dirty_caps %p %s dirty %s -> %s\n", &ci->vfs_inode,
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1580: FILE: fs/ceph/caps.c:1509:
+		dout(" inode %p now dirty\n", &ci->vfs_inode);
 		^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#1600: FILE: fs/ceph/caps.c:1529:
+			  unsigned *flush_tid)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1620: FILE: fs/ceph/caps.c:1549:
+		BUG_ON(session != cap->session);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1627: FILE: fs/ceph/caps.c:1556:
+		dout(" flushing %s, flushing_caps %s -> %s\n",
 		^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1651: FILE: fs/ceph/caps.c:1580:
+static int caps_are_flushed(struct inode *inode, unsigned tid)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1694: FILE: fs/ceph/caps.c:1623:
+		dout("sync_write_wait on tid %llu (until %llu)\n",
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sync_write_wait', this function's name, in a string
#1694: FILE: fs/ceph/caps.c:1623:
+		dout("sync_write_wait on tid %llu (until %llu)\n",

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1717: FILE: fs/ceph/caps.c:1646:
+	unsigned flush_tid;

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1721: FILE: fs/ceph/caps.c:1650:
+	dout("fsync %p%s\n", inode, datasync ? " datasync" : "");
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1729: FILE: fs/ceph/caps.c:1658:
+	dout("fsync dirty caps are %s\n", ceph_cap_string(dirty));
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1737: FILE: fs/ceph/caps.c:1666:
+		dout("fsync waiting for flush_tid %u\n", flush_tid);
 		^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1739: FILE: fs/ceph/caps.c:1668:
+		ret = wait_event_interruptible(ci->i_cap_wq,
+				       caps_are_flushed(inode, flush_tid));

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1742: FILE: fs/ceph/caps.c:1671:
+	dout("fsync %p%s done\n", inode, datasync ? " datasync" : "");
 	^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1755: FILE: fs/ceph/caps.c:1684:
+	unsigned flush_tid;

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1759: FILE: fs/ceph/caps.c:1688:
+	dout("write_inode %p wait=%d\n", inode, wait);
 	^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1764: FILE: fs/ceph/caps.c:1693:
+			err = wait_event_interruptible(ci->i_cap_wq,
+				       caps_are_flushed(inode, flush_tid));

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1788: FILE: fs/ceph/caps.c:1717:
+	dout("kick_flushing_caps mds%d\n", session->s_mds);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1798: FILE: fs/ceph/caps.c:1727:
+			dout("kick_flushing_caps %p cap %p capsnap %p\n", inode,
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1815: FILE: fs/ceph/caps.c:1744:
+			dout("kick_flushing_caps %p cap %p %s\n", inode,
 			^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1830: FILE: fs/ceph/caps.c:1759:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1851: FILE: fs/ceph/caps.c:1780:
+		dout("__take_cap_refs %p wrbuffer %d -> %d (?)\n",
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__take_cap_refs', this function's name, in a string
#1851: FILE: fs/ceph/caps.c:1780:
+		dout("__take_cap_refs %p wrbuffer %d -> %d (?)\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1852: FILE: fs/ceph/caps.c:1781:
+		     &ci->vfs_inode, ci->i_wrbuffer_ref-1, ci->i_wrbuffer_ref);
 		                                       ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1870: FILE: fs/ceph/caps.c:1799:
+	dout("get_cap_refs %p need %s want %s\n", inode,
 	^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1873: FILE: fs/ceph/caps.c:1802:
+^I$

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1876: FILE: fs/ceph/caps.c:1805:
+		dout("get_cap_refs %p no real caps\n", inode);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1884: FILE: fs/ceph/caps.c:1813:
+			dout("get_cap_refs %p endoff %llu > maxsize %llu\n",
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1897: FILE: fs/ceph/caps.c:1826:
+			dout("get_cap_refs %p cap_snap_pending\n", inode);
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1918: FILE: fs/ceph/caps.c:1847:
+		dout("get_cap_refs %p have %s but not %s (revoking %s)\n",
 		^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1918: FILE: fs/ceph/caps.c:1847:
+		int revoking = implemented & ~have;
+		dout("get_cap_refs %p have %s but not %s (revoking %s)\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1927: FILE: fs/ceph/caps.c:1856:
+		dout("get_cap_refs %p have %s needed %s\n", inode,
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1932: FILE: fs/ceph/caps.c:1861:
+	dout("get_cap_refs %p ret %d got %s\n", inode,
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1952: FILE: fs/ceph/caps.c:1881:
+		dout("write %p at large endoff %llu, req max_size\n",
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2026: FILE: fs/ceph/caps.c:1955:
+		dout("put_cap_refs %p wrbuffer %d -> %d (?)\n",
 		^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2027: FILE: fs/ceph/caps.c:1956:
+		     inode, ci->i_wrbuffer_ref+1, ci->i_wrbuffer_ref);
 		                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2034: FILE: fs/ceph/caps.c:1963:
+				capsnap = list_first_entry(&ci->i_cap_snaps,
+						     struct ceph_cap_snap,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2047: FILE: fs/ceph/caps.c:1976:
+	dout("put_cap_refs %p had %s %s\n", inode, ceph_cap_string(had),
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2084: FILE: fs/ceph/caps.c:2013:
+		dout("put_wrbuffer_cap_refs on %p head %d/%d -> %d/%d %s\n",
 		^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2086: FILE: fs/ceph/caps.c:2015:
+		     ci->i_wrbuffer_ref+nr, ci->i_wrbuffer_ref_head+nr,
 		                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2086: FILE: fs/ceph/caps.c:2015:
+		     ci->i_wrbuffer_ref+nr, ci->i_wrbuffer_ref_head+nr,
 		                                                   ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2098: FILE: fs/ceph/caps.c:2027:
+		BUG_ON(!found);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2099: FILE: fs/ceph/caps.c:2028:
+		dout("put_wrbuffer_cap_refs on %p cap_snap %p "
 		^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#2100: FILE: fs/ceph/caps.c:2029:
+		dout("put_wrbuffer_cap_refs on %p cap_snap %p "
+		     " snap %lld %d/%d -> %d/%d %s%s\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2102: FILE: fs/ceph/caps.c:2031:
+		     ci->i_wrbuffer_ref+nr, capsnap->dirty_pages + nr,
 		                       ^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#2112: FILE: fs/ceph/caps.c:2041:
+		iput(inode);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2152: FILE: fs/ceph/caps.c:2081:
+	dout("handle_cap_grant inode %p cap %p mds%d seq %d %s\n",
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2154: FILE: fs/ceph/caps.c:2083:
+	dout(" size %llu max_size %llu, i_size %llu\n", size, max_size,
 	^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2155: FILE: fs/ceph/caps.c:2084:
+	dout(" size %llu max_size %llu, i_size %llu\n", size, max_size,
+		inode->i_size);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2170: FILE: fs/ceph/caps.c:2099:
+			dout(" marking %p NOT complete\n", inode);
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2182: FILE: fs/ceph/caps.c:2111:
+		dout("CACHE invalidation\n");
 		^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2190: FILE: fs/ceph/caps.c:2119:
+			/* there were locked pages.. invalidate later
+			   in a separate thread. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2190: FILE: fs/ceph/caps.c:2119:
+			   in a separate thread. */

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2211: FILE: fs/ceph/caps.c:2140:
+		dout("%p mode 0%o uid.gid %d.%d\n", inode, inode->i_mode,
 		^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!xattr_data"
#2222: FILE: fs/ceph/caps.c:2151:
+		if (!(len > 4 && *xattr_data == NULL) &&  /* ENOMEM in caller */

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2224: FILE: fs/ceph/caps.c:2153:
+			dout(" got new xattrs v%llu on %p len %d\n",
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2247: FILE: fs/ceph/caps.c:2176:
+		dout("max_size %lld -> %llu\n", ci->i_max_size, max_size);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2260: FILE: fs/ceph/caps.c:2189:
+	dout(" my wanted = %s, used = %s, dirty %s\n",
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2265: FILE: fs/ceph/caps.c:2194:
+		dout("mds wanted %s -> %s\n",
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2278: FILE: fs/ceph/caps.c:2207:
+		dout("revocation: %s -> %s\n", ceph_cap_string(cap->issued),
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2305: FILE: fs/ceph/caps.c:2234:
+		dout("caps unchanged: %s -> %s\n",
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2308: FILE: fs/ceph/caps.c:2237:
+		dout("grant: %s -> %s\n", ceph_cap_string(cap->issued),
 		^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2313: FILE: fs/ceph/caps.c:2242:
+						 * pending revocation */

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2324: FILE: fs/ceph/caps.c:2253:
+		dout("queueing %p for writeback\n", inode);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2329: FILE: fs/ceph/caps.c:2258:
+		dout("queueing %p for page invalidation\n", inode);
 		^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2350: FILE: fs/ceph/caps.c:2279:
+	unsigned seq = le32_to_cpu(m->seq);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2362: FILE: fs/ceph/caps.c:2291:
+	dout("handle_cap_flush_ack inode %p mds%d seq %d on %s cleaned %s,"
 	^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#2363: FILE: fs/ceph/caps.c:2292:
+	dout("handle_cap_flush_ack inode %p mds%d seq %d on %s cleaned %s,"
+	     " flushing %s -> %s\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2379: FILE: fs/ceph/caps.c:2308:
+			dout(" mds%d still flushing cap on %p\n",
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2386: FILE: fs/ceph/caps.c:2315:
+		dout(" inode %p now !flushing\n", inode);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2389: FILE: fs/ceph/caps.c:2318:
+		dout(" inode %p now clean\n", inode);
 		^^^^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#2398: FILE: fs/ceph/caps.c:2327:
+		iput(inode);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2417: FILE: fs/ceph/caps.c:2346:
+	dout("handle_cap_flushsnap_ack inode %p ci %p mds%d follows %lld\n",
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'handle_cap_flushsnap_ack', this function's name, in a string
#2417: FILE: fs/ceph/caps.c:2346:
+	dout("handle_cap_flushsnap_ack inode %p ci %p mds%d follows %lld\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2424: FILE: fs/ceph/caps.c:2353:
+				dout(" cap_snap %p follows %lld tid %lld !="
 				^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#2425: FILE: fs/ceph/caps.c:2354:
+				dout(" cap_snap %p follows %lld tid %lld !="
+				     " %lld\n", capsnap, follows,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2430: FILE: fs/ceph/caps.c:2359:
+			dout(" removing cap_snap %p follows %lld\n",
 			^^^^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#2438: FILE: fs/ceph/caps.c:2367:
+			break;
+		} else {

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2439: FILE: fs/ceph/caps.c:2368:
+			dout(" skipping cap_snap %p follows %lld\n",
 			^^^^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#2445: FILE: fs/ceph/caps.c:2374:
+		iput(inode);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2471: FILE: fs/ceph/caps.c:2400:
+	dout("handle_cap_trunc inode %p mds%d seq %d to %lld seq %d\n",
 	^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2496: FILE: fs/ceph/caps.c:2425:
+	unsigned mseq = le32_to_cpu(ex->migrate_seq);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2501: FILE: fs/ceph/caps.c:2430:
+	dout("handle_cap_export inode %p ci %p mds%d mseq %d\n",
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'handle_cap_export', this function's name, in a string
#2501: FILE: fs/ceph/caps.c:2430:
+	dout("handle_cap_export inode %p ci %p mds%d mseq %d\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2510: FILE: fs/ceph/caps.c:2439:
+			dout(" higher mseq on cap from mds%d\n",
 			^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2546: FILE: fs/ceph/caps.c:2475:
+	unsigned issued = le32_to_cpu(im->caps);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2547: FILE: fs/ceph/caps.c:2476:
+	unsigned wanted = le32_to_cpu(im->wanted);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2548: FILE: fs/ceph/caps.c:2477:
+	unsigned seq = le32_to_cpu(im->seq);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2549: FILE: fs/ceph/caps.c:2478:
+	unsigned mseq = le32_to_cpu(im->migrate_seq);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2556: FILE: fs/ceph/caps.c:2485:
+		dout("handle_cap_import inode %p ci %p mds%d mseq %d"
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'handle_cap_import', this function's name, in a string
#2556: FILE: fs/ceph/caps.c:2485:
+		dout("handle_cap_import inode %p ci %p mds%d mseq %d"

WARNING:SPLIT_STRING: quoted string split across lines
#2557: FILE: fs/ceph/caps.c:2486:
+		dout("handle_cap_import inode %p ci %p mds%d mseq %d"
+		     " - cleared exporting from mds%d\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2564: FILE: fs/ceph/caps.c:2493:
+		dout("handle_cap_import inode %p ci %p mds%d mseq %d\n",
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'handle_cap_import', this function's name, in a string
#2564: FILE: fs/ceph/caps.c:2493:
+		dout("handle_cap_import inode %p ci %p mds%d mseq %d\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2569: FILE: fs/ceph/caps.c:2498:
+	ceph_update_snap_trace(mdsc, snaptrace, snaptrace+snaptrace_len,
 	                                                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2574: FILE: fs/ceph/caps.c:2503:
+		     ttl_ms, jiffies - ttl_ms/2, CEPH_CAP_FLAG_AUTH,
 		                             ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2604: FILE: fs/ceph/caps.c:2533:
+	dout("handle_caps from mds%d\n", mds);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2623: FILE: fs/ceph/caps.c:2552:
+		dout("WTF, got cap but no session for mds%d\n", mds);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2629: FILE: fs/ceph/caps.c:2558:
+	dout(" mds%d seq %lld\n", session->s_mds, session->s_seq);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2633: FILE: fs/ceph/caps.c:2562:
+	dout(" op %s ino %llx inode %p\n", ceph_cap_op_name(op), vino.ino,
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2636: FILE: fs/ceph/caps.c:2565:
+		dout(" i don't have ino %llx\n", vino.ino);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2666: FILE: fs/ceph/caps.c:2595:
+		dout("no cap on %p ino %llx.%llx from mds%d, releasing\n",
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2678: FILE: fs/ceph/caps.c:2607:
+			dout(" sending reply back to mds%d\n", mds);
 			^^^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2683: FILE: fs/ceph/caps.c:2612:
+					CHECK_CAPS_NODELAY|CHECK_CAPS_AUTHONLY,
 					                  ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_handle_caps', this function's name, in a string
#2698: FILE: fs/ceph/caps.c:2627:
+		pr_err("ceph_handle_caps: unknown cap op %d %s\n", op,

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#2710: FILE: fs/ceph/caps.c:2639:
+		iput(inode);
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_handle_caps', this function's name, in a string
#2714: FILE: fs/ceph/caps.c:2643:
+	pr_err("ceph_handle_caps: corrupt message\n");

WARNING:RETURN_VOID: void function return statements are not generally useful
#2716: FILE: fs/ceph/caps.c:2645:
+	return;
+}

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2729: FILE: fs/ceph/caps.c:2658:
+	dout("check_delayed_caps\n");
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2742: FILE: fs/ceph/caps.c:2671:
+		dout("check_delayed_caps on %p\n", &ci->vfs_inode);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2759: FILE: fs/ceph/caps.c:2688:
+	dout("put_fmode %p fmode %d %d -> %d\n", inode, fmode,
 	^^^^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2760: FILE: fs/ceph/caps.c:2689:
+	     ci->i_nr_by_mode[fmode], ci->i_nr_by_mode[fmode]-1);
 	                                                     ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2761: FILE: fs/ceph/caps.c:2690:
+	BUG_ON(ci->i_nr_by_mode[fmode] == 0);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2782: FILE: fs/ceph/caps.c:2711:
+	dout("encode_inode_release %p mds%d drop %s unless %s\n", inode,
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2793: FILE: fs/ceph/caps.c:2722:
+				dout("encode_inode_release %p cap %p %s -> "
 				^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#2794: FILE: fs/ceph/caps.c:2723:
+				dout("encode_inode_release %p cap %p %s -> "
+				     "%s\n", inode, cap,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2801: FILE: fs/ceph/caps.c:2730:
+					dout("  wanted %s -> %s (act %s)\n",
 					^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2801: FILE: fs/ceph/caps.c:2730:
+					int wanted = __ceph_caps_wanted(ci);
+					dout("  wanted %s -> %s (act %s)\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2809: FILE: fs/ceph/caps.c:2738:
+				dout("encode_inode_release %p cap %p %s"
 				^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#2810: FILE: fs/ceph/caps.c:2739:
+				dout("encode_inode_release %p cap %p %s"
+				     " (force)\n", inode, cap,

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#2817: FILE: fs/ceph/caps.c:2746:
+			rel->issue_seq = cpu_to_le32(cap->issue_seq),
+			rel->mseq = cpu_to_le32(cap->mseq);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2826: FILE: fs/ceph/caps.c:2755:
+			dout("encode_inode_release %p cap %p %s\n",
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2847: FILE: fs/ceph/caps.c:2776:
+		dout("encode_dentry_release %p mds%d seq %d\n",
 		^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000088141.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 216 warnings, 21 checks, 2785 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000088141.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
