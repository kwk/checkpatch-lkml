WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
iosignalfd is a mechanism to register PIO/MMIO regions to trigger an eventfd

WARNING:TYPO_SPELLING: 'asychronously' may be misspelled - perhaps 'asynchronously'?
#43: 
only want to simply get our notification transmitted asychronously and
                                                     ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'sychronous' may be misspelled - perhaps 'synchronous'?
#44: 
return as quickly as possible.  All the sychronous infrastructure to ensure
                                        ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'unecessary' may be misspelled - perhaps 'unnecessary'?
#45: 
proper data-dependencies are met in the normal IO case are just unecessary
                                                                ^^^^^^^^^^

CHECK:BIT_MACRO: Prefer using the BIT macro
#111: FILE: include/linux/kvm.h:295:
+#define KVM_IOSIGNALFD_FLAG_DEASSIGN  (1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#112: FILE: include/linux/kvm.h:296:
+#define KVM_IOSIGNALFD_FLAG_PIO       (1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#113: FILE: include/linux/kvm.h:297:
+#define KVM_IOSIGNALFD_FLAG_COOKIE    (1 << 2)

WARNING:TYPO_SPELLING: 'recieving' may be misspelled - perhaps 'receiving'?
#192: FILE: virt/kvm/eventfd.c:208:
+ * userspace can register a PIO/MMIO address with an eventfd for recieving
                                                                  ^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#284: FILE: virt/kvm/eventfd.c:300:
+	printk(KERN_DEBUG "registering %s iosignalfd at %llx of size %d\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iosignalfd->cookie != args->cookie'
#316: FILE: virt/kvm/eventfd.c:332:
+		if ((args->flags & KVM_IOSIGNALFD_FLAG_COOKIE) &&
+		    (iosignalfd->cookie != args->cookie))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SIZEOF_PARENTHESIS: sizeof entry should be sizeof(entry)
#357: FILE: virt/kvm/kvm_main.c:2227:
+		if (copy_from_user(&entry, argp, sizeof entry))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000124447.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 4 checks, 240 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000124447.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
