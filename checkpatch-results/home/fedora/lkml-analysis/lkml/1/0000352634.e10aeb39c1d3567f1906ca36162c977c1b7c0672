WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#50: 
allyesconfig ARCH=i386, the patch reduces the final binary size by 9369 bytes.

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#79: FILE: include/linux/sysctl.h:1070:
+struct ctl_path
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#86: FILE: include/linux/sysctl.h:1077:
+struct ctl_table_header *register_sysctl_paths(const struct ctl_path *path,
+						struct ctl_table *table);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#115: FILE: kernel/sysctl.c:1562:
+struct ctl_table_header *register_sysctl_paths(const struct ctl_path *path,
+						struct ctl_table *table)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*header)...) over kzalloc(sizeof(struct ctl_table_header)...)
#136: FILE: kernel/sysctl.c:1580:
+	header = kzalloc(sizeof(struct ctl_table_header) +

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: No space is necessary after a cast
#148: FILE: kernel/sysctl.c:1585:
+	new = (struct ctl_table *) (header + 1);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#191: FILE: kernel/sysctl.c:1626:
+struct ctl_table_header *register_sysctl_table(struct ctl_table * table)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#198: FILE: kernel/sysctl.c:1633:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#208: FILE: kernel/sysctl.c:1657:
+struct ctl_table_header *register_sysctl_paths(const struct ctl_path *path,
+						    struct ctl_table *table)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000352634.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 1 warnings, 6 checks, 142 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000352634.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
