WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#39: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#44: FILE: arch/ia64/kvm/process.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#58: FILE: arch/ia64/kvm/process.c:15:
+ * this program; if not, write to the Free Software Foundation, Inc., 59 Temple$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#61: FILE: arch/ia64/kvm/process.c:18:
+ *  ^IShaofan Li (Susue Li) <susie.li@intel.com>$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#62: FILE: arch/ia64/kvm/process.c:19:
+ *  ^IXiaoyan Feng (Fleming Feng)  <fleming.feng@intel.com>$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#63: FILE: arch/ia64/kvm/process.c:20:
+ *  ^IXuefei Xu (Anthony Xu) (Anthony.xu@intel.com)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#64: FILE: arch/ia64/kvm/process.c:21:
+ *  ^IXiantao Zhang (xiantao.zhang@intel.com)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#102: FILE: arch/ia64/kvm/process.c:59:
+#define IA64_LOWERPRIV_TRANSFER_TRAP_VECTOR ^I0x5e00$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#108: FILE: arch/ia64/kvm/process.c:65:
+^I^I^IIA64_PSR_MFH | IA64_PSR_PK | IA64_PSR_DT |    ^I\$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#109: FILE: arch/ia64/kvm/process.c:66:
+			IA64_PSR_RT | IA64_PSR_MC|IA64_PSR_IT)
 			                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#135: FILE: arch/ia64/kvm/process.c:92:
+	if (vpsr & IA64_PSR_IC) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#152: FILE: arch/ia64/kvm/process.c:109:
+		vcpu_set_iip(vcpu , regs->cr_iip);
 		                  ^

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#176: FILE: arch/ia64/kvm/process.c:133:
+		vpsr &= ~IA64_PSR_PP;;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#181: FILE: arch/ia64/kvm/process.c:138:
+
+}

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#210: FILE: arch/ia64/kvm/process.c:167:
+	return (rr1.val);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#213: FILE: arch/ia64/kvm/process.c:170:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#222: FILE: arch/ia64/kvm/process.c:179:
+void set_ifa_itir_iha(struct kvm_vcpu *vcpu, u64 vadr,
+		int set_ifa, int set_itir, int set_iha)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#268: FILE: arch/ia64/kvm/process.c:225:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#291: FILE: arch/ia64/kvm/process.c:248:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#312: FILE: arch/ia64/kvm/process.c:269:
+
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#313: FILE: arch/ia64/kvm/process.c:270:
+
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#325: FILE: arch/ia64/kvm/process.c:282:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#336: FILE: arch/ia64/kvm/process.c:293:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#347: FILE: arch/ia64/kvm/process.c:304:
+
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#377: FILE: arch/ia64/kvm/process.c:334:
+}
+/*

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#414: FILE: arch/ia64/kvm/process.c:371:
+static void _nat_consumption_fault(struct kvm_vcpu *vcpu, u64 vadr,
+						enum tlb_miss_type t)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#465: FILE: arch/ia64/kvm/process.c:422:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#471: FILE: arch/ia64/kvm/process.c:428:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#477: FILE: arch/ia64/kvm/process.c:434:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#489: FILE: arch/ia64/kvm/process.c:446:
+fpswa_ret_t vmm_fp_emulate(int fp_fault, void *bundle, unsigned long *ipsr,
+		unsigned long *fpsr, unsigned long *isr, unsigned long *pr,

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#496: FILE: arch/ia64/kvm/process.c:453:
+	uint64_t old_rr7 = ia64_get_rr(7UL<<61);
 	                                  ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#496: FILE: arch/ia64/kvm/process.c:453:
+	uint64_t old_rr7 = ia64_get_rr(7UL<<61);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#535: FILE: arch/ia64/kvm/process.c:492:
+unsigned long vmm_handle_fpu_swa(int fp_fault, struct kvm_pt_regs *regs,
+					unsigned long isr)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#558: FILE: arch/ia64/kvm/process.c:515:
+	ret = vmm_fp_emulate(fp_fault, &bundle, &regs->cr_ipsr, &regs->ar_fpsr,
+			&isr, &regs->pr, &regs->cr_ifs, regs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#563: FILE: arch/ia64/kvm/process.c:520:
+void reflect_interruption(u64 ifa, u64 isr, u64 iim,
+		u64 vec, struct kvm_pt_regs *regs)

WARNING:SPACING: space prohibited before semicolon
#566: FILE: arch/ia64/kvm/process.c:523:
+	int status ;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vector != IA64_DATA_NESTED_TLB_VECTOR'
#572: FILE: arch/ia64/kvm/process.c:529:
+	if (!(vpsr & IA64_PSR_IC) && (vector != IA64_DATA_NESTED_TLB_VECTOR)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#578: FILE: arch/ia64/kvm/process.c:535:
+^Icase 32: ^I/*IA64_FP_FAULT_VECTOR*/$

CHECK:BRACES: braces {} should be used on all arms of this statement
#580: FILE: arch/ia64/kvm/process.c:537:
+		if (!status) {
[...]
+		} else if (-EAGAIN == status)
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#588: FILE: arch/ia64/kvm/process.c:545:
+		if (!status)
[...]
+		else if (-EAGAIN == status) {
[...]

WARNING:SPACING: space prohibited before semicolon
#589: FILE: arch/ia64/kvm/process.c:546:
+			return ;

WARNING:SPACING: space prohibited before semicolon
#592: FILE: arch/ia64/kvm/process.c:549:
+			return ;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#613: FILE: arch/ia64/kvm/process.c:570:
+	 * break to vmm  !!*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:BRACES: braces {} should be used on all arms of this statement
#626: FILE: arch/ia64/kvm/process.c:583:
+	if (p->exit_reason == EXIT_REASON_PAL_CALL) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#631: FILE: arch/ia64/kvm/process.c:588:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#654: FILE: arch/ia64/kvm/process.c:611:
+	if (p->exit_reason == EXIT_REASON_SAL_CALL) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#659: FILE: arch/ia64/kvm/process.c:616:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#664: FILE: arch/ia64/kvm/process.c:621:
+void  kvm_ia64_handle_break(unsigned long ifa, struct kvm_pt_regs *regs,
+		unsigned long isr, unsigned long iim)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#718: FILE: arch/ia64/kvm/process.c:675:
+	unsigned  vpsr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#719: FILE: arch/ia64/kvm/process.c:676:
+	uint64_t isr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#732: FILE: arch/ia64/kvm/process.c:689:
+	uint64_t    threshold, vhpi;

WARNING:TYPO_SPELLING: 'actived' may be misspelled - perhaps 'activated'?
#742: FILE: arch/ia64/kvm/process.c:699:
+		/* interrupt actived*/
 		             ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#747: FILE: arch/ia64/kvm/process.c:704:
+
+

WARNING:MEMORY_BARRIER: memory barrier without comment
#768: FILE: arch/ia64/kvm/process.c:725:
+	rmb();

CHECK:LINE_SPACING: Please don't use multiple blank lines
#781: FILE: arch/ia64/kvm/process.c:738:
+
+

WARNING:RETURN_VOID: void function return statements are not generally useful
#797: FILE: arch/ia64/kvm/process.c:754:
+	return;
+}

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#799: FILE: arch/ia64/kvm/process.c:756:
+void kvm_page_fault(u64 vadr , u64 vec, struct kvm_pt_regs *regs)
                              ^

CHECK:BRACES: Unbalanced braces around else statement
#834: FILE: arch/ia64/kvm/process.c:791:
+				else {

WARNING:SPACING: space prohibited before semicolon
#838: FILE: arch/ia64/kvm/process.c:795:
+				return ;

WARNING:SPACING: space prohibited before semicolon
#859: FILE: arch/ia64/kvm/process.c:816:
+			return ;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#877: FILE: arch/ia64/kvm/process.c:834:
+				thash_purge_and_insert(v, pteval, itir,
+								vadr, D_TLB);

WARNING:SPACING: space prohibited before semicolon
#911: FILE: arch/ia64/kvm/process.c:868:
+					return ;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#916: FILE: arch/ia64/kvm/process.c:873:
+				thash_purge_and_insert(v, pteval, itir,
+							vadr, I_TLB);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#951: FILE: arch/ia64/kvm/process.c:908:
+
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#957: FILE: arch/ia64/kvm/process.c:914:
+	struct kvm_ptc_g *p = &v->arch.ptc_g_data[pos];
+	vaddr = p->vaddr;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1008: FILE: arch/ia64/kvm/process.c:965:
+	ia64_call_vsa(PAL_VPS_SAVE, (unsigned long)vcpu->arch.vpd,
+			0, 0, 0, 0, 0, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1011: FILE: arch/ia64/kvm/process.c:968:
+	ia64_call_vsa(PAL_VPS_RESTORE, (unsigned long)vcpu->arch.vpd,
+						0, 0, 0, 0, 0, 0);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000294388.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 22 warnings, 41 checks, 970 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000294388.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
