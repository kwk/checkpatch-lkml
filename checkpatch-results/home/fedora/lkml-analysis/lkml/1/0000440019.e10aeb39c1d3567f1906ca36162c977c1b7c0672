CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#73: FILE: include/linux/container.h:38:
+};
+#undef SUBSYS

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#89: FILE: include/linux/container.h:105:
+struct css_group {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#102: FILE: include/linux/container.h:118:
+	 * immutable after creation */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#215: FILE: kernel/container.c:169:
+static void release_css_group(struct kref *k) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#234: FILE: kernel/container.c:187:
+static inline void get_css_group(struct css_group *cg) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#239: FILE: kernel/container.c:192:
+static inline void put_css_group(struct css_group *cg) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#261: FILE: kernel/container.c:213:
+static struct css_group *find_existing_css_group(

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#271: FILE: kernel/container.c:223:
+	 * see in the new css_group */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#277: FILE: kernel/container.c:228:
+			 * container */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#281: FILE: kernel/container.c:232:
+			 * don't want to change the subsystem state */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#311: FILE: kernel/container.c:262:
+static struct css_group *find_css_group(

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#319: FILE: kernel/container.c:270:
+	 * the desired set */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#335: FILE: kernel/container.c:286:
+	 * find_existing_css_group() */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#338: FILE: kernel/container.c:289:
+	for (i = 0; i < CONTAINER_SUBSYS_COUNT; i++) {
+		atomic_inc(&res->subsys[i]->container->count);
 	}

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#369: FILE: kernel/container.c:881:
+	 * based on its final set of containers */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#371: FILE: kernel/container.c:883:
+	if (!newcg) {
+		return -ENOMEM;
+	}

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#427: FILE: kernel/container.c:1586:
+	 * groups are in the subsystem's top container. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#441: FILE: kernel/container.c:1600:
+ ^Iif (ss->fork) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#441: FILE: kernel/container.c:1600:
+ ^Iif (ss->fork) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: kernel/container.c:1600:
+ ^Iif (ss->fork) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#442: FILE: kernel/container.c:1601:
+ ^I^Istruct task_struct *g, *p;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#442: FILE: kernel/container.c:1601:
+ ^I^Istruct task_struct *g, *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: kernel/container.c:1601:
+ ^I^Istruct task_struct *g, *p;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#456: FILE: kernel/container.c:1603:
+ ^I^Iread_lock(&tasklist_lock);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#456: FILE: kernel/container.c:1603:
+ ^I^Iread_lock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#456: FILE: kernel/container.c:1603:
+ ^I^Iread_lock(&tasklist_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#457: FILE: kernel/container.c:1604:
+ ^I^Ido_each_thread(g, p) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#457: FILE: kernel/container.c:1604:
+ ^I^Ido_each_thread(g, p) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#457: FILE: kernel/container.c:1604:
+ ^I^Ido_each_thread(g, p) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#458: FILE: kernel/container.c:1605:
+ ^I^I^Iss->fork(ss, p);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#458: FILE: kernel/container.c:1605:
+ ^I^I^Iss->fork(ss, p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#458: FILE: kernel/container.c:1605:
+ ^I^I^Iss->fork(ss, p);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#459: FILE: kernel/container.c:1606:
+ ^I^I} while_each_thread(g, p);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#459: FILE: kernel/container.c:1606:
+ ^I^I} while_each_thread(g, p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#459: FILE: kernel/container.c:1606:
+ ^I^I} while_each_thread(g, p);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#460: FILE: kernel/container.c:1607:
+ ^I^Iread_unlock(&tasklist_lock);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#460: FILE: kernel/container.c:1607:
+ ^I^Iread_unlock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: kernel/container.c:1607:
+ ^I^Iread_unlock(&tasklist_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#461: FILE: kernel/container.c:1608:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#461: FILE: kernel/container.c:1608:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: kernel/container.c:1608:
+ ^I}$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000440019.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 11 errors, 26 warnings, 4 checks, 459 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000440019.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
