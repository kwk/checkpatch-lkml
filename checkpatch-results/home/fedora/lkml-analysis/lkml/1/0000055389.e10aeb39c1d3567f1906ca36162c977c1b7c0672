WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
meet as a reference. If there is none, choose the first local one. So let the

ERROR:TRAILING_WHITESPACE: trailing whitespace
#60: FILE: scripts/recordmcount.pl:9:
+# What we want to end up with this is a data area in .init.data in vmlinux $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#62: FILE: scripts/recordmcount.pl:11:
+# call mcount. Later on boot up, the kernel will read this list, save the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#63: FILE: scripts/recordmcount.pl:12:
+# locations and turn them into nops. When tracing or profiling is later $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#64: FILE: scripts/recordmcount.pl:13:
+# enabled, these locations will then be converted back to pointers to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#74: FILE: scripts/recordmcount.pl:19:
+# When parse this object file using 'objdump', the references to the call $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#75: FILE: scripts/recordmcount.pl:20:
+# sites are offsets from the section that the call site is in. Hence, all $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: scripts/recordmcount.pl:21:
+# functions in a section that  has a call site to mcount, will have the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#77: FILE: scripts/recordmcount.pl:22:
+# offset from the beginning of the section and not the beginning of the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#83: FILE: scripts/recordmcount.pl:25:
+# But where this section will reside finally in vmlinx is undetermined at $

WARNING:TYPO_SPELLING: 'refering' may be misspelled - perhaps 'referring'?
#87: FILE: scripts/recordmcount.pl:29:
+# The trick is to change the call offset refering the start of a section to
                                          ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'refering' may be misspelled - perhaps 'referring'?
#88: FILE: scripts/recordmcount.pl:30:
+# refering a function symbol in this section. During the link step, 'ld' will
   ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#90: FILE: scripts/recordmcount.pl:32:
+# $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#132: FILE: scripts/recordmcount.pl:63:
+# In our algorithm, we will choose the first global function we meet in this $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#133: FILE: scripts/recordmcount.pl:64:
+# section as the reference. But this gets hard if there is no global functions $

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000055389.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 12 errors, 3 warnings, 0 checks, 131 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000055389.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
