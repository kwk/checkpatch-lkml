CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#86: FILE: arch/microblaze/mm/init.c:139:
+	map_size = init_bootmem_node(&contig_page_data,
+		PFN_UP(TOPHYS((u32)_end)), min_low_pfn, max_low_pfn);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#129: FILE: arch/microblaze/mm/init.c:235:
+#if 0

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#143: FILE: arch/microblaze/mm/init.c:249:
+			maxmem = strict_strtoul(q, &q, NULL);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#156: FILE: arch/microblaze/mm/init.c:262:
+/*	if (__max_memory && memory_size > __max_memory)
+		memory_size = __max_memory; */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#156: FILE: arch/microblaze/mm/init.c:262:
+		memory_size = __max_memory; */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#195: FILE: arch/microblaze/mm/init.c:301:
+		printk(KERN_EMERG "Error memory count\n");

CHECK:SPACING: No space is necessary after a cast
#199: FILE: arch/microblaze/mm/init.c:305:
+	if ((u32) lmb.memory.region[0].size < 0x1000000) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#200: FILE: arch/microblaze/mm/init.c:306:
+		printk(KERN_EMERG "Memory must be greater than 16MB\n");

CHECK:SPACING: No space is necessary after a cast
#204: FILE: arch/microblaze/mm/init.c:310:
+	memory_start = (u32) lmb.memory.region[0].base;

CHECK:SPACING: No space is necessary after a cast
#205: FILE: arch/microblaze/mm/init.c:311:
+	memory_end = (u32) lmb.memory.region[0].base +

CHECK:SPACING: No space is necessary after a cast
#206: FILE: arch/microblaze/mm/init.c:312:
+				(u32) lmb.memory.region[0].size;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#223: FILE: arch/microblaze/mm/init.c:329:
+/*	if (initrd_start) {
+		mem_pieces_remove(&phys_avail, __pa(initrd_start),

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#225: FILE: arch/microblaze/mm/init.c:331:
+	}*/

WARNING:LINE_SPACING: Missing a blank line after declarations
#249: FILE: arch/microblaze/mm/init.c:355:
+	void *p;
+	if (init_bootmem_done) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000134007.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 5 checks, 214 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000134007.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
