WARNING:MEMORY_BARRIER: memory barrier without comment
#61: FILE: fs/splice.c:606:
+	smp_mb();

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#62: FILE: fs/splice.c:607:
+	if (waitqueue_active(&pipe->wait))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#327: FILE: include/linux/splice.h:71:
+extern int splice_from_pipe_feed(struct pipe_inode_info *, struct splice_desc *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pipe_inode_info *' should also have an identifier name
#327: FILE: include/linux/splice.h:71:
+extern int splice_from_pipe_feed(struct pipe_inode_info *, struct splice_desc *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct splice_desc *' should also have an identifier name
#327: FILE: include/linux/splice.h:71:
+extern int splice_from_pipe_feed(struct pipe_inode_info *, struct splice_desc *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'splice_actor *' should also have an identifier name
#327: FILE: include/linux/splice.h:71:
+extern int splice_from_pipe_feed(struct pipe_inode_info *, struct splice_desc *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#329: FILE: include/linux/splice.h:73:
+extern int splice_from_pipe_next(struct pipe_inode_info *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pipe_inode_info *' should also have an identifier name
#329: FILE: include/linux/splice.h:73:
+extern int splice_from_pipe_next(struct pipe_inode_info *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct splice_desc *' should also have an identifier name
#329: FILE: include/linux/splice.h:73:
+extern int splice_from_pipe_next(struct pipe_inode_info *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#331: FILE: include/linux/splice.h:75:
+extern void splice_from_pipe_begin(struct splice_desc *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct splice_desc *' should also have an identifier name
#331: FILE: include/linux/splice.h:75:
+extern void splice_from_pipe_begin(struct splice_desc *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#332: FILE: include/linux/splice.h:76:
+extern void splice_from_pipe_end(struct pipe_inode_info *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pipe_inode_info *' should also have an identifier name
#332: FILE: include/linux/splice.h:76:
+extern void splice_from_pipe_end(struct pipe_inode_info *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct splice_desc *' should also have an identifier name
#332: FILE: include/linux/splice.h:76:
+extern void splice_from_pipe_end(struct pipe_inode_info *,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000139551.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 10 warnings, 4 checks, 276 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000139551.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
