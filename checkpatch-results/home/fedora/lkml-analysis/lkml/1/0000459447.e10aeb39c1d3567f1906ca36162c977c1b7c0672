WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#88: FILE: fs/Kconfig:1035:
+config EVENTFS
+	bool "Enable eventpoll filesystem support" if EMBEDDED
+	depends on EPOLL
+	default y
+	help
+	  Allows to bind file descriptors to different kinds of objects
+	  like signals and timers and work with them using epoll 
+	  family of system calls.
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: fs/Kconfig:1041:
+^I  like signals and timers and work with them using epoll $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#113: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#118: FILE: fs/eventfs.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#133: FILE: fs/eventfs.c:16:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#134: FILE: fs/eventfs.c:17:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#148: FILE: fs/eventfs.c:31:
+#include <asm/io.h>

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#153: FILE: fs/eventfs.c:36:
+	current->signal_file[sig-1] = file;
 	                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#156: FILE: fs/eventfs.c:39:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#160: FILE: fs/eventfs.c:43:
+	int sig = (int)((unsigned long)(file->private_data) & 0x0fffffff);
+	eventfs_set_signal_file(sig, NULL);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#173: FILE: fs/eventfs.c:56:
+	if (!sigismember(&current->blocked, sig) && (((unsigned long)(file->private_data)) & 0x40000000)) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'file->private_data'
#173: FILE: fs/eventfs.c:56:
+	if (!sigismember(&current->blocked, sig) && (((unsigned long)(file->private_data)) & 0x40000000)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:CONST_STRUCT: struct file_operations should normally be const
#182: FILE: fs/eventfs.c:65:
+struct file_operations eventfs_signal_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#191: FILE: fs/eventfs.c:74:
+static int eventfs_get_sb(struct file_system_type *fs_type, int flags,
+		   const char *dev_name, void *data, struct vfsmount *mnt)

WARNING:CONST_STRUCT: struct dentry_operations should normally be const
#207: FILE: fs/eventfs.c:90:
+static struct dentry_operations eventfs_dentry_operations = {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#211: FILE: fs/eventfs.c:94:
+static int eventfs_init(struct file **filp, struct file_operations *fops, unsigned long priv)
                                       ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONST_STRUCT: struct file_operations should normally be const
#211: FILE: fs/eventfs.c:94:
+static int eventfs_init(struct file **filp, struct file_operations *fops, unsigned long priv)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#231: FILE: fs/eventfs.c:114:
+	inode->i_mode = S_IRUSR | S_IWUSR;

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#234: FILE: fs/eventfs.c:117:
+	inode->i_atime = inode->i_mtime = inode->i_ctime = CURRENT_TIME;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#261: FILE: fs/eventfs.c:144:
+	*filp = file;
 	 ^^^^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#268: FILE: fs/eventfs.c:151:
+	iput(inode);
 	^^^^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#285: FILE: fs/eventfs.c:168:
+	file = current->signal_file[sig-1];
 	                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#289: FILE: fs/eventfs.c:172:
+		current->signal_file[sig-1] = (void *)1;
 		                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#301: FILE: fs/eventfs.c:184:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#322: FILE: fs/eventfs.c:205:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#328: FILE: fs/eventfs.c:211:
+	printk(KERN_INFO "Eventfs subsystem has been successfully registered.\n");

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#423: FILE: kernel/signal.c:743:
+	if (t->signal_file[sig-1]) {
 	                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#424: FILE: kernel/signal.c:744:
+		struct file *file = t->signal_file[sig-1];
 		                                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#425: FILE: kernel/signal.c:745:
+		struct file *file = t->signal_file[sig-1];
+		file->private_data = (void *)(((unsigned long)(file->private_data)) | 0x40000000);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'file->private_data'
#427: FILE: kernel/signal.c:747:
+		if (((unsigned long)(file->private_data)) & 0x80000000)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#441: FILE: kernel/signal.c:832:
+^I * Eventfs allows to deliver signals through epoll queue, $

WARNING:TYPO_SPELLING: 'successfull' may be misspelled - perhaps 'successful'?
#445: FILE: kernel/signal.c:836:
+	 * We simulate successfull delivery notification through this hack:
 	               ^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#460: FILE: kernel/signal.c:1033:
+^I * Eventfs allows to deliver signals through epoll queue, $

WARNING:TYPO_SPELLING: 'successfull' may be misspelled - perhaps 'successful'?
#464: FILE: kernel/signal.c:1037:
+	 * We simulate successfull delivery notification through this hack:
 	               ^^^^^^^^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000459447.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 17 warnings, 9 checks, 362 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000459447.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
