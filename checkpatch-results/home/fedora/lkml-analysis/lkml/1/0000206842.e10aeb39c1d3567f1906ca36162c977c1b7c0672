WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#41: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:TYPO_SPELLING: 'Publically' may be misspelled - perhaps 'Publicly'?
#53: FILE: Documentation/ics932s401:8:
+    Datasheet: Publically available at the IDT website
                ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#116: FILE: drivers/misc/ics932s401.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#133: FILE: drivers/misc/ics932s401.c:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#134: FILE: drivers/misc/ics932s401.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#153: FILE: drivers/misc/ics932s401.c:38:
+#define ^IICS932S401_CFG1_SPREAD^I^I0x01$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#178: FILE: drivers/misc/ics932s401.c:63:
+#define ^IICS932S401_CPU_DIVISOR_SHIFT^I4$

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#215: FILE: drivers/misc/ics932s401.c:100:
+	struct mutex		lock;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#223: FILE: drivers/misc/ics932s401.c:108:
+static int ics932s401_probe(struct i2c_client *client,
+			 const struct i2c_device_id *id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: drivers/misc/ics932s401.c:110:
+static int ics932s401_detect(struct i2c_client *client, int kind,
+			  struct i2c_board_info *info);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#256: FILE: drivers/misc/ics932s401.c:141:
+		SENSOR_REFRESH_INTERVAL)
+		&& data->sensors_valid)

CHECK:BRACES: braces {} should be used on all arms of this statement
#340: FILE: drivers/misc/ics932s401.c:225:
+	if (data->regs[ICS932S401_REG_CTRL] & ICS932S401_MN_ENABLED)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#342: FILE: drivers/misc/ics932s401.c:227:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#345: FILE: drivers/misc/ics932s401.c:230:
+		int fid = data->regs[ICS932S401_REG_CFG7] & ICS932S401_FS_MASK;
+		freq = fs_speeds[fid];

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_spread_enabled' to 'spread_enabled_show'
#460: FILE: drivers/misc/ics932s401.c:345:
+static DEVICE_ATTR(spread_enabled, S_IRUGO, show_spread_enabled, NULL);

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#460: FILE: drivers/misc/ics932s401.c:345:
+static DEVICE_ATTR(spread_enabled, S_IRUGO, show_spread_enabled, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_cpu_clock_sel' to 'cpu_clock_selection_show'
#461: FILE: drivers/misc/ics932s401.c:346:
+static DEVICE_ATTR(cpu_clock_selection, S_IRUGO, show_cpu_clock_sel, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#461: FILE: drivers/misc/ics932s401.c:346:
+static DEVICE_ATTR(cpu_clock_selection, S_IRUGO, show_cpu_clock_sel, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_cpu_clock' to 'cpu_clock_show'
#462: FILE: drivers/misc/ics932s401.c:347:
+static DEVICE_ATTR(cpu_clock, S_IRUGO, show_cpu_clock, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#462: FILE: drivers/misc/ics932s401.c:347:
+static DEVICE_ATTR(cpu_clock, S_IRUGO, show_cpu_clock, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_src_clock_sel' to 'src_clock_selection_show'
#463: FILE: drivers/misc/ics932s401.c:348:
+static DEVICE_ATTR(src_clock_selection, S_IRUGO, show_src_clock_sel, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#463: FILE: drivers/misc/ics932s401.c:348:
+static DEVICE_ATTR(src_clock_selection, S_IRUGO, show_src_clock_sel, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_src_clock' to 'src_clock_show'
#464: FILE: drivers/misc/ics932s401.c:349:
+static DEVICE_ATTR(src_clock, S_IRUGO, show_src_clock, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#464: FILE: drivers/misc/ics932s401.c:349:
+static DEVICE_ATTR(src_clock, S_IRUGO, show_src_clock, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_pci_clock_sel' to 'pci_clock_selection_show'
#465: FILE: drivers/misc/ics932s401.c:350:
+static DEVICE_ATTR(pci_clock_selection, S_IRUGO, show_pci_clock_sel, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#465: FILE: drivers/misc/ics932s401.c:350:
+static DEVICE_ATTR(pci_clock_selection, S_IRUGO, show_pci_clock_sel, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_pci_clock' to 'pci_clock_show'
#466: FILE: drivers/misc/ics932s401.c:351:
+static DEVICE_ATTR(pci_clock, S_IRUGO, show_pci_clock, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#466: FILE: drivers/misc/ics932s401.c:351:
+static DEVICE_ATTR(pci_clock, S_IRUGO, show_pci_clock, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_value' to 'usb_clock_show'
#467: FILE: drivers/misc/ics932s401.c:352:
+static DEVICE_ATTR(usb_clock, S_IRUGO, show_value, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#467: FILE: drivers/misc/ics932s401.c:352:
+static DEVICE_ATTR(usb_clock, S_IRUGO, show_value, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_value' to 'ref_clock_show'
#468: FILE: drivers/misc/ics932s401.c:353:
+static DEVICE_ATTR(ref_clock, S_IRUGO, show_value, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#468: FILE: drivers/misc/ics932s401.c:353:
+static DEVICE_ATTR(ref_clock, S_IRUGO, show_value, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_spread' to 'cpu_spread_show'
#469: FILE: drivers/misc/ics932s401.c:354:
+static DEVICE_ATTR(cpu_spread, S_IRUGO, show_spread, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#469: FILE: drivers/misc/ics932s401.c:354:
+static DEVICE_ATTR(cpu_spread, S_IRUGO, show_spread, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_spread' to 'src_spread_show'
#470: FILE: drivers/misc/ics932s401.c:355:
+static DEVICE_ATTR(src_spread, S_IRUGO, show_spread, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#470: FILE: drivers/misc/ics932s401.c:355:
+static DEVICE_ATTR(src_spread, S_IRUGO, show_spread, NULL);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#473: FILE: drivers/misc/ics932s401.c:358:
+static struct attribute *ics932s401_attr[] =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#499: FILE: drivers/misc/ics932s401.c:384:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#520: FILE: drivers/misc/ics932s401.c:405:
+		BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#532: FILE: drivers/misc/ics932s401.c:417:
+static int ics932s401_detect(struct i2c_client *client, int kind,
+			  struct i2c_board_info *info)

CHECK:BRACES: braces {} should be used on all arms of this statement
#539: FILE: drivers/misc/ics932s401.c:424:
+	if (kind <= 0) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#559: FILE: drivers/misc/ics932s401.c:444:
+	} else

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#562: FILE: drivers/misc/ics932s401.c:447:
+	strlcpy(info->type, "ics932s401", I2C_NAME_SIZE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#568: FILE: drivers/misc/ics932s401.c:453:
+static int ics932s401_probe(struct i2c_client *client,
+			 const struct i2c_device_id *id)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*data)...) over kzalloc(sizeof(struct ics932s401_data)...)
#573: FILE: drivers/misc/ics932s401.c:458:
+	data = kzalloc(sizeof(struct ics932s401_data), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000206842.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 31 warnings, 11 checks, 569 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000206842.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
