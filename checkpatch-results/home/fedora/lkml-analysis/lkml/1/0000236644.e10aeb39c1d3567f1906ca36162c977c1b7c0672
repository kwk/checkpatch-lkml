WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#250: FILE: drivers/mtd/nand/nand_bbt.c:174:
+					printk(KERN_DEBUG "nand_read_bbt: Reserved block at 0x%016llx\n",

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#251: FILE: drivers/mtd/nand/nand_bbt.c:175:
+					       (loff_t)((offs << 2) + (act >> 1)) << this->bbt_erase_shift);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#260: FILE: drivers/mtd/nand/nand_bbt.c:182:
+				printk(KERN_DEBUG "nand_read_bbt: Bad block at 0x%016llx\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#280: FILE: drivers/mtd/nand/nand_bbt.c:431:
+			printk(KERN_WARNING "Bad eraseblock %d at 0x%016llx\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#327: FILE: drivers/mtd/nand/nand_bbt.c:732:
+		printk(KERN_DEBUG "Bad block table written to 0x%016llx, version "

WARNING:SPLIT_STRING: quoted string split across lines
#328: FILE: drivers/mtd/nand/nand_bbt.c:733:
+		printk(KERN_DEBUG "Bad block table written to 0x%016llx, version "
+		       "0x%02X\n", to, td->version[chip]);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#380: FILE: include/linux/mtd/mtd.h:33:
+	u_int64_t addr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#383: FILE: include/linux/mtd/mtd.h:35:
+	u_int64_t fail_addr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#397: FILE: include/linux/mtd/mtd.h:110:
+	u_int64_t num_eraseblocks;

WARNING:SPACING: Unnecessary space before function pointer arguments
#408: FILE: include/linux/mtd/mtd.h:199:
+	int (*lock) (struct mtd_info *mtd, loff_t ofs, u_int64_t len);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#409: FILE: include/linux/mtd/mtd.h:200:
+	int (*unlock) (struct mtd_info *mtd, loff_t ofs, u_int64_t len);

WARNING:TYPO_SPELLING: 'independant' may be misspelled - perhaps 'independent'?
#418: FILE: include/linux/mtd/mtd.h:231:
+ * Inline function for determining the size of the MTD device, independant
                                                                ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#438: FILE: include/mtd/mtd-abi.h:9:
+	uint64_t start;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#447: FILE: include/mtd/mtd-abi.h:53:
+	uint64_t size;	 // Total size of the MTD

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000236644.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 5 checks, 340 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000236644.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
