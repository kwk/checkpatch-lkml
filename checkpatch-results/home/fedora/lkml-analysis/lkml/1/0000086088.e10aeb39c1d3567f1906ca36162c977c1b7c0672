WARNING:TYPO_SPELLING: 'Intialize' may be misspelled - perhaps 'Initialize'?
#37: 
> > Intialize the request_queue and elevator only when the device is marked
    ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
> > for requests. Also we wrongly initialize the elevator even for bio-based

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#100: 
@@ -2203,6 +2199,29 @@ int dm_swap_table(struct mapped_device *md, struct 

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#143: FILE: block/elevator.c:938:
*e)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:BRACES: braces {} should be used on all arms of this statement
#165: FILE: drivers/md/dm.c:2206:
+	if (md->map)
[...]
+	else if (!dm_table_request_based(table)) {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#167: FILE: drivers/md/dm.c:2208:
+	else if (!dm_table_request_based(table)) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'doesnt' may be misspelled - perhaps 'doesn't'?
#169: FILE: drivers/md/dm.c:2210:
+	 * This is a new bio-based device, and doesnt use the elevator
 	                                       ^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#173: FILE: drivers/md/dm.c:2214:
+		struct request_queue *q;
+		q = md->queue;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#176: FILE: drivers/md/dm.c:2217:
+			struct request_list *rl = &q->rq;
+			elevator_exit(q->elevator);

WARNING:NEEDLESS_IF: mempool_destroy(NULL) is safe and this check is probably not required
#180: FILE: drivers/md/dm.c:2221:
+			if (rl->rq_pool) {
+				mempool_destroy(rl->rq_pool);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#185: FILE: drivers/md/dm.c:2226:
+
+	}

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000086088.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 6 warnings, 2 checks, 42 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000086088.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
