WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#47: FILE: drivers/char/watchdog/Kconfig:188:
+config AT32AP700X_WDT
+	tristate "AT32AP700x watchdog"
+	depends on WATCHDOG && CPU_AT32AP7000
+	help
+	  Watchdog timer embedded into AT32AP700x devices. This will reboot
+	  your system when the timeout is reached.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#83: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#88: FILE: drivers/char/watchdog/at32ap700x_wdt.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#107: FILE: drivers/char/watchdog/at32ap700x_wdt.c:20:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#108: FILE: drivers/char/watchdog/at32ap700x_wdt.c:21:
+#include <asm/io.h>

ERROR:SPACING: space required after that ',' (ctx:VxV)
#123: FILE: drivers/char/watchdog/at32ap700x_wdt.c:36:
+#define WDT_BF(name,value)	((value) << WDT_##name)
                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#125: FILE: drivers/char/watchdog/at32ap700x_wdt.c:38:
+#define wdt_readl(dev,reg)				\
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#127: FILE: drivers/char/watchdog/at32ap700x_wdt.c:40:
+#define wdt_writel(dev,reg,value)			\
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#127: FILE: drivers/char/watchdog/at32ap700x_wdt.c:40:
+#define wdt_writel(dev,reg,value)			\
                           ^

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#142: FILE: drivers/char/watchdog/at32ap700x_wdt.c:55:
+static void inline at32_wdt_stop(void)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

WARNING:LINE_SPACING: Missing a blank line after declarations
#145: FILE: drivers/char/watchdog/at32ap700x_wdt.c:58:
+	unsigned long psel = wdt_readl(wdt, CTRL) & WDT_BF(CTRL_PSEL, 0x0f);
+	wdt_writel(wdt, CTRL, psel | WDT_BF(CTRL_KEY, 0x55));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#152: FILE: drivers/char/watchdog/at32ap700x_wdt.c:65:
+static void inline at32_wdt_start(void)

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#168: FILE: drivers/char/watchdog/at32ap700x_wdt.c:81:
+static void inline at32_wdt_pat(void)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'time < TIMEOUT_MIN'
#207: FILE: drivers/char/watchdog/at32ap700x_wdt.c:120:
+	if ((time < TIMEOUT_MIN) || (time > TIMEOUT_MAX))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'time > TIMEOUT_MAX'
#207: FILE: drivers/char/watchdog/at32ap700x_wdt.c:120:
+	if ((time < TIMEOUT_MIN) || (time > TIMEOUT_MAX))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#224: FILE: drivers/char/watchdog/at32ap700x_wdt.c:137:
+static int at32_wdt_ioctl(struct inode *inode, struct file *file,
+		unsigned int cmd, unsigned long arg)

ERROR:SPACING: space required before the open parenthesis '('
#231: FILE: drivers/char/watchdog/at32ap700x_wdt.c:144:
+	switch(cmd) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#238: FILE: drivers/char/watchdog/at32ap700x_wdt.c:151:
+		ret = copy_to_user(argp, &at32_wdt_info,
+				sizeof(at32_wdt_info)) ? -EFAULT : 0;

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#249: FILE: drivers/char/watchdog/at32ap700x_wdt.c:162:
+		/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#253: FILE: drivers/char/watchdog/at32ap700x_wdt.c:166:
+	case WDIOC_GETSTATUS: /* fall through */

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*wdt)...) over kzalloc(sizeof(struct wdt_at32ap700x)...)
#303: FILE: drivers/char/watchdog/at32ap700x_wdt.c:216:
+	wdt = kzalloc(sizeof(struct wdt_at32ap700x), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#305: FILE: drivers/char/watchdog/at32ap700x_wdt.c:218:
+	if (!wdt) {
+		dev_dbg(&pdev->dev, "no memory for wdt structure\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000421962.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 9 warnings, 5 checks, 348 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000421962.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
