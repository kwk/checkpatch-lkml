WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
Gitweb:     http://git.kernel.org/tip/afd66255b9a48f5851326ddae50e2203fbf71dc9

WARNING:BAD_SIGN_OFF: Duplicate signature
#86: 
Cc: Frederic Weisbecker <fweisbec@gmail.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Duplicate signature
#87: 
Cc: Ananth N Mavinakayanahalli <ananth@in.ibm.com>

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#104: FILE: arch/Kconfig:60:
+config OPTPROBES
+	bool "Kprobes jump optimization support (EXPERIMENTAL)"
+	default y
+	depends on KPROBES
+	depends on !PREEMPT
+	depends on HAVE_OPTPROBES
+	select KALLSYMS_ALL
+	help
+	  This option will allow kprobes to optimize breakpoint to
+	  a jump for reducing its overhead.
+

Kconfig symbols should have a help text which fully describes
it.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#171: FILE: include/linux/kprobes.h:274:
+extern int arch_prepared_optinsn(struct arch_optimized_insn *optinsn);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#172: FILE: include/linux/kprobes.h:275:
+extern int arch_check_optimized_kprobe(struct optimized_kprobe *op);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#173: FILE: include/linux/kprobes.h:276:
+extern int arch_prepare_optimized_kprobe(struct optimized_kprobe *op);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#174: FILE: include/linux/kprobes.h:277:
+extern void arch_remove_optimized_kprobe(struct optimized_kprobe *op);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#175: FILE: include/linux/kprobes.h:278:
+extern int  arch_optimize_kprobe(struct optimized_kprobe *op);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#176: FILE: include/linux/kprobes.h:279:
+extern void arch_unoptimize_kprobe(struct optimized_kprobe *op);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#177: FILE: include/linux/kprobes.h:280:
+extern kprobe_opcode_t *get_optinsn_slot(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#178: FILE: include/linux/kprobes.h:281:
+extern void free_optinsn_slot(kprobe_opcode_t *slot, int dirty);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#179: FILE: include/linux/kprobes.h:282:
+extern int arch_within_optimized_kprobe(struct optimized_kprobe *op,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#182: FILE: include/linux/kprobes.h:285:
+extern void opt_pre_handler(struct kprobe *p, struct pt_regs *regs);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#204: FILE: kernel/kprobes.c:284:
 }
+#ifdef CONFIG_OPTPROBES

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#212: FILE: kernel/kprobes.c:292:
+};
+/* Get a slot for optimized_kprobe buffer */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#224: FILE: kernel/kprobes.c:304:
+void __kprobes free_optinsn_slot(kprobe_opcode_t * slot, int dirty)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#338: FILE: kernel/kprobes.c:441:
+	synchronize_sched();

Usage of a deprecated RCU API is detected.  It is recommended to replace
old flavourful RCU APIs by their new vanilla-RCU counterparts.

The full list of available RCU APIs can be viewed from the kernel docs.

See: https://www.kernel.org/doc/html/latest/RCU/whatisRCU.html#full-list-of-rcu-apis

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*op)...) over kzalloc(sizeof(struct optimized_kprobe)...)
#451: FILE: kernel/kprobes.c:554:
+	op = kzalloc(sizeof(struct optimized_kprobe), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#796: FILE: kernel/kprobes.c:1649:
+		seq_printf(pi, "%p  %s  %s+0x%x  %s ",
 			p->addr, kprobe_type, sym, offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#809: FILE: kernel/kprobes.c:1653:
+		seq_printf(pi, "%p  %s  %p ",
+			p->addr, kprobe_type, p->addr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#814: FILE: kernel/kprobes.c:1658:
+	seq_printf(pi, "%s%s%s\n",
+		(kprobe_gone(p) ? "[GONE]" : ""),

CHECK:BRACES: braces {} should be used on all arms of this statement
#825: FILE: kernel/kprobes.c:1696:
+		if (kprobe_aggrprobe(p)) {
[...]
+				report_probe(pi, kp, sym, offset, modname, p);
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000007415.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 5 warnings, 17 checks, 755 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000007415.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
