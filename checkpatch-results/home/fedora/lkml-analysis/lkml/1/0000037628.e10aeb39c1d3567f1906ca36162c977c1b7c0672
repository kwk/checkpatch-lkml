WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#66: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#71: FILE: arch/mips/include/asm/mach-loongson/ec_kb3310b.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#88: FILE: arch/mips/include/asm/mach-loongson/ec_kb3310b.h:18:
+extern unsigned char ec_read(unsigned short addr);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#89: FILE: arch/mips/include/asm/mach-loongson/ec_kb3310b.h:19:
+extern void ec_write(unsigned short addr, unsigned char val);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#90: FILE: arch/mips/include/asm/mach-loongson/ec_kb3310b.h:20:
+extern int ec_query_seq(unsigned char cmd);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#91: FILE: arch/mips/include/asm/mach-loongson/ec_kb3310b.h:21:
+extern int ec_query_event_num(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#92: FILE: arch/mips/include/asm/mach-loongson/ec_kb3310b.h:22:
+extern int ec_get_event_num(void);

CHECK:BIT_MACRO: Prefer using the BIT macro
#134: FILE: arch/mips/include/asm/mach-loongson/ec_kb3310b.h:64:
+#define	BIT_FAN_CONTROL_ON	(1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#137: FILE: arch/mips/include/asm/mach-loongson/ec_kb3310b.h:67:
+#define	BIT_FAN_STATUS_ON	(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#171: FILE: arch/mips/include/asm/mach-loongson/ec_kb3310b.h:101:
+#define	BIT_BAT_STATUS_LOW		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#172: FILE: arch/mips/include/asm/mach-loongson/ec_kb3310b.h:102:
+#define	BIT_BAT_STATUS_DESTROY		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#173: FILE: arch/mips/include/asm/mach-loongson/ec_kb3310b.h:103:
+#define	BIT_BAT_STATUS_FULL		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#174: FILE: arch/mips/include/asm/mach-loongson/ec_kb3310b.h:104:
+#define	BIT_BAT_STATUS_IN		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#176: FILE: arch/mips/include/asm/mach-loongson/ec_kb3310b.h:106:
+#define	BIT_BAT_CHARGE_STATUS_OVERTEMP	(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#177: FILE: arch/mips/include/asm/mach-loongson/ec_kb3310b.h:107:
+#define	BIT_BAT_CHARGE_STATUS_PRECHG	(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#179: FILE: arch/mips/include/asm/mach-loongson/ec_kb3310b.h:109:
+#define	BIT_BAT_STATE_CHARGING		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#180: FILE: arch/mips/include/asm/mach-loongson/ec_kb3310b.h:110:
+#define	BIT_BAT_STATE_DISCHARGING	(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#182: FILE: arch/mips/include/asm/mach-loongson/ec_kb3310b.h:112:
+#define	BIT_BAT_POWER_S3		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#183: FILE: arch/mips/include/asm/mach-loongson/ec_kb3310b.h:113:
+#define	BIT_BAT_POWER_ON		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#184: FILE: arch/mips/include/asm/mach-loongson/ec_kb3310b.h:114:
+#define	BIT_BAT_POWER_ACIN		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#218: FILE: arch/mips/include/asm/mach-loongson/ec_kb3310b.h:148:
+#define	BIT_LED_RED_POWER	(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#219: FILE: arch/mips/include/asm/mach-loongson/ec_kb3310b.h:149:
+#define	BIT_LED_ORANGE_POWER	(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#220: FILE: arch/mips/include/asm/mach-loongson/ec_kb3310b.h:150:
+#define	BIT_LED_GREEN_CHARGE	(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#221: FILE: arch/mips/include/asm/mach-loongson/ec_kb3310b.h:151:
+#define	BIT_LED_RED_CHARGE	(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#222: FILE: arch/mips/include/asm/mach-loongson/ec_kb3310b.h:152:
+#define	BIT_LED_NUMLOCK		(1 << 4)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#513: FILE: arch/mips/loongson/lemote-2f/platform.c:1:
+/*

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#544: FILE: arch/mips/loongson/lemote-2f/platform.c:32:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pdev"
#546: FILE: arch/mips/loongson/lemote-2f/platform.c:34:
+	if (pdev != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#632: FILE: drivers/platform/mips/yeeloong_laptop.c:1:
+/*

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000037628.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 25 checks, 376 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000037628.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
