WARNING:LINE_SPACING: Missing a blank line after declarations
#84: FILE: security/tomoyo/common.c:889:
+		int i;
+		ptr = new_ptr;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'otehrwise' may be misspelled - perhaps 'otherwise'?
#832: FILE: security/tomoyo/realpath.c:207:
+ * Returns true if @ptr is not NULL and quota not exceeded, false otehrwise.
                                                                   ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#878: FILE: security/tomoyo/realpath.c:212:
+	const int len = ptr ? ksize(ptr) : 0;
+	atomic_add(len, &tomoyo_allocated_memory_for_elements);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#886: FILE: security/tomoyo/realpath.c:220:
+	printk(KERN_WARNING "ERROR: Out of memory. (%s)\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#945: FILE: security/tomoyo/realpath.c:283:
+		printk(KERN_WARNING "ERROR: Name too long. (%s)\n", __func__);

CHECK:SPACING: No space is necessary after a cast
#1014: FILE: security/tomoyo/realpath.c:305:
+		ptr->entry.name = ((char *) ptr) + sizeof(*ptr);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#1015: FILE: security/tomoyo/realpath.c:306:
+		memmove((char *) ptr->entry.name, name, len);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1026: FILE: security/tomoyo/realpath.c:317:
+	printk(KERN_WARNING "ERROR: Out of memory. (%s)\n", __func__);

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1038: FILE: security/tomoyo/realpath.c:386:
 		const unsigned int shared
+			= atomic_read(&tomoyo_allocated_memory_for_savename);

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1041: FILE: security/tomoyo/realpath.c:388:
 		const unsigned int private
+			= atomic_read(&tomoyo_allocated_memory_for_elements);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000108672.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 4 checks, 965 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000108672.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
