WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
some pieces missing (stolen time, in particular), and the exact semantics of

WARNING:LINE_SPACING: Missing a blank line after declarations
#232: FILE: arch/i386/kernel/vmi.c:262:
+	int idle = vmi_stop_hz_timer();
+	vmi_ops.halt();

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#293: FILE: arch/i386/kernel/vmitime.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#310: FILE: arch/i386/kernel/vmitime.c:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#311: FILE: arch/i386/kernel/vmitime.c:19:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#333: FILE: arch/i386/kernel/vmitime.c:41:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#376: FILE: arch/i386/kernel/vmitime.c:84:
+ * Protected by xtime_lock. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#396: FILE: arch/i386/kernel/vmitime.c:104:
+#if 0

CHECK:LINE_SPACING: Please don't use multiple blank lines
#413: FILE: arch/i386/kernel/vmitime.c:121:
+
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#427: FILE: arch/i386/kernel/vmitime.c:135:
+static int __init vmi_timer_alarm_rate_setup(char* str)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#430: FILE: arch/i386/kernel/vmitime.c:138:
+	int alarm_rate;
+	if (get_option(&str, &alarm_rate) == 1 && alarm_rate > 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#432: FILE: arch/i386/kernel/vmitime.c:140:
+		printk(KERN_WARNING "VMI timer alarm HZ set to %d\n", alarm_hz);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#436: FILE: arch/i386/kernel/vmitime.c:144:
+__setup("vmi_timer_alarm_hz=", vmi_timer_alarm_rate_setup);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#438: FILE: arch/i386/kernel/vmitime.c:146:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#443: FILE: arch/i386/kernel/vmitime.c:151:
+	unsigned long long wallclock;
+	wallclock = vmi_timer_ops.get_wallclock(); // nsec units

WARNING:LINE_SPACING: Missing a blank line after declarations
#451: FILE: arch/i386/kernel/vmitime.c:159:
+	struct timespec ts;
+	vmi_get_wallclock_ts(&ts);

WARNING:LINE_SPACING: Missing a blank line after declarations
#458: FILE: arch/i386/kernel/vmitime.c:166:
+	struct timespec ts;
+	vmi_get_wallclock_ts(&ts);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#485: FILE: arch/i386/kernel/vmitime.c:193:
+	set_normalized_timespec(&wall_to_monotonic,
+		-xtime.tv_sec, -xtime.tv_nsec);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#501: FILE: arch/i386/kernel/vmitime.c:209:
+	printk(KERN_WARNING "VMI timer cycles/sec = %llu ; cycles/jiffy = %llu ;"

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#508: FILE: arch/i386/kernel/vmitime.c:216:
+		printk(KERN_WARNING "Error registering VMITIME clocksource.");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#514: FILE: arch/i386/kernel/vmitime.c:222:
+	 * reduce the latency calling update_process_times. */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#515: FILE: arch/i386/kernel/vmitime.c:223:
+	vmi_timer_ops.set_alarm(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#532: FILE: arch/i386/kernel/vmitime.c:240:
+	vmi_timer_ops.set_alarm(

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#540: FILE: arch/i386/kernel/vmitime.c:248:
+ * Also, set the local alarm for the AP. */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#550: FILE: arch/i386/kernel/vmitime.c:258:
+	vmi_timer_ops.set_alarm(

WARNING:LINE_SPACING: Missing a blank line after declarations
#585: FILE: arch/i386/kernel/vmitime.c:293:
+	long long cycles_not_accounted;
+	cycles_not_accounted = cur_process_times_cycles -

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#591: FILE: arch/i386/kernel/vmitime.c:299:
+		 * and possibly reschedule.*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#646: FILE: arch/i386/kernel/vmitime.c:354:
+ * local-APIC LVTT interrupt handler (UP & local-APIC or SMP). */

ERROR:CODE_INDENT: code indent should use tabs where possible
#657: FILE: arch/i386/kernel/vmitime.c:365:
+        /* Update time stolen from this cpu by the hypervisor. */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#673: FILE: arch/i386/kernel/vmitime.c:381:
+	BUG_ON(!irqs_disabled());

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:MEMORY_BARRIER: memory barrier without comment
#678: FILE: arch/i386/kernel/vmitime.c:386:
+	smp_mb();

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#679: FILE: arch/i386/kernel/vmitime.c:387:
+	if (rcu_needs_cpu(cpu) || local_softirq_pending() ||

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#679: FILE: arch/i386/kernel/vmitime.c:387:
+	if (rcu_needs_cpu(cpu) || local_softirq_pending() ||
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#684: FILE: arch/i386/kernel/vmitime.c:392:
+	} else

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#701: FILE: arch/i386/kernel/vmitime.c:409:
+	vmi_timer_ops.set_alarm(

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#715: FILE: arch/i386/kernel/vmitime.c:423:
+	 * worse we will receive a spurious timer interrupt. */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#716: FILE: arch/i386/kernel/vmitime.c:424:
+	vmi_timer_ops.set_alarm(

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#730: FILE: arch/i386/kernel/vmitime.c:438:
+	BUG_ON(!irqs_disabled());

ERROR:CODE_INDENT: code indent should use tabs where possible
#738: FILE: arch/i386/kernel/vmitime.c:446:
+        /* Update time stolen from this cpu by the hypervisor. */$

WARNING:TYPO_SPELLING: 'Reenable' may be misspelled - perhaps 'Re-enable'?
#740: FILE: arch/i386/kernel/vmitime.c:448:
+	/* Reenable the hz timer. */
 	   ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#748: FILE: arch/i386/kernel/vmitime.c:456:
+ * APIC setup and setup_boot_vmi_alarm() is called.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#759: FILE: arch/i386/kernel/vmitime.c:467:
+ * The wrapper code is from arch/i386/kernel/apic.c#smp_apic_timer_interrupt. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#768: FILE: arch/i386/kernel/vmitime.c:476:
+        per_cpu(irq_stat,cpu).apic_timer_irqs++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#768: FILE: arch/i386/kernel/vmitime.c:476:
+        per_cpu(irq_stat,cpu).apic_timer_irqs++;$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#768: FILE: arch/i386/kernel/vmitime.c:476:
+        per_cpu(irq_stat,cpu).apic_timer_irqs++;
                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#839: FILE: include/asm-i386/time.h:33:
+extern unsigned long long native_sched_clock(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#851: FILE: include/asm-i386/timer.h:12:
+extern unsigned long long (*custom_sched_clock)(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#861: FILE: include/asm-i386/vmi_time.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#878: FILE: include/asm-i386/vmi_time.h:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#879: FILE: include/asm-i386/vmi_time.h:19:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#901: FILE: include/asm-i386/vmi_time.h:41:
+	u64 (*get_cycle_counter)(int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#909: FILE: include/asm-i386/vmi_time.h:49:
+extern void __init vmi_time_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#910: FILE: include/asm-i386/vmi_time.h:50:
+extern unsigned long vmi_get_wallclock(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#911: FILE: include/asm-i386/vmi_time.h:51:
+extern int vmi_set_wallclock(unsigned long now);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#912: FILE: include/asm-i386/vmi_time.h:52:
+extern unsigned long long vmi_sched_clock(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#915: FILE: include/asm-i386/vmi_time.h:55:
+extern void __init vmi_timer_setup_boot_alarm(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#916: FILE: include/asm-i386/vmi_time.h:56:
+extern void __init vmi_timer_setup_secondary_alarm(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#917: FILE: include/asm-i386/vmi_time.h:57:
+extern void apic_vmi_timer_interrupt(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#921: FILE: include/asm-i386/vmi_time.h:61:
+extern int vmi_stop_hz_timer(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#922: FILE: include/asm-i386/vmi_time.h:62:
+extern void vmi_account_time_restart_hz_timer(void);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000469078.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 27 warnings, 23 checks, 816 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000469078.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
