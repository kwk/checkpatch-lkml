WARNING:TYPO_SPELLING: 'wouldnt' may be misspelled - perhaps 'wouldn't'?
#46: 
> looking at the problem from another angle: wouldnt this be something 
                                             ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#88: 
>  kernel/kallsyms.c           |   53 +++++++++++++++++++++-----------------------

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#178: FILE: arch/ppc/xmon/xmon.c:180:
+	char modname[MODULE_NAME_LEN+1];
 	                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#231: FILE: arch/x86_64/kernel/traps.c:119:
+	char modname[MODULE_NAME_LEN+1];
 	                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#234: FILE: arch/x86_64/kernel/traps.c:121:
+	char namebuf[KSYM_NAME_LEN+1];
 	                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#303: FILE: include/linux/module.h:373:
+/* fills in value, type, name and module_name. returns 0 on success $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#304: FILE: include/linux/module.h:374:
+/* fills in value, type, name and module_name. returns 0 on success 
+   or -ENOENT if symnum out of range. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#304: FILE: include/linux/module.h:374:
+   or -ENOENT if symnum out of range. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#320: FILE: include/linux/module.h:455:
+   if modname is NULL it is not filled with the module name $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#320: FILE: include/linux/module.h:455:
+/* For kallsyms to ask for address resolution. -ENOENT means not found.
+   if modname is NULL it is not filled with the module name 

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#322: FILE: include/linux/module.h:457:
+   which can be useful during oops backtrace resolution */

WARNING:LINE_SPACING: Missing a blank line after declarations
#345: FILE: include/linux/module.h:530:
+					char *symname, char *modname
+					int safe_to_lock)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#356: FILE: include/linux/module.h:536:
+^I^I^I^I     unsigned long *value, char *type, $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#417: FILE: kernel/kallsyms.c:275:
+	char modbuf[MODULE_NAME_LEN+1];
 	                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#444: FILE: kernel/kallsyms.c:301:
+	char module_name[MODULE_NAME_LEN+1];
 	                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#523: FILE: kernel/kprobes.c:871:
+	char modname[MODULE_NAME_LEN+1], namebuf[KSYM_NAME_LEN+1];
 	                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#523: FILE: kernel/kprobes.c:871:
+	char modname[MODULE_NAME_LEN+1], namebuf[KSYM_NAME_LEN+1];
 	                                                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#566: FILE: kernel/module.c:2107:
+int module_address_lookup(unsigned long addr,
 				  unsigned long *size,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#578: FILE: kernel/module.c:2118:
+^I$

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#585: FILE: kernel/module.c:2123:
+				strlcpy(modname, mod->name, MODULE_NAME_LEN);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#590: FILE: kernel/module.c:2128:
+					strlcpy(symname, modsym, KSYM_NAME_LEN);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#606: FILE: kernel/module.c:2141:
+int module_get_kallsym(unsigned int symnum, unsigned long *value,
+			char *type, char *name, char *module_name)

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#618: FILE: kernel/module.c:2151:
+			strlcpy(module_name, mod->name, MODULE_NAME_LEN);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#622: FILE: kernel/module.c:2155:
+^I^I^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#674: FILE: mm/slab.c:4386:
+	char modname[MODULE_NAME_LEN+1];
 	                            ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000455287.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 10 warnings, 10 checks, 502 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000455287.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
