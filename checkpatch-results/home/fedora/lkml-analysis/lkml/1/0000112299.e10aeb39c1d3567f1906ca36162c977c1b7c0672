WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
This patch introduces a new hardware latency detector module that can be used

WARNING:TYPO_SPELLING: 'occuring' may be misspelled - perhaps 'occurring'?
#54: FILE: Documentation/hwlat_detector.txt:13:
+even know that they are occuring. SMIs are instead are set up by BIOS code
                         ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#114: FILE: drivers/misc/Kconfig:79:
+config HWLAT_DETECTOR
+	tristate "Testing module to detect hardware-induced latencies"
+	depends on DEBUG_FS
+	default m
+	---help---
+	  A simple hardware latency detector. Use this module to detect
+	  large latencies introduced by the behavior of the underlying
+	  system firmware external to Linux. We do this using periodic
+	  use of stop_machine to grab all available CPUs and measure
+	  for unexplainable gaps in the CPU timestamp counter(s). By
+	  default, the module is not enabled until the "enable" file
+	  within the "hwlat_detector" debugfs directory is toggled.
+
+	  This module is often used to detect SMI (System Management
+	  Interrupts) on x86 systems, though is not x86 specific. To
+	  this end, we default to using a sample window of 1 second,
+	  during which we will sample for 0.5 seconds. If an SMI or
+	  similar event occurs during that time, it is recorded
+	  into an 8K samples global ring buffer until retreived.
+
+	  WARNING: This software should never be enabled (it can be built
+	  but should not be turned on after it is loaded) in a production
+	  environment where high latencies are a concern since the
+	  sampling mechanism actually introduces latencies for
+	  regular tasks while the CPU(s) are being held.
+
+	  If unsure, say N
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:TYPO_SPELLING: 'retreived' may be misspelled - perhaps 'retrieved'?
#132: FILE: drivers/misc/Kconfig:97:
+	  into an 8K samples global ring buffer until retreived.
 	                                              ^^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#159: FILE: drivers/misc/hwlat_detector.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#255: FILE: drivers/misc/hwlat_detector.c:97:
+static struct dentry *debug_enable;         ^I/* enable/disable */$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#275: FILE: drivers/misc/hwlat_detector.c:117:
+static ssize_t simple_data_read(struct file *filp, char __user *ubuf,
                                              ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#277: FILE: drivers/misc/hwlat_detector.c:119:
+static ssize_t simple_data_write(struct file *filp, const char __user *ubuf,
                                               ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#279: FILE: drivers/misc/hwlat_detector.c:121:
+static int debug_sample_fopen(struct inode *inode, struct file *filp);
                                                                 ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#280: FILE: drivers/misc/hwlat_detector.c:122:
+static ssize_t debug_sample_fread(struct file *filp, char __user *ubuf,
                                                ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#282: FILE: drivers/misc/hwlat_detector.c:124:
+static int debug_sample_release(struct inode *inode, struct file *filp);
                                                                   ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#283: FILE: drivers/misc/hwlat_detector.c:125:
+static int debug_enable_fopen(struct inode *inode, struct file *filp);
                                                                 ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#284: FILE: drivers/misc/hwlat_detector.c:126:
+static ssize_t debug_enable_fread(struct file *filp, char __user *ubuf,
                                                ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#298: FILE: drivers/misc/hwlat_detector.c:140:
+ * more than buf_size/sizeof(sample) samples are received. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#307: FILE: drivers/misc/hwlat_detector.c:149:
+static struct data {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#364: FILE: drivers/misc/hwlat_detector.c:206:
+	if (e) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#367: FILE: drivers/misc/hwlat_detector.c:209:
+	} else

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#391: FILE: drivers/misc/hwlat_detector.c:233:
+	do {
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#400: FILE: drivers/misc/hwlat_detector.c:242:
+			printk(KERN_ERR BANNER "time running backwards\n");

WARNING:TYPO_SPELLING: 'whith' may be misspelled - perhaps 'with'?
#436: FILE: drivers/misc/hwlat_detector.c:278:
+ * use stop_machine, whith does (intentionally) introduce latency since we
                      ^^^^^

WARNING:TYPO_SPELLING: 'actualy' may be misspelled - perhaps 'actually'?
#442: FILE: drivers/misc/hwlat_detector.c:284:
+ * generalize this if we find there are any actualy systems with alternate
                                             ^^^^^^^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#451: FILE: drivers/misc/hwlat_detector.c:293:
+	while (!kthread_should_stop()) {
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#471: FILE: drivers/misc/hwlat_detector.c:313:
+	printk(KERN_ERR BANNER "could not call stop_machine, disabling\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#476: FILE: drivers/misc/hwlat_detector.c:318:
+
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#487: FILE: drivers/misc/hwlat_detector.c:329:
+	kthread = kthread_run(kthread_fn, NULL,
+					DRVNAME);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#489: FILE: drivers/misc/hwlat_detector.c:331:
+		printk(KERN_ERR BANNER "could not start sampling thread\n");

WARNING:UNNECESSARY_KERN_LEVEL: Possible unnecessary KERN_ERR
#544: FILE: drivers/misc/hwlat_detector.c:386:
+	if (WARN(!ring_buffer, KERN_ERR BANNER

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#558: FILE: drivers/misc/hwlat_detector.c:400:
+
+}

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#562: FILE: drivers/misc/hwlat_detector.c:404:
+ * @filp: The active open file structure for the debugfs "file"
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#574: FILE: drivers/misc/hwlat_detector.c:416:
+static ssize_t simple_data_read(struct file *filp, char __user *ubuf,
                                              ^^^^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#594: FILE: drivers/misc/hwlat_detector.c:436:
+
+}

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#598: FILE: drivers/misc/hwlat_detector.c:440:
+ * @filp: The active open file structure for the debugfs "file"
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#610: FILE: drivers/misc/hwlat_detector.c:452:
+static ssize_t simple_data_write(struct file *filp, const char __user *ubuf,
                                               ^^^^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#622: FILE: drivers/misc/hwlat_detector.c:464:
+	buf[U64STR_SIZE-1] = '\0';			/* just in case */
 	               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONSIDER_KSTRTO: strict_strtoull is obsolete, use kstrtoull instead
#623: FILE: drivers/misc/hwlat_detector.c:465:
+	err = strict_strtoull(buf, 10, &val);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#637: FILE: drivers/misc/hwlat_detector.c:479:
+ * @filp: The active open file structure for the debugfs "file"
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#642: FILE: drivers/misc/hwlat_detector.c:484:
+static int debug_count_fopen(struct inode *inode, struct file *filp)
                                                                ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#649: FILE: drivers/misc/hwlat_detector.c:491:
+ * @filp: The active open file structure for the debugfs "file"
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#659: FILE: drivers/misc/hwlat_detector.c:501:
+static ssize_t debug_count_fread(struct file *filp, char __user *ubuf,
                                               ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#660: FILE: drivers/misc/hwlat_detector.c:502:
+static ssize_t debug_count_fread(struct file *filp, char __user *ubuf,
+				     size_t cnt, loff_t *ppos)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#662: FILE: drivers/misc/hwlat_detector.c:504:
+	return simple_data_read(filp, ubuf, cnt, ppos, &data.count);
 	                        ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#667: FILE: drivers/misc/hwlat_detector.c:509:
+ * @filp: The active open file structure for the debugfs "file"
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#676: FILE: drivers/misc/hwlat_detector.c:518:
+static ssize_t  debug_count_fwrite(struct file *filp,
                                                 ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#677: FILE: drivers/misc/hwlat_detector.c:519:
+static ssize_t  debug_count_fwrite(struct file *filp,
+				       const char __user *ubuf,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#681: FILE: drivers/misc/hwlat_detector.c:523:
+	return simple_data_write(filp, ubuf, cnt, ppos, &data.count);
 	                         ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#687: FILE: drivers/misc/hwlat_detector.c:529:
+ * @filp: The active open file structure for the debugfs "file"
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#692: FILE: drivers/misc/hwlat_detector.c:534:
+static int debug_enable_fopen(struct inode *inode, struct file *filp)
                                                                 ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#699: FILE: drivers/misc/hwlat_detector.c:541:
+ * @filp: The active open file structure for the debugfs "file"
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#708: FILE: drivers/misc/hwlat_detector.c:550:
+static ssize_t debug_enable_fread(struct file *filp, char __user *ubuf,
                                                ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#709: FILE: drivers/misc/hwlat_detector.c:551:
+static ssize_t debug_enable_fread(struct file *filp, char __user *ubuf,
+				      size_t cnt, loff_t *ppos)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cnt < sizeof(buf)'
#713: FILE: drivers/misc/hwlat_detector.c:555:
+	if ((cnt < sizeof(buf)) || (*ppos))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#726: FILE: drivers/misc/hwlat_detector.c:568:
+ * @filp: The active open file structure for the debugfs "file"
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#737: FILE: drivers/misc/hwlat_detector.c:579:
+static ssize_t  debug_enable_fwrite(struct file *filp,
                                                  ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#738: FILE: drivers/misc/hwlat_detector.c:580:
+static ssize_t  debug_enable_fwrite(struct file *filp,
+					const char __user *ubuf,

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#751: FILE: drivers/misc/hwlat_detector.c:593:
+	buf[sizeof(buf)-1] = '\0';			/* just in case */
 	               ^

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#752: FILE: drivers/misc/hwlat_detector.c:594:
+	err = strict_strtoul(buf, 10, &val);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#753: FILE: drivers/misc/hwlat_detector.c:595:
+	if (0 != err)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#777: FILE: drivers/misc/hwlat_detector.c:619:
+ * @filp: The active open file structure for the debugfs "file"
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#782: FILE: drivers/misc/hwlat_detector.c:624:
+static int debug_max_fopen(struct inode *inode, struct file *filp)
                                                              ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#789: FILE: drivers/misc/hwlat_detector.c:631:
+ * @filp: The active open file structure for the debugfs "file"
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#798: FILE: drivers/misc/hwlat_detector.c:640:
+static ssize_t debug_max_fread(struct file *filp, char __user *ubuf,
                                             ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#799: FILE: drivers/misc/hwlat_detector.c:641:
+static ssize_t debug_max_fread(struct file *filp, char __user *ubuf,
+				   size_t cnt, loff_t *ppos)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#801: FILE: drivers/misc/hwlat_detector.c:643:
+	return simple_data_read(filp, ubuf, cnt, ppos, &data.max_sample);
 	                        ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#806: FILE: drivers/misc/hwlat_detector.c:648:
+ * @filp: The active open file structure for the debugfs "file"
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#816: FILE: drivers/misc/hwlat_detector.c:658:
+static ssize_t  debug_max_fwrite(struct file *filp,
                                               ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#817: FILE: drivers/misc/hwlat_detector.c:659:
+static ssize_t  debug_max_fwrite(struct file *filp,
+				     const char __user *ubuf,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#821: FILE: drivers/misc/hwlat_detector.c:663:
+	return simple_data_write(filp, ubuf, cnt, ppos, &data.max_sample);
 	                         ^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#824: FILE: drivers/misc/hwlat_detector.c:666:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#828: FILE: drivers/misc/hwlat_detector.c:670:
+ * @filp: The active open file structure for the debugfs "file"
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#837: FILE: drivers/misc/hwlat_detector.c:679:
+static int debug_sample_fopen(struct inode *inode, struct file *filp)
                                                                 ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#847: FILE: drivers/misc/hwlat_detector.c:689:
+ * @filp: The active open file structure for the debugfs "file"
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#860: FILE: drivers/misc/hwlat_detector.c:702:
+static ssize_t debug_sample_fread(struct file *filp, char __user *ubuf,
                                                ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#861: FILE: drivers/misc/hwlat_detector.c:703:
+static ssize_t debug_sample_fread(struct file *filp, char __user *ubuf,
+					size_t cnt, loff_t *ppos)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*sample)...) over kzalloc(sizeof(struct sample)...)
#870: FILE: drivers/misc/hwlat_detector.c:712:
+	sample = kzalloc(sizeof(struct sample), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#875: FILE: drivers/misc/hwlat_detector.c:717:
+	while (!buffer_get_sample(sample)) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#899: FILE: drivers/misc/hwlat_detector.c:741:
+	len = snprintf(buf, sizeof(buf), "%010lu.%010lu\t%llu\n",
+		      sample->timestamp.tv_sec,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#903: FILE: drivers/misc/hwlat_detector.c:745:
+
+

WARNING:TYPO_SPELLING: 'represenation' may be misspelled - perhaps 'representation'?
#918: FILE: drivers/misc/hwlat_detector.c:760:
+ * @inode: The in-kernel inode represenation of the debugfs "file"
                                ^^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#919: FILE: drivers/misc/hwlat_detector.c:761:
+ * @filp: The active open file structure for the debugfs "file"
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#924: FILE: drivers/misc/hwlat_detector.c:766:
+static int debug_sample_release(struct inode *inode, struct file *filp)
                                                                   ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#934: FILE: drivers/misc/hwlat_detector.c:776:
+ * @filp: The active open file structure for the debugfs "file"
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#939: FILE: drivers/misc/hwlat_detector.c:781:
+static int debug_threshold_fopen(struct inode *inode, struct file *filp)
                                                                    ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#946: FILE: drivers/misc/hwlat_detector.c:788:
+ * @filp: The active open file structure for the debugfs "file"
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#956: FILE: drivers/misc/hwlat_detector.c:798:
+static ssize_t debug_threshold_fread(struct file *filp, char __user *ubuf,
                                                   ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#957: FILE: drivers/misc/hwlat_detector.c:799:
+static ssize_t debug_threshold_fread(struct file *filp, char __user *ubuf,
+					 size_t cnt, loff_t *ppos)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#959: FILE: drivers/misc/hwlat_detector.c:801:
+	return simple_data_read(filp, ubuf, cnt, ppos, &data.threshold);
 	                        ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#964: FILE: drivers/misc/hwlat_detector.c:806:
+ * @filp: The active open file structure for the debugfs "file"
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#974: FILE: drivers/misc/hwlat_detector.c:816:
+static ssize_t  debug_threshold_fwrite(struct file *filp,
                                                     ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#975: FILE: drivers/misc/hwlat_detector.c:817:
+static ssize_t  debug_threshold_fwrite(struct file *filp,
+					const char __user *ubuf,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#981: FILE: drivers/misc/hwlat_detector.c:823:
+	ret = simple_data_write(filp, ubuf, cnt, ppos, &data.threshold);
 	                        ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#992: FILE: drivers/misc/hwlat_detector.c:834:
+ * @filp: The active open file structure for the debugfs "file"
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#997: FILE: drivers/misc/hwlat_detector.c:839:
+static int debug_width_fopen(struct inode *inode, struct file *filp)
                                                                ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1004: FILE: drivers/misc/hwlat_detector.c:846:
+ * @filp: The active open file structure for the debugfs "file"
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1016: FILE: drivers/misc/hwlat_detector.c:858:
+static ssize_t debug_width_fread(struct file *filp, char __user *ubuf,
                                               ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1017: FILE: drivers/misc/hwlat_detector.c:859:
+static ssize_t debug_width_fread(struct file *filp, char __user *ubuf,
+				     size_t cnt, loff_t *ppos)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1019: FILE: drivers/misc/hwlat_detector.c:861:
+	return simple_data_read(filp, ubuf, cnt, ppos, &data.sample_width);
 	                        ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1024: FILE: drivers/misc/hwlat_detector.c:866:
+ * @filp: The active open file structure for the debugfs "file"
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1037: FILE: drivers/misc/hwlat_detector.c:879:
+static ssize_t  debug_width_fwrite(struct file *filp,
                                                 ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1038: FILE: drivers/misc/hwlat_detector.c:880:
+static ssize_t  debug_width_fwrite(struct file *filp,
+				       const char __user *ubuf,

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1051: FILE: drivers/misc/hwlat_detector.c:893:
+	buf[U64STR_SIZE-1] = '\0';			/* just in case */
 	               ^

WARNING:CONSIDER_KSTRTO: strict_strtoull is obsolete, use kstrtoull instead
#1052: FILE: drivers/misc/hwlat_detector.c:894:
+	err = strict_strtoull(buf, 10, &val);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1053: FILE: drivers/misc/hwlat_detector.c:895:
+	if (0 != err)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1057: FILE: drivers/misc/hwlat_detector.c:899:
+	if (val < data.sample_window)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1059: FILE: drivers/misc/hwlat_detector.c:901:
+	else {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1074: FILE: drivers/misc/hwlat_detector.c:916:
+ * @filp: The active open file structure for the debugfs "file"
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1082: FILE: drivers/misc/hwlat_detector.c:924:
+static int debug_window_fopen(struct inode *inode, struct file *filp)
                                                                 ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1089: FILE: drivers/misc/hwlat_detector.c:931:
+ * @filp: The active open file structure for the debugfs "file"
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1100: FILE: drivers/misc/hwlat_detector.c:942:
+static ssize_t debug_window_fread(struct file *filp, char __user *ubuf,
                                                ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1101: FILE: drivers/misc/hwlat_detector.c:943:
+static ssize_t debug_window_fread(struct file *filp, char __user *ubuf,
+				      size_t cnt, loff_t *ppos)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1103: FILE: drivers/misc/hwlat_detector.c:945:
+	return simple_data_read(filp, ubuf, cnt, ppos, &data.sample_window);
 	                        ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1108: FILE: drivers/misc/hwlat_detector.c:950:
+ * @filp: The active open file structure for the debugfs "file"
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1121: FILE: drivers/misc/hwlat_detector.c:963:
+static ssize_t  debug_window_fwrite(struct file *filp,
                                                  ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1122: FILE: drivers/misc/hwlat_detector.c:964:
+static ssize_t  debug_window_fwrite(struct file *filp,
+					const char __user *ubuf,

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1135: FILE: drivers/misc/hwlat_detector.c:977:
+	buf[U64STR_SIZE-1] = '\0';			/* just in case */
 	               ^

WARNING:CONSIDER_KSTRTO: strict_strtoull is obsolete, use kstrtoull instead
#1136: FILE: drivers/misc/hwlat_detector.c:978:
+	err = strict_strtoull(buf, 10, &val);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1137: FILE: drivers/misc/hwlat_detector.c:979:
+	if (0 != err)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1141: FILE: drivers/misc/hwlat_detector.c:983:
+	if (data.sample_width < val)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1143: FILE: drivers/misc/hwlat_detector.c:985:
+	else {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1186: FILE: drivers/misc/hwlat_detector.c:1028:
+^I.open ^I^I= debug_sample_fopen,$

WARNING:TYPO_SPELLING: 'dectector' may be misspelled - perhaps 'detector'?
#1228: FILE: drivers/misc/hwlat_detector.c:1070:
+ * dectector was started.
    ^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1239: FILE: drivers/misc/hwlat_detector.c:1081:
+	debug_sample = debugfs_create_file("sample", 0444,
+					       debug_dir, NULL,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1245: FILE: drivers/misc/hwlat_detector.c:1087:
+	debug_count = debugfs_create_file("count", 0444,
+					      debug_dir, NULL,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1251: FILE: drivers/misc/hwlat_detector.c:1093:
+	debug_max = debugfs_create_file("max", 0444,
+					    debug_dir, NULL,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1257: FILE: drivers/misc/hwlat_detector.c:1099:
+	debug_sample_window = debugfs_create_file("window", 0644,
+						      debug_dir, NULL,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1263: FILE: drivers/misc/hwlat_detector.c:1105:
+	debug_sample_width = debugfs_create_file("width", 0644,
+						     debug_dir, NULL,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1269: FILE: drivers/misc/hwlat_detector.c:1111:
+	debug_threshold = debugfs_create_file("threshold", 0644,
+						  debug_dir, NULL,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1275: FILE: drivers/misc/hwlat_detector.c:1117:
+	debug_enable = debugfs_create_file("enable", 0644,
+					       debug_dir, &enabled,

CHECK:BRACES: braces {} should be used on all arms of this statement
#1277: FILE: drivers/misc/hwlat_detector.c:1119:
+	if (!debug_enable)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1280: FILE: drivers/misc/hwlat_detector.c:1122:
+	else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1327: FILE: drivers/misc/hwlat_detector.c:1169:
+	printk(KERN_INFO BANNER "version %s\n", VERSION);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1330: FILE: drivers/misc/hwlat_detector.c:1172:
+	if (0 != ret)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1334: FILE: drivers/misc/hwlat_detector.c:1176:
+	if (0 != ret)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1347: FILE: drivers/misc/hwlat_detector.c:1189:
+
+}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1362: FILE: drivers/misc/hwlat_detector.c:1204:
+
+}

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#1376: FILE: MAINTAINERS:2462:
+P:	Jon Masters
+M:	jcm@jonmasters.org

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'S:' before 'W:'
#1378: FILE: MAINTAINERS:2464:
+W:	http://www.kernel.org/pub/linux/kernel/people/jcm/hwlat_detector/
+S:	Supported

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'L:' before 'S:'
#1379: FILE: MAINTAINERS:2465:
+S:	Supported
+L:	linux-kernel@vger.kernel.org

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000112299.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 90 warnings, 47 checks, 1324 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000112299.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
