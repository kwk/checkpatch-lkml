WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#59: FILE: arch/x86/kernel/kprobes_32.c:47:
+			      doesn't switch kernel stack.*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LINE_SPACING: Missing a blank line after declarations
#127: FILE: arch/x86/kernel/kprobes_32.c:294:
+		u8 modrm = *++insn;
+		if ((modrm & 0xc7) == 0x05) { /* %rip+disp32 addressing mode */

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#129: FILE: arch/x86/kernel/kprobes_32.c:296:
+			return (s32 *) ++insn;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#140: FILE: arch/x86/kernel/kprobes_32.c:307:
+	s32 *ripdisp;
+	memcpy(p->ainsn.insn, p->addr, MAX_INSN_SIZE);

CHECK:SPACING: No space is necessary after a cast
#156: FILE: arch/x86/kernel/kprobes_32.c:323:
+		s64 disp = (u8 *) p->addr + *ripdisp - (u8 *) p->ainsn.insn;

CHECK:SPACING: No space is necessary after a cast
#157: FILE: arch/x86/kernel/kprobes_32.c:324:
+		BUG_ON((s64) (s32) disp != disp); /* Sanity check.  */

WARNING:LINE_SPACING: Missing a blank line after declarations
#157: FILE: arch/x86/kernel/kprobes_32.c:324:
+		s64 disp = (u8 *) p->addr + *ripdisp - (u8 *) p->ainsn.insn;
+		BUG_ON((s64) (s32) disp != disp); /* Sanity check.  */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#157: FILE: arch/x86/kernel/kprobes_32.c:324:
+		BUG_ON((s64) (s32) disp != disp); /* Sanity check.  */

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#180: FILE: arch/x86/kernel/kprobes_64.c:171:
+	} __attribute__((packed)) *jop;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#207: FILE: arch/x86/kernel/kprobes_64.c:198:
+		if (0x63 < opcode && opcode < 0x67)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#215: FILE: arch/x86/kernel/kprobes_64.c:206:
+		return (0xc1 < opcode && opcode < 0xcc) || opcode == 0xcf;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#226: FILE: arch/x86/kernel/kprobes_64.c:217:
+		return (opcode == 0xf5 || (0xf7 < opcode && opcode < 0xfe));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000346873.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 3 checks, 182 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000346873.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
