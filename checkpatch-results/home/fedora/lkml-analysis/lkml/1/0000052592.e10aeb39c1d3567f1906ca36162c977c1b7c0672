WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#51: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#56: FILE: security/apparmor/include/policy.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_profile' - possible side-effects?
#91: FILE: security/apparmor/include/policy.h:36:
+#define PROFILE_COMPLAIN(_profile)				\
+	((aa_g_profile_mode == APPARMOR_COMPLAIN) || ((_profile) &&	\
+					(_profile)->mode == APPARMOR_COMPLAIN))

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_profile' - possible side-effects?
#95: FILE: security/apparmor/include/policy.h:40:
+#define PROFILE_KILL(_profile)					\
+	((aa_g_profile_mode == APPARMOR_KILL) || ((_profile) &&	\
+					(_profile)->mode == APPARMOR_KILL))

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_profile' - possible side-effects?
#99: FILE: security/apparmor/include/policy.h:44:
+#define PROFILE_IS_HAT(_profile) \
+	((_profile) && (_profile)->flags & PFLAG_HAT)

WARNING:TYPO_SPELLING: 'guarenteed' may be misspelled - perhaps 'guaranteed'?
#172: FILE: security/apparmor/include/policy.h:117:
+ * aa_namespaces and profile names within a namespace are guarenteed to be
                                                           ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#173: FILE: security/apparmor/include/policy.h:118:
+ * unique.  When profiles in seperate namespaces have the same name they
                              ^^^^^^^^

WARNING:TYPO_SPELLING: 'componets' may be misspelled - perhaps 'components'?
#188: FILE: security/apparmor/include/policy.h:133:
+ * @base - base componets of the profile (name, refcount, lists, lock ...)
                 ^^^^^^^^^

WARNING:TYPO_SPELLING: 'hierachy' may be misspelled - perhaps 'hierarchy'?
#213: FILE: security/apparmor/include/policy.h:158:
+ * Profiles have a hierachy where hats and children profiles keep
                    ^^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ns->base.count
#280: FILE: security/apparmor/include/policy.h:225:
+		kref_get(&(ns->base.count));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around p->base.count
#327: FILE: security/apparmor/include/policy.h:272:
+		kref_get(&(p->base.count));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#358: FILE: security/apparmor/include/sid.h:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#409: FILE: security/apparmor/policy.c:1:
+/*

WARNING:TYPO_SPELLING: 'sytem' may be misspelled - perhaps 'system'?
#424: FILE: security/apparmor/policy.c:16:
+ * task is confined by.  Every task in the sytem has a profile attached
                                            ^^^^^

WARNING:REPEATED_WORD: Possible repeated word: 'namespace'
#448: FILE: security/apparmor/policy.c:40:
+ * Reserved namespace namespace

WARNING:SPLIT_STRING: quoted string split across lines
#496: FILE: security/apparmor/policy.c:88:
+		AA_ERROR("%s: internal error, "
+			 "policy '%s' still contains profiles\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#498: FILE: security/apparmor/policy.c:90:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#503: FILE: security/apparmor/policy.c:95:
+		BUG();

WARNING:LINE_SPACING: Missing a blank line after declarations
#541: FILE: security/apparmor/policy.c:133:
+	struct aa_namespace *ns;
+	ns = alloc_aa_namespace("default");

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#686: FILE: security/apparmor/policy.c:278:
+		struct aa_namespace *new_ns;
+		write_unlock(&ns_list_lock);

CHECK:BRACES: braces {} should be used on all arms of this statement
#734: FILE: security/apparmor/policy.c:326:
+	if (replacement) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#744: FILE: security/apparmor/policy.c:336:
+	} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#755: FILE: security/apparmor/policy.c:347:
+	struct aa_profile *profile, *tmp;
+	list_for_each_entry_safe(profile, tmp, head, base.list) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#764: FILE: security/apparmor/policy.c:356:
+	struct aa_profile *unconfined = ns->unconfined;
+	list_del_init(&ns->base.list);

WARNING:SPLIT_STRING: quoted string split across lines
#936: FILE: security/apparmor/policy.c:528:
+			AA_ERROR("%s: internal error, "
+				 "profile '%s' still on ns list\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#938: FILE: security/apparmor/policy.c:530:
+			BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#946: FILE: security/apparmor/policy.c:538:
+	BUG_ON(!list_empty(&profile->base.profiles));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1093: FILE: security/apparmor/sid.c:1:
+/*

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#1166: FILE: security/apparmor/sid.c:74:
+ * @sid: sid of te profile
                 ^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000052592.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 22 warnings, 7 checks, 1127 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000052592.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
