WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
This control is used rb_tree and the key is used a pointer of cfq_meta_data.

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#37: 
      Signed-off-by: Satoshi UCHIDA <uchida@ap.jp.nec.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#81: FILE: block/cfq-cgroup.c:105:
+	BUG_ON(!RB_EMPTY_NODE(&cfqd->group_node));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#92: FILE: block/cfq-cgroup.c:116:
+		if (cfqd->cfqmd < __cfqd->cfqmd) {
[...]
+		} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: block/cfq-cgroup.c:123:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#112: FILE: block/cfq-cgroup.c:136:
+^I^Icfqc = cgroup_to_cfq_cgroup(get_root_subsys(&cfq_subsys));^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#116: FILE: block/cfq-cgroup.c:140:
+		struct cfq_data *__cfqd;
+		__cfqd = __cfq_cgroup_init_queue(CFQ_DRV_UNIQ_DATA(cfqd).queue, cfqd->cfqmd);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open brace '{'
#124: FILE: block/cfq-cgroup.c:148:
+		list_for_each_entry(child, &cfqc->css.cgroup->children, children){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#131: FILE: block/cfq-cgroup.c:155:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: block/cfq-cgroup.c:166:
+  ^IRB_CLEAR_NODE(&cfqd->group_node);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#142: FILE: block/cfq-cgroup.c:166:
+  ^IRB_CLEAR_NODE(&cfqd->group_node);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: block/cfq-cgroup.c:166:
+  ^IRB_CLEAR_NODE(&cfqd->group_node);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#163: FILE: block/cfq-cgroup.c:187:
+	struct rb_node *p;
+	if (parent) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "p"
#167: FILE: block/cfq-cgroup.c:191:
+		while (p != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#169: FILE: block/cfq-cgroup.c:193:
+			struct cfq_data *__cfqd;
+			__cfqd = rb_entry(p, struct cfq_data, group_node);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: block/cfq-cgroup.c:197:
+^I^I^Ip = rb_next(p);^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: block/cfq-cgroup.c:198:
+^I^I}^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: block/cfq-cgroup.c:242:
+^Icfqc->siblings--;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#232: FILE: block/cfq-cgroup.c:285:
+^I^I__cfq_exit_data(cfqd);^I^I^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#273: FILE: include/linux/cgroup.h:359:
+struct cgroup* get_root_subsys(struct cgroup_subsys *css);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#285: FILE: kernel/cgroup.c:1293:
 
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#286: FILE: kernel/cgroup.c:1294:
+struct cgroup* get_root_subsys(struct cgroup_subsys *css)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000299727.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 9 warnings, 3 checks, 221 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000299727.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
