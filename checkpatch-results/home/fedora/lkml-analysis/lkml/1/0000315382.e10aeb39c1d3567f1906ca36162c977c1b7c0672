WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#37: FILE: Makefile:4:
+EXTRAVERSION = .19
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: Unbalanced braces around else statement
#74: FILE: arch/i386/kernel/ptrace.c:172:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#111: FILE: arch/i386/kernel/traps.c:565:
+DO_ERROR_INFO( 6, SIGILL,  "invalid opcode", invalid_op, ILL_ILLOPN, regs->eip, 0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#143: FILE: arch/x86_64/kernel/ptrace.c:110:
+		else {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#213: FILE: drivers/ata/sata_promise.c:552:
+	const u32 SG_COUNT_ASIC_BUG = 41*4;
 	                                ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!qc->__sg"
#218: FILE: drivers/ata/sata_promise.c:557:
+	WARN_ON(qc->__sg == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#230: FILE: drivers/ata/sata_promise.c:569:
+		addr = (u32) sg_dma_address(sg);

ERROR:CODE_INDENT: code indent should use tabs where possible
#340: FILE: drivers/char/agp/intel-agp.c:38:
+                 agp_bridge->dev->device == PCI_DEVICE_ID_INTEL_82965GM_HB || \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: drivers/char/agp/intel-agp.c:38:
+                 agp_bridge->dev->device == PCI_DEVICE_ID_INTEL_82965GM_HB || \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#341: FILE: drivers/char/agp/intel-agp.c:39:
+                 agp_bridge->dev->device == PCI_DEVICE_ID_INTEL_82965GME_HB)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: drivers/char/agp/intel-agp.c:39:
+                 agp_bridge->dev->device == PCI_DEVICE_ID_INTEL_82965GME_HB)$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dslot)...) over kzalloc(sizeof(struct dummy_slot)...)
#582: FILE: drivers/pci/hotplug/fakephp.c:119:
+	dslot = kzalloc(sizeof(struct dummy_slot), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:CAMELCASE: Avoid CamelCase: <SCpnt>
#670: FILE: drivers/scsi/sd.c:898:
+	u64 end_lba = SCpnt->request->sector + (xfer_size / 512);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LINE_SPACING: Missing a blank line after declarations
#703: FILE: drivers/scsi/sd.c:944:
+			u64 factor = SCpnt->device->sector_size / 512;
+			do_div(start_lba, factor);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#888: FILE: fs/nfs/write.c:720:
+		!(NFS_I(inode)->cache_validity & (NFS_INO_REVAL_PAGECACHE|NFS_INO_INVALID_DATA));
 		                                                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#907: FILE: fs/nfs/write.c:749:
+	if (nfs_write_pageuptodate(page, inode) &&
+			inode->i_flock == NULL &&

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!inode->i_flock"
#907: FILE: fs/nfs/write.c:749:
+			inode->i_flock == NULL &&

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1094: FILE: net/netfilter/nf_conntrack_proto_tcp.c:971:
 	if (old_state != new_state
+	    && new_state == TCP_CONNTRACK_FIN_WAIT)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000315382.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 5 warnings, 11 checks, 892 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000315382.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
