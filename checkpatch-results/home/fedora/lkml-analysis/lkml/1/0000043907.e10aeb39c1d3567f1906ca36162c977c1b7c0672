WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
As the function_graph tracer goes through the trace entries (using "trace" file)

WARNING:TYPO_SPELLING: 'Generaly' may be misspelled - perhaps 'Generally'?
#71: 
next entry is not RETURN of the same type.  Generaly it is whatever entry 
                                            ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#115: FILE: include/linux/trace_seq.h:37:
+extern int trace_print_seq(struct seq_file *m, struct trace_seq *s);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#191: FILE: kernel/trace/trace_functions_graph.c:445:
+static void set_private_entry(struct trace_iterator *iter,
+				struct ftrace_graph_ent_entry *ent,

WARNING:LINE_SPACING: Missing a blank line after declarations
#195: FILE: kernel/trace/trace_functions_graph.c:449:
+	struct fgraph_data *data = iter->private;
+	data->ent = *ent;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#202: FILE: kernel/trace/trace_functions_graph.c:456:
+	struct fgraph_data *data = iter->private;
+	data->is_leaf = leaf;

WARNING:LINE_SPACING: Missing a blank line after declarations
#208: FILE: kernel/trace/trace_functions_graph.c:462:
+	struct fgraph_data *data = iter->private;
+	data->is_entry = entry;

WARNING:TYPO_SPELLING: 'failes' may be misspelled - perhaps 'fails'?
#220: FILE: kernel/trace/trace_functions_graph.c:492:
+	 * if the output failes.
 	                 ^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#282: FILE: kernel/trace/trace_functions_graph.c:842:
+handle_graph_entry(struct ftrace_graph_ent_entry *field, struct trace_seq *s,
+			struct trace_iterator *iter)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*data)...) over kzalloc(sizeof(struct fgraph_data)...)
#401: FILE: kernel/trace/trace_functions_graph.c:1144:
+	data = kzalloc(sizeof(struct fgraph_data), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:BRACES: braces {} should be used on all arms of this statement
#404: FILE: kernel/trace/trace_functions_graph.c:1147:
+	if (!data || !data_cpu)
[...]
-	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#407: FILE: kernel/trace/trace_functions_graph.c:1149:
+	else {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#455: FILE: kernel/trace/trace_output.c:31:
+	ret = s->failed = seq_write(m, s->buffer, len);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000043907.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 7 checks, 383 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000043907.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
