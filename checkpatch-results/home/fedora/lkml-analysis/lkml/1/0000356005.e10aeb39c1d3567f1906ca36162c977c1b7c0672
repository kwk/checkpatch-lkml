ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#40: FILE: drivers/block/cciss.c:232:
+static inline int find_drv_index(int ctlr, drive_info_struct *drv){

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open brace '{'
#40: FILE: drivers/block/cciss.c:232:
+static inline int find_drv_index(int ctlr, drive_info_struct *drv){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#41: FILE: drivers/block/cciss.c:233:
+        int i;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#41: FILE: drivers/block/cciss.c:233:
+        int i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#42: FILE: drivers/block/cciss.c:234:
+        for (i=0; i < CISS_MAX_LUN; i++) {$

WARNING:LINE_SPACING: Missing a blank line after declarations
#42: FILE: drivers/block/cciss.c:234:
+        int i;
+        for (i=0; i < CISS_MAX_LUN; i++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#42: FILE: drivers/block/cciss.c:234:
+        for (i=0; i < CISS_MAX_LUN; i++) {$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#42: FILE: drivers/block/cciss.c:234:
+        for (i=0; i < CISS_MAX_LUN; i++) {
               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#43: FILE: drivers/block/cciss.c:235:
+                if (hba[ctlr]->drv[i].LunID == drv->LunID)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#43: FILE: drivers/block/cciss.c:235:
+                if (hba[ctlr]->drv[i].LunID == drv->LunID)$

CHECK:CAMELCASE: Avoid CamelCase: <LunID>
#43: FILE: drivers/block/cciss.c:235:
+                if (hba[ctlr]->drv[i].LunID == drv->LunID)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:CODE_INDENT: code indent should use tabs where possible
#44: FILE: drivers/block/cciss.c:236:
+                        return i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#44: FILE: drivers/block/cciss.c:236:
+                        return i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#45: FILE: drivers/block/cciss.c:237:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#45: FILE: drivers/block/cciss.c:237:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#46: FILE: drivers/block/cciss.c:238:
+        return i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#46: FILE: drivers/block/cciss.c:238:
+        return i;$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#52: FILE: drivers/block/cciss.c:244:
+#define ENG_GIG_FACTOR (ENG_GIG/512)
                                ^

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#54: FILE: drivers/block/cciss.c:246:
+static const char *raid_label[] = { "0", "4", "1(1+0)", "5", "5+1", "ADG",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#57: FILE: drivers/block/cciss.c:249:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#61: FILE: drivers/block/cciss.c:253:
+static void cciss_sysfs_stat_inquiry(int ctlr, int logvol,
+			int withirq, drive_info_struct *drv)

CHECK:CAMELCASE: Avoid CamelCase: <InquiryData_struct>
#64: FILE: drivers/block/cciss.c:256:
+	InquiryData_struct *inq_buff;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#74: FILE: drivers/block/cciss.c:266:
+		printk(KERN_ERR "cciss: out of memory\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#74: FILE: drivers/block/cciss.c:266:
+	if (!inq_buff) {
+		printk(KERN_ERR "cciss: out of memory\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#80: FILE: drivers/block/cciss.c:272:
+		return_code = sendcmd_withirq(CISS_INQUIRY, ctlr,
+			inq_buff, sizeof(*inq_buff), 1, logvol ,0, TYPE_CMD);

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#80: FILE: drivers/block/cciss.c:272:
+			inq_buff, sizeof(*inq_buff), 1, logvol ,0, TYPE_CMD);
 			                                       ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#80: FILE: drivers/block/cciss.c:272:
+			inq_buff, sizeof(*inq_buff), 1, logvol ,0, TYPE_CMD);
 			                                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#83: FILE: drivers/block/cciss.c:275:
+		return_code = sendcmd(CISS_INQUIRY, ctlr, inq_buff,
+			sizeof(*inq_buff), 1, logvol , 0, NULL, TYPE_CMD);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#83: FILE: drivers/block/cciss.c:275:
+			sizeof(*inq_buff), 1, logvol , 0, NULL, TYPE_CMD);
 			                             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#86: FILE: drivers/block/cciss.c:278:
+		drv->vendor[8]='\0';
 		              ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#92: FILE: drivers/block/cciss.c:284:
+		printk(KERN_WARNING "cciss: inquiry for VPD page 0 failed\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#97: FILE: drivers/block/cciss.c:289:
+		return_code = sendcmd_withirq(CISS_INQUIRY, ctlr,
+			inq_buff, sizeof(*inq_buff), 1, logvol ,0x83, TYPE_CMD);

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#97: FILE: drivers/block/cciss.c:289:
+			inq_buff, sizeof(*inq_buff), 1, logvol ,0x83, TYPE_CMD);
 			                                       ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#97: FILE: drivers/block/cciss.c:289:
+			inq_buff, sizeof(*inq_buff), 1, logvol ,0x83, TYPE_CMD);
 			                                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#100: FILE: drivers/block/cciss.c:292:
+		return_code = sendcmd(CISS_INQUIRY, ctlr, inq_buff,
+			sizeof(*inq_buff), 1, logvol , 0x83, NULL, TYPE_CMD);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#100: FILE: drivers/block/cciss.c:292:
+			sizeof(*inq_buff), 1, logvol , 0x83, NULL, TYPE_CMD);
 			                             ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#105: FILE: drivers/block/cciss.c:297:
+		printk(KERN_WARNING "cciss: id logical drive failed\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#114: FILE: drivers/block/cciss.c:306:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'drv->raid_level < 0'
#142: FILE: drivers/block/cciss.c:334:
+	if ((drv->raid_level < 0) || (drv->raid_level) > 5)

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'drv->raid_level'
#142: FILE: drivers/block/cciss.c:334:
+	if ((drv->raid_level < 0) || (drv->raid_level) > 5)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#246: FILE: drivers/block/cciss.c:438:
+	printk(KERN_ERR "cciss: logical drive not found\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#253: FILE: drivers/block/cciss.c:445:
+static ssize_t cciss_show_model(struct device *dev,
+				 struct device_attribute *attr, char *buf)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#291: FILE: drivers/block/cciss.c:483:
+	printk(KERN_ERR "cciss: logical drive not found\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#298: FILE: drivers/block/cciss.c:490:
+static ssize_t cciss_show_rev(struct device *dev,
+				 struct device_attribute *attr, char *buf)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#337: FILE: drivers/block/cciss.c:529:
+	printk(KERN_ERR "cciss: logical drive not found\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#344: FILE: drivers/block/cciss.c:536:
+static ssize_t cciss_show_unique_id(struct device *dev,
+				 struct device_attribute *attr, char *buf)

WARNING:SPLIT_STRING: quoted string split across lines
#381: FILE: drivers/block/cciss.c:573:
+		return snprintf(buf, 40, "%02X%02X%02X%02X%02X%02X%02X%02X"
+					 "%02X%02X%02X%02X%02X%02X%02X%02X\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#390: FILE: drivers/block/cciss.c:582:
+	printk(KERN_ERR "cciss: logical drive not found\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#397: FILE: drivers/block/cciss.c:589:
+static ssize_t cciss_show_bus(struct device *dev,
+				      struct device_attribute *attr, char *buf)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#442: FILE: drivers/block/cciss.c:634:
+	printk(KERN_ERR "cciss: logical drive not found\n");

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'cciss_show_raid_level' to 'raid_level_show'
#446: FILE: drivers/block/cciss.c:638:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#448: FILE: drivers/block/cciss.c:640:
+DEVICE_ATTR(raid_level, S_IRUGO | S_IWUSR, cciss_show_raid_level, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'cciss_show_disk_size' to 'disk_size_show'
#449: FILE: drivers/block/cciss.c:641:
+DEVICE_ATTR(disk_size, S_IRUGO | S_IWUSR, cciss_show_disk_size, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#449: FILE: drivers/block/cciss.c:641:
+DEVICE_ATTR(disk_size, S_IRUGO | S_IWUSR, cciss_show_disk_size, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'cciss_show_usage_count' to 'usage_count_show'
#450: FILE: drivers/block/cciss.c:642:
+DEVICE_ATTR(usage_count, S_IRUGO | S_IWUSR, cciss_show_usage_count, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#450: FILE: drivers/block/cciss.c:642:
+DEVICE_ATTR(usage_count, S_IRUGO | S_IWUSR, cciss_show_usage_count, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'cciss_show_vendor' to 'vendor_show'
#451: FILE: drivers/block/cciss.c:643:
+DEVICE_ATTR(vendor, S_IRUGO | S_IWUSR, cciss_show_vendor, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#451: FILE: drivers/block/cciss.c:643:
+DEVICE_ATTR(vendor, S_IRUGO | S_IWUSR, cciss_show_vendor, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'cciss_show_model' to 'model_show'
#452: FILE: drivers/block/cciss.c:644:
+DEVICE_ATTR(model, S_IRUGO | S_IWUSR, cciss_show_model, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#452: FILE: drivers/block/cciss.c:644:
+DEVICE_ATTR(model, S_IRUGO | S_IWUSR, cciss_show_model, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'cciss_show_rev' to 'rev_show'
#453: FILE: drivers/block/cciss.c:645:
+DEVICE_ATTR(rev, S_IRUGO | S_IWUSR, cciss_show_rev, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#453: FILE: drivers/block/cciss.c:645:
+DEVICE_ATTR(rev, S_IRUGO | S_IWUSR, cciss_show_rev, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'cciss_show_unique_id' to 'unique_id_show'
#454: FILE: drivers/block/cciss.c:646:
+DEVICE_ATTR(unique_id, S_IRUGO | S_IWUSR, cciss_show_unique_id, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#454: FILE: drivers/block/cciss.c:646:
+DEVICE_ATTR(unique_id, S_IRUGO | S_IWUSR, cciss_show_unique_id, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'cciss_show_bus' to 'bus_show'
#455: FILE: drivers/block/cciss.c:647:
+DEVICE_ATTR(bus, S_IRUGO | S_IWUSR, cciss_show_bus, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#455: FILE: drivers/block/cciss.c:647:
+DEVICE_ATTR(bus, S_IRUGO | S_IWUSR, cciss_show_bus, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'cciss_show_lunid' to 'lunid_show'
#456: FILE: drivers/block/cciss.c:648:
+DEVICE_ATTR(lunid, S_IRUGO | S_IWUSR, cciss_show_lunid, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#456: FILE: drivers/block/cciss.c:648:
+DEVICE_ATTR(lunid, S_IRUGO | S_IWUSR, cciss_show_lunid, NULL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#469: FILE: drivers/block/cciss.c:661:
+ };$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#474: FILE: drivers/block/cciss.c:666:
+				    struct gendisk* disk,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*d)...) over kmalloc(sizeof(struct drv_dynamic)...)
#477: FILE: drivers/block/cciss.c:669:
+	struct drv_dynamic *d = kmalloc(sizeof(struct drv_dynamic), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LINE_SPACING: Missing a blank line after declarations
#478: FILE: drivers/block/cciss.c:670:
+	struct drv_dynamic *d = kmalloc(sizeof(struct drv_dynamic), GFP_KERNEL);
+	if (!d)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#530: FILE: drivers/block/cciss.c:1845:
+		cciss_sysfs_stat_inquiry(ctlr, drv_index, 1,
+						&h->drv[drv_index]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#532: FILE: drivers/block/cciss.c:1847:
+		cciss_add_blk_sysfs_dev(&h->drv[drv_index], disk,
+						h->pdev, drv_index);

ERROR:CODE_INDENT: code indent should use tabs where possible
#577: FILE: drivers/block/cciss.h:42:
+        char    vendor[9];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: drivers/block/cciss.h:42:
+        char    vendor[9];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#578: FILE: drivers/block/cciss.h:43:
+        char    model[17];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#578: FILE: drivers/block/cciss.h:43:
+        char    model[17];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#579: FILE: drivers/block/cciss.h:44:
+        char    rev[5];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#579: FILE: drivers/block/cciss.h:44:
+        char    rev[5];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#580: FILE: drivers/block/cciss.h:45:
+        BYTE    uid[16];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#580: FILE: drivers/block/cciss.h:45:
+        BYTE    uid[16];$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000356005.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 21 errors, 42 warnings, 19 checks, 567 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000356005.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
