WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
   git://git.kernel.org/pub/scm/linux/kernel/git/x86/linux-2.6-x86-bigbox-bootparam.git for-linus

WARNING:TYPO_SPELLING: 'machanism' may be misspelled - perhaps 'mechanism'?
#54: 
      x86, boot: add free_early to early reservation machanism
                                                     ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'free_early', this function's name, in a string
#163: FILE: arch/x86/kernel/e820_64.c:98:
+		panic("free_early on not reserved area: %lx-%lx!", start, end);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#205: FILE: arch/x86/kernel/head64.c:116:
+		reserve_early(pa_data, pa_data+sizeof(*data)+data->len, buf);
 		                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#205: FILE: arch/x86/kernel/head64.c:116:
+		reserve_early(pa_data, pa_data+sizeof(*data)+data->len, buf);
 		                                            ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#313: FILE: arch/x86/kernel/kdebugfs.c:91:
+	type = debugfs_create_x32("type", S_IRUGO, d, &node->type);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#318: FILE: arch/x86/kernel/kdebugfs.c:96:
+	data = debugfs_create_file("data", S_IRUGO, d, node, &fops_setup_data);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#356: FILE: arch/x86/kernel/kdebugfs.c:134:
+		pg = pfn_to_page((pa_data+sizeof(*data)-1) >> PAGE_SHIFT);
 		                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#356: FILE: arch/x86/kernel/kdebugfs.c:134:
+		pg = pfn_to_page((pa_data+sizeof(*data)-1) >> PAGE_SHIFT);
 		                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#445: FILE: arch/x86/kernel/setup_64.c:282:
+		free_early(pa_data, pa_data+sizeof(*data)+data->len);
 		                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#445: FILE: arch/x86/kernel/setup_64.c:282:
+		free_early(pa_data, pa_data+sizeof(*data)+data->len);
 		                                         ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#504: FILE: include/asm-x86/e820_64.h:51:
+extern void free_early(unsigned long start, unsigned long end);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000290002.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 7 checks, 390 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000290002.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
