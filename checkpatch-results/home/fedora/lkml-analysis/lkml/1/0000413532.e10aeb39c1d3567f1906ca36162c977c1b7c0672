WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#60: FILE: include/asm-i386/hw_breakpoint.h:1:
+#ifndef	_I386_HW_BREAKPOINT_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#70: FILE: include/asm-i386/hw_breakpoint.h:11:
+} __attribute__((packed));

CHECK:SPACING: No space is necessary after a cast
#77: FILE: include/asm-i386/hw_breakpoint.h:18:
+	return (const void *) bp->info.address;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#80: FILE: include/asm-i386/hw_breakpoint.h:21:
+static inline const void __user *hw_breakpoint_get_uaddress(

CHECK:SPACING: No space is necessary after a cast
#83: FILE: include/asm-i386/hw_breakpoint.h:24:
+	return (const void __user *) bp->info.address;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#86: FILE: include/asm-i386/hw_breakpoint.h:27:
+static inline unsigned hw_breakpoint_get_len(struct hw_breakpoint *bp)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#91: FILE: include/asm-i386/hw_breakpoint.h:32:
+static inline unsigned hw_breakpoint_get_type(struct hw_breakpoint *bp)

CHECK:SPACING: No space is necessary after a cast
#203: FILE: arch/i386/kernel/process.c:517:
+	dump->u_tsize = ((unsigned long) tsk->mm->end_code) >> PAGE_SHIFT;

CHECK:SPACING: No space is necessary after a cast
#204: FILE: arch/i386/kernel/process.c:518:
+	dump->u_dsize = ((unsigned long) (tsk->mm->brk + (PAGE_SIZE-1))) >> PAGE_SHIFT;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#204: FILE: arch/i386/kernel/process.c:518:
+	dump->u_dsize = ((unsigned long) (tsk->mm->brk + (PAGE_SIZE-1))) >> PAGE_SHIFT;
 	                                                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#294: FILE: arch/i386/kernel/traps.c:817:
+	if (notify_die(DIE_DEBUG, "debug", regs, dr6, error_code,
+			SIGTRAP) == NOTIFY_STOP)

CHECK:SPACING: No space is necessary after a cast
#306: FILE: arch/i386/kernel/traps.c:825:
+		handle_vm86_trap((struct kernel_vm86_regs *) regs,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#307: FILE: arch/i386/kernel/traps.c:826:
+		handle_vm86_trap((struct kernel_vm86_regs *) regs,
+				error_code, 1);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#358: FILE: arch/i386/kernel/traps.c:843:
+	if (tsk->thread.vdr6 & (DR_STEP|DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3))
 	                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#358: FILE: arch/i386/kernel/traps.c:843:
+	if (tsk->thread.vdr6 & (DR_STEP|DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3))
 	                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#358: FILE: arch/i386/kernel/traps.c:843:
+	if (tsk->thread.vdr6 & (DR_STEP|DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3))
 	                                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#358: FILE: arch/i386/kernel/traps.c:843:
+	if (tsk->thread.vdr6 & (DR_STEP|DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3))
 	                                                          ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#380: FILE: include/asm-i386/debugreg.h:66:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#391: FILE: include/asm-i386/debugreg.h:77:
+int copy_thread_hw_breakpoint(struct task_struct *tsk,
+		struct task_struct *child, unsigned long clone_flags);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#430: FILE: arch/i386/kernel/hw_breakpoint.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#442: FILE: arch/i386/kernel/hw_breakpoint.c:13:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#443: FILE: arch/i386/kernel/hw_breakpoint.c:14:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#454: FILE: arch/i386/kernel/hw_breakpoint.c:25:
+/* QUESTIONS
+

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/percpu.h> instead of <asm/percpu.h>
#474: FILE: arch/i386/kernel/hw_breakpoint.c:45:
+#include <asm/percpu.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#475: FILE: arch/i386/kernel/hw_breakpoint.c:46:
+#include <asm/processor.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#477: FILE: arch/i386/kernel/hw_breakpoint.c:48:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#480: FILE: arch/i386/kernel/hw_breakpoint.c:51:
+struct thread_hw_breakpoint {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#487: FILE: arch/i386/kernel/hw_breakpoint.c:58:
+	unsigned		gennum;		/* update-generation number */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#496: FILE: arch/i386/kernel/hw_breakpoint.c:67:
+	struct hw_breakpoint	vdr_bps[HB_NUM];	/* Breakpoints
+			representing virtualized debug registers 0 - 3 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#496: FILE: arch/i386/kernel/hw_breakpoint.c:67:
+			representing virtualized debug registers 0 - 3 */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#503: FILE: arch/i386/kernel/hw_breakpoint.c:74:
+	unsigned		gennum;		/* Generation number */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#515: FILE: arch/i386/kernel/hw_breakpoint.c:86:
+	struct task_struct	*bp_task;	/* The thread whose bps
+			are currently loaded in the debug registers */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#515: FILE: arch/i386/kernel/hw_breakpoint.c:86:
+			are currently loaded in the debug registers */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#548: FILE: arch/i386/kernel/hw_breakpoint.c:119:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#551: FILE: arch/i386/kernel/hw_breakpoint.c:122:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#583: FILE: arch/i386/kernel/hw_breakpoint.c:154:
+static void arch_update_thbi(struct thread_hw_breakpoint *thbi,
+		struct kernel_bp_data *thr_kbpdata)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#636: FILE: arch/i386/kernel/hw_breakpoint.c:207:
+static void arch_store_thread_bp_array(struct thread_hw_breakpoint *thbi,
+		struct hw_breakpoint *bp, int i)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#645: FILE: arch/i386/kernel/hw_breakpoint.c:216:
+static int arch_check_va_in_userspace(unsigned long va,
+		struct task_struct *tsk)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#668: FILE: arch/i386/kernel/hw_breakpoint.c:239:
+static void arch_store_info(struct hw_breakpoint *bp,
+		unsigned long address, unsigned len, unsigned type)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#668: FILE: arch/i386/kernel/hw_breakpoint.c:239:
+		unsigned long address, unsigned len, unsigned type)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#668: FILE: arch/i386/kernel/hw_breakpoint.c:239:
+		unsigned long address, unsigned len, unsigned type)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#679: FILE: arch/i386/kernel/hw_breakpoint.c:250:
+static unsigned long encode_dr7(int drnum, unsigned len, unsigned type)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#679: FILE: arch/i386/kernel/hw_breakpoint.c:250:
+static unsigned long encode_dr7(int drnum, unsigned len, unsigned type)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#719: FILE: arch/i386/kernel/hw_breakpoint.c:290:
+	list_for_each_entry(bp, bp_list, node) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#736: FILE: arch/i386/kernel/hw_breakpoint.c:307:
+static void arch_register_user_hw_breakpoint(struct hw_breakpoint *bp,
+		struct thread_hw_breakpoint *thbi)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#753: FILE: arch/i386/kernel/hw_breakpoint.c:324:
+static void arch_unregister_user_hw_breakpoint(struct hw_breakpoint *bp,
+		struct thread_hw_breakpoint *thbi)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#761: FILE: arch/i386/kernel/hw_breakpoint.c:332:
+static void arch_register_kernel_hw_breakpoint(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#770: FILE: arch/i386/kernel/hw_breakpoint.c:341:
+static void arch_unregister_kernel_hw_breakpoint(

CHECK:LINE_SPACING: Please don't use multiple blank lines
#776: FILE: arch/i386/kernel/hw_breakpoint.c:347:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#779: FILE: arch/i386/kernel/hw_breakpoint.c:350:
+
+

WARNING:SIZEOF_PARENTHESIS: sizeof u_debugreg should be sizeof(u_debugreg)
#790: FILE: arch/i386/kernel/hw_breakpoint.c:361:
+	memset(u_debugreg, 0, sizeof u_debugreg);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#803: FILE: arch/i386/kernel/hw_breakpoint.c:374:
+static struct thread_hw_breakpoint *alloc_thread_hw_breakpoint(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#806: FILE: arch/i386/kernel/hw_breakpoint.c:377:
+static int __register_user_hw_breakpoint(struct task_struct *tsk,
+		struct hw_breakpoint *bp,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#807: FILE: arch/i386/kernel/hw_breakpoint.c:378:
+		unsigned long address, unsigned len, unsigned type);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#807: FILE: arch/i386/kernel/hw_breakpoint.c:378:
+		unsigned long address, unsigned len, unsigned type);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#809: FILE: arch/i386/kernel/hw_breakpoint.c:380:
+static void __unregister_user_hw_breakpoint(struct task_struct *tsk,
+		struct hw_breakpoint *bp);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#854: FILE: arch/i386/kernel/hw_breakpoint.c:425:
+static int decode_dr7(unsigned long dr7, int bpnum, unsigned *len,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#855: FILE: arch/i386/kernel/hw_breakpoint.c:426:
+static int decode_dr7(unsigned long dr7, int bpnum, unsigned *len,
+		unsigned *type)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#855: FILE: arch/i386/kernel/hw_breakpoint.c:426:
+		unsigned *type)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#868: FILE: arch/i386/kernel/hw_breakpoint.c:439:
+static int ptrace_write_dr7(struct task_struct *tsk,
+		struct thread_hw_breakpoint *thbi, unsigned long data)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#885: FILE: arch/i386/kernel/hw_breakpoint.c:456:
+		unsigned len, type;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#900: FILE: arch/i386/kernel/hw_breakpoint.c:471:
+			if (rc == 0 && __register_user_hw_breakpoint(tsk, bp,
+					bp->info.address, len, type) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#940: FILE: arch/i386/kernel/hw_breakpoint.c:511:
+	else if ((thbi = alloc_thread_hw_breakpoint(tsk)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#956: FILE: arch/i386/kernel/hw_breakpoint.c:527:
+			rc = __register_user_hw_breakpoint(tsk, bp,
+					val, bp->info.len, bp->info.type);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#959: FILE: arch/i386/kernel/hw_breakpoint.c:530:
+				__register_user_hw_breakpoint(tsk, bp,
+						old_addr,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#976: FILE: arch/i386/kernel/hw_breakpoint.c:547:
+
+

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#993: FILE: arch/i386/kernel/hw_breakpoint.c:564:
+	if (!(DR6 & (DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3)))
 	                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#993: FILE: arch/i386/kernel/hw_breakpoint.c:564:
+	if (!(DR6 & (DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3)))
 	                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#993: FILE: arch/i386/kernel/hw_breakpoint.c:564:
+	if (!(DR6 & (DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3)))
 	                                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1001: FILE: arch/i386/kernel/hw_breakpoint.c:572:
+	current->thread.vdr6 &= ~(DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3);
 	                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1001: FILE: arch/i386/kernel/hw_breakpoint.c:572:
+	current->thread.vdr6 &= ~(DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3);
 	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1001: FILE: arch/i386/kernel/hw_breakpoint.c:572:
+	current->thread.vdr6 &= ~(DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3);
 	                                                    ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1005: FILE: arch/i386/kernel/hw_breakpoint.c:576:
+	if (!chbi->bp_task)
[...]
+	else if (chbi->bp_task != current) {
[...]
+	} else {
[...]

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1008: FILE: arch/i386/kernel/hw_breakpoint.c:579:
+	else if (chbi->bp_task != current) {
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (bp->triggered)
#1041: FILE: arch/i386/kernel/hw_breakpoint.c:612:
+			(bp->triggered)(bp, args->regs);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1049: FILE: arch/i386/kernel/hw_breakpoint.c:620:
+	if (!(DR6 & ~(DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3)))
 	                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1049: FILE: arch/i386/kernel/hw_breakpoint.c:620:
+	if (!(DR6 & ~(DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3)))
 	                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1049: FILE: arch/i386/kernel/hw_breakpoint.c:620:
+	if (!(DR6 & ~(DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3)))
 	                                        ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1059: FILE: arch/i386/kernel/hw_breakpoint.c:630:
+static int __kprobes hw_breakpoint_exceptions_notify(

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1079: FILE: arch/i386/kernel/hw_breakpoint.c:650:
+
+

CHECK:SPACING: No space is necessary after a cast
#1093: FILE: arch/i386/kernel/ptrace.c:385:
+		else if (addr >= (long) &dummy->u_debugreg[0] &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1094: FILE: arch/i386/kernel/ptrace.c:386:
+		else if (addr >= (long) &dummy->u_debugreg[0] &&
+				addr <= (long) &dummy->u_debugreg[7]) {

CHECK:SPACING: No space is necessary after a cast
#1094: FILE: arch/i386/kernel/ptrace.c:386:
+				addr <= (long) &dummy->u_debugreg[7]) {

CHECK:SPACING: No space is necessary after a cast
#1159: FILE: arch/i386/kernel/ptrace.c:419:
+		if (addr >= (long) &dummy->u_debugreg[0] &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1160: FILE: arch/i386/kernel/ptrace.c:420:
+		if (addr >= (long) &dummy->u_debugreg[0] &&
+				addr <= (long) &dummy->u_debugreg[7]) {

CHECK:SPACING: No space is necessary after a cast
#1160: FILE: arch/i386/kernel/ptrace.c:420:
+				addr <= (long) &dummy->u_debugreg[7]) {

CHECK:SPACING: No space is necessary after a cast
#1161: FILE: arch/i386/kernel/ptrace.c:421:
+			addr -= (long) &dummy->u_debugreg;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1271: FILE: include/asm-generic/hw_breakpoint.h:1:
+#ifndef	_ASM_GENERIC_HW_BREAKPOINT_H

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1323: FILE: include/asm-generic/hw_breakpoint.h:53:
+ * ^I%HW_BREAKPOINT_EXECUTE (triggered on instruction execution),$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1324: FILE: include/asm-generic/hw_breakpoint.h:54:
+ * ^I%HW_BREAKPOINT_RW (triggered on read or write access),$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1325: FILE: include/asm-generic/hw_breakpoint.h:55:
+ * ^I%HW_BREAKPOINT_WRITE (triggered on write access), and$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1326: FILE: include/asm-generic/hw_breakpoint.h:56:
+ * ^I%HW_BREAKPOINT_READ (triggered on read access).$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1400: FILE: include/asm-generic/hw_breakpoint.h:130:
+ * ^Iprintk(KERN_DEBUG "Breakpoint triggered\n");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1401: FILE: include/asm-generic/hw_breakpoint.h:131:
+ * ^Idump_stack();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1402: FILE: include/asm-generic/hw_breakpoint.h:132:
+ *  ^I.......<more debugging output>........$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hw_breakpoint *' should also have an identifier name
#1429: FILE: include/asm-generic/hw_breakpoint.h:159:
+	void		(*triggered)(struct hw_breakpoint *, struct pt_regs *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#1429: FILE: include/asm-generic/hw_breakpoint.h:159:
+	void		(*triggered)(struct hw_breakpoint *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hw_breakpoint *' should also have an identifier name
#1430: FILE: include/asm-generic/hw_breakpoint.h:160:
+	void		(*installed)(struct hw_breakpoint *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hw_breakpoint *' should also have an identifier name
#1431: FILE: include/asm-generic/hw_breakpoint.h:161:
+	void		(*uninstalled)(struct hw_breakpoint *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1443: FILE: include/asm-generic/hw_breakpoint.h:173:
+static unsigned hw_breakpoint_get_len(struct hw_breakpoint *bp);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1444: FILE: include/asm-generic/hw_breakpoint.h:174:
+static unsigned hw_breakpoint_get_type(struct hw_breakpoint *bp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1482: FILE: include/asm-generic/hw_breakpoint.h:212:
+int register_user_hw_breakpoint(struct task_struct *tsk,
+		struct hw_breakpoint *bp,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1483: FILE: include/asm-generic/hw_breakpoint.h:213:
+		const void __user *address, unsigned len, unsigned type);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1483: FILE: include/asm-generic/hw_breakpoint.h:213:
+		const void __user *address, unsigned len, unsigned type);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1485: FILE: include/asm-generic/hw_breakpoint.h:215:
+void unregister_user_hw_breakpoint(struct task_struct *tsk,
+		struct hw_breakpoint *bp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1491: FILE: include/asm-generic/hw_breakpoint.h:221:
+int register_kernel_hw_breakpoint(struct hw_breakpoint *bp,
+		const void *address, unsigned len, unsigned type);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1491: FILE: include/asm-generic/hw_breakpoint.h:221:
+		const void *address, unsigned len, unsigned type);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1491: FILE: include/asm-generic/hw_breakpoint.h:221:
+		const void *address, unsigned len, unsigned type);

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1527: FILE: arch/i386/kernel/smpboot.c:64:
 static int __devinitdata smp_b_stepping;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1549: FILE: kernel/hw_breakpoint.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1561: FILE: kernel/hw_breakpoint.c:13:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1562: FILE: kernel/hw_breakpoint.c:14:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1576: FILE: kernel/hw_breakpoint.c:28:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1633: FILE: kernel/hw_breakpoint.c:85:
+		 * protect our access to the list pointers. */

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1637: FILE: kernel/hw_breakpoint.c:89:
+		list_for_each_entry_rcu(bp, &thbi->thread_bps, node) {
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1639: FILE: kernel/hw_breakpoint.c:91:
+			 * don't install.  Otherwise do. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (bp->uninstalled)
#1643: FILE: kernel/hw_breakpoint.c:95:
+						(bp->uninstalled)(bp);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (bp->installed)
#1651: FILE: kernel/hw_breakpoint.c:103:
+						(bp->installed)(bp);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1662: FILE: kernel/hw_breakpoint.c:114:
+	if (unlikely(chbi->cur_kbpdata != thr_kbpdata)) {
+

WARNING:SIZEOF_PARENTHESIS: sizeof tprio should be sizeof(tprio)
#1773: FILE: kernel/hw_breakpoint.c:225:
+	memset(tprio, 0, sizeof tprio);

CHECK:BRACES: Unbalanced braces around else statement
#1815: FILE: kernel/hw_breakpoint.c:267:
+		else {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (bp->uninstalled)
#1832: FILE: kernel/hw_breakpoint.c:284:
+				(bp->uninstalled)(bp);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (bp->installed)
#1862: FILE: kernel/hw_breakpoint.c:314:
+					(bp->installed)(bp);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1874: FILE: kernel/hw_breakpoint.c:326:
+static struct thread_hw_breakpoint *alloc_thread_hw_breakpoint(

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*thbi)...) over kzalloc(sizeof(struct thread_hw_breakpoint)...)
#1880: FILE: kernel/hw_breakpoint.c:332:
+		thbi = kzalloc(sizeof(struct thread_hw_breakpoint),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1881: FILE: kernel/hw_breakpoint.c:333:
+		thbi = kzalloc(sizeof(struct thread_hw_breakpoint),
+				GFP_KERNEL);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (bp->uninstalled)
#1912: FILE: kernel/hw_breakpoint.c:364:
+			(bp->uninstalled)(bp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1938: FILE: kernel/hw_breakpoint.c:390:
+int copy_thread_hw_breakpoint(struct task_struct *tsk,
+		struct task_struct *child, unsigned long clone_flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1981: FILE: kernel/hw_breakpoint.c:433:
+static int insert_bp_in_list(struct hw_breakpoint *bp,
+		struct thread_hw_breakpoint *thbi, struct task_struct *tsk)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2021: FILE: kernel/hw_breakpoint.c:473:
+static void remove_bp_from_list(struct hw_breakpoint *bp,
+		struct thread_hw_breakpoint *thbi, struct task_struct *tsk)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (bp->uninstalled)
#2040: FILE: kernel/hw_breakpoint.c:492:
+		(bp->uninstalled)(bp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2048: FILE: kernel/hw_breakpoint.c:500:
+static int validate_settings(struct hw_breakpoint *bp, struct task_struct *tsk,
+		unsigned long address, unsigned len, unsigned type)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2048: FILE: kernel/hw_breakpoint.c:500:
+		unsigned long address, unsigned len, unsigned type)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2048: FILE: kernel/hw_breakpoint.c:500:
+		unsigned long address, unsigned len, unsigned type)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2061: FILE: kernel/hw_breakpoint.c:513:
+	case HW_BREAKPOINT_READ:	break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2064: FILE: kernel/hw_breakpoint.c:516:
+	case HW_BREAKPOINT_WRITE:	break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2067: FILE: kernel/hw_breakpoint.c:519:
+	case HW_BREAKPOINT_RW:		break;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2124: FILE: kernel/hw_breakpoint.c:576:
+static int __register_user_hw_breakpoint(struct task_struct *tsk,
+		struct hw_breakpoint *bp,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2125: FILE: kernel/hw_breakpoint.c:577:
+		unsigned long address, unsigned len, unsigned type)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2125: FILE: kernel/hw_breakpoint.c:577:
+		unsigned long address, unsigned len, unsigned type)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2195: FILE: kernel/hw_breakpoint.c:647:
+int register_user_hw_breakpoint(struct task_struct *tsk,
+		struct hw_breakpoint *bp,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2196: FILE: kernel/hw_breakpoint.c:648:
+		const void __user *address, unsigned len, unsigned type)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2196: FILE: kernel/hw_breakpoint.c:648:
+		const void __user *address, unsigned len, unsigned type)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2202: FILE: kernel/hw_breakpoint.c:654:
+	rc = __register_user_hw_breakpoint(tsk, bp,
+			(unsigned long) address, len, type);

CHECK:SPACING: No space is necessary after a cast
#2202: FILE: kernel/hw_breakpoint.c:654:
+			(unsigned long) address, len, type);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2211: FILE: kernel/hw_breakpoint.c:663:
+static void __unregister_user_hw_breakpoint(struct task_struct *tsk,
+		struct hw_breakpoint *bp)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2239: FILE: kernel/hw_breakpoint.c:691:
+void unregister_user_hw_breakpoint(struct task_struct *tsk,
+		struct hw_breakpoint *bp)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2267: FILE: kernel/hw_breakpoint.c:719:
+int register_kernel_hw_breakpoint(struct hw_breakpoint *bp,
+		const void *address, unsigned len, unsigned type)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2267: FILE: kernel/hw_breakpoint.c:719:
+		const void *address, unsigned len, unsigned type)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2267: FILE: kernel/hw_breakpoint.c:719:
+		const void *address, unsigned len, unsigned type)

CHECK:SPACING: No space is necessary after a cast
#2273: FILE: kernel/hw_breakpoint.c:725:
+	rc = validate_settings(bp, NULL, (unsigned long) address, len, type);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000413532.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 53 warnings, 90 checks, 2179 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000413532.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
