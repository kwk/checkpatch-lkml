WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#135: FILE: drivers/a11y/braille/braille_console.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#154: FILE: drivers/a11y/braille/braille_console.c:20:
+ * along with the program ; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#155: FILE: drivers/a11y/braille/braille_console.c:21:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#187: FILE: drivers/a11y/braille/braille_console.c:53:
+#define beep(freq) do { if (sound) kd_mksound(freq, HZ/10); } while(0)
                                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#187: FILE: drivers/a11y/braille/braille_console.c:53:
+#define beep(freq) do { if (sound) kd_mksound(freq, HZ/10); } while(0)

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#193: FILE: drivers/a11y/braille/braille_console.c:59:
+static int console_cursor = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:CAMELCASE: Avoid CamelCase: <lastVC>
#202: FILE: drivers/a11y/braille/braille_console.c:68:
+static int lastVC = -1;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#210: FILE: drivers/a11y/braille/braille_console.c:76:
+	unsigned char data[1 + 1 + 2*WIDTH + 2 + 1], csum = 0, *c;
 	                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#230: FILE: drivers/a11y/braille/braille_console.c:96:
+	for (i=0; i<WIDTH; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#230: FILE: drivers/a11y/braille/braille_console.c:96:
+	for (i=0; i<WIDTH; i++) {
 	           ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#276: FILE: drivers/a11y/braille/braille_console.c:142:
+	for (i = 0; i<WIDTH; i++) {
 	             ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#278: FILE: drivers/a11y/braille/braille_console.c:144:
+		u16 glyph = screen_glyph(vc, 2 * (vc_x + i) + vc_y * vc->vc_size_row);
+		buf[i] = inverse_translate(vc, glyph, 1);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#296: FILE: drivers/a11y/braille/braille_console.c:162:
+	switch (code) {
+		case KBD_KEYCODE:
[...]
+		case KBD_POST_KEYSYM:
[...]
+		case KBD_UNBOUND_KEYCODE:
+		case KBD_UNICODE:
+		case KBD_KEYSYM:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#308: FILE: drivers/a11y/braille/braille_console.c:174:
+				switch (param->value) {
+					case KEY_INSERT:
[...]
+					case KEY_LEFT:
[...]
+					case KEY_RIGHT:
[...]
+					case KEY_DOWN:
[...]
+					case KEY_UP:
[...]
+					case KEY_HOME:
[...]
+					case KEY_PAGEUP:
[...]
+					case KEY_PAGEDOWN:
[...]
+					default:

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#316: FILE: drivers/a11y/braille/braille_console.c:182:
+						if (vc_x > 0) {

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

CHECK:BRACES: braces {} should be used on all arms of this statement
#316: FILE: drivers/a11y/braille/braille_console.c:182:
+						if (vc_x > 0) {
[...]
+						} else if (vc_y >= 1) {
[...]
+						} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#318: FILE: drivers/a11y/braille/braille_console.c:184:
+							if (vc_x < 0)

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#320: FILE: drivers/a11y/braille/braille_console.c:186:
+						} else if (vc_y >= 1) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#323: FILE: drivers/a11y/braille/braille_console.c:189:
+							vc_x = vc->vc_cols-WIDTH;
 							                  ^

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#324: FILE: drivers/a11y/braille/braille_console.c:190:
+						} else

CHECK:BRACES: Unbalanced braces around else statement
#324: FILE: drivers/a11y/braille/braille_console.c:190:
+						} else

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#328: FILE: drivers/a11y/braille/braille_console.c:194:
+						if (vc_x + WIDTH < vc->vc_cols) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#328: FILE: drivers/a11y/braille/braille_console.c:194:
+						if (vc_x + WIDTH < vc->vc_cols) {
[...]
+						} else if (vc_y + 1 < vc->vc_rows) {
[...]
+						} else
[...]

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#330: FILE: drivers/a11y/braille/braille_console.c:196:
+						} else if (vc_y + 1 < vc->vc_rows) {

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#334: FILE: drivers/a11y/braille/braille_console.c:200:
+						} else

CHECK:BRACES: Unbalanced braces around else statement
#334: FILE: drivers/a11y/braille/braille_console.c:200:
+						} else

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#338: FILE: drivers/a11y/braille/braille_console.c:204:
+						if (vc_y + 1 < vc->vc_rows)

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#340: FILE: drivers/a11y/braille/braille_console.c:206:
+						else

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#344: FILE: drivers/a11y/braille/braille_console.c:210:
+						if (vc_y >= 1)

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#346: FILE: drivers/a11y/braille/braille_console.c:212:
+						else

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#358: FILE: drivers/a11y/braille/braille_console.c:224:
+						vc_y = vc->vc_rows-1;
 						                  ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#371: FILE: drivers/a11y/braille/braille_console.c:237:
+			unsigned char type = KTYP(param->value) - 0xf0;
+			if (type == KT_SPEC) {

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#375: FILE: drivers/a11y/braille/braille_console.c:241:
+				switch(val) {
+					case KVAL(K_CAPS):
[...]
+					case KVAL(K_NUM):
[...]
+					case KVAL(K_HOLD):

ERROR:SPACING: space required before the open parenthesis '('
#375: FILE: drivers/a11y/braille/braille_console.c:241:
+				switch(val) {

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#377: FILE: drivers/a11y/braille/braille_console.c:243:
+						on_off = vc_kbd_led(kbd_table + fg_console, VC_CAPSLOCK);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#380: FILE: drivers/a11y/braille/braille_console.c:246:
+						on_off = vc_kbd_led(kbd_table + fg_console, VC_NUMLOCK);

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#383: FILE: drivers/a11y/braille/braille_console.c:249:
+						on_off = vc_kbd_led(kbd_table + fg_console, VC_SCROLLOCK);

WARNING:LINE_SPACING: Missing a blank line after declarations
#409: FILE: drivers/a11y/braille/braille_console.c:275:
+	struct vc_data *vc = param->vc;
+	switch (code) {

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#409: FILE: drivers/a11y/braille/braille_console.c:275:
+	switch (code) {
+		case VT_ALLOCATE:
[...]
+		case VT_DEALLOCATE:
[...]
+		case VT_WRITE:
[...]
+		case VT_UPDATE:

WARNING:LINE_SPACING: Missing a blank line after declarations
#417: FILE: drivers/a11y/braille/braille_console.c:283:
+			unsigned char c = param->c;
+			switch (c) {

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#417: FILE: drivers/a11y/braille/braille_console.c:283:
+			switch (c) {
+				case '\b':
+				case 127:
[...]
+				case '\n':
+				case '\v':
+				case '\f':
+				case '\r':
[...]
+				case '\t':
[...]
+				default:

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#433: FILE: drivers/a11y/braille/braille_console.c:299:
+					/* Fallthrough */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#444: FILE: drivers/a11y/braille/braille_console.c:310:
+						memmove(console_buf, &console_buf[1], (WIDTH-1) * sizeof(*console_buf));

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#444: FILE: drivers/a11y/braille/braille_console.c:310:
+						memmove(console_buf, &console_buf[1], (WIDTH-1) * sizeof(*console_buf));
 						                                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#447: FILE: drivers/a11y/braille/braille_console.c:313:
+					console_buf[console_cursor-1] = c;
 					                          ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#450: FILE: drivers/a11y/braille/braille_console.c:316:
+			if (console_show)
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#452: FILE: drivers/a11y/braille/braille_console.c:318:
+			else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#487: FILE: drivers/a11y/braille/braille_console.c:353:
+	int ret = 0;
+	if (co->index == -1)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#516: FILE: drivers/a11y/braille/braille_console.c:382:
+}
+static void __exit checkexit(void)

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#529: FILE: drivers/a11y/Kconfig:1:
+menuconfig A11Y
+	bool "Accessibility support"
+	---help---
+	  Enable a submenu where accessibility items may be enabled.
+
+	  If unsure, say N.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#537: FILE: drivers/a11y/Kconfig:9:
+config A11Y_BRAILLE_CONSOLE
+	tristate "Console on braille device"
+	depends on SERIAL_8250_CONSOLE
+	---help---
+	  Enables console output on a braille device connected to a 8250
+	  serial port. For now only the VisioBraille device is supported.
+
+	  To actually enable it, you need to pass option
+	  console=brl0
+	  to the kernel. Options are the same as for serial console.
+
+	  If unsure, say N.
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000326228.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 13 errors, 24 warnings, 14 checks, 476 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000326228.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
