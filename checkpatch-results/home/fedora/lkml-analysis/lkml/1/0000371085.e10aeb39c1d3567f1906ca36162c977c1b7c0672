WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#67: FILE: fs/buffer.c:1762:
+		unsigned from, unsigned to, get_block_t *get_block,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#67: FILE: fs/buffer.c:1762:
+		unsigned from, unsigned to, get_block_t *get_block,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#79: FILE: fs/buffer.c:2092:
+		unsigned to, get_block_t *get_block, loff_t *bytes,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#209: FILE: include/linux/buffer_head.h:206:
+int block_prepare_write(struct page*, unsigned, unsigned, get_block_t*,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#209: FILE: include/linux/buffer_head.h:206:
+int block_prepare_write(struct page*, unsigned, unsigned, get_block_t*,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page*' should also have an identifier name
#209: FILE: include/linux/buffer_head.h:206:
+int block_prepare_write(struct page*, unsigned, unsigned, get_block_t*,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#209: FILE: include/linux/buffer_head.h:206:
+int block_prepare_write(struct page*, unsigned, unsigned, get_block_t*,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#209: FILE: include/linux/buffer_head.h:206:
+int block_prepare_write(struct page*, unsigned, unsigned, get_block_t*,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'get_block_t*' should also have an identifier name
#209: FILE: include/linux/buffer_head.h:206:
+int block_prepare_write(struct page*, unsigned, unsigned, get_block_t*,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cred *' should also have an identifier name
#209: FILE: include/linux/buffer_head.h:206:
+int block_prepare_write(struct page*, unsigned, unsigned, get_block_t*,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#222: FILE: include/linux/buffer_head.h:220:
+int nobh_prepare_write(struct page*, unsigned, unsigned, get_block_t*,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#222: FILE: include/linux/buffer_head.h:220:
+int nobh_prepare_write(struct page*, unsigned, unsigned, get_block_t*,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page*' should also have an identifier name
#222: FILE: include/linux/buffer_head.h:220:
+int nobh_prepare_write(struct page*, unsigned, unsigned, get_block_t*,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#222: FILE: include/linux/buffer_head.h:220:
+int nobh_prepare_write(struct page*, unsigned, unsigned, get_block_t*,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#222: FILE: include/linux/buffer_head.h:220:
+int nobh_prepare_write(struct page*, unsigned, unsigned, get_block_t*,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'get_block_t*' should also have an identifier name
#222: FILE: include/linux/buffer_head.h:220:
+int nobh_prepare_write(struct page*, unsigned, unsigned, get_block_t*,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cred *' should also have an identifier name
#222: FILE: include/linux/buffer_head.h:220:
+int nobh_prepare_write(struct page*, unsigned, unsigned, get_block_t*,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000371085.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 17 warnings, 0 checks, 146 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000371085.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
