WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
This patch adds an option to use either substring match, regular expression 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#131: FILE: scripts/kconfig/qconf.cc:1324:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <QVButtonGroup>
#244: FILE: scripts/kconfig/qconf.h:294:
+	QVButtonGroup *searchType;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <searchType>
#244: FILE: scripts/kconfig/qconf.h:294:
+	QVButtonGroup *searchType;

CHECK:CAMELCASE: Avoid CamelCase: <QRadioButton>
#245: FILE: scripts/kconfig/qconf.h:295:
+	QRadioButton *substringSearch, *keywordsSearch, *regexSearch;

CHECK:CAMELCASE: Avoid CamelCase: <substringSearch>
#245: FILE: scripts/kconfig/qconf.h:295:
+	QRadioButton *substringSearch, *keywordsSearch, *regexSearch;

CHECK:CAMELCASE: Avoid CamelCase: <keywordsSearch>
#245: FILE: scripts/kconfig/qconf.h:295:
+	QRadioButton *substringSearch, *keywordsSearch, *regexSearch;

CHECK:CAMELCASE: Avoid CamelCase: <regexSearch>
#245: FILE: scripts/kconfig/qconf.h:295:
+	QRadioButton *substringSearch, *keywordsSearch, *regexSearch;

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - SEARCH_TYPE getSearchType() should probably be SEARCH_TYPE getSearchType(void)
#252: FILE: scripts/kconfig/qconf.h:302:
+	SEARCH_TYPE getSearchType();

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

CHECK:CAMELCASE: Avoid CamelCase: <getSearchType>
#252: FILE: scripts/kconfig/qconf.h:302:
+	SEARCH_TYPE getSearchType();

CHECK:CAMELCASE: Avoid CamelCase: <FindQuery>
#261: FILE: scripts/kconfig/qconf.h:343:
+class FindQuery

WARNING:INDENTED_LABEL: labels should not be indented
#263: FILE: scripts/kconfig/qconf.h:345:
+	public:

CHECK:CAMELCASE: Avoid CamelCase: <QString>
#266: FILE: scripts/kconfig/qconf.h:348:
+	QString query;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#267: FILE: scripts/kconfig/qconf.h:349:
+	QRegExp * compiled_regex;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <QRegExp>
#267: FILE: scripts/kconfig/qconf.h:349:
+	QRegExp * compiled_regex;

WARNING:LINE_SPACING: Missing a blank line after declarations
#268: FILE: scripts/kconfig/qconf.h:350:
+	QRegExp * compiled_regex;
+	QValueList<QRegExp> keywords;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#268: FILE: scripts/kconfig/qconf.h:350:
+	QValueList<QRegExp> keywords;
 	          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '>' (ctx:VxW)
#268: FILE: scripts/kconfig/qconf.h:350:
+	QValueList<QRegExp> keywords;
 	                  ^

CHECK:CAMELCASE: Avoid CamelCase: <QValueList>
#268: FILE: scripts/kconfig/qconf.h:350:
+	QValueList<QRegExp> keywords;

WARNING:INDENTED_LABEL: labels should not be indented
#270: FILE: scripts/kconfig/qconf.h:352:
+	public:

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void compile_keywords() should probably be void compile_keywords(void)
#274: FILE: scripts/kconfig/qconf.h:356:
+	void compile_keywords();

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#275: FILE: scripts/kconfig/qconf.h:357:
+	bool string_matches(const char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'QRegExp' should also have an identifier name
#276: FILE: scripts/kconfig/qconf.h:358:
+	bool string_matches_regex(QRegExp & re, const char *string);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#290: FILE: scripts/kconfig/lkc.h:115:
+struct symbol **sym_generic_search(sym_search_filter_t filter, void $

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#291: FILE: scripts/kconfig/lkc.h:115:
*context);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#306: FILE: scripts/kconfig/symbol.c:722:
+	return (regexec((regex_t*)re_void, sym->name, 0, NULL, 0) == 0);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#335: FILE: scripts/kconfig/symbol.c:747:
+	cnt = size = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000381005.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 6 warnings, 12 checks, 283 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000381005.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
