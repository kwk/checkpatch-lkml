CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#108: FILE: lib/iomap.c:73:
+unsigned int ioread8(void __iomap *addr)
                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#115: FILE: lib/iomap.c:78:
 }
+unsigned int ioread16(void __iomap *addr)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#115: FILE: lib/iomap.c:78:
+unsigned int ioread16(void __iomap *addr)
                                    ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#122: FILE: lib/iomap.c:83:
 }
+unsigned int ioread16be(void __iomap *addr)

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#122: FILE: lib/iomap.c:83:
+unsigned int ioread16be(void __iomap *addr)
                                      ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#129: FILE: lib/iomap.c:88:
 }
+unsigned int ioread32(void __iomap *addr)

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#129: FILE: lib/iomap.c:88:
+unsigned int ioread32(void __iomap *addr)
                                    ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#136: FILE: lib/iomap.c:93:
 }
+unsigned int ioread32be(void __iomap *addr)

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#136: FILE: lib/iomap.c:93:
+unsigned int ioread32be(void __iomap *addr)
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#149: FILE: lib/iomap.c:110:
+#define mmio_write16be(val,mem) __raw_writew(be16_to_cpu(val),mem)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#149: FILE: lib/iomap.c:110:
+#define mmio_write16be(val,mem) __raw_writew(be16_to_cpu(val),mem)
                                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: lib/iomap.c:111:
+#define mmio_write32be(val,mem) __raw_writel(be32_to_cpu(val),mem)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: lib/iomap.c:111:
+#define mmio_write32be(val,mem) __raw_writel(be32_to_cpu(val),mem)
                                                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#154: FILE: lib/iomap.c:114:
+void iowrite8(u8 val, void __iomap *addr)
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#157: FILE: lib/iomap.c:116:
+	IO_COND(addr, outb(val,port), writeb(val, mem));
 	                      ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#160: FILE: lib/iomap.c:118:
 }
+void iowrite16(u16 val, void __iomap *addr)

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#160: FILE: lib/iomap.c:118:
+void iowrite16(u16 val, void __iomap *addr)
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#163: FILE: lib/iomap.c:120:
+	IO_COND(addr, outw(val,port), writew(val, mem));
 	                      ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#166: FILE: lib/iomap.c:122:
 }
+void iowrite16be(u16 val, void __iomap *addr)

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#166: FILE: lib/iomap.c:122:
+void iowrite16be(u16 val, void __iomap *addr)
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#169: FILE: lib/iomap.c:124:
+	IO_COND(addr, pio_write16be(val,port), mmio_write16be(val, mem));
 	                               ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#172: FILE: lib/iomap.c:126:
 }
+void iowrite32(u32 val, void __iomap *addr)

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#172: FILE: lib/iomap.c:126:
+void iowrite32(u32 val, void __iomap *addr)
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#175: FILE: lib/iomap.c:128:
+	IO_COND(addr, outl(val,port), writel(val, mem));
 	                      ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#178: FILE: lib/iomap.c:130:
 }
+void iowrite32be(u32 val, void __iomap *addr)

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#178: FILE: lib/iomap.c:130:
+void iowrite32be(u32 val, void __iomap *addr)
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#181: FILE: lib/iomap.c:132:
+	IO_COND(addr, pio_write32be(val,port), mmio_write32be(val, mem));
 	                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#190: FILE: lib/iomap.c:197:
+void ioread8_rep(void __iomap *addr, void *dst, unsigned long count)
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#193: FILE: lib/iomap.c:199:
+	IO_COND(addr, insb(port,dst,count), mmio_insb(mem, dst, count));
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#193: FILE: lib/iomap.c:199:
+	IO_COND(addr, insb(port,dst,count), mmio_insb(mem, dst, count));
 	                           ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#196: FILE: lib/iomap.c:201:
 }
+void ioread16_rep(void __iomap *addr, void *dst, unsigned long count)

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#196: FILE: lib/iomap.c:201:
+void ioread16_rep(void __iomap *addr, void *dst, unsigned long count)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#199: FILE: lib/iomap.c:203:
+	IO_COND(addr, insw(port,dst,count), mmio_insw(mem, dst, count));
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#199: FILE: lib/iomap.c:203:
+	IO_COND(addr, insw(port,dst,count), mmio_insw(mem, dst, count));
 	                           ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#202: FILE: lib/iomap.c:205:
 }
+void ioread32_rep(void __iomap *addr, void *dst, unsigned long count)

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#202: FILE: lib/iomap.c:205:
+void ioread32_rep(void __iomap *addr, void *dst, unsigned long count)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#205: FILE: lib/iomap.c:207:
+	IO_COND(addr, insl(port,dst,count), mmio_insl(mem, dst, count));
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#205: FILE: lib/iomap.c:207:
+	IO_COND(addr, insl(port,dst,count), mmio_insl(mem, dst, count));
 	                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#212: FILE: lib/iomap.c:213:
+void iowrite8_rep(void __iomap *addr, const void *src, unsigned long count)
                                ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#218: FILE: lib/iomap.c:217:
 }
+void iowrite16_rep(void __iomap *addr, const void *src, unsigned long count)

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#218: FILE: lib/iomap.c:217:
+void iowrite16_rep(void __iomap *addr, const void *src, unsigned long count)
                                 ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#224: FILE: lib/iomap.c:221:
 }
+void iowrite32_rep(void __iomap *addr, const void *src, unsigned long count)

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#224: FILE: lib/iomap.c:221:
+void iowrite32_rep(void __iomap *addr, const void *src, unsigned long count)
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#227: FILE: lib/iomap.c:223:
+	IO_COND(addr, outsl(port, src,count), mmio_outsl(mem, src, count));
 	                             ^

CHECK:SPACING: No space is necessary after a cast
#240: FILE: lib/iomap.c:234:
+	return (void __iomap *) (unsigned long) (port + PIO_OFFSET);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#280: FILE: lib/iomap.c:279:
+void pci_iounmap(struct pci_dev *dev, void __iomap * addr)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#305: FILE: arch/powerpc/kernel/iomap.c:23:
 }
+unsigned int ioread16(void __iomap *addr)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#311: FILE: arch/powerpc/kernel/iomap.c:27:
 }
+unsigned int ioread16be(void __iomap *addr)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#317: FILE: arch/powerpc/kernel/iomap.c:31:
 }
+unsigned int ioread32(void __iomap *addr)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#323: FILE: arch/powerpc/kernel/iomap.c:35:
 }
+unsigned int ioread32be(void __iomap *addr)

CHECK:SPACING: No space is necessary after a cast
#367: FILE: arch/powerpc/kernel/iomap.c:81:
+	_insb((u8 __iomem __force *) addr, dst, count);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#370: FILE: arch/powerpc/kernel/iomap.c:83:
 }
+void ioread16_rep(void __iomap *addr, void *dst, unsigned long count)

CHECK:SPACING: No space is necessary after a cast
#373: FILE: arch/powerpc/kernel/iomap.c:85:
+	_insw_ns((u16 __iomem __force *) addr, dst, count);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#376: FILE: arch/powerpc/kernel/iomap.c:87:
 }
+void ioread32_rep(void __iomap *addr, void *dst, unsigned long count)

CHECK:SPACING: No space is necessary after a cast
#379: FILE: arch/powerpc/kernel/iomap.c:89:
+	_insl_ns((u32 __iomem __force *) addr, dst, count);

CHECK:SPACING: No space is necessary after a cast
#389: FILE: arch/powerpc/kernel/iomap.c:97:
+	_outsb((u8 __iomem __force *) addr, src, count);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#392: FILE: arch/powerpc/kernel/iomap.c:99:
 }
+void iowrite16_rep(void __iomap *addr, const void *src, unsigned long count)

CHECK:SPACING: No space is necessary after a cast
#395: FILE: arch/powerpc/kernel/iomap.c:101:
+	_outsw_ns((u16 __iomem __force *) addr, src, count);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#398: FILE: arch/powerpc/kernel/iomap.c:103:
 }
+void iowrite32_rep(void __iomap *addr, const void *src, unsigned long count)

CHECK:SPACING: No space is necessary after a cast
#401: FILE: arch/powerpc/kernel/iomap.c:105:
+	_outsl_ns((u32 __iomem __force *) addr, src, count);

CHECK:SPACING: No space is necessary after a cast
#457: FILE: arch/frv/mb93090-mb00/pci-iomap.c:24:
+		return (void __iomap *) start;

CHECK:SPACING: No space is necessary after a cast
#473: FILE: arch/sparc/lib/iomap.c:11:
+	return (void __iomap *) (unsigned long) port;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#504: FILE: arch/sparc/lib/iomap.c:43:
+void pci_iounmap(struct pci_dev *dev, void __iomap * addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#550: FILE: arch/sparc64/lib/iomap.c:43:
+void pci_iounmap(struct pci_dev *dev, void __iomap * addr)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#563: FILE: arch/v850/kernel/rte_mb_a_pci.c:791:
+void __iomap *pci_iomap (struct pci_dev *dev, int bar, unsigned long max)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#572: FILE: arch/v850/kernel/rte_mb_a_pci.c:804:
+void pci_iounmap (struct pci_dev *dev, void __iomap *addr)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#586: FILE: include/asm-arm/io.h:246:
+extern void __iomap *ioport_map(unsigned long port, unsigned int nr);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#587: FILE: include/asm-arm/io.h:247:
+extern void ioport_unmap(void __iomap *addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#594: FILE: include/asm-arm/io.h:252:
+extern void __iomao *pci_iomap(struct pci_dev *dev, int bar, unsigned long maxlen);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#595: FILE: include/asm-arm/io.h:253:
+extern void pci_iounmap(struct pci_dev *dev, void __iomap *addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#659: FILE: include/asm-frv/io.h:371:
+extern void __iomap *pci_iomap(struct pci_dev *dev, int bar, unsigned long max);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#683: FILE: include/asm-generic/iomap.h:28:
+extern unsigned int ioread8(void __iomap *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __iomap *' should also have an identifier name
#683: FILE: include/asm-generic/iomap.h:28:
+extern unsigned int ioread8(void __iomap *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#684: FILE: include/asm-generic/iomap.h:29:
+extern unsigned int ioread16(void __iomap *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __iomap *' should also have an identifier name
#684: FILE: include/asm-generic/iomap.h:29:
+extern unsigned int ioread16(void __iomap *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#685: FILE: include/asm-generic/iomap.h:30:
+extern unsigned int ioread16be(void __iomap *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __iomap *' should also have an identifier name
#685: FILE: include/asm-generic/iomap.h:30:
+extern unsigned int ioread16be(void __iomap *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#686: FILE: include/asm-generic/iomap.h:31:
+extern unsigned int ioread32(void __iomap *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __iomap *' should also have an identifier name
#686: FILE: include/asm-generic/iomap.h:31:
+extern unsigned int ioread32(void __iomap *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#687: FILE: include/asm-generic/iomap.h:32:
+extern unsigned int ioread32be(void __iomap *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __iomap *' should also have an identifier name
#687: FILE: include/asm-generic/iomap.h:32:
+extern unsigned int ioread32be(void __iomap *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#689: FILE: include/asm-generic/iomap.h:34:
+extern void iowrite8(u8, void __iomap *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#689: FILE: include/asm-generic/iomap.h:34:
+extern void iowrite8(u8, void __iomap *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __iomap *' should also have an identifier name
#689: FILE: include/asm-generic/iomap.h:34:
+extern void iowrite8(u8, void __iomap *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#690: FILE: include/asm-generic/iomap.h:35:
+extern void iowrite16(u16, void __iomap *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16' should also have an identifier name
#690: FILE: include/asm-generic/iomap.h:35:
+extern void iowrite16(u16, void __iomap *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __iomap *' should also have an identifier name
#690: FILE: include/asm-generic/iomap.h:35:
+extern void iowrite16(u16, void __iomap *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#691: FILE: include/asm-generic/iomap.h:36:
+extern void iowrite16be(u16, void __iomap *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16' should also have an identifier name
#691: FILE: include/asm-generic/iomap.h:36:
+extern void iowrite16be(u16, void __iomap *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __iomap *' should also have an identifier name
#691: FILE: include/asm-generic/iomap.h:36:
+extern void iowrite16be(u16, void __iomap *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#692: FILE: include/asm-generic/iomap.h:37:
+extern void iowrite32(u32, void __iomap *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#692: FILE: include/asm-generic/iomap.h:37:
+extern void iowrite32(u32, void __iomap *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __iomap *' should also have an identifier name
#692: FILE: include/asm-generic/iomap.h:37:
+extern void iowrite32(u32, void __iomap *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#693: FILE: include/asm-generic/iomap.h:38:
+extern void iowrite32be(u32, void __iomap *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#693: FILE: include/asm-generic/iomap.h:38:
+extern void iowrite32be(u32, void __iomap *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __iomap *' should also have an identifier name
#693: FILE: include/asm-generic/iomap.h:38:
+extern void iowrite32be(u32, void __iomap *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#708: FILE: include/asm-generic/iomap.h:51:
+extern void ioread8_rep(void __iomap *port, void *buf, unsigned long count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#709: FILE: include/asm-generic/iomap.h:52:
+extern void ioread16_rep(void __iomap *port, void *buf, unsigned long count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#710: FILE: include/asm-generic/iomap.h:53:
+extern void ioread32_rep(void __iomap *port, void *buf, unsigned long count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#712: FILE: include/asm-generic/iomap.h:55:
+extern void iowrite8_rep(void __iomap *port, const void *buf, unsigned long count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#713: FILE: include/asm-generic/iomap.h:56:
+extern void iowrite16_rep(void __iomap *port, const void *buf, unsigned long count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#714: FILE: include/asm-generic/iomap.h:57:
+extern void iowrite32_rep(void __iomap *port, const void *buf, unsigned long count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#719: FILE: include/asm-generic/iomap.h:60:
+extern void __iomap *ioport_map(unsigned long port, unsigned int nr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#720: FILE: include/asm-generic/iomap.h:61:
+extern void ioport_unmap(void __iomap *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __iomap *' should also have an identifier name
#720: FILE: include/asm-generic/iomap.h:61:
+extern void ioport_unmap(void __iomap *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#726: FILE: include/asm-generic/iomap.h:65:
+extern void __iomap *pci_iomap(struct pci_dev *dev, int bar, unsigned long max);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#727: FILE: include/asm-generic/iomap.h:66:
+extern void pci_iounmap(struct pci_dev *dev, void __iomap *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __iomap *' should also have an identifier name
#727: FILE: include/asm-generic/iomap.h:66:
+extern void pci_iounmap(struct pci_dev *dev, void __iomap *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#761: FILE: include/asm-mn10300/io.h:219:
+extern void __iomap *pci_iomap(struct pci_dev *dev, int bar, unsigned long max);

CHECK:SPACING: No space is necessary after a cast
#774: FILE: include/asm-mn10300/io.h:268:
+	return (void __iomap *) port;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#879: FILE: include/asm-ppc/io.h:469:
+extern void __iomap *ioport_map(unsigned long port, unsigned int nr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#880: FILE: include/asm-ppc/io.h:470:
+extern void ioport_unmap(void __iomap *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __iomap *' should also have an identifier name
#880: FILE: include/asm-ppc/io.h:470:
+extern void ioport_unmap(void __iomap *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#886: FILE: include/asm-ppc/io.h:474:
+extern void __iomap *pci_iomap(struct pci_dev *dev, int bar, unsigned long max);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#887: FILE: include/asm-ppc/io.h:475:
+extern void pci_iounmap(struct pci_dev *dev, void __iomap *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __iomap *' should also have an identifier name
#887: FILE: include/asm-ppc/io.h:475:
+extern void pci_iounmap(struct pci_dev *dev, void __iomap *);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#908: FILE: include/asm-sparc/io.h:255:
+#define iowrite8(val,X)			writeb(val,(void __iomem __force *)(X))
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#908: FILE: include/asm-sparc/io.h:255:
+#define iowrite8(val,X)			writeb(val,(void __iomem __force *)(X))
                        			          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#909: FILE: include/asm-sparc/io.h:256:
+#define iowrite16(val,X)		writew(val,(void __iomem __force *)(X))
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#909: FILE: include/asm-sparc/io.h:256:
+#define iowrite16(val,X)		writew(val,(void __iomem __force *)(X))
                         		          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#910: FILE: include/asm-sparc/io.h:257:
+#define iowrite32(val,X)		writel(val,(void __iomem __force *)(X))
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#910: FILE: include/asm-sparc/io.h:257:
+#define iowrite32(val,X)		writel(val,(void __iomem __force *)(X))
                         		          ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#918: FILE: include/asm-sparc/io.h:263:
 }
+static inline void ioread16_rep(void __iomap *port, void *buf, unsigned long count)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#950: FILE: include/asm-sparc/io.h:289:
+extern void __iomap *ioport_map(unsigned long port, unsigned int nr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#951: FILE: include/asm-sparc/io.h:290:
+extern void ioport_unmap(void __iomap *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __iomap *' should also have an identifier name
#951: FILE: include/asm-sparc/io.h:290:
+extern void ioport_unmap(void __iomap *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#957: FILE: include/asm-sparc/io.h:294:
+extern void __iomap *pci_iomap(struct pci_dev *dev, int bar, unsigned long max);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#958: FILE: include/asm-sparc/io.h:295:
+extern void pci_iounmap(struct pci_dev *dev, void __iomap *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __iomap *' should also have an identifier name
#958: FILE: include/asm-sparc/io.h:295:
+extern void pci_iounmap(struct pci_dev *dev, void __iomap *);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#979: FILE: include/asm-sparc64/io.h:450:
+#define iowrite8(val,X)			writeb(val,(void __iomem __force *)(X))
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#979: FILE: include/asm-sparc64/io.h:450:
+#define iowrite8(val,X)			writeb(val,(void __iomem __force *)(X))
                        			          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#980: FILE: include/asm-sparc64/io.h:451:
+#define iowrite16(val,X)		writew(val,(void __iomem __force *)(X))
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#980: FILE: include/asm-sparc64/io.h:451:
+#define iowrite16(val,X)		writew(val,(void __iomem __force *)(X))
                         		          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#981: FILE: include/asm-sparc64/io.h:452:
+#define iowrite32(val,X)		writel(val,(void __iomem __force *)(X))
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#981: FILE: include/asm-sparc64/io.h:452:
+#define iowrite32(val,X)		writel(val,(void __iomem __force *)(X))
                         		          ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#986: FILE: include/asm-sparc64/io.h:455:
+extern void __iomap *ioport_map(unsigned long port, unsigned int nr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#987: FILE: include/asm-sparc64/io.h:456:
+extern void ioport_unmap(void __iomap *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __iomap *' should also have an identifier name
#987: FILE: include/asm-sparc64/io.h:456:
+extern void ioport_unmap(void __iomap *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#993: FILE: include/asm-sparc64/io.h:460:
+extern void __iomap *pci_iomap(struct pci_dev *dev, int bar, unsigned long max);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#994: FILE: include/asm-sparc64/io.h:461:
+extern void pci_iounmap(struct pci_dev *dev, void __iomap *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __iomap *' should also have an identifier name
#994: FILE: include/asm-sparc64/io.h:461:
+extern void pci_iounmap(struct pci_dev *dev, void __iomap *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1012: FILE: include/asm-v850/io.h:109:
+#define ioread8(addr)		readb ((void __iomem __force *)(addr))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1012: FILE: include/asm-v850/io.h:109:
+#define ioread8(addr)		readb ((void __iomem __force *)(addr))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1013: FILE: include/asm-v850/io.h:110:
+#define ioread16(addr)		readw ((void __iomem __force *)(addr))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1013: FILE: include/asm-v850/io.h:110:
+#define ioread16(addr)		readw ((void __iomem __force *)(addr))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1014: FILE: include/asm-v850/io.h:111:
+#define ioread32(addr)		readl ((void __iomem __force *)(addr))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1014: FILE: include/asm-v850/io.h:111:
+#define ioread32(addr)		readl ((void __iomem __force *)(addr))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1015: FILE: include/asm-v850/io.h:112:
+#define iowrite8(val, addr)	writeb (val, (void __iomem __force *)(addr))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1015: FILE: include/asm-v850/io.h:112:
+#define iowrite8(val, addr)	writeb (val, (void __iomem __force *)(addr))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1016: FILE: include/asm-v850/io.h:113:
+#define iowrite16(val, addr)	writew (val, (void __iomem __force *)(addr))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1016: FILE: include/asm-v850/io.h:113:
+#define iowrite16(val, addr)	writew (val, (void __iomem __force *)(addr))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1017: FILE: include/asm-v850/io.h:114:
+#define iowrite32(val, addr)	writel (val, (void __iomem __force *)(addr))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1017: FILE: include/asm-v850/io.h:114:
+#define iowrite32(val, addr)	writel (val, (void __iomem __force *)(addr))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1031: FILE: include/asm-v850/pci.h:116:
+extern void __iomap *pci_iomap(struct pci_dev *dev, int bar, unsigned long max);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1032: FILE: include/asm-v850/pci.h:117:
+extern void pci_iounmap (struct pci_dev *dev, void __iomap *addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1032: FILE: include/asm-v850/pci.h:117:
+extern void pci_iounmap (struct pci_dev *dev, void __iomap *addr);

ERROR:POINTER_LOCATION: "foo * const * bar" should be "foo * const *bar"
#1097: FILE: lib/devres.c:181:
+void __iomap * const * pcim_iomap_table(struct pci_dev *pdev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1106: FILE: lib/devres.c:206:
+void __iomap * pcim_iomap(struct pci_dev *pdev, int bar, unsigned long maxlen)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000319688.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 39 errors, 32 warnings, 87 checks, 961 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000319688.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
