WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#49: FILE: drivers/block/Kconfig:301:
+config BLK_DEV_OSD
+	tristate "OSD object-as-blkdev support"
+	depends on SCSI_OSD_INITIATOR
+	---help---
+	  Saying Y or M here will allow the exporting of a single SCSI
+	  OSD (object-based storage) object as a Linux block device.
+
+	  For example, if you create a 2G object on an OSD device,
+	  you can then use this module to present that 2G object as
+	  a Linux block device.
+
+	  To compile this driver as a module, choose M here: the
+	  module will be called osdblk.
+
+	  If unsure, say N.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#81: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#86: FILE: drivers/block/osdblk.c:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#88: FILE: drivers/block/osdblk.c:3:
+/*
+   osdblk.c -- Export a single SCSI OSD object as a Linux block device

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#90: FILE: drivers/block/osdblk.c:5:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#104: FILE: drivers/block/osdblk.c:19:
+   the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#106: FILE: drivers/block/osdblk.c:21:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#117: FILE: drivers/block/osdblk.c:32:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#134: FILE: drivers/block/osdblk.c:49:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#139: FILE: drivers/block/osdblk.c:54:
+
+

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#170: FILE: drivers/block/osdblk.c:85:
+	uint8_t			cred[OSD_CAP_LEN];

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#184: FILE: drivers/block/osdblk.c:99:
+	spinlock_t		lock;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#187: FILE: drivers/block/osdblk.c:102:
+	uint8_t			obj_cred[OSD_CAP_LEN];

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#200: FILE: drivers/block/osdblk.c:115:
+static struct block_device_operations osdblk_bd_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#204: FILE: drivers/block/osdblk.c:119:
+const struct osd_attr g_attr_logical_length = ATTR_DEF(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#235: FILE: drivers/block/osdblk.c:150:
+static int osd_async_op(struct osd_request *or, osd_req_done_fn *async_done,
+		   void *caller_context, u8 *cred)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cur_attr.attr_page == attr->attr_page'
#257: FILE: drivers/block/osdblk.c:172:
+		if ((cur_attr.attr_page == attr->attr_page) &&
+		    (cur_attr.attr_id == attr->attr_id)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cur_attr.attr_id == attr->attr_id'
#257: FILE: drivers/block/osdblk.c:172:
+		if ((cur_attr.attr_page == attr->attr_page) &&
+		    (cur_attr.attr_id == attr->attr_id)) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#300: FILE: drivers/block/osdblk.c:215:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#458: FILE: drivers/block/osdblk.c:373:
+/********************************************************************
+  /sys/class/osdblk/

ERROR:CODE_INDENT: code indent should use tabs where possible
#459: FILE: drivers/block/osdblk.c:374:
+                     add^Imap OSD object to blkdev$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#460: FILE: drivers/block/osdblk.c:375:
+                     remove^Iunmap OSD object$

ERROR:CODE_INDENT: code indent should use tabs where possible
#461: FILE: drivers/block/osdblk.c:376:
+                     list^Ishow mappings$

WARNING:LINE_SPACING: Missing a blank line after declarations
#473: FILE: drivers/block/osdblk.c:388:
+	int idx;
+	mutex_lock_nested(&ctl_mutex, SINGLE_DEPTH_NESTING);

WARNING:LINE_SPACING: Missing a blank line after declarations
#476: FILE: drivers/block/osdblk.c:391:
+		struct osdblk_device *osdev = osdblk_devs[idx];
+		if (!osdev)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#478: FILE: drivers/block/osdblk.c:393:
+		n += sprintf(data+n, "%d %d %lu %lu %s\n",
 		                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#562: FILE: drivers/block/osdblk.c:477:
+static ssize_t class_osdblk_remove(struct class *c, const char *buf,
+					size_t count)

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#567: FILE: drivers/block/osdblk.c:482:
+	if (sscanf(buf, "%d", &target_id) != 1)
+		return -EINVAL;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#616: FILE: drivers/block/osdblk.c:531:
+		printk(PFX "failed to create class osdblk\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000145675.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 10 warnings, 15 checks, 592 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000145675.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
