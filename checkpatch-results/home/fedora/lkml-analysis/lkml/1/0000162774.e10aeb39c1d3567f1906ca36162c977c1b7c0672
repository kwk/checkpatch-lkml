WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#64: FILE: arch/m68k/include/asm/bitops_mm.h:62:
+				      volatile unsigned long *vaddr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#73: FILE: arch/m68k/include/asm/bitops_mm.h:70:
+				     volatile unsigned long *vaddr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#103: FILE: arch/m68k/include/asm/bitops_mm.h:120:
+					volatile unsigned long *vaddr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#112: FILE: arch/m68k/include/asm/bitops_mm.h:128:
+				       volatile unsigned long *vaddr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#187: FILE: arch/m68k/include/asm/bitops_no.h:52:
+static __inline__ void set_bit(unsigned long nr, volatile unsigned long * addr)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#187: FILE: arch/m68k/include/asm/bitops_no.h:52:
+static __inline__ void set_bit(unsigned long nr, volatile unsigned long * addr)

WARNING:INLINE: plain inline is preferred over __inline__
#187: FILE: arch/m68k/include/asm/bitops_no.h:52:
+static __inline__ void set_bit(unsigned long nr, volatile unsigned long * addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#196: FILE: arch/m68k/include/asm/bitops_no.h:75:
+static __inline__ void clear_bit(unsigned long nr, volatile unsigned long * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#196: FILE: arch/m68k/include/asm/bitops_no.h:75:
+static __inline__ void clear_bit(unsigned long nr, volatile unsigned long * addr)

WARNING:INLINE: plain inline is preferred over __inline__
#196: FILE: arch/m68k/include/asm/bitops_no.h:75:
+static __inline__ void clear_bit(unsigned long nr, volatile unsigned long * addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#205: FILE: arch/m68k/include/asm/bitops_no.h:92:
+static __inline__ void change_bit(unsigned long nr, volatile unsigned long * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#205: FILE: arch/m68k/include/asm/bitops_no.h:92:
+static __inline__ void change_bit(unsigned long nr, volatile unsigned long * addr)

WARNING:INLINE: plain inline is preferred over __inline__
#205: FILE: arch/m68k/include/asm/bitops_no.h:92:
+static __inline__ void change_bit(unsigned long nr, volatile unsigned long * addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#214: FILE: arch/m68k/include/asm/bitops_no.h:109:
+static __inline__ int test_and_set_bit(unsigned long nr, volatile unsigned long * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#214: FILE: arch/m68k/include/asm/bitops_no.h:109:
+static __inline__ int test_and_set_bit(unsigned long nr, volatile unsigned long * addr)

WARNING:INLINE: plain inline is preferred over __inline__
#214: FILE: arch/m68k/include/asm/bitops_no.h:109:
+static __inline__ int test_and_set_bit(unsigned long nr, volatile unsigned long * addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#223: FILE: arch/m68k/include/asm/bitops_no.h:130:
+static __inline__ int test_and_clear_bit(unsigned long nr, volatile unsigned long * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#223: FILE: arch/m68k/include/asm/bitops_no.h:130:
+static __inline__ int test_and_clear_bit(unsigned long nr, volatile unsigned long * addr)

WARNING:INLINE: plain inline is preferred over __inline__
#223: FILE: arch/m68k/include/asm/bitops_no.h:130:
+static __inline__ int test_and_clear_bit(unsigned long nr, volatile unsigned long * addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#232: FILE: arch/m68k/include/asm/bitops_no.h:151:
+static __inline__ int test_and_change_bit(unsigned long nr, volatile unsigned long * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#232: FILE: arch/m68k/include/asm/bitops_no.h:151:
+static __inline__ int test_and_change_bit(unsigned long nr, volatile unsigned long * addr)

WARNING:INLINE: plain inline is preferred over __inline__
#232: FILE: arch/m68k/include/asm/bitops_no.h:151:
+static __inline__ int test_and_change_bit(unsigned long nr, volatile unsigned long * addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#241: FILE: arch/m68k/include/asm/bitops_no.h:175:
+static __inline__ int __constant_test_bit(unsigned long nr, const volatile unsigned long * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#241: FILE: arch/m68k/include/asm/bitops_no.h:175:
+static __inline__ int __constant_test_bit(unsigned long nr, const volatile unsigned long * addr)

WARNING:INLINE: plain inline is preferred over __inline__
#241: FILE: arch/m68k/include/asm/bitops_no.h:175:
+static __inline__ int __constant_test_bit(unsigned long nr, const volatile unsigned long * addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#247: FILE: arch/m68k/include/asm/bitops_no.h:180:
+static __inline__ int __test_bit(unsigned long nr, const volatile unsigned long * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#247: FILE: arch/m68k/include/asm/bitops_no.h:180:
+static __inline__ int __test_bit(unsigned long nr, const volatile unsigned long * addr)

WARNING:INLINE: plain inline is preferred over __inline__
#247: FILE: arch/m68k/include/asm/bitops_no.h:180:
+static __inline__ int __test_bit(unsigned long nr, const volatile unsigned long * addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#256: FILE: arch/m68k/include/asm/bitops_no.h:199:
+static __inline__ int ext2_set_bit(unsigned long nr, volatile void * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#256: FILE: arch/m68k/include/asm/bitops_no.h:199:
+static __inline__ int ext2_set_bit(unsigned long nr, volatile void * addr)

WARNING:INLINE: plain inline is preferred over __inline__
#256: FILE: arch/m68k/include/asm/bitops_no.h:199:
+static __inline__ int ext2_set_bit(unsigned long nr, volatile void * addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#265: FILE: arch/m68k/include/asm/bitops_no.h:218:
+static __inline__ int ext2_clear_bit(unsigned long nr, volatile void * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#265: FILE: arch/m68k/include/asm/bitops_no.h:218:
+static __inline__ int ext2_clear_bit(unsigned long nr, volatile void * addr)

WARNING:INLINE: plain inline is preferred over __inline__
#265: FILE: arch/m68k/include/asm/bitops_no.h:218:
+static __inline__ int ext2_clear_bit(unsigned long nr, volatile void * addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#274: FILE: arch/m68k/include/asm/bitops_no.h:255:
+static __inline__ int ext2_test_bit(unsigned long nr, const volatile void * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#274: FILE: arch/m68k/include/asm/bitops_no.h:255:
+static __inline__ int ext2_test_bit(unsigned long nr, const volatile void * addr)

WARNING:INLINE: plain inline is preferred over __inline__
#274: FILE: arch/m68k/include/asm/bitops_no.h:255:
+static __inline__ int ext2_test_bit(unsigned long nr, const volatile void * addr)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000162774.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 11 errors, 26 warnings, 0 checks, 216 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000162774.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
