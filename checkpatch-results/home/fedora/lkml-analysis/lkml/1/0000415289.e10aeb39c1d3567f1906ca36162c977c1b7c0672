WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
master.kernel.org:/pub/scm/linux/kernel/git/jgarzik/netdev-2.6.git upstream-linus

WARNING:TYPO_SPELLING: 'hanlder' may be misspelled - perhaps 'handler'?
#57: 
      cxgb3 - fix netpoll hanlder
                          ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#106: FILE: drivers/net/bonding/bond_3ad.c:2306:
+ * set link state for bonding master: if we have an active $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#212: FILE: drivers/net/cxgb3/cxgb3_main.c:2080:
+^I^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#283: FILE: drivers/net/cxgb3/xgmac.c:240:
+		u32 v = t3_read_reg(mac->adapter, reg);
+		t3_write_reg(mac->adapter, reg, v);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#294: FILE: drivers/net/cxgb3/xgmac.c:251:
+		u32 v = t3_read_reg(mac->adapter, reg);
+		t3_write_reg(mac->adapter, reg, v);

CHECK:BRACES: braces {} should be used on all arms of this statement
#321: FILE: drivers/net/cxgb3/xgmac.c:339:
+	if (adap->params.rev == T3_REV_B2 &&
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#338: FILE: drivers/net/cxgb3/xgmac.c:356:
+	} else

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#342: FILE: drivers/net/cxgb3/xgmac.c:360:
+	/*
+	 * Adjust the PAUSE frame watermarks.  We always set the LWM, and the

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#371: FILE: drivers/net/cxgb3/xgmac.c:419:
+		val |= V_RXFIFOPAUSEHWM(rx_fifo_hwm(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#373: FILE: drivers/net/cxgb3/xgmac.c:421:
+						t3_read_reg(adap,
+						A_XGM_RX_MAX_PKT_SIZE

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#456: FILE: drivers/net/forcedeth.c:4829:
+		writel(NVREG_PFF_ALWAYS|NVREG_PFF_MYADDR, base + NvRegPacketFilterFlags);
 		                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <NvRegPacketFilterFlags>
#456: FILE: drivers/net/forcedeth.c:4829:
+		writel(NVREG_PFF_ALWAYS|NVREG_PFF_MYADDR, base + NvRegPacketFilterFlags);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:TYPO_SPELLING: 'wil' may be misspelled - perhaps 'will'?
#539: FILE: drivers/net/spider_net.c:1057:
+ * hardware wil run out of room to put incoming packets. This
             ^^^

WARNING:TYPO_SPELLING: 'wil' may be misspelled - perhaps 'will'?
#541: FILE: drivers/net/spider_net.c:1059:
+ * of halting/retrying). Thus, once the driver runs, it wil need
                                                         ^^^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#562: FILE: drivers/net/spider_net.c:1080:
+	for (i=0; i<chain->num_desc; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#562: FILE: drivers/net/spider_net.c:1080:
+	for (i=0; i<chain->num_desc; i++) {
 	           ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#563: FILE: drivers/net/spider_net.c:1081:
+		if (status != SPIDER_NET_DESCR_CARDOWNED) break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#582: FILE: drivers/net/spider_net.c:1100:
+	for (i=0; i<chain->num_desc; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#582: FILE: drivers/net/spider_net.c:1100:
+	for (i=0; i<chain->num_desc; i++) {
 	           ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'status != SPIDER_NET_DESCR_CARDOWNED'
#583: FILE: drivers/net/spider_net.c:1101:
+		if ((status != SPIDER_NET_DESCR_CARDOWNED) &&
+		    (status != SPIDER_NET_DESCR_NOT_IN_USE)) break;

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'status != SPIDER_NET_DESCR_NOT_IN_USE'
#583: FILE: drivers/net/spider_net.c:1101:
+		if ((status != SPIDER_NET_DESCR_CARDOWNED) &&
+		    (status != SPIDER_NET_DESCR_NOT_IN_USE)) break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#583: FILE: drivers/net/spider_net.c:1101:
+		if ((status != SPIDER_NET_DESCR_CARDOWNED) &&
+		    (status != SPIDER_NET_DESCR_NOT_IN_USE)) break;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i == chain->num_desc'
#590: FILE: drivers/net/spider_net.c:1108:
+	if ((i == chain->num_desc) || (i == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i == 0'
#590: FILE: drivers/net/spider_net.c:1108:
+	if ((i == chain->num_desc) || (i == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'packets_done == 0'
#620: FILE: drivers/net/spider_net.c:1238:
+	if ((packets_done == 0) && (card->num_rx_ints != 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'card->num_rx_ints != 0'
#620: FILE: drivers/net/spider_net.c:1238:
+	if ((packets_done == 0) && (card->num_rx_ints != 0)) {

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#652: FILE: drivers/net/spider_net.c:1494:
+			card->num_rx_ints ++;
 			                  ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#669: FILE: drivers/net/spider_net.c:1514:
+		card->num_rx_ints ++;
 		                  ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#683: FILE: drivers/net/spider_net.c:1528:
+		card->num_rx_ints ++;
 		                  ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#692: FILE: drivers/net/spider_net.c:1622:
+		card->num_rx_ints ++;
 		                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#728: FILE: drivers/net/spider_net.h:225:
+                                       SPIDER_NET_GDTDCEIDIS | \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#728: FILE: drivers/net/spider_net.h:225:
+                                       SPIDER_NET_GDTDCEIDIS | \$

CHECK:BIT_MACRO: Prefer using the BIT macro
#738: FILE: drivers/net/spider_net.h:336:
+#define SPIDER_NET_TXINT	(1 << SPIDER_NET_GDTFDCINT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

ERROR:IN_ATOMIC: do not use in_atomic in drivers
#884: FILE: drivers/s390/net/netiucv.c:1306:
+		if (!in_atomic())

in_atomic() is not for driver use so any such use is reported as an ERROR.
Also in_atomic() is often used to determine if sleeping is permitted,
but it is not reliable in this use model.  Therefore its use is
strongly discouraged.

However, in_atomic() is ok for core kernel use.

See: https://lore.kernel.org/lkml/20080320201723.b87b3732.akpm@linux-foundation.org/

WARNING:SPLIT_STRING: quoted string split across lines
#1007: FILE: drivers/s390/net/qeth_main.c:7473:
 			PRINT_WARN("LAN on card %s if offline! "
+				   "Waiting for STARTLAN from card.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#1031: FILE: drivers/s390/net/qeth_main.c:7795:
+			card->info.mcl_level[0] = (char) _ebcasc[(__u8)

CHECK:SPACING: No space is necessary after a cast
#1033: FILE: drivers/s390/net/qeth_main.c:7797:
+			card->info.mcl_level[1] = (char) _ebcasc[(__u8)

CHECK:SPACING: No space is necessary after a cast
#1035: FILE: drivers/s390/net/qeth_main.c:7799:
+			card->info.mcl_level[2] = (char) _ebcasc[(__u8)

CHECK:SPACING: No space is necessary after a cast
#1037: FILE: drivers/s390/net/qeth_main.c:7801:
+			card->info.mcl_level[3] = (char) _ebcasc[(__u8)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000415289.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 14 errors, 9 warnings, 17 checks, 816 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000415289.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
