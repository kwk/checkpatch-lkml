WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#73: FILE: drivers/mfd/Kconfig:244:
+config EZX_PCAP
+	bool "PCAP Support"
+	depends on SPI_MASTER
+	help
+	  This enables the PCAP ASIC present on EZX Phones. This is
+	  needed for MMC, TouchScreen, Sound, USB, etc..
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#97: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#102: FILE: drivers/mfd/ezx-pcap.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#126: FILE: drivers/mfd/ezx-pcap.c:25:
+};
+static struct pcap_chip pcap;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SIZEOF_PARENTHESIS: sizeof t should be sizeof(t)
#140: FILE: drivers/mfd/ezx-pcap.c:39:
+	memset(&t, 0, sizeof t);

CHECK:SPACING: No space is necessary after a cast
#146: FILE: drivers/mfd/ezx-pcap.c:45:
+	t.tx_buf = (u8 *) buf;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#147: FILE: drivers/mfd/ezx-pcap.c:46:
+	t.rx_buf = (u8 *) buf;

WARNING:UNNECESSARY_KERN_LEVEL: Possible unnecessary KERN_WARNING
#226: FILE: drivers/mfd/ezx-pcap.c:125:
+			if (WARN(!desc, KERN_WARNING

WARNING:RETURN_VOID: void function return statements are not generally useful
#244: FILE: drivers/mfd/ezx-pcap.c:143:
+	return;
+}

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#264: FILE: drivers/mfd/ezx-pcap.c:163:
+static int __devexit ezx_pcap_remove(struct spi_device *spi)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#279: FILE: drivers/mfd/ezx-pcap.c:178:
+static int __devinit ezx_pcap_probe(struct spi_device *spi)

WARNING:TYPO_SPELLING: 'cant' may be misspelled - perhaps 'can't'?
#310: FILE: drivers/mfd/ezx-pcap.c:209:
+		dev_err(&spi->dev, "cant create pcap thread\n");
 		                    ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#393: FILE: include/linux/mfd/ezx-pcap.h:1:
+/*

WARNING:SPACING: Unnecessary space before function pointer arguments
#412: FILE: include/linux/mfd/ezx-pcap.h:20:
+	void (*init) (void);	/* board specific init */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#417: FILE: include/linux/mfd/ezx-pcap.h:25:
+int ezx_pcap_write(u8, u32);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#417: FILE: include/linux/mfd/ezx-pcap.h:25:
+int ezx_pcap_write(u8, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#418: FILE: include/linux/mfd/ezx-pcap.h:26:
+int ezx_pcap_read(u8, u32 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32 *' should also have an identifier name
#418: FILE: include/linux/mfd/ezx-pcap.h:26:
+int ezx_pcap_read(u8, u32 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#419: FILE: include/linux/mfd/ezx-pcap.h:27:
+int pcap_irq(int);

WARNING:TYPO_SPELLING: 'acessible' may be misspelled - perhaps 'accessible'?
#434: FILE: include/linux/mfd/ezx-pcap.h:42:
+/* registers acessible by both pcap ports */
              ^^^^^^^^^

WARNING:TYPO_SPELLING: 'acessible' may be misspelled - perhaps 'accessible'?
#456: FILE: include/linux/mfd/ezx-pcap.h:64:
+/* registers acessible by pcap port 1 only (a1200, e2 & e6) */
              ^^^^^^^^^

CHECK:BIT_MACRO: Prefer using the BIT macro
#522: FILE: include/linux/mfd/ezx-pcap.h:130:
+#define PCAP_BATT_B_FDBK		(1 << 8)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#523: FILE: include/linux/mfd/ezx-pcap.h:131:
+#define PCAP_BATT_EXT_ISENSE		(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#526: FILE: include/linux/mfd/ezx-pcap.h:134:
+#define PCAP_BATT_I_COIN		(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#527: FILE: include/linux/mfd/ezx-pcap.h:135:
+#define PCAP_BATT_COIN_CH_EN		(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#530: FILE: include/linux/mfd/ezx-pcap.h:138:
+#define PCAP_BATT_EOL_CMP_EN		(1 << 20)

CHECK:BIT_MACRO: Prefer using the BIT macro
#531: FILE: include/linux/mfd/ezx-pcap.h:139:
+#define PCAP_BATT_BATT_DET_EN		(1 << 21)

CHECK:BIT_MACRO: Prefer using the BIT macro
#532: FILE: include/linux/mfd/ezx-pcap.h:140:
+#define PCAP_BATT_THERMBIAS_CTRL	(1 << 22)

CHECK:BIT_MACRO: Prefer using the BIT macro
#534: FILE: include/linux/mfd/ezx-pcap.h:142:
+#define PCAP_ADC_ADEN			(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#535: FILE: include/linux/mfd/ezx-pcap.h:143:
+#define PCAP_ADC_RAND			(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#536: FILE: include/linux/mfd/ezx-pcap.h:144:
+#define PCAP_ADC_AD_SEL1		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#537: FILE: include/linux/mfd/ezx-pcap.h:145:
+#define PCAP_ADC_AD_SEL2		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#544: FILE: include/linux/mfd/ezx-pcap.h:152:
+#define PCAP_ADC_ATOX			(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#545: FILE: include/linux/mfd/ezx-pcap.h:153:
+#define PCAP_ADC_MTR1			(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#546: FILE: include/linux/mfd/ezx-pcap.h:154:
+#define PCAP_ADC_MTR2			(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#549: FILE: include/linux/mfd/ezx-pcap.h:157:
+#define PCAP_ADC_TS_REF_LOWPWR		(1 << 20)

CHECK:BIT_MACRO: Prefer using the BIT macro
#550: FILE: include/linux/mfd/ezx-pcap.h:158:
+#define PCAP_ADC_TS_REFENB		(1 << 21)

CHECK:BIT_MACRO: Prefer using the BIT macro
#551: FILE: include/linux/mfd/ezx-pcap.h:159:
+#define PCAP_ADC_BATT_I_POLARITY	(1 << 22)

CHECK:BIT_MACRO: Prefer using the BIT macro
#552: FILE: include/linux/mfd/ezx-pcap.h:160:
+#define PCAP_ADC_BATT_I_ADC		(1 << 23)

CHECK:BIT_MACRO: Prefer using the BIT macro
#591: FILE: include/linux/mfd/ezx-pcap.h:199:
+#define PCAP_ADR_ADINC1			(1 << 20)

CHECK:BIT_MACRO: Prefer using the BIT macro
#592: FILE: include/linux/mfd/ezx-pcap.h:200:
+#define PCAP_ADR_ADINC2			(1 << 21)

CHECK:BIT_MACRO: Prefer using the BIT macro
#593: FILE: include/linux/mfd/ezx-pcap.h:201:
+#define PCAP_ADR_ASC			(1 << 22)

CHECK:BIT_MACRO: Prefer using the BIT macro
#594: FILE: include/linux/mfd/ezx-pcap.h:202:
+#define PCAP_ADR_ONESHOT		(1 << 23)

CHECK:BIT_MACRO: Prefer using the BIT macro
#596: FILE: include/linux/mfd/ezx-pcap.h:204:
+#define PCAP_BUSCTRL_FSENB		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#597: FILE: include/linux/mfd/ezx-pcap.h:205:
+#define PCAP_BUSCTRL_USB_SUSPEND	(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#598: FILE: include/linux/mfd/ezx-pcap.h:206:
+#define PCAP_BUSCTRL_USB_PU		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#599: FILE: include/linux/mfd/ezx-pcap.h:207:
+#define PCAP_BUSCTRL_USB_PD		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#600: FILE: include/linux/mfd/ezx-pcap.h:208:
+#define PCAP_BUSCTRL_VUSB_EN		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#601: FILE: include/linux/mfd/ezx-pcap.h:209:
+#define PCAP_BUSCTRL_USB_PS		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#602: FILE: include/linux/mfd/ezx-pcap.h:210:
+#define PCAP_BUSCTRL_VUSB_MSTR_EN	(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#603: FILE: include/linux/mfd/ezx-pcap.h:211:
+#define PCAP_BUSCTRL_VBUS_PD_ENB	(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#604: FILE: include/linux/mfd/ezx-pcap.h:212:
+#define PCAP_BUSCTRL_CURRLIM		(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#605: FILE: include/linux/mfd/ezx-pcap.h:213:
+#define PCAP_BUSCTRL_RS232ENB		(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#606: FILE: include/linux/mfd/ezx-pcap.h:214:
+#define PCAP_BUSCTRL_RS232_DIR		(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#607: FILE: include/linux/mfd/ezx-pcap.h:215:
+#define PCAP_BUSCTRL_SE0_CONN		(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#608: FILE: include/linux/mfd/ezx-pcap.h:216:
+#define PCAP_BUSCTRL_USB_PDM		(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#609: FILE: include/linux/mfd/ezx-pcap.h:217:
+#define PCAP_BUSCTRL_BUS_PRI_ADJ	(1 << 24)

CHECK:BIT_MACRO: Prefer using the BIT macro
#628: FILE: include/linux/mfd/ezx-pcap.h:236:
+#define PCAP_LED0_EN		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#629: FILE: include/linux/mfd/ezx-pcap.h:237:
+#define PCAP_LED1_EN		(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#637: FILE: include/linux/mfd/ezx-pcap.h:245:
+#define PCAP_VIB_EN		(1 << 19)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000122160.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 18 warnings, 42 checks, 559 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000122160.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
