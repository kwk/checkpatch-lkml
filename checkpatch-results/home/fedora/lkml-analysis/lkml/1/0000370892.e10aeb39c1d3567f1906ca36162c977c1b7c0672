WARNING:UNKNOWN_COMMIT_ID: Unknown commit id 'b592fcfe7f06c15ec11774b5be7ce0de3aa86e73', maybe rebased or not pulled?
#56: 
commit b592fcfe7f06c15ec11774b5be7ce0de3aa86e73 is now gone.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#94: FILE: fs/sysfs/dir.c:724:
+int sysfs_create_dir(struct kobject * kobj)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#114: FILE: fs/sysfs/dir.c:886:
+int sysfs_rename_dir(struct kobject * kobj, const char *new_name)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#453: FILE: include/linux/sysfs.h:147:
+static inline int sysfs_create_dir(struct kobject * kobj)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#464: FILE: include/linux/sysfs.h:157:
+static inline int sysfs_rename_dir(struct kobject * kobj, const char *new_name)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#490: FILE: lib/kobject.c:47:
+static int create_dir(struct kobject * kobj)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#510: FILE: lib/kobject.c:164:
+int kobject_add(struct kobject * kobj)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000370892.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 1 warnings, 0 checks, 444 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000370892.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
