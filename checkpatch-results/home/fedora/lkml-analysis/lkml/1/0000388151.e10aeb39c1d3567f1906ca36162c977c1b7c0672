WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
Sadly I have to use the Apani/Nortel VPN linux client to connect to my office.  The latest version (3.5) stopped being compatible with the latest stable 2.6.22 kernel (how suprising :().

WARNING:TYPO_SPELLING: 'suprising' may be misspelled - perhaps 'surprising'?
#36: 
Sadly I have to use the Apani/Nortel VPN linux client to connect to my office.  The latest version (3.5) stopped being compatible with the latest stable 2.6.22 kernel (how suprising :().
                                                                                                                                                                            ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'collegue' may be misspelled - perhaps 'colleague'?
#44: 
Based on the horrors that showed up while compiling against a 2.6.22 kernel (see below), I was wondering if somebody would be kind enough to review our not-yet-working patch that converts dev_base/skb calls to the new API.  A collegue of mine made all the required changes but when the netlock service gets fired-up the machine hang.
                                                                                                                                                                                                                                  ^^^^^^^^

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#60: FILE: src/linux_wrapper.c:139:
+#elif (LINUX_VERSION_CODE >= 0x020616)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#61: FILE: src/linux_wrapper.c:140:
+typedef struct list_head net_device_t;

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#70: FILE: src/linux_wrapper.c:311:
+#if (LINUX_VERSION_CODE >= 0x020616)

ERROR:CODE_INDENT: code indent should use tabs where possible
#71: FILE: src/linux_wrapper.c:312:
+        nl_dev_base = &dev_base_head;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: src/linux_wrapper.c:312:
+        nl_dev_base = &dev_base_head;$

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#82: FILE: src/linux_wrapper.c:438:
+#if (LINUX_VERSION_CODE >= 0x020616)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: src/linux_wrapper.c:439:
+    struct net_device *dev = skb->dev;$

CHECK:SPACING: No space is necessary after a cast
#84: FILE: src/linux_wrapper.c:440:
+    struct iphdr *iph = (struct iphdr*) skb->network_header;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: src/linux_wrapper.c:440:
+    struct iphdr *iph = (struct iphdr*) skb->network_header;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#84: FILE: src/linux_wrapper.c:440:
+    struct iphdr *iph = (struct iphdr*) skb->network_header;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#96: FILE: src/linux_wrapper.c:482:
+#if (LINUX_VERSION_CODE >= 0x020616)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: src/linux_wrapper.c:483:
+  return (net_device_entry(dev)->name);$

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#105: FILE: src/linux_wrapper.c:491:
+#if (LINUX_VERSION_CODE >= 0x020616)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: src/linux_wrapper.c:492:
+  return (strlen(net_device_entry(dev)->name));$

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#114: FILE: src/linux_wrapper.c:499:
+#if (LINUX_VERSION_CODE >= 0x020616)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: src/linux_wrapper.c:500:
+  return &(net_device_entry(dev)->mtu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: src/linux_wrapper.c:502:
+  return &(dev->mtu);$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around dev->mtu
#117: FILE: src/linux_wrapper.c:502:
+  return &(dev->mtu);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#122: FILE: src/linux_wrapper.c:507:
+#if (LINUX_VERSION_CODE >= 0x020616)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: src/linux_wrapper.c:508:
+  return (net_device_entry(dev)->mtu);$

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#130: FILE: src/linux_wrapper.c:515:
+#if (LINUX_VERSION_CODE >= 0x020616)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: src/linux_wrapper.c:516:
+  return (net_device_entry(dev)->ifindex);$

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#138: FILE: src/linux_wrapper.c:523:
+#if (LINUX_VERSION_CODE >= 0x020616)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: src/linux_wrapper.c:524:
+  return (net_device_entry(dev)->ip_ptr);$

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#150: FILE: src/linux_wrapper.c:583:
+#if (LINUX_VERSION_CODE >= 0x020616)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: src/linux_wrapper.c:584:
+    new_skb->transport_header = skb->transport_header+head_offset;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#151: FILE: src/linux_wrapper.c:584:
+    new_skb->transport_header = skb->transport_header+head_offset;
                                                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: src/linux_wrapper.c:585:
+    new_skb->network_header = skb->network_header+head_offset;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#152: FILE: src/linux_wrapper.c:585:
+    new_skb->network_header = skb->network_header+head_offset;
                                                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: src/linux_wrapper.c:586:
+    new_skb->mac_header = skb->mac_header+head_offset;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#153: FILE: src/linux_wrapper.c:586:
+    new_skb->mac_header = skb->mac_header+head_offset;
                                          ^

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#166: FILE: src/linux_wrapper.c:616:
+#if (LINUX_VERSION_CODE >= 0x020616)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: src/linux_wrapper.c:617:
+  skb_to->transport_header = skb_from->transport_header;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: src/linux_wrapper.c:618:
+  skb_to->network_header = skb_from->network_header;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: src/linux_wrapper.c:619:
+  skb_to->mac_header = skb_from->mac_header;$

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#182: FILE: src/linux_wrapper.c:641:
+#if (LINUX_VERSION_CODE >= 0x020616)

CHECK:SPACING: No space is necessary after a cast
#183: FILE: src/linux_wrapper.c:642:
+  return (struct iphdr*) skb->network_header;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: src/linux_wrapper.c:642:
+  return (struct iphdr*) skb->network_header;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#183: FILE: src/linux_wrapper.c:642:
+  return (struct iphdr*) skb->network_header;

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#198: FILE: src/linux_wrapper.c:667:
+#if (LINUX_VERSION_CODE >= 0x020616)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: src/linux_wrapper.c:668:
+    skb->network_header = skb->data;$

CHECK:SPACING: No space is necessary after a cast
#200: FILE: src/linux_wrapper.c:669:
+    iph = (struct iphdr*) skb->network_header;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: src/linux_wrapper.c:669:
+    iph = (struct iphdr*) skb->network_header;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#200: FILE: src/linux_wrapper.c:669:
+    iph = (struct iphdr*) skb->network_header;

CHECK:SPACING: No space is necessary after a cast
#202: FILE: src/linux_wrapper.c:671:
+    skb->nh.iph = (struct iphdr *) skb->data;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: src/linux_wrapper.c:671:
+    skb->nh.iph = (struct iphdr *) skb->data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: src/linux_wrapper.c:672:
+    iph = skb->network_header.iph;$

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#212: FILE: src/linux_wrapper.c:806:
+#if (LINUX_VERSION_CODE >= 0x020616)

CHECK:SPACING: No space is necessary after a cast
#213: FILE: src/linux_wrapper.c:807:
+  iph = (struct iphdr*) skb->network_header;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: src/linux_wrapper.c:807:
+  iph = (struct iphdr*) skb->network_header;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#213: FILE: src/linux_wrapper.c:807:
+  iph = (struct iphdr*) skb->network_header;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: src/linux_wrapper.c:826:
+  if ( iph->protocol == 17 )            /* if UDP, */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#225: FILE: src/linux_wrapper.c:826:
+  if ( iph->protocol == 17 )            /* if UDP, */
     {

ERROR:SPACING: space prohibited after that open parenthesis '('
#225: FILE: src/linux_wrapper.c:826:
+  if ( iph->protocol == 17 )            /* if UDP, */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#225: FILE: src/linux_wrapper.c:826:
+  if ( iph->protocol == 17 )            /* if UDP, */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: src/linux_wrapper.c:830:
+  if ( iph->protocol == 6 )             /* if TCP, */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#230: FILE: src/linux_wrapper.c:830:
+  if ( iph->protocol == 6 )             /* if TCP, */
     {

ERROR:SPACING: space prohibited after that open parenthesis '('
#230: FILE: src/linux_wrapper.c:830:
+  if ( iph->protocol == 6 )             /* if TCP, */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#230: FILE: src/linux_wrapper.c:830:
+  if ( iph->protocol == 6 )             /* if TCP, */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000388151.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 44 warnings, 9 checks, 168 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000388151.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
