WARNING:TYPO_SPELLING: 'Thur' may be misspelled - perhaps 'Their'?
#108: FILE: Documentation/scsi/ChangeLog.megaraid_sas:2:
+1 Release Date    : Thur.July. 24 11:41:51 PST 2008 -
                     ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPLIT_STRING: quoted string split across lines
#224: FILE: drivers/scsi/ibmvscsi/ibmvfc.c:2088:
+	ibmvfc_log(vhost, 3, "%s event received. scsi_id: %lx, wwpn: %lx,"
+		   " node_name: %lx\n", desc, crq->scsi_id, crq->wwpn, crq->node_name);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LINE_SPACING: Missing a blank line after declarations
#380: FILE: drivers/scsi/megaraid/megaraid_sas.c:359:
+	u32 mask = 0xFFFFFFFF;
+	writel(mask, &regs->outbound_intr_mask);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#421: FILE: drivers/scsi/megaraid/megaraid_sas.c:400:
+}
+/**

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#429: FILE: drivers/scsi/megaraid/megaraid_sas.c:408:
+megasas_fire_cmd_gen2(dma_addr_t frame_phys_addr, u32 frame_count,
+			struct megasas_register_set __iomem *regs)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#431: FILE: drivers/scsi/megaraid/megaraid_sas.c:410:
+	writel((frame_phys_addr | (frame_count<<1))|1,
 	                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#431: FILE: drivers/scsi/megaraid/megaraid_sas.c:410:
+	writel((frame_phys_addr | (frame_count<<1))|1,
 	                                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#432: FILE: drivers/scsi/megaraid/megaraid_sas.c:411:
+	writel((frame_phys_addr | (frame_count<<1))|1,
+			&(regs)->inbound_queue_port);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#436: FILE: drivers/scsi/megaraid/megaraid_sas.c:415:
+static struct megasas_instance_template megasas_instance_template_gen2 = {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'instance->pdev->device == PCI_DEVICE_ID_LSI_SAS1078GEN2'
#453: FILE: drivers/scsi/megaraid/megaraid_sas.c:2082:
+	if ((instance->pdev->device == PCI_DEVICE_ID_LSI_SAS1078GEN2) ||
+		(instance->pdev->device == PCI_DEVICE_ID_LSI_SAS0079GEN2)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'instance->pdev->device == PCI_DEVICE_ID_LSI_SAS0079GEN2'
#453: FILE: drivers/scsi/megaraid/megaraid_sas.c:2082:
+	if ((instance->pdev->device == PCI_DEVICE_ID_LSI_SAS1078GEN2) ||
+		(instance->pdev->device == PCI_DEVICE_ID_LSI_SAS0079GEN2)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#454: FILE: drivers/scsi/megaraid/megaraid_sas.c:2083:
+	if ((instance->pdev->device == PCI_DEVICE_ID_LSI_SAS1078GEN2) ||
+		(instance->pdev->device == PCI_DEVICE_ID_LSI_SAS0079GEN2)) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#486: FILE: drivers/scsi/megaraid/megaraid_sas.c:3408:
+static DRIVER_ATTR(dbg_lvl, S_IRUGO|S_IWUSR, megasas_sysfs_show_dbg_lvl,
                                    ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#486: FILE: drivers/scsi/megaraid/megaraid_sas.c:3408:
+static DRIVER_ATTR(dbg_lvl, S_IRUGO|S_IWUSR, megasas_sysfs_show_dbg_lvl,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 31)
#587: FILE: drivers/scsi/qla2xxx/qla_init.c:3270:
+			list_for_each_entry(vha, &ha->vp_list, vp_list)
+			       qla2x00_mark_all_devices_lost(vha, 0);

WARNING:SPLIT_STRING: quoted string split across lines
#606: FILE: drivers/scsi/qla2xxx/qla_isr.c:885:
 	DEBUG5(printk("%s(): Check condition Sense data, scsi(%ld:%d:%d:%d) "
+	    "cmd=%p pid=%ld\n", __func__, sp->fcport->ha->host_no,

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#730: FILE: include/scsi/scsi_device.h:430:
+	return sdev->scsi_level > SCSI_2 && sdev->inquiry[5] & (1<<0);
 	                                                         ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000237833.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 11 checks, 530 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000237833.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
