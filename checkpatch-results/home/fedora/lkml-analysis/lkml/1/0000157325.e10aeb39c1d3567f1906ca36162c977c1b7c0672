WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#49: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#54: FILE: fs/ceph/dir.c:1:
+#include <linux/namei.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CONST_STRUCT: struct dentry_operations should normally be const
#81: FILE: fs/ceph/dir.c:28:
+struct dentry_operations ceph_dentry_ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#83: FILE: fs/ceph/dir.c:30:
+static int ceph_dentry_revalidate(struct dentry *dentry, struct nameidata *nd);
                                                                            ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#89: FILE: fs/ceph/dir.c:36:
+static loff_t make_fpos(unsigned frag, unsigned off)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#89: FILE: fs/ceph/dir.c:36:
+static loff_t make_fpos(unsigned frag, unsigned off)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#93: FILE: fs/ceph/dir.c:40:
+}
+static unsigned fpos_frag(loff_t p)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#93: FILE: fs/ceph/dir.c:40:
+static unsigned fpos_frag(loff_t p)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#97: FILE: fs/ceph/dir.c:44:
+}
+static unsigned fpos_off(loff_t p)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#97: FILE: fs/ceph/dir.c:44:
+static unsigned fpos_off(loff_t p)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#102: FILE: fs/ceph/dir.c:49:
+static int ceph_readdir(struct file *filp, void *dirent, filldir_t filldir)
                                      ^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#108: FILE: fs/ceph/dir.c:55:
+	unsigned frag = fpos_frag(filp->f_pos);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#109: FILE: fs/ceph/dir.c:56:
+	unsigned off = fpos_off(filp->f_pos);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#110: FILE: fs/ceph/dir.c:57:
+	unsigned skew;

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#120: FILE: fs/ceph/dir.c:67:
+	dout(5, "readdir filp %p at frag %u off %u\n", filp, frag, off);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#120: FILE: fs/ceph/dir.c:67:
+	dout(5, "readdir filp %p at frag %u off %u\n", filp, frag, off);
 	                 ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#120: FILE: fs/ceph/dir.c:67:
+	dout(5, "readdir filp %p at frag %u off %u\n", filp, frag, off);
 	                                               ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fi->last_readdir"
#123: FILE: fs/ceph/dir.c:70:
+	if (fi->frag != frag || fi->last_readdir == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#135: FILE: fs/ceph/dir.c:82:
+		dout(10, "readdir querying mds for ino %llx.%llx frag %x\n",
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#151: FILE: fs/ceph/dir.c:98:
+		dout(10, "readdir got and parsed readdir result=%d"
 		^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#152: FILE: fs/ceph/dir.c:99:
+		dout(10, "readdir got and parsed readdir result=%d"
+		     " on frag %x\n", err, frag);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#160: FILE: fs/ceph/dir.c:107:
+			dout(10, "readdir off 0 -> '.'\n");
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#167: FILE: fs/ceph/dir.c:114:
+			dout(10, "readdir off 1 -> '..'\n");
 			^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "filp->f_dentry->d_parent"
#168: FILE: fs/ceph/dir.c:115:
+			if (filp->f_dentry->d_parent != NULL &&

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#182: FILE: fs/ceph/dir.c:129:
+	dout(10, "readdir frag %x num %d off %d skew %d\n", frag,
 	^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#184: FILE: fs/ceph/dir.c:131:
+	while (off+skew < rinfo->dir_nr) {
 	          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#185: FILE: fs/ceph/dir.c:132:
+		dout(10, "readdir off %d -> %d / %d name '%.*s'\n",
 		^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#186: FILE: fs/ceph/dir.c:133:
+		     off, off+skew,
 		             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#187: FILE: fs/ceph/dir.c:134:
+		     rinfo->dir_nr, rinfo->dir_dname_len[off+skew],
 		                                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#188: FILE: fs/ceph/dir.c:135:
+		     rinfo->dir_dname[off+skew]);
 		                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#189: FILE: fs/ceph/dir.c:136:
+		ftype = le32_to_cpu(rinfo->dir_in[off+skew].in->mode) >> 12;
 		                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#191: FILE: fs/ceph/dir.c:138:
+			    rinfo->dir_dname[off+skew],
 			                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#192: FILE: fs/ceph/dir.c:139:
+			    rinfo->dir_dname_len[off+skew],
 			                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#194: FILE: fs/ceph/dir.c:141:
+			    le64_to_cpu(rinfo->dir_in[off+skew].in->ino),
 			                                 ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#196: FILE: fs/ceph/dir.c:143:
+			dout(20, "filldir stopping us...\n");
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#208: FILE: fs/ceph/dir.c:155:
+		dout(10, "readdir next frag is %x\n", frag);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#219: FILE: fs/ceph/dir.c:166:
+		dout(10, " marking %p complete\n", inode);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#225: FILE: fs/ceph/dir.c:172:
+	dout(20, "readdir done.\n");
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#255: FILE: fs/ceph/dir.c:202:
+			dout(10, "dir_llseek dropping %p content\n", file);
 			^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#268: FILE: fs/ceph/dir.c:215:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#291: FILE: fs/ceph/dir.c:238:
+		dout(10, "ENOENT on snapdir %p '%.*s', linking to snapdir %p\n",
 		^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#291: FILE: fs/ceph/dir.c:238:
+		struct inode *inode = ceph_get_snapdir(parent);
+		dout(10, "ENOENT on snapdir %p '%.*s', linking to snapdir %p\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#301: FILE: fs/ceph/dir.c:248:
+			dout(20, "ENOENT and no trace, dentry %p inode %p\n",
 			^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dentry->d_inode"
#339: FILE: fs/ceph/dir.c:286:
+	if (dentry->d_inode == NULL) {

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#343: FILE: fs/ceph/dir.c:290:
+		dout(10, "%p flags are %d\n", dir, ci->i_ceph_flags);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#348: FILE: fs/ceph/dir.c:295:
+			dout(10, "do_lookup %p dir %p complete, -ENOENT\n",
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#358: FILE: fs/ceph/dir.c:305:
+	dout(10, "do_lookup %p mask %d\n", dentry, mask);
 	^^^^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#361: FILE: fs/ceph/dir.c:308:
+				       on_inode ? USE_CAP_MDS:USE_ANY_MDS);
 				                             ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#369: FILE: fs/ceph/dir.c:316:
+	dout(20, "do_lookup result=%p\n", dentry);
 	^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#377: FILE: fs/ceph/dir.c:324:
+				  struct nameidata *nd)
 				                    ^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#379: FILE: fs/ceph/dir.c:326:
+	dout(5, "lookup in dir %p dentry %p '%.*s'\n",
 	^^^^

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#383: FILE: fs/ceph/dir.c:330:
+		switch (dentry->d_inode->i_mode) {
+			case S_IFREG:
+			case S_IFLNK:
+			case S_IFDIR:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#388: FILE: fs/ceph/dir.c:335:
+				if (nd &&
 				    ^^

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#390: FILE: fs/ceph/dir.c:337:
+				    (nd->flags & LOOKUP_CONTINUE) == 0 && /* only open last component */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#392: FILE: fs/ceph/dir.c:339:
+					int mode = nd->intent.open.create_mode & ~current->fs->umask;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#393: FILE: fs/ceph/dir.c:340:
+					return ceph_lookup_open(dir, dentry, nd, mode, 1);
 					                                     ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#393: FILE: fs/ceph/dir.c:340:
+					int mode = nd->intent.open.create_mode & ~current->fs->umask;
+					return ceph_lookup_open(dir, dentry, nd, mode, 1);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#396: FILE: fs/ceph/dir.c:343:
+
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#403: FILE: fs/ceph/dir.c:350:
+static int ceph_mknod(struct inode *dir, struct dentry *dentry,
+			  int mode, dev_t rdev)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#413: FILE: fs/ceph/dir.c:360:
+	dout(5, "mknod in dir %p dentry %p mode 0%o rdev %d\n",
 	^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#433: FILE: fs/ceph/dir.c:380:
+		struct dentry *d;
+		d = ceph_do_lookup(dir->i_sb, dentry, CEPH_STAT_CAP_INODE_ALL,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#437: FILE: fs/ceph/dir.c:384:
+			/* ick.  this is untested, and inherently racey... i
+			   suppose we _did_ create the file, but it has since

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#438: FILE: fs/ceph/dir.c:385:
+			   been deleted?  hrm. */

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#451: FILE: fs/ceph/dir.c:398:
+			   struct nameidata *nd)
 			                     ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#451: FILE: fs/ceph/dir.c:398:
+static int ceph_create(struct inode *dir, struct dentry *dentry, int mode,
+			   struct nameidata *nd)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#453: FILE: fs/ceph/dir.c:400:
+	dout(5, "create in dir %p dentry %p name '%.*s'\n",
 	^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#459: FILE: fs/ceph/dir.c:406:
+	if (nd) {
 	    ^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#460: FILE: fs/ceph/dir.c:407:
+		BUG_ON((nd->flags & LOOKUP_OPEN) == 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#461: FILE: fs/ceph/dir.c:408:
+		dentry = ceph_lookup_open(dir, dentry, nd, mode, 0);
 		                                       ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#473: FILE: fs/ceph/dir.c:420:
+static int ceph_symlink(struct inode *dir, struct dentry *dentry,
+			    const char *dest)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#483: FILE: fs/ceph/dir.c:430:
+	dout(5, "symlink in dir %p dentry %p to '%s'\n", dir, dentry, dest);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#519: FILE: fs/ceph/dir.c:466:
+		dout(5, "mksnap dir %p snap '%s' dn %p\n", dir, snap, dentry);
 		^^^^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#522: FILE: fs/ceph/dir.c:469:
+		return -EROFS;
+	} else {

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#523: FILE: fs/ceph/dir.c:470:
+		dout(5, "mkdir dir %p dn %p mode 0%o\n", dir, dentry, mode);
 		^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#525: FILE: fs/ceph/dir.c:472:
+^Ireq = ceph_mdsc_create_request(mdsc, op, pathdentry, NULL, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#550: FILE: fs/ceph/dir.c:497:
+static int ceph_link(struct dentry *old_dentry, struct inode *dir,
+			 struct dentry *dentry)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#560: FILE: fs/ceph/dir.c:507:
+	dout(5, "link in dir %p old_dentry %p dentry %p\n", dir,
 	^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#579: FILE: fs/ceph/dir.c:526:
+		struct inode *inode = old_dentry->d_inode;
+		inc_nlink(inode);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#612: FILE: fs/ceph/dir.c:559:
+		dout(5, "rmsnap dir %p '%s' dn %p\n", dir, snap, dentry);
 		^^^^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#615: FILE: fs/ceph/dir.c:562:
+		return -EROFS;
+	} else {

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#616: FILE: fs/ceph/dir.c:563:
+		dout(5, "unlink/rmdir dir %p dn %p inode %p\n",
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#655: FILE: fs/ceph/dir.c:602:
+	dout(5, "rename dir %p dentry %p to dir %p dentry %p\n",
 	^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#686: FILE: fs/ceph/dir.c:633:
+
+

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#692: FILE: fs/ceph/dir.c:639:
+static int ceph_dentry_revalidate(struct dentry *dentry, struct nameidata *nd)
                                                                            ^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#698: FILE: fs/ceph/dir.c:645:
+		dout(10, "d_revalidate %p '%.*s' inode %p is SNAPPED\n", dentry,
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#703: FILE: fs/ceph/dir.c:650:
+	dout(10, "d_revalidate %p '%.*s' inode %p\n", dentry,
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#709: FILE: fs/ceph/dir.c:656:
+		dout(20, "dentry_revalidate %p %lu file RDCACHE dir %p %llu\n",
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#714: FILE: fs/ceph/dir.c:661:
+		dout(20, "dentry_revalidate %p lease valid\n", dentry);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#718: FILE: fs/ceph/dir.c:665:
+	dout(20, "dentry_revalidate %p no lease\n", dentry);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#719: FILE: fs/ceph/dir.c:666:
+	dout(10, " clearing %p complete (d_revalidate)\n", dir);
 	^^^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#720: FILE: fs/ceph/dir.c:667:
+	ceph_i_clear(dir, CEPH_I_COMPLETE|CEPH_I_READDIR);
 	                                 ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#736: FILE: fs/ceph/dir.c:683:
+		dout(10, " clearing %p complete (d_release)\n", parent_inode);
 		^^^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#737: FILE: fs/ceph/dir.c:684:
+		ceph_i_clear(parent_inode, CEPH_I_COMPLETE|CEPH_I_READDIR);
 		                                          ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#742: FILE: fs/ceph/dir.c:689:
+					  struct nameidata *nd)
 					                    ^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#751: FILE: fs/ceph/dir.c:698:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#795: FILE: fs/ceph/dir.c:742:
+	size = min_t(unsigned, size, cf->dir_info_len-*ppos);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxO)
#795: FILE: fs/ceph/dir.c:742:
+	size = min_t(unsigned, size, cf->dir_info_len-*ppos);
 	                                             ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#813: FILE: fs/ceph/dir.c:760:
+	dout(10, "sync on directory\n");
 	^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#837: FILE: fs/ceph/dir.c:784:
+			err = wait_for_completion_timeout(&req->r_safe_completion,
+							req->r_timeout);

WARNING:CONST_STRUCT: struct dentry_operations should normally be const
#880: FILE: fs/ceph/dir.c:827:
+struct dentry_operations ceph_dentry_ops = {

WARNING:CONST_STRUCT: struct dentry_operations should normally be const
#885: FILE: fs/ceph/dir.c:832:
+struct dentry_operations ceph_snapdir_dentry_ops = {

WARNING:CONST_STRUCT: struct dentry_operations should normally be const
#889: FILE: fs/ceph/dir.c:836:
+struct dentry_operations ceph_snap_dentry_ops = {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000157325.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 74 warnings, 26 checks, 837 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000157325.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
