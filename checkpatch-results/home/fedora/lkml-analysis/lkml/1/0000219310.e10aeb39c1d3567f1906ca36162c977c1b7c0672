WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#108: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:TYPO_SPELLING: 'recieved' may be misspelled - perhaps 'received'?
#319: FILE: Documentation/filesystems/fiemap.txt:207:
+The struct fieinfo should be passed in as recieved from ioctl_fiemap(). The
                                           ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#376: FILE: fs/ioctl.c:94:
+#define SET_NOT_ALIGNED_FLAGS	(FIEMAP_EXTENT_DATA_TAIL|FIEMAP_EXTENT_DATA_INLINE)
                              	                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'len > sb->s_maxbytes'
#457: FILE: fs/ioctl.c:175:
+	if ((len > sb->s_maxbytes) ||
+	    (sb->s_maxbytes - len) < start)

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#464: FILE: fs/ioctl.c:182:
+static int ioctl_fiemap(struct file *filp, unsigned long arg)
                                      ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#517: FILE: fs/ioctl.c:237:
+		return ioctl_fiemap(filp, arg);
 		                    ^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#527: FILE: include/linux/fiemap.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#542: FILE: include/linux/fiemap.h:16:
+			    * the extent from the beginning of the file */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#544: FILE: include/linux/fiemap.h:18:
+			    * of the extent from the beginning of the disk */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#553: FILE: include/linux/fiemap.h:27:
+				 * which to start mapping (in) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#555: FILE: include/linux/fiemap.h:29:
+				 * userspace wants (in) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#573: FILE: include/linux/fiemap.h:47:
+						    * Sets EXTENT_UNKNOWN. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#575: FILE: include/linux/fiemap.h:49:
+						    * while fs is unmounted */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#577: FILE: include/linux/fiemap.h:51:
+						    * Sets EXTENT_NO_BYPASS. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#579: FILE: include/linux/fiemap.h:53:
+						    * block aligned. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#581: FILE: include/linux/fiemap.h:55:
+						    * Sets EXTENT_NOT_ALIGNED.*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#583: FILE: include/linux/fiemap.h:57:
+						    * Sets EXTENT_NOT_ALIGNED.*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#585: FILE: include/linux/fiemap.h:59:
+						    * no data (i.e. zero). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#588: FILE: include/linux/fiemap.h:62:
+						    * merged for efficiency. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#622: FILE: include/linux/fs.h:1191:
+						 * array */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#624: FILE: include/linux/fs.h:1193:
+};
+int fiemap_fill_next_extent(struct fiemap_extent_info *info, u64 logical,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#636: FILE: include/linux/fs.h:1306:
+	int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 start,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fiemap_extent_info *' should also have an identifier name
#636: FILE: include/linux/fs.h:1306:
+	int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 start,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000219310.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 20 warnings, 3 checks, 507 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000219310.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
