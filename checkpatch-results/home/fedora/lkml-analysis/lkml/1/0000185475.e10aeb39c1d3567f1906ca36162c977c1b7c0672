WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
I have done some fixes and enhancements to the MMC SPI host controller driver.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#45: FILE: drivers/mmc/host/mmc_spi.c:25:
  * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:SPACING: No space is necessary after a cast
#61: FILE: drivers/mmc/host/mmc_spi.c:191:
+	unsigned long timeout_jiffies = (unsigned long) ((ktime_to_us(timeout) * HZ) / 1000000);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#63: FILE: drivers/mmc/host/mmc_spi.c:193:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: drivers/mmc/host/mmc_spi.c:193:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: drivers/mmc/host/mmc_spi.c:211:
+                   elapsed time and the blocking of the scheduler. */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#79: FILE: drivers/mmc/host/mmc_spi.c:211:
+		/* We use jiffies here because we want to have a relation between
+                   elapsed time and the blocking of the scheduler. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#79: FILE: drivers/mmc/host/mmc_spi.c:211:
+                   elapsed time and the blocking of the scheduler. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#91: FILE: drivers/mmc/host/mmc_spi.c:287:
+		/* Note we check for more than 8 bytes, because in practice,
+		   some SD cards are slow... */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#91: FILE: drivers/mmc/host/mmc_spi.c:287:
+		   some SD cards are slow... */

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: drivers/mmc/host/mmc_spi.c:620:
+           according to the mmc/sd standard. However, we found that in$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#103: FILE: drivers/mmc/host/mmc_spi.c:620:
+	/* The MMC framework does a good job of computing timeouts
+           according to the mmc/sd standard. However, we found that in

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: drivers/mmc/host/mmc_spi.c:621:
+           SPI mode, there are many cards which need a longer timeout$

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: drivers/mmc/host/mmc_spi.c:622:
+           of 1s after receiving a long stream of write data. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#105: FILE: drivers/mmc/host/mmc_spi.c:622:
+           of 1s after receiving a long stream of write data. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#107: FILE: drivers/mmc/host/mmc_spi.c:624:
+	struct timeval tv = ktime_to_timeval(timeout);
+	if (tv.tv_sec == 0)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#108: FILE: drivers/mmc/host/mmc_spi.c:625:
+^I^Itimeout = ktime_set(1,0);^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#108: FILE: drivers/mmc/host/mmc_spi.c:625:
+		timeout = ktime_set(1,0);	
 		                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: drivers/mmc/host/mmc_spi.c:702:
+ ^I^I^Ireturn 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#147: FILE: drivers/mmc/host/mmc_spi.c:702:
+ ^I^I^Ireturn 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: drivers/mmc/host/mmc_spi.c:702:
+ ^I^I^Ireturn 0;$

WARNING:TYPO_SPELLING: 'Omitt' may be misspelled - perhaps 'Omit'?
#156: FILE: drivers/mmc/host/mmc_spi.c:775:
+	/* Omitt the CRC check for CID and CSD reads. There are some SDHC
 	   ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#157: FILE: drivers/mmc/host/mmc_spi.c:776:
+	/* Omitt the CRC check for CID and CSD reads. There are some SDHC
+	   cards which don't supply a valid CRC after CID reads.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 't->len == MMC_SPI_BLOCKSIZE'
#160: FILE: drivers/mmc/host/mmc_spi.c:779:
+	if (host->mmc->use_spi_crc && (t->len == MMC_SPI_BLOCKSIZE)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000185475.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 13 warnings, 2 checks, 129 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000185475.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
