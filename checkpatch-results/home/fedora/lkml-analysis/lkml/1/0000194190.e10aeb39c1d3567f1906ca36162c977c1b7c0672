WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#69: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#74: FILE: arch/arm/plat-mxc/include/mach/ipu.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#201: FILE: arch/arm/plat-mxc/include/mach/ipu.h:128:
+	uint32_t		in_pixel_fmt;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#204: FILE: arch/arm/plat-mxc/include/mach/ipu.h:131:
+	uint32_t		out_pixel_fmt;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#248: FILE: arch/arm/plat-mxc/include/mach/ipu.h:175:
+extern unsigned long ipu_clk_get_rate(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#414: FILE: drivers/mfd/Kconfig:156:
+config MX3_IPU
+	bool "MX3x Image Processing Unit"
+	depends on ARCH_MX3
+	select DMA_ENGINE
+	default y
+	help
+	  If you plan to use the Image Processing unit in the i.MX3x, say
+	  Y here. If unsure, select Y.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#423: FILE: drivers/mfd/Kconfig:165:
+config IPU_DEBUG
+	depends on MX3_IPU
+	bool "IPU debugging"
+	default n
+	help
+	  Say y to enable debugging output
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#463: FILE: drivers/mfd/ipu/ipu_idmac.c:1:
+/*

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#487: FILE: drivers/mfd/ipu/ipu_idmac.c:25:
+#include <asm/io.h>

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#504: FILE: drivers/mfd/ipu/ipu_idmac.c:42:
+#define idmac_read_icreg(ipu, reg) __idmac_read_icreg(ipu, reg - IC_CONF)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#511: FILE: drivers/mfd/ipu/ipu_idmac.c:49:
+#define idmac_write_icreg(ipu, v, reg) __idmac_write_icreg(ipu, v, reg - IC_CONF)

WARNING:SPLIT_STRING: quoted string split across lines
#529: FILE: drivers/mfd/ipu/ipu_idmac.c:67:
+	dev_dbg(ipu->dev, "IDMAC_CONF 0x%x, IC_CONF 0x%x, IDMAC_CHA_EN 0x%x, "
+		"IDMAC_CHA_PRI 0x%x, IDMAC_CHA_BUSY 0x%x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#536: FILE: drivers/mfd/ipu/ipu_idmac.c:74:
+	dev_dbg(ipu->dev, "BUF0_RDY 0x%x, BUF1_RDY 0x%x, CUR_BUF 0x%x, "
+		"DB_MODE 0x%x, TASKS_STAT 0x%x\n",

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#571: FILE: drivers/mfd/ipu/ipu_idmac.c:109:
+	uint32_t ic_conf, mask;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#589: FILE: drivers/mfd/ipu/ipu_idmac.c:127:
+	uint32_t ic_conf, mask;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#607: FILE: drivers/mfd/ipu/ipu_idmac.c:145:
+	uint32_t stat = TASK_STAT_IDLE;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#608: FILE: drivers/mfd/ipu/ipu_idmac.c:146:
+	uint32_t task_stat_reg = idmac_read_ipureg(ipu, IPU_TASKS_STAT);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#624: FILE: drivers/mfd/ipu/ipu_idmac.c:162:
+static void _ipu_ch_param_set_size(uint32_t *params,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#625: FILE: drivers/mfd/ipu/ipu_idmac.c:163:
+				   uint32_t pixel_fmt, uint16_t width,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#626: FILE: drivers/mfd/ipu/ipu_idmac.c:164:
+				   uint16_t height, uint16_t stride)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#628: FILE: drivers/mfd/ipu/ipu_idmac.c:166:
+	uint32_t u_offset = 0;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#629: FILE: drivers/mfd/ipu/ipu_idmac.c:167:
+	uint32_t v_offset = 0;

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#659: FILE: drivers/mfd/ipu/ipu_idmac.c:197:
+		params[7] |= 1 | (4UL << (81 - 64)) | (7L << (89 - 64));	/* 24 BPP & RGB PFS */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#666: FILE: drivers/mfd/ipu/ipu_idmac.c:204:
+		    (uint32_t) (7UL << (125 - 96));	/* Blue bit width - 1 */

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#669: FILE: drivers/mfd/ipu/ipu_idmac.c:207:
+		params[7] |= 1 | (4UL << (81 - 64)) | (7L << (89 - 64));	/* 24 BPP & RGB PFS */

CHECK:SPACING: No space is necessary after a cast
#677: FILE: drivers/mfd/ipu/ipu_idmac.c:215:
+		    (uint32_t) (7UL << (125 - 96));	/* Blue bit width - 1 */

CHECK:SPACING: No space is necessary after a cast
#689: FILE: drivers/mfd/ipu/ipu_idmac.c:227:
+		    (uint32_t) (7UL << (125 - 96));	/* Blue bit width - 1 */

CHECK:SPACING: No space is necessary after a cast
#702: FILE: drivers/mfd/ipu/ipu_idmac.c:240:
+		    (uint32_t) (7UL << (125 - 96));	/* Blue bit width - 1 */

CHECK:SPACING: No space is necessary after a cast
#714: FILE: drivers/mfd/ipu/ipu_idmac.c:252:
+		    (uint32_t) (7UL << (125 - 96));	/* Green bit width - 1 */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#751: FILE: drivers/mfd/ipu/ipu_idmac.c:289:
+static void _ipu_ch_param_set_burst_size(uint32_t *params,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#758: FILE: drivers/mfd/ipu/ipu_idmac.c:296:
+static void _ipu_ch_param_set_buffer(uint32_t *params,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#765: FILE: drivers/mfd/ipu/ipu_idmac.c:303:
+static void _ipu_ch_param_set_rotation(uint32_t *params,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#771: FILE: drivers/mfd/ipu/ipu_idmac.c:309:
+static void _ipu_write_param_mem(uint32_t addr, uint32_t *data,

CHECK:CAMELCASE: Avoid CamelCase: <numWords>
#772: FILE: drivers/mfd/ipu/ipu_idmac.c:310:
+				 uint32_t numWords)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#788: FILE: drivers/mfd/ipu/ipu_idmac.c:326:
+static bool _calc_resize_coeffs(uint32_t in_size, uint32_t out_size,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#789: FILE: drivers/mfd/ipu/ipu_idmac.c:327:
+				uint32_t *resize_coeff,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#792: FILE: drivers/mfd/ipu/ipu_idmac.c:330:
+	uint32_t temp_size;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#793: FILE: drivers/mfd/ipu/ipu_idmac.c:331:
+	uint32_t temp_downsize;

WARNING:SPLIT_STRING: quoted string split across lines
#820: FILE: drivers/mfd/ipu/ipu_idmac.c:358:
+	dev_dbg(ipu_data.dev, "resizing from %u -> %u pixels, "
+		"downsize=%u, resize=%u.%lu (reg=%u)\n", in_size, out_size,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#844: FILE: drivers/mfd/ipu/ipu_idmac.c:382:
+	uint32_t reg, ic_conf;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#845: FILE: drivers/mfd/ipu/ipu_idmac.c:383:
+	uint32_t downsize_coeff, resize_coeff;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#909: FILE: drivers/mfd/ipu/ipu_idmac.c:447:
+	uint32_t ipu_conf;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#925: FILE: drivers/mfd/ipu/ipu_idmac.c:463:
+	uint32_t mask;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#959: FILE: drivers/mfd/ipu/ipu_idmac.c:497:
+	uint32_t reg;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1018: FILE: drivers/mfd/ipu/ipu_idmac.c:556:
+				   uint16_t width, uint16_t height,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1019: FILE: drivers/mfd/ipu/ipu_idmac.c:557:
+				   uint32_t stride,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1026: FILE: drivers/mfd/ipu/ipu_idmac.c:564:
+	uint32_t params[10] = {0};

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1028: FILE: drivers/mfd/ipu/ipu_idmac.c:566:
+	uint32_t reg;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1029: FILE: drivers/mfd/ipu/ipu_idmac.c:567:
+	uint32_t stride_bytes;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'channel <= 13'
#1040: FILE: drivers/mfd/ipu/ipu_idmac.c:578:
+	if ((channel <= 13) && (stride % 8)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1051: FILE: drivers/mfd/ipu/ipu_idmac.c:589:
+	case IDMAC_IC_7:	/* Hangs with burst 8, 16, other values
+				   invalid - Table 44-30 */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1051: FILE: drivers/mfd/ipu/ipu_idmac.c:589:
+				   invalid - Table 44-30 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1053: FILE: drivers/mfd/ipu/ipu_idmac.c:591:
+/*
+		_ipu_ch_param_set_burst_size(params, 8);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1129: FILE: drivers/mfd/ipu/ipu_idmac.c:667:
+	uint32_t reg;

WARNING:TYPO_SPELLING: 'initalize' may be misspelled - perhaps 'initialize'?
#1327: FILE: drivers/mfd/ipu/ipu_idmac.c:865:
+ * @param       channel Input parameter for the logical channel ID to initalize.
                                                                       ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1337: FILE: drivers/mfd/ipu/ipu_idmac.c:875:
+	uint32_t ipu_conf;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1340: FILE: drivers/mfd/ipu/ipu_idmac.c:878:
+	uint32_t reg;

WARNING:TYPO_SPELLING: 'uninitalize' may be misspelled - perhaps 'uninitialize'?
#1392: FILE: drivers/mfd/ipu/ipu_idmac.c:930:
+ * @param       channel Input parameter for the logical channel ID to uninitalize.
                                                                       ^^^^^^^^^^^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1398: FILE: drivers/mfd/ipu/ipu_idmac.c:936:
+	uint32_t reg;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1399: FILE: drivers/mfd/ipu/ipu_idmac.c:937:
+	uint32_t mask = 0;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1400: FILE: drivers/mfd/ipu/ipu_idmac.c:938:
+	uint32_t ipu_conf;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1430: FILE: drivers/mfd/ipu/ipu_idmac.c:968:
+		idmac_write_icreg(ipu, reg & ~(IC_CONF_RWS_EN | IC_CONF_PRPENC_EN),
+			     IC_CONF);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1474: FILE: drivers/mfd/ipu/ipu_idmac.c:1012:
+	uint32_t reg;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1476: FILE: drivers/mfd/ipu/ipu_idmac.c:1014:
+	uint32_t chan_mask = 1UL << channel;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1477: FILE: drivers/mfd/ipu/ipu_idmac.c:1015:
+	uint32_t timeout;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1478: FILE: drivers/mfd/ipu/ipu_idmac.c:1016:
+	uint32_t eof_intr;

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1486: FILE: drivers/mfd/ipu/ipu_idmac.c:1024:
+			msleep(10);

WARNING:SPLIT_STRING: quoted string split across lines
#1491: FILE: drivers/mfd/ipu/ipu_idmac.c:1029:
+					"Warning: timeout waiting for channel %u to "
+					"stop: buf0_rdy = 0x%08X, buf1_rdy = 0x%08X, "

WARNING:SPLIT_STRING: quoted string split across lines
#1492: FILE: drivers/mfd/ipu/ipu_idmac.c:1030:
+					"stop: buf0_rdy = 0x%08X, buf1_rdy = 0x%08X, "
+					"busy = 0x%08X, tstat = 0x%08X\n", channel,

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1512: FILE: drivers/mfd/ipu/ipu_idmac.c:1050:
+			msleep(5);

WARNING:SPLIT_STRING: quoted string split across lines
#1599: FILE: drivers/mfd/ipu/ipu_idmac.c:1137:
+				"IRQ on active buffer on channel %x, active "
+				"%d, ready %x, %x, current %x!\n", chan_id,

WARNING:SPLIT_STRING: quoted string split across lines
#1611: FILE: drivers/mfd/ipu/ipu_idmac.c:1149:
+			"IRQ with active buffer still ready on channel %x, "
+			"active %d, ready %x, %x!\n", chan_id,

WARNING:SPLIT_STRING: quoted string split across lines
#1620: FILE: drivers/mfd/ipu/ipu_idmac.c:1158:
+			"IRQ without queued buffers on channel %x, active %d, "
+			"ready %x, %x!\n", chan_id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1716: FILE: drivers/mfd/ipu/ipu_idmac.c:1254:
+static struct dma_async_tx_descriptor *idmac_prep_slave_sg(struct dma_chan *chan,
+		struct scatterlist *sgl, unsigned int sg_len,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1813: FILE: drivers/mfd/ipu/ipu_idmac.c:1351:
+	BUG_ON(chan->client_count > 1);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1868: FILE: drivers/mfd/ipu/ipu_idmac.c:1406:
+static enum dma_status idmac_is_tx_complete(struct dma_chan *chan,
+		dma_cookie_t cookie, dma_cookie_t *done, dma_cookie_t *used)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2086: FILE: drivers/mfd/ipu/ipu_intern.h:1:
+/*

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#2243: FILE: drivers/mfd/ipu/ipu_intern.h:158:
+	spinlock_t		lock;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2252: FILE: drivers/mfd/ipu/ipu_intern.h:167:
+extern int ipu_irq_attach_irq(struct ipu *ipu, struct platform_device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2253: FILE: drivers/mfd/ipu/ipu_intern.h:168:
+extern void ipu_irq_detach_irq(struct ipu *ipu, struct platform_device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2255: FILE: drivers/mfd/ipu/ipu_intern.h:170:
+extern bool ipu_irq_status(uint32_t irq);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2264: FILE: drivers/mfd/ipu/ipu_irq.c:1:
+/*

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#2280: FILE: drivers/mfd/ipu/ipu_irq.c:17:
+#include <asm/io.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2299: FILE: drivers/mfd/ipu/ipu_irq.c:36:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#2312: FILE: drivers/mfd/ipu/ipu_irq.c:49:
+	spinlock_t	lock;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2353: FILE: drivers/mfd/ipu/ipu_irq.c:90:
+	uint32_t reg;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2368: FILE: drivers/mfd/ipu/ipu_irq.c:105:
+	uint32_t reg;

WARNING:SPLIT_STRING: quoted string split across lines
#2467: FILE: drivers/mfd/ipu/ipu_irq.c:204:
+		dev_dbg(&dev->dev, "IPU-IRQ: Setting up %d function irqs bank "
+			"%d at %u\n", irq_bank_fn[i].nr_irqs, i, irq_base);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2472: FILE: drivers/mfd/ipu/ipu_irq.c:209:
+			int ret = set_irq_chip(irq, &ipu_irq_chip);
+			if (ret < 0)

WARNING:SPLIT_STRING: quoted string split across lines
#2492: FILE: drivers/mfd/ipu/ipu_irq.c:229:
+		dev_dbg(&dev->dev, "IPU-IRQ: Setting up %d error irqs bank "
+			"%d at %u\n", irq_bank_err[i].nr_irqs, i, irq_base);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2497: FILE: drivers/mfd/ipu/ipu_irq.c:234:
+			int ret = set_irq_chip(irq, &ipu_irq_chip);
+			if (ret < 0)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000194190.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 31 warnings, 60 checks, 2428 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000194190.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
