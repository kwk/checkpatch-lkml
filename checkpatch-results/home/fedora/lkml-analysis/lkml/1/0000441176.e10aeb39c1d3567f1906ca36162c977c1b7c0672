WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
> > The attached patch speeds it up even more - I'm finding a >9% reduction 

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#43: 
think I'll keep them seperate.
                     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#76: FILE: block/as-iosched.c:1060:
+		BUG_ON(BLK_RB_EMPTY_ROOT(&ad->sort_list[REQ_SYNC]));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#85: FILE: block/as-iosched.c:1084:
+		BUG_ON(BLK_RB_EMPTY_ROOT(&ad->sort_list[REQ_ASYNC]));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#158: FILE: block/cfq-iosched.c:1018:
+	BUG_ON(BLK_RB_EMPTY_ROOT(&cfqq->sort_list));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#176: FILE: block/cfq-iosched.c:1150:
+	BUG_ON(elv_rb_first(&cfqq->sort_list));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#215: FILE: block/deadline-iosched.c:34:
+^Istruct blk_rb_root sort_list[2];^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#237: FILE: block/deadline-iosched.c:272:
+		BUG_ON(BLK_RB_EMPTY_ROOT(&dd->sort_list[READ]));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#246: FILE: block/deadline-iosched.c:288:
+		BUG_ON(BLK_RB_EMPTY_ROOT(&dd->sort_list[WRITE]));

CHECK:BRACES: Unbalanced braces around else statement
#307: FILE: block/elevator.c:355:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#358: FILE: block/elevator.c:412:
+EXPORT_SYMBOL(elv_rb_first);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#384: FILE: include/linux/elevator.h:151:
+#define BLK_RB_ROOT	(struct blk_rb_root) { RB_ROOT, NULL, }

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#387: FILE: include/linux/elevator.h:154:
+extern struct request *elv_rb_add(struct blk_rb_root *, struct request *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct blk_rb_root *' should also have an identifier name
#387: FILE: include/linux/elevator.h:154:
+extern struct request *elv_rb_add(struct blk_rb_root *, struct request *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#387: FILE: include/linux/elevator.h:154:
+extern struct request *elv_rb_add(struct blk_rb_root *, struct request *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#388: FILE: include/linux/elevator.h:155:
+extern void elv_rb_del(struct blk_rb_root *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct blk_rb_root *' should also have an identifier name
#388: FILE: include/linux/elevator.h:155:
+extern void elv_rb_del(struct blk_rb_root *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#388: FILE: include/linux/elevator.h:155:
+extern void elv_rb_del(struct blk_rb_root *, struct request *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#389: FILE: include/linux/elevator.h:156:
+extern struct request *elv_rb_find(struct blk_rb_root *, sector_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct blk_rb_root *' should also have an identifier name
#389: FILE: include/linux/elevator.h:156:
+extern struct request *elv_rb_find(struct blk_rb_root *, sector_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'sector_t' should also have an identifier name
#389: FILE: include/linux/elevator.h:156:
+extern struct request *elv_rb_find(struct blk_rb_root *, sector_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#390: FILE: include/linux/elevator.h:157:
+extern struct request *elv_rb_first(struct blk_rb_root *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct blk_rb_root *' should also have an identifier name
#390: FILE: include/linux/elevator.h:157:
+extern struct request *elv_rb_first(struct blk_rb_root *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000441176.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 16 warnings, 5 checks, 303 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000441176.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
