WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
    organized and commented so that someone can have the other behavior very

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: drivers/char/vt.c:1951:
+  int first;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: drivers/char/vt.c:1952:
+  int last;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#108: FILE: drivers/char/vt.c:1955:
+static int bisearch(long ucs, const struct interval *table, int max) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: drivers/char/vt.c:1956:
+  int min = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: drivers/char/vt.c:1957:
+  int mid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: drivers/char/vt.c:1959:
+  if (ucs < table[0].first || ucs > table[max].last)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#112: FILE: drivers/char/vt.c:1959:
+  if (ucs < table[0].first || ucs > table[max].last)
+    return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: drivers/char/vt.c:1960:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: drivers/char/vt.c:1961:
+  while (max >= min) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#114: FILE: drivers/char/vt.c:1961:
+  while (max >= min) {
+    mid = (min + max) / 2;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: drivers/char/vt.c:1962:
+    mid = (min + max) / 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: drivers/char/vt.c:1963:
+    if (ucs > table[mid].last)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#116: FILE: drivers/char/vt.c:1963:
+    if (ucs > table[mid].last)
+      min = mid + 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: drivers/char/vt.c:1964:
+      min = mid + 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: drivers/char/vt.c:1965:
+    else if (ucs < table[mid].first)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#118: FILE: drivers/char/vt.c:1965:
+    else if (ucs < table[mid].first)
+      max = mid - 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: drivers/char/vt.c:1966:
+      max = mid - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: drivers/char/vt.c:1967:
+    else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#120: FILE: drivers/char/vt.c:1967:
+    else
+      return 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: drivers/char/vt.c:1968:
+      return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: drivers/char/vt.c:1969:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: drivers/char/vt.c:1971:
+  return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: drivers/char/vt.c:1976:
+  static const struct interval zero_width[] = {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: drivers/char/vt.c:1977:
+    { 0x0300, 0x0357 }, { 0x035D, 0x036F }, { 0x0483, 0x0486 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: drivers/char/vt.c:1978:
+    { 0x0488, 0x0489 }, { 0x0591, 0x05A1 }, { 0x05A3, 0x05B9 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: drivers/char/vt.c:1979:
+    { 0x05BB, 0x05BD }, { 0x05BF, 0x05BF }, { 0x05C1, 0x05C2 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: drivers/char/vt.c:1980:
+    { 0x05C4, 0x05C4 }, { 0x0600, 0x0603 }, { 0x0610, 0x0615 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: drivers/char/vt.c:1981:
+    { 0x064B, 0x0658 }, { 0x0670, 0x0670 }, { 0x06D6, 0x06E4 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: drivers/char/vt.c:1982:
+    { 0x06E7, 0x06E8 }, { 0x06EA, 0x06ED }, { 0x070F, 0x070F },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: drivers/char/vt.c:1983:
+    { 0x0711, 0x0711 }, { 0x0730, 0x074A }, { 0x07A6, 0x07B0 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: drivers/char/vt.c:1984:
+    { 0x0901, 0x0902 }, { 0x093C, 0x093C }, { 0x0941, 0x0948 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: drivers/char/vt.c:1985:
+    { 0x094D, 0x094D }, { 0x0951, 0x0954 }, { 0x0962, 0x0963 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: drivers/char/vt.c:1986:
+    { 0x0981, 0x0981 }, { 0x09BC, 0x09BC }, { 0x09C1, 0x09C4 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: drivers/char/vt.c:1987:
+    { 0x09CD, 0x09CD }, { 0x09E2, 0x09E3 }, { 0x0A01, 0x0A02 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: drivers/char/vt.c:1988:
+    { 0x0A3C, 0x0A3C }, { 0x0A41, 0x0A42 }, { 0x0A47, 0x0A48 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: drivers/char/vt.c:1989:
+    { 0x0A4B, 0x0A4D }, { 0x0A70, 0x0A71 }, { 0x0A81, 0x0A82 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: drivers/char/vt.c:1990:
+    { 0x0ABC, 0x0ABC }, { 0x0AC1, 0x0AC5 }, { 0x0AC7, 0x0AC8 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: drivers/char/vt.c:1991:
+    { 0x0ACD, 0x0ACD }, { 0x0AE2, 0x0AE3 }, { 0x0B01, 0x0B01 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: drivers/char/vt.c:1992:
+    { 0x0B3C, 0x0B3C }, { 0x0B3F, 0x0B3F }, { 0x0B41, 0x0B43 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: drivers/char/vt.c:1993:
+    { 0x0B4D, 0x0B4D }, { 0x0B56, 0x0B56 }, { 0x0B82, 0x0B82 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: drivers/char/vt.c:1994:
+    { 0x0BC0, 0x0BC0 }, { 0x0BCD, 0x0BCD }, { 0x0C3E, 0x0C40 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: drivers/char/vt.c:1995:
+    { 0x0C46, 0x0C48 }, { 0x0C4A, 0x0C4D }, { 0x0C55, 0x0C56 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: drivers/char/vt.c:1996:
+    { 0x0CBC, 0x0CBC }, { 0x0CBF, 0x0CBF }, { 0x0CC6, 0x0CC6 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: drivers/char/vt.c:1997:
+    { 0x0CCC, 0x0CCD }, { 0x0D41, 0x0D43 }, { 0x0D4D, 0x0D4D },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: drivers/char/vt.c:1998:
+    { 0x0DCA, 0x0DCA }, { 0x0DD2, 0x0DD4 }, { 0x0DD6, 0x0DD6 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: drivers/char/vt.c:1999:
+    { 0x0E31, 0x0E31 }, { 0x0E34, 0x0E3A }, { 0x0E47, 0x0E4E },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: drivers/char/vt.c:2000:
+    { 0x0EB1, 0x0EB1 }, { 0x0EB4, 0x0EB9 }, { 0x0EBB, 0x0EBC },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: drivers/char/vt.c:2001:
+    { 0x0EC8, 0x0ECD }, { 0x0F18, 0x0F19 }, { 0x0F35, 0x0F35 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: drivers/char/vt.c:2002:
+    { 0x0F37, 0x0F37 }, { 0x0F39, 0x0F39 }, { 0x0F71, 0x0F7E },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: drivers/char/vt.c:2003:
+    { 0x0F80, 0x0F84 }, { 0x0F86, 0x0F87 }, { 0x0F90, 0x0F97 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: drivers/char/vt.c:2004:
+    { 0x0F99, 0x0FBC }, { 0x0FC6, 0x0FC6 }, { 0x102D, 0x1030 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: drivers/char/vt.c:2005:
+    { 0x1032, 0x1032 }, { 0x1036, 0x1037 }, { 0x1039, 0x1039 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: drivers/char/vt.c:2006:
+    { 0x1058, 0x1059 }, { 0x1160, 0x11FF }, { 0x1712, 0x1714 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: drivers/char/vt.c:2007:
+    { 0x1732, 0x1734 }, { 0x1752, 0x1753 }, { 0x1772, 0x1773 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: drivers/char/vt.c:2008:
+    { 0x17B4, 0x17B5 }, { 0x17B7, 0x17BD }, { 0x17C6, 0x17C6 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: drivers/char/vt.c:2009:
+    { 0x17C9, 0x17D3 }, { 0x17DD, 0x17DD }, { 0x180B, 0x180D },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: drivers/char/vt.c:2010:
+    { 0x18A9, 0x18A9 }, { 0x1920, 0x1922 }, { 0x1927, 0x1928 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: drivers/char/vt.c:2011:
+    { 0x1932, 0x1932 }, { 0x1939, 0x193B }, { 0x200B, 0x200F },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: drivers/char/vt.c:2012:
+    { 0x202A, 0x202E }, { 0x2060, 0x2063 }, { 0x206A, 0x206F },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: drivers/char/vt.c:2013:
+    { 0x20D0, 0x20EA }, { 0x302A, 0x302F }, { 0x3099, 0x309A },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: drivers/char/vt.c:2014:
+    { 0xFB1E, 0xFB1E }, { 0xFE00, 0xFE0F }, { 0xFE20, 0xFE23 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: drivers/char/vt.c:2015:
+    { 0xFEFF, 0xFEFF }, { 0xFFF9, 0xFFFB }, { 0x1D167, 0x1D169 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: drivers/char/vt.c:2016:
+    { 0x1D173, 0x1D182 }, { 0x1D185, 0x1D18B }, { 0x1D1AA, 0x1D1AD },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: drivers/char/vt.c:2017:
+    { 0xE0001, 0xE0001 }, { 0xE0020, 0xE007F }, { 0xE0100, 0xE01EF }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: drivers/char/vt.c:2018:
+  };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: drivers/char/vt.c:2019:
+  if (ucs < zero_width[0].first)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#172: FILE: drivers/char/vt.c:2019:
+  if (ucs < zero_width[0].first)
+    return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: drivers/char/vt.c:2020:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: drivers/char/vt.c:2021:
+  return bisearch(ucs, zero_width,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: drivers/char/vt.c:2022:
+                  sizeof(zero_width) / sizeof(struct interval) - 1);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: drivers/char/vt.c:2022:
+                  sizeof(zero_width) / sizeof(struct interval) - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: drivers/char/vt.c:2027:
+  static const struct interval double_width[] = {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: drivers/char/vt.c:2028:
+    { 0x1100, 0x115F }, { 0x2329, 0x232A }, { 0x2E80, 0x303E },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: drivers/char/vt.c:2029:
+    { 0x3040, 0xA4CF }, { 0xAC00, 0xD7A3 }, { 0xF900, 0xFAFF },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: drivers/char/vt.c:2030:
+    { 0xFE30, 0xFE6F }, { 0xFF00, 0xFF60 }, { 0xFFE0, 0xFFE6 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: drivers/char/vt.c:2031:
+    { 0x20000, 0x2FFFD }, { 0x30000, 0x3FFFD }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: drivers/char/vt.c:2032:
+  };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: drivers/char/vt.c:2033:
+  if (ucs < double_width[0].first)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#186: FILE: drivers/char/vt.c:2033:
+  if (ucs < double_width[0].first)
+    return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: drivers/char/vt.c:2034:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: drivers/char/vt.c:2035:
+  return bisearch(ucs, double_width,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#189: FILE: drivers/char/vt.c:2036:
+                  sizeof(double_width) / sizeof(struct interval) - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: drivers/char/vt.c:2036:
+                  sizeof(double_width) / sizeof(struct interval) - 1);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#217: FILE: drivers/char/vt.c:2128:
 		} else if (vc->vc_utf && !vc->vc_disp_ctrl) {
[...]
+		    if ((c & 0xc0) == 0x80) {

WARNING:TABSTOP: Statements should start on a tabstop
#225: FILE: drivers/char/vt.c:2133:
+		    if ((c & 0xc0) == 0x80) {

WARNING:LONG_LINE: line length of 140 exceeds 100 columns
#227: FILE: drivers/char/vt.c:2135:
+			static const int utf8_length_changes[] = { 0x0000007f, 0x000007ff, 0x0000ffff, 0x001fffff, 0x03ffffff, 0x7fffffff };

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#228: FILE: drivers/char/vt.c:2136:
 			if (vc->vc_utf_count) {
+			    vc->vc_utf_char = (vc->vc_utf_char << 6) | (c & 0x3f);

WARNING:TABSTOP: Statements should start on a tabstop
#259: FILE: drivers/char/vt.c:2139:
+			    if (--vc->vc_utf_count) {

WARNING:TABSTOP: Statements should start on a tabstop
#263: FILE: drivers/char/vt.c:2142:
+			    }

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#267: FILE: drivers/char/vt.c:2146:
+			    if (c <= utf8_length_changes[vc->vc_npar - 1] || c > utf8_length_changes[vc->vc_npar]) {

WARNING:TABSTOP: Statements should start on a tabstop
#267: FILE: drivers/char/vt.c:2146:
+			    if (c <= utf8_length_changes[vc->vc_npar - 1] || c > utf8_length_changes[vc->vc_npar]) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#267: FILE: drivers/char/vt.c:2146:
+			    if (c <= utf8_length_changes[vc->vc_npar - 1] || c > utf8_length_changes[vc->vc_npar]) {
+				c = 0xfffd;
+			    }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TABSTOP: Statements should start on a tabstop
#269: FILE: drivers/char/vt.c:2148:
+			    }

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#270: FILE: drivers/char/vt.c:2149:
+			} else {
[...]
+			    vc->vc_utf_count = 0;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#280: FILE: drivers/char/vt.c:2156:
+			if (vc->vc_utf_count) {
[...]
+			    rescan = 1;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#285: FILE: drivers/char/vt.c:2161:
+			} else if (c > 0x7f) {
[...]
+			    vc->vc_npar = 0;

WARNING:TABSTOP: Statements should start on a tabstop
#288: FILE: drivers/char/vt.c:2164:
+			    if ((c & 0xe0) == 0xc0) {

WARNING:TABSTOP: Statements should start on a tabstop
#291: FILE: drivers/char/vt.c:2167:
+			    } else if ((c & 0xf0) == 0xe0) {

WARNING:TABSTOP: Statements should start on a tabstop
#294: FILE: drivers/char/vt.c:2170:
+			    } else if ((c & 0xf8) == 0xf0) {

WARNING:TABSTOP: Statements should start on a tabstop
#297: FILE: drivers/char/vt.c:2173:
+			    } else if ((c & 0xfc) == 0xf8) {

WARNING:TABSTOP: Statements should start on a tabstop
#300: FILE: drivers/char/vt.c:2176:
+			    } else if ((c & 0xfe) == 0xfc) {

WARNING:TABSTOP: Statements should start on a tabstop
#303: FILE: drivers/char/vt.c:2179:
+			    } else {

WARNING:TABSTOP: Statements should start on a tabstop
#306: FILE: drivers/char/vt.c:2182:
+			    }

WARNING:TABSTOP: Statements should start on a tabstop
#307: FILE: drivers/char/vt.c:2183:
+			    if (vc->vc_utf_count) {

WARNING:TABSTOP: Statements should start on a tabstop
#310: FILE: drivers/char/vt.c:2186:
+			    }

WARNING:TABSTOP: Statements should start on a tabstop
#317: FILE: drivers/char/vt.c:2193:
+		    if ((c >= 0xd800 && c <= 0xdfff) || c == 0xfffe || c == 0xffff)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#328: FILE: drivers/char/vt.c:2218:
+				if (is_double_width(c)) {
+					width = 2;
+				}

WARNING:LONG_LINE_COMMENT: line length of 110 exceeds 100 columns
#331: FILE: drivers/char/vt.c:2221:
+				/* Uncomment this if you'd prefer zero-width characters to be silently dropped

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#332: FILE: drivers/char/vt.c:2222:
+				/* Uncomment this if you'd prefer zero-width characters to be silently dropped
+				   instead of printing the replacement glyph */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#332: FILE: drivers/char/vt.c:2222:
+				   instead of printing the replacement glyph */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#334: FILE: drivers/char/vt.c:2224:
+				/*
+				else if (is_zero_width(c)) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 36)
#357: FILE: drivers/char/vt.c:2232:
+				if (tc == -1 || tc == -2) {
+				    continue; /* nothing to display */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#357: FILE: drivers/char/vt.c:2232:
+				if (tc == -1 || tc == -2) {
+				    continue; /* nothing to display */
+				}

WARNING:TABSTOP: Statements should start on a tabstop
#358: FILE: drivers/char/vt.c:2233:
+				    continue; /* nothing to display */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 36)
#361: FILE: drivers/char/vt.c:2236:
+				if (!(vc->vc_utf && !vc->vc_disp_ctrl) && !(c & ~charmask)) {
[...]
+				    tc = c;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#363: FILE: drivers/char/vt.c:2238:
+				    /* In legacy mode use the glyph we get by a 1:1 mapping.
+				       This would make absolutely no sense with Unicode in mind. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#363: FILE: drivers/char/vt.c:2238:
+				       This would make absolutely no sense with Unicode in mind. */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 36)
#365: FILE: drivers/char/vt.c:2240:
+				} else {
[...]
+				    tc = conv_uni_to_pc(vc, 0xfffd);

WARNING:LONG_LINE_COMMENT: line length of 110 exceeds 100 columns
#366: FILE: drivers/char/vt.c:2241:
+				    /* Display U+FFFD. If it's not found, display an inverse question mark. */

WARNING:TABSTOP: Statements should start on a tabstop
#368: FILE: drivers/char/vt.c:2243:
+				    if (tc < 0) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#371: FILE: drivers/char/vt.c:2246:
+					if (tc < 0) tc = '?';

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:TABSTOP: Statements should start on a tabstop
#372: FILE: drivers/char/vt.c:2247:
+				    }

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#402: FILE: drivers/char/vt.c:2255:
+				if (!vc->vc_can_do_color) {
[...]
+				} else if (vc->vc_hi_font_mask == 0x100) {
[...]
+				} else {
[...]

WARNING:LONG_LINE: line length of 137 exceeds 100 columns
#405: FILE: drivers/char/vt.c:2258:
+					vc_attr = ((vc->vc_attr) & 0x11) | (((vc->vc_attr) & 0xe0) >> 4) | (((vc->vc_attr) & 0x0e) << 4);

WARNING:LONG_LINE: line length of 137 exceeds 100 columns
#407: FILE: drivers/char/vt.c:2260:
+					vc_attr = ((vc->vc_attr) & 0x88) | (((vc->vc_attr) & 0x70) >> 4) | (((vc->vc_attr) & 0x07) << 4);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#417: FILE: drivers/char/vt.c:2266:
+					FLUSH
+				if (vc->vc_need_wrap) {

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#425: FILE: drivers/char/vt.c:2274:
+					     ((vc_attr << 8) & ~himask) + ((tc & 0x100) ? himask : 0) + (tc & 0xff) :

CHECK:SPACING: No space is necessary after a cast
#427: FILE: drivers/char/vt.c:2276:
+					   (u16 *) vc->vc_pos);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#441: FILE: drivers/char/vt.c:2289:
+				if (!--width) break;

WARNING:LONG_LINE_COMMENT: line length of 107 exceeds 100 columns
#443: FILE: drivers/char/vt.c:2291:
+				tc = conv_uni_to_pc(vc, ' '); /* A space is printed in the second column */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#444: FILE: drivers/char/vt.c:2292:
+				if (tc < 0) tc = ' ';

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000446247.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 124 warnings, 1 checks, 383 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000446247.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
