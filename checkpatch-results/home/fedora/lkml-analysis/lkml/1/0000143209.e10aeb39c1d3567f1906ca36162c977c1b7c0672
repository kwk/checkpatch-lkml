WARNING:TYPO_SPELLING: 'wont' may be misspelled - perhaps 'won't'?
#35: 
> functionality to pass bigger IOs, it likely wont be much better in the
                                              ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: braces {} should be used on all arms of this statement
#66: FILE: block/blk-core.c:1572:
+	if (ctx) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#70: FILE: block/blk-core.c:1576:
+	} else

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#165: FILE: fs/buffer.c:2887:
+static int __submit_bh(int rw, struct buffer_head * bh,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#166: FILE: fs/buffer.c:2888:
+static int __submit_bh(int rw, struct buffer_head * bh,
+			struct blk_plug_ctx *ctx)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#221: FILE: include/linux/buffer_head.h:186:
+int submit_bh_plug(int, struct buffer_head *, struct blk_plug_ctx *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct buffer_head *' should also have an identifier name
#221: FILE: include/linux/buffer_head.h:186:
+int submit_bh_plug(int, struct buffer_head *, struct blk_plug_ctx *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct blk_plug_ctx *' should also have an identifier name
#221: FILE: include/linux/buffer_head.h:186:
+int submit_bh_plug(int, struct buffer_head *, struct blk_plug_ctx *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#235: FILE: include/linux/fs.h:2122:
+extern void submit_bio_plug(int, struct bio *, struct blk_plug_ctx *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#235: FILE: include/linux/fs.h:2122:
+extern void submit_bio_plug(int, struct bio *, struct blk_plug_ctx *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#235: FILE: include/linux/fs.h:2122:
+extern void submit_bio_plug(int, struct bio *, struct blk_plug_ctx *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct blk_plug_ctx *' should also have an identifier name
#235: FILE: include/linux/fs.h:2122:
+extern void submit_bio_plug(int, struct bio *, struct blk_plug_ctx *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct blk_plug_ctx *' should also have an identifier name
#277: FILE: include/linux/iocontext.h:117:
+void blk_submit_plug_context(struct blk_plug_ctx *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct blk_plug_ctx *' should also have an identifier name
#278: FILE: include/linux/iocontext.h:118:
+void blk_flush_plug_context(struct blk_plug_ctx *);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#283: FILE: include/linux/iocontext.h:123:
+}
+static inline struct blk_plug_ctx *blk_get_plug_context(void)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000143209.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 9 warnings, 5 checks, 219 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000143209.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
