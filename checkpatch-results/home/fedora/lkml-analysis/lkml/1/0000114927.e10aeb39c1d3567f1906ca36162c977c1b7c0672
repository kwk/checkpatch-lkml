CHECK:LINE_SPACING: Please don't use multiple blank lines
#88: FILE: include/asm-generic/syscall.h:25:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#95: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#100: FILE: include/trace/events/syscalls.h:1:
+#if !defined(_TRACE_SYSCALLS_H) || defined(TRACE_HEADER_MULTI_READ)

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'id' - possible side-effects?
#159: FILE: include/trace/events/syscalls.h:60:
+#define clock_id_toname(id) \
+	(id == CLOCK_REALTIME ? "CLOCK_REALTIME" : \
+		id == CLOCK_MONOTONIC ? "CLOCK_MONOTONIC" : \
+		id == CLOCK_PROCESS_CPUTIME_ID ? "CLOCK_PROCESS_CPUTIME_ID" : \
+		id == CLOCK_MONOTONIC_RAW ? "CLOCK_MONOTONIC_RAW" : \
+		id == CLOCK_SGI_CYCLE ? "CLOCK_SGI_CYCLE" : \
+		"UNKNOWN CLOCK")

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'id' may be better as '(id)' to avoid precedence issues
#159: FILE: include/trace/events/syscalls.h:60:
+#define clock_id_toname(id) \
+	(id == CLOCK_REALTIME ? "CLOCK_REALTIME" : \
+		id == CLOCK_MONOTONIC ? "CLOCK_MONOTONIC" : \
+		id == CLOCK_PROCESS_CPUTIME_ID ? "CLOCK_PROCESS_CPUTIME_ID" : \
+		id == CLOCK_MONOTONIC_RAW ? "CLOCK_MONOTONIC_RAW" : \
+		id == CLOCK_SGI_CYCLE ? "CLOCK_SGI_CYCLE" : \
+		"UNKNOWN CLOCK")

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#172: FILE: include/trace/events/syscalls.h:73:
+#define expand_enter_sys_args_1(t1) (t1) sys_args[0]

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#173: FILE: include/trace/events/syscalls.h:74:
+#define expand_enter_sys_args_2(t1, t2) expand_enter_sys_args_1(t1), (t2) sys_args[1]

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#174: FILE: include/trace/events/syscalls.h:75:
+#define expand_enter_sys_args_3(t1, t2, t3) expand_enter_sys_args_2(t1, t2), (t3) sys_args[2]

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#175: FILE: include/trace/events/syscalls.h:76:
+#define expand_enter_sys_args_4(t1, t2, t3, t4) expand_enter_sys_args_3(t1, t2, t3), (t4) sys_args[3]

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#175: FILE: include/trace/events/syscalls.h:76:
+#define expand_enter_sys_args_4(t1, t2, t3, t4) expand_enter_sys_args_3(t1, t2, t3), (t4) sys_args[3]

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#176: FILE: include/trace/events/syscalls.h:77:
+#define expand_enter_sys_args_5(t1, t2, t3, t4, t5) expand_enter_sys_args_4(t1, t2, t3, t4), (t5) sys_args[4]

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#176: FILE: include/trace/events/syscalls.h:77:
+#define expand_enter_sys_args_5(t1, t2, t3, t4, t5) expand_enter_sys_args_4(t1, t2, t3, t4), (t5) sys_args[4]

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#177: FILE: include/trace/events/syscalls.h:78:
+#define expand_enter_sys_args_6(t1, t2, t3, t4, t5, t6) expand_enter_sys_args_5(t1, t2, t3, t4, t5), (t6) sys_args[5]

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#177: FILE: include/trace/events/syscalls.h:78:
+#define expand_enter_sys_args_6(t1, t2, t3, t4, t5, t6) expand_enter_sys_args_5(t1, t2, t3, t4, t5), (t6) sys_args[5]

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#179: FILE: include/trace/events/syscalls.h:80:
+#define create_syscall_enter(n, sysname, ...)		\
+        case __NR_##sysname:				\
+		syscall_get_arguments(current, regs, 0, n, sys_args); \
+		trace_sysenter_##sysname(expand_enter_sys_args_##n(__VA_ARGS__)); \
+		break;

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#179: FILE: include/trace/events/syscalls.h:80:
+#define create_syscall_enter(n, sysname, ...)		\
+        case __NR_##sysname:				\
+		syscall_get_arguments(current, regs, 0, n, sys_args); \
+		trace_sysenter_##sysname(expand_enter_sys_args_##n(__VA_ARGS__)); \
+		break;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: include/trace/events/syscalls.h:81:
+        case __NR_##sysname:^I^I^I^I\$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: include/trace/events/syscalls.h:81:
+        case __NR_##sysname:^I^I^I^I\$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#186: FILE: include/trace/events/syscalls.h:87:
+#define expand_enter_proto_1(t1, p1) t1 p1

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#187: FILE: include/trace/events/syscalls.h:88:
+#define expand_enter_proto_2(t2, p2, ...) t2 p2, expand_enter_proto_1(__VA_ARGS__)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#188: FILE: include/trace/events/syscalls.h:89:
+#define expand_enter_proto_3(t3, p3, ...) t3 p3, expand_enter_proto_2(__VA_ARGS__)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#189: FILE: include/trace/events/syscalls.h:90:
+#define expand_enter_proto_4(t4, p4, ...) t4 p4, expand_enter_proto_3(__VA_ARGS__)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#190: FILE: include/trace/events/syscalls.h:91:
+#define expand_enter_proto_5(t5, p5, ...) t5 p5, expand_enter_proto_4(__VA_ARGS__)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#191: FILE: include/trace/events/syscalls.h:92:
+#define expand_enter_proto_6(t6, p6, ...) t6 p6, expand_enter_proto_5(__VA_ARGS__)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#195: FILE: include/trace/events/syscalls.h:96:
+#define expand_enter_args_2(t2, p2, ...) p2, expand_enter_args_1(__VA_ARGS__)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#196: FILE: include/trace/events/syscalls.h:97:
+#define expand_enter_args_3(t3, p3, ...) p3, expand_enter_args_2(__VA_ARGS__)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#197: FILE: include/trace/events/syscalls.h:98:
+#define expand_enter_args_4(t4, p4, ...) p4, expand_enter_args_3(__VA_ARGS__)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#198: FILE: include/trace/events/syscalls.h:99:
+#define expand_enter_args_5(t5, p5, ...) p5, expand_enter_args_4(__VA_ARGS__)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#199: FILE: include/trace/events/syscalls.h:100:
+#define expand_enter_args_6(t6, p6, ...) p6, expand_enter_args_5(__VA_ARGS__)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#202: FILE: include/trace/events/syscalls.h:103:
+#define expand_enter_entry_1(t1, p1) __field(t1, p1) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#203: FILE: include/trace/events/syscalls.h:104:
+#define expand_enter_entry_2(t2, p2, ...) __field(t2, p2) expand_enter_entry_1(__VA_ARGS__)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#204: FILE: include/trace/events/syscalls.h:105:
+#define expand_enter_entry_3(t3, p3, ...) __field(t3, p3) expand_enter_entry_2(__VA_ARGS__)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#205: FILE: include/trace/events/syscalls.h:106:
+#define expand_enter_entry_4(t4, p4, ...) __field(t4, p4) expand_enter_entry_3(__VA_ARGS__)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#206: FILE: include/trace/events/syscalls.h:107:
+#define expand_enter_entry_5(t5, p5, ...) __field(t5, p5) expand_enter_entry_4(__VA_ARGS__)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#207: FILE: include/trace/events/syscalls.h:108:
+#define expand_enter_entry_6(t6, p6, ...) __field(t6, p6) expand_enter_entry_5(__VA_ARGS__)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#210: FILE: include/trace/events/syscalls.h:111:
+#define expand_enter_assign_1(t1, p1) __entry->p1 = p1; $

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#210: FILE: include/trace/events/syscalls.h:111:
+#define expand_enter_assign_1(t1, p1) __entry->p1 = p1; 

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p1' - possible side-effects?
#210: FILE: include/trace/events/syscalls.h:111:
+#define expand_enter_assign_1(t1, p1) __entry->p1 = p1; 

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'p1' may be better as '(p1)' to avoid precedence issues
#210: FILE: include/trace/events/syscalls.h:111:
+#define expand_enter_assign_1(t1, p1) __entry->p1 = p1; 

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#210: FILE: include/trace/events/syscalls.h:111:
+#define expand_enter_assign_1(t1, p1) __entry->p1 = p1; 

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#211: FILE: include/trace/events/syscalls.h:112:
+#define expand_enter_assign_2(t2, p2, ...) __entry->p2 = p2; expand_enter_assign_1(__VA_ARGS__)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p2' - possible side-effects?
#211: FILE: include/trace/events/syscalls.h:112:
+#define expand_enter_assign_2(t2, p2, ...) __entry->p2 = p2; expand_enter_assign_1(__VA_ARGS__)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'p2' may be better as '(p2)' to avoid precedence issues
#211: FILE: include/trace/events/syscalls.h:112:
+#define expand_enter_assign_2(t2, p2, ...) __entry->p2 = p2; expand_enter_assign_1(__VA_ARGS__)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#212: FILE: include/trace/events/syscalls.h:113:
+#define expand_enter_assign_3(t3, p3, ...) __entry->p3 = p3; expand_enter_assign_2(__VA_ARGS__)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p3' - possible side-effects?
#212: FILE: include/trace/events/syscalls.h:113:
+#define expand_enter_assign_3(t3, p3, ...) __entry->p3 = p3; expand_enter_assign_2(__VA_ARGS__)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'p3' may be better as '(p3)' to avoid precedence issues
#212: FILE: include/trace/events/syscalls.h:113:
+#define expand_enter_assign_3(t3, p3, ...) __entry->p3 = p3; expand_enter_assign_2(__VA_ARGS__)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#213: FILE: include/trace/events/syscalls.h:114:
+#define expand_enter_assign_4(t4, p4, ...) __entry->p4 = p4; expand_enter_assign_3(__VA_ARGS__)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p4' - possible side-effects?
#213: FILE: include/trace/events/syscalls.h:114:
+#define expand_enter_assign_4(t4, p4, ...) __entry->p4 = p4; expand_enter_assign_3(__VA_ARGS__)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'p4' may be better as '(p4)' to avoid precedence issues
#213: FILE: include/trace/events/syscalls.h:114:
+#define expand_enter_assign_4(t4, p4, ...) __entry->p4 = p4; expand_enter_assign_3(__VA_ARGS__)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#214: FILE: include/trace/events/syscalls.h:115:
+#define expand_enter_assign_5(t5, p5, ...) __entry->p5 = p5; expand_enter_assign_4(__VA_ARGS__)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p5' - possible side-effects?
#214: FILE: include/trace/events/syscalls.h:115:
+#define expand_enter_assign_5(t5, p5, ...) __entry->p5 = p5; expand_enter_assign_4(__VA_ARGS__)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'p5' may be better as '(p5)' to avoid precedence issues
#214: FILE: include/trace/events/syscalls.h:115:
+#define expand_enter_assign_5(t5, p5, ...) __entry->p5 = p5; expand_enter_assign_4(__VA_ARGS__)

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#215: FILE: include/trace/events/syscalls.h:116:
+#define expand_enter_assign_6(t6, p6, ...) __entry->p6 = p6; expand_enter_assign_5(__VA_ARGS__)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p6' - possible side-effects?
#215: FILE: include/trace/events/syscalls.h:116:
+#define expand_enter_assign_6(t6, p6, ...) __entry->p6 = p6; expand_enter_assign_5(__VA_ARGS__)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'p6' may be better as '(p6)' to avoid precedence issues
#215: FILE: include/trace/events/syscalls.h:116:
+#define expand_enter_assign_6(t6, p6, ...) __entry->p6 = p6; expand_enter_assign_5(__VA_ARGS__)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#217: FILE: include/trace/events/syscalls.h:118:
+#define expand_enter_printk_1(t1, p1) (u64)__entry->p1

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'p1' may be better as '(p1)' to avoid precedence issues
#217: FILE: include/trace/events/syscalls.h:118:
+#define expand_enter_printk_1(t1, p1) (u64)__entry->p1

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#218: FILE: include/trace/events/syscalls.h:119:
+#define expand_enter_printk_2(t2, p2, ...) (u64)__entry->p2, expand_enter_printk_1(__VA_ARGS__)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'p2' may be better as '(p2)' to avoid precedence issues
#218: FILE: include/trace/events/syscalls.h:119:
+#define expand_enter_printk_2(t2, p2, ...) (u64)__entry->p2, expand_enter_printk_1(__VA_ARGS__)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#219: FILE: include/trace/events/syscalls.h:120:
+#define expand_enter_printk_3(t3, p3, ...) (u64)__entry->p3, expand_enter_printk_2(__VA_ARGS__)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'p3' may be better as '(p3)' to avoid precedence issues
#219: FILE: include/trace/events/syscalls.h:120:
+#define expand_enter_printk_3(t3, p3, ...) (u64)__entry->p3, expand_enter_printk_2(__VA_ARGS__)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#220: FILE: include/trace/events/syscalls.h:121:
+#define expand_enter_printk_4(t4, p4, ...) (u64)__entry->p4, expand_enter_printk_3(__VA_ARGS__)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'p4' may be better as '(p4)' to avoid precedence issues
#220: FILE: include/trace/events/syscalls.h:121:
+#define expand_enter_printk_4(t4, p4, ...) (u64)__entry->p4, expand_enter_printk_3(__VA_ARGS__)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#221: FILE: include/trace/events/syscalls.h:122:
+#define expand_enter_printk_5(t5, p5, ...) (u64)__entry->p5, expand_enter_printk_4(__VA_ARGS__)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'p5' may be better as '(p5)' to avoid precedence issues
#221: FILE: include/trace/events/syscalls.h:122:
+#define expand_enter_printk_5(t5, p5, ...) (u64)__entry->p5, expand_enter_printk_4(__VA_ARGS__)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#222: FILE: include/trace/events/syscalls.h:123:
+#define expand_enter_printk_6(t6, p6, ...) (u64)__entry->p6, expand_enter_printk_5(__VA_ARGS__)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'p6' may be better as '(p6)' to avoid precedence issues
#222: FILE: include/trace/events/syscalls.h:123:
+#define expand_enter_printk_6(t6, p6, ...) (u64)__entry->p6, expand_enter_printk_5(__VA_ARGS__)

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#225: FILE: include/trace/events/syscalls.h:126:
+#define TP_printk_1(...) TP_printk("%016Lx", expand_enter_printk_1(__VA_ARGS__))

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#226: FILE: include/trace/events/syscalls.h:127:
+#define TP_printk_2(...) TP_printk("%016Lx %016Lx", expand_enter_printk_2(__VA_ARGS__))

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#227: FILE: include/trace/events/syscalls.h:128:
+#define TP_printk_3(...) TP_printk("%016Lx %016Lx %016Lx", expand_enter_printk_3(__VA_ARGS__))

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#228: FILE: include/trace/events/syscalls.h:129:
+#define TP_printk_4(...) TP_printk("%016Lx %016Lx %016Lx %016Lx", expand_enter_printk_4(__VA_ARGS__))

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#228: FILE: include/trace/events/syscalls.h:129:
+#define TP_printk_4(...) TP_printk("%016Lx %016Lx %016Lx %016Lx", expand_enter_printk_4(__VA_ARGS__))

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#229: FILE: include/trace/events/syscalls.h:130:
+#define TP_printk_5(...) TP_printk("%016Lx %016Lx %016Lx %016Lx %016Lx", \

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#231: FILE: include/trace/events/syscalls.h:132:
+#define TP_printk_6(...) TP_printk("%016Lx %016Lx %016Lx %016Lx %016Lx %016Lx", \

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#234: FILE: include/trace/events/syscalls.h:135:
+#define trace_event_syscall_enter(n, name, ...)			\
+	TRACE_EVENT(sysenter_##name,				\
+		TP_PROTO(expand_enter_proto_##n(__VA_ARGS__)),	\
+		TP_ARGS(expand_enter_args_##n(__VA_ARGS__)),	\
+		TP_STRUCT__entry(expand_enter_entry_##n(__VA_ARGS__)), \
+		TP_fast_assign(expand_enter_assign_##n(__VA_ARGS__)), \
+		TP_printk_##n(__VA_ARGS__) \
+	);							

ERROR:TRAILING_WHITESPACE: trailing whitespace
#241: FILE: include/trace/events/syscalls.h:142:
+^I);^I^I^I^I^I^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#245: FILE: include/trace/events/syscalls.h:146:
+#define create_syscall_exit(sysname)               ^I^I\$

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#245: FILE: include/trace/events/syscalls.h:146:
+#define create_syscall_exit(sysname)               		\
+        case __NR_##sysname:					\
+                trace_sysexit_##sysname(ret);                   \
+                break;                                          \
+

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#245: FILE: include/trace/events/syscalls.h:146:
+#define create_syscall_exit(sysname)               		\
+        case __NR_##sysname:					\
+                trace_sysexit_##sysname(ret);                   \
+                break;                                          \
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: include/trace/events/syscalls.h:147:
+        case __NR_##sysname:^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: include/trace/events/syscalls.h:147:
+        case __NR_##sysname:^I^I^I^I^I\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: include/trace/events/syscalls.h:148:
+                trace_sysexit_##sysname(ret);                   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: include/trace/events/syscalls.h:148:
+                trace_sysexit_##sysname(ret);                   \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: include/trace/events/syscalls.h:149:
+                break;                                          \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: include/trace/events/syscalls.h:149:
+                break;                                          \$

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#250: FILE: include/trace/events/syscalls.h:151:
+#define trace_event_syscall_exit(name)				\
+	TRACE_EVENT(sysexit_##name,				\
+		TP_PROTO(long ret),				\
+		TP_ARGS(ret),					\
+		TP_STRUCT__entry(				\
+			__field(long, retval)			\
+		),						\
+		TP_fast_assign(					\
+			__entry->retval = ret;			\
+		),						\
+		TP_printk("return value: %ld", __entry->retval) \
+	);							

ERROR:TRAILING_WHITESPACE: trailing whitespace
#261: FILE: include/trace/events/syscalls.h:162:
+^I);^I^I^I^I^I^I^I$

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEtime>
#266: FILE: include/trace/events/syscalls.h:167:
+#define ENTERCASEtime create_syscall_enter(1, time, time_t __user *);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#266: FILE: include/trace/events/syscalls.h:167:
+#define ENTERCASEtime create_syscall_enter(1, time, time_t __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEtime>
#267: FILE: include/trace/events/syscalls.h:168:
+#define EXITCASEtime create_syscall_exit(time);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#267: FILE: include/trace/events/syscalls.h:168:
+#define EXITCASEtime create_syscall_exit(time);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEstime>
#276: FILE: include/trace/events/syscalls.h:177:
+#define ENTERCASEstime create_syscall_enter(1, stime, time_t __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#276: FILE: include/trace/events/syscalls.h:177:
+#define ENTERCASEstime create_syscall_enter(1, stime, time_t __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEstime>
#277: FILE: include/trace/events/syscalls.h:178:
+#define EXITCASEstime create_syscall_exit(stime);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#277: FILE: include/trace/events/syscalls.h:178:
+#define EXITCASEstime create_syscall_exit(stime);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#284: FILE: include/trace/events/syscalls.h:185:
+trace_event_syscall_enter(2, gettimeofday, struct timeval __user *, tv, struct timezone __user *, tz);

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#286: FILE: include/trace/events/syscalls.h:187:
+#define ENTERCASEgettimeofday create_syscall_enter(2, gettimeofday, struct timeval __user *, struct timezone __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgettimeofday>
#286: FILE: include/trace/events/syscalls.h:187:
+#define ENTERCASEgettimeofday create_syscall_enter(2, gettimeofday, struct timeval __user *, struct timezone __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#286: FILE: include/trace/events/syscalls.h:187:
+#define ENTERCASEgettimeofday create_syscall_enter(2, gettimeofday, struct timeval __user *, struct timezone __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgettimeofday>
#287: FILE: include/trace/events/syscalls.h:188:
+#define EXITCASEgettimeofday create_syscall_exit(gettimeofday);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#287: FILE: include/trace/events/syscalls.h:188:
+#define EXITCASEgettimeofday create_syscall_exit(gettimeofday);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#296: FILE: include/trace/events/syscalls.h:197:
+TRACE_EVENT(sysenter_settimeofday,
+	TP_PROTO(struct timeval __user *tv, struct timezone __user *tz),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#298: FILE: include/trace/events/syscalls.h:199:
+	TP_STRUCT__entry(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#302: FILE: include/trace/events/syscalls.h:203:
+	TP_fast_assign(

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#306: FILE: include/trace/events/syscalls.h:207:
+	TP_printk("%016Lx %016Lx", (u64)__entry->tv, (u64)__entry->tz)

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#308: FILE: include/trace/events/syscalls.h:209:
+#define ENTERCASEsettimeofday create_syscall_enter(2, settimeofday, struct timeval __user *, struct timezone __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsettimeofday>
#308: FILE: include/trace/events/syscalls.h:209:
+#define ENTERCASEsettimeofday create_syscall_enter(2, settimeofday, struct timeval __user *, struct timezone __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#308: FILE: include/trace/events/syscalls.h:209:
+#define ENTERCASEsettimeofday create_syscall_enter(2, settimeofday, struct timeval __user *, struct timezone __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsettimeofday>
#309: FILE: include/trace/events/syscalls.h:210:
+#define EXITCASEsettimeofday create_syscall_exit(settimeofday);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#309: FILE: include/trace/events/syscalls.h:210:
+#define EXITCASEsettimeofday create_syscall_exit(settimeofday);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEadjtimex>
#318: FILE: include/trace/events/syscalls.h:219:
+#define ENTERCASEadjtimex create_syscall_enter(1, adjtimex, struct timex __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#318: FILE: include/trace/events/syscalls.h:219:
+#define ENTERCASEadjtimex create_syscall_enter(1, adjtimex, struct timex __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEadjtimex>
#319: FILE: include/trace/events/syscalls.h:220:
+#define EXITCASEadjtimex create_syscall_exit(adjtimex);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#319: FILE: include/trace/events/syscalls.h:220:
+#define EXITCASEadjtimex create_syscall_exit(adjtimex);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEtimes>
#328: FILE: include/trace/events/syscalls.h:229:
+#define ENTERCASEtimes create_syscall_enter(1, times, struct tms __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#328: FILE: include/trace/events/syscalls.h:229:
+#define ENTERCASEtimes create_syscall_enter(1, times, struct tms __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEtimes>
#329: FILE: include/trace/events/syscalls.h:230:
+#define EXITCASEtimes create_syscall_exit(times);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#329: FILE: include/trace/events/syscalls.h:230:
+#define EXITCASEtimes create_syscall_exit(times);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgettid>
#338: FILE: include/trace/events/syscalls.h:239:
+#define ENTERCASEgettid create_syscall_enter(0, gettid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#338: FILE: include/trace/events/syscalls.h:239:
+#define ENTERCASEgettid create_syscall_enter(0, gettid);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgettid>
#339: FILE: include/trace/events/syscalls.h:240:
+#define EXITCASEgettid create_syscall_exit(gettid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#339: FILE: include/trace/events/syscalls.h:240:
+#define EXITCASEgettid create_syscall_exit(gettid);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#346: FILE: include/trace/events/syscalls.h:247:
+trace_event_syscall_enter(2, nanosleep, struct timespec __user *, rqtp, struct timespec __user *, rmtp);

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#348: FILE: include/trace/events/syscalls.h:249:
+#define ENTERCASEnanosleep create_syscall_enter(2, nanosleep, struct timespec __user *, struct timespec __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEnanosleep>
#348: FILE: include/trace/events/syscalls.h:249:
+#define ENTERCASEnanosleep create_syscall_enter(2, nanosleep, struct timespec __user *, struct timespec __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#348: FILE: include/trace/events/syscalls.h:249:
+#define ENTERCASEnanosleep create_syscall_enter(2, nanosleep, struct timespec __user *, struct timespec __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEnanosleep>
#349: FILE: include/trace/events/syscalls.h:250:
+#define EXITCASEnanosleep create_syscall_exit(nanosleep);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#349: FILE: include/trace/events/syscalls.h:250:
+#define EXITCASEnanosleep create_syscall_exit(nanosleep);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEalarm>
#358: FILE: include/trace/events/syscalls.h:259:
+#define ENTERCASEalarm create_syscall_enter(1, alarm, unsigned int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#358: FILE: include/trace/events/syscalls.h:259:
+#define ENTERCASEalarm create_syscall_enter(1, alarm, unsigned int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEalarm>
#359: FILE: include/trace/events/syscalls.h:260:
+#define EXITCASEalarm create_syscall_exit(alarm);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#359: FILE: include/trace/events/syscalls.h:260:
+#define EXITCASEalarm create_syscall_exit(alarm);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgetpid>
#368: FILE: include/trace/events/syscalls.h:269:
+#define EXITCASEgetpid create_syscall_exit(getpid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#368: FILE: include/trace/events/syscalls.h:269:
+#define EXITCASEgetpid create_syscall_exit(getpid);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgetpid>
#369: FILE: include/trace/events/syscalls.h:270:
+#define ENTERCASEgetpid create_syscall_enter(0, getpid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#369: FILE: include/trace/events/syscalls.h:270:
+#define ENTERCASEgetpid create_syscall_enter(0, getpid);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgetppid>
#378: FILE: include/trace/events/syscalls.h:279:
+#define ENTERCASEgetppid create_syscall_enter(0, getppid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#378: FILE: include/trace/events/syscalls.h:279:
+#define ENTERCASEgetppid create_syscall_enter(0, getppid);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgetppid>
#379: FILE: include/trace/events/syscalls.h:280:
+#define EXITCASEgetppid create_syscall_exit(getppid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#379: FILE: include/trace/events/syscalls.h:280:
+#define EXITCASEgetppid create_syscall_exit(getppid);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgetuid>
#388: FILE: include/trace/events/syscalls.h:289:
+#define ENTERCASEgetuid create_syscall_enter(0, getuid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#388: FILE: include/trace/events/syscalls.h:289:
+#define ENTERCASEgetuid create_syscall_enter(0, getuid);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgetuid>
#389: FILE: include/trace/events/syscalls.h:290:
+#define EXITCASEgetuid create_syscall_exit(getuid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#389: FILE: include/trace/events/syscalls.h:290:
+#define EXITCASEgetuid create_syscall_exit(getuid);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgeteuid>
#398: FILE: include/trace/events/syscalls.h:299:
+#define ENTERCASEgeteuid create_syscall_enter(0, geteuid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#398: FILE: include/trace/events/syscalls.h:299:
+#define ENTERCASEgeteuid create_syscall_enter(0, geteuid);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgeteuid>
#399: FILE: include/trace/events/syscalls.h:300:
+#define EXITCASEgeteuid create_syscall_exit(geteuid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#399: FILE: include/trace/events/syscalls.h:300:
+#define EXITCASEgeteuid create_syscall_exit(geteuid);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgetgid>
#408: FILE: include/trace/events/syscalls.h:309:
+#define ENTERCASEgetgid create_syscall_enter(0, getgid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#408: FILE: include/trace/events/syscalls.h:309:
+#define ENTERCASEgetgid create_syscall_enter(0, getgid);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgetgid>
#409: FILE: include/trace/events/syscalls.h:310:
+#define EXITCASEgetgid create_syscall_exit(getgid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#409: FILE: include/trace/events/syscalls.h:310:
+#define EXITCASEgetgid create_syscall_exit(getgid);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgetegid>
#418: FILE: include/trace/events/syscalls.h:319:
+#define ENTERCASEgetegid create_syscall_enter(0, getegid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#418: FILE: include/trace/events/syscalls.h:319:
+#define ENTERCASEgetegid create_syscall_enter(0, getegid);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgetegid>
#419: FILE: include/trace/events/syscalls.h:320:
+#define EXITCASEgetegid create_syscall_exit(getegid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#419: FILE: include/trace/events/syscalls.h:320:
+#define EXITCASEgetegid create_syscall_exit(getegid);

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#426: FILE: include/trace/events/syscalls.h:327:
+trace_event_syscall_enter(3, getresuid, uid_t __user *, ruid, uid_t __user *, euid, uid_t __user *, suid);

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#428: FILE: include/trace/events/syscalls.h:329:
+#define ENTERCASEgetresuid create_syscall_enter(3, getresuid, uid_t __user *, uid_t __user *, uid_t __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgetresuid>
#428: FILE: include/trace/events/syscalls.h:329:
+#define ENTERCASEgetresuid create_syscall_enter(3, getresuid, uid_t __user *, uid_t __user *, uid_t __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#428: FILE: include/trace/events/syscalls.h:329:
+#define ENTERCASEgetresuid create_syscall_enter(3, getresuid, uid_t __user *, uid_t __user *, uid_t __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgetresuid>
#429: FILE: include/trace/events/syscalls.h:330:
+#define EXITCASEgetresuid create_syscall_exit(getresuid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#429: FILE: include/trace/events/syscalls.h:330:
+#define EXITCASEgetresuid create_syscall_exit(getresuid);

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#436: FILE: include/trace/events/syscalls.h:337:
+trace_event_syscall_enter(3, getresgid, gid_t __user *, rgid, gid_t __user *, egid, gid_t __user *, sgid);

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#438: FILE: include/trace/events/syscalls.h:339:
+#define ENTERCASEgetresgid create_syscall_enter(3, getresgid, gid_t __user *, gid_t __user *, gid_t __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgetresgid>
#438: FILE: include/trace/events/syscalls.h:339:
+#define ENTERCASEgetresgid create_syscall_enter(3, getresgid, gid_t __user *, gid_t __user *, gid_t __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#438: FILE: include/trace/events/syscalls.h:339:
+#define ENTERCASEgetresgid create_syscall_enter(3, getresgid, gid_t __user *, gid_t __user *, gid_t __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgetresgid>
#439: FILE: include/trace/events/syscalls.h:340:
+#define EXITCASEgetresgid create_syscall_exit(getresgid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#439: FILE: include/trace/events/syscalls.h:340:
+#define EXITCASEgetresgid create_syscall_exit(getresgid);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgetpgid>
#448: FILE: include/trace/events/syscalls.h:349:
+#define ENTERCASEgetpgid create_syscall_enter(1, getpgid, pid_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#448: FILE: include/trace/events/syscalls.h:349:
+#define ENTERCASEgetpgid create_syscall_enter(1, getpgid, pid_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgetpgid>
#449: FILE: include/trace/events/syscalls.h:350:
+#define EXITCASEgetpgid create_syscall_exit(getpgid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#449: FILE: include/trace/events/syscalls.h:350:
+#define EXITCASEgetpgid create_syscall_exit(getpgid);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgetpgrp>
#458: FILE: include/trace/events/syscalls.h:359:
+#define ENTERCASEgetpgrp create_syscall_enter(0, getpgrp);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#458: FILE: include/trace/events/syscalls.h:359:
+#define ENTERCASEgetpgrp create_syscall_enter(0, getpgrp);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgetpgrp>
#459: FILE: include/trace/events/syscalls.h:360:
+#define EXITCASEgetpgrp create_syscall_exit(getpgrp);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#459: FILE: include/trace/events/syscalls.h:360:
+#define EXITCASEgetpgrp create_syscall_exit(getpgrp);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgetsid>
#468: FILE: include/trace/events/syscalls.h:369:
+#define ENTERCASEgetsid create_syscall_enter(1, getsid, pid_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#468: FILE: include/trace/events/syscalls.h:369:
+#define ENTERCASEgetsid create_syscall_enter(1, getsid, pid_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgetsid>
#469: FILE: include/trace/events/syscalls.h:370:
+#define EXITCASEgetsid create_syscall_exit(getsid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#469: FILE: include/trace/events/syscalls.h:370:
+#define EXITCASEgetsid create_syscall_exit(getsid);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgetgroups>
#478: FILE: include/trace/events/syscalls.h:379:
+#define ENTERCASEgetgroups create_syscall_enter(2, getgroups, int, gid_t __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#478: FILE: include/trace/events/syscalls.h:379:
+#define ENTERCASEgetgroups create_syscall_enter(2, getgroups, int, gid_t __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgetgroups>
#479: FILE: include/trace/events/syscalls.h:380:
+#define EXITCASEgetgroups create_syscall_exit(getgroups);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#479: FILE: include/trace/events/syscalls.h:380:
+#define EXITCASEgetgroups create_syscall_exit(getgroups);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsetregid>
#488: FILE: include/trace/events/syscalls.h:389:
+#define ENTERCASEsetregid create_syscall_enter(2, setregid, gid_t, gid_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#488: FILE: include/trace/events/syscalls.h:389:
+#define ENTERCASEsetregid create_syscall_enter(2, setregid, gid_t, gid_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsetregid>
#489: FILE: include/trace/events/syscalls.h:390:
+#define EXITCASEsetregid create_syscall_exit(setregid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#489: FILE: include/trace/events/syscalls.h:390:
+#define EXITCASEsetregid create_syscall_exit(setregid);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsetgid>
#498: FILE: include/trace/events/syscalls.h:399:
+#define ENTERCASEsetgid create_syscall_enter(1, setgid, gid_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#498: FILE: include/trace/events/syscalls.h:399:
+#define ENTERCASEsetgid create_syscall_enter(1, setgid, gid_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsetgid>
#499: FILE: include/trace/events/syscalls.h:400:
+#define EXITCASEsetgid create_syscall_exit(setgid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#499: FILE: include/trace/events/syscalls.h:400:
+#define EXITCASEsetgid create_syscall_exit(setgid);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsetreuid>
#508: FILE: include/trace/events/syscalls.h:409:
+#define ENTERCASEsetreuid create_syscall_enter(2, setreuid, uid_t, uid_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#508: FILE: include/trace/events/syscalls.h:409:
+#define ENTERCASEsetreuid create_syscall_enter(2, setreuid, uid_t, uid_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsetreuid>
#509: FILE: include/trace/events/syscalls.h:410:
+#define EXITCASEsetreuid create_syscall_exit(setreuid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#509: FILE: include/trace/events/syscalls.h:410:
+#define EXITCASEsetreuid create_syscall_exit(setreuid);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsetuid>
#518: FILE: include/trace/events/syscalls.h:419:
+#define ENTERCASEsetuid create_syscall_enter(1, setuid, uid_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#518: FILE: include/trace/events/syscalls.h:419:
+#define ENTERCASEsetuid create_syscall_enter(1, setuid, uid_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsetuid>
#519: FILE: include/trace/events/syscalls.h:420:
+#define EXITCASEsetuid create_syscall_exit(setuid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#519: FILE: include/trace/events/syscalls.h:420:
+#define EXITCASEsetuid create_syscall_exit(setuid);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsetresuid>
#528: FILE: include/trace/events/syscalls.h:429:
+#define ENTERCASEsetresuid create_syscall_enter(3, setresuid, uid_t, uid_t, uid_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#528: FILE: include/trace/events/syscalls.h:429:
+#define ENTERCASEsetresuid create_syscall_enter(3, setresuid, uid_t, uid_t, uid_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsetresuid>
#529: FILE: include/trace/events/syscalls.h:430:
+#define EXITCASEsetresuid create_syscall_exit(setresuid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#529: FILE: include/trace/events/syscalls.h:430:
+#define EXITCASEsetresuid create_syscall_exit(setresuid);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsetresgid>
#538: FILE: include/trace/events/syscalls.h:439:
+#define ENTERCASEsetresgid create_syscall_enter(3, setresgid, gid_t, gid_t, gid_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#538: FILE: include/trace/events/syscalls.h:439:
+#define ENTERCASEsetresgid create_syscall_enter(3, setresgid, gid_t, gid_t, gid_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsetresgid>
#539: FILE: include/trace/events/syscalls.h:440:
+#define EXITCASEsetresgid create_syscall_exit(setresgid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#539: FILE: include/trace/events/syscalls.h:440:
+#define EXITCASEsetresgid create_syscall_exit(setresgid);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsetfsuid>
#548: FILE: include/trace/events/syscalls.h:449:
+#define ENTERCASEsetfsuid create_syscall_enter(1, setfsuid, uid_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#548: FILE: include/trace/events/syscalls.h:449:
+#define ENTERCASEsetfsuid create_syscall_enter(1, setfsuid, uid_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsetfsuid>
#549: FILE: include/trace/events/syscalls.h:450:
+#define EXITCASEsetfsuid create_syscall_exit(setfsuid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#549: FILE: include/trace/events/syscalls.h:450:
+#define EXITCASEsetfsuid create_syscall_exit(setfsuid);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsetfsgid>
#558: FILE: include/trace/events/syscalls.h:459:
+#define ENTERCASEsetfsgid create_syscall_enter(1, setfsgid, gid_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#558: FILE: include/trace/events/syscalls.h:459:
+#define ENTERCASEsetfsgid create_syscall_enter(1, setfsgid, gid_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsetfsgid>
#559: FILE: include/trace/events/syscalls.h:460:
+#define EXITCASEsetfsgid create_syscall_exit(setfsgid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#559: FILE: include/trace/events/syscalls.h:460:
+#define EXITCASEsetfsgid create_syscall_exit(setfsgid);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsetpgid>
#568: FILE: include/trace/events/syscalls.h:469:
+#define ENTERCASEsetpgid create_syscall_enter(setpgid, pid_t, pid_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#568: FILE: include/trace/events/syscalls.h:469:
+#define ENTERCASEsetpgid create_syscall_enter(setpgid, pid_t, pid_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsetpgid>
#569: FILE: include/trace/events/syscalls.h:470:
+#define EXITCASEsetpgid create_syscall_exit(setpgid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#569: FILE: include/trace/events/syscalls.h:470:
+#define EXITCASEsetpgid create_syscall_exit(setpgid);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsetsid>
#578: FILE: include/trace/events/syscalls.h:479:
+#define ENTERCASEsetsid create_syscall_enter(0, setsid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#578: FILE: include/trace/events/syscalls.h:479:
+#define ENTERCASEsetsid create_syscall_enter(0, setsid);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsetsid>
#579: FILE: include/trace/events/syscalls.h:480:
+#define EXITCASEsetsid create_syscall_exit(setsid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#579: FILE: include/trace/events/syscalls.h:480:
+#define EXITCASEsetsid create_syscall_exit(setsid);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsetgroups>
#588: FILE: include/trace/events/syscalls.h:489:
+#define ENTERCASEsetgroups create_syscall_enter(2, setgroups, int, gid_t __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#588: FILE: include/trace/events/syscalls.h:489:
+#define ENTERCASEsetgroups create_syscall_enter(2, setgroups, int, gid_t __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsetgroups>
#589: FILE: include/trace/events/syscalls.h:490:
+#define EXITCASEsetgroups create_syscall_exit(setgroups);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#589: FILE: include/trace/events/syscalls.h:490:
+#define EXITCASEsetgroups create_syscall_exit(setgroups);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEacct>
#598: FILE: include/trace/events/syscalls.h:499:
+#define ENTERCASEacct create_syscall_enter(1, acct, const char __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#598: FILE: include/trace/events/syscalls.h:499:
+#define ENTERCASEacct create_syscall_enter(1, acct, const char __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEacct>
#599: FILE: include/trace/events/syscalls.h:500:
+#define EXITCASEacct create_syscall_exit(acct);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#599: FILE: include/trace/events/syscalls.h:500:
+#define EXITCASEacct create_syscall_exit(acct);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEcapget>
#608: FILE: include/trace/events/syscalls.h:509:
+#define ENTERCASEcapget create_syscall_enter(2, capget, cap_user_header_t, cap_user_data_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#608: FILE: include/trace/events/syscalls.h:509:
+#define ENTERCASEcapget create_syscall_enter(2, capget, cap_user_header_t, cap_user_data_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEcapget>
#609: FILE: include/trace/events/syscalls.h:510:
+#define EXITCASEcapget create_syscall_exit(capget);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#609: FILE: include/trace/events/syscalls.h:510:
+#define EXITCASEcapget create_syscall_exit(capget);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEcapset>
#618: FILE: include/trace/events/syscalls.h:519:
+#define ENTERCASEcapset create_syscall_enter(2, capset, cap_user_header_t, const cap_user_data_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#618: FILE: include/trace/events/syscalls.h:519:
+#define ENTERCASEcapset create_syscall_enter(2, capset, cap_user_header_t, const cap_user_data_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEcapset>
#619: FILE: include/trace/events/syscalls.h:520:
+#define EXITCASEcapset create_syscall_exit(capset);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#619: FILE: include/trace/events/syscalls.h:520:
+#define EXITCASEcapset create_syscall_exit(capset);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEpersonality>
#628: FILE: include/trace/events/syscalls.h:529:
+#define ENTERCASEpersonality create_syscall_enter(1, personality, u_long);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#628: FILE: include/trace/events/syscalls.h:529:
+#define ENTERCASEpersonality create_syscall_enter(1, personality, u_long);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEpersonality>
#629: FILE: include/trace/events/syscalls.h:530:
+#define EXITCASEpersonality create_syscall_exit(personality);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#629: FILE: include/trace/events/syscalls.h:530:
+#define EXITCASEpersonality create_syscall_exit(personality);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsigpending>
#638: FILE: include/trace/events/syscalls.h:539:
+#define ENTERCASEsigpending create_syscall_exit(1, sigpending, old_sigset_t __user);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#638: FILE: include/trace/events/syscalls.h:539:
+#define ENTERCASEsigpending create_syscall_exit(1, sigpending, old_sigset_t __user);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsigpending>
#639: FILE: include/trace/events/syscalls.h:540:
+#define EXITCASEsigpending create_syscall_exit(sigpending);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#639: FILE: include/trace/events/syscalls.h:540:
+#define EXITCASEsigpending create_syscall_exit(sigpending);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#646: FILE: include/trace/events/syscalls.h:547:
+trace_event_syscall_enter(3, sigprocmask, int, how, old_sigset_t __user *, set, old_sigset_t __user *, oset);

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#648: FILE: include/trace/events/syscalls.h:549:
+#define ENTERCASEsigprocmask create_syscall_enter(3, sigprocmask, int, old_sigset_t __user *, old_sigset_t __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsigprocmask>
#648: FILE: include/trace/events/syscalls.h:549:
+#define ENTERCASEsigprocmask create_syscall_enter(3, sigprocmask, int, old_sigset_t __user *, old_sigset_t __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#648: FILE: include/trace/events/syscalls.h:549:
+#define ENTERCASEsigprocmask create_syscall_enter(3, sigprocmask, int, old_sigset_t __user *, old_sigset_t __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsigprocmask>
#649: FILE: include/trace/events/syscalls.h:550:
+#define EXITCASEsigprocmask create_syscall_exit(sigprocmask);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#649: FILE: include/trace/events/syscalls.h:550:
+#define EXITCASEsigprocmask create_syscall_exit(sigprocmask);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgetitimer>
#658: FILE: include/trace/events/syscalls.h:559:
+#define ENTERCASEgetitimer create_syscall_enter(2, getitimer, int, struct itimerval __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#658: FILE: include/trace/events/syscalls.h:559:
+#define ENTERCASEgetitimer create_syscall_enter(2, getitimer, int, struct itimerval __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgetitimer>
#659: FILE: include/trace/events/syscalls.h:560:
+#define EXITCASEgetitimer create_syscall_exit(getitimer);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#659: FILE: include/trace/events/syscalls.h:560:
+#define EXITCASEgetitimer create_syscall_exit(getitimer);

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#666: FILE: include/trace/events/syscalls.h:567:
+trace_event_syscall_enter(3, setitimer, int, which, struct itimerval __user *, value, struct itimerval __user *, ovalue);

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#668: FILE: include/trace/events/syscalls.h:569:
+#define ENTERCASEsetitimer create_syscall_enter(3, setitimer, int, struct itimerval __user *, struct itimerval __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsetitimer>
#668: FILE: include/trace/events/syscalls.h:569:
+#define ENTERCASEsetitimer create_syscall_enter(3, setitimer, int, struct itimerval __user *, struct itimerval __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#668: FILE: include/trace/events/syscalls.h:569:
+#define ENTERCASEsetitimer create_syscall_enter(3, setitimer, int, struct itimerval __user *, struct itimerval __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsetitimer>
#669: FILE: include/trace/events/syscalls.h:570:
+#define EXITCASEsetitimer create_syscall_exit(setitimer);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#669: FILE: include/trace/events/syscalls.h:570:
+#define EXITCASEsetitimer create_syscall_exit(setitimer);

WARNING:LONG_LINE: line length of 147 exceeds 100 columns
#676: FILE: include/trace/events/syscalls.h:577:
+trace_event_syscall_enter(3, timer_create, clockid_t, which_clock, struct sigevent __user *, timer_event_spec, timer_t __user *, created_timer_id);

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#678: FILE: include/trace/events/syscalls.h:579:
+#define ENTERCASEtimer_create create_syscall_enter(3, timer_create, clockid_t, struct sigevent __user *, timer_t __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEtimer_create>
#678: FILE: include/trace/events/syscalls.h:579:
+#define ENTERCASEtimer_create create_syscall_enter(3, timer_create, clockid_t, struct sigevent __user *, timer_t __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#678: FILE: include/trace/events/syscalls.h:579:
+#define ENTERCASEtimer_create create_syscall_enter(3, timer_create, clockid_t, struct sigevent __user *, timer_t __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEtimer_create>
#679: FILE: include/trace/events/syscalls.h:580:
+#define EXITCASEtimer_create create_syscall_exit(timer_create);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#679: FILE: include/trace/events/syscalls.h:580:
+#define EXITCASEtimer_create create_syscall_exit(timer_create);

ERROR:CODE_INDENT: code indent should use tabs where possible
#687: FILE: include/trace/events/syscalls.h:588:
+        TP_PROTO(clockid_t which_clock, struct timespec __user *tp),$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#687: FILE: include/trace/events/syscalls.h:588:
+TRACE_EVENT(sysenter_timer_gettime,
+        TP_PROTO(clockid_t which_clock, struct timespec __user *tp),

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#687: FILE: include/trace/events/syscalls.h:588:
+        TP_PROTO(clockid_t which_clock, struct timespec __user *tp),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#688: FILE: include/trace/events/syscalls.h:589:
+        TP_ARGS(which_clock, tp),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#688: FILE: include/trace/events/syscalls.h:589:
+        TP_ARGS(which_clock, tp),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#689: FILE: include/trace/events/syscalls.h:590:
+        TP_STRUCT__entry($

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#689: FILE: include/trace/events/syscalls.h:590:
+        TP_STRUCT__entry($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#689: FILE: include/trace/events/syscalls.h:590:
+        TP_STRUCT__entry(

ERROR:CODE_INDENT: code indent should use tabs where possible
#690: FILE: include/trace/events/syscalls.h:591:
+                __field(clockid_t, which_clock)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#690: FILE: include/trace/events/syscalls.h:591:
+                __field(clockid_t, which_clock)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#691: FILE: include/trace/events/syscalls.h:592:
+                __field(struct timespec __user *, tp)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#691: FILE: include/trace/events/syscalls.h:592:
+                __field(struct timespec __user *, tp)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#692: FILE: include/trace/events/syscalls.h:593:
+        ),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#692: FILE: include/trace/events/syscalls.h:593:
+        ),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#693: FILE: include/trace/events/syscalls.h:594:
+        TP_fast_assign($

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#693: FILE: include/trace/events/syscalls.h:594:
+        TP_fast_assign($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#693: FILE: include/trace/events/syscalls.h:594:
+        TP_fast_assign(

ERROR:CODE_INDENT: code indent should use tabs where possible
#694: FILE: include/trace/events/syscalls.h:595:
+                __entry->which_clock = which_clock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#694: FILE: include/trace/events/syscalls.h:595:
+                __entry->which_clock = which_clock;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#695: FILE: include/trace/events/syscalls.h:596:
+                __entry->tp = tp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#695: FILE: include/trace/events/syscalls.h:596:
+                __entry->tp = tp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#696: FILE: include/trace/events/syscalls.h:597:
+        ),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#696: FILE: include/trace/events/syscalls.h:597:
+        ),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#697: FILE: include/trace/events/syscalls.h:598:
+        TP_printk("%s %016Lx", clock_id_toname((u64)__entry->which_clock), (u64)__entry->tp)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#697: FILE: include/trace/events/syscalls.h:598:
+        TP_printk("%s %016Lx", clock_id_toname((u64)__entry->which_clock), (u64)__entry->tp)$

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#697: FILE: include/trace/events/syscalls.h:598:
+        TP_printk("%s %016Lx", clock_id_toname((u64)__entry->which_clock), (u64)__entry->tp)

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#700: FILE: include/trace/events/syscalls.h:601:
+#define ENTERCASEtimer_gettime create_syscall_enter(2, timer_gettime, clockid_t, struct timespec __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEtimer_gettime>
#700: FILE: include/trace/events/syscalls.h:601:
+#define ENTERCASEtimer_gettime create_syscall_enter(2, timer_gettime, clockid_t, struct timespec __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#700: FILE: include/trace/events/syscalls.h:601:
+#define ENTERCASEtimer_gettime create_syscall_enter(2, timer_gettime, clockid_t, struct timespec __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEtimer_gettime>
#701: FILE: include/trace/events/syscalls.h:602:
+#define EXITCASEtimer_gettime create_syscall_exit(timer_gettime);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#701: FILE: include/trace/events/syscalls.h:602:
+#define EXITCASEtimer_gettime create_syscall_exit(timer_gettime);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEtimer_getoverrun>
#710: FILE: include/trace/events/syscalls.h:611:
+#define ENTERCASEtimer_getoverrun create_syscall_enter(1, timer_getoverrun, timer_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#710: FILE: include/trace/events/syscalls.h:611:
+#define ENTERCASEtimer_getoverrun create_syscall_enter(1, timer_getoverrun, timer_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEtimer_getoverrun>
#711: FILE: include/trace/events/syscalls.h:612:
+#define EXITCASEtimer_getoverrun create_syscall_exit(timer_getoverrun);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#711: FILE: include/trace/events/syscalls.h:612:
+#define EXITCASEtimer_getoverrun create_syscall_exit(timer_getoverrun);

WARNING:LONG_LINE: line length of 163 exceeds 100 columns
#718: FILE: include/trace/events/syscalls.h:619:
+trace_event_syscall_enter(4, timer_settime, timer_t, timer_id, int, flags, const struct itimerspec __user *, new_setting, struct itimerspec __user *, old_setting);

WARNING:LONG_LINE: line length of 146 exceeds 100 columns
#720: FILE: include/trace/events/syscalls.h:621:
+#define ENTERCASEtimer_settime create_syscall_enter(4, timer_settime, timer_t, int, const struct itimerspec __user *, struct itimerspec __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEtimer_settime>
#720: FILE: include/trace/events/syscalls.h:621:
+#define ENTERCASEtimer_settime create_syscall_enter(4, timer_settime, timer_t, int, const struct itimerspec __user *, struct itimerspec __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#720: FILE: include/trace/events/syscalls.h:621:
+#define ENTERCASEtimer_settime create_syscall_enter(4, timer_settime, timer_t, int, const struct itimerspec __user *, struct itimerspec __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEtimer_settime>
#721: FILE: include/trace/events/syscalls.h:622:
+#define EXITCASEtimer_settime create_syscall_exit(timer_settime);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#721: FILE: include/trace/events/syscalls.h:622:
+#define EXITCASEtimer_settime create_syscall_exit(timer_settime);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEtimer_delete>
#730: FILE: include/trace/events/syscalls.h:631:
+#define ENTERCASEtimer_delete create_syscall_enter(1, timer_delete, timer_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#730: FILE: include/trace/events/syscalls.h:631:
+#define ENTERCASEtimer_delete create_syscall_enter(1, timer_delete, timer_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEtimer_delete>
#731: FILE: include/trace/events/syscalls.h:632:
+#define EXITCASEtimer_delete create_syscall_exit(timer_delete);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#731: FILE: include/trace/events/syscalls.h:632:
+#define EXITCASEtimer_delete create_syscall_exit(timer_delete);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#739: FILE: include/trace/events/syscalls.h:640:
+TRACE_EVENT(sysenter_clock_settime,
+	TP_PROTO(clockid_t which_clock, struct timespec __user *tp),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#741: FILE: include/trace/events/syscalls.h:642:
+	TP_STRUCT__entry(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#745: FILE: include/trace/events/syscalls.h:646:
+	TP_fast_assign(

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#749: FILE: include/trace/events/syscalls.h:650:
+	TP_printk("%s %016Lx", clock_id_toname((u64)__entry->which_clock), (u64)__entry->tp)

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#752: FILE: include/trace/events/syscalls.h:653:
+#define ENTERCASEclock_settime create_syscall_enter(2, clock_settime, clockid_t, struct timespec __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEclock_settime>
#752: FILE: include/trace/events/syscalls.h:653:
+#define ENTERCASEclock_settime create_syscall_enter(2, clock_settime, clockid_t, struct timespec __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#752: FILE: include/trace/events/syscalls.h:653:
+#define ENTERCASEclock_settime create_syscall_enter(2, clock_settime, clockid_t, struct timespec __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEclock_settime>
#753: FILE: include/trace/events/syscalls.h:654:
+#define EXITCASEclock_settime create_syscall_exit(clock_settime);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#753: FILE: include/trace/events/syscalls.h:654:
+#define EXITCASEclock_settime create_syscall_exit(clock_settime);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#762: FILE: include/trace/events/syscalls.h:663:
+#define ENTERCASEclock_gettime create_syscall_enter(2, clock_gettime, clockid_t, struct timespec __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEclock_gettime>
#762: FILE: include/trace/events/syscalls.h:663:
+#define ENTERCASEclock_gettime create_syscall_enter(2, clock_gettime, clockid_t, struct timespec __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#762: FILE: include/trace/events/syscalls.h:663:
+#define ENTERCASEclock_gettime create_syscall_enter(2, clock_gettime, clockid_t, struct timespec __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEclock_gettime>
#763: FILE: include/trace/events/syscalls.h:664:
+#define EXITCASEclock_gettime create_syscall_exit(clock_gettime);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#763: FILE: include/trace/events/syscalls.h:664:
+#define EXITCASEclock_gettime create_syscall_exit(clock_gettime);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#772: FILE: include/trace/events/syscalls.h:673:
+#define ENTERCASEclock_getres create_syscall_enter(2, clock_getres, clockid_t, struct timespec __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEclock_getres>
#772: FILE: include/trace/events/syscalls.h:673:
+#define ENTERCASEclock_getres create_syscall_enter(2, clock_getres, clockid_t, struct timespec __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#772: FILE: include/trace/events/syscalls.h:673:
+#define ENTERCASEclock_getres create_syscall_enter(2, clock_getres, clockid_t, struct timespec __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEclock_getres>
#773: FILE: include/trace/events/syscalls.h:674:
+#define EXITCASEclock_getres create_syscall_exit(clock_getres);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#773: FILE: include/trace/events/syscalls.h:674:
+#define EXITCASEclock_getres create_syscall_exit(clock_getres);

WARNING:LONG_LINE: line length of 152 exceeds 100 columns
#780: FILE: include/trace/events/syscalls.h:681:
+trace_event_syscall_enter(4, clock_nanosleep, clockid_t, which_clock, int, flags, const struct timespec __user *, rqtp, struct timespec __user *, rmtp);

WARNING:LONG_LINE: line length of 148 exceeds 100 columns
#782: FILE: include/trace/events/syscalls.h:683:
+#define ENTERCASEclock_nanosleep create_syscall_enter(4, clock_nanosleep, clockid_t, int, const struct timespec __user *, struct timespec __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEclock_nanosleep>
#782: FILE: include/trace/events/syscalls.h:683:
+#define ENTERCASEclock_nanosleep create_syscall_enter(4, clock_nanosleep, clockid_t, int, const struct timespec __user *, struct timespec __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#782: FILE: include/trace/events/syscalls.h:683:
+#define ENTERCASEclock_nanosleep create_syscall_enter(4, clock_nanosleep, clockid_t, int, const struct timespec __user *, struct timespec __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEclock_nanosleep>
#783: FILE: include/trace/events/syscalls.h:684:
+#define EXITCASEclock_nanosleep create_syscall_exit(clock_nanosleep);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#783: FILE: include/trace/events/syscalls.h:684:
+#define EXITCASEclock_nanosleep create_syscall_exit(clock_nanosleep);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEnice>
#792: FILE: include/trace/events/syscalls.h:693:
+#define ENTERCASEnice create_syscall_enter(1, nice, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#792: FILE: include/trace/events/syscalls.h:693:
+#define ENTERCASEnice create_syscall_enter(1, nice, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEnice>
#793: FILE: include/trace/events/syscalls.h:694:
+#define EXITCASEnice create_syscall_exit(nice);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#793: FILE: include/trace/events/syscalls.h:694:
+#define EXITCASEnice create_syscall_exit(nice);

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#800: FILE: include/trace/events/syscalls.h:701:
+trace_event_syscall_enter(3, sched_setscheduler, pid_t, pid, int, policy, struct sched_param __user *, param);

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#802: FILE: include/trace/events/syscalls.h:703:
+#define ENTERCASEsched_setscheduler create_syscall_enter(3, sched_setscheduler, pid_t, int, struct sched_param __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsched_setscheduler>
#802: FILE: include/trace/events/syscalls.h:703:
+#define ENTERCASEsched_setscheduler create_syscall_enter(3, sched_setscheduler, pid_t, int, struct sched_param __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#802: FILE: include/trace/events/syscalls.h:703:
+#define ENTERCASEsched_setscheduler create_syscall_enter(3, sched_setscheduler, pid_t, int, struct sched_param __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsched_setscheduler>
#803: FILE: include/trace/events/syscalls.h:704:
+#define EXITCASEsched_setscheduler create_syscall_exit(sched_setscheduler);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#803: FILE: include/trace/events/syscalls.h:704:
+#define EXITCASEsched_setscheduler create_syscall_exit(sched_setscheduler);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#812: FILE: include/trace/events/syscalls.h:713:
+#define ENTERCASEsched_setparam create_syscall_enter(2, sched_setparam, pid_t, struct sched_param __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsched_setparam>
#812: FILE: include/trace/events/syscalls.h:713:
+#define ENTERCASEsched_setparam create_syscall_enter(2, sched_setparam, pid_t, struct sched_param __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#812: FILE: include/trace/events/syscalls.h:713:
+#define ENTERCASEsched_setparam create_syscall_enter(2, sched_setparam, pid_t, struct sched_param __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsched_setparam>
#813: FILE: include/trace/events/syscalls.h:714:
+#define EXITCASEsched_setparam create_syscall_exit(sched_setparam);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#813: FILE: include/trace/events/syscalls.h:714:
+#define EXITCASEsched_setparam create_syscall_exit(sched_setparam);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsched_getscheduler>
#822: FILE: include/trace/events/syscalls.h:723:
+#define ENTERCASEsched_getscheduler create_syscall_enter(1, sched_getscheduler, pid_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#822: FILE: include/trace/events/syscalls.h:723:
+#define ENTERCASEsched_getscheduler create_syscall_enter(1, sched_getscheduler, pid_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsched_getscheduler>
#823: FILE: include/trace/events/syscalls.h:724:
+#define EXITCASEsched_getscheduler create_syscall_exit(sched_getscheduler);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#823: FILE: include/trace/events/syscalls.h:724:
+#define EXITCASEsched_getscheduler create_syscall_exit(sched_getscheduler);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#832: FILE: include/trace/events/syscalls.h:733:
+#define ENTERCASEsched_getparam create_syscall_enter(2, sched_getparam, pid_t, struct sched_param __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsched_getparam>
#832: FILE: include/trace/events/syscalls.h:733:
+#define ENTERCASEsched_getparam create_syscall_enter(2, sched_getparam, pid_t, struct sched_param __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#832: FILE: include/trace/events/syscalls.h:733:
+#define ENTERCASEsched_getparam create_syscall_enter(2, sched_getparam, pid_t, struct sched_param __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsched_getparam>
#833: FILE: include/trace/events/syscalls.h:734:
+#define EXITCASEsched_getparam create_syscall_exit(sched_getparam);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#833: FILE: include/trace/events/syscalls.h:734:
+#define EXITCASEsched_getparam create_syscall_exit(sched_getparam);

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#840: FILE: include/trace/events/syscalls.h:741:
+trace_event_syscall_enter(3, sched_setaffinity, pid_t, pid, unsigned int, len, unsigned long __user *, user_mask_ptr);

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#842: FILE: include/trace/events/syscalls.h:743:
+#define ENTERCASEsched_setaffinity create_syscall_enter(3, sched_setaffinity, pid_t, unsigned int, unsigned long __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsched_setaffinity>
#842: FILE: include/trace/events/syscalls.h:743:
+#define ENTERCASEsched_setaffinity create_syscall_enter(3, sched_setaffinity, pid_t, unsigned int, unsigned long __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#842: FILE: include/trace/events/syscalls.h:743:
+#define ENTERCASEsched_setaffinity create_syscall_enter(3, sched_setaffinity, pid_t, unsigned int, unsigned long __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsched_setaffinity>
#843: FILE: include/trace/events/syscalls.h:744:
+#define EXITCASEsched_setaffinity create_syscall_exit(sched_setaffinity);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#843: FILE: include/trace/events/syscalls.h:744:
+#define EXITCASEsched_setaffinity create_syscall_exit(sched_setaffinity);

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#850: FILE: include/trace/events/syscalls.h:751:
+trace_event_syscall_enter(3, sched_getaffinity, pid_t, pid, unsigned int, len, unsigned long __user *, user_mask_ptr);

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#852: FILE: include/trace/events/syscalls.h:753:
+#define ENTERCASEsched_getaffinity create_syscall_enter(3, sched_getaffinity, pid_t, unsigned int, unsigned long __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsched_getaffinity>
#852: FILE: include/trace/events/syscalls.h:753:
+#define ENTERCASEsched_getaffinity create_syscall_enter(3, sched_getaffinity, pid_t, unsigned int, unsigned long __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#852: FILE: include/trace/events/syscalls.h:753:
+#define ENTERCASEsched_getaffinity create_syscall_enter(3, sched_getaffinity, pid_t, unsigned int, unsigned long __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsched_getaffinity>
#853: FILE: include/trace/events/syscalls.h:754:
+#define EXITCASEsched_getaffinity create_syscall_exit(sched_getaffinity);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#853: FILE: include/trace/events/syscalls.h:754:
+#define EXITCASEsched_getaffinity create_syscall_exit(sched_getaffinity);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsched_yield>
#862: FILE: include/trace/events/syscalls.h:763:
+#define ENTERCASEsched_yield create_syscall_enter(0, sched_yield);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#862: FILE: include/trace/events/syscalls.h:763:
+#define ENTERCASEsched_yield create_syscall_enter(0, sched_yield);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsched_yield>
#863: FILE: include/trace/events/syscalls.h:764:
+#define EXITCASEsched_yield create_syscall_exit(sched_yield);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#863: FILE: include/trace/events/syscalls.h:764:
+#define EXITCASEsched_yield create_syscall_exit(sched_yield);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsched_get_priority_max>
#872: FILE: include/trace/events/syscalls.h:773:
+#define ENTERCASEsched_get_priority_max create_syscall_enter(1, sched_get_priority_max, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#872: FILE: include/trace/events/syscalls.h:773:
+#define ENTERCASEsched_get_priority_max create_syscall_enter(1, sched_get_priority_max, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsched_get_priority_max>
#873: FILE: include/trace/events/syscalls.h:774:
+#define EXITCASEsched_get_priority_max create_syscall_exit(sched_get_priority_max);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#873: FILE: include/trace/events/syscalls.h:774:
+#define EXITCASEsched_get_priority_max create_syscall_exit(sched_get_priority_max);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsched_get_priority_min>
#882: FILE: include/trace/events/syscalls.h:783:
+#define ENTERCASEsched_get_priority_min create_syscall_enter(1, sched_get_priority_min, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#882: FILE: include/trace/events/syscalls.h:783:
+#define ENTERCASEsched_get_priority_min create_syscall_enter(1, sched_get_priority_min, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsched_get_priority_min>
#883: FILE: include/trace/events/syscalls.h:784:
+#define EXITCASEsched_get_priority_min create_syscall_exit(sched_get_priority_min);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#883: FILE: include/trace/events/syscalls.h:784:
+#define EXITCASEsched_get_priority_min create_syscall_exit(sched_get_priority_min);

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#892: FILE: include/trace/events/syscalls.h:793:
+#define ENTERCASEsched_rr_get_interval create_syscall_enter(2, sched_rr_get_interval, pid_t, struct timespec __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsched_rr_get_interval>
#892: FILE: include/trace/events/syscalls.h:793:
+#define ENTERCASEsched_rr_get_interval create_syscall_enter(2, sched_rr_get_interval, pid_t, struct timespec __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#892: FILE: include/trace/events/syscalls.h:793:
+#define ENTERCASEsched_rr_get_interval create_syscall_enter(2, sched_rr_get_interval, pid_t, struct timespec __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsched_rr_get_interval>
#893: FILE: include/trace/events/syscalls.h:794:
+#define EXITCASEsched_rr_get_interval create_syscall_exit(sched_rr_get_interval);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#893: FILE: include/trace/events/syscalls.h:794:
+#define EXITCASEsched_rr_get_interval create_syscall_exit(sched_rr_get_interval);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsetpriority>
#902: FILE: include/trace/events/syscalls.h:803:
+#define ENTERCASEsetpriority create_syscall_enter(3, setpriority, int, int, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#902: FILE: include/trace/events/syscalls.h:803:
+#define ENTERCASEsetpriority create_syscall_enter(3, setpriority, int, int, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsetpriority>
#903: FILE: include/trace/events/syscalls.h:804:
+#define EXITCASEsetpriority create_syscall_exit(setpriority);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#903: FILE: include/trace/events/syscalls.h:804:
+#define EXITCASEsetpriority create_syscall_exit(setpriority);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgetpriority>
#912: FILE: include/trace/events/syscalls.h:813:
+#define ENTERCASEgetpriority create_syscall_enter(2, getpriority, int, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#912: FILE: include/trace/events/syscalls.h:813:
+#define ENTERCASEgetpriority create_syscall_enter(2, getpriority, int, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgetpriority>
#913: FILE: include/trace/events/syscalls.h:814:
+#define EXITCASEgetpriority create_syscall_exit(getpriority);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#913: FILE: include/trace/events/syscalls.h:814:
+#define EXITCASEgetpriority create_syscall_exit(getpriority);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEshutdown>
#922: FILE: include/trace/events/syscalls.h:823:
+#define ENTERCASEshutdown create_syscall_enter(2, shutdown, int, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#922: FILE: include/trace/events/syscalls.h:823:
+#define ENTERCASEshutdown create_syscall_enter(2, shutdown, int, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEshutdown>
#923: FILE: include/trace/events/syscalls.h:824:
+#define EXITCASEshutdown create_syscall_exit(shutdown);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#923: FILE: include/trace/events/syscalls.h:824:
+#define EXITCASEshutdown create_syscall_exit(shutdown);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#930: FILE: include/trace/events/syscalls.h:831:
+trace_event_syscall_enter(4, reboot, int, magic1, int, magic2, unsigned int, cmd, void __user *, arg);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEreboot>
#932: FILE: include/trace/events/syscalls.h:833:
+#define ENTERCASEreboot create_syscall_enter(4, reboot, int, int, unsigned int, void __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#932: FILE: include/trace/events/syscalls.h:833:
+#define ENTERCASEreboot create_syscall_enter(4, reboot, int, int, unsigned int, void __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEreboot>
#933: FILE: include/trace/events/syscalls.h:834:
+#define EXITCASEreboot create_syscall_exit(reboot);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#933: FILE: include/trace/events/syscalls.h:834:
+#define EXITCASEreboot create_syscall_exit(reboot);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASErestart_syscall>
#942: FILE: include/trace/events/syscalls.h:843:
+#define ENTERCASErestart_syscall create_syscall_enter(0, restart_syscall);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#942: FILE: include/trace/events/syscalls.h:843:
+#define ENTERCASErestart_syscall create_syscall_enter(0, restart_syscall);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASErestart_syscall>
#943: FILE: include/trace/events/syscalls.h:844:
+#define EXITCASErestart_syscall create_syscall_exit(restart_syscall);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#943: FILE: include/trace/events/syscalls.h:844:
+#define EXITCASErestart_syscall create_syscall_exit(restart_syscall);

WARNING:LONG_LINE: line length of 150 exceeds 100 columns
#950: FILE: include/trace/events/syscalls.h:851:
+trace_event_syscall_enter(4, kexec_load, unsigned long, e, unsigned long, nr_segments, struct kexec_segment __user *, segments, unsigned long, flags);

WARNING:LONG_LINE: line length of 140 exceeds 100 columns
#952: FILE: include/trace/events/syscalls.h:853:
+#define ENTERCASEkexec_load create_syscall_enter(4, kexec_load, unsigned long, unsigned long, struct kexec_segment __user *, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEkexec_load>
#952: FILE: include/trace/events/syscalls.h:853:
+#define ENTERCASEkexec_load create_syscall_enter(4, kexec_load, unsigned long, unsigned long, struct kexec_segment __user *, unsigned long);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#952: FILE: include/trace/events/syscalls.h:853:
+#define ENTERCASEkexec_load create_syscall_enter(4, kexec_load, unsigned long, unsigned long, struct kexec_segment __user *, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEkexec_load>
#953: FILE: include/trace/events/syscalls.h:854:
+#define EXITCASEkexec_load create_syscall_exit(kexec_load);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#953: FILE: include/trace/events/syscalls.h:854:
+#define EXITCASEkexec_load create_syscall_exit(kexec_load);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEexit>
#962: FILE: include/trace/events/syscalls.h:863:
+#define ENTERCASEexit create_syscall_enter(1, exit, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#962: FILE: include/trace/events/syscalls.h:863:
+#define ENTERCASEexit create_syscall_enter(1, exit, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEexit>
#963: FILE: include/trace/events/syscalls.h:864:
+#define EXITCASEexit create_syscall_exit(exit);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#963: FILE: include/trace/events/syscalls.h:864:
+#define EXITCASEexit create_syscall_exit(exit);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEexit_group>
#972: FILE: include/trace/events/syscalls.h:873:
+#define ENTERCASEexit_group create_syscall_enter(1, exit_group, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#972: FILE: include/trace/events/syscalls.h:873:
+#define ENTERCASEexit_group create_syscall_enter(1, exit_group, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEexit_group>
#973: FILE: include/trace/events/syscalls.h:874:
+#define EXITCASEexit_group create_syscall_exit(exit_group);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#973: FILE: include/trace/events/syscalls.h:874:
+#define EXITCASEexit_group create_syscall_exit(exit_group);

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#980: FILE: include/trace/events/syscalls.h:881:
+trace_event_syscall_enter(4, wait4, pid_t, pid, int __user *, stat_addr, int, options, struct rusage __user *, ru);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#982: FILE: include/trace/events/syscalls.h:883:
+#define ENTERCASEwait4 create_syscall_enter(4, wait4, pid_t, int __user *, int, struct rusage __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEwait4>
#982: FILE: include/trace/events/syscalls.h:883:
+#define ENTERCASEwait4 create_syscall_enter(4, wait4, pid_t, int __user *, int, struct rusage __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#982: FILE: include/trace/events/syscalls.h:883:
+#define ENTERCASEwait4 create_syscall_enter(4, wait4, pid_t, int __user *, int, struct rusage __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEwait4>
#983: FILE: include/trace/events/syscalls.h:884:
+#define EXITCASEwait4 create_syscall_exit(wait4);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#983: FILE: include/trace/events/syscalls.h:884:
+#define EXITCASEwait4 create_syscall_exit(wait4);

WARNING:LONG_LINE: line length of 135 exceeds 100 columns
#990: FILE: include/trace/events/syscalls.h:891:
+trace_event_syscall_enter(5, waitid, int, which, pid_t, pid, struct siginfo __user *, infop, int, options, struct rusage __user *, ru);

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#992: FILE: include/trace/events/syscalls.h:893:
+#define ENTERCASEwaitid create_syscall_enter(5, waitid, int, pid_t, struct siginfo __user *, int, struct rusage __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEwaitid>
#992: FILE: include/trace/events/syscalls.h:893:
+#define ENTERCASEwaitid create_syscall_enter(5, waitid, int, pid_t, struct siginfo __user *, int, struct rusage __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#992: FILE: include/trace/events/syscalls.h:893:
+#define ENTERCASEwaitid create_syscall_enter(5, waitid, int, pid_t, struct siginfo __user *, int, struct rusage __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEwaitid>
#993: FILE: include/trace/events/syscalls.h:894:
+#define EXITCASEwaitid create_syscall_exit(waitid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#993: FILE: include/trace/events/syscalls.h:894:
+#define EXITCASEwaitid create_syscall_exit(waitid);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEwaitpid>
#1002: FILE: include/trace/events/syscalls.h:903:
+#define ENTERCASEwaitpid create_syscall_enter(3, waitpid, pid_t, int __user *, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1002: FILE: include/trace/events/syscalls.h:903:
+#define ENTERCASEwaitpid create_syscall_enter(3, waitpid, pid_t, int __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEwaitpid>
#1003: FILE: include/trace/events/syscalls.h:904:
+#define EXITCASEwaitpid create_syscall_exit(waitpid);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1003: FILE: include/trace/events/syscalls.h:904:
+#define EXITCASEwaitpid create_syscall_exit(waitpid);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEset_tid_address>
#1012: FILE: include/trace/events/syscalls.h:913:
+#define ENTERCASEset_tid_address create_syscall_enter(1, set_tid_address, int __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1012: FILE: include/trace/events/syscalls.h:913:
+#define ENTERCASEset_tid_address create_syscall_enter(1, set_tid_address, int __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEset_tid_address>
#1013: FILE: include/trace/events/syscalls.h:914:
+#define EXITCASEset_tid_address create_syscall_exit(set_tid_address);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1013: FILE: include/trace/events/syscalls.h:914:
+#define EXITCASEset_tid_address create_syscall_exit(set_tid_address);

WARNING:LONG_LINE: line length of 142 exceeds 100 columns
#1020: FILE: include/trace/events/syscalls.h:921:
+trace_event_syscall_enter(6, futex, u32 __user *, uaddr, int, op, u32, val, struct timespec __user *, utime, u32 __user *, uaddr2, u32, val3);

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#1022: FILE: include/trace/events/syscalls.h:923:
+#define ENTERCASEfutex create_syscall_enter(6, futex, u32 __user *, int, u32, struct timespec __user *, u32 __user *, u32);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEfutex>
#1022: FILE: include/trace/events/syscalls.h:923:
+#define ENTERCASEfutex create_syscall_enter(6, futex, u32 __user *, int, u32, struct timespec __user *, u32 __user *, u32);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1022: FILE: include/trace/events/syscalls.h:923:
+#define ENTERCASEfutex create_syscall_enter(6, futex, u32 __user *, int, u32, struct timespec __user *, u32 __user *, u32);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEfutex>
#1023: FILE: include/trace/events/syscalls.h:924:
+#define EXITCASEfutex create_syscall_exit(futex);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1023: FILE: include/trace/events/syscalls.h:924:
+#define EXITCASEfutex create_syscall_exit(futex);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#1030: FILE: include/trace/events/syscalls.h:931:
+trace_event_syscall_enter(3, init_module, void __user *, umod, unsigned long, len, const char __user *, uargs);

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#1032: FILE: include/trace/events/syscalls.h:933:
+#define ENTERCASEinit_module create_syscall_enter(3, init_module, void __user *, unsigned long, const char __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEinit_module>
#1032: FILE: include/trace/events/syscalls.h:933:
+#define ENTERCASEinit_module create_syscall_enter(3, init_module, void __user *, unsigned long, const char __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1032: FILE: include/trace/events/syscalls.h:933:
+#define ENTERCASEinit_module create_syscall_enter(3, init_module, void __user *, unsigned long, const char __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEinit_module>
#1033: FILE: include/trace/events/syscalls.h:934:
+#define EXITCASEinit_module create_syscall_exit(init_module);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1033: FILE: include/trace/events/syscalls.h:934:
+#define EXITCASEinit_module create_syscall_exit(init_module);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#1042: FILE: include/trace/events/syscalls.h:943:
+#define ENTERCASEdelete_module create_syscall_enter(2, delete_module, const char __user *, unsigned int);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEdelete_module>
#1042: FILE: include/trace/events/syscalls.h:943:
+#define ENTERCASEdelete_module create_syscall_enter(2, delete_module, const char __user *, unsigned int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1042: FILE: include/trace/events/syscalls.h:943:
+#define ENTERCASEdelete_module create_syscall_enter(2, delete_module, const char __user *, unsigned int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEdelete_module>
#1043: FILE: include/trace/events/syscalls.h:944:
+#define EXITCASEdelete_module create_syscall_exit(delete_module);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1043: FILE: include/trace/events/syscalls.h:944:
+#define EXITCASEdelete_module create_syscall_exit(delete_module);

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#1050: FILE: include/trace/events/syscalls.h:951:
+trace_event_syscall_enter(4, rt_sigprocmask, int, how, sigset_t __user *, set, sigset_t __user *, oset, size_t, sigsetsize);

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#1052: FILE: include/trace/events/syscalls.h:953:
+#define ENTERCASErt_sigprocmask create_syscall_enter(4, rt_sigprocmask, int, sigset_t __user *, sigset_t __user *, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASErt_sigprocmask>
#1052: FILE: include/trace/events/syscalls.h:953:
+#define ENTERCASErt_sigprocmask create_syscall_enter(4, rt_sigprocmask, int, sigset_t __user *, sigset_t __user *, size_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1052: FILE: include/trace/events/syscalls.h:953:
+#define ENTERCASErt_sigprocmask create_syscall_enter(4, rt_sigprocmask, int, sigset_t __user *, sigset_t __user *, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASErt_sigprocmask>
#1053: FILE: include/trace/events/syscalls.h:954:
+#define EXITCASErt_sigprocmask create_syscall_exit(rt_sigprocmask);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1053: FILE: include/trace/events/syscalls.h:954:
+#define EXITCASErt_sigprocmask create_syscall_exit(rt_sigprocmask);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASErt_sigpending>
#1062: FILE: include/trace/events/syscalls.h:963:
+#define ENTERCASErt_sigpending create_syscall_enter(2, rt_sigpending, sigset_t __user *, size_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1062: FILE: include/trace/events/syscalls.h:963:
+#define ENTERCASErt_sigpending create_syscall_enter(2, rt_sigpending, sigset_t __user *, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASErt_sigpending>
#1063: FILE: include/trace/events/syscalls.h:964:
+#define EXITCASErt_sigpending create_syscall_exit(rt_sigpending);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1063: FILE: include/trace/events/syscalls.h:964:
+#define EXITCASErt_sigpending create_syscall_exit(rt_sigpending);

WARNING:LONG_LINE: line length of 163 exceeds 100 columns
#1070: FILE: include/trace/events/syscalls.h:971:
+trace_event_syscall_enter(4, rt_sigtimedwait, const sigset_t __user *, uthese, siginfo_t __user *, uinfo, const struct timespec __user *, uts, size_t, sigsetsize);

WARNING:LONG_LINE: line length of 159 exceeds 100 columns
#1072: FILE: include/trace/events/syscalls.h:973:
+#define ENTERCASErt_sigtimedwait create_syscall_enter(4, rt_sigtimedwait, const sigset_t __user *, siginfo_t __user *, const struct timespec __user *, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASErt_sigtimedwait>
#1072: FILE: include/trace/events/syscalls.h:973:
+#define ENTERCASErt_sigtimedwait create_syscall_enter(4, rt_sigtimedwait, const sigset_t __user *, siginfo_t __user *, const struct timespec __user *, size_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1072: FILE: include/trace/events/syscalls.h:973:
+#define ENTERCASErt_sigtimedwait create_syscall_enter(4, rt_sigtimedwait, const sigset_t __user *, siginfo_t __user *, const struct timespec __user *, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASErt_sigtimedwait>
#1073: FILE: include/trace/events/syscalls.h:974:
+#define EXITCASErt_sigtimedwait create_syscall_exit(rt_sigtimedwait);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1073: FILE: include/trace/events/syscalls.h:974:
+#define EXITCASErt_sigtimedwait create_syscall_exit(rt_sigtimedwait);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEkill>
#1082: FILE: include/trace/events/syscalls.h:983:
+#define ENTERCASEkill create_syscall_enter(2, kill, int, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1082: FILE: include/trace/events/syscalls.h:983:
+#define ENTERCASEkill create_syscall_enter(2, kill, int, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEkill>
#1083: FILE: include/trace/events/syscalls.h:984:
+#define EXITCASEkill create_syscall_exit(kill);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1083: FILE: include/trace/events/syscalls.h:984:
+#define EXITCASEkill create_syscall_exit(kill);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEtgkill>
#1092: FILE: include/trace/events/syscalls.h:993:
+#define ENTERCASEtgkill create_syscall_enter(3, tgkill, int, int, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1092: FILE: include/trace/events/syscalls.h:993:
+#define ENTERCASEtgkill create_syscall_enter(3, tgkill, int, int, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEtgkill>
#1093: FILE: include/trace/events/syscalls.h:994:
+#define EXITCASEtgkill create_syscall_exit(tgkill);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1093: FILE: include/trace/events/syscalls.h:994:
+#define EXITCASEtgkill create_syscall_exit(tgkill);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEtkill>
#1102: FILE: include/trace/events/syscalls.h:1003:
+#define ENTERCASEtkill create_syscall_enter(2, tkill, int, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1102: FILE: include/trace/events/syscalls.h:1003:
+#define ENTERCASEtkill create_syscall_enter(2, tkill, int, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEtkill>
#1103: FILE: include/trace/events/syscalls.h:1004:
+#define EXITCASEtkill create_syscall_exit(tkill);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1103: FILE: include/trace/events/syscalls.h:1004:
+#define EXITCASEtkill create_syscall_exit(tkill);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1112: FILE: include/trace/events/syscalls.h:1013:
+#define ENTERCASErt_sigqueueinfo create_syscall_enter(3, rt_sigqueueinfo, int, int, siginfo_t __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASErt_sigqueueinfo>
#1112: FILE: include/trace/events/syscalls.h:1013:
+#define ENTERCASErt_sigqueueinfo create_syscall_enter(3, rt_sigqueueinfo, int, int, siginfo_t __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1112: FILE: include/trace/events/syscalls.h:1013:
+#define ENTERCASErt_sigqueueinfo create_syscall_enter(3, rt_sigqueueinfo, int, int, siginfo_t __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASErt_sigqueueinfo>
#1113: FILE: include/trace/events/syscalls.h:1014:
+#define EXITCASErt_sigqueueinfo create_syscall_exit(rt_sigqueueinfo);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1113: FILE: include/trace/events/syscalls.h:1014:
+#define EXITCASErt_sigqueueinfo create_syscall_exit(rt_sigqueueinfo);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsgetmask>
#1122: FILE: include/trace/events/syscalls.h:1023:
+#define ENTERCASEsgetmask create_syscall_enter(0, sgetmask);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1122: FILE: include/trace/events/syscalls.h:1023:
+#define ENTERCASEsgetmask create_syscall_enter(0, sgetmask);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsgetmask>
#1123: FILE: include/trace/events/syscalls.h:1024:
+#define EXITCASEsgetmask create_syscall_exit(sgetmask);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1123: FILE: include/trace/events/syscalls.h:1024:
+#define EXITCASEsgetmask create_syscall_exit(sgetmask);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEssetmask>
#1132: FILE: include/trace/events/syscalls.h:1033:
+#define ENTERCASEssetmask create_syscall_enter(1, ssetmask, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1132: FILE: include/trace/events/syscalls.h:1033:
+#define ENTERCASEssetmask create_syscall_enter(1, ssetmask, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEssetmask>
#1133: FILE: include/trace/events/syscalls.h:1034:
+#define EXITCASEssetmask create_syscall_exit(ssetmask);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1133: FILE: include/trace/events/syscalls.h:1034:
+#define EXITCASEssetmask create_syscall_exit(ssetmask);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsignal>
#1142: FILE: include/trace/events/syscalls.h:1043:
+#define ENTERCASEsignal create_syscall_enter(2, signal, int, __sighandler_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1142: FILE: include/trace/events/syscalls.h:1043:
+#define ENTERCASEsignal create_syscall_enter(2, signal, int, __sighandler_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsignal>
#1143: FILE: include/trace/events/syscalls.h:1044:
+#define EXITCASEsignal create_syscall_exit(signal);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1143: FILE: include/trace/events/syscalls.h:1044:
+#define EXITCASEsignal create_syscall_exit(signal);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEpause>
#1152: FILE: include/trace/events/syscalls.h:1053:
+#define ENTERCASEpause create_syscall_enter(0, pause);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1152: FILE: include/trace/events/syscalls.h:1053:
+#define ENTERCASEpause create_syscall_enter(0, pause);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEpause>
#1153: FILE: include/trace/events/syscalls.h:1054:
+#define EXITCASEpause create_syscall_exit(pause);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1153: FILE: include/trace/events/syscalls.h:1054:
+#define EXITCASEpause create_syscall_exit(pause);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsync>
#1162: FILE: include/trace/events/syscalls.h:1063:
+#define ENTERCASEsync create_syscall_enter(0, sync);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1162: FILE: include/trace/events/syscalls.h:1063:
+#define ENTERCASEsync create_syscall_enter(0, sync);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsync>
#1163: FILE: include/trace/events/syscalls.h:1064:
+#define EXITCASEsync create_syscall_exit(sync);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1163: FILE: include/trace/events/syscalls.h:1064:
+#define EXITCASEsync create_syscall_exit(sync);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEfsync>
#1172: FILE: include/trace/events/syscalls.h:1073:
+#define ENTERCASEfsync create_syscall_enter(1, fsync, unsigned int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1172: FILE: include/trace/events/syscalls.h:1073:
+#define ENTERCASEfsync create_syscall_enter(1, fsync, unsigned int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEfsync>
#1173: FILE: include/trace/events/syscalls.h:1074:
+#define EXITCASEfsync create_syscall_exit(fsync);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1173: FILE: include/trace/events/syscalls.h:1074:
+#define EXITCASEfsync create_syscall_exit(fsync);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEfdatasync>
#1182: FILE: include/trace/events/syscalls.h:1083:
+#define ENTERCASEfdatasync create_syscall_enter(1, fdatasync, unsigned int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1182: FILE: include/trace/events/syscalls.h:1083:
+#define ENTERCASEfdatasync create_syscall_enter(1, fdatasync, unsigned int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEfdatasync>
#1183: FILE: include/trace/events/syscalls.h:1084:
+#define EXITCASEfdatasync create_syscall_exit(fdatasync);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1183: FILE: include/trace/events/syscalls.h:1084:
+#define EXITCASEfdatasync create_syscall_exit(fdatasync);

WARNING:UNNECESSARY_INT: Prefer 'long' over 'int long' as the int is unnecessary
#1192: FILE: include/trace/events/syscalls.h:1093:
+#define ENTERCASEbdflush create_syscall_exit(2, bdflush, int long);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEbdflush>
#1192: FILE: include/trace/events/syscalls.h:1093:
+#define ENTERCASEbdflush create_syscall_exit(2, bdflush, int long);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1192: FILE: include/trace/events/syscalls.h:1093:
+#define ENTERCASEbdflush create_syscall_exit(2, bdflush, int long);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEbdflush>
#1193: FILE: include/trace/events/syscalls.h:1094:
+#define EXITCASEbdflush create_syscall_exit(bdflush);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1193: FILE: include/trace/events/syscalls.h:1094:
+#define EXITCASEbdflush create_syscall_exit(bdflush);

WARNING:LONG_LINE: line length of 150 exceeds 100 columns
#1200: FILE: include/trace/events/syscalls.h:1101:
+trace_event_syscall_enter(5, mount, char __user *, dev_name, char __user *, dir_name, char __user *, type, unsigned long, flags, void __user *, data);

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#1202: FILE: include/trace/events/syscalls.h:1103:
+#define ENTERCASEmount create_syscall_enter(5, mount, char __user *, char __user *, char __user *, unsigned long, void __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEmount>
#1202: FILE: include/trace/events/syscalls.h:1103:
+#define ENTERCASEmount create_syscall_enter(5, mount, char __user *, char __user *, char __user *, unsigned long, void __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1202: FILE: include/trace/events/syscalls.h:1103:
+#define ENTERCASEmount create_syscall_enter(5, mount, char __user *, char __user *, char __user *, unsigned long, void __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEmount>
#1203: FILE: include/trace/events/syscalls.h:1104:
+#define EXITCASEmount create_syscall_exit(mount);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1203: FILE: include/trace/events/syscalls.h:1104:
+#define EXITCASEmount create_syscall_exit(mount);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEumount>
#1212: FILE: include/trace/events/syscalls.h:1113:
+#define ENTERCASEumount create_syscall_enter(2, umount, char __user *, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1212: FILE: include/trace/events/syscalls.h:1113:
+#define ENTERCASEumount create_syscall_enter(2, umount, char __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEumount>
#1213: FILE: include/trace/events/syscalls.h:1114:
+#define EXITCASEumount create_syscall_exit(umount);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1213: FILE: include/trace/events/syscalls.h:1114:
+#define EXITCASEumount create_syscall_exit(umount);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1222: FILE: include/trace/events/syscalls.h:1123:
+#define ENTERCASEoldumount create_syscall_enter(1, oldumount, char __user );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEoldumount>
#1222: FILE: include/trace/events/syscalls.h:1123:
+#define ENTERCASEoldumount create_syscall_enter(1, oldumount, char __user );

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1222: FILE: include/trace/events/syscalls.h:1123:
+#define ENTERCASEoldumount create_syscall_enter(1, oldumount, char __user );

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEoldumount>
#1223: FILE: include/trace/events/syscalls.h:1124:
+#define EXITCASEoldumount create_syscall_exit(oldumount);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1223: FILE: include/trace/events/syscalls.h:1124:
+#define EXITCASEoldumount create_syscall_exit(oldumount);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEtruncate>
#1232: FILE: include/trace/events/syscalls.h:1133:
+#define ENTERCASEtruncate create_syscall_enter(2, truncate, const char __user *, unsigned long);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1232: FILE: include/trace/events/syscalls.h:1133:
+#define ENTERCASEtruncate create_syscall_enter(2, truncate, const char __user *, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEtruncate>
#1233: FILE: include/trace/events/syscalls.h:1134:
+#define EXITCASEtruncate create_syscall_exit(truncate);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1233: FILE: include/trace/events/syscalls.h:1134:
+#define EXITCASEtruncate create_syscall_exit(truncate);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEftruncate>
#1242: FILE: include/trace/events/syscalls.h:1143:
+#define ENTERCASEftruncate create_syscall_enter(2, ftruncate, unsigned int, unsigned long);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1242: FILE: include/trace/events/syscalls.h:1143:
+#define ENTERCASEftruncate create_syscall_enter(2, ftruncate, unsigned int, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEftruncate>
#1243: FILE: include/trace/events/syscalls.h:1144:
+#define EXITCASEftruncate create_syscall_exit(ftruncate);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1243: FILE: include/trace/events/syscalls.h:1144:
+#define EXITCASEftruncate create_syscall_exit(ftruncate);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1250: FILE: include/trace/events/syscalls.h:1151:
+trace_event_syscall_enter(2, stat, char __user *, filename, struct __old_kernel_stat __user *, statbuf);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1252: FILE: include/trace/events/syscalls.h:1153:
+#define ENTERCASEstat create_syscall_enter(2, stat, char __user *, struct __old_kernel_stat __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEstat>
#1252: FILE: include/trace/events/syscalls.h:1153:
+#define ENTERCASEstat create_syscall_enter(2, stat, char __user *, struct __old_kernel_stat __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1252: FILE: include/trace/events/syscalls.h:1153:
+#define ENTERCASEstat create_syscall_enter(2, stat, char __user *, struct __old_kernel_stat __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEstat>
#1253: FILE: include/trace/events/syscalls.h:1154:
+#define EXITCASEstat create_syscall_exit(stat);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1253: FILE: include/trace/events/syscalls.h:1154:
+#define EXITCASEstat create_syscall_exit(stat);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1262: FILE: include/trace/events/syscalls.h:1163:
+#define ENTERCASEstatfs create_syscall_enter(2, statfs, const char __user *, struct statfs __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEstatfs>
#1262: FILE: include/trace/events/syscalls.h:1163:
+#define ENTERCASEstatfs create_syscall_enter(2, statfs, const char __user *, struct statfs __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1262: FILE: include/trace/events/syscalls.h:1163:
+#define ENTERCASEstatfs create_syscall_enter(2, statfs, const char __user *, struct statfs __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEstatfs>
#1263: FILE: include/trace/events/syscalls.h:1164:
+#define EXITCASEstatfs create_syscall_exit(statfs);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1263: FILE: include/trace/events/syscalls.h:1164:
+#define EXITCASEstatfs create_syscall_exit(statfs);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#1270: FILE: include/trace/events/syscalls.h:1171:
+trace_event_syscall_enter(3, statfs64, const char __user *, path, size_t, sz, struct statfs64 __user *, buf);

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#1272: FILE: include/trace/events/syscalls.h:1173:
+#define ENTERCASEstatfs64 create_syscall_enter(2, statfs64, const char __user *, size_t, struct statfs64 __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEstatfs64>
#1272: FILE: include/trace/events/syscalls.h:1173:
+#define ENTERCASEstatfs64 create_syscall_enter(2, statfs64, const char __user *, size_t, struct statfs64 __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1272: FILE: include/trace/events/syscalls.h:1173:
+#define ENTERCASEstatfs64 create_syscall_enter(2, statfs64, const char __user *, size_t, struct statfs64 __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEstatfs64>
#1273: FILE: include/trace/events/syscalls.h:1174:
+#define EXITCASEstatfs64 create_syscall_exit(statfs64);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1273: FILE: include/trace/events/syscalls.h:1174:
+#define EXITCASEstatfs64 create_syscall_exit(statfs64);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEfstatfs>
#1282: FILE: include/trace/events/syscalls.h:1183:
+#define ENTERCASEfstatfs create_syscall_enter(2, fstatfs, unsigned int, struct statfs __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1282: FILE: include/trace/events/syscalls.h:1183:
+#define ENTERCASEfstatfs create_syscall_enter(2, fstatfs, unsigned int, struct statfs __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEfstatfs>
#1283: FILE: include/trace/events/syscalls.h:1184:
+#define EXITCASEfstatfs create_syscall_exit(fstatfs);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1283: FILE: include/trace/events/syscalls.h:1184:
+#define EXITCASEfstatfs create_syscall_exit(fstatfs);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1290: FILE: include/trace/events/syscalls.h:1191:
+trace_event_syscall_enter(3, fstatfs64, unsigned int, fd, size_t, sz, struct statfs64 __user *, buf);

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#1292: FILE: include/trace/events/syscalls.h:1193:
+#define ENTERCASEfstatfs64 create_syscall_enter(3, fstatfs64, unsigned int, size_t, struct statfs64 __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEfstatfs64>
#1292: FILE: include/trace/events/syscalls.h:1193:
+#define ENTERCASEfstatfs64 create_syscall_enter(3, fstatfs64, unsigned int, size_t, struct statfs64 __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1292: FILE: include/trace/events/syscalls.h:1193:
+#define ENTERCASEfstatfs64 create_syscall_enter(3, fstatfs64, unsigned int, size_t, struct statfs64 __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEfstatfs64>
#1293: FILE: include/trace/events/syscalls.h:1194:
+#define EXITCASEfstatfs64 create_syscall_exit(fstatfs64);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1293: FILE: include/trace/events/syscalls.h:1194:
+#define EXITCASEfstatfs64 create_syscall_exit(fstatfs64);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#1300: FILE: include/trace/events/syscalls.h:1201:
+trace_event_syscall_enter(2, lstat, char __user *, filename, struct __old_kernel_stat __user *, statbuf);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1302: FILE: include/trace/events/syscalls.h:1203:
+#define ENTERCASElstat create_syscall_enter(2, lstat, char __user *, struct __old_kernel_stat __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASElstat>
#1302: FILE: include/trace/events/syscalls.h:1203:
+#define ENTERCASElstat create_syscall_enter(2, lstat, char __user *, struct __old_kernel_stat __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1302: FILE: include/trace/events/syscalls.h:1203:
+#define ENTERCASElstat create_syscall_enter(2, lstat, char __user *, struct __old_kernel_stat __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASElstat>
#1303: FILE: include/trace/events/syscalls.h:1204:
+#define EXITCASElstat create_syscall_exit(lstat);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1303: FILE: include/trace/events/syscalls.h:1204:
+#define EXITCASElstat create_syscall_exit(lstat);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1312: FILE: include/trace/events/syscalls.h:1213:
+#define ENTERCASEfstat create_syscall_enter(2, fstat, unsigned int, struct __old_kernel_stat __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEfstat>
#1312: FILE: include/trace/events/syscalls.h:1213:
+#define ENTERCASEfstat create_syscall_enter(2, fstat, unsigned int, struct __old_kernel_stat __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1312: FILE: include/trace/events/syscalls.h:1213:
+#define ENTERCASEfstat create_syscall_enter(2, fstat, unsigned int, struct __old_kernel_stat __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEfstat>
#1313: FILE: include/trace/events/syscalls.h:1214:
+#define EXITCASEfstat create_syscall_exit(fstat);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1313: FILE: include/trace/events/syscalls.h:1214:
+#define EXITCASEfstat create_syscall_exit(fstat);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEnewstat>
#1322: FILE: include/trace/events/syscalls.h:1223:
+#define ENTERCASEnewstat create_syscall_enter(2, newstat, char __user *, struct stat __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1322: FILE: include/trace/events/syscalls.h:1223:
+#define ENTERCASEnewstat create_syscall_enter(2, newstat, char __user *, struct stat __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEnewstat>
#1323: FILE: include/trace/events/syscalls.h:1224:
+#define EXITCASEnewstat create_syscall_exit(newstat);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1323: FILE: include/trace/events/syscalls.h:1224:
+#define EXITCASEnewstat create_syscall_exit(newstat);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEnewlstat>
#1332: FILE: include/trace/events/syscalls.h:1233:
+#define ENTERCASEnewlstat create_syscall_enter(2, newlstat,  char __user *, struct stat __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1332: FILE: include/trace/events/syscalls.h:1233:
+#define ENTERCASEnewlstat create_syscall_enter(2, newlstat,  char __user *, struct stat __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEnewlstat>
#1333: FILE: include/trace/events/syscalls.h:1234:
+#define EXITCASEnewlstat create_syscall_exit(newlstat);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1333: FILE: include/trace/events/syscalls.h:1234:
+#define EXITCASEnewlstat create_syscall_exit(newlstat);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEnewfstat>
#1342: FILE: include/trace/events/syscalls.h:1243:
+#define ENTERCASEnewfstat create_syscall_enter(2, newfstat, unsigned int, struct stat __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1342: FILE: include/trace/events/syscalls.h:1243:
+#define ENTERCASEnewfstat create_syscall_enter(2, newfstat, unsigned int, struct stat __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEnewfstat>
#1343: FILE: include/trace/events/syscalls.h:1244:
+#define EXITCASEnewfstat create_syscall_exit(newfstat);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1343: FILE: include/trace/events/syscalls.h:1244:
+#define EXITCASEnewfstat create_syscall_exit(newfstat);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1350: FILE: include/trace/events/syscalls.h:1251:
+trace_event_syscall_enter(2, ustat, unsigned, dev, struct ustat __user *, ubuf);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1352: FILE: include/trace/events/syscalls.h:1253:
+#define ENTERCASEustat create_syscall_enter(2, ustat, unsigned, struct ustat __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEustat>
#1352: FILE: include/trace/events/syscalls.h:1253:
+#define ENTERCASEustat create_syscall_enter(2, ustat, unsigned, struct ustat __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1352: FILE: include/trace/events/syscalls.h:1253:
+#define ENTERCASEustat create_syscall_enter(2, ustat, unsigned, struct ustat __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEustat>
#1353: FILE: include/trace/events/syscalls.h:1254:
+#define EXITCASEustat create_syscall_exit(ustat);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1353: FILE: include/trace/events/syscalls.h:1254:
+#define EXITCASEustat create_syscall_exit(ustat);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEstat64>
#1362: FILE: include/trace/events/syscalls.h:1263:
+#define ENTERCASEstat64 create_syscall_enter(2, stat64, char __user *, struct stat64 __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1362: FILE: include/trace/events/syscalls.h:1263:
+#define ENTERCASEstat64 create_syscall_enter(2, stat64, char __user *, struct stat64 __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEstat64>
#1363: FILE: include/trace/events/syscalls.h:1264:
+#define EXITCASEstat64 create_syscall_exit(stat64);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1363: FILE: include/trace/events/syscalls.h:1264:
+#define EXITCASEstat64 create_syscall_exit(stat64);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEfstat64>
#1372: FILE: include/trace/events/syscalls.h:1273:
+#define ENTERCASEfstat64 create_syscall_enter(2, fstat64, char __user *, struct stat64 __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1372: FILE: include/trace/events/syscalls.h:1273:
+#define ENTERCASEfstat64 create_syscall_enter(2, fstat64, char __user *, struct stat64 __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEfstat64>
#1373: FILE: include/trace/events/syscalls.h:1274:
+#define EXITCASEfstat64 create_syscall_exit(fstat64);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1373: FILE: include/trace/events/syscalls.h:1274:
+#define EXITCASEfstat64 create_syscall_exit(fstat64);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASElstat64>
#1382: FILE: include/trace/events/syscalls.h:1283:
+#define ENTERCASElstat64 create_syscall_enter(2, lstat64, char __user *, struct stat64 __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1382: FILE: include/trace/events/syscalls.h:1283:
+#define ENTERCASElstat64 create_syscall_enter(2, lstat64, char __user *, struct stat64 __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASElstat64>
#1383: FILE: include/trace/events/syscalls.h:1284:
+#define EXITCASElstat64 create_syscall_exit(lstat64);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1383: FILE: include/trace/events/syscalls.h:1284:
+#define EXITCASElstat64 create_syscall_exit(lstat64);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEtruncate64>
#1392: FILE: include/trace/events/syscalls.h:1293:
+#define ENTERCASEtruncate64 create_syscall_enter(2, truncate64, const char __user *, loff_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1392: FILE: include/trace/events/syscalls.h:1293:
+#define ENTERCASEtruncate64 create_syscall_enter(2, truncate64, const char __user *, loff_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEtruncate64>
#1393: FILE: include/trace/events/syscalls.h:1294:
+#define EXITCASEtruncate64 create_syscall_exit(truncate64);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1393: FILE: include/trace/events/syscalls.h:1294:
+#define EXITCASEtruncate64 create_syscall_exit(truncate64);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEftruncate64>
#1402: FILE: include/trace/events/syscalls.h:1303:
+#define ENTERCASEftruncate64 create_syscall_enter(2, ftruncate64, unsigned int, loff_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1402: FILE: include/trace/events/syscalls.h:1303:
+#define ENTERCASEftruncate64 create_syscall_enter(2, ftruncate64, unsigned int, loff_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEftruncate64>
#1403: FILE: include/trace/events/syscalls.h:1304:
+#define EXITCASEftruncate64 create_syscall_exit(ftruncate64);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1403: FILE: include/trace/events/syscalls.h:1304:
+#define EXITCASEftruncate64 create_syscall_exit(ftruncate64);

WARNING:LONG_LINE: line length of 147 exceeds 100 columns
#1410: FILE: include/trace/events/syscalls.h:1311:
+trace_event_syscall_enter(5, setxattr, const char __user *, path, const char __user *, name, const void __user *, value, size_t, size, int, flags);

WARNING:LONG_LINE: line length of 136 exceeds 100 columns
#1412: FILE: include/trace/events/syscalls.h:1313:
+#define ENTERCASEsetxattr create_syscall_enter(5, setxattr, const char __user *, const char __user *, const void __user *, size_t, int);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsetxattr>
#1412: FILE: include/trace/events/syscalls.h:1313:
+#define ENTERCASEsetxattr create_syscall_enter(5, setxattr, const char __user *, const char __user *, const void __user *, size_t, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1412: FILE: include/trace/events/syscalls.h:1313:
+#define ENTERCASEsetxattr create_syscall_enter(5, setxattr, const char __user *, const char __user *, const void __user *, size_t, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsetxattr>
#1413: FILE: include/trace/events/syscalls.h:1314:
+#define EXITCASEsetxattr create_syscall_exit(setxattr);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1413: FILE: include/trace/events/syscalls.h:1314:
+#define EXITCASEsetxattr create_syscall_exit(setxattr);

WARNING:LONG_LINE: line length of 148 exceeds 100 columns
#1420: FILE: include/trace/events/syscalls.h:1321:
+trace_event_syscall_enter(5, lsetxattr, const char __user *, path, const char __user *, name, const void __user *, value, size_t, size, int, flags);

WARNING:LONG_LINE: line length of 138 exceeds 100 columns
#1422: FILE: include/trace/events/syscalls.h:1323:
+#define ENTERCASElsetxattr create_syscall_enter(5, lsetxattr, const char __user *, const char __user *, const void __user *, size_t, int);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASElsetxattr>
#1422: FILE: include/trace/events/syscalls.h:1323:
+#define ENTERCASElsetxattr create_syscall_enter(5, lsetxattr, const char __user *, const char __user *, const void __user *, size_t, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1422: FILE: include/trace/events/syscalls.h:1323:
+#define ENTERCASElsetxattr create_syscall_enter(5, lsetxattr, const char __user *, const char __user *, const void __user *, size_t, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASElsetxattr>
#1423: FILE: include/trace/events/syscalls.h:1324:
+#define EXITCASElsetxattr create_syscall_exit(lsetxattr);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1423: FILE: include/trace/events/syscalls.h:1324:
+#define EXITCASElsetxattr create_syscall_exit(lsetxattr);

WARNING:LONG_LINE: line length of 130 exceeds 100 columns
#1430: FILE: include/trace/events/syscalls.h:1331:
+trace_event_syscall_enter(5, fsetxattr, int, fd, const char __user *, name, const void __user *, value, size_t, size, int, flags);

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#1432: FILE: include/trace/events/syscalls.h:1333:
+#define ENTERCASEfsetxattr create_syscall_enter(5, fsetxattr, int, const char __user *, const void __user *, size_t, int);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEfsetxattr>
#1432: FILE: include/trace/events/syscalls.h:1333:
+#define ENTERCASEfsetxattr create_syscall_enter(5, fsetxattr, int, const char __user *, const void __user *, size_t, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1432: FILE: include/trace/events/syscalls.h:1333:
+#define ENTERCASEfsetxattr create_syscall_enter(5, fsetxattr, int, const char __user *, const void __user *, size_t, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEfsetxattr>
#1433: FILE: include/trace/events/syscalls.h:1334:
+#define EXITCASEfsetxattr create_syscall_exit(fsetxattr);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1433: FILE: include/trace/events/syscalls.h:1334:
+#define EXITCASEfsetxattr create_syscall_exit(fsetxattr);

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#1440: FILE: include/trace/events/syscalls.h:1341:
+trace_event_syscall_enter(4, getxattr, const char __user *, path, const char __user *, name, void __user *, value, size_t, size);

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1442: FILE: include/trace/events/syscalls.h:1343:
+#define ENTERCASEgetxattr create_syscall_enter(4, getxattr, const char __user *, const char __user *, void __user *, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgetxattr>
#1442: FILE: include/trace/events/syscalls.h:1343:
+#define ENTERCASEgetxattr create_syscall_enter(4, getxattr, const char __user *, const char __user *, void __user *, size_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1442: FILE: include/trace/events/syscalls.h:1343:
+#define ENTERCASEgetxattr create_syscall_enter(4, getxattr, const char __user *, const char __user *, void __user *, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgetxattr>
#1443: FILE: include/trace/events/syscalls.h:1344:
+#define EXITCASEgetxattr create_syscall_exit(getxattr);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1443: FILE: include/trace/events/syscalls.h:1344:
+#define EXITCASEgetxattr create_syscall_exit(getxattr);

WARNING:LONG_LINE: line length of 130 exceeds 100 columns
#1450: FILE: include/trace/events/syscalls.h:1351:
+trace_event_syscall_enter(4, lgetxattr, const char __user *, path, const char __user *, name, void __user *, value, size_t, size);

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#1452: FILE: include/trace/events/syscalls.h:1353:
+#define ENTERCASElgetxattr create_syscall_enter(4, lgetxattr, const char __user *, const char __user *, void __user *, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASElgetxattr>
#1452: FILE: include/trace/events/syscalls.h:1353:
+#define ENTERCASElgetxattr create_syscall_enter(4, lgetxattr, const char __user *, const char __user *, void __user *, size_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1452: FILE: include/trace/events/syscalls.h:1353:
+#define ENTERCASElgetxattr create_syscall_enter(4, lgetxattr, const char __user *, const char __user *, void __user *, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASElgetxattr>
#1453: FILE: include/trace/events/syscalls.h:1354:
+#define EXITCASElgetxattr create_syscall_exit(lgetxattr);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1453: FILE: include/trace/events/syscalls.h:1354:
+#define EXITCASElgetxattr create_syscall_exit(lgetxattr);

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#1460: FILE: include/trace/events/syscalls.h:1361:
+trace_event_syscall_enter(4, fgetxattr, int, fd, const char __user *, name, void __user *, value, size_t, size);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#1462: FILE: include/trace/events/syscalls.h:1363:
+#define ENTERCASEfgetxattr create_syscall_enter(4, fgetxattr, int, const char __user *, void __user *, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEfgetxattr>
#1462: FILE: include/trace/events/syscalls.h:1363:
+#define ENTERCASEfgetxattr create_syscall_enter(4, fgetxattr, int, const char __user *, void __user *, size_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1462: FILE: include/trace/events/syscalls.h:1363:
+#define ENTERCASEfgetxattr create_syscall_enter(4, fgetxattr, int, const char __user *, void __user *, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEfgetxattr>
#1463: FILE: include/trace/events/syscalls.h:1364:
+#define EXITCASEfgetxattr create_syscall_exit(fgetxattr);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1463: FILE: include/trace/events/syscalls.h:1364:
+#define EXITCASEfgetxattr create_syscall_exit(fgetxattr);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1470: FILE: include/trace/events/syscalls.h:1371:
+trace_event_syscall_enter(3, listxattr, const char __user *, path, char __user *, list, size_t, size);

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1472: FILE: include/trace/events/syscalls.h:1373:
+#define ENTERCASElistxattr create_syscall_enter(3, listxattr, const char __user *, char __user *, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASElistxattr>
#1472: FILE: include/trace/events/syscalls.h:1373:
+#define ENTERCASElistxattr create_syscall_enter(3, listxattr, const char __user *, char __user *, size_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1472: FILE: include/trace/events/syscalls.h:1373:
+#define ENTERCASElistxattr create_syscall_enter(3, listxattr, const char __user *, char __user *, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASElistxattr>
#1473: FILE: include/trace/events/syscalls.h:1374:
+#define EXITCASElistxattr create_syscall_exit(listxattr);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1473: FILE: include/trace/events/syscalls.h:1374:
+#define EXITCASElistxattr create_syscall_exit(listxattr);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1480: FILE: include/trace/events/syscalls.h:1381:
+trace_event_syscall_enter(3, llistxattr, const char __user *, path, char __user *, list, size_t, size);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#1482: FILE: include/trace/events/syscalls.h:1383:
+#define ENTERCASEllistxattr create_syscall_enter(3, llistxattr, const char __user *, char __user *, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEllistxattr>
#1482: FILE: include/trace/events/syscalls.h:1383:
+#define ENTERCASEllistxattr create_syscall_enter(3, llistxattr, const char __user *, char __user *, size_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1482: FILE: include/trace/events/syscalls.h:1383:
+#define ENTERCASEllistxattr create_syscall_enter(3, llistxattr, const char __user *, char __user *, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEllistxattr>
#1483: FILE: include/trace/events/syscalls.h:1384:
+#define EXITCASEllistxattr create_syscall_exit(llistxattr);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1483: FILE: include/trace/events/syscalls.h:1384:
+#define EXITCASEllistxattr create_syscall_exit(llistxattr);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEflistxattr>
#1492: FILE: include/trace/events/syscalls.h:1393:
+#define ENTERCASEflistxattr create_syscall_enter(3, flistxattr, int, char __user *, size_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1492: FILE: include/trace/events/syscalls.h:1393:
+#define ENTERCASEflistxattr create_syscall_enter(3, flistxattr, int, char __user *, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEflistxattr>
#1493: FILE: include/trace/events/syscalls.h:1394:
+#define EXITCASEflistxattr create_syscall_exit(flistxattr);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1493: FILE: include/trace/events/syscalls.h:1394:
+#define EXITCASEflistxattr create_syscall_exit(flistxattr);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#1502: FILE: include/trace/events/syscalls.h:1403:
+#define ENTERCASEremovexattr create_syscall_enter(2, removexattr, const char __user *, const char __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEremovexattr>
#1502: FILE: include/trace/events/syscalls.h:1403:
+#define ENTERCASEremovexattr create_syscall_enter(2, removexattr, const char __user *, const char __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1502: FILE: include/trace/events/syscalls.h:1403:
+#define ENTERCASEremovexattr create_syscall_enter(2, removexattr, const char __user *, const char __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEremovexattr>
#1503: FILE: include/trace/events/syscalls.h:1404:
+#define EXITCASEremovexattr create_syscall_exit(removexattr);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1503: FILE: include/trace/events/syscalls.h:1404:
+#define EXITCASEremovexattr create_syscall_exit(removexattr);

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#1512: FILE: include/trace/events/syscalls.h:1413:
+#define ENTERCASElremovexattr create_syscall_enter(2, lremovexattr, const char __user *, const char __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASElremovexattr>
#1512: FILE: include/trace/events/syscalls.h:1413:
+#define ENTERCASElremovexattr create_syscall_enter(2, lremovexattr, const char __user *, const char __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1512: FILE: include/trace/events/syscalls.h:1413:
+#define ENTERCASElremovexattr create_syscall_enter(2, lremovexattr, const char __user *, const char __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASElremovexattr>
#1513: FILE: include/trace/events/syscalls.h:1414:
+#define EXITCASElremovexattr create_syscall_exit(lremovexattr);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1513: FILE: include/trace/events/syscalls.h:1414:
+#define EXITCASElremovexattr create_syscall_exit(lremovexattr);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEfremovexattr>
#1522: FILE: include/trace/events/syscalls.h:1423:
+#define ENTERCASEfremovexattr create_syscall_enter(2, fremovexattr, int, const char __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1522: FILE: include/trace/events/syscalls.h:1423:
+#define ENTERCASEfremovexattr create_syscall_enter(2, fremovexattr, int, const char __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEfremovexattr>
#1523: FILE: include/trace/events/syscalls.h:1424:
+#define EXITCASEfremovexattr create_syscall_exit(fremovexattr);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1523: FILE: include/trace/events/syscalls.h:1424:
+#define EXITCASEfremovexattr create_syscall_exit(fremovexattr);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEbrk>
#1532: FILE: include/trace/events/syscalls.h:1433:
+#define ENTERCASEbrk create_syscall_enter(1, brk, unsigned long);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1532: FILE: include/trace/events/syscalls.h:1433:
+#define ENTERCASEbrk create_syscall_enter(1, brk, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEbrk>
#1533: FILE: include/trace/events/syscalls.h:1434:
+#define EXITCASEbrk create_syscall_exit(brk);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1533: FILE: include/trace/events/syscalls.h:1434:
+#define EXITCASEbrk create_syscall_exit(brk);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEmprotect>
#1542: FILE: include/trace/events/syscalls.h:1443:
+#define ENTERCASEmprotect create_syscall_enter(3, mprotect, unsigned long, size_t, unsigned long);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1542: FILE: include/trace/events/syscalls.h:1443:
+#define ENTERCASEmprotect create_syscall_enter(3, mprotect, unsigned long, size_t, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEmprotect>
#1543: FILE: include/trace/events/syscalls.h:1444:
+#define EXITCASEmprotect create_syscall_exit(mprotect);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1543: FILE: include/trace/events/syscalls.h:1444:
+#define EXITCASEmprotect create_syscall_exit(mprotect);

WARNING:LONG_LINE: line length of 153 exceeds 100 columns
#1550: FILE: include/trace/events/syscalls.h:1451:
+trace_event_syscall_enter(5, mremap, unsigned long, addr, unsigned long, old_len, unsigned long, new_len, unsigned long, flags, unsigned long, new_addr);

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#1552: FILE: include/trace/events/syscalls.h:1453:
+#define ENTERCASEmremap create_syscall_enter(5, mremap, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEmremap>
#1552: FILE: include/trace/events/syscalls.h:1453:
+#define ENTERCASEmremap create_syscall_enter(5, mremap, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1552: FILE: include/trace/events/syscalls.h:1453:
+#define ENTERCASEmremap create_syscall_enter(5, mremap, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEmremap>
#1553: FILE: include/trace/events/syscalls.h:1454:
+#define EXITCASEmremap create_syscall_exit(mremap);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1553: FILE: include/trace/events/syscalls.h:1454:
+#define EXITCASEmremap create_syscall_exit(mremap);

WARNING:LONG_LINE: line length of 155 exceeds 100 columns
#1560: FILE: include/trace/events/syscalls.h:1461:
+trace_event_syscall_enter(5, remap_file_pages, unsigned long, start, unsigned long, size, unsigned long, prot, unsigned long, pgoff, unsigned long, flags);

WARNING:LONG_LINE: line length of 151 exceeds 100 columns
#1562: FILE: include/trace/events/syscalls.h:1463:
+#define ENTERCASEremap_file_pages create_syscall_enter(5, remap_file_pages, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEremap_file_pages>
#1562: FILE: include/trace/events/syscalls.h:1463:
+#define ENTERCASEremap_file_pages create_syscall_enter(5, remap_file_pages, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1562: FILE: include/trace/events/syscalls.h:1463:
+#define ENTERCASEremap_file_pages create_syscall_enter(5, remap_file_pages, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEremap_file_pages>
#1563: FILE: include/trace/events/syscalls.h:1464:
+#define EXITCASEremap_file_pages create_syscall_exit(remap_file_pages);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1563: FILE: include/trace/events/syscalls.h:1464:
+#define EXITCASEremap_file_pages create_syscall_exit(remap_file_pages);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEmsync>
#1572: FILE: include/trace/events/syscalls.h:1473:
+#define ENTERCASEmsync create_syscall_enter(3, msync, unsigned long, size_t, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1572: FILE: include/trace/events/syscalls.h:1473:
+#define ENTERCASEmsync create_syscall_enter(3, msync, unsigned long, size_t, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEmsync>
#1573: FILE: include/trace/events/syscalls.h:1474:
+#define EXITCASEmsync create_syscall_exit(msync);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1573: FILE: include/trace/events/syscalls.h:1474:
+#define EXITCASEmsync create_syscall_exit(msync);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEfadvise64>
#1582: FILE: include/trace/events/syscalls.h:1483:
+#define ENTERCASEfadvise64 create_syscall_enter(4, fadvise64, int, loff_t, size_t, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1582: FILE: include/trace/events/syscalls.h:1483:
+#define ENTERCASEfadvise64 create_syscall_enter(4, fadvise64, int, loff_t, size_t, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEfadvise64>
#1583: FILE: include/trace/events/syscalls.h:1484:
+#define EXITCASEfadvise64 create_syscall_exit(fadvise64);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1583: FILE: include/trace/events/syscalls.h:1484:
+#define EXITCASEfadvise64 create_syscall_exit(fadvise64);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEfadvise64_64>
#1592: FILE: include/trace/events/syscalls.h:1493:
+#define ENTERCASEfadvise64_64 create_syscall_enter(4, fadvise64_64, int, loff_t, loff_t, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1592: FILE: include/trace/events/syscalls.h:1493:
+#define ENTERCASEfadvise64_64 create_syscall_enter(4, fadvise64_64, int, loff_t, loff_t, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEfadvise64_64>
#1593: FILE: include/trace/events/syscalls.h:1494:
+#define EXITCASEfadvise64_64 create_syscall_exit(fadvise64_64);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1593: FILE: include/trace/events/syscalls.h:1494:
+#define EXITCASEfadvise64_64 create_syscall_exit(fadvise64_64);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEmunmap>
#1602: FILE: include/trace/events/syscalls.h:1503:
+#define ENTERCASEmunmap create_syscall_enter(2, munmap, unsigned long, size_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1602: FILE: include/trace/events/syscalls.h:1503:
+#define ENTERCASEmunmap create_syscall_enter(2, munmap, unsigned long, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEmunmap>
#1603: FILE: include/trace/events/syscalls.h:1504:
+#define EXITCASEmunmap create_syscall_exit(munmap);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1603: FILE: include/trace/events/syscalls.h:1504:
+#define EXITCASEmunmap create_syscall_exit(munmap);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEmlock>
#1612: FILE: include/trace/events/syscalls.h:1513:
+#define ENTERCASEmlock create_syscall_enter(2, mlock, unsigned long, size_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1612: FILE: include/trace/events/syscalls.h:1513:
+#define ENTERCASEmlock create_syscall_enter(2, mlock, unsigned long, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEmlock>
#1613: FILE: include/trace/events/syscalls.h:1514:
+#define EXITCASEmlock create_syscall_exit(mlock);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1613: FILE: include/trace/events/syscalls.h:1514:
+#define EXITCASEmlock create_syscall_exit(mlock);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEmunlock>
#1622: FILE: include/trace/events/syscalls.h:1523:
+#define ENTERCASEmunlock create_syscall_enter(2, munlock, unsigned long, size_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1622: FILE: include/trace/events/syscalls.h:1523:
+#define ENTERCASEmunlock create_syscall_enter(2, munlock, unsigned long, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEmunlock>
#1623: FILE: include/trace/events/syscalls.h:1524:
+#define EXITCASEmunlock create_syscall_exit(munlock);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1623: FILE: include/trace/events/syscalls.h:1524:
+#define EXITCASEmunlock create_syscall_exit(munlock);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEmlockall>
#1632: FILE: include/trace/events/syscalls.h:1533:
+#define ENTERCASEmlockall create_syscall_enter(1, mlockall, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1632: FILE: include/trace/events/syscalls.h:1533:
+#define ENTERCASEmlockall create_syscall_enter(1, mlockall, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEmlockall>
#1633: FILE: include/trace/events/syscalls.h:1534:
+#define EXITCASEmlockall create_syscall_exit(mlockall);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1633: FILE: include/trace/events/syscalls.h:1534:
+#define EXITCASEmlockall create_syscall_exit(mlockall);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEmunlockall>
#1642: FILE: include/trace/events/syscalls.h:1543:
+#define ENTERCASEmunlockall create_syscall_enter(0, munlockall);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1642: FILE: include/trace/events/syscalls.h:1543:
+#define ENTERCASEmunlockall create_syscall_enter(0, munlockall);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEmunlockall>
#1643: FILE: include/trace/events/syscalls.h:1544:
+#define EXITCASEmunlockall create_syscall_exit(munlockall);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1643: FILE: include/trace/events/syscalls.h:1544:
+#define EXITCASEmunlockall create_syscall_exit(munlockall);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEmadvise>
#1652: FILE: include/trace/events/syscalls.h:1553:
+#define ENTERCASEmadvise create_syscall_enter(3, madvise, unsigned long, size_t, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1652: FILE: include/trace/events/syscalls.h:1553:
+#define ENTERCASEmadvise create_syscall_enter(3, madvise, unsigned long, size_t, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEmadvise>
#1653: FILE: include/trace/events/syscalls.h:1554:
+#define EXITCASEmadvise create_syscall_exit(madvise);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1653: FILE: include/trace/events/syscalls.h:1554:
+#define EXITCASEmadvise create_syscall_exit(madvise);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1660: FILE: include/trace/events/syscalls.h:1561:
+trace_event_syscall_enter(3, mincore, unsigned long, start, size_t, len, unsigned char __user *, vec);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#1662: FILE: include/trace/events/syscalls.h:1563:
+#define ENTERCASEmincore create_syscall_enter(3, mincore, unsigned long, size_t, unsigned char __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEmincore>
#1662: FILE: include/trace/events/syscalls.h:1563:
+#define ENTERCASEmincore create_syscall_enter(3, mincore, unsigned long, size_t, unsigned char __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1662: FILE: include/trace/events/syscalls.h:1563:
+#define ENTERCASEmincore create_syscall_enter(3, mincore, unsigned long, size_t, unsigned char __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEmincore>
#1663: FILE: include/trace/events/syscalls.h:1564:
+#define EXITCASEmincore create_syscall_exit(mincore);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1663: FILE: include/trace/events/syscalls.h:1564:
+#define EXITCASEmincore create_syscall_exit(mincore);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1670: FILE: include/trace/events/syscalls.h:1571:
+trace_event_syscall_enter(2, pivot_root, const char __user *, new_root, const char __user *, put_old);

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1672: FILE: include/trace/events/syscalls.h:1573:
+#define ENTERCASEpivot_root create_syscall_enter(2, pivot_root, const char __user *, const char __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEpivot_root>
#1672: FILE: include/trace/events/syscalls.h:1573:
+#define ENTERCASEpivot_root create_syscall_enter(2, pivot_root, const char __user *, const char __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1672: FILE: include/trace/events/syscalls.h:1573:
+#define ENTERCASEpivot_root create_syscall_enter(2, pivot_root, const char __user *, const char __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEpivot_root>
#1673: FILE: include/trace/events/syscalls.h:1574:
+#define EXITCASEpivot_root create_syscall_exit(pivot_root);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1673: FILE: include/trace/events/syscalls.h:1574:
+#define EXITCASEpivot_root create_syscall_exit(pivot_root);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEchroot>
#1682: FILE: include/trace/events/syscalls.h:1583:
+#define ENTERCASEchroot create_syscall_enter(1, chroot, const char __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1682: FILE: include/trace/events/syscalls.h:1583:
+#define ENTERCASEchroot create_syscall_enter(1, chroot, const char __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEchroot>
#1683: FILE: include/trace/events/syscalls.h:1584:
+#define EXITCASEchroot create_syscall_exit(chroot);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1683: FILE: include/trace/events/syscalls.h:1584:
+#define EXITCASEchroot create_syscall_exit(chroot);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1690: FILE: include/trace/events/syscalls.h:1591:
+trace_event_syscall_enter(3, mknod, const char __user *, filename, int, mode, unsigned, dev);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1692: FILE: include/trace/events/syscalls.h:1593:
+#define ENTERCASEmknod create_syscall_enter(3, mknod, const char __user *, int, unsigned);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEmknod>
#1692: FILE: include/trace/events/syscalls.h:1593:
+#define ENTERCASEmknod create_syscall_enter(3, mknod, const char __user *, int, unsigned);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1692: FILE: include/trace/events/syscalls.h:1593:
+#define ENTERCASEmknod create_syscall_enter(3, mknod, const char __user *, int, unsigned);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEmknod>
#1693: FILE: include/trace/events/syscalls.h:1594:
+#define EXITCASEmknod create_syscall_exit(mknod);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1693: FILE: include/trace/events/syscalls.h:1594:
+#define EXITCASEmknod create_syscall_exit(mknod);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASElink>
#1702: FILE: include/trace/events/syscalls.h:1603:
+#define ENTERCASElink create_syscall_enter(2, link, const char __user *, const char __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1702: FILE: include/trace/events/syscalls.h:1603:
+#define ENTERCASElink create_syscall_enter(2, link, const char __user *, const char __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASElink>
#1703: FILE: include/trace/events/syscalls.h:1604:
+#define EXITCASElink create_syscall_exit(link);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1703: FILE: include/trace/events/syscalls.h:1604:
+#define EXITCASElink create_syscall_exit(link);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsymlink>
#1712: FILE: include/trace/events/syscalls.h:1613:
+#define ENTERCASEsymlink create_syscall_enter(2, symlink, const char __user *, const char __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1712: FILE: include/trace/events/syscalls.h:1613:
+#define ENTERCASEsymlink create_syscall_enter(2, symlink, const char __user *, const char __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsymlink>
#1713: FILE: include/trace/events/syscalls.h:1614:
+#define EXITCASEsymlink create_syscall_exit(symlink);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1713: FILE: include/trace/events/syscalls.h:1614:
+#define EXITCASEsymlink create_syscall_exit(symlink);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEunlink>
#1722: FILE: include/trace/events/syscalls.h:1623:
+#define ENTERCASEunlink create_syscall_enter(1, unlink, const char __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1722: FILE: include/trace/events/syscalls.h:1623:
+#define ENTERCASEunlink create_syscall_enter(1, unlink, const char __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEunlink>
#1723: FILE: include/trace/events/syscalls.h:1624:
+#define EXITCASEunlink create_syscall_exit(unlink);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1723: FILE: include/trace/events/syscalls.h:1624:
+#define EXITCASEunlink create_syscall_exit(unlink);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASErename>
#1732: FILE: include/trace/events/syscalls.h:1633:
+#define ENTERCASErename create_syscall_enter(2, rename, const char __user *, const char __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1732: FILE: include/trace/events/syscalls.h:1633:
+#define ENTERCASErename create_syscall_enter(2, rename, const char __user *, const char __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASErename>
#1733: FILE: include/trace/events/syscalls.h:1634:
+#define EXITCASErename create_syscall_exit(rename);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1733: FILE: include/trace/events/syscalls.h:1634:
+#define EXITCASErename create_syscall_exit(rename);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEchmod>
#1742: FILE: include/trace/events/syscalls.h:1643:
+#define ENTERCASEchmod create_syscall_enter(2, chmod, const char __user *, mode_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1742: FILE: include/trace/events/syscalls.h:1643:
+#define ENTERCASEchmod create_syscall_enter(2, chmod, const char __user *, mode_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEchmod>
#1743: FILE: include/trace/events/syscalls.h:1644:
+#define EXITCASEchmod create_syscall_exit(chmod);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1743: FILE: include/trace/events/syscalls.h:1644:
+#define EXITCASEchmod create_syscall_exit(chmod);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEfchmod>
#1752: FILE: include/trace/events/syscalls.h:1653:
+#define ENTERCASEfchmod create_syscall_enter(2, fchmod, unsigned int, mode_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1752: FILE: include/trace/events/syscalls.h:1653:
+#define ENTERCASEfchmod create_syscall_enter(2, fchmod, unsigned int, mode_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEfchmod>
#1753: FILE: include/trace/events/syscalls.h:1654:
+#define EXITCASEfchmod create_syscall_exit(fchmod);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1753: FILE: include/trace/events/syscalls.h:1654:
+#define EXITCASEfchmod create_syscall_exit(fchmod);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEfcntl>
#1762: FILE: include/trace/events/syscalls.h:1663:
+#define ENTERCASEfcntl create_syscall_enter(3, fcntl, unsigned int, unsigned int, unsigned long);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1762: FILE: include/trace/events/syscalls.h:1663:
+#define ENTERCASEfcntl create_syscall_enter(3, fcntl, unsigned int, unsigned int, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEfcntl>
#1763: FILE: include/trace/events/syscalls.h:1664:
+#define EXITCASEfcntl create_syscall_exit(fcntl);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1763: FILE: include/trace/events/syscalls.h:1664:
+#define EXITCASEfcntl create_syscall_exit(fcntl);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1772: FILE: include/trace/events/syscalls.h:1673:
+#define ENTERCASEfcntl64 create_syscall_enter(3, fcntl64, unsigned int, unsigned int, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEfcntl64>
#1772: FILE: include/trace/events/syscalls.h:1673:
+#define ENTERCASEfcntl64 create_syscall_enter(3, fcntl64, unsigned int, unsigned int, unsigned long);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1772: FILE: include/trace/events/syscalls.h:1673:
+#define ENTERCASEfcntl64 create_syscall_enter(3, fcntl64, unsigned int, unsigned int, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEfcntl64>
#1773: FILE: include/trace/events/syscalls.h:1674:
+#define EXITCASEfcntl64 create_syscall_exit(fcntl64);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1773: FILE: include/trace/events/syscalls.h:1674:
+#define EXITCASEfcntl64 create_syscall_exit(fcntl64);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEdup>
#1782: FILE: include/trace/events/syscalls.h:1683:
+#define ENTERCASEdup create_syscall_enter(1, dup, unsigned int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1782: FILE: include/trace/events/syscalls.h:1683:
+#define ENTERCASEdup create_syscall_enter(1, dup, unsigned int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEdup>
#1783: FILE: include/trace/events/syscalls.h:1684:
+#define EXITCASEdup create_syscall_exit(dup);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1783: FILE: include/trace/events/syscalls.h:1684:
+#define EXITCASEdup create_syscall_exit(dup);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEdup2>
#1792: FILE: include/trace/events/syscalls.h:1693:
+#define ENTERCASEdup2 create_syscall_enter(2, dup2, unsigned int, unsigned int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1792: FILE: include/trace/events/syscalls.h:1693:
+#define ENTERCASEdup2 create_syscall_enter(2, dup2, unsigned int, unsigned int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEdup2>
#1793: FILE: include/trace/events/syscalls.h:1694:
+#define EXITCASEdup2 create_syscall_exit(dup2);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1793: FILE: include/trace/events/syscalls.h:1694:
+#define EXITCASEdup2 create_syscall_exit(dup2);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEdup3>
#1802: FILE: include/trace/events/syscalls.h:1703:
+#define ENTERCASEdup3 create_syscall_enter(3, dup3, unsigned int, unsigned int, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1802: FILE: include/trace/events/syscalls.h:1703:
+#define ENTERCASEdup3 create_syscall_enter(3, dup3, unsigned int, unsigned int, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEdup3>
#1803: FILE: include/trace/events/syscalls.h:1704:
+#define EXITCASEdup3 create_syscall_exit(dup3);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1803: FILE: include/trace/events/syscalls.h:1704:
+#define EXITCASEdup3 create_syscall_exit(dup3);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEioperm>
#1812: FILE: include/trace/events/syscalls.h:1713:
+#define ENTERCASEioperm create_syscall_enter(3, ioperm, unsigned long, unsigned long, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1812: FILE: include/trace/events/syscalls.h:1713:
+#define ENTERCASEioperm create_syscall_enter(3, ioperm, unsigned long, unsigned long, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEioperm>
#1813: FILE: include/trace/events/syscalls.h:1714:
+#define EXITCASEioperm create_syscall_exit(ioperm);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1813: FILE: include/trace/events/syscalls.h:1714:
+#define EXITCASEioperm create_syscall_exit(ioperm);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEioctl>
#1822: FILE: include/trace/events/syscalls.h:1723:
+#define ENTERCASEioctl create_syscall_enter(3, ioctl, unsigned int, unsigned int, unsigned long);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1822: FILE: include/trace/events/syscalls.h:1723:
+#define ENTERCASEioctl create_syscall_enter(3, ioctl, unsigned int, unsigned int, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEioctl>
#1823: FILE: include/trace/events/syscalls.h:1724:
+#define EXITCASEioctl create_syscall_exit(ioctl);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1823: FILE: include/trace/events/syscalls.h:1724:
+#define EXITCASEioctl create_syscall_exit(ioctl);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEflock>
#1832: FILE: include/trace/events/syscalls.h:1733:
+#define ENTERCASEflock create_syscall_enter(2, flock, unsigned int, unsigned int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1832: FILE: include/trace/events/syscalls.h:1733:
+#define ENTERCASEflock create_syscall_enter(2, flock, unsigned int, unsigned int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEflock>
#1833: FILE: include/trace/events/syscalls.h:1734:
+#define EXITCASEflock create_syscall_exit(flock);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1833: FILE: include/trace/events/syscalls.h:1734:
+#define EXITCASEflock create_syscall_exit(flock);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1840: FILE: include/trace/events/syscalls.h:1741:
+trace_event_syscall_enter(2, io_setup, unsigned, nr_reqs, aio_context_t __user *, ctx);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1842: FILE: include/trace/events/syscalls.h:1743:
+#define ENTERCASEio_setup create_syscall_enter(2, io_setup, unsigned, aio_context_t __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEio_setup>
#1842: FILE: include/trace/events/syscalls.h:1743:
+#define ENTERCASEio_setup create_syscall_enter(2, io_setup, unsigned, aio_context_t __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1842: FILE: include/trace/events/syscalls.h:1743:
+#define ENTERCASEio_setup create_syscall_enter(2, io_setup, unsigned, aio_context_t __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEio_setup>
#1843: FILE: include/trace/events/syscalls.h:1744:
+#define EXITCASEio_setup create_syscall_exit(io_setup);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1843: FILE: include/trace/events/syscalls.h:1744:
+#define EXITCASEio_setup create_syscall_exit(io_setup);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEio_destroy>
#1852: FILE: include/trace/events/syscalls.h:1753:
+#define ENTERCASEio_destroy create_syscall_enter(1, io_destroy, aio_context_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1852: FILE: include/trace/events/syscalls.h:1753:
+#define ENTERCASEio_destroy create_syscall_enter(1, io_destroy, aio_context_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEio_destroy>
#1853: FILE: include/trace/events/syscalls.h:1754:
+#define EXITCASEio_destroy create_syscall_exit(io_destroy);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1853: FILE: include/trace/events/syscalls.h:1754:
+#define EXITCASEio_destroy create_syscall_exit(io_destroy);

WARNING:LONG_LINE: line length of 159 exceeds 100 columns
#1860: FILE: include/trace/events/syscalls.h:1761:
+trace_event_syscall_enter(5, io_getevents, aio_context_t, ctx_id, long, min_nr, long, nr, struct io_event __user *, events, struct timespec __user *, timeout);

WARNING:LONG_LINE: line length of 147 exceeds 100 columns
#1862: FILE: include/trace/events/syscalls.h:1763:
+#define ENTERCASEio_getevents create_syscall_enter(5, io_getevents, aio_context_t, long, long, struct io_event __user *, struct timespec __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEio_getevents>
#1862: FILE: include/trace/events/syscalls.h:1763:
+#define ENTERCASEio_getevents create_syscall_enter(5, io_getevents, aio_context_t, long, long, struct io_event __user *, struct timespec __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1862: FILE: include/trace/events/syscalls.h:1763:
+#define ENTERCASEio_getevents create_syscall_enter(5, io_getevents, aio_context_t, long, long, struct io_event __user *, struct timespec __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEio_getevents>
#1863: FILE: include/trace/events/syscalls.h:1764:
+#define EXITCASEio_getevents create_syscall_exit(io_getevents);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1863: FILE: include/trace/events/syscalls.h:1764:
+#define EXITCASEio_getevents create_syscall_exit(io_getevents);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#1870: FILE: include/trace/events/syscalls.h:1771:
+trace_event_syscall_enter(3, io_submit, aio_context_t, ctx, long, nr, struct iocb __user * __user *, iocb);

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#1872: FILE: include/trace/events/syscalls.h:1773:
+#define ENTERCASEio_submit create_syscall_enter(3, io_submit, aio_context_t, long, struct iocb __user * __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEio_submit>
#1872: FILE: include/trace/events/syscalls.h:1773:
+#define ENTERCASEio_submit create_syscall_enter(3, io_submit, aio_context_t, long, struct iocb __user * __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1872: FILE: include/trace/events/syscalls.h:1773:
+#define ENTERCASEio_submit create_syscall_enter(3, io_submit, aio_context_t, long, struct iocb __user * __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEio_submit>
#1873: FILE: include/trace/events/syscalls.h:1774:
+#define EXITCASEio_submit create_syscall_exit(io_submit);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1873: FILE: include/trace/events/syscalls.h:1774:
+#define EXITCASEio_submit create_syscall_exit(io_submit);

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1880: FILE: include/trace/events/syscalls.h:1781:
+trace_event_syscall_enter(3, io_cancel, aio_context_t, ctx_id, struct iocb __user *, iocb, struct io_event __user *, result);

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1882: FILE: include/trace/events/syscalls.h:1783:
+#define ENTERCASEio_cancel create_syscall_enter(3, io_cancel, aio_context_t, struct iocb __user *, struct io_event __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEio_cancel>
#1882: FILE: include/trace/events/syscalls.h:1783:
+#define ENTERCASEio_cancel create_syscall_enter(3, io_cancel, aio_context_t, struct iocb __user *, struct io_event __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1882: FILE: include/trace/events/syscalls.h:1783:
+#define ENTERCASEio_cancel create_syscall_enter(3, io_cancel, aio_context_t, struct iocb __user *, struct io_event __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEio_cancel>
#1883: FILE: include/trace/events/syscalls.h:1784:
+#define EXITCASEio_cancel create_syscall_exit(io_cancel);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1883: FILE: include/trace/events/syscalls.h:1784:
+#define EXITCASEio_cancel create_syscall_exit(io_cancel);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1890: FILE: include/trace/events/syscalls.h:1791:
+trace_event_syscall_enter(4, sendfile, int, out_fd, int, in_fd, off_t __user *, offset, size_t, count);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsendfile>
#1892: FILE: include/trace/events/syscalls.h:1793:
+#define ENTERCASEsendfile create_syscall_enter(4, sendfile, int, int, off_t __user *, size_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1892: FILE: include/trace/events/syscalls.h:1793:
+#define ENTERCASEsendfile create_syscall_enter(4, sendfile, int, int, off_t __user *, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsendfile>
#1893: FILE: include/trace/events/syscalls.h:1794:
+#define EXITCASEsendfile create_syscall_exit(sendfile);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1893: FILE: include/trace/events/syscalls.h:1794:
+#define EXITCASEsendfile create_syscall_exit(sendfile);

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1900: FILE: include/trace/events/syscalls.h:1801:
+trace_event_syscall_enter(4, sendfile64, int, out_fd, int, in_fd, loff_t __user *, offset, size_t, count);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsendfile64>
#1902: FILE: include/trace/events/syscalls.h:1803:
+#define ENTERCASEsendfile64 create_syscall_enter(4, sendfile64, int, int, loff_t __user *, size_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1902: FILE: include/trace/events/syscalls.h:1803:
+#define ENTERCASEsendfile64 create_syscall_enter(4, sendfile64, int, int, loff_t __user *, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsendfile64>
#1903: FILE: include/trace/events/syscalls.h:1804:
+#define EXITCASEsendfile64 create_syscall_exit(sendfile64);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1903: FILE: include/trace/events/syscalls.h:1804:
+#define EXITCASEsendfile64 create_syscall_exit(sendfile64);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1912: FILE: include/trace/events/syscalls.h:1813:
+#define ENTERCASEreadlink create_syscall_enter(3, readlink, const char __user *, char __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEreadlink>
#1912: FILE: include/trace/events/syscalls.h:1813:
+#define ENTERCASEreadlink create_syscall_enter(3, readlink, const char __user *, char __user *, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1912: FILE: include/trace/events/syscalls.h:1813:
+#define ENTERCASEreadlink create_syscall_enter(3, readlink, const char __user *, char __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEreadlink>
#1913: FILE: include/trace/events/syscalls.h:1814:
+#define EXITCASEreadlink create_syscall_exit(readlink);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1913: FILE: include/trace/events/syscalls.h:1814:
+#define EXITCASEreadlink create_syscall_exit(readlink);

WARNING:TYPO_SPELLING: 'creat' may be misspelled - perhaps 'create'?
#1920: FILE: include/trace/events/syscalls.h:1821:
+trace_event_syscall_enter(2, creat, const char __user *, pathname, int, mode);
                              ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'creat' may be misspelled - perhaps 'create'?
#1921: FILE: include/trace/events/syscalls.h:1822:
+trace_event_syscall_exit(creat);
                          ^^^^^

WARNING:TYPO_SPELLING: 'creat' may be misspelled - perhaps 'create'?
#1922: FILE: include/trace/events/syscalls.h:1823:
+#define ENTERCASEcreat create_syscall_enter(2, creat, const char __user *, int);
                                                ^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEcreat>
#1922: FILE: include/trace/events/syscalls.h:1823:
+#define ENTERCASEcreat create_syscall_enter(2, creat, const char __user *, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1922: FILE: include/trace/events/syscalls.h:1823:
+#define ENTERCASEcreat create_syscall_enter(2, creat, const char __user *, int);

WARNING:TYPO_SPELLING: 'creat' may be misspelled - perhaps 'create'?
#1923: FILE: include/trace/events/syscalls.h:1824:
+#define EXITCASEcreat create_syscall_exit(creat);
                                           ^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEcreat>
#1923: FILE: include/trace/events/syscalls.h:1824:
+#define EXITCASEcreat create_syscall_exit(creat);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1923: FILE: include/trace/events/syscalls.h:1824:
+#define EXITCASEcreat create_syscall_exit(creat);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEopen>
#1932: FILE: include/trace/events/syscalls.h:1833:
+#define ENTERCASEopen create_syscall_enter(3, open, const char __user *, int, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1932: FILE: include/trace/events/syscalls.h:1833:
+#define ENTERCASEopen create_syscall_enter(3, open, const char __user *, int, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEopen>
#1933: FILE: include/trace/events/syscalls.h:1834:
+#define EXITCASEopen create_syscall_exit(open);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1933: FILE: include/trace/events/syscalls.h:1834:
+#define EXITCASEopen create_syscall_exit(open);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEclose>
#1942: FILE: include/trace/events/syscalls.h:1843:
+#define ENTERCASEclose create_syscall_enter(1, close, unsigned int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1942: FILE: include/trace/events/syscalls.h:1843:
+#define ENTERCASEclose create_syscall_enter(1, close, unsigned int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEclose>
#1943: FILE: include/trace/events/syscalls.h:1844:
+#define EXITCASEclose create_syscall_exit(close);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1943: FILE: include/trace/events/syscalls.h:1844:
+#define EXITCASEclose create_syscall_exit(close);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEaccess>
#1952: FILE: include/trace/events/syscalls.h:1853:
+#define ENTERCASEaccess create_syscall_enter(2, access, const char __user *, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1952: FILE: include/trace/events/syscalls.h:1853:
+#define ENTERCASEaccess create_syscall_enter(2, access, const char __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEaccess>
#1953: FILE: include/trace/events/syscalls.h:1854:
+#define EXITCASEaccess create_syscall_exit(access);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1953: FILE: include/trace/events/syscalls.h:1854:
+#define EXITCASEaccess create_syscall_exit(access);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEvhangup>
#1962: FILE: include/trace/events/syscalls.h:1863:
+#define ENTERCASEvhangup create_syscall_enter(0, vhangup);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1962: FILE: include/trace/events/syscalls.h:1863:
+#define ENTERCASEvhangup create_syscall_enter(0, vhangup);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEvhangup>
#1963: FILE: include/trace/events/syscalls.h:1864:
+#define EXITCASEvhangup create_syscall_exit(vhangup);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1963: FILE: include/trace/events/syscalls.h:1864:
+#define EXITCASEvhangup create_syscall_exit(vhangup);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEchown>
#1972: FILE: include/trace/events/syscalls.h:1873:
+#define ENTERCASEchown create_syscall_enter(3, chown, const char __user *, uid_t, gid_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1972: FILE: include/trace/events/syscalls.h:1873:
+#define ENTERCASEchown create_syscall_enter(3, chown, const char __user *, uid_t, gid_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEchown>
#1973: FILE: include/trace/events/syscalls.h:1874:
+#define EXITCASEchown create_syscall_exit(chown);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1973: FILE: include/trace/events/syscalls.h:1874:
+#define EXITCASEchown create_syscall_exit(chown);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASElchown>
#1982: FILE: include/trace/events/syscalls.h:1883:
+#define ENTERCASElchown create_syscall_enter(3, lchown, const char __user *, uid_t, gid_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1982: FILE: include/trace/events/syscalls.h:1883:
+#define ENTERCASElchown create_syscall_enter(3, lchown, const char __user *, uid_t, gid_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASElchown>
#1983: FILE: include/trace/events/syscalls.h:1884:
+#define EXITCASElchown create_syscall_exit(lchown);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1983: FILE: include/trace/events/syscalls.h:1884:
+#define EXITCASElchown create_syscall_exit(lchown);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEfchown>
#1992: FILE: include/trace/events/syscalls.h:1893:
+#define ENTERCASEfchown create_syscall_enter(3, fchown, unsigned int, uid_t, gid_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1992: FILE: include/trace/events/syscalls.h:1893:
+#define ENTERCASEfchown create_syscall_enter(3, fchown, unsigned int, uid_t, gid_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEfchown>
#1993: FILE: include/trace/events/syscalls.h:1894:
+#define EXITCASEfchown create_syscall_exit(fchown);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1993: FILE: include/trace/events/syscalls.h:1894:
+#define EXITCASEfchown create_syscall_exit(fchown);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1999: FILE: include/trace/events/syscalls.h:1900:
+#if defined( __NR_chown16) && defined(CONFIG_UID16)

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#2000: FILE: include/trace/events/syscalls.h:1901:
+trace_event_syscall_enter(3, chown16, const char __user *, filename, old_uid_t, user, old_gid_t, group);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#2002: FILE: include/trace/events/syscalls.h:1903:
+#define ENTERCASEchown16 create_syscall_enter(3, chown16, const char __user *, old_uid_t, old_gid_t);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEchown16>
#2002: FILE: include/trace/events/syscalls.h:1903:
+#define ENTERCASEchown16 create_syscall_enter(3, chown16, const char __user *, old_uid_t, old_gid_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2002: FILE: include/trace/events/syscalls.h:1903:
+#define ENTERCASEchown16 create_syscall_enter(3, chown16, const char __user *, old_uid_t, old_gid_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEchown16>
#2003: FILE: include/trace/events/syscalls.h:1904:
+#define EXITCASEchown16 create_syscall_exit(chown16);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2003: FILE: include/trace/events/syscalls.h:1904:
+#define EXITCASEchown16 create_syscall_exit(chown16);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#2010: FILE: include/trace/events/syscalls.h:1911:
+trace_event_syscall_enter(3, lchown16, const char __user *, filename, old_uid_t, user, old_gid_t, group);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#2012: FILE: include/trace/events/syscalls.h:1913:
+#define ENTERCASElchown16 create_syscall_enter(3, lchown16, const char __user *, old_uid_t, old_gid_t);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASElchown16>
#2012: FILE: include/trace/events/syscalls.h:1913:
+#define ENTERCASElchown16 create_syscall_enter(3, lchown16, const char __user *, old_uid_t, old_gid_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2012: FILE: include/trace/events/syscalls.h:1913:
+#define ENTERCASElchown16 create_syscall_enter(3, lchown16, const char __user *, old_uid_t, old_gid_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASElchown16>
#2013: FILE: include/trace/events/syscalls.h:1914:
+#define EXITCASElchown16 create_syscall_exit(lchown16);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2013: FILE: include/trace/events/syscalls.h:1914:
+#define EXITCASElchown16 create_syscall_exit(lchown16);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEfchown16>
#2022: FILE: include/trace/events/syscalls.h:1923:
+#define ENTERCASEfchown16 create_syscall_enter(3, fchown16, unsigned int, old_uid_t, old_gid_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2022: FILE: include/trace/events/syscalls.h:1923:
+#define ENTERCASEfchown16 create_syscall_enter(3, fchown16, unsigned int, old_uid_t, old_gid_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEfchown16>
#2023: FILE: include/trace/events/syscalls.h:1924:
+#define EXITCASEfchown16 create_syscall_exit(fchown16);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2023: FILE: include/trace/events/syscalls.h:1924:
+#define EXITCASEfchown16 create_syscall_exit(fchown16);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsetregid16>
#2032: FILE: include/trace/events/syscalls.h:1933:
+#define ENTERCASEsetregid16 create_syscall_enter(2, setregid16, old_gid_t, old_gid_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2032: FILE: include/trace/events/syscalls.h:1933:
+#define ENTERCASEsetregid16 create_syscall_enter(2, setregid16, old_gid_t, old_gid_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsetregid16>
#2033: FILE: include/trace/events/syscalls.h:1934:
+#define EXITCASEsetregid16 create_syscall_exit(setregid16);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2033: FILE: include/trace/events/syscalls.h:1934:
+#define EXITCASEsetregid16 create_syscall_exit(setregid16);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsetgid16>
#2042: FILE: include/trace/events/syscalls.h:1943:
+#define ENTERCASEsetgid16 create_syscall_enter(1, setgid16, old_gid_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2042: FILE: include/trace/events/syscalls.h:1943:
+#define ENTERCASEsetgid16 create_syscall_enter(1, setgid16, old_gid_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsetgid16>
#2043: FILE: include/trace/events/syscalls.h:1944:
+#define EXITCASEsetgid16 create_syscall_exit(setgid16);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2043: FILE: include/trace/events/syscalls.h:1944:
+#define EXITCASEsetgid16 create_syscall_exit(setgid16);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsetreuid16>
#2052: FILE: include/trace/events/syscalls.h:1953:
+#define ENTERCASEsetreuid16 create_syscall_enter(2, setreuid16, old_uid_t, old_uid_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2052: FILE: include/trace/events/syscalls.h:1953:
+#define ENTERCASEsetreuid16 create_syscall_enter(2, setreuid16, old_uid_t, old_uid_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsetreuid16>
#2053: FILE: include/trace/events/syscalls.h:1954:
+#define EXITCASEsetreuid16 create_syscall_exit(setreuid16);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2053: FILE: include/trace/events/syscalls.h:1954:
+#define EXITCASEsetreuid16 create_syscall_exit(setreuid16);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsetuid16>
#2062: FILE: include/trace/events/syscalls.h:1963:
+#define ENTERCASEsetuid16 create_syscall_enter(1, setuid16, old_uid_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2062: FILE: include/trace/events/syscalls.h:1963:
+#define ENTERCASEsetuid16 create_syscall_enter(1, setuid16, old_uid_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsetuid16>
#2063: FILE: include/trace/events/syscalls.h:1964:
+#define EXITCASEsetuid16 create_syscall_exit(setuid16);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2063: FILE: include/trace/events/syscalls.h:1964:
+#define EXITCASEsetuid16 create_syscall_exit(setuid16);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsetresuid16>
#2072: FILE: include/trace/events/syscalls.h:1973:
+#define ENTERCASEsetresuid16 create_syscall_enter(3, setresuid16, old_uid_t, old_uid_t, old_uid_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2072: FILE: include/trace/events/syscalls.h:1973:
+#define ENTERCASEsetresuid16 create_syscall_enter(3, setresuid16, old_uid_t, old_uid_t, old_uid_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsetresuid16>
#2073: FILE: include/trace/events/syscalls.h:1974:
+#define EXITCASEsetresuid16 create_syscall_exit(setresuid16);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2073: FILE: include/trace/events/syscalls.h:1974:
+#define EXITCASEsetresuid16 create_syscall_exit(setresuid16);

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#2080: FILE: include/trace/events/syscalls.h:1981:
+trace_event_syscall_enter(3, getresuid16, old_uid_t __user *, ruid, old_uid_t __user *, euid, old_uid_t __user *, suid);

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#2082: FILE: include/trace/events/syscalls.h:1983:
+#define ENTERCASEgetresuid16 create_syscall_enter(3, getresuid16, old_uid_t __user *, old_uid_t __user *, old_uid_t __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgetresuid16>
#2082: FILE: include/trace/events/syscalls.h:1983:
+#define ENTERCASEgetresuid16 create_syscall_enter(3, getresuid16, old_uid_t __user *, old_uid_t __user *, old_uid_t __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2082: FILE: include/trace/events/syscalls.h:1983:
+#define ENTERCASEgetresuid16 create_syscall_enter(3, getresuid16, old_uid_t __user *, old_uid_t __user *, old_uid_t __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgetresuid16>
#2083: FILE: include/trace/events/syscalls.h:1984:
+#define EXITCASEgetresuid16 create_syscall_exit(getresuid16);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2083: FILE: include/trace/events/syscalls.h:1984:
+#define EXITCASEgetresuid16 create_syscall_exit(getresuid16);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsetresgid16>
#2092: FILE: include/trace/events/syscalls.h:1993:
+#define ENTERCASEsetresgid16 create_syscall_enter(3, setresgid16, old_gid_t, old_gid_t, old_gid_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2092: FILE: include/trace/events/syscalls.h:1993:
+#define ENTERCASEsetresgid16 create_syscall_enter(3, setresgid16, old_gid_t, old_gid_t, old_gid_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsetresgid16>
#2093: FILE: include/trace/events/syscalls.h:1994:
+#define EXITCASEsetresgid16 create_syscall_exit(setresgid16);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2093: FILE: include/trace/events/syscalls.h:1994:
+#define EXITCASEsetresgid16 create_syscall_exit(setresgid16);

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#2100: FILE: include/trace/events/syscalls.h:2001:
+trace_event_syscall_enter(3, getresgid16, old_gid_t __user *, rgid, old_gid_t __user *, egid, old_gid_t __user *, sgid);

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#2102: FILE: include/trace/events/syscalls.h:2003:
+#define ENTERCASEgetresgid16 create_syscall_enter(3, getresgid16, old_gid_t __user *, old_gid_t __user *, old_gid_t __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgetresgid16>
#2102: FILE: include/trace/events/syscalls.h:2003:
+#define ENTERCASEgetresgid16 create_syscall_enter(3, getresgid16, old_gid_t __user *, old_gid_t __user *, old_gid_t __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2102: FILE: include/trace/events/syscalls.h:2003:
+#define ENTERCASEgetresgid16 create_syscall_enter(3, getresgid16, old_gid_t __user *, old_gid_t __user *, old_gid_t __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgetresgid16>
#2103: FILE: include/trace/events/syscalls.h:2004:
+#define EXITCASEgetresgid16 create_syscall_exit(getresgid16);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2103: FILE: include/trace/events/syscalls.h:2004:
+#define EXITCASEgetresgid16 create_syscall_exit(getresgid16);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsetfsuid16>
#2112: FILE: include/trace/events/syscalls.h:2013:
+#define ENTERCASEsetfsuid16 create_syscall_enter(1, setfsuid16, old_uid_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2112: FILE: include/trace/events/syscalls.h:2013:
+#define ENTERCASEsetfsuid16 create_syscall_enter(1, setfsuid16, old_uid_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsetfsuid16>
#2113: FILE: include/trace/events/syscalls.h:2014:
+#define EXITCASEsetfsuid16 create_syscall_exit(setfsuid16);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2113: FILE: include/trace/events/syscalls.h:2014:
+#define EXITCASEsetfsuid16 create_syscall_exit(setfsuid16);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsetfsgid16>
#2122: FILE: include/trace/events/syscalls.h:2023:
+#define ENTERCASEsetfsgid16 create_syscall_enter(1, setfsgid16, old_gid_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2122: FILE: include/trace/events/syscalls.h:2023:
+#define ENTERCASEsetfsgid16 create_syscall_enter(1, setfsgid16, old_gid_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsetfsgid16>
#2123: FILE: include/trace/events/syscalls.h:2024:
+#define EXITCASEsetfsgid16 create_syscall_exit(setfsgid16);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2123: FILE: include/trace/events/syscalls.h:2024:
+#define EXITCASEsetfsgid16 create_syscall_exit(setfsgid16);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgetgroups16>
#2132: FILE: include/trace/events/syscalls.h:2033:
+#define ENTERCASEgetgroups16 create_syscall_enter(2, getgroups16, int, old_gid_t __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2132: FILE: include/trace/events/syscalls.h:2033:
+#define ENTERCASEgetgroups16 create_syscall_enter(2, getgroups16, int, old_gid_t __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgetgroups16>
#2133: FILE: include/trace/events/syscalls.h:2034:
+#define EXITCASEgetgroups16 create_syscall_exit(getgroups16);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2133: FILE: include/trace/events/syscalls.h:2034:
+#define EXITCASEgetgroups16 create_syscall_exit(getgroups16);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsetgroups16>
#2142: FILE: include/trace/events/syscalls.h:2043:
+#define ENTERCASEsetgroups16 create_syscall_enter(2, setgroups16, int, old_gid_t __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2142: FILE: include/trace/events/syscalls.h:2043:
+#define ENTERCASEsetgroups16 create_syscall_enter(2, setgroups16, int, old_gid_t __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsetgroups16>
#2143: FILE: include/trace/events/syscalls.h:2044:
+#define EXITCASEsetgroups16 create_syscall_exit(setgroups16);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2143: FILE: include/trace/events/syscalls.h:2044:
+#define EXITCASEsetgroups16 create_syscall_exit(setgroups16);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgetuid16>
#2152: FILE: include/trace/events/syscalls.h:2053:
+#define ENTERCASEgetuid16 create_syscall_enter(0, getuid16);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2152: FILE: include/trace/events/syscalls.h:2053:
+#define ENTERCASEgetuid16 create_syscall_enter(0, getuid16);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgetuid16>
#2153: FILE: include/trace/events/syscalls.h:2054:
+#define EXITCASEgetuid16 create_syscall_exit(getuid16);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2153: FILE: include/trace/events/syscalls.h:2054:
+#define EXITCASEgetuid16 create_syscall_exit(getuid16);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgeteuid16>
#2162: FILE: include/trace/events/syscalls.h:2063:
+#define ENTERCASEgeteuid16 create_syscall_enter(geteuid16);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2162: FILE: include/trace/events/syscalls.h:2063:
+#define ENTERCASEgeteuid16 create_syscall_enter(geteuid16);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgeteuid16>
#2163: FILE: include/trace/events/syscalls.h:2064:
+#define EXITCASEgeteuid16 create_syscall_exit(geteuid16);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2163: FILE: include/trace/events/syscalls.h:2064:
+#define EXITCASEgeteuid16 create_syscall_exit(geteuid16);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgetgid16>
#2172: FILE: include/trace/events/syscalls.h:2073:
+#define ENTERCASEgetgid16 create_syscall_enter(0, getgid16);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2172: FILE: include/trace/events/syscalls.h:2073:
+#define ENTERCASEgetgid16 create_syscall_enter(0, getgid16);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgetgid16>
#2173: FILE: include/trace/events/syscalls.h:2074:
+#define EXITCASEgetgid16 create_syscall_exit(getgid16);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2173: FILE: include/trace/events/syscalls.h:2074:
+#define EXITCASEgetgid16 create_syscall_exit(getgid16);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgetegid16>
#2182: FILE: include/trace/events/syscalls.h:2083:
+#define ENTERCASEgetegid16 create_syscall_exit(0, getegid16);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2182: FILE: include/trace/events/syscalls.h:2083:
+#define ENTERCASEgetegid16 create_syscall_exit(0, getegid16);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgetegid16>
#2183: FILE: include/trace/events/syscalls.h:2084:
+#define EXITCASEgetegid16 create_syscall_exit(getegid16);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2183: FILE: include/trace/events/syscalls.h:2084:
+#define EXITCASEgetegid16 create_syscall_exit(getegid16);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEutime>
#2192: FILE: include/trace/events/syscalls.h:2093:
+#define ENTERCASEutime create_syscall_enter(2, utime, char __user *, struct utimbuf __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2192: FILE: include/trace/events/syscalls.h:2093:
+#define ENTERCASEutime create_syscall_enter(2, utime, char __user *, struct utimbuf __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEutime>
#2193: FILE: include/trace/events/syscalls.h:2094:
+#define EXITCASEutime create_syscall_exit(utime);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2193: FILE: include/trace/events/syscalls.h:2094:
+#define EXITCASEutime create_syscall_exit(utime);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEutimes>
#2202: FILE: include/trace/events/syscalls.h:2103:
+#define ENTERCASEutimes create_syscall_enter(2, utimes, char __user *, struct timeval __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2202: FILE: include/trace/events/syscalls.h:2103:
+#define ENTERCASEutimes create_syscall_enter(2, utimes, char __user *, struct timeval __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEutimes>
#2203: FILE: include/trace/events/syscalls.h:2104:
+#define EXITCASEutimes create_syscall_exit(utimes);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2203: FILE: include/trace/events/syscalls.h:2104:
+#define EXITCASEutimes create_syscall_exit(utimes);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASElseek>
#2212: FILE: include/trace/events/syscalls.h:2113:
+#define ENTERCASElseek create_syscall_enter(3, lseek, unsigned int, off_t, unsigned int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2212: FILE: include/trace/events/syscalls.h:2113:
+#define ENTERCASElseek create_syscall_enter(3, lseek, unsigned int, off_t, unsigned int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASElseek>
#2213: FILE: include/trace/events/syscalls.h:2114:
+#define EXITCASElseek create_syscall_exit(lseek);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2213: FILE: include/trace/events/syscalls.h:2114:
+#define EXITCASElseek create_syscall_exit(lseek);

WARNING:LONG_LINE: line length of 157 exceeds 100 columns
#2220: FILE: include/trace/events/syscalls.h:2121:
+trace_event_syscall_enter(5, llseek, unsigned int, fd, unsigned long, offset_high, unsigned long, offset_low, loff_t __user *, result, unsigned int, origin);

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#2222: FILE: include/trace/events/syscalls.h:2123:
+#define ENTERCASEllseek create_syscall_enter(5, llseek, unsigned int, unsigned long, unsigned long, loff_t __user *, unsigned int);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEllseek>
#2222: FILE: include/trace/events/syscalls.h:2123:
+#define ENTERCASEllseek create_syscall_enter(5, llseek, unsigned int, unsigned long, unsigned long, loff_t __user *, unsigned int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2222: FILE: include/trace/events/syscalls.h:2123:
+#define ENTERCASEllseek create_syscall_enter(5, llseek, unsigned int, unsigned long, unsigned long, loff_t __user *, unsigned int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEllseek>
#2223: FILE: include/trace/events/syscalls.h:2124:
+#define EXITCASEllseek create_syscall_exit(llseek);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2223: FILE: include/trace/events/syscalls.h:2124:
+#define EXITCASEllseek create_syscall_exit(llseek);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEread>
#2232: FILE: include/trace/events/syscalls.h:2133:
+#define ENTERCASEread create_syscall_enter(3, read, unsigned int, char __user *, size_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2232: FILE: include/trace/events/syscalls.h:2133:
+#define ENTERCASEread create_syscall_enter(3, read, unsigned int, char __user *, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEread>
#2233: FILE: include/trace/events/syscalls.h:2134:
+#define EXITCASEread create_syscall_exit(read);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2233: FILE: include/trace/events/syscalls.h:2134:
+#define EXITCASEread create_syscall_exit(read);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEreadahead>
#2242: FILE: include/trace/events/syscalls.h:2143:
+#define ENTERCASEreadahead create_syscall_enter(3, readahead, int, loff_t, size_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2242: FILE: include/trace/events/syscalls.h:2143:
+#define ENTERCASEreadahead create_syscall_enter(3, readahead, int, loff_t, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEreadahead>
#2243: FILE: include/trace/events/syscalls.h:2144:
+#define EXITCASEreadahead create_syscall_exit(readahead);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2243: FILE: include/trace/events/syscalls.h:2144:
+#define EXITCASEreadahead create_syscall_exit(readahead);

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#2250: FILE: include/trace/events/syscalls.h:2151:
+trace_event_syscall_enter(3, readv, unsigned long, fd, const struct iovec __user *, vec, unsigned long, vlen);

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#2252: FILE: include/trace/events/syscalls.h:2153:
+#define ENTERCASEreadv create_syscall_enter(3, readv, unsigned long, const struct iovec __user *, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEreadv>
#2252: FILE: include/trace/events/syscalls.h:2153:
+#define ENTERCASEreadv create_syscall_enter(3, readv, unsigned long, const struct iovec __user *, unsigned long);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2252: FILE: include/trace/events/syscalls.h:2153:
+#define ENTERCASEreadv create_syscall_enter(3, readv, unsigned long, const struct iovec __user *, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEreadv>
#2253: FILE: include/trace/events/syscalls.h:2154:
+#define EXITCASEreadv create_syscall_exit(readv);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2253: FILE: include/trace/events/syscalls.h:2154:
+#define EXITCASEreadv create_syscall_exit(readv);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEwrite>
#2262: FILE: include/trace/events/syscalls.h:2163:
+#define ENTERCASEwrite create_syscall_enter(3, write, unsigned int, const char __user *, size_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2262: FILE: include/trace/events/syscalls.h:2163:
+#define ENTERCASEwrite create_syscall_enter(3, write, unsigned int, const char __user *, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEwrite>
#2263: FILE: include/trace/events/syscalls.h:2164:
+#define EXITCASEwrite create_syscall_exit(write);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2263: FILE: include/trace/events/syscalls.h:2164:
+#define EXITCASEwrite create_syscall_exit(write);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#2270: FILE: include/trace/events/syscalls.h:2171:
+trace_event_syscall_enter(3, writev, unsigned long, fd, const struct iovec __user *, vec, unsigned long, vlen);

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#2272: FILE: include/trace/events/syscalls.h:2173:
+#define ENTERCASEwritev create_syscall_enter(3, writev, unsigned long, const struct iovec __user *, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEwritev>
#2272: FILE: include/trace/events/syscalls.h:2173:
+#define ENTERCASEwritev create_syscall_enter(3, writev, unsigned long, const struct iovec __user *, unsigned long);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2272: FILE: include/trace/events/syscalls.h:2173:
+#define ENTERCASEwritev create_syscall_enter(3, writev, unsigned long, const struct iovec __user *, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEwritev>
#2273: FILE: include/trace/events/syscalls.h:2174:
+#define EXITCASEwritev create_syscall_exit(writev);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2273: FILE: include/trace/events/syscalls.h:2174:
+#define EXITCASEwritev create_syscall_exit(writev);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#2280: FILE: include/trace/events/syscalls.h:2181:
+trace_event_syscall_enter(4, pread64, unsigned int, fd, char __user *, buf, size_t, count, loff_t, pos);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#2282: FILE: include/trace/events/syscalls.h:2183:
+#define ENTERCASEpread64 create_syscall_enter(4, pread64, unsigned int, char __user *, size_t, loff_t);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEpread64>
#2282: FILE: include/trace/events/syscalls.h:2183:
+#define ENTERCASEpread64 create_syscall_enter(4, pread64, unsigned int, char __user *, size_t, loff_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2282: FILE: include/trace/events/syscalls.h:2183:
+#define ENTERCASEpread64 create_syscall_enter(4, pread64, unsigned int, char __user *, size_t, loff_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEpread64>
#2283: FILE: include/trace/events/syscalls.h:2184:
+#define EXITCASEpread64 create_syscall_exit(pread64);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2283: FILE: include/trace/events/syscalls.h:2184:
+#define EXITCASEpread64 create_syscall_exit(pread64);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#2290: FILE: include/trace/events/syscalls.h:2191:
+trace_event_syscall_enter(4, pwrite64, unsigned int, fd, const char __user *, buf, size_t, count, loff_t, pos);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#2292: FILE: include/trace/events/syscalls.h:2193:
+#define ENTERCASEpwrite64 create_syscall_enter(4, pwrite64, unsigned int, const char __user *, size_t, loff_t);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEpwrite64>
#2292: FILE: include/trace/events/syscalls.h:2193:
+#define ENTERCASEpwrite64 create_syscall_enter(4, pwrite64, unsigned int, const char __user *, size_t, loff_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2292: FILE: include/trace/events/syscalls.h:2193:
+#define ENTERCASEpwrite64 create_syscall_enter(4, pwrite64, unsigned int, const char __user *, size_t, loff_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEpwrite64>
#2293: FILE: include/trace/events/syscalls.h:2194:
+#define EXITCASEpwrite64 create_syscall_exit(pwrite64);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2293: FILE: include/trace/events/syscalls.h:2194:
+#define EXITCASEpwrite64 create_syscall_exit(pwrite64);

WARNING:LONG_LINE: line length of 155 exceeds 100 columns
#2300: FILE: include/trace/events/syscalls.h:2201:
+trace_event_syscall_enter(5, preadv, unsigned long, fd, const struct iovec __user *, vec, unsigned long, vlen, unsigned long, pos_l, unsigned long, pos_h);

WARNING:LONG_LINE: line length of 145 exceeds 100 columns
#2302: FILE: include/trace/events/syscalls.h:2203:
+#define ENTERCASEpreadv create_syscall_enter(5, preadv, unsigned long, const struct iovec __user *, unsigned long, unsigned long, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEpreadv>
#2302: FILE: include/trace/events/syscalls.h:2203:
+#define ENTERCASEpreadv create_syscall_enter(5, preadv, unsigned long, const struct iovec __user *, unsigned long, unsigned long, unsigned long);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2302: FILE: include/trace/events/syscalls.h:2203:
+#define ENTERCASEpreadv create_syscall_enter(5, preadv, unsigned long, const struct iovec __user *, unsigned long, unsigned long, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEpreadv>
#2303: FILE: include/trace/events/syscalls.h:2204:
+#define EXITCASEpreadv create_syscall_exit(preadv);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2303: FILE: include/trace/events/syscalls.h:2204:
+#define EXITCASEpreadv create_syscall_exit(preadv);

WARNING:LONG_LINE: line length of 156 exceeds 100 columns
#2310: FILE: include/trace/events/syscalls.h:2211:
+trace_event_syscall_enter(5, pwritev, unsigned long, fd, const struct iovec __user *, vec, unsigned long, vlen, unsigned long, pos_l, unsigned long, pos_h);

WARNING:LONG_LINE: line length of 147 exceeds 100 columns
#2312: FILE: include/trace/events/syscalls.h:2213:
+#define ENTERCASEpwritev create_syscall_enter(5, pwritev, unsigned long, const struct iovec __user *, unsigned long, unsigned long, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEpwritev>
#2312: FILE: include/trace/events/syscalls.h:2213:
+#define ENTERCASEpwritev create_syscall_enter(5, pwritev, unsigned long, const struct iovec __user *, unsigned long, unsigned long, unsigned long);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2312: FILE: include/trace/events/syscalls.h:2213:
+#define ENTERCASEpwritev create_syscall_enter(5, pwritev, unsigned long, const struct iovec __user *, unsigned long, unsigned long, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEpwritev>
#2313: FILE: include/trace/events/syscalls.h:2214:
+#define EXITCASEpwritev create_syscall_exit(pwritev);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2313: FILE: include/trace/events/syscalls.h:2214:
+#define EXITCASEpwritev create_syscall_exit(pwritev);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgetcwd>
#2322: FILE: include/trace/events/syscalls.h:2223:
+#define ENTERCASEgetcwd create_syscall_enter(2, getcwd, char __user *, unsigned long);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2322: FILE: include/trace/events/syscalls.h:2223:
+#define ENTERCASEgetcwd create_syscall_enter(2, getcwd, char __user *, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgetcwd>
#2323: FILE: include/trace/events/syscalls.h:2224:
+#define EXITCASEgetcwd create_syscall_exit(getcwd);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2323: FILE: include/trace/events/syscalls.h:2224:
+#define EXITCASEgetcwd create_syscall_exit(getcwd);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEmkdir>
#2332: FILE: include/trace/events/syscalls.h:2233:
+#define ENTERCASEmkdir create_syscall_enter(2, mkdir, const char __user *, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2332: FILE: include/trace/events/syscalls.h:2233:
+#define ENTERCASEmkdir create_syscall_enter(2, mkdir, const char __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEmkdir>
#2333: FILE: include/trace/events/syscalls.h:2234:
+#define EXITCASEmkdir create_syscall_exit(mkdir);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2333: FILE: include/trace/events/syscalls.h:2234:
+#define EXITCASEmkdir create_syscall_exit(mkdir);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEchdir>
#2342: FILE: include/trace/events/syscalls.h:2243:
+#define ENTERCASEchdir create_syscall_enter(1, chdir, const char __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2342: FILE: include/trace/events/syscalls.h:2243:
+#define ENTERCASEchdir create_syscall_enter(1, chdir, const char __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEchdir>
#2343: FILE: include/trace/events/syscalls.h:2244:
+#define EXITCASEchdir create_syscall_exit(chdir);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2343: FILE: include/trace/events/syscalls.h:2244:
+#define EXITCASEchdir create_syscall_exit(chdir);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEfchdir>
#2352: FILE: include/trace/events/syscalls.h:2253:
+#define ENTERCASEfchdir create_syscall_enter(1, fchdir, unsigned int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2352: FILE: include/trace/events/syscalls.h:2253:
+#define ENTERCASEfchdir create_syscall_enter(1, fchdir, unsigned int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEfchdir>
#2353: FILE: include/trace/events/syscalls.h:2254:
+#define EXITCASEfchdir create_syscall_exit(fchdir);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2353: FILE: include/trace/events/syscalls.h:2254:
+#define EXITCASEfchdir create_syscall_exit(fchdir);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASErmdir>
#2362: FILE: include/trace/events/syscalls.h:2263:
+#define ENTERCASErmdir create_syscall_enter(1, rmdir, const char __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2362: FILE: include/trace/events/syscalls.h:2263:
+#define ENTERCASErmdir create_syscall_enter(1, rmdir, const char __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASErmdir>
#2363: FILE: include/trace/events/syscalls.h:2264:
+#define EXITCASErmdir create_syscall_exit(rmdir);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2363: FILE: include/trace/events/syscalls.h:2264:
+#define EXITCASErmdir create_syscall_exit(rmdir);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASElookup_dcookie>
#2372: FILE: include/trace/events/syscalls.h:2273:
+#define ENTERCASElookup_dcookie create_syscall_enter(3, lookup_dcookie, u64, char __user *, size_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2372: FILE: include/trace/events/syscalls.h:2273:
+#define ENTERCASElookup_dcookie create_syscall_enter(3, lookup_dcookie, u64, char __user *, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASElookup_dcookie>
#2373: FILE: include/trace/events/syscalls.h:2274:
+#define EXITCASElookup_dcookie create_syscall_exit(lookup_dcookie);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2373: FILE: include/trace/events/syscalls.h:2274:
+#define EXITCASElookup_dcookie create_syscall_exit(lookup_dcookie);

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#2380: FILE: include/trace/events/syscalls.h:2281:
+trace_event_syscall_enter(4, quotactl, unsigned int, cmd, const char __user *, special, qid_t, id, void __user *, addr);

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#2382: FILE: include/trace/events/syscalls.h:2283:
+#define ENTERCASEquotactl create_syscall_enter(4, quotactl, unsigned int, const char __user *, qid_t, void __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEquotactl>
#2382: FILE: include/trace/events/syscalls.h:2283:
+#define ENTERCASEquotactl create_syscall_enter(4, quotactl, unsigned int, const char __user *, qid_t, void __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2382: FILE: include/trace/events/syscalls.h:2283:
+#define ENTERCASEquotactl create_syscall_enter(4, quotactl, unsigned int, const char __user *, qid_t, void __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEquotactl>
#2383: FILE: include/trace/events/syscalls.h:2284:
+#define EXITCASEquotactl create_syscall_exit(quotactl);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2383: FILE: include/trace/events/syscalls.h:2284:
+#define EXITCASEquotactl create_syscall_exit(quotactl);

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#2390: FILE: include/trace/events/syscalls.h:2291:
+trace_event_syscall_enter(3, getdents, unsigned int, fd, struct linux_dirent __user *, dirent, unsigned int, count);

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#2392: FILE: include/trace/events/syscalls.h:2293:
+#define ENTERCASEgetdents create_syscall_enter(3, getdents, unsigned int, struct linux_dirent __user *, unsigned int);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgetdents>
#2392: FILE: include/trace/events/syscalls.h:2293:
+#define ENTERCASEgetdents create_syscall_enter(3, getdents, unsigned int, struct linux_dirent __user *, unsigned int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2392: FILE: include/trace/events/syscalls.h:2293:
+#define ENTERCASEgetdents create_syscall_enter(3, getdents, unsigned int, struct linux_dirent __user *, unsigned int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgetdents>
#2393: FILE: include/trace/events/syscalls.h:2294:
+#define EXITCASEgetdents create_syscall_exit(getdents);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2393: FILE: include/trace/events/syscalls.h:2294:
+#define EXITCASEgetdents create_syscall_exit(getdents);

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#2400: FILE: include/trace/events/syscalls.h:2301:
+trace_event_syscall_enter(3, getdents64, unsigned int, fd, struct linux_dirent64 __user *, dirent, unsigned int, count);

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#2402: FILE: include/trace/events/syscalls.h:2303:
+#define ENTERCASEgetdents64 create_syscall_enter(3, getdents64, unsigned int, struct linux_dirent64 __user *, unsigned int);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgetdents64>
#2402: FILE: include/trace/events/syscalls.h:2303:
+#define ENTERCASEgetdents64 create_syscall_enter(3, getdents64, unsigned int, struct linux_dirent64 __user *, unsigned int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2402: FILE: include/trace/events/syscalls.h:2303:
+#define ENTERCASEgetdents64 create_syscall_enter(3, getdents64, unsigned int, struct linux_dirent64 __user *, unsigned int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgetdents64>
#2403: FILE: include/trace/events/syscalls.h:2304:
+#define EXITCASEgetdents64 create_syscall_exit(getdents64);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2403: FILE: include/trace/events/syscalls.h:2304:
+#define EXITCASEgetdents64 create_syscall_exit(getdents64);

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#2410: FILE: include/trace/events/syscalls.h:2311:
+trace_event_syscall_enter(5, setsockopt, int, fd, int, level, int, optname, char __user *, optval, int, optlen);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsetsockopt>
#2412: FILE: include/trace/events/syscalls.h:2313:
+#define ENTERCASEsetsockopt create_syscall_enter(5, setsockopt, int, int, int, char __user *, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2412: FILE: include/trace/events/syscalls.h:2313:
+#define ENTERCASEsetsockopt create_syscall_enter(5, setsockopt, int, int, int, char __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsetsockopt>
#2413: FILE: include/trace/events/syscalls.h:2314:
+#define EXITCASEsetsockopt create_syscall_exit(setsockopt);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2413: FILE: include/trace/events/syscalls.h:2314:
+#define EXITCASEsetsockopt create_syscall_exit(setsockopt);

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#2420: FILE: include/trace/events/syscalls.h:2321:
+trace_event_syscall_enter(5, getsockopt, int, fd, int, level, int, optname, char __user *, optval, int __user *, optlen);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#2422: FILE: include/trace/events/syscalls.h:2323:
+#define ENTERCASEgetsockopt create_syscall_enter(5, getsockopt, int, int, int, char __user *, int __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgetsockopt>
#2422: FILE: include/trace/events/syscalls.h:2323:
+#define ENTERCASEgetsockopt create_syscall_enter(5, getsockopt, int, int, int, char __user *, int __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2422: FILE: include/trace/events/syscalls.h:2323:
+#define ENTERCASEgetsockopt create_syscall_enter(5, getsockopt, int, int, int, char __user *, int __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgetsockopt>
#2423: FILE: include/trace/events/syscalls.h:2324:
+#define EXITCASEgetsockopt create_syscall_exit(getsockopt);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2423: FILE: include/trace/events/syscalls.h:2324:
+#define EXITCASEgetsockopt create_syscall_exit(getsockopt);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEbind>
#2432: FILE: include/trace/events/syscalls.h:2333:
+#define ENTERCASEbind create_syscall_enter(3, bind, int, struct sockaddr __user *, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2432: FILE: include/trace/events/syscalls.h:2333:
+#define ENTERCASEbind create_syscall_enter(3, bind, int, struct sockaddr __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEbind>
#2433: FILE: include/trace/events/syscalls.h:2334:
+#define EXITCASEbind create_syscall_exit(bind);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2433: FILE: include/trace/events/syscalls.h:2334:
+#define EXITCASEbind create_syscall_exit(bind);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEconnect>
#2442: FILE: include/trace/events/syscalls.h:2343:
+#define ENTERCASEconnect create_syscall_enter(3, connect, int, struct sockaddr __user *, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2442: FILE: include/trace/events/syscalls.h:2343:
+#define ENTERCASEconnect create_syscall_enter(3, connect, int, struct sockaddr __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEconnect>
#2443: FILE: include/trace/events/syscalls.h:2344:
+#define EXITCASEconnect create_syscall_exit(connect);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2443: FILE: include/trace/events/syscalls.h:2344:
+#define EXITCASEconnect create_syscall_exit(connect);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#2452: FILE: include/trace/events/syscalls.h:2353:
+#define ENTERCASEaccept create_syscall_enter(3, accept, int, struct sockaddr __user *, int __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEaccept>
#2452: FILE: include/trace/events/syscalls.h:2353:
+#define ENTERCASEaccept create_syscall_enter(3, accept, int, struct sockaddr __user *, int __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2452: FILE: include/trace/events/syscalls.h:2353:
+#define ENTERCASEaccept create_syscall_enter(3, accept, int, struct sockaddr __user *, int __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEaccept>
#2453: FILE: include/trace/events/syscalls.h:2354:
+#define EXITCASEaccept create_syscall_exit(accept);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2453: FILE: include/trace/events/syscalls.h:2354:
+#define EXITCASEaccept create_syscall_exit(accept);

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#2460: FILE: include/trace/events/syscalls.h:2361:
+trace_event_syscall_enter(4, accept4, int, a, struct sockaddr __user *, saddr, int __user *, ptr, int, b);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#2462: FILE: include/trace/events/syscalls.h:2363:
+#define ENTERCASEaccept4 create_syscall_enter(4, accept4, int, struct sockaddr __user *, int __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEaccept4>
#2462: FILE: include/trace/events/syscalls.h:2363:
+#define ENTERCASEaccept4 create_syscall_enter(4, accept4, int, struct sockaddr __user *, int __user *, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2462: FILE: include/trace/events/syscalls.h:2363:
+#define ENTERCASEaccept4 create_syscall_enter(4, accept4, int, struct sockaddr __user *, int __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEaccept4>
#2463: FILE: include/trace/events/syscalls.h:2364:
+#define EXITCASEaccept4 create_syscall_exit(accept4);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2463: FILE: include/trace/events/syscalls.h:2364:
+#define EXITCASEaccept4 create_syscall_exit(accept4);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#2470: FILE: include/trace/events/syscalls.h:2371:
+trace_event_syscall_enter(3, getsockname, int, a, struct sockaddr __user *, saddr, int __user *, ptr);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#2472: FILE: include/trace/events/syscalls.h:2373:
+#define ENTERCASEgetsockname create_syscall_enter(3, getsockname, int, struct sockaddr __user *, int __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgetsockname>
#2472: FILE: include/trace/events/syscalls.h:2373:
+#define ENTERCASEgetsockname create_syscall_enter(3, getsockname, int, struct sockaddr __user *, int __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2472: FILE: include/trace/events/syscalls.h:2373:
+#define ENTERCASEgetsockname create_syscall_enter(3, getsockname, int, struct sockaddr __user *, int __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgetsockname>
#2473: FILE: include/trace/events/syscalls.h:2374:
+#define EXITCASEgetsockname create_syscall_exit(getsockname);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2473: FILE: include/trace/events/syscalls.h:2374:
+#define EXITCASEgetsockname create_syscall_exit(getsockname);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#2480: FILE: include/trace/events/syscalls.h:2381:
+trace_event_syscall_enter(3, getpeername, int, a, struct sockaddr __user *, saddr, int __user *, ptr);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#2482: FILE: include/trace/events/syscalls.h:2383:
+#define ENTERCASEgetpeername create_syscall_enter(3, getpeername, int, struct sockaddr __user *, int __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgetpeername>
#2482: FILE: include/trace/events/syscalls.h:2383:
+#define ENTERCASEgetpeername create_syscall_enter(3, getpeername, int, struct sockaddr __user *, int __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2482: FILE: include/trace/events/syscalls.h:2383:
+#define ENTERCASEgetpeername create_syscall_enter(3, getpeername, int, struct sockaddr __user *, int __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgetpeername>
#2483: FILE: include/trace/events/syscalls.h:2384:
+#define EXITCASEgetpeername create_syscall_exit(getpeername);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2483: FILE: include/trace/events/syscalls.h:2384:
+#define EXITCASEgetpeername create_syscall_exit(getpeername);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2490: FILE: include/trace/events/syscalls.h:2391:
+trace_event_syscall_enter(4, send, int, a, void __user *, ptr, size_t, size, unsigned, b);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2492: FILE: include/trace/events/syscalls.h:2393:
+#define ENTERCASEsend create_syscall_enter(4, send, int, void __user *, size_t, unsigned);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsend>
#2492: FILE: include/trace/events/syscalls.h:2393:
+#define ENTERCASEsend create_syscall_enter(4, send, int, void __user *, size_t, unsigned);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2492: FILE: include/trace/events/syscalls.h:2393:
+#define ENTERCASEsend create_syscall_enter(4, send, int, void __user *, size_t, unsigned);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsend>
#2493: FILE: include/trace/events/syscalls.h:2394:
+#define EXITCASEsend create_syscall_exit(send);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2493: FILE: include/trace/events/syscalls.h:2394:
+#define EXITCASEsend create_syscall_exit(send);

WARNING:LONG_LINE: line length of 133 exceeds 100 columns
#2500: FILE: include/trace/events/syscalls.h:2401:
+trace_event_syscall_enter(6, sendto, int, a, void __user *, ptr, size_t, size, unsigned, b, struct sockaddr __user *, saddr, int, c);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2500: FILE: include/trace/events/syscalls.h:2401:
+trace_event_syscall_enter(6, sendto, int, a, void __user *, ptr, size_t, size, unsigned, b, struct sockaddr __user *, saddr, int, c);

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#2502: FILE: include/trace/events/syscalls.h:2403:
+#define ENTERCASEsendto create_syscall_enter(6, sendto, int, void __user *, size_t, unsigned, struct sockaddr __user *, int);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2502: FILE: include/trace/events/syscalls.h:2403:
+#define ENTERCASEsendto create_syscall_enter(6, sendto, int, void __user *, size_t, unsigned, struct sockaddr __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsendto>
#2502: FILE: include/trace/events/syscalls.h:2403:
+#define ENTERCASEsendto create_syscall_enter(6, sendto, int, void __user *, size_t, unsigned, struct sockaddr __user *, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2502: FILE: include/trace/events/syscalls.h:2403:
+#define ENTERCASEsendto create_syscall_enter(6, sendto, int, void __user *, size_t, unsigned, struct sockaddr __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsendto>
#2503: FILE: include/trace/events/syscalls.h:2404:
+#define EXITCASEsendto create_syscall_exit(sendto);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2503: FILE: include/trace/events/syscalls.h:2404:
+#define EXITCASEsendto create_syscall_exit(sendto);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2510: FILE: include/trace/events/syscalls.h:2411:
+trace_event_syscall_enter(3, sendmsg, int, fd, struct msghdr __user *, msg, unsigned, flags);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2512: FILE: include/trace/events/syscalls.h:2413:
+#define ENTERCASEsendmsg create_syscall_enter(3, sendmsg, int, struct msghdr __user *, unsigned);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsendmsg>
#2512: FILE: include/trace/events/syscalls.h:2413:
+#define ENTERCASEsendmsg create_syscall_enter(3, sendmsg, int, struct msghdr __user *, unsigned);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2512: FILE: include/trace/events/syscalls.h:2413:
+#define ENTERCASEsendmsg create_syscall_enter(3, sendmsg, int, struct msghdr __user *, unsigned);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsendmsg>
#2513: FILE: include/trace/events/syscalls.h:2414:
+#define EXITCASEsendmsg create_syscall_exit(sendmsg);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2513: FILE: include/trace/events/syscalls.h:2414:
+#define EXITCASEsendmsg create_syscall_exit(sendmsg);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2520: FILE: include/trace/events/syscalls.h:2421:
+trace_event_syscall_enter(4, recv, int, a, void __user *, ptr, size_t, size, unsigned, b);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2522: FILE: include/trace/events/syscalls.h:2423:
+#define ENTERCASErecv create_syscall_enter(4, recv, int, void __user *, size_t, unsigned);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASErecv>
#2522: FILE: include/trace/events/syscalls.h:2423:
+#define ENTERCASErecv create_syscall_enter(4, recv, int, void __user *, size_t, unsigned);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2522: FILE: include/trace/events/syscalls.h:2423:
+#define ENTERCASErecv create_syscall_enter(4, recv, int, void __user *, size_t, unsigned);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASErecv>
#2523: FILE: include/trace/events/syscalls.h:2424:
+#define EXITCASErecv create_syscall_exit(recv);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2523: FILE: include/trace/events/syscalls.h:2424:
+#define EXITCASErecv create_syscall_exit(recv);

WARNING:LONG_LINE: line length of 147 exceeds 100 columns
#2530: FILE: include/trace/events/syscalls.h:2431:
+trace_event_syscall_enter(6, recvfrom, int, a, void __user *, ptr, size_t, size, unsigned, b, struct sockaddr __user *, saddr, int __user *, uptr);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2530: FILE: include/trace/events/syscalls.h:2431:
+trace_event_syscall_enter(6, recvfrom, int, a, void __user *, ptr, size_t, size, unsigned, b, struct sockaddr __user *, saddr, int __user *, uptr);

WARNING:LONG_LINE: line length of 138 exceeds 100 columns
#2532: FILE: include/trace/events/syscalls.h:2433:
+#define ENTERCASErecvfrom create_syscall_enter(6, recvfrom, int, void __user *, size_t, unsigned, struct sockaddr __user *, int __user *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2532: FILE: include/trace/events/syscalls.h:2433:
+#define ENTERCASErecvfrom create_syscall_enter(6, recvfrom, int, void __user *, size_t, unsigned, struct sockaddr __user *, int __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASErecvfrom>
#2532: FILE: include/trace/events/syscalls.h:2433:
+#define ENTERCASErecvfrom create_syscall_enter(6, recvfrom, int, void __user *, size_t, unsigned, struct sockaddr __user *, int __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2532: FILE: include/trace/events/syscalls.h:2433:
+#define ENTERCASErecvfrom create_syscall_enter(6, recvfrom, int, void __user *, size_t, unsigned, struct sockaddr __user *, int __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASErecvfrom>
#2533: FILE: include/trace/events/syscalls.h:2434:
+#define EXITCASErecvfrom create_syscall_exit(recvfrom);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2533: FILE: include/trace/events/syscalls.h:2434:
+#define EXITCASErecvfrom create_syscall_exit(recvfrom);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2540: FILE: include/trace/events/syscalls.h:2441:
+trace_event_syscall_enter(3, recvmsg, int, fd, struct msghdr __user *, msg, unsigned, flags);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2542: FILE: include/trace/events/syscalls.h:2443:
+#define ENTERCASErecvmsg create_syscall_enter(3, recvmsg, int, struct msghdr __user *, unsigned);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASErecvmsg>
#2542: FILE: include/trace/events/syscalls.h:2443:
+#define ENTERCASErecvmsg create_syscall_enter(3, recvmsg, int, struct msghdr __user *, unsigned);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2542: FILE: include/trace/events/syscalls.h:2443:
+#define ENTERCASErecvmsg create_syscall_enter(3, recvmsg, int, struct msghdr __user *, unsigned);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASErecvmsg>
#2543: FILE: include/trace/events/syscalls.h:2444:
+#define EXITCASErecvmsg create_syscall_exit(recvmsg);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2543: FILE: include/trace/events/syscalls.h:2444:
+#define EXITCASErecvmsg create_syscall_exit(recvmsg);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsocket>
#2552: FILE: include/trace/events/syscalls.h:2453:
+#define ENTERCASEsocket create_syscall_enter(3, socket, int, int, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2552: FILE: include/trace/events/syscalls.h:2453:
+#define ENTERCASEsocket create_syscall_enter(3, socket, int, int, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsocket>
#2553: FILE: include/trace/events/syscalls.h:2454:
+#define EXITCASEsocket create_syscall_exit(socket);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2553: FILE: include/trace/events/syscalls.h:2454:
+#define EXITCASEsocket create_syscall_exit(socket);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsocketpair>
#2562: FILE: include/trace/events/syscalls.h:2463:
+#define ENTERCASEsocketpair create_syscall_enter(4, socketpair, int, int, int, int __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2562: FILE: include/trace/events/syscalls.h:2463:
+#define ENTERCASEsocketpair create_syscall_enter(4, socketpair, int, int, int, int __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsocketpair>
#2563: FILE: include/trace/events/syscalls.h:2464:
+#define EXITCASEsocketpair create_syscall_exit(socketpair);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2563: FILE: include/trace/events/syscalls.h:2464:
+#define EXITCASEsocketpair create_syscall_exit(socketpair);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsocketcall>
#2572: FILE: include/trace/events/syscalls.h:2473:
+#define ENTERCASEsocketcall create_syscall_enter(2, socketcall, int, unsigned long __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2572: FILE: include/trace/events/syscalls.h:2473:
+#define ENTERCASEsocketcall create_syscall_enter(2, socketcall, int, unsigned long __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsocketcall>
#2573: FILE: include/trace/events/syscalls.h:2474:
+#define EXITCASEsocketcall create_syscall_exit(socketcall);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2573: FILE: include/trace/events/syscalls.h:2474:
+#define EXITCASEsocketcall create_syscall_exit(socketcall);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASElisten>
#2582: FILE: include/trace/events/syscalls.h:2483:
+#define ENTERCASElisten create_syscall_enter(2, listen, int, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2582: FILE: include/trace/events/syscalls.h:2483:
+#define ENTERCASElisten create_syscall_enter(2, listen, int, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASElisten>
#2583: FILE: include/trace/events/syscalls.h:2484:
+#define EXITCASElisten create_syscall_exit(listen);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2583: FILE: include/trace/events/syscalls.h:2484:
+#define EXITCASElisten create_syscall_exit(listen);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEpoll>
#2592: FILE: include/trace/events/syscalls.h:2493:
+#define ENTERCASEpoll create_syscall_enter(3, poll, struct pollfd __user *, unsigned int, long);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2592: FILE: include/trace/events/syscalls.h:2493:
+#define ENTERCASEpoll create_syscall_enter(3, poll, struct pollfd __user *, unsigned int, long);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEpoll>
#2593: FILE: include/trace/events/syscalls.h:2494:
+#define EXITCASEpoll create_syscall_exit(poll);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2593: FILE: include/trace/events/syscalls.h:2494:
+#define EXITCASEpoll create_syscall_exit(poll);

WARNING:LONG_LINE: line length of 143 exceeds 100 columns
#2600: FILE: include/trace/events/syscalls.h:2501:
+trace_event_syscall_enter(5, select, int, n, fd_set __user *, inp, fd_set __user *, outp,  fd_set __user *, exp, struct timeval __user *, tvp);

WARNING:LONG_LINE: line length of 138 exceeds 100 columns
#2602: FILE: include/trace/events/syscalls.h:2503:
+#define ENTERCASEselect create_syscall_enter(5, select, int, fd_set __user *, fd_set __user *,  fd_set __user *, struct timeval __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEselect>
#2602: FILE: include/trace/events/syscalls.h:2503:
+#define ENTERCASEselect create_syscall_enter(5, select, int, fd_set __user *, fd_set __user *,  fd_set __user *, struct timeval __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2602: FILE: include/trace/events/syscalls.h:2503:
+#define ENTERCASEselect create_syscall_enter(5, select, int, fd_set __user *, fd_set __user *,  fd_set __user *, struct timeval __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEselect>
#2603: FILE: include/trace/events/syscalls.h:2504:
+#define EXITCASEselect create_syscall_exit(select);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2603: FILE: include/trace/events/syscalls.h:2504:
+#define EXITCASEselect create_syscall_exit(select);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEepoll_create>
#2612: FILE: include/trace/events/syscalls.h:2513:
+#define ENTERCASEepoll_create create_syscall_enter(1, epoll_create, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2612: FILE: include/trace/events/syscalls.h:2513:
+#define ENTERCASEepoll_create create_syscall_enter(1, epoll_create, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEepoll_create>
#2613: FILE: include/trace/events/syscalls.h:2514:
+#define EXITCASEepoll_create create_syscall_exit(epoll_create);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2613: FILE: include/trace/events/syscalls.h:2514:
+#define EXITCASEepoll_create create_syscall_exit(epoll_create);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEepoll_create1>
#2622: FILE: include/trace/events/syscalls.h:2523:
+#define ENTERCASEepoll_create1 create_syscall_enter(1, epoll_create1, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2622: FILE: include/trace/events/syscalls.h:2523:
+#define ENTERCASEepoll_create1 create_syscall_enter(1, epoll_create1, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEepoll_create1>
#2623: FILE: include/trace/events/syscalls.h:2524:
+#define EXITCASEepoll_create1 create_syscall_exit(epoll_create1);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2623: FILE: include/trace/events/syscalls.h:2524:
+#define EXITCASEepoll_create1 create_syscall_exit(epoll_create1);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#2630: FILE: include/trace/events/syscalls.h:2531:
+trace_event_syscall_enter(4, epoll_ctl, int, epfd, int, op, int, fd, struct epoll_event __user *, eve);

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#2632: FILE: include/trace/events/syscalls.h:2533:
+#define ENTERCASEepoll_ctl create_syscall_enter(4, epoll_ctl, int, int, int, struct epoll_event __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEepoll_ctl>
#2632: FILE: include/trace/events/syscalls.h:2533:
+#define ENTERCASEepoll_ctl create_syscall_enter(4, epoll_ctl, int, int, int, struct epoll_event __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2632: FILE: include/trace/events/syscalls.h:2533:
+#define ENTERCASEepoll_ctl create_syscall_enter(4, epoll_ctl, int, int, int, struct epoll_event __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEepoll_ctl>
#2633: FILE: include/trace/events/syscalls.h:2534:
+#define EXITCASEepoll_ctl create_syscall_exit(epoll_ctl);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2633: FILE: include/trace/events/syscalls.h:2534:
+#define EXITCASEepoll_ctl create_syscall_exit(epoll_ctl);

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#2640: FILE: include/trace/events/syscalls.h:2541:
+trace_event_syscall_enter(4, epoll_wait, int, epfd, struct epoll_event __user *, events, int, maxevents, int, timeout);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#2642: FILE: include/trace/events/syscalls.h:2543:
+#define ENTERCASEepoll_wait create_syscall_enter(4, epoll_wait, int, struct epoll_event __user *, int, int);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEepoll_wait>
#2642: FILE: include/trace/events/syscalls.h:2543:
+#define ENTERCASEepoll_wait create_syscall_enter(4, epoll_wait, int, struct epoll_event __user *, int, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2642: FILE: include/trace/events/syscalls.h:2543:
+#define ENTERCASEepoll_wait create_syscall_enter(4, epoll_wait, int, struct epoll_event __user *, int, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEepoll_wait>
#2643: FILE: include/trace/events/syscalls.h:2544:
+#define EXITCASEepoll_wait create_syscall_exit(epoll_wait);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2643: FILE: include/trace/events/syscalls.h:2544:
+#define EXITCASEepoll_wait create_syscall_exit(epoll_wait);

WARNING:LONG_LINE: line length of 174 exceeds 100 columns
#2650: FILE: include/trace/events/syscalls.h:2551:
+trace_event_syscall_enter(6, epoll_pwait, int, epfd, struct epoll_event __user *, events, int, maxevents, int, timeout, const sigset_t __user *, sigmask, size_t, sigsetsize);

WARNING:LONG_LINE: line length of 143 exceeds 100 columns
#2652: FILE: include/trace/events/syscalls.h:2553:
+#define ENTERCASEepoll_pwait create_syscall_enter(6, epoll_pwait, int, struct epoll_event __user *, int, int, const sigset_t __user *, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEepoll_pwait>
#2652: FILE: include/trace/events/syscalls.h:2553:
+#define ENTERCASEepoll_pwait create_syscall_enter(6, epoll_pwait, int, struct epoll_event __user *, int, int, const sigset_t __user *, size_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2652: FILE: include/trace/events/syscalls.h:2553:
+#define ENTERCASEepoll_pwait create_syscall_enter(6, epoll_pwait, int, struct epoll_event __user *, int, int, const sigset_t __user *, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEepoll_pwait>
#2653: FILE: include/trace/events/syscalls.h:2554:
+#define EXITCASEepoll_pwait create_syscall_exit(epoll_pwait);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2653: FILE: include/trace/events/syscalls.h:2554:
+#define EXITCASEepoll_pwait create_syscall_exit(epoll_pwait);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgethostname>
#2662: FILE: include/trace/events/syscalls.h:2563:
+#define ENTERCASEgethostname create_syscall_enter(2, gethostname, char __user *, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2662: FILE: include/trace/events/syscalls.h:2563:
+#define ENTERCASEgethostname create_syscall_enter(2, gethostname, char __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgethostname>
#2663: FILE: include/trace/events/syscalls.h:2564:
+#define EXITCASEgethostname create_syscall_exit(gethostname);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2663: FILE: include/trace/events/syscalls.h:2564:
+#define EXITCASEgethostname create_syscall_exit(gethostname);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsethostname>
#2672: FILE: include/trace/events/syscalls.h:2573:
+#define ENTERCASEsethostname create_syscall_enter(2, sethostname, char __user *, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2672: FILE: include/trace/events/syscalls.h:2573:
+#define ENTERCASEsethostname create_syscall_enter(2, sethostname, char __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsethostname>
#2673: FILE: include/trace/events/syscalls.h:2574:
+#define EXITCASEsethostname create_syscall_exit(sethostname);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2673: FILE: include/trace/events/syscalls.h:2574:
+#define EXITCASEsethostname create_syscall_exit(sethostname);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsetdomainname>
#2682: FILE: include/trace/events/syscalls.h:2583:
+#define ENTERCASEsetdomainname create_syscall_enter(2, setdomainname, char __user *, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2682: FILE: include/trace/events/syscalls.h:2583:
+#define ENTERCASEsetdomainname create_syscall_enter(2, setdomainname, char __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsetdomainname>
#2683: FILE: include/trace/events/syscalls.h:2584:
+#define EXITCASEsetdomainname create_syscall_exit(setdomainname);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2683: FILE: include/trace/events/syscalls.h:2584:
+#define EXITCASEsetdomainname create_syscall_exit(setdomainname);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEnewuname>
#2692: FILE: include/trace/events/syscalls.h:2593:
+#define ENTERCASEnewuname create_syscall_enter(1, newuname, struct new_utsname __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2692: FILE: include/trace/events/syscalls.h:2593:
+#define ENTERCASEnewuname create_syscall_enter(1, newuname, struct new_utsname __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEnewuname>
#2693: FILE: include/trace/events/syscalls.h:2594:
+#define EXITCASEnewuname create_syscall_exit(newuname);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2693: FILE: include/trace/events/syscalls.h:2594:
+#define EXITCASEnewuname create_syscall_exit(newuname);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2700: FILE: include/trace/events/syscalls.h:2601:
+trace_event_syscall_enter(2, getrlimit, unsigned int, resource, struct rlimit __user *, rlim );

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgetrlimit>
#2702: FILE: include/trace/events/syscalls.h:2603:
+#define ENTERCASEgetrlimit create_syscall_enter(2, getrlimit, unsigned int, struct rlimit __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2702: FILE: include/trace/events/syscalls.h:2603:
+#define ENTERCASEgetrlimit create_syscall_enter(2, getrlimit, unsigned int, struct rlimit __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgetrlimit>
#2703: FILE: include/trace/events/syscalls.h:2604:
+#define EXITCASEgetrlimit create_syscall_exit(getrlimit);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2703: FILE: include/trace/events/syscalls.h:2604:
+#define EXITCASEgetrlimit create_syscall_exit(getrlimit);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#2712: FILE: include/trace/events/syscalls.h:2613:
+#define ENTERCASEold_getrlimit create_syscall_enter(2, old_getrlimit, unsigned int, struct rlimit __user * );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2712: FILE: include/trace/events/syscalls.h:2613:
+#define ENTERCASEold_getrlimit create_syscall_enter(2, old_getrlimit, unsigned int, struct rlimit __user * );

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEold_getrlimit>
#2712: FILE: include/trace/events/syscalls.h:2613:
+#define ENTERCASEold_getrlimit create_syscall_enter(2, old_getrlimit, unsigned int, struct rlimit __user * );

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2712: FILE: include/trace/events/syscalls.h:2613:
+#define ENTERCASEold_getrlimit create_syscall_enter(2, old_getrlimit, unsigned int, struct rlimit __user * );

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEold_getrlimit>
#2713: FILE: include/trace/events/syscalls.h:2614:
+#define EXITCASEold_getrlimit create_syscall_exit(old_getrlimit);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2713: FILE: include/trace/events/syscalls.h:2614:
+#define EXITCASEold_getrlimit create_syscall_exit(old_getrlimit);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsetrlimit>
#2722: FILE: include/trace/events/syscalls.h:2623:
+#define ENTERCASEsetrlimit create_syscall_enter(2, setrlimit, unsigned int, struct rlimit __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2722: FILE: include/trace/events/syscalls.h:2623:
+#define ENTERCASEsetrlimit create_syscall_enter(2, setrlimit, unsigned int, struct rlimit __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsetrlimit>
#2723: FILE: include/trace/events/syscalls.h:2624:
+#define EXITCASEsetrlimit create_syscall_exit(setrlimit);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2723: FILE: include/trace/events/syscalls.h:2624:
+#define EXITCASEsetrlimit create_syscall_exit(setrlimit);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgetrusage>
#2732: FILE: include/trace/events/syscalls.h:2633:
+#define ENTERCASEgetrusage create_syscall_enter(2, getrusage, int, struct rusage __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2732: FILE: include/trace/events/syscalls.h:2633:
+#define ENTERCASEgetrusage create_syscall_enter(2, getrusage, int, struct rusage __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgetrusage>
#2733: FILE: include/trace/events/syscalls.h:2634:
+#define EXITCASEgetrusage create_syscall_exit(getrusage);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2733: FILE: include/trace/events/syscalls.h:2634:
+#define EXITCASEgetrusage create_syscall_exit(getrusage);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEumask>
#2742: FILE: include/trace/events/syscalls.h:2643:
+#define ENTERCASEumask create_syscall_enter(1, umask, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2742: FILE: include/trace/events/syscalls.h:2643:
+#define ENTERCASEumask create_syscall_enter(1, umask, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEumask>
#2743: FILE: include/trace/events/syscalls.h:2644:
+#define EXITCASEumask create_syscall_exit(umask);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2743: FILE: include/trace/events/syscalls.h:2644:
+#define EXITCASEumask create_syscall_exit(umask);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEmsgget>
#2752: FILE: include/trace/events/syscalls.h:2653:
+#define ENTERCASEmsgget create_syscall_enter(2, msgget, key_t, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2752: FILE: include/trace/events/syscalls.h:2653:
+#define ENTERCASEmsgget create_syscall_enter(2, msgget, key_t, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEmsgget>
#2753: FILE: include/trace/events/syscalls.h:2654:
+#define EXITCASEmsgget create_syscall_exit(msgget);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2753: FILE: include/trace/events/syscalls.h:2654:
+#define EXITCASEmsgget create_syscall_exit(msgget);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#2760: FILE: include/trace/events/syscalls.h:2661:
+trace_event_syscall_enter(4, msgsnd, int, msqid, struct msgbuf __user *, msgp, size_t, msgsz, int, msgflg);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEmsgsnd>
#2762: FILE: include/trace/events/syscalls.h:2663:
+#define ENTERCASEmsgsnd create_syscall_enter(4, msgsnd, int, struct msgbuf __user *, size_t, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2762: FILE: include/trace/events/syscalls.h:2663:
+#define ENTERCASEmsgsnd create_syscall_enter(4, msgsnd, int, struct msgbuf __user *, size_t, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEmsgsnd>
#2763: FILE: include/trace/events/syscalls.h:2664:
+#define EXITCASEmsgsnd create_syscall_exit(msgsnd);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2763: FILE: include/trace/events/syscalls.h:2664:
+#define EXITCASEmsgsnd create_syscall_exit(msgsnd);

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#2770: FILE: include/trace/events/syscalls.h:2671:
+trace_event_syscall_enter(5, msgrcv, int, msqid, struct msgbuf __user *, msgp, size_t, msgsz, long, msgtyp, int, msgflg);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#2772: FILE: include/trace/events/syscalls.h:2673:
+#define ENTERCASEmsgrcv create_syscall_enter(5, msgrcv, int, struct msgbuf __user *, size_t, long, int);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEmsgrcv>
#2772: FILE: include/trace/events/syscalls.h:2673:
+#define ENTERCASEmsgrcv create_syscall_enter(5, msgrcv, int, struct msgbuf __user *, size_t, long, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2772: FILE: include/trace/events/syscalls.h:2673:
+#define ENTERCASEmsgrcv create_syscall_enter(5, msgrcv, int, struct msgbuf __user *, size_t, long, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEmsgrcv>
#2773: FILE: include/trace/events/syscalls.h:2674:
+#define EXITCASEmsgrcv create_syscall_exit(msgrcv);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2773: FILE: include/trace/events/syscalls.h:2674:
+#define EXITCASEmsgrcv create_syscall_exit(msgrcv);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEmsgctl>
#2782: FILE: include/trace/events/syscalls.h:2683:
+#define ENTERCASEmsgctl create_syscall_enter(3, msgctl, int, int, struct msqid_ds __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2782: FILE: include/trace/events/syscalls.h:2683:
+#define ENTERCASEmsgctl create_syscall_enter(3, msgctl, int, int, struct msqid_ds __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEmsgctl>
#2783: FILE: include/trace/events/syscalls.h:2684:
+#define EXITCASEmsgctl create_syscall_exit(msgctl);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2783: FILE: include/trace/events/syscalls.h:2684:
+#define EXITCASEmsgctl create_syscall_exit(msgctl);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsemget>
#2792: FILE: include/trace/events/syscalls.h:2693:
+#define ENTERCASEsemget create_syscall_enter(3, semget, key_t, int, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2792: FILE: include/trace/events/syscalls.h:2693:
+#define ENTERCASEsemget create_syscall_enter(3, semget, key_t, int, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsemget>
#2793: FILE: include/trace/events/syscalls.h:2694:
+#define EXITCASEsemget create_syscall_exit(semget);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2793: FILE: include/trace/events/syscalls.h:2694:
+#define EXITCASEsemget create_syscall_exit(semget);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2800: FILE: include/trace/events/syscalls.h:2701:
+trace_event_syscall_enter(3, semop, int, semid, struct sembuf __user *, sops, unsigned, nsops);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2802: FILE: include/trace/events/syscalls.h:2703:
+#define ENTERCASEsemop create_syscall_enter(3, semop, int, struct sembuf __user *, unsigned);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsemop>
#2802: FILE: include/trace/events/syscalls.h:2703:
+#define ENTERCASEsemop create_syscall_enter(3, semop, int, struct sembuf __user *, unsigned);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2802: FILE: include/trace/events/syscalls.h:2703:
+#define ENTERCASEsemop create_syscall_enter(3, semop, int, struct sembuf __user *, unsigned);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsemop>
#2803: FILE: include/trace/events/syscalls.h:2704:
+#define EXITCASEsemop create_syscall_exit(semop);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2803: FILE: include/trace/events/syscalls.h:2704:
+#define EXITCASEsemop create_syscall_exit(semop);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsemctl>
#2812: FILE: include/trace/events/syscalls.h:2713:
+#define ENTERCASEsemctl create_syscall_enter(4, semctl, int, int, int, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2812: FILE: include/trace/events/syscalls.h:2713:
+#define ENTERCASEsemctl create_syscall_enter(4, semctl, int, int, int, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsemctl>
#2813: FILE: include/trace/events/syscalls.h:2714:
+#define EXITCASEsemctl create_syscall_exit(semctl);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2813: FILE: include/trace/events/syscalls.h:2714:
+#define EXITCASEsemctl create_syscall_exit(semctl);

WARNING:LONG_LINE: line length of 141 exceeds 100 columns
#2820: FILE: include/trace/events/syscalls.h:2721:
+trace_event_syscall_enter(4, semtimedop, int, semid, struct sembuf __user *, sops, unsigned, nsops, const struct timespec __user *, timeout);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2820: FILE: include/trace/events/syscalls.h:2721:
+trace_event_syscall_enter(4, semtimedop, int, semid, struct sembuf __user *, sops, unsigned, nsops, const struct timespec __user *, timeout);

WARNING:LONG_LINE: line length of 135 exceeds 100 columns
#2822: FILE: include/trace/events/syscalls.h:2723:
+#define ENTERCASEsemtimedop create_syscall_enter(4, semtimedop, int, struct sembuf __user *, unsigned, const struct timespec __user *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2822: FILE: include/trace/events/syscalls.h:2723:
+#define ENTERCASEsemtimedop create_syscall_enter(4, semtimedop, int, struct sembuf __user *, unsigned, const struct timespec __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsemtimedop>
#2822: FILE: include/trace/events/syscalls.h:2723:
+#define ENTERCASEsemtimedop create_syscall_enter(4, semtimedop, int, struct sembuf __user *, unsigned, const struct timespec __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2822: FILE: include/trace/events/syscalls.h:2723:
+#define ENTERCASEsemtimedop create_syscall_enter(4, semtimedop, int, struct sembuf __user *, unsigned, const struct timespec __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsemtimedop>
#2823: FILE: include/trace/events/syscalls.h:2724:
+#define EXITCASEsemtimedop create_syscall_exit(semtimedop);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2823: FILE: include/trace/events/syscalls.h:2724:
+#define EXITCASEsemtimedop create_syscall_exit(semtimedop);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEshmat>
#2832: FILE: include/trace/events/syscalls.h:2733:
+#define ENTERCASEshmat create_syscall_enter(3, shmat, int, char __user *, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2832: FILE: include/trace/events/syscalls.h:2733:
+#define ENTERCASEshmat create_syscall_enter(3, shmat, int, char __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEshmat>
#2833: FILE: include/trace/events/syscalls.h:2734:
+#define EXITCASEshmat create_syscall_exit(shmat);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2833: FILE: include/trace/events/syscalls.h:2734:
+#define EXITCASEshmat create_syscall_exit(shmat);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEshmget>
#2842: FILE: include/trace/events/syscalls.h:2743:
+#define ENTERCASEshmget create_syscall_enter(3, shmget, key_t, size_t, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2842: FILE: include/trace/events/syscalls.h:2743:
+#define ENTERCASEshmget create_syscall_enter(3, shmget, key_t, size_t, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEshmget>
#2843: FILE: include/trace/events/syscalls.h:2744:
+#define EXITCASEshmget create_syscall_exit(shmget);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2843: FILE: include/trace/events/syscalls.h:2744:
+#define EXITCASEshmget create_syscall_exit(shmget);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEshmdt>
#2852: FILE: include/trace/events/syscalls.h:2753:
+#define ENTERCASEshmdt create_syscall_enter(1, shmdt, char __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2852: FILE: include/trace/events/syscalls.h:2753:
+#define ENTERCASEshmdt create_syscall_enter(1, shmdt, char __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEshmdt>
#2853: FILE: include/trace/events/syscalls.h:2754:
+#define EXITCASEshmdt create_syscall_exit(shmdt);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2853: FILE: include/trace/events/syscalls.h:2754:
+#define EXITCASEshmdt create_syscall_exit(shmdt);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEshmctl>
#2862: FILE: include/trace/events/syscalls.h:2763:
+#define ENTERCASEshmctl create_syscall_enter(3, shmctl, int, int, struct shmid_ds __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2862: FILE: include/trace/events/syscalls.h:2763:
+#define ENTERCASEshmctl create_syscall_enter(3, shmctl, int, int, struct shmid_ds __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEshmctl>
#2863: FILE: include/trace/events/syscalls.h:2764:
+#define EXITCASEshmctl create_syscall_exit(shmctl);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2863: FILE: include/trace/events/syscalls.h:2764:
+#define EXITCASEshmctl create_syscall_exit(shmctl);

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#2870: FILE: include/trace/events/syscalls.h:2771:
+trace_event_syscall_enter(4, mq_open, const char __user *, name, int, oflag, mode_t, mode, struct mq_attr __user *, attr);

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#2872: FILE: include/trace/events/syscalls.h:2773:
+#define ENTERCASEmq_open create_syscall_enter(4, mq_open, const char __user *, int, mode_t, struct mq_attr __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEmq_open>
#2872: FILE: include/trace/events/syscalls.h:2773:
+#define ENTERCASEmq_open create_syscall_enter(4, mq_open, const char __user *, int, mode_t, struct mq_attr __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2872: FILE: include/trace/events/syscalls.h:2773:
+#define ENTERCASEmq_open create_syscall_enter(4, mq_open, const char __user *, int, mode_t, struct mq_attr __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEmq_open>
#2873: FILE: include/trace/events/syscalls.h:2774:
+#define EXITCASEmq_open create_syscall_exit(mq_open);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2873: FILE: include/trace/events/syscalls.h:2774:
+#define EXITCASEmq_open create_syscall_exit(mq_open);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEmq_unlink>
#2882: FILE: include/trace/events/syscalls.h:2783:
+#define ENTERCASEmq_unlink create_syscall_enter(1, mq_unlink, const char __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2882: FILE: include/trace/events/syscalls.h:2783:
+#define ENTERCASEmq_unlink create_syscall_enter(1, mq_unlink, const char __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEmq_unlink>
#2883: FILE: include/trace/events/syscalls.h:2784:
+#define EXITCASEmq_unlink create_syscall_exit(mq_unlink);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2883: FILE: include/trace/events/syscalls.h:2784:
+#define EXITCASEmq_unlink create_syscall_exit(mq_unlink);

WARNING:LONG_LINE: line length of 173 exceeds 100 columns
#2890: FILE: include/trace/events/syscalls.h:2791:
+trace_event_syscall_enter(5, mq_timedsend, mqd_t, mqdes, const char __user *, msg_ptr, size_t, msg_len, unsigned int, msg_prio, const struct timespec __user *, abs_timeout);

WARNING:LONG_LINE: line length of 150 exceeds 100 columns
#2892: FILE: include/trace/events/syscalls.h:2793:
+#define ENTERCASEmq_timedsend create_syscall_enter(5, mq_timedsend, mqd_t, const char __user *, size_t, unsigned int, const struct timespec __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEmq_timedsend>
#2892: FILE: include/trace/events/syscalls.h:2793:
+#define ENTERCASEmq_timedsend create_syscall_enter(5, mq_timedsend, mqd_t, const char __user *, size_t, unsigned int, const struct timespec __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2892: FILE: include/trace/events/syscalls.h:2793:
+#define ENTERCASEmq_timedsend create_syscall_enter(5, mq_timedsend, mqd_t, const char __user *, size_t, unsigned int, const struct timespec __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEmq_timedsend>
#2893: FILE: include/trace/events/syscalls.h:2794:
+#define EXITCASEmq_timedsend create_syscall_exit(mq_timedsend);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2893: FILE: include/trace/events/syscalls.h:2794:
+#define EXITCASEmq_timedsend create_syscall_exit(mq_timedsend);

WARNING:LONG_LINE: line length of 179 exceeds 100 columns
#2900: FILE: include/trace/events/syscalls.h:2801:
+trace_event_syscall_enter(5, mq_timedreceive, mqd_t, mqdes, char __user *, msg_ptr, size_t, msg_len, unsigned int __user *, msg_prio, const struct timespec __user *, abs_timeout);

WARNING:LONG_LINE: line length of 159 exceeds 100 columns
#2902: FILE: include/trace/events/syscalls.h:2803:
+#define ENTERCASEmq_timedreceive create_syscall_enter(5, mq_timedreceive, mqd_t, char __user *, size_t, unsigned int __user *, const struct timespec __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEmq_timedreceive>
#2902: FILE: include/trace/events/syscalls.h:2803:
+#define ENTERCASEmq_timedreceive create_syscall_enter(5, mq_timedreceive, mqd_t, char __user *, size_t, unsigned int __user *, const struct timespec __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2902: FILE: include/trace/events/syscalls.h:2803:
+#define ENTERCASEmq_timedreceive create_syscall_enter(5, mq_timedreceive, mqd_t, char __user *, size_t, unsigned int __user *, const struct timespec __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEmq_timedreceive>
#2903: FILE: include/trace/events/syscalls.h:2804:
+#define EXITCASEmq_timedreceive create_syscall_exit(mq_timedreceive);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2903: FILE: include/trace/events/syscalls.h:2804:
+#define EXITCASEmq_timedreceive create_syscall_exit(mq_timedreceive);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#2912: FILE: include/trace/events/syscalls.h:2813:
+#define ENTERCASEmq_notify create_syscall_enter(2, mq_notify, mqd_t, const struct sigevent __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEmq_notify>
#2912: FILE: include/trace/events/syscalls.h:2813:
+#define ENTERCASEmq_notify create_syscall_enter(2, mq_notify, mqd_t, const struct sigevent __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2912: FILE: include/trace/events/syscalls.h:2813:
+#define ENTERCASEmq_notify create_syscall_enter(2, mq_notify, mqd_t, const struct sigevent __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEmq_notify>
#2913: FILE: include/trace/events/syscalls.h:2814:
+#define EXITCASEmq_notify create_syscall_exit(mq_notify);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2913: FILE: include/trace/events/syscalls.h:2814:
+#define EXITCASEmq_notify create_syscall_exit(mq_notify);

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#2920: FILE: include/trace/events/syscalls.h:2821:
+trace_event_syscall_enter(3, mq_getsetattr, mqd_t, mqdes, const struct mq_attr __user *, mqstat, struct mq_attr __user *, omqstat);

WARNING:LONG_LINE: line length of 133 exceeds 100 columns
#2922: FILE: include/trace/events/syscalls.h:2823:
+#define ENTERCASEmq_getsetattr create_syscall_enter(3, mq_getsetattr, mqd_t, const struct mq_attr __user *, struct mq_attr __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEmq_getsetattr>
#2922: FILE: include/trace/events/syscalls.h:2823:
+#define ENTERCASEmq_getsetattr create_syscall_enter(3, mq_getsetattr, mqd_t, const struct mq_attr __user *, struct mq_attr __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2922: FILE: include/trace/events/syscalls.h:2823:
+#define ENTERCASEmq_getsetattr create_syscall_enter(3, mq_getsetattr, mqd_t, const struct mq_attr __user *, struct mq_attr __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEmq_getsetattr>
#2923: FILE: include/trace/events/syscalls.h:2824:
+#define EXITCASEmq_getsetattr create_syscall_exit(mq_getsetattr);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2923: FILE: include/trace/events/syscalls.h:2824:
+#define EXITCASEmq_getsetattr create_syscall_exit(mq_getsetattr);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#2930: FILE: include/trace/events/syscalls.h:2831:
+trace_event_syscall_enter(3, pciconfig_iobase, long, which, unsigned long, bus, unsigned long, devfn);

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#2932: FILE: include/trace/events/syscalls.h:2833:
+#define ENTERCASEpciconfig_iobase create_syscall_enter(3, pciconfig_iobase, long, unsigned long, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEpciconfig_iobase>
#2932: FILE: include/trace/events/syscalls.h:2833:
+#define ENTERCASEpciconfig_iobase create_syscall_enter(3, pciconfig_iobase, long, unsigned long, unsigned long);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2932: FILE: include/trace/events/syscalls.h:2833:
+#define ENTERCASEpciconfig_iobase create_syscall_enter(3, pciconfig_iobase, long, unsigned long, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEpciconfig_iobase>
#2933: FILE: include/trace/events/syscalls.h:2834:
+#define EXITCASEpciconfig_iobase create_syscall_exit(pciconfig_iobase);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2933: FILE: include/trace/events/syscalls.h:2834:
+#define EXITCASEpciconfig_iobase create_syscall_exit(pciconfig_iobase);

WARNING:LONG_LINE: line length of 139 exceeds 100 columns
#2940: FILE: include/trace/events/syscalls.h:2841:
+trace_event_syscall_enter(5, pciconfig_read, unsigned long bus, unsigned long dfn, unsigned long off, unsigned long len, void __user *buf);

WARNING:LONG_LINE: line length of 147 exceeds 100 columns
#2942: FILE: include/trace/events/syscalls.h:2843:
+#define ENTERCASEpciconfig_read create_syscall_enter(5, pciconfig_read, unsigned long, unsigned long, unsigned long, unsigned long, void __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEpciconfig_read>
#2942: FILE: include/trace/events/syscalls.h:2843:
+#define ENTERCASEpciconfig_read create_syscall_enter(5, pciconfig_read, unsigned long, unsigned long, unsigned long, unsigned long, void __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2942: FILE: include/trace/events/syscalls.h:2843:
+#define ENTERCASEpciconfig_read create_syscall_enter(5, pciconfig_read, unsigned long, unsigned long, unsigned long, unsigned long, void __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEpciconfig_read>
#2943: FILE: include/trace/events/syscalls.h:2844:
+#define EXITCASEpciconfig_read create_syscall_exit(pciconfig_read);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2943: FILE: include/trace/events/syscalls.h:2844:
+#define EXITCASEpciconfig_read create_syscall_exit(pciconfig_read);

WARNING:LONG_LINE: line length of 146 exceeds 100 columns
#2950: FILE: include/trace/events/syscalls.h:2851:
+trace_event_syscall_enter(5, pciconfig_write, unsigned long, bus, unsigned long, dfn, unsigned long, off, unsigned long, len, void __user *, buf);

WARNING:LONG_LINE: line length of 149 exceeds 100 columns
#2952: FILE: include/trace/events/syscalls.h:2853:
+#define ENTERCASEpciconfig_write create_syscall_enter(5, pciconfig_write, unsigned long, unsigned long, unsigned long, unsigned long, void __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEpciconfig_write>
#2952: FILE: include/trace/events/syscalls.h:2853:
+#define ENTERCASEpciconfig_write create_syscall_enter(5, pciconfig_write, unsigned long, unsigned long, unsigned long, unsigned long, void __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2952: FILE: include/trace/events/syscalls.h:2853:
+#define ENTERCASEpciconfig_write create_syscall_enter(5, pciconfig_write, unsigned long, unsigned long, unsigned long, unsigned long, void __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEpciconfig_write>
#2953: FILE: include/trace/events/syscalls.h:2854:
+#define EXITCASEpciconfig_write create_syscall_exit(pciconfig_write);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2953: FILE: include/trace/events/syscalls.h:2854:
+#define EXITCASEpciconfig_write create_syscall_exit(pciconfig_write);

WARNING:LONG_LINE: line length of 133 exceeds 100 columns
#2960: FILE: include/trace/events/syscalls.h:2861:
+trace_event_syscall_enter(5, prctl, int, option, unsigned long, arg2, unsigned long, arg3, unsigned long, arg4, unsigned long, arg5);

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#2962: FILE: include/trace/events/syscalls.h:2863:
+#define ENTERCASEprctl create_syscall_enter(5, prctl, int, unsigned long, unsigned long, unsigned long, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEprctl>
#2962: FILE: include/trace/events/syscalls.h:2863:
+#define ENTERCASEprctl create_syscall_enter(5, prctl, int, unsigned long, unsigned long, unsigned long, unsigned long);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2962: FILE: include/trace/events/syscalls.h:2863:
+#define ENTERCASEprctl create_syscall_enter(5, prctl, int, unsigned long, unsigned long, unsigned long, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEprctl>
#2963: FILE: include/trace/events/syscalls.h:2864:
+#define EXITCASEprctl create_syscall_exit(prctl);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2963: FILE: include/trace/events/syscalls.h:2864:
+#define EXITCASEprctl create_syscall_exit(prctl);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEswapon>
#2972: FILE: include/trace/events/syscalls.h:2873:
+#define ENTERCASEswapon create_syscall_enter(2, swapon, const char __user *, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2972: FILE: include/trace/events/syscalls.h:2873:
+#define ENTERCASEswapon create_syscall_enter(2, swapon, const char __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEswapon>
#2973: FILE: include/trace/events/syscalls.h:2874:
+#define EXITCASEswapon create_syscall_exit(swapon);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2973: FILE: include/trace/events/syscalls.h:2874:
+#define EXITCASEswapon create_syscall_exit(swapon);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEswapoff>
#2982: FILE: include/trace/events/syscalls.h:2883:
+#define ENTERCASEswapoff create_syscall_enter(1, swapoff, const char __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2982: FILE: include/trace/events/syscalls.h:2883:
+#define ENTERCASEswapoff create_syscall_enter(1, swapoff, const char __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEswapoff>
#2983: FILE: include/trace/events/syscalls.h:2884:
+#define EXITCASEswapoff create_syscall_exit(swapoff);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2983: FILE: include/trace/events/syscalls.h:2884:
+#define EXITCASEswapoff create_syscall_exit(swapoff);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsysctl>
#2992: FILE: include/trace/events/syscalls.h:2893:
+#define ENTERCASEsysctl create_syscall_enter(1, sysctl, struct __sysctl_args __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2992: FILE: include/trace/events/syscalls.h:2893:
+#define ENTERCASEsysctl create_syscall_enter(1, sysctl, struct __sysctl_args __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsysctl>
#2993: FILE: include/trace/events/syscalls.h:2894:
+#define EXITCASEsysctl create_syscall_exit(sysctl);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2993: FILE: include/trace/events/syscalls.h:2894:
+#define EXITCASEsysctl create_syscall_exit(sysctl);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsysinfo>
#3002: FILE: include/trace/events/syscalls.h:2903:
+#define ENTERCASEsysinfo create_syscall_enter(1, sysinfo, struct sysinfo __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3002: FILE: include/trace/events/syscalls.h:2903:
+#define ENTERCASEsysinfo create_syscall_enter(1, sysinfo, struct sysinfo __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsysinfo>
#3003: FILE: include/trace/events/syscalls.h:2904:
+#define EXITCASEsysinfo create_syscall_exit(sysinfo);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3003: FILE: include/trace/events/syscalls.h:2904:
+#define EXITCASEsysinfo create_syscall_exit(sysinfo);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsysfs>
#3012: FILE: include/trace/events/syscalls.h:2913:
+#define ENTERCASEsysfs create_syscall_enter(3, sysfs, int, unsigned long, unsigned long);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3012: FILE: include/trace/events/syscalls.h:2913:
+#define ENTERCASEsysfs create_syscall_enter(3, sysfs, int, unsigned long, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsysfs>
#3013: FILE: include/trace/events/syscalls.h:2914:
+#define EXITCASEsysfs create_syscall_exit(sysfs);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3013: FILE: include/trace/events/syscalls.h:2914:
+#define EXITCASEsysfs create_syscall_exit(sysfs);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#3020: FILE: include/trace/events/syscalls.h:2921:
+trace_event_syscall_enter(3, nfsservctl, int, cmd, struct nfsctl_arg __user *, arg, void __user *, res);

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#3022: FILE: include/trace/events/syscalls.h:2923:
+#define ENTERCASEnfsservctl create_syscall_enter(3, nfsservctl, int, struct nfsctl_arg __user *, void __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEnfsservctl>
#3022: FILE: include/trace/events/syscalls.h:2923:
+#define ENTERCASEnfsservctl create_syscall_enter(3, nfsservctl, int, struct nfsctl_arg __user *, void __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3022: FILE: include/trace/events/syscalls.h:2923:
+#define ENTERCASEnfsservctl create_syscall_enter(3, nfsservctl, int, struct nfsctl_arg __user *, void __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEnfsservctl>
#3023: FILE: include/trace/events/syscalls.h:2924:
+#define EXITCASEnfsservctl create_syscall_exit(nfsservctl);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3023: FILE: include/trace/events/syscalls.h:2924:
+#define EXITCASEnfsservctl create_syscall_exit(nfsservctl);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsyslog>
#3032: FILE: include/trace/events/syscalls.h:2933:
+#define ENTERCASEsyslog create_syscall_enter(3, syslog, int, char __user *, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3032: FILE: include/trace/events/syscalls.h:2933:
+#define ENTERCASEsyslog create_syscall_enter(3, syslog, int, char __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsyslog>
#3033: FILE: include/trace/events/syscalls.h:2934:
+#define EXITCASEsyslog create_syscall_exit(syslog);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3033: FILE: include/trace/events/syscalls.h:2934:
+#define EXITCASEsyslog create_syscall_exit(syslog);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEuselib>
#3042: FILE: include/trace/events/syscalls.h:2943:
+#define ENTERCASEuselib create_syscall_enter(1, uselib, const char __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3042: FILE: include/trace/events/syscalls.h:2943:
+#define ENTERCASEuselib create_syscall_enter(1, uselib, const char __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEuselib>
#3043: FILE: include/trace/events/syscalls.h:2944:
+#define EXITCASEuselib create_syscall_exit(uselib);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3043: FILE: include/trace/events/syscalls.h:2944:
+#define EXITCASEuselib create_syscall_exit(uselib);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEni_syscall>
#3052: FILE: include/trace/events/syscalls.h:2953:
+#define ENTERCASEni_syscall create_syscall_enter(0, ni_syscall);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3052: FILE: include/trace/events/syscalls.h:2953:
+#define ENTERCASEni_syscall create_syscall_enter(0, ni_syscall);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEni_syscall>
#3053: FILE: include/trace/events/syscalls.h:2954:
+#define EXITCASEni_syscall create_syscall_exit(ni_syscall);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3053: FILE: include/trace/events/syscalls.h:2954:
+#define EXITCASEni_syscall create_syscall_exit(ni_syscall);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEptrace>
#3062: FILE: include/trace/events/syscalls.h:2963:
+#define ENTERCASEptrace create_syscall_enter(4, ptrace, long, long, long, long);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3062: FILE: include/trace/events/syscalls.h:2963:
+#define ENTERCASEptrace create_syscall_enter(4, ptrace, long, long, long, long);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEptrace>
#3063: FILE: include/trace/events/syscalls.h:2964:
+#define EXITCASEptrace create_syscall_exit(ptrace);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3063: FILE: include/trace/events/syscalls.h:2964:
+#define EXITCASEptrace create_syscall_exit(ptrace);

WARNING:LONG_LINE: line length of 172 exceeds 100 columns
#3070: FILE: include/trace/events/syscalls.h:2971:
+trace_event_syscall_enter(5, add_key, const char __user *, _type, const char __user *, _description, const void __user *, _payload, size_t, plen, key_serial_t, destringid);

WARNING:LONG_LINE: line length of 143 exceeds 100 columns
#3072: FILE: include/trace/events/syscalls.h:2973:
+#define ENTERCASEadd_key create_syscall_enter(5, add_key, const char __user *, const char __user *, const void __user *, size_t, key_serial_t);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEadd_key>
#3072: FILE: include/trace/events/syscalls.h:2973:
+#define ENTERCASEadd_key create_syscall_enter(5, add_key, const char __user *, const char __user *, const void __user *, size_t, key_serial_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3072: FILE: include/trace/events/syscalls.h:2973:
+#define ENTERCASEadd_key create_syscall_enter(5, add_key, const char __user *, const char __user *, const void __user *, size_t, key_serial_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEadd_key>
#3073: FILE: include/trace/events/syscalls.h:2974:
+#define EXITCASEadd_key create_syscall_exit(add_key);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3073: FILE: include/trace/events/syscalls.h:2974:
+#define EXITCASEadd_key create_syscall_exit(add_key);

WARNING:LONG_LINE: line length of 167 exceeds 100 columns
#3080: FILE: include/trace/events/syscalls.h:2981:
+trace_event_syscall_enter(4, request_key, const char __user *, _type, const char __user *, _description, const char __user *, _callout_info, key_serial_t, destringid);

WARNING:LONG_LINE: line length of 143 exceeds 100 columns
#3082: FILE: include/trace/events/syscalls.h:2983:
+#define ENTERCASErequest_key create_syscall_enter(4, request_key, const char __user *, const char __user *, const char __user *, key_serial_t);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASErequest_key>
#3082: FILE: include/trace/events/syscalls.h:2983:
+#define ENTERCASErequest_key create_syscall_enter(4, request_key, const char __user *, const char __user *, const char __user *, key_serial_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3082: FILE: include/trace/events/syscalls.h:2983:
+#define ENTERCASErequest_key create_syscall_enter(4, request_key, const char __user *, const char __user *, const char __user *, key_serial_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASErequest_key>
#3083: FILE: include/trace/events/syscalls.h:2984:
+#define EXITCASErequest_key create_syscall_exit(request_key);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3083: FILE: include/trace/events/syscalls.h:2984:
+#define EXITCASErequest_key create_syscall_exit(request_key);

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#3090: FILE: include/trace/events/syscalls.h:2991:
+trace_event_syscall_enter(5, keyctl, int, cmd, unsigned long, arg2, unsigned long, arg3, unsigned long, arg4, unsigned long, arg5);

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#3092: FILE: include/trace/events/syscalls.h:2993:
+#define ENTERCASEkeyctl create_syscall_enter(5, keyctl, int, unsigned long, unsigned long, unsigned long, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEkeyctl>
#3092: FILE: include/trace/events/syscalls.h:2993:
+#define ENTERCASEkeyctl create_syscall_enter(5, keyctl, int, unsigned long, unsigned long, unsigned long, unsigned long);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3092: FILE: include/trace/events/syscalls.h:2993:
+#define ENTERCASEkeyctl create_syscall_enter(5, keyctl, int, unsigned long, unsigned long, unsigned long, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEkeyctl>
#3093: FILE: include/trace/events/syscalls.h:2994:
+#define EXITCASEkeyctl create_syscall_exit(keyctl);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3093: FILE: include/trace/events/syscalls.h:2994:
+#define EXITCASEkeyctl create_syscall_exit(keyctl);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEioprio_set>
#3102: FILE: include/trace/events/syscalls.h:3003:
+#define ENTERCASEioprio_set create_syscall_enter(3, ioprio_set, int, int, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3102: FILE: include/trace/events/syscalls.h:3003:
+#define ENTERCASEioprio_set create_syscall_enter(3, ioprio_set, int, int, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEioprio_set>
#3103: FILE: include/trace/events/syscalls.h:3004:
+#define EXITCASEioprio_set create_syscall_exit(ioprio_set);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3103: FILE: include/trace/events/syscalls.h:3004:
+#define EXITCASEioprio_set create_syscall_exit(ioprio_set);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEioprio_get>
#3112: FILE: include/trace/events/syscalls.h:3013:
+#define ENTERCASEioprio_get create_syscall_enter(2, ioprio_get, int, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3112: FILE: include/trace/events/syscalls.h:3013:
+#define ENTERCASEioprio_get create_syscall_enter(2, ioprio_get, int, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEioprio_get>
#3113: FILE: include/trace/events/syscalls.h:3014:
+#define EXITCASEioprio_get create_syscall_exit(ioprio_get);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3113: FILE: include/trace/events/syscalls.h:3014:
+#define EXITCASEioprio_get create_syscall_exit(ioprio_get);

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#3120: FILE: include/trace/events/syscalls.h:3021:
+trace_event_syscall_enter(3, set_mempolicy, int, mode, unsigned long __user *, nmask, unsigned long, maxnode);

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#3122: FILE: include/trace/events/syscalls.h:3023:
+#define ENTERCASEset_mempolicy create_syscall_enter(3, set_mempolicy, int, unsigned long __user *, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEset_mempolicy>
#3122: FILE: include/trace/events/syscalls.h:3023:
+#define ENTERCASEset_mempolicy create_syscall_enter(3, set_mempolicy, int, unsigned long __user *, unsigned long);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3122: FILE: include/trace/events/syscalls.h:3023:
+#define ENTERCASEset_mempolicy create_syscall_enter(3, set_mempolicy, int, unsigned long __user *, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEset_mempolicy>
#3123: FILE: include/trace/events/syscalls.h:3024:
+#define EXITCASEset_mempolicy create_syscall_exit(set_mempolicy);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3123: FILE: include/trace/events/syscalls.h:3024:
+#define EXITCASEset_mempolicy create_syscall_exit(set_mempolicy);

WARNING:LONG_LINE: line length of 150 exceeds 100 columns
#3130: FILE: include/trace/events/syscalls.h:3031:
+trace_event_syscall_enter(4, migrate_pages, pid_t, pid, unsigned long, maxnode, const unsigned long __user *, from, const unsigned long __user *, to);

WARNING:LONG_LINE: line length of 152 exceeds 100 columns
#3132: FILE: include/trace/events/syscalls.h:3033:
+#define ENTERCASEmigrate_pages create_syscall_enter(4, migrate_pages, pid_t, unsigned long, const unsigned long __user *, const unsigned long __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEmigrate_pages>
#3132: FILE: include/trace/events/syscalls.h:3033:
+#define ENTERCASEmigrate_pages create_syscall_enter(4, migrate_pages, pid_t, unsigned long, const unsigned long __user *, const unsigned long __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3132: FILE: include/trace/events/syscalls.h:3033:
+#define ENTERCASEmigrate_pages create_syscall_enter(4, migrate_pages, pid_t, unsigned long, const unsigned long __user *, const unsigned long __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEmigrate_pages>
#3133: FILE: include/trace/events/syscalls.h:3034:
+#define EXITCASEmigrate_pages create_syscall_exit(migrate_pages);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3133: FILE: include/trace/events/syscalls.h:3034:
+#define EXITCASEmigrate_pages create_syscall_exit(migrate_pages);

WARNING:LONG_LINE: line length of 176 exceeds 100 columns
#3140: FILE: include/trace/events/syscalls.h:3041:
+trace_event_syscall_enter(6, move_pages, pid_t, pid, unsigned long, nr_pages, const void __user * __user *, pages, const int __user *, nodes, int __user *, status, int, flags);

WARNING:LONG_LINE: line length of 155 exceeds 100 columns
#3142: FILE: include/trace/events/syscalls.h:3043:
+#define ENTERCASEmove_pages create_syscall_enter(6, move_pages, pid_t, unsigned long, const void __user * __user *, const int __user *, int __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEmove_pages>
#3142: FILE: include/trace/events/syscalls.h:3043:
+#define ENTERCASEmove_pages create_syscall_enter(6, move_pages, pid_t, unsigned long, const void __user * __user *, const int __user *, int __user *, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3142: FILE: include/trace/events/syscalls.h:3043:
+#define ENTERCASEmove_pages create_syscall_enter(6, move_pages, pid_t, unsigned long, const void __user * __user *, const int __user *, int __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEmove_pages>
#3143: FILE: include/trace/events/syscalls.h:3044:
+#define EXITCASEmove_pages create_syscall_exit(move_pages);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3143: FILE: include/trace/events/syscalls.h:3044:
+#define EXITCASEmove_pages create_syscall_exit(move_pages);

WARNING:LONG_LINE: line length of 171 exceeds 100 columns
#3150: FILE: include/trace/events/syscalls.h:3051:
+trace_event_syscall_enter(6, mbind, unsigned long, start, unsigned long, len, unsigned long, mode, unsigned long __user *, nmask, unsigned long, maxnode, unsigned, flags);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3150: FILE: include/trace/events/syscalls.h:3051:
+trace_event_syscall_enter(6, mbind, unsigned long, start, unsigned long, len, unsigned long, mode, unsigned long __user *, nmask, unsigned long, maxnode, unsigned, flags);

WARNING:LONG_LINE: line length of 148 exceeds 100 columns
#3152: FILE: include/trace/events/syscalls.h:3053:
+#define ENTERCASEmbind create_syscall_enter(6, mbind, unsigned long, unsigned long, unsigned long, unsigned long __user *, unsigned long, unsigned);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3152: FILE: include/trace/events/syscalls.h:3053:
+#define ENTERCASEmbind create_syscall_enter(6, mbind, unsigned long, unsigned long, unsigned long, unsigned long __user *, unsigned long, unsigned);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEmbind>
#3152: FILE: include/trace/events/syscalls.h:3053:
+#define ENTERCASEmbind create_syscall_enter(6, mbind, unsigned long, unsigned long, unsigned long, unsigned long __user *, unsigned long, unsigned);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3152: FILE: include/trace/events/syscalls.h:3053:
+#define ENTERCASEmbind create_syscall_enter(6, mbind, unsigned long, unsigned long, unsigned long, unsigned long __user *, unsigned long, unsigned);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEmbind>
#3153: FILE: include/trace/events/syscalls.h:3054:
+#define EXITCASEmbind create_syscall_exit(mbind);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3153: FILE: include/trace/events/syscalls.h:3054:
+#define EXITCASEmbind create_syscall_exit(mbind);

WARNING:LONG_LINE: line length of 164 exceeds 100 columns
#3160: FILE: include/trace/events/syscalls.h:3061:
+trace_event_syscall_enter(5, get_mempolicy, int __user *, policy, unsigned long __user *, nmask, unsigned long, maxnode, unsigned long, addr, unsigned long, flags);

WARNING:LONG_LINE: line length of 153 exceeds 100 columns
#3162: FILE: include/trace/events/syscalls.h:3063:
+#define ENTERCASEget_mempolicy create_syscall_enter(5, get_mempolicy, int __user *, unsigned long __user *, unsigned long, unsigned long, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEget_mempolicy>
#3162: FILE: include/trace/events/syscalls.h:3063:
+#define ENTERCASEget_mempolicy create_syscall_enter(5, get_mempolicy, int __user *, unsigned long __user *, unsigned long, unsigned long, unsigned long);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3162: FILE: include/trace/events/syscalls.h:3063:
+#define ENTERCASEget_mempolicy create_syscall_enter(5, get_mempolicy, int __user *, unsigned long __user *, unsigned long, unsigned long, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEget_mempolicy>
#3163: FILE: include/trace/events/syscalls.h:3064:
+#define EXITCASEget_mempolicy create_syscall_exit(get_mempolicy);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3163: FILE: include/trace/events/syscalls.h:3064:
+#define EXITCASEget_mempolicy create_syscall_exit(get_mempolicy);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEinotify_init>
#3172: FILE: include/trace/events/syscalls.h:3073:
+#define ENTERCASEinotify_init create_syscall_enter(0, inotify_init);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3172: FILE: include/trace/events/syscalls.h:3073:
+#define ENTERCASEinotify_init create_syscall_enter(0, inotify_init);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEinotify_init>
#3173: FILE: include/trace/events/syscalls.h:3074:
+#define EXITCASEinotify_init create_syscall_exit(inotify_init);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3173: FILE: include/trace/events/syscalls.h:3074:
+#define EXITCASEinotify_init create_syscall_exit(inotify_init);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEinotify_init1>
#3182: FILE: include/trace/events/syscalls.h:3083:
+#define ENTERCASEinotify_init1 create_syscall_enter(1, inotify_init1, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3182: FILE: include/trace/events/syscalls.h:3083:
+#define ENTERCASEinotify_init1 create_syscall_enter(1, inotify_init1, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEinotify_init1>
#3183: FILE: include/trace/events/syscalls.h:3084:
+#define EXITCASEinotify_init1 create_syscall_exit(inotify_init1);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3183: FILE: include/trace/events/syscalls.h:3084:
+#define EXITCASEinotify_init1 create_syscall_exit(inotify_init1);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#3192: FILE: include/trace/events/syscalls.h:3093:
+#define ENTERCASEinotify_add_watch create_syscall_enter(3, inotify_add_watch, int, const char __user *, u32);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEinotify_add_watch>
#3192: FILE: include/trace/events/syscalls.h:3093:
+#define ENTERCASEinotify_add_watch create_syscall_enter(3, inotify_add_watch, int, const char __user *, u32);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3192: FILE: include/trace/events/syscalls.h:3093:
+#define ENTERCASEinotify_add_watch create_syscall_enter(3, inotify_add_watch, int, const char __user *, u32);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEinotify_add_watch>
#3193: FILE: include/trace/events/syscalls.h:3094:
+#define EXITCASEinotify_add_watch create_syscall_exit(inotify_add_watch);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3193: FILE: include/trace/events/syscalls.h:3094:
+#define EXITCASEinotify_add_watch create_syscall_exit(inotify_add_watch);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEinotify_rm_watch>
#3202: FILE: include/trace/events/syscalls.h:3103:
+#define ENTERCASEinotify_rm_watch create_syscall_enter(2, inotify_rm_watch, int, __s32);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3202: FILE: include/trace/events/syscalls.h:3103:
+#define ENTERCASEinotify_rm_watch create_syscall_enter(2, inotify_rm_watch, int, __s32);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEinotify_rm_watch>
#3203: FILE: include/trace/events/syscalls.h:3104:
+#define EXITCASEinotify_rm_watch create_syscall_exit(inotify_rm_watch);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3203: FILE: include/trace/events/syscalls.h:3104:
+#define EXITCASEinotify_rm_watch create_syscall_exit(inotify_rm_watch);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEspu_run>
#3212: FILE: include/trace/events/syscalls.h:3113:
+#define ENTERCASEspu_run create_syscall_enter(3, spu_run, int, __u32 __user *, __u32 __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3212: FILE: include/trace/events/syscalls.h:3113:
+#define ENTERCASEspu_run create_syscall_enter(3, spu_run, int, __u32 __user *, __u32 __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEspu_run>
#3213: FILE: include/trace/events/syscalls.h:3114:
+#define EXITCASEspu_run create_syscall_exit(spu_run);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3213: FILE: include/trace/events/syscalls.h:3114:
+#define EXITCASEspu_run create_syscall_exit(spu_run);

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#3220: FILE: include/trace/events/syscalls.h:3121:
+trace_event_syscall_enter(4, spu_create, const char __user *, name, unsigned int, flags, mode_t, mode, int, fd);

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#3222: FILE: include/trace/events/syscalls.h:3123:
+#define ENTERCASEspu_create create_syscall_enter(4, spu_create, const char __user *, unsigned int, mode_t, int);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEspu_create>
#3222: FILE: include/trace/events/syscalls.h:3123:
+#define ENTERCASEspu_create create_syscall_enter(4, spu_create, const char __user *, unsigned int, mode_t, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3222: FILE: include/trace/events/syscalls.h:3123:
+#define ENTERCASEspu_create create_syscall_enter(4, spu_create, const char __user *, unsigned int, mode_t, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEspu_create>
#3223: FILE: include/trace/events/syscalls.h:3124:
+#define EXITCASEspu_create create_syscall_exit(spu_create);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3223: FILE: include/trace/events/syscalls.h:3124:
+#define EXITCASEspu_create create_syscall_exit(spu_create);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#3230: FILE: include/trace/events/syscalls.h:3131:
+trace_event_syscall_enter(4, mknodat, int, dfd, const char __user *, filename, int, mode, unsigned, dev);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3230: FILE: include/trace/events/syscalls.h:3131:
+trace_event_syscall_enter(4, mknodat, int, dfd, const char __user *, filename, int, mode, unsigned, dev);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3232: FILE: include/trace/events/syscalls.h:3133:
+#define ENTERCASEmknodat create_syscall_enter(4, mknodat, int, const char __user *, int, unsigned);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEmknodat>
#3232: FILE: include/trace/events/syscalls.h:3133:
+#define ENTERCASEmknodat create_syscall_enter(4, mknodat, int, const char __user *, int, unsigned);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3232: FILE: include/trace/events/syscalls.h:3133:
+#define ENTERCASEmknodat create_syscall_enter(4, mknodat, int, const char __user *, int, unsigned);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEmknodat>
#3233: FILE: include/trace/events/syscalls.h:3134:
+#define EXITCASEmknodat create_syscall_exit(mknodat);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3233: FILE: include/trace/events/syscalls.h:3134:
+#define EXITCASEmknodat create_syscall_exit(mknodat);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEmkdirat>
#3242: FILE: include/trace/events/syscalls.h:3143:
+#define ENTERCASEmkdirat create_syscall_enter(3, mkdirat, int, const char __user *, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3242: FILE: include/trace/events/syscalls.h:3143:
+#define ENTERCASEmkdirat create_syscall_enter(3, mkdirat, int, const char __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEmkdirat>
#3243: FILE: include/trace/events/syscalls.h:3144:
+#define EXITCASEmkdirat create_syscall_exit(mkdirat);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3243: FILE: include/trace/events/syscalls.h:3144:
+#define EXITCASEmkdirat create_syscall_exit(mkdirat);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEunlinkat>
#3252: FILE: include/trace/events/syscalls.h:3153:
+#define ENTERCASEunlinkat create_syscall_enter(3, unlinkat, int, const char __user *, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3252: FILE: include/trace/events/syscalls.h:3153:
+#define ENTERCASEunlinkat create_syscall_enter(3, unlinkat, int, const char __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEunlinkat>
#3253: FILE: include/trace/events/syscalls.h:3154:
+#define EXITCASEunlinkat create_syscall_exit(unlinkat);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3253: FILE: include/trace/events/syscalls.h:3154:
+#define EXITCASEunlinkat create_syscall_exit(unlinkat);

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#3260: FILE: include/trace/events/syscalls.h:3161:
+trace_event_syscall_enter(3, symlinkat, const char __user *, oldname, int, newdfd, const char __user *, newname);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#3262: FILE: include/trace/events/syscalls.h:3163:
+#define ENTERCASEsymlinkat create_syscall_enter(3, symlinkat, const char __user *, int, const char __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsymlinkat>
#3262: FILE: include/trace/events/syscalls.h:3163:
+#define ENTERCASEsymlinkat create_syscall_enter(3, symlinkat, const char __user *, int, const char __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3262: FILE: include/trace/events/syscalls.h:3163:
+#define ENTERCASEsymlinkat create_syscall_enter(3, symlinkat, const char __user *, int, const char __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsymlinkat>
#3263: FILE: include/trace/events/syscalls.h:3164:
+#define EXITCASEsymlinkat create_syscall_exit(symlinkat);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3263: FILE: include/trace/events/syscalls.h:3164:
+#define EXITCASEsymlinkat create_syscall_exit(symlinkat);

WARNING:LONG_LINE: line length of 135 exceeds 100 columns
#3270: FILE: include/trace/events/syscalls.h:3171:
+trace_event_syscall_enter(5, linkat, int, olddfd, const char __user *, oldname, int, newdfd, const char __user *, newname, int, flags);

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#3272: FILE: include/trace/events/syscalls.h:3173:
+#define ENTERCASElinkat create_syscall_enter(5, linkat, int, const char __user *, int, const char __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASElinkat>
#3272: FILE: include/trace/events/syscalls.h:3173:
+#define ENTERCASElinkat create_syscall_enter(5, linkat, int, const char __user *, int, const char __user *, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3272: FILE: include/trace/events/syscalls.h:3173:
+#define ENTERCASElinkat create_syscall_enter(5, linkat, int, const char __user *, int, const char __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASElinkat>
#3273: FILE: include/trace/events/syscalls.h:3174:
+#define EXITCASElinkat create_syscall_exit(linkat);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3273: FILE: include/trace/events/syscalls.h:3174:
+#define EXITCASElinkat create_syscall_exit(linkat);

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#3280: FILE: include/trace/events/syscalls.h:3181:
+trace_event_syscall_enter(4, renameat, int, olddfd, const char __user *, oldname, int, newdfd, const char __user *, newname);

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#3282: FILE: include/trace/events/syscalls.h:3183:
+#define ENTERCASErenameat create_syscall_enter(4, renameat, int, const char __user *, int, const char __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASErenameat>
#3282: FILE: include/trace/events/syscalls.h:3183:
+#define ENTERCASErenameat create_syscall_enter(4, renameat, int, const char __user *, int, const char __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3282: FILE: include/trace/events/syscalls.h:3183:
+#define ENTERCASErenameat create_syscall_enter(4, renameat, int, const char __user *, int, const char __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASErenameat>
#3283: FILE: include/trace/events/syscalls.h:3184:
+#define EXITCASErenameat create_syscall_exit(renameat);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3283: FILE: include/trace/events/syscalls.h:3184:
+#define EXITCASErenameat create_syscall_exit(renameat);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#3290: FILE: include/trace/events/syscalls.h:3191:
+trace_event_syscall_enter(3, futimesat, int, dfd, char __user *, filename, struct timeval __user *, utimes);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#3292: FILE: include/trace/events/syscalls.h:3193:
+#define ENTERCASEfutimesat create_syscall_enter(3, futimesat, int, char __user *, struct timeval __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEfutimesat>
#3292: FILE: include/trace/events/syscalls.h:3193:
+#define ENTERCASEfutimesat create_syscall_enter(3, futimesat, int, char __user *, struct timeval __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3292: FILE: include/trace/events/syscalls.h:3193:
+#define ENTERCASEfutimesat create_syscall_enter(3, futimesat, int, char __user *, struct timeval __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEfutimesat>
#3293: FILE: include/trace/events/syscalls.h:3194:
+#define EXITCASEfutimesat create_syscall_exit(futimesat);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3293: FILE: include/trace/events/syscalls.h:3194:
+#define EXITCASEfutimesat create_syscall_exit(futimesat);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEfaccessat>
#3302: FILE: include/trace/events/syscalls.h:3203:
+#define ENTERCASEfaccessat create_syscall_enter(3, faccessat, int, const char __user *, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3302: FILE: include/trace/events/syscalls.h:3203:
+#define ENTERCASEfaccessat create_syscall_enter(3, faccessat, int, const char __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEfaccessat>
#3303: FILE: include/trace/events/syscalls.h:3204:
+#define EXITCASEfaccessat create_syscall_exit(faccessat);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3303: FILE: include/trace/events/syscalls.h:3204:
+#define EXITCASEfaccessat create_syscall_exit(faccessat);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEfchmodat>
#3312: FILE: include/trace/events/syscalls.h:3213:
+#define ENTERCASEfchmodat create_syscall_enter(3, fchmodat, int, const char __user *, mode_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3312: FILE: include/trace/events/syscalls.h:3213:
+#define ENTERCASEfchmodat create_syscall_enter(3, fchmodat, int, const char __user *, mode_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEfchmodat>
#3313: FILE: include/trace/events/syscalls.h:3214:
+#define EXITCASEfchmodat create_syscall_exit(fchmodat);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3313: FILE: include/trace/events/syscalls.h:3214:
+#define EXITCASEfchmodat create_syscall_exit(fchmodat);

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#3320: FILE: include/trace/events/syscalls.h:3221:
+trace_event_syscall_enter(5, fchownat, int, dfd, const char __user *, filename, uid_t, user, gid_t, group, int, flag);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#3322: FILE: include/trace/events/syscalls.h:3223:
+#define ENTERCASEfchownat create_syscall_enter(5, fchownat, int, const char __user *, uid_t, gid_t, int);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEfchownat>
#3322: FILE: include/trace/events/syscalls.h:3223:
+#define ENTERCASEfchownat create_syscall_enter(5, fchownat, int, const char __user *, uid_t, gid_t, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3322: FILE: include/trace/events/syscalls.h:3223:
+#define ENTERCASEfchownat create_syscall_enter(5, fchownat, int, const char __user *, uid_t, gid_t, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEfchownat>
#3323: FILE: include/trace/events/syscalls.h:3224:
+#define EXITCASEfchownat create_syscall_exit(fchownat);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3323: FILE: include/trace/events/syscalls.h:3224:
+#define EXITCASEfchownat create_syscall_exit(fchownat);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#3330: FILE: include/trace/events/syscalls.h:3231:
+trace_event_syscall_enter(4, openat, int, dfd, const char __user *, filename, int, flags, int, mode);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEopenat>
#3332: FILE: include/trace/events/syscalls.h:3233:
+#define ENTERCASEopenat create_syscall_enter(4, openat, int, const char __user *, int, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3332: FILE: include/trace/events/syscalls.h:3233:
+#define ENTERCASEopenat create_syscall_enter(4, openat, int, const char __user *, int, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEopenat>
#3333: FILE: include/trace/events/syscalls.h:3234:
+#define EXITCASEopenat create_syscall_exit(openat);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3333: FILE: include/trace/events/syscalls.h:3234:
+#define EXITCASEopenat create_syscall_exit(openat);

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#3340: FILE: include/trace/events/syscalls.h:3241:
+trace_event_syscall_enter(4, newfstatat, int, dfd, char __user *, filename, struct stat __user *, statbuf, int, flag);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#3342: FILE: include/trace/events/syscalls.h:3243:
+#define ENTERCASEnewfstatat create_syscall_enter(4, newfstatat, int, char __user *, struct stat __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEnewfstatat>
#3342: FILE: include/trace/events/syscalls.h:3243:
+#define ENTERCASEnewfstatat create_syscall_enter(4, newfstatat, int, char __user *, struct stat __user *, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3342: FILE: include/trace/events/syscalls.h:3243:
+#define ENTERCASEnewfstatat create_syscall_enter(4, newfstatat, int, char __user *, struct stat __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEnewfstatat>
#3343: FILE: include/trace/events/syscalls.h:3244:
+#define EXITCASEnewfstatat create_syscall_exit(newfstatat);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3343: FILE: include/trace/events/syscalls.h:3244:
+#define EXITCASEnewfstatat create_syscall_exit(newfstatat);

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#3350: FILE: include/trace/events/syscalls.h:3251:
+trace_event_syscall_enter(4, fstatat64, int dfd, char __user *filename, struct stat64 __user *statbuf, int, flag);

WARNING:LONG_LINE: line length of 141 exceeds 100 columns
#3352: FILE: include/trace/events/syscalls.h:3253:
+#define ENTERCASEfstatat64 create_syscall_enter(4, fstatat64, int, dfd, char __user *, filename, struct stat64 __user *, statbuf, int, flag);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEfstatat64>
#3352: FILE: include/trace/events/syscalls.h:3253:
+#define ENTERCASEfstatat64 create_syscall_enter(4, fstatat64, int, dfd, char __user *, filename, struct stat64 __user *, statbuf, int, flag);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3352: FILE: include/trace/events/syscalls.h:3253:
+#define ENTERCASEfstatat64 create_syscall_enter(4, fstatat64, int, dfd, char __user *, filename, struct stat64 __user *, statbuf, int, flag);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEfstatat64>
#3353: FILE: include/trace/events/syscalls.h:3254:
+#define EXITCASEfstatat64 create_syscall_exit(fstatat64);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3353: FILE: include/trace/events/syscalls.h:3254:
+#define EXITCASEfstatat64 create_syscall_exit(fstatat64);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#3360: FILE: include/trace/events/syscalls.h:3261:
+trace_event_syscall_enter(4, readlinkat, int, dfd, const char __user *, path, char __user *, buf, int, bufsiz);

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#3362: FILE: include/trace/events/syscalls.h:3263:
+#define ENTERCASEreadlinkat create_syscall_enter(4, readlinkat, int, const char __user *, char __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEreadlinkat>
#3362: FILE: include/trace/events/syscalls.h:3263:
+#define ENTERCASEreadlinkat create_syscall_enter(4, readlinkat, int, const char __user *, char __user *, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3362: FILE: include/trace/events/syscalls.h:3263:
+#define ENTERCASEreadlinkat create_syscall_enter(4, readlinkat, int, const char __user *, char __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEreadlinkat>
#3363: FILE: include/trace/events/syscalls.h:3264:
+#define EXITCASEreadlinkat create_syscall_exit(readlinkat);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3363: FILE: include/trace/events/syscalls.h:3264:
+#define EXITCASEreadlinkat create_syscall_exit(readlinkat);

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#3370: FILE: include/trace/events/syscalls.h:3271:
+trace_event_syscall_enter(4, utimensat, int, dfd, char __user *, filename, struct timespec __user *, utimes, int, flags);

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#3372: FILE: include/trace/events/syscalls.h:3273:
+#define ENTERCASEutimensat create_syscall_enter(4, utimensat, int, char __user *, struct timespec __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEutimensat>
#3372: FILE: include/trace/events/syscalls.h:3273:
+#define ENTERCASEutimensat create_syscall_enter(4, utimensat, int, char __user *, struct timespec __user *, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3372: FILE: include/trace/events/syscalls.h:3273:
+#define ENTERCASEutimensat create_syscall_enter(4, utimensat, int, char __user *, struct timespec __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEutimensat>
#3373: FILE: include/trace/events/syscalls.h:3274:
+#define EXITCASEutimensat create_syscall_exit(utimensat);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3373: FILE: include/trace/events/syscalls.h:3274:
+#define EXITCASEutimensat create_syscall_exit(utimensat);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEunshare>
#3382: FILE: include/trace/events/syscalls.h:3283:
+#define ENTERCASEunshare create_syscall_enter(1, unshare, unsigned long);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3382: FILE: include/trace/events/syscalls.h:3283:
+#define ENTERCASEunshare create_syscall_enter(1, unshare, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEunshare>
#3383: FILE: include/trace/events/syscalls.h:3284:
+#define EXITCASEunshare create_syscall_exit(unshare);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3383: FILE: include/trace/events/syscalls.h:3284:
+#define EXITCASEunshare create_syscall_exit(unshare);

WARNING:LONG_LINE: line length of 147 exceeds 100 columns
#3390: FILE: include/trace/events/syscalls.h:3291:
+trace_event_syscall_enter(6, splice, int, fd_in, loff_t __user *, off_in, int, fd_out, loff_t __user *, off_out, size_t, len, unsigned int, flags);

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#3392: FILE: include/trace/events/syscalls.h:3293:
+#define ENTERCASEsplice create_syscall_enter(6, splice, int, loff_t __user *, int, loff_t __user *, size_t, unsigned int);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsplice>
#3392: FILE: include/trace/events/syscalls.h:3293:
+#define ENTERCASEsplice create_syscall_enter(6, splice, int, loff_t __user *, int, loff_t __user *, size_t, unsigned int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3392: FILE: include/trace/events/syscalls.h:3293:
+#define ENTERCASEsplice create_syscall_enter(6, splice, int, loff_t __user *, int, loff_t __user *, size_t, unsigned int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsplice>
#3393: FILE: include/trace/events/syscalls.h:3294:
+#define EXITCASEsplice create_syscall_exit(splice);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3393: FILE: include/trace/events/syscalls.h:3294:
+#define EXITCASEsplice create_syscall_exit(splice);

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#3400: FILE: include/trace/events/syscalls.h:3301:
+trace_event_syscall_enter(4, vmsplice, int, fd, const struct iovec __user *, iov, unsigned long, nr_segs, unsigned int, flags);

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#3402: FILE: include/trace/events/syscalls.h:3303:
+#define ENTERCASEvmsplice create_syscall_enter(4, vmsplice, int, const struct iovec __user *, unsigned long, unsigned int);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEvmsplice>
#3402: FILE: include/trace/events/syscalls.h:3303:
+#define ENTERCASEvmsplice create_syscall_enter(4, vmsplice, int, const struct iovec __user *, unsigned long, unsigned int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3402: FILE: include/trace/events/syscalls.h:3303:
+#define ENTERCASEvmsplice create_syscall_enter(4, vmsplice, int, const struct iovec __user *, unsigned long, unsigned int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEvmsplice>
#3403: FILE: include/trace/events/syscalls.h:3304:
+#define EXITCASEvmsplice create_syscall_exit(vmsplice);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3403: FILE: include/trace/events/syscalls.h:3304:
+#define EXITCASEvmsplice create_syscall_exit(vmsplice);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEtee>
#3412: FILE: include/trace/events/syscalls.h:3313:
+#define ENTERCASEtee create_syscall_enter(4, tee, int, int, size_t, unsigned int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3412: FILE: include/trace/events/syscalls.h:3313:
+#define ENTERCASEtee create_syscall_enter(4, tee, int, int, size_t, unsigned int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEtee>
#3413: FILE: include/trace/events/syscalls.h:3314:
+#define EXITCASEtee create_syscall_exit(tee);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3413: FILE: include/trace/events/syscalls.h:3314:
+#define EXITCASEtee create_syscall_exit(tee);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#3420: FILE: include/trace/events/syscalls.h:3321:
+trace_event_syscall_enter(4, sync_file_range, int, fd, loff_t, offset, loff_t, nbytes, unsigned int, flags);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#3422: FILE: include/trace/events/syscalls.h:3323:
+#define ENTERCASEsync_file_range create_syscall_enter(4, sync_file_range, int, loff_t, loff_t, unsigned int);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsync_file_range>
#3422: FILE: include/trace/events/syscalls.h:3323:
+#define ENTERCASEsync_file_range create_syscall_enter(4, sync_file_range, int, loff_t, loff_t, unsigned int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3422: FILE: include/trace/events/syscalls.h:3323:
+#define ENTERCASEsync_file_range create_syscall_enter(4, sync_file_range, int, loff_t, loff_t, unsigned int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsync_file_range>
#3423: FILE: include/trace/events/syscalls.h:3324:
+#define EXITCASEsync_file_range create_syscall_exit(sync_file_range);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3423: FILE: include/trace/events/syscalls.h:3324:
+#define EXITCASEsync_file_range create_syscall_exit(sync_file_range);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#3430: FILE: include/trace/events/syscalls.h:3331:
+trace_event_syscall_enter(4, sync_file_range2, int, fd, unsigned int, flags, loff_t, offset, loff_t, nbytes);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#3432: FILE: include/trace/events/syscalls.h:3333:
+#define ENTERCASEsync_file_range2 create_syscall_enter(4, sync_file_range2, int, unsigned int, loff_t, loff_t);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsync_file_range2>
#3432: FILE: include/trace/events/syscalls.h:3333:
+#define ENTERCASEsync_file_range2 create_syscall_enter(4, sync_file_range2, int, unsigned int, loff_t, loff_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3432: FILE: include/trace/events/syscalls.h:3333:
+#define ENTERCASEsync_file_range2 create_syscall_enter(4, sync_file_range2, int, unsigned int, loff_t, loff_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsync_file_range2>
#3433: FILE: include/trace/events/syscalls.h:3334:
+#define EXITCASEsync_file_range2 create_syscall_exit(sync_file_range2);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3433: FILE: include/trace/events/syscalls.h:3334:
+#define EXITCASEsync_file_range2 create_syscall_exit(sync_file_range2);

WARNING:LONG_LINE: line length of 135 exceeds 100 columns
#3440: FILE: include/trace/events/syscalls.h:3341:
+trace_event_syscall_enter(3, get_robust_list, int, pid, struct robust_list_head __user * __user *, head_ptr, size_t __user *, len_ptr);

WARNING:LONG_LINE: line length of 139 exceeds 100 columns
#3442: FILE: include/trace/events/syscalls.h:3343:
+#define ENTERCASEget_robust_list create_syscall_enter(3, get_robust_list, int, struct robust_list_head __user * __user *, size_t __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEget_robust_list>
#3442: FILE: include/trace/events/syscalls.h:3343:
+#define ENTERCASEget_robust_list create_syscall_enter(3, get_robust_list, int, struct robust_list_head __user * __user *, size_t __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3442: FILE: include/trace/events/syscalls.h:3343:
+#define ENTERCASEget_robust_list create_syscall_enter(3, get_robust_list, int, struct robust_list_head __user * __user *, size_t __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEget_robust_list>
#3443: FILE: include/trace/events/syscalls.h:3344:
+#define EXITCASEget_robust_list create_syscall_exit(get_robust_list);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3443: FILE: include/trace/events/syscalls.h:3344:
+#define EXITCASEget_robust_list create_syscall_exit(get_robust_list);

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#3452: FILE: include/trace/events/syscalls.h:3353:
+#define ENTERCASEset_robust_list create_syscall_enter(2, set_robust_list, struct robust_list_head __user *, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEset_robust_list>
#3452: FILE: include/trace/events/syscalls.h:3353:
+#define ENTERCASEset_robust_list create_syscall_enter(2, set_robust_list, struct robust_list_head __user *, size_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3452: FILE: include/trace/events/syscalls.h:3353:
+#define ENTERCASEset_robust_list create_syscall_enter(2, set_robust_list, struct robust_list_head __user *, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEset_robust_list>
#3453: FILE: include/trace/events/syscalls.h:3354:
+#define EXITCASEset_robust_list create_syscall_exit(set_robust_list);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3453: FILE: include/trace/events/syscalls.h:3354:
+#define EXITCASEset_robust_list create_syscall_exit(set_robust_list);

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#3460: FILE: include/trace/events/syscalls.h:3361:
+trace_event_syscall_enter(3, getcpu, unsigned __user *, cpu, unsigned __user *, node, struct getcpu_cache __user *, cache);

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#3462: FILE: include/trace/events/syscalls.h:3363:
+#define ENTERCASEgetcpu create_syscall_enter(3, getcpu, unsigned __user *, unsigned __user *, struct getcpu_cache __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEgetcpu>
#3462: FILE: include/trace/events/syscalls.h:3363:
+#define ENTERCASEgetcpu create_syscall_enter(3, getcpu, unsigned __user *, unsigned __user *, struct getcpu_cache __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3462: FILE: include/trace/events/syscalls.h:3363:
+#define ENTERCASEgetcpu create_syscall_enter(3, getcpu, unsigned __user *, unsigned __user *, struct getcpu_cache __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEgetcpu>
#3463: FILE: include/trace/events/syscalls.h:3364:
+#define EXITCASEgetcpu create_syscall_exit(getcpu);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3463: FILE: include/trace/events/syscalls.h:3364:
+#define EXITCASEgetcpu create_syscall_exit(getcpu);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsignalfd>
#3472: FILE: include/trace/events/syscalls.h:3373:
+#define ENTERCASEsignalfd create_syscall_enter(3, signalfd, int, sigset_t __user *, size_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3472: FILE: include/trace/events/syscalls.h:3373:
+#define ENTERCASEsignalfd create_syscall_enter(3, signalfd, int, sigset_t __user *, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsignalfd>
#3473: FILE: include/trace/events/syscalls.h:3374:
+#define EXITCASEsignalfd create_syscall_exit(signalfd);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3473: FILE: include/trace/events/syscalls.h:3374:
+#define EXITCASEsignalfd create_syscall_exit(signalfd);

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#3480: FILE: include/trace/events/syscalls.h:3381:
+trace_event_syscall_enter(4, signalfd4, int, ufd, sigset_t __user *, user_mask, size_t, sizemask, int, flags);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEsignalfd4>
#3482: FILE: include/trace/events/syscalls.h:3383:
+#define ENTERCASEsignalfd4 create_syscall_enter(4, signalfd4, int, sigset_t __user *, size_t, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3482: FILE: include/trace/events/syscalls.h:3383:
+#define ENTERCASEsignalfd4 create_syscall_enter(4, signalfd4, int, sigset_t __user *, size_t, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEsignalfd4>
#3483: FILE: include/trace/events/syscalls.h:3384:
+#define EXITCASEsignalfd4 create_syscall_exit(signalfd4);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3483: FILE: include/trace/events/syscalls.h:3384:
+#define EXITCASEsignalfd4 create_syscall_exit(signalfd4);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEtimerfd_create>
#3492: FILE: include/trace/events/syscalls.h:3393:
+#define ENTERCASEtimerfd_create create_syscall_enter(2, timerfd_create, int, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3492: FILE: include/trace/events/syscalls.h:3393:
+#define ENTERCASEtimerfd_create create_syscall_enter(2, timerfd_create, int, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEtimerfd_create>
#3493: FILE: include/trace/events/syscalls.h:3394:
+#define EXITCASEtimerfd_create create_syscall_exit(timerfd_create);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3493: FILE: include/trace/events/syscalls.h:3394:
+#define EXITCASEtimerfd_create create_syscall_exit(timerfd_create);

WARNING:LONG_LINE: line length of 142 exceeds 100 columns
#3500: FILE: include/trace/events/syscalls.h:3401:
+trace_event_syscall_enter(4, timerfd_settime, int, ufd, int, flags, const struct itimerspec __user *, utmr, struct itimerspec __user *, otmr);

WARNING:LONG_LINE: line length of 146 exceeds 100 columns
#3502: FILE: include/trace/events/syscalls.h:3403:
+#define ENTERCASEtimerfd_settime create_syscall_enter(4, timerfd_settime, int, int, const struct itimerspec __user *, struct itimerspec __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEtimerfd_settime>
#3502: FILE: include/trace/events/syscalls.h:3403:
+#define ENTERCASEtimerfd_settime create_syscall_enter(4, timerfd_settime, int, int, const struct itimerspec __user *, struct itimerspec __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3502: FILE: include/trace/events/syscalls.h:3403:
+#define ENTERCASEtimerfd_settime create_syscall_enter(4, timerfd_settime, int, int, const struct itimerspec __user *, struct itimerspec __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEtimerfd_settime>
#3503: FILE: include/trace/events/syscalls.h:3404:
+#define EXITCASEtimerfd_settime create_syscall_exit(timerfd_settime);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3503: FILE: include/trace/events/syscalls.h:3404:
+#define EXITCASEtimerfd_settime create_syscall_exit(timerfd_settime);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#3512: FILE: include/trace/events/syscalls.h:3413:
+#define ENTERCASEtimerfd_gettime create_syscall_enter(2, timerfd_gettime, int, struct itimerspec __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEtimerfd_gettime>
#3512: FILE: include/trace/events/syscalls.h:3413:
+#define ENTERCASEtimerfd_gettime create_syscall_enter(2, timerfd_gettime, int, struct itimerspec __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3512: FILE: include/trace/events/syscalls.h:3413:
+#define ENTERCASEtimerfd_gettime create_syscall_enter(2, timerfd_gettime, int, struct itimerspec __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEtimerfd_gettime>
#3513: FILE: include/trace/events/syscalls.h:3414:
+#define EXITCASEtimerfd_gettime create_syscall_exit(timerfd_gettime);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3513: FILE: include/trace/events/syscalls.h:3414:
+#define EXITCASEtimerfd_gettime create_syscall_exit(timerfd_gettime);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEeventfd>
#3522: FILE: include/trace/events/syscalls.h:3423:
+#define ENTERCASEeventfd create_syscall_enter(1, eventfd, unsigned int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3522: FILE: include/trace/events/syscalls.h:3423:
+#define ENTERCASEeventfd create_syscall_enter(1, eventfd, unsigned int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEeventfd>
#3523: FILE: include/trace/events/syscalls.h:3424:
+#define EXITCASEeventfd create_syscall_exit(eventfd);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3523: FILE: include/trace/events/syscalls.h:3424:
+#define EXITCASEeventfd create_syscall_exit(eventfd);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEeventfd2>
#3532: FILE: include/trace/events/syscalls.h:3433:
+#define ENTERCASEeventfd2 create_syscall_enter(2, eventfd2, unsigned int, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3532: FILE: include/trace/events/syscalls.h:3433:
+#define ENTERCASEeventfd2 create_syscall_enter(2, eventfd2, unsigned int, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEeventfd2>
#3533: FILE: include/trace/events/syscalls.h:3434:
+#define EXITCASEeventfd2 create_syscall_exit(eventfd2);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3533: FILE: include/trace/events/syscalls.h:3434:
+#define EXITCASEeventfd2 create_syscall_exit(eventfd2);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEfallocate>
#3542: FILE: include/trace/events/syscalls.h:3443:
+#define ENTERCASEfallocate create_syscall_enter(4, fallocate, int, int, loff_t, loff_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3542: FILE: include/trace/events/syscalls.h:3443:
+#define ENTERCASEfallocate create_syscall_enter(4, fallocate, int, int, loff_t, loff_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEfallocate>
#3543: FILE: include/trace/events/syscalls.h:3444:
+#define EXITCASEfallocate create_syscall_exit(fallocate);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3543: FILE: include/trace/events/syscalls.h:3444:
+#define EXITCASEfallocate create_syscall_exit(fallocate);

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#3550: FILE: include/trace/events/syscalls.h:3451:
+trace_event_syscall_enter(3, old_readdir, unsigned int, a, struct old_linux_dirent __user *, uptr, unsigned int, b);

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#3552: FILE: include/trace/events/syscalls.h:3453:
+#define ENTERCASEold_readdir create_syscall_enter(3, old_readdir, unsigned int, struct old_linux_dirent __user *, unsigned int);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEold_readdir>
#3552: FILE: include/trace/events/syscalls.h:3453:
+#define ENTERCASEold_readdir create_syscall_enter(3, old_readdir, unsigned int, struct old_linux_dirent __user *, unsigned int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3552: FILE: include/trace/events/syscalls.h:3453:
+#define ENTERCASEold_readdir create_syscall_enter(3, old_readdir, unsigned int, struct old_linux_dirent __user *, unsigned int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEold_readdir>
#3553: FILE: include/trace/events/syscalls.h:3454:
+#define EXITCASEold_readdir create_syscall_exit(old_readdir);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3553: FILE: include/trace/events/syscalls.h:3454:
+#define EXITCASEold_readdir create_syscall_exit(old_readdir);

WARNING:LONG_LINE: line length of 154 exceeds 100 columns
#3560: FILE: include/trace/events/syscalls.h:3461:
+trace_event_syscall_enter(6, pselect6, int, a, fd_set __user *, b, fd_set __user *, c, fd_set __user *, d, struct timespec __user *, e, void __user *, f);

WARNING:LONG_LINE: line length of 157 exceeds 100 columns
#3562: FILE: include/trace/events/syscalls.h:3463:
+#define ENTERCASEpselect6 create_syscall_enter(6, pselect6, int, fd_set __user *, fd_set __user *, fd_set __user *, struct timespec __user *, void __user *);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEpselect6>
#3562: FILE: include/trace/events/syscalls.h:3463:
+#define ENTERCASEpselect6 create_syscall_enter(6, pselect6, int, fd_set __user *, fd_set __user *, fd_set __user *, struct timespec __user *, void __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3562: FILE: include/trace/events/syscalls.h:3463:
+#define ENTERCASEpselect6 create_syscall_enter(6, pselect6, int, fd_set __user *, fd_set __user *, fd_set __user *, struct timespec __user *, void __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEpselect6>
#3563: FILE: include/trace/events/syscalls.h:3464:
+#define EXITCASEpselect6 create_syscall_exit(pselect6);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3563: FILE: include/trace/events/syscalls.h:3464:
+#define EXITCASEpselect6 create_syscall_exit(pselect6);

WARNING:LONG_LINE: line length of 148 exceeds 100 columns
#3570: FILE: include/trace/events/syscalls.h:3471:
+trace_event_syscall_enter(5, ppoll, struct pollfd __user *, a, unsigned int, b, struct timespec __user *, c, const sigset_t __user *, d, size_t, e);

WARNING:LONG_LINE: line length of 151 exceeds 100 columns
#3572: FILE: include/trace/events/syscalls.h:3473:
+#define ENTERCASEppoll create_syscall_enter(5, ppoll, struct pollfd __user *, unsigned int, struct timespec __user *, const sigset_t __user *, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEppoll>
#3572: FILE: include/trace/events/syscalls.h:3473:
+#define ENTERCASEppoll create_syscall_enter(5, ppoll, struct pollfd __user *, unsigned int, struct timespec __user *, const sigset_t __user *, size_t);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3572: FILE: include/trace/events/syscalls.h:3473:
+#define ENTERCASEppoll create_syscall_enter(5, ppoll, struct pollfd __user *, unsigned int, struct timespec __user *, const sigset_t __user *, size_t);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEppoll>
#3573: FILE: include/trace/events/syscalls.h:3474:
+#define EXITCASEppoll create_syscall_exit(ppoll);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3573: FILE: include/trace/events/syscalls.h:3474:
+#define EXITCASEppoll create_syscall_exit(ppoll);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEpipe2>
#3582: FILE: include/trace/events/syscalls.h:3483:
+#define ENTERCASEpipe2 create_syscall_enter(2, pipe2, int __user *, int);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3582: FILE: include/trace/events/syscalls.h:3483:
+#define ENTERCASEpipe2 create_syscall_enter(2, pipe2, int __user *, int);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEpipe2>
#3583: FILE: include/trace/events/syscalls.h:3484:
+#define EXITCASEpipe2 create_syscall_exit(pipe2);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3583: FILE: include/trace/events/syscalls.h:3484:
+#define EXITCASEpipe2 create_syscall_exit(pipe2);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEpipe>
#3592: FILE: include/trace/events/syscalls.h:3493:
+#define ENTERCASEpipe create_syscall_enter(1, pipe, int __user *);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3592: FILE: include/trace/events/syscalls.h:3493:
+#define ENTERCASEpipe create_syscall_enter(1, pipe, int __user *);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEpipe>
#3593: FILE: include/trace/events/syscalls.h:3494:
+#define EXITCASEpipe create_syscall_exit(pipe);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3593: FILE: include/trace/events/syscalls.h:3494:
+#define EXITCASEpipe create_syscall_exit(pipe);

WARNING:LONG_LINE: line length of 167 exceeds 100 columns
#3600: FILE: include/trace/events/syscalls.h:3501:
+trace_event_syscall_enter(5, perf_counter_open, const struct perf_counter_hw_event __user *, hw_event_uptr, pid_t, pid, int, cpu, int, group_fd, unsigned long, flags);

WARNING:LONG_LINE: line length of 155 exceeds 100 columns
#3602: FILE: include/trace/events/syscalls.h:3503:
+#define ENTERCASEperf_counter_open create_syscall_enter(5, perf_counter_open, const struct perf_counter_hw_event __user *, pid_t, int, int, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <ENTERCASEperf_counter_open>
#3602: FILE: include/trace/events/syscalls.h:3503:
+#define ENTERCASEperf_counter_open create_syscall_enter(5, perf_counter_open, const struct perf_counter_hw_event __user *, pid_t, int, int, unsigned long);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3602: FILE: include/trace/events/syscalls.h:3503:
+#define ENTERCASEperf_counter_open create_syscall_enter(5, perf_counter_open, const struct perf_counter_hw_event __user *, pid_t, int, int, unsigned long);

CHECK:CAMELCASE: Avoid CamelCase: <EXITCASEperf_counter_open>
#3603: FILE: include/trace/events/syscalls.h:3504:
+#define EXITCASEperf_counter_open create_syscall_exit(perf_counter_open);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3603: FILE: include/trace/events/syscalls.h:3504:
+#define EXITCASEperf_counter_open create_syscall_exit(perf_counter_open);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3614: FILE: include/trace/events/syscalls.h:3515:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3956: FILE: include/trace/events/syscalls.h:3857:
+^I}^I^I^I^I^I^I^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#3959: FILE: include/trace/events/syscalls.h:3860:
+static inline void __syscall_tracepoints_exit(struct pt_regs * regs)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3960: FILE: include/trace/events/syscalls.h:3861:
+{^I^I^I^I^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3961: FILE: include/trace/events/syscalls.h:3862:
+^Iint syscall_nr;^I^I^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3962: FILE: include/trace/events/syscalls.h:3863:
+^Ilong ret;^I^I^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3963: FILE: include/trace/events/syscalls.h:3864:
+^I^I^I^I^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3964: FILE: include/trace/events/syscalls.h:3865:
+^Isyscall_nr = syscall_get_nr(current, regs);^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3965: FILE: include/trace/events/syscalls.h:3866:
+^Iret = syscall_get_return_value(current, regs);^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3966: FILE: include/trace/events/syscalls.h:3867:
+^Iswitch (syscall_nr) {^I^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4298: FILE: include/trace/events/syscalls.h:4199:
+^I}^I$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4310: FILE: include/trace/syscall.h:28:
+extern struct syscall_metadata *syscall_nr_to_meta(int nr);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4311: FILE: include/trace/syscall.h:29:
+extern void syscall_tracepoints_enter(struct pt_regs *regs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4312: FILE: include/trace/syscall.h:30:
+extern void syscall_tracepoints_exit(struct pt_regs *regs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4318: FILE: include/trace/syscall.h:36:
+extern struct syscall_metadata *syscall_nr_to_meta(int nr);

ERROR:CODE_INDENT: code indent should use tabs where possible
#4371: FILE: kernel/trace/trace.c:3335:
+        unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4371: FILE: kernel/trace/trace.c:3335:
+        unsigned long flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4372: FILE: kernel/trace/trace.c:3336:
+        struct task_struct *g, *t;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4372: FILE: kernel/trace/trace.c:3336:
+        struct task_struct *g, *t;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4374: FILE: kernel/trace/trace.c:3338:
+        mutex_lock(&syscall_trace_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4374: FILE: kernel/trace/trace.c:3338:
+        mutex_lock(&syscall_trace_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4375: FILE: kernel/trace/trace.c:3339:
+        /* Don't enable the flag on the tasks twice */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4376: FILE: kernel/trace/trace.c:3340:
+        if (sys_enabled)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4376: FILE: kernel/trace/trace.c:3340:
+        if (sys_enabled)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4377: FILE: kernel/trace/trace.c:3341:
+                goto unlock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4377: FILE: kernel/trace/trace.c:3341:
+                goto unlock;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4378: FILE: kernel/trace/trace.c:3342:
+        arch_init_ftrace_syscalls();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4378: FILE: kernel/trace/trace.c:3342:
+        arch_init_ftrace_syscalls();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4379: FILE: kernel/trace/trace.c:3343:
+        read_lock_irqsave(&tasklist_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4379: FILE: kernel/trace/trace.c:3343:
+        read_lock_irqsave(&tasklist_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4380: FILE: kernel/trace/trace.c:3344:
+        do_each_thread(g, t) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4380: FILE: kernel/trace/trace.c:3344:
+        do_each_thread(g, t) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4381: FILE: kernel/trace/trace.c:3345:
+                set_tsk_thread_flag(t, TIF_SYSCALL_FTRACE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4381: FILE: kernel/trace/trace.c:3345:
+                set_tsk_thread_flag(t, TIF_SYSCALL_FTRACE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4382: FILE: kernel/trace/trace.c:3346:
+        } while_each_thread(g, t);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4382: FILE: kernel/trace/trace.c:3346:
+        } while_each_thread(g, t);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4383: FILE: kernel/trace/trace.c:3347:
+        read_unlock_irqrestore(&tasklist_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4383: FILE: kernel/trace/trace.c:3347:
+        read_unlock_irqrestore(&tasklist_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4384: FILE: kernel/trace/trace.c:3348:
+        sys_enabled = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4384: FILE: kernel/trace/trace.c:3348:
+        sys_enabled = true;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4387: FILE: kernel/trace/trace.c:3351:
+        mutex_unlock(&syscall_trace_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4387: FILE: kernel/trace/trace.c:3351:
+        mutex_unlock(&syscall_trace_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4392: FILE: kernel/trace/trace.c:3356:
+        unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4392: FILE: kernel/trace/trace.c:3356:
+        unsigned long flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4393: FILE: kernel/trace/trace.c:3357:
+        struct task_struct *g, *t;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4393: FILE: kernel/trace/trace.c:3357:
+        struct task_struct *g, *t;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4395: FILE: kernel/trace/trace.c:3359:
+        mutex_lock(&syscall_trace_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4395: FILE: kernel/trace/trace.c:3359:
+        mutex_lock(&syscall_trace_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4396: FILE: kernel/trace/trace.c:3360:
+        read_lock_irqsave(&tasklist_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4396: FILE: kernel/trace/trace.c:3360:
+        read_lock_irqsave(&tasklist_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4397: FILE: kernel/trace/trace.c:3361:
+        do_each_thread(g, t) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4397: FILE: kernel/trace/trace.c:3361:
+        do_each_thread(g, t) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4398: FILE: kernel/trace/trace.c:3362:
+                clear_tsk_thread_flag(t, TIF_SYSCALL_FTRACE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4398: FILE: kernel/trace/trace.c:3362:
+                clear_tsk_thread_flag(t, TIF_SYSCALL_FTRACE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4399: FILE: kernel/trace/trace.c:3363:
+        } while_each_thread(g, t);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4399: FILE: kernel/trace/trace.c:3363:
+        } while_each_thread(g, t);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4400: FILE: kernel/trace/trace.c:3364:
+        read_unlock_irqrestore(&tasklist_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4400: FILE: kernel/trace/trace.c:3364:
+        read_unlock_irqrestore(&tasklist_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4401: FILE: kernel/trace/trace.c:3365:
+        sys_enabled = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4401: FILE: kernel/trace/trace.c:3365:
+        sys_enabled = false;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4402: FILE: kernel/trace/trace.c:3366:
+        mutex_unlock(&syscall_trace_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4402: FILE: kernel/trace/trace.c:3366:
+        mutex_unlock(&syscall_trace_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4406: FILE: kernel/trace/trace.c:3370:
+                                                size_t count, loff_t *ppos)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4406: FILE: kernel/trace/trace.c:3370:
+static ssize_t write_tracesys(struct file *file, const char __user *user_buf,
+                                                size_t count, loff_t *ppos)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4406: FILE: kernel/trace/trace.c:3370:
+                                                size_t count, loff_t *ppos)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4408: FILE: kernel/trace/trace.c:3372:
+        char buf[32];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4408: FILE: kernel/trace/trace.c:3372:
+        char buf[32];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4409: FILE: kernel/trace/trace.c:3373:
+        int buf_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4409: FILE: kernel/trace/trace.c:3373:
+        int buf_size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4411: FILE: kernel/trace/trace.c:3375:
+        buf_size = min(count, (sizeof(buf)-1));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4411: FILE: kernel/trace/trace.c:3375:
+        buf_size = min(count, (sizeof(buf)-1));$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#4411: FILE: kernel/trace/trace.c:3375:
+        buf_size = min(count, (sizeof(buf)-1));
                                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#4412: FILE: kernel/trace/trace.c:3376:
+        if (copy_from_user(buf, user_buf, buf_size))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4412: FILE: kernel/trace/trace.c:3376:
+        if (copy_from_user(buf, user_buf, buf_size))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4413: FILE: kernel/trace/trace.c:3377:
+                return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4413: FILE: kernel/trace/trace.c:3377:
+                return -EFAULT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4415: FILE: kernel/trace/trace.c:3379:
+        switch (buf[0]) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4415: FILE: kernel/trace/trace.c:3379:
+        switch (buf[0]) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4416: FILE: kernel/trace/trace.c:3380:
+        case '1':$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4416: FILE: kernel/trace/trace.c:3380:
+        case '1':$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4417: FILE: kernel/trace/trace.c:3381:
+                start_ftrace_syscalls();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4417: FILE: kernel/trace/trace.c:3381:
+                start_ftrace_syscalls();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4418: FILE: kernel/trace/trace.c:3382:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4418: FILE: kernel/trace/trace.c:3382:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4419: FILE: kernel/trace/trace.c:3383:
+        case '0':$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4419: FILE: kernel/trace/trace.c:3383:
+        case '0':$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4420: FILE: kernel/trace/trace.c:3384:
+                stop_ftrace_syscalls();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4420: FILE: kernel/trace/trace.c:3384:
+                stop_ftrace_syscalls();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4421: FILE: kernel/trace/trace.c:3385:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4421: FILE: kernel/trace/trace.c:3385:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4422: FILE: kernel/trace/trace.c:3386:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4422: FILE: kernel/trace/trace.c:3386:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4424: FILE: kernel/trace/trace.c:3388:
+        return count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4424: FILE: kernel/trace/trace.c:3388:
+        return count;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4428: FILE: kernel/trace/trace.c:3392:
+               char __user *user_buf, size_t count, loff_t *ppos)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4428: FILE: kernel/trace/trace.c:3392:
+static ssize_t read_tracesys(struct file *file,
+               char __user *user_buf, size_t count, loff_t *ppos)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4428: FILE: kernel/trace/trace.c:3392:
+               char __user *user_buf, size_t count, loff_t *ppos)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4430: FILE: kernel/trace/trace.c:3394:
+        char buf[3];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4430: FILE: kernel/trace/trace.c:3394:
+        char buf[3];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4432: FILE: kernel/trace/trace.c:3396:
+        if (sys_enabled)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4432: FILE: kernel/trace/trace.c:3396:
+        if (sys_enabled)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4433: FILE: kernel/trace/trace.c:3397:
+                buf[0] = '1';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4433: FILE: kernel/trace/trace.c:3397:
+                buf[0] = '1';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4434: FILE: kernel/trace/trace.c:3398:
+        else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4434: FILE: kernel/trace/trace.c:3398:
+        else$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4435: FILE: kernel/trace/trace.c:3399:
+                buf[0] = '0';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4435: FILE: kernel/trace/trace.c:3399:
+                buf[0] = '0';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4436: FILE: kernel/trace/trace.c:3400:
+        buf[1] = '\n';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4436: FILE: kernel/trace/trace.c:3400:
+        buf[1] = '\n';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4437: FILE: kernel/trace/trace.c:3401:
+        buf[2] = 0x00;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4437: FILE: kernel/trace/trace.c:3401:
+        buf[2] = 0x00;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4438: FILE: kernel/trace/trace.c:3402:
+        return simple_read_from_buffer(user_buf, count, ppos, buf, 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4438: FILE: kernel/trace/trace.c:3402:
+        return simple_read_from_buffer(user_buf, count, ppos, buf, 2);$

WARNING:CONST_STRUCT: struct file_operations should normally be const
#4441: FILE: kernel/trace/trace.c:3405:
+static struct file_operations tracing_syscall_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4457: FILE: kernel/trace/trace.c:4197:
+	trace_create_file("trace_syscalls", 0644, d_tracer,
+			NULL, &tracing_syscall_fops);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000114927.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 117 errors, 1013 warnings, 701 checks, 4380 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000114927.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
