WARNING:EMAIL_SUBJECT: A patch subject line should describe the change not the tool that found it
#18: 
Subject: Re: [PATCH] net/ipv4/fib_semantics.c: quiet sparse "shadows" noise

Naming the tool that found the issue is not very useful in the
subject line.  A good subject line summarizes the change that
the patch brings.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'fi' - possible side-effects?
#75: FILE: net/ipv4/fib_semantics.c:65:
+#define change_nexthops(fi) { int nhsel; struct fib_nh *nexthop_nh; \
+for (nhsel=0, nexthop_nh = (struct fib_nh *)((fi)->fib_nh); nhsel < (fi)->fib_nhs; nexthop_nh++, nhsel++)

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#76: FILE: net/ipv4/fib_semantics.c:66:
+for (nhsel=0, nexthop_nh = (struct fib_nh *)((fi)->fib_nh); nhsel < (fi)->fib_nhs; nexthop_nh++, nhsel++)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#76: FILE: net/ipv4/fib_semantics.c:66:
+for (nhsel=0, nexthop_nh = (struct fib_nh *)((fi)->fib_nh); nhsel < (fi)->fib_nhs; nexthop_nh++, nhsel++)
           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#85: FILE: net/ipv4/fib_semantics.c:75:
+#define change_nexthops(fi) { int nhsel = 0; struct fib_nh *nexthop_nh = (struct fib_nh *)((fi)->fib_nh); \

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#154: FILE: net/ipv4/fib_semantics.c:812:
+			if ((err = fib_check_nh(cfg, fi, nexthop_nh)) != 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#178: FILE: net/ipv4/fib_semantics.c:1084:
+			if (nexthop_nh->nh_flags&RTNH_F_DEAD)
 			                        ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#178: FILE: net/ipv4/fib_semantics.c:1084:
+			if (nexthop_nh->nh_flags&RTNH_F_DEAD)
[...]
-			else if (nh->nh_dev == dev &&
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#207: FILE: net/ipv4/fib_semantics.c:1148:
+			if (!(nexthop_nh->nh_flags&RTNH_F_DEAD)) {
 			                          ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!nexthop_nh->nh_dev"
#212: FILE: net/ipv4/fib_semantics.c:1152:
+			if (nexthop_nh->nh_dev == NULL ||

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#213: FILE: net/ipv4/fib_semantics.c:1153:
+			    !(nexthop_nh->nh_dev->flags&IFF_UP))
 			                               ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#235: FILE: net/ipv4/fib_semantics.c:1188:
+			if (!(nexthop_nh->nh_flags&RTNH_F_DEAD)) {
 			                          ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#248: FILE: net/ipv4/fib_semantics.c:1210:
+		if (!(nexthop_nh->nh_flags&RTNH_F_DEAD) &&
 		                          ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#250: FILE: net/ipv4/fib_semantics.c:1212:
+			if ((w -= nexthop_nh->nh_power) <= 0) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000017629.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 3 warnings, 8 checks, 174 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000017629.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
