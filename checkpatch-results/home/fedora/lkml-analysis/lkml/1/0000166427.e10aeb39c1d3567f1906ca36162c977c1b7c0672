WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#84: FILE: arch/x86/kernel/acpi/boot.c:160:
+extern __init void fill_one_mmcfg(u64 addr, int segment, int start, int end);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#130: FILE: arch/x86/kernel/acpi/boot.c:193:
+	config = (struct acpi_mcfg_allocation *)(

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'config[i].address > 0xFFFFFFFF'
#136: FILE: arch/x86/kernel/acpi/boot.c:197:
+		if ((config[i].address > 0xFFFFFFFF) &&
 		    !acpi_mcfg_64bit_base_addr) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#147: FILE: arch/x86/kernel/acpi/boot.c:206:
+		printk(KERN_WARNING PREFIX

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#448: FILE: arch/x86/pci/pci.h:178:
+extern void __init pci_detect_acpi_mmcfg(int early);

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#450: FILE: arch/x86/pci/pci.h:180:
+inline static void __init pci_detect_acpi_mmcfg(int early) { }

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#508: FILE: arch/x86/pci/mmconfig-acpi.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mcfg_res->start >= fixmem32->address'
#533: FILE: arch/x86/pci/mmconfig-acpi.c:26:
+		if ((mcfg_res->start >= fixmem32->address) &&
+		    (mcfg_res->end < (fixmem32->address +
+				      fixmem32->address_length))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'res->type != ACPI_RESOURCE_TYPE_ADDRESS32'
#540: FILE: arch/x86/pci/mmconfig-acpi.c:33:
+	if ((res->type != ACPI_RESOURCE_TYPE_ADDRESS32) &&
+	    (res->type != ACPI_RESOURCE_TYPE_ADDRESS64))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'res->type != ACPI_RESOURCE_TYPE_ADDRESS64'
#540: FILE: arch/x86/pci/mmconfig-acpi.c:33:
+	if ((res->type != ACPI_RESOURCE_TYPE_ADDRESS32) &&
+	    (res->type != ACPI_RESOURCE_TYPE_ADDRESS64))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'address.address_length <= 0'
#545: FILE: arch/x86/pci/mmconfig-acpi.c:38:
+	if (ACPI_FAILURE(status) ||
+	   (address.address_length <= 0) ||
+	   (address.resource_type != ACPI_MEMORY_RANGE))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'address.resource_type != ACPI_MEMORY_RANGE'
#545: FILE: arch/x86/pci/mmconfig-acpi.c:38:
+	if (ACPI_FAILURE(status) ||
+	   (address.address_length <= 0) ||
+	   (address.resource_type != ACPI_MEMORY_RANGE))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#546: FILE: arch/x86/pci/mmconfig-acpi.c:39:
+	if (ACPI_FAILURE(status) ||
+	   (address.address_length <= 0) ||

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mcfg_res->start >= address.minimum'
#550: FILE: arch/x86/pci/mmconfig-acpi.c:43:
+	if ((mcfg_res->start >= address.minimum) &&
+	    (mcfg_res->end < (address.minimum + address.address_length))) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#572: FILE: arch/x86/pci/mmconfig-acpi.c:65:
+static int __init is_acpi_reserved(u64 start, u64 end, unsigned not_used)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#589: FILE: arch/x86/pci/mmconfig-acpi.c:82:
+typedef int (*check_reserved_t)(u64 start, u64 end, unsigned type);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#592: FILE: arch/x86/pci/mmconfig-acpi.c:85:
+static int __init is_mmconf_reserved(check_reserved_t is_reserved,
+		u64 addr, u64 size, int i,

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#600: FILE: arch/x86/pci/mmconfig-acpi.c:93:
+		if (size < (16UL<<20))
 		                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#604: FILE: arch/x86/pci/mmconfig-acpi.c:97:
+	if (size >= (16UL<<20) || size == old_size) {
 	                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#605: FILE: arch/x86/pci/mmconfig-acpi.c:98:
+		printk(KERN_NOTICE

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#606: FILE: arch/x86/pci/mmconfig-acpi.c:99:
+		       "PCI: MCFG area at %Lx reserved in %s\n",

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#607: FILE: arch/x86/pci/mmconfig-acpi.c:100:
+			addr, with_e820?"E820":"ACPI motherboard resources");
 			               ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#607: FILE: arch/x86/pci/mmconfig-acpi.c:100:
+			addr, with_e820?"E820":"ACPI motherboard resources");
 			                      ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#612: FILE: arch/x86/pci/mmconfig-acpi.c:105:
+			cfg->end_bus_number = cfg->start_bus_number + ((size>>20) - 1);
 			                                                    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#613: FILE: arch/x86/pci/mmconfig-acpi.c:106:
+			printk(KERN_NOTICE "PCI: updated MCFG configuration %d: base %lx "

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#613: FILE: arch/x86/pci/mmconfig-acpi.c:106:
+			printk(KERN_NOTICE "PCI: updated MCFG configuration %d: base %lx "
+			       "segment %hu buses %u - %u\n",
+			       i, (unsigned long)cfg->address, cfg->pci_segment,
+			       (unsigned int)cfg->start_bus_number,
+			       (unsigned int)cfg->end_bus_number);

WARNING:SPLIT_STRING: quoted string split across lines
#614: FILE: arch/x86/pci/mmconfig-acpi.c:107:
+			printk(KERN_NOTICE "PCI: updated MCFG configuration %d: base %lx "
+			       "segment %hu buses %u - %u\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pci_mmcfg_config_num == 0'
#631: FILE: arch/x86/pci/mmconfig-acpi.c:124:
+	if ((pci_mmcfg_config_num == 0) ||
+	    (pci_mmcfg_config == NULL) ||
+	    (pci_mmcfg_config[0].address == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pci_mmcfg_config == NULL'
#631: FILE: arch/x86/pci/mmconfig-acpi.c:124:
+	if ((pci_mmcfg_config_num == 0) ||
+	    (pci_mmcfg_config == NULL) ||
+	    (pci_mmcfg_config[0].address == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pci_mmcfg_config[0].address == 0'
#631: FILE: arch/x86/pci/mmconfig-acpi.c:124:
+	if ((pci_mmcfg_config_num == 0) ||
+	    (pci_mmcfg_config == NULL) ||
+	    (pci_mmcfg_config[0].address == 0))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pci_mmcfg_config"
#632: FILE: arch/x86/pci/mmconfig-acpi.c:125:
+	    (pci_mmcfg_config == NULL) ||

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#646: FILE: arch/x86/pci/mmconfig-acpi.c:139:
+		printk(KERN_NOTICE "PCI: MCFG configuration %d: base %lx "

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#646: FILE: arch/x86/pci/mmconfig-acpi.c:139:
+		printk(KERN_NOTICE "PCI: MCFG configuration %d: base %lx "
+		       "segment %hu buses %u - %u\n",
+		       i, (unsigned long)cfg->address, cfg->pci_segment,
+		       (unsigned int)cfg->start_bus_number,
+		       (unsigned int)cfg->end_bus_number);

WARNING:SPLIT_STRING: quoted string split across lines
#647: FILE: arch/x86/pci/mmconfig-acpi.c:140:
+		printk(KERN_NOTICE "PCI: MCFG configuration %d: base %lx "
+		       "segment %hu buses %u - %u\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#659: FILE: arch/x86/pci/mmconfig-acpi.c:152:
+			printk(KERN_ERR "PCI: BIOS Bug: MCFG area at %Lx is not"

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#659: FILE: arch/x86/pci/mmconfig-acpi.c:152:
+			printk(KERN_ERR "PCI: BIOS Bug: MCFG area at %Lx is not"

WARNING:SPLIT_STRING: quoted string split across lines
#660: FILE: arch/x86/pci/mmconfig-acpi.c:153:
+			printk(KERN_ERR "PCI: BIOS Bug: MCFG area at %Lx is not"
+			       " reserved in ACPI motherboard resources\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#664: FILE: arch/x86/pci/mmconfig-acpi.c:157:
+		/* Don't try to do this check unless configuration
+		   type 1 is available. how about type 2 ?*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#664: FILE: arch/x86/pci/mmconfig-acpi.c:157:
+		   type 1 is available. how about type 2 ?*/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#675: FILE: arch/x86/pci/mmconfig-acpi.c:168:
+	printk(KERN_INFO "PCI: Not using MMCONFIG.\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000166427.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 19 warnings, 20 checks, 586 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000166427.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
