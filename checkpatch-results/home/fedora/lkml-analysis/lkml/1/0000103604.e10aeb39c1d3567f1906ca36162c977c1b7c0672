CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#190: FILE: kernel/lockdep.c:862:
+#define CQ_MASK				(MAX_CIRCULAR_QUEUE_SIZE-1)
                				                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'algorithem' may be misspelled - perhaps 'algorithm'?
#193: FILE: kernel/lockdep.c:865:
+ * breadth-first search(BFS)algorithem, by which we can build
                             ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#196: FILE: kernel/lockdep.c:868:
+ * */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#209: FILE: kernel/lockdep.c:881:
+	cq->front = cq->rear = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#249: FILE: kernel/lockdep.c:921:
+static inline void mark_lock_accessed(struct lock_list *lock,
+					struct lock_list *parent)

WARNING:LINE_SPACING: Missing a blank line after declarations
#252: FILE: kernel/lockdep.c:924:
+	unsigned long nr;
+	nr = lock - list_entries;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#261: FILE: kernel/lockdep.c:933:
+	unsigned long nr;
+	nr = lock - list_entries;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#334: FILE: kernel/lockdep.c:1289:
+print_shortest_lock_dependencies(struct lock_list *leaf,
+				struct lock_list *root)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#344: FILE: kernel/lockdep.c:1299:
+		printk("%*s ... acquired at:\n", depth, "");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#346: FILE: kernel/lockdep.c:1301:
+		printk("\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'entry != root'
#348: FILE: kernel/lockdep.c:1303:
+		if (depth == 0 && (entry != root)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#349: FILE: kernel/lockdep.c:1304:
+			printk("lockdep:%s bad BFS generated tree\n", __func__);

WARNING:RETURN_VOID: void function return statements are not generally useful
#358: FILE: kernel/lockdep.c:1313:
+	return;
+}

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000103604.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 5 checks, 338 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000103604.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
