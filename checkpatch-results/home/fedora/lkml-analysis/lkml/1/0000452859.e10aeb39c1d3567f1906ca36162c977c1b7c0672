ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#73: FILE: drivers/md/raid5.c:329:
+raid5_end_read_request(struct bio * bi, unsigned int bytes_done, int error);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#75: FILE: drivers/md/raid5.c:331:
+raid5_end_write_request (struct bio *bi, unsigned int bytes_done, int error);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#84: FILE: drivers/md/raid5.c:340:
+	for (i=disks; i-- ;) {
 	      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#88: FILE: drivers/md/raid5.c:344:
+		mdk_rdev_t *rdev;
+		if (test_and_clear_bit(R5_Wantwrite, &sh->dev[i].flags))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <R5_Wantwrite>
#88: FILE: drivers/md/raid5.c:344:
+		if (test_and_clear_bit(R5_Wantwrite, &sh->dev[i].flags))

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <R5_Wantread>
#90: FILE: drivers/md/raid5.c:346:
+		else if (test_and_clear_bit(R5_Wantread, &sh->dev[i].flags))

CHECK:CAMELCASE: Avoid CamelCase: <Faulty>
#105: FILE: drivers/md/raid5.c:361:
+		if (rdev && test_bit(Faulty, &rdev->flags))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#113: FILE: drivers/md/raid5.c:369:
+			if (test_bit(STRIPE_SYNCING, &sh->state) ||
+				test_bit(STRIPE_EXPAND_SOURCE, &sh->state) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#119: FILE: drivers/md/raid5.c:375:
+			PRINTK("%s: for %llu schedule op %ld on disc %d\n",
+				__FUNCTION__, (unsigned long long)sh->sector,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#119: FILE: drivers/md/raid5.c:375:
+				__FUNCTION__, (unsigned long long)sh->sector,

CHECK:CAMELCASE: Avoid CamelCase: <R5_ReWrite>
#133: FILE: drivers/md/raid5.c:389:
+			    test_bit(R5_ReWrite, &sh->dev[i].flags))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: drivers/md/raid5.c:396:
+			PRINTK("skip op %ld on disc %d for sector %llu\n",
+				bi->bi_rw, i, (unsigned long long)sh->sector);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#149: FILE: drivers/md/raid5.c:405:
+async_copy_data(int frombio, struct bio *bio, struct page *page, sector_t sector,
+	struct dma_async_tx_descriptor *tx)

WARNING:UNSPECIFIED_INT: Prefer 'signed int' to bare use of 'signed'
#157: FILE: drivers/md/raid5.c:413:
+		page_offset = (signed)(bio->bi_sector - sector) * 512;

WARNING:UNSPECIFIED_INT: Prefer 'signed int' to bare use of 'signed'
#159: FILE: drivers/md/raid5.c:415:
+		page_offset = (signed)(sector - bio->bi_sector) * -512;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#161: FILE: drivers/md/raid5.c:417:
+		int len = bio_iovec_idx(bio,i)->bv_len;
 		                           ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#173: FILE: drivers/md/raid5.c:429:
+		else clen = len;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#176: FILE: drivers/md/raid5.c:432:
+			b_offset += bio_iovec_idx(bio,i)->bv_offset;
 			                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#177: FILE: drivers/md/raid5.c:433:
+			bio_page = bio_iovec_idx(bio,i)->bv_page;
 			                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#180: FILE: drivers/md/raid5.c:436:
+				tx = async_memcpy(page, bio_page, page_offset,
+					b_offset, clen,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: drivers/md/raid5.c:441:
+				tx = async_memcpy(bio_page, page, b_offset,
+					page_offset, clen,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#203: FILE: drivers/md/raid5.c:459:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#204: FILE: drivers/md/raid5.c:460:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#208: FILE: drivers/md/raid5.c:464:
+	BUG_ON(!test_and_clear_bit(STRIPE_OP_BIOFILL, &sh->ops.ack));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#209: FILE: drivers/md/raid5.c:465:
+	BUG_ON(!test_and_clear_bit(STRIPE_OP_BIOFILL, &sh->ops.pending));

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#210: FILE: drivers/md/raid5.c:466:
+	for (i=sh->disks ; i-- ;) {
 	      ^

CHECK:CAMELCASE: Avoid CamelCase: <R5_Wantfill>
#213: FILE: drivers/md/raid5.c:469:
+		if (test_bit(R5_Wantfill, &dev->flags) && !dev->toread)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#218: FILE: drivers/md/raid5.c:474:
+		if (dev->read && !test_bit(R5_Wantfill, &dev->flags) &&
+			!test_bit(STRIPE_OP_BIOFILL, &sh->ops.pending)) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#225: FILE: drivers/md/raid5.c:481:
+	while ((bi=return_bi)) {
 	          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: drivers/md/raid5.c:489:
+^I^I^I        ? 0 : -EIO);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#235: FILE: drivers/md/raid5.c:491:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#246: FILE: drivers/md/raid5.c:502:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#247: FILE: drivers/md/raid5.c:503:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#249: FILE: drivers/md/raid5.c:505:
+	for (i=sh->disks ; i-- ;) {
 	      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#251: FILE: drivers/md/raid5.c:507:
+		struct r5dev *dev = &sh->dev[i];
+		if (test_bit(R5_Wantfill, &dev->flags)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#253: FILE: drivers/md/raid5.c:509:
+			struct bio *rbi, *rbi2;
+			spin_lock_irq(&conf->device_lock);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#259: FILE: drivers/md/raid5.c:515:
+				tx = async_copy_data(0, rbi, dev->page,
+					dev->sector, tx);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: drivers/md/raid5.c:531:
+	async_interrupt(ASYNC_TX_DEP_ACK | ASYNC_TX_ACK, tx,
+		ops_complete_biofill, sh);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#284: FILE: drivers/md/raid5.c:540:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#285: FILE: drivers/md/raid5.c:541:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#288: FILE: drivers/md/raid5.c:544:
+	BUG_ON(!test_and_clear_bit(R5_Wantcompute, &tgt->flags));

CHECK:CAMELCASE: Avoid CamelCase: <R5_Wantcompute>
#288: FILE: drivers/md/raid5.c:544:
+	BUG_ON(!test_and_clear_bit(R5_Wantcompute, &tgt->flags));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#289: FILE: drivers/md/raid5.c:545:
+	BUG_ON(test_and_set_bit(STRIPE_OP_COMPUTE_BLK, &sh->ops.complete));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#308: FILE: drivers/md/raid5.c:564:
+	PRINTK("%s: stripe %llu block: %d\n",
+		__FUNCTION__, (unsigned long long)sh->sector, target);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#308: FILE: drivers/md/raid5.c:564:
+		__FUNCTION__, (unsigned long long)sh->sector, target);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#309: FILE: drivers/md/raid5.c:565:
+	BUG_ON(!test_bit(R5_Wantcompute, &tgt->flags));

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#311: FILE: drivers/md/raid5.c:567:
+	for (i=disks ; i-- ; )
 	      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#318: FILE: drivers/md/raid5.c:574:
+	tx = async_xor(xor_dest, xor_srcs, 0, count, STRIPE_SIZE,
+		ASYNC_TX_XOR_ZERO_DST | ASYNC_TX_INT_EN, NULL,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#332: FILE: drivers/md/raid5.c:588:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#333: FILE: drivers/md/raid5.c:589:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#349: FILE: drivers/md/raid5.c:605:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#350: FILE: drivers/md/raid5.c:606:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#352: FILE: drivers/md/raid5.c:608:
+	for (i=disks ; i-- ;) {
 	      ^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#354: FILE: drivers/md/raid5.c:610:
+		/* Only process blocks that are known to be uptodate */
 		                                            ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:CAMELCASE: Avoid CamelCase: <R5_Wantprexor>
#355: FILE: drivers/md/raid5.c:611:
+		if (dev->towrite && test_bit(R5_Wantprexor, &dev->flags))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#360: FILE: drivers/md/raid5.c:616:
+	tx = async_xor(xor_dest, xor_srcs, 0, count, STRIPE_SIZE,
+		ASYNC_TX_DEP_ACK | ASYNC_TX_XOR_DROP_DST, tx,

WARNING:TYPO_SPELLING: 'necesary' may be misspelled - perhaps 'necessary'?
#363: FILE: drivers/md/raid5.c:619:
+	/* trigger a channel switch if necesary */
 	                               ^^^^^^^^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#380: FILE: drivers/md/raid5.c:636:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#381: FILE: drivers/md/raid5.c:637:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#383: FILE: drivers/md/raid5.c:639:
+	for (i=disks ; i-- ;) {
 	      ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#393: FILE: drivers/md/raid5.c:649:
+			if (i!=pd_idx && dev->towrite &&
 			     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#394: FILE: drivers/md/raid5.c:650:
+			if (i!=pd_idx && dev->towrite &&
+				test_bit(R5_LOCKED, &dev->flags))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#404: FILE: drivers/md/raid5.c:660:
+			BUG_ON(dev->written);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#405: FILE: drivers/md/raid5.c:661:
+			wbi = dev->written = chosen;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#410: FILE: drivers/md/raid5.c:666:
+				tx = async_copy_data(1, wbi, dev->page,
+					dev->sector, tx);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#423: FILE: drivers/md/raid5.c:679:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#424: FILE: drivers/md/raid5.c:680:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#426: FILE: drivers/md/raid5.c:682:
+	BUG_ON(test_and_set_bit(STRIPE_OP_POSTXOR, &sh->ops.complete));

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#436: FILE: drivers/md/raid5.c:692:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#437: FILE: drivers/md/raid5.c:693:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#439: FILE: drivers/md/raid5.c:695:
+	for (i=disks ; i-- ;) {
 	      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#441: FILE: drivers/md/raid5.c:697:
+		struct r5dev *dev = &sh->dev[i];
+		if (dev->written || i == pd_idx)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#445: FILE: drivers/md/raid5.c:701:
+	BUG_ON(test_and_set_bit(STRIPE_OP_BIODRAIN, &sh->ops.complete));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#446: FILE: drivers/md/raid5.c:702:
+	BUG_ON(test_and_set_bit(STRIPE_OP_POSTXOR, &sh->ops.complete));

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#465: FILE: drivers/md/raid5.c:721:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#466: FILE: drivers/md/raid5.c:722:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#472: FILE: drivers/md/raid5.c:728:
+		xor_dest = xor_srcs[count++] = sh->dev[pd_idx].page;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#473: FILE: drivers/md/raid5.c:729:
+		for (i=disks; i--;) {
 		      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#475: FILE: drivers/md/raid5.c:731:
+			struct r5dev *dev = &sh->dev[i];
+			if (dev->written)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#480: FILE: drivers/md/raid5.c:736:
+		for (i=disks; i--;) {
 		      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#482: FILE: drivers/md/raid5.c:738:
+			struct r5dev *dev = &sh->dev[i];
+			if (i!=pd_idx)

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#482: FILE: drivers/md/raid5.c:738:
+			if (i!=pd_idx)
 			     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#501: FILE: drivers/md/raid5.c:757:
+	tx = async_xor(xor_dest, xor_srcs, 0, count, STRIPE_SIZE,
+		flags, tx, callback, sh);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#509: FILE: drivers/md/raid5.c:765:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#510: FILE: drivers/md/raid5.c:766:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#513: FILE: drivers/md/raid5.c:769:
+	if (test_and_clear_bit(STRIPE_OP_MOD_DMA_CHECK, &sh->ops.pending) &&
+		sh->ops.zero_sum_result == 0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#516: FILE: drivers/md/raid5.c:772:
+	BUG_ON(test_and_set_bit(STRIPE_OP_CHECK, &sh->ops.complete));

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#531: FILE: drivers/md/raid5.c:787:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#532: FILE: drivers/md/raid5.c:788:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#534: FILE: drivers/md/raid5.c:790:
+	for (i=disks; i--;) {
 	      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#536: FILE: drivers/md/raid5.c:792:
+		struct r5dev *dev = &sh->dev[i];
+		if (i != pd_idx)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#541: FILE: drivers/md/raid5.c:797:
+	tx = async_xor_zero_sum(xor_dest, xor_srcs, 0, count, STRIPE_SIZE,
+		&sh->ops.zero_sum_result, 0, NULL, NULL, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#550: FILE: drivers/md/raid5.c:806:
+	tx = async_interrupt(ASYNC_TX_DEP_ACK | ASYNC_TX_ACK, tx,
+		ops_complete_check, sh);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#555: FILE: drivers/md/raid5.c:811:
+	int overlap_clear=0, i, disks = sh->disks;
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#584: FILE: drivers/md/raid5.c:840:
+		for (i=disks; i-- ;) {
 		      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#586: FILE: drivers/md/raid5.c:842:
+			struct r5dev *dev = &sh->dev[i];
+			if (test_and_clear_bit(R5_Overlap, &dev->flags))

CHECK:CAMELCASE: Avoid CamelCase: <R5_Overlap>
#586: FILE: drivers/md/raid5.c:842:
+			if (test_and_clear_bit(R5_Overlap, &dev->flags))

WARNING:LONG_LINE_COMMENT: line length of 141 exceeds 100 columns
#603: FILE: include/linux/raid/raid5.h:119:
+ *     lockstripe clrSTRIPE_HANDLE ... (lockdev check-buffers unlockdev) .. change-state .. record io/ops needed unlockstripe schedule io/ops

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:TYPO_SPELLING: 'guaruntees' may be misspelled - perhaps 'guarantees'?
#638: FILE: include/linux/raid/raid5.h:153:
+ *    guaruntees that any operation that is dependent on the
       ^^^^^^^^^^

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#648: FILE: include/linux/raid/raid5.h:169:
+		unsigned long	   pending;  /* pending operations (set for request->issue->complete) */

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#652: FILE: include/linux/raid/raid5.h:173:
+		int		   count;    /* raid5_runs_ops is set to run when this is non-zero */

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#668: FILE: include/linux/raid/raid5.h:198:
+#define	R5_Wantcompute	11	/* compute_block in progress treat as uptodate */
        	              	  	                                      ^^^^^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000452859.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 22 errors, 41 warnings, 39 checks, 628 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000452859.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
