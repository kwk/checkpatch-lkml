WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#75: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#80: FILE: drivers/input/lirc/lirc_igorplugusb.c:1:
+/* lirc_igorplugusb - USB remote support for LIRC

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#118: FILE: drivers/input/lirc/lirc_igorplugusb.c:39:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#119: FILE: drivers/input/lirc/lirc_igorplugusb.c:40:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#141: FILE: drivers/input/lirc/lirc_igorplugusb.c:62:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#159: FILE: drivers/input/lirc/lirc_igorplugusb.c:80:
+			printk(KERN_DEBUG fmt, ## args);	\

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#172: FILE: drivers/input/lirc/lirc_igorplugusb.c:93:
+/** Header at the beginning of the device's buffer:
+	unsigned char data_length

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#185: FILE: drivers/input/lirc/lirc_igorplugusb.c:106:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#193: FILE: drivers/input/lirc/lirc_igorplugusb.c:114:
+ *
+**/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#202: FILE: drivers/input/lirc/lirc_igorplugusb.c:123:
+ *
+**/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#211: FILE: drivers/input/lirc/lirc_igorplugusb.c:132:
+ *
+**/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#219: FILE: drivers/input/lirc/lirc_igorplugusb.c:140:
+ *
+**/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#228: FILE: drivers/input/lirc/lirc_igorplugusb.c:149:
+ *
+**/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#236: FILE: drivers/input/lirc/lirc_igorplugusb.c:157:
+ *
+**/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#244: FILE: drivers/input/lirc/lirc_igorplugusb.c:165:
+ *
+**/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#253: FILE: drivers/input/lirc/lirc_igorplugusb.c:174:
+ *
+**/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#263: FILE: drivers/input/lirc/lirc_igorplugusb.c:184:
+ *
+**/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#272: FILE: drivers/input/lirc/lirc_igorplugusb.c:193:
+ *
+**/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#280: FILE: drivers/input/lirc/lirc_igorplugusb.c:201:
+ *
+**/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#289: FILE: drivers/input/lirc/lirc_igorplugusb.c:210:
+ *
+**/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#297: FILE: drivers/input/lirc/lirc_igorplugusb.c:218:
+ *
+**/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#299: FILE: drivers/input/lirc/lirc_igorplugusb.c:220:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#302: FILE: drivers/input/lirc/lirc_igorplugusb.c:223:
+struct irctl {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#336: FILE: drivers/input/lirc/lirc_igorplugusb.c:257:
+	printk(DRIVER_NAME "[%d]: usb remote disconnected\n", devnum);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#351: FILE: drivers/input/lirc/lirc_igorplugusb.c:272:
+		printk(DRIVER_NAME "[?]: set_use_inc called with no context\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_use_inc', this function's name, in a string
#351: FILE: drivers/input/lirc/lirc_igorplugusb.c:272:
+		printk(DRIVER_NAME "[?]: set_use_inc called with no context\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#367: FILE: drivers/input/lirc/lirc_igorplugusb.c:288:
+		printk(DRIVER_NAME "[?]: set_use_dec called with no context\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_use_dec', this function's name, in a string
#367: FILE: drivers/input/lirc/lirc_igorplugusb.c:288:
+		printk(DRIVER_NAME "[?]: set_use_dec called with no context\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#373: FILE: drivers/input/lirc/lirc_igorplugusb.c:294:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#379: FILE: drivers/input/lirc/lirc_igorplugusb.c:300:
+ * evenly divisible by code_length to the buffer
+**/

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#390: FILE: drivers/input/lirc/lirc_igorplugusb.c:311:
+	ret = usb_control_msg(

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#392: FILE: drivers/input/lirc/lirc_igorplugusb.c:313:
+	      GET_INFRACODE, USB_TYPE_VENDOR|USB_DIR_IN,
 	                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#408: FILE: drivers/input/lirc/lirc_igorplugusb.c:329:
+			printk(DRIVER_NAME "[%d]: Device buffer overrun.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#409: FILE: drivers/input/lirc/lirc_igorplugusb.c:330:
+			printk(DRIVER_NAME "[%d]: Device buffer overrun.\n",
+				ir->devnum);

CHECK:BRACES: braces {} should be used on all arms of this statement
#417: FILE: drivers/input/lirc/lirc_igorplugusb.c:338:
+		if (timediff + 1 > PULSE_MASK / 1000000)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#419: FILE: drivers/input/lirc/lirc_igorplugusb.c:340:
+		else {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#445: FILE: drivers/input/lirc/lirc_igorplugusb.c:366:
+		ret = usb_control_msg(

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#447: FILE: drivers/input/lirc/lirc_igorplugusb.c:368:
+		      SET_INFRABUFFER_EMPTY, USB_TYPE_VENDOR|USB_DIR_IN,
 		                                            ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#452: FILE: drivers/input/lirc/lirc_igorplugusb.c:373:
+			printk(DRIVER_NAME "[%d]: SET_INFRABUFFER_EMPTY: "

WARNING:SPLIT_STRING: quoted string split across lines
#453: FILE: drivers/input/lirc/lirc_igorplugusb.c:374:
+			printk(DRIVER_NAME "[%d]: SET_INFRABUFFER_EMPTY: "
+			       "error %d\n", ir->devnum, ret);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#455: FILE: drivers/input/lirc/lirc_igorplugusb.c:376:
+		return SUCCESS;
+	} else

CHECK:BRACES: Unbalanced braces around else statement
#455: FILE: drivers/input/lirc/lirc_igorplugusb.c:376:
+	} else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#456: FILE: drivers/input/lirc/lirc_igorplugusb.c:377:
+		printk(DRIVER_NAME "[%d]: GET_INFRACODE: error %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#457: FILE: drivers/input/lirc/lirc_igorplugusb.c:378:
+		printk(DRIVER_NAME "[%d]: GET_INFRACODE: error %d\n",
+			ir->devnum, ret);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#462: FILE: drivers/input/lirc/lirc_igorplugusb.c:383:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#465: FILE: drivers/input/lirc/lirc_igorplugusb.c:386:
+static int usb_remote_probe(struct usb_interface *intf,
+				const struct usb_device_id *id)

CHECK:CAMELCASE: Avoid CamelCase: <bNumEndpoints>
#485: FILE: drivers/input/lirc/lirc_igorplugusb.c:406:
+	if (idesc->desc.bNumEndpoints != 1)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <bEndpointAddress>
#488: FILE: drivers/input/lirc/lirc_igorplugusb.c:409:
+	if (((ep_ctl2->desc.bEndpointAddress & USB_ENDPOINT_DIR_MASK)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#490: FILE: drivers/input/lirc/lirc_igorplugusb.c:411:
+	    != USB_DIR_IN)
+	    || (ep_ctl2->desc.bmAttributes & USB_ENDPOINT_XFERTYPE_MASK)

CHECK:CAMELCASE: Avoid CamelCase: <bmAttributes>
#490: FILE: drivers/input/lirc/lirc_igorplugusb.c:411:
+	    || (ep_ctl2->desc.bmAttributes & USB_ENDPOINT_XFERTYPE_MASK)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#502: FILE: drivers/input/lirc/lirc_igorplugusb.c:423:
+
+

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ir)...) over kmalloc(sizeof(struct irctl)...)
#505: FILE: drivers/input/lirc/lirc_igorplugusb.c:426:
+	ir = kmalloc(sizeof(struct irctl), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*plugin)...) over kmalloc(sizeof(struct lirc_plugin)...)
#513: FILE: drivers/input/lirc/lirc_igorplugusb.c:434:
+	plugin = kmalloc(sizeof(struct lirc_plugin), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*rbuf)...) over kmalloc(sizeof(struct lirc_buffer)...)
#519: FILE: drivers/input/lirc/lirc_igorplugusb.c:440:
+	rbuf = kmalloc(sizeof(struct lirc_buffer), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#526: FILE: drivers/input/lirc/lirc_igorplugusb.c:447:
+	if (lirc_buffer_init(rbuf, bytes_in_key,
+			DEVICE_BUFLEN+ADDITIONAL_LIRC_BYTES)) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#526: FILE: drivers/input/lirc/lirc_igorplugusb.c:447:
+			DEVICE_BUFLEN+ADDITIONAL_LIRC_BYTES)) {
 			             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#532: FILE: drivers/input/lirc/lirc_igorplugusb.c:453:
+	ir->buf_in = usb_buffer_alloc(dev,
+			      DEVICE_BUFLEN+DEVICE_HEADERLEN,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#532: FILE: drivers/input/lirc/lirc_igorplugusb.c:453:
+			      DEVICE_BUFLEN+DEVICE_HEADERLEN,
 			                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#543: FILE: drivers/input/lirc/lirc_igorplugusb.c:464:
+	plugin->code_length = bytes_in_key*8; /* in bits */
 	                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#565: FILE: drivers/input/lirc/lirc_igorplugusb.c:486:
+		usb_buffer_free(dev, DEVICE_BUFLEN+DEVICE_HEADERLEN,
 		                                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#566: FILE: drivers/input/lirc/lirc_igorplugusb.c:487:
+		usb_buffer_free(dev, DEVICE_BUFLEN+DEVICE_HEADERLEN,
+			ir->buf_in, ir->dma_in);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#576: FILE: drivers/input/lirc/lirc_igorplugusb.c:497:
+		printk(DRIVER_NAME "[%d]: out of memory (code=%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#577: FILE: drivers/input/lirc/lirc_igorplugusb.c:498:
+		printk(DRIVER_NAME "[%d]: out of memory (code=%d)\n",
+			devnum, mem_failure);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#585: FILE: drivers/input/lirc/lirc_igorplugusb.c:506:
+	ir->len_in = DEVICE_BUFLEN+DEVICE_HEADERLEN;
 	                          ^

CHECK:CAMELCASE: Avoid CamelCase: <iManufacturer>
#589: FILE: drivers/input/lirc/lirc_igorplugusb.c:510:
+	if (dev->descriptor.iManufacturer

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#590: FILE: drivers/input/lirc/lirc_igorplugusb.c:511:
+	if (dev->descriptor.iManufacturer
+		&& usb_string(dev, dev->descriptor.iManufacturer, buf, 63) > 0)

CHECK:CAMELCASE: Avoid CamelCase: <iProduct>
#592: FILE: drivers/input/lirc/lirc_igorplugusb.c:513:
+	if (dev->descriptor.iProduct

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#593: FILE: drivers/input/lirc/lirc_igorplugusb.c:514:
+	if (dev->descriptor.iProduct
+		&& usb_string(dev, dev->descriptor.iProduct, buf, 63) > 0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#595: FILE: drivers/input/lirc/lirc_igorplugusb.c:516:
+	printk(DRIVER_NAME "[%d]: %s on usb%d:%d\n", devnum, name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#600: FILE: drivers/input/lirc/lirc_igorplugusb.c:521:
+	ret = usb_control_msg(ir->usbdev, usb_rcvctrlpipe(ir->usbdev, 0),
+		SET_INFRABUFFER_EMPTY, USB_TYPE_VENDOR|USB_DIR_IN,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#600: FILE: drivers/input/lirc/lirc_igorplugusb.c:521:
+		SET_INFRABUFFER_EMPTY, USB_TYPE_VENDOR|USB_DIR_IN,
 		                                      ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#605: FILE: drivers/input/lirc/lirc_igorplugusb.c:526:
+		printk(DRIVER_NAME "[%d]: SET_INFRABUFFER_EMPTY: error %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#606: FILE: drivers/input/lirc/lirc_igorplugusb.c:527:
+		printk(DRIVER_NAME "[%d]: SET_INFRABUFFER_EMPTY: error %d\n",
+			devnum, ret);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#612: FILE: drivers/input/lirc/lirc_igorplugusb.c:533:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#617: FILE: drivers/input/lirc/lirc_igorplugusb.c:538:
+	struct irctl *ir = usb_get_intfdata(intf);
+	usb_set_intfdata(intf, NULL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#649: FILE: drivers/input/lirc/lirc_igorplugusb.c:570:
+	printk(KERN_INFO "\n"

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#651: FILE: drivers/input/lirc/lirc_igorplugusb.c:572:
+	printk(DRIVER_NAME ": " DRIVER_AUTHOR "\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#660: FILE: drivers/input/lirc/lirc_igorplugusb.c:581:
+		printk(DRIVER_NAME ": usb register failed, result = %d\n", i);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000230082.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 36 warnings, 41 checks, 639 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000230082.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
