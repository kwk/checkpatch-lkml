WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#64: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#69: FILE: fs/sysfs/kobject.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#90: FILE: include/linux/sysfs-kobject.h:1:
+/*

ERROR:SPACING: space required after that ',' (ctx:VxV)
#131: FILE: include/linux/sysfs-kobject.h:42:
+#define __ATTR(_name,_mode,_show,_store) { \
                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#131: FILE: include/linux/sysfs-kobject.h:42:
+#define __ATTR(_name,_mode,_show,_store) { \
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#131: FILE: include/linux/sysfs-kobject.h:42:
+#define __ATTR(_name,_mode,_show,_store) { \
                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#144: FILE: include/linux/sysfs-kobject.h:55:
+#define attr_name(_attr) (_attr).attr.name

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kobject *' should also have an identifier name
#150: FILE: include/linux/sysfs-kobject.h:61:
+	ssize_t (*read)(struct kobject *, struct bin_attribute *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bin_attribute *' should also have an identifier name
#150: FILE: include/linux/sysfs-kobject.h:61:
+	ssize_t (*read)(struct kobject *, struct bin_attribute *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#150: FILE: include/linux/sysfs-kobject.h:61:
+	ssize_t (*read)(struct kobject *, struct bin_attribute *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#150: FILE: include/linux/sysfs-kobject.h:61:
+	ssize_t (*read)(struct kobject *, struct bin_attribute *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#150: FILE: include/linux/sysfs-kobject.h:61:
+	ssize_t (*read)(struct kobject *, struct bin_attribute *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kobject *' should also have an identifier name
#152: FILE: include/linux/sysfs-kobject.h:63:
+	ssize_t (*write)(struct kobject *, struct bin_attribute *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bin_attribute *' should also have an identifier name
#152: FILE: include/linux/sysfs-kobject.h:63:
+	ssize_t (*write)(struct kobject *, struct bin_attribute *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#152: FILE: include/linux/sysfs-kobject.h:63:
+	ssize_t (*write)(struct kobject *, struct bin_attribute *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#152: FILE: include/linux/sysfs-kobject.h:63:
+	ssize_t (*write)(struct kobject *, struct bin_attribute *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#152: FILE: include/linux/sysfs-kobject.h:63:
+	ssize_t (*write)(struct kobject *, struct bin_attribute *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kobject *' should also have an identifier name
#154: FILE: include/linux/sysfs-kobject.h:65:
+	int (*mmap)(struct kobject *, struct bin_attribute *attr,

ERROR:SPACING: space required after that ',' (ctx:OxV)
#159: FILE: include/linux/sysfs-kobject.h:70:
+	ssize_t	(*show)(struct kobject *, struct attribute *,char *);
 	       	                                            ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kobject *' should also have an identifier name
#159: FILE: include/linux/sysfs-kobject.h:70:
+	ssize_t	(*show)(struct kobject *, struct attribute *,char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct attribute *' should also have an identifier name
#159: FILE: include/linux/sysfs-kobject.h:70:
+	ssize_t	(*show)(struct kobject *, struct attribute *,char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#159: FILE: include/linux/sysfs-kobject.h:70:
+	ssize_t	(*show)(struct kobject *, struct attribute *,char *);

ERROR:SPACING: space required after that ',' (ctx:OxV)
#160: FILE: include/linux/sysfs-kobject.h:71:
+	ssize_t	(*store)(struct kobject *,struct attribute *,const char *, size_t);
 	       	                         ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#160: FILE: include/linux/sysfs-kobject.h:71:
+	ssize_t	(*store)(struct kobject *,struct attribute *,const char *, size_t);
 	       	                                            ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kobject *' should also have an identifier name
#160: FILE: include/linux/sysfs-kobject.h:71:
+	ssize_t	(*store)(struct kobject *,struct attribute *,const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct attribute *' should also have an identifier name
#160: FILE: include/linux/sysfs-kobject.h:71:
+	ssize_t	(*store)(struct kobject *,struct attribute *,const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#160: FILE: include/linux/sysfs-kobject.h:71:
+	ssize_t	(*store)(struct kobject *,struct attribute *,const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#160: FILE: include/linux/sysfs-kobject.h:71:
+	ssize_t	(*store)(struct kobject *,struct attribute *,const char *, size_t);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#190: FILE: include/linux/sysfs-kobject.h:101:
+int sysfs_add_file_to_group(struct kobject *kobj,
+			const struct attribute *attr, const char *group);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#192: FILE: include/linux/sysfs-kobject.h:103:
+void sysfs_remove_file_from_group(struct kobject *kobj,
+			const struct attribute *attr, const char *group);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: include/linux/sysfs-kobject.h:184:
+static inline int sysfs_add_file_to_group(struct kobject *kobj,
+		const struct attribute *attr, const char *group)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#279: FILE: include/linux/sysfs-kobject.h:190:
+static inline void sysfs_remove_file_from_group(struct kobject *kobj,
+		const struct attribute *attr, const char *group)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000378751.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 21 warnings, 4 checks, 441 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000378751.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
