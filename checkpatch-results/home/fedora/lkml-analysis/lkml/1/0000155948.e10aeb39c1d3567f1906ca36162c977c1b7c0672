WARNING:MISPLACED_INIT: __cpuinitconst should be placed after cpuid_bits[]
#59: FILE: arch/x86/kernel/cpu/addon_cpuid_features.c:32:
+	static const struct cpuid_bit __cpuinitconst cpuid_bits[] = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:MISPLACED_INIT: __cpuinitconst should be placed after amd_cpu_dev
#70: FILE: arch/x86/kernel/cpu/amd.c:455:
+static const struct cpu_dev __cpuinitconst amd_cpu_dev = {

WARNING:MISPLACED_INIT: __cpuinitconst should be placed after centaur_cpu_dev
#81: FILE: arch/x86/kernel/cpu/centaur.c:471:
+static const struct cpu_dev __cpuinitconst centaur_cpu_dev = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __cpuinitconst
#103: FILE: arch/x86/kernel/cpu/common.c:63:
+static const struct cpu_dev *this_cpu __cpuinitdata;

Const init definitions should use __initconst instead of
__initdata.

Similarly init definitions without const require a separate
use of const.

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __cpuinitconst
#124: FILE: arch/x86/kernel/cpu/common.c:259:
+static const struct cpu_dev *__cpuinitdata cpu_devs[X86_VENDOR_NUM] = {};

WARNING:MISPLACED_INIT: __cpuinitconst should be placed after default_cpu
#133: FILE: arch/x86/kernel/cpu/common.c:278:
+static const struct cpu_dev __cpuinitconst default_cpu = {

ERROR:POINTER_LOCATION: "foo	* bar" should be "foo	*bar"
#192: FILE: arch/x86/kernel/cpu/cpu.h:13:
+	const char	* c_vendor;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo	* bar" should be "foo	*bar"
#196: FILE: arch/x86/kernel/cpu/cpu.h:16:
+	const char	* c_ident[2];

CHECK:CAMELCASE: Avoid CamelCase: <__cpu_dev_##cpu_devX>
#205: FILE: arch/x86/kernel/cpu/cpu.h:28:
+	static const struct cpu_dev *const __cpu_dev_##cpu_devX __used \

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Cx86_model>
#222: FILE: arch/x86/kernel/cpu/cyrix.c:64:
+static const char __cpuinitconst Cx86_model[][9] = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#227: FILE: arch/x86/kernel/cpu/cyrix.c:68:
 };
+static const char __cpuinitconst Cx486_name[][5] = {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Cx486_name>
#227: FILE: arch/x86/kernel/cpu/cyrix.c:68:
+static const char __cpuinitconst Cx486_name[][5] = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#232: FILE: arch/x86/kernel/cpu/cyrix.c:72:
 };
+static const char __cpuinitconst Cx486S_name[][4] = {

CHECK:CAMELCASE: Avoid CamelCase: <Cx486S_name>
#232: FILE: arch/x86/kernel/cpu/cyrix.c:72:
+static const char __cpuinitconst Cx486S_name[][4] = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#236: FILE: arch/x86/kernel/cpu/cyrix.c:75:
 };
+static const char __cpuinitconst Cx486D_name[][4] = {

CHECK:CAMELCASE: Avoid CamelCase: <Cx486D_name>
#236: FILE: arch/x86/kernel/cpu/cyrix.c:75:
+static const char __cpuinitconst Cx486D_name[][4] = {

WARNING:MISPLACED_INIT: __cpuinitconst should be placed after cyrix_model_mult1[]
#242: FILE: arch/x86/kernel/cpu/cyrix.c:79:
+static const char __cpuinitconst cyrix_model_mult1[] = "12??43";

WARNING:MISPLACED_INIT: __cpuinitconst should be placed after cyrix_model_mult2[]
#243: FILE: arch/x86/kernel/cpu/cyrix.c:80:
+static const char __cpuinitconst cyrix_model_mult2[] = "12233445";

WARNING:MISPLACED_INIT: __cpuinitconst should be placed after cyrix_cpu_dev
#252: FILE: arch/x86/kernel/cpu/cyrix.c:438:
+static const struct cpu_dev __cpuinitconst cyrix_cpu_dev = {

WARNING:MISPLACED_INIT: __cpuinitconst should be placed after nsc_cpu_dev
#261: FILE: arch/x86/kernel/cpu/cyrix.c:449:
+static const struct cpu_dev __cpuinitconst nsc_cpu_dev = {

WARNING:MISPLACED_INIT: __cpuinitconst should be placed after intel_cpu_dev
#272: FILE: arch/x86/kernel/cpu/intel.c:377:
+static const struct cpu_dev __cpuinitconst intel_cpu_dev = {

WARNING:MISPLACED_INIT: __cpuinitconst should be placed after cache_table[]
#283: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:35:
+static const struct _cache_table __cpuinitconst cache_table[] =

WARNING:MISPLACED_INIT: __cpuinitconst should be placed after assocs[]
#292: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:200:
+static const unsigned short __cpuinitconst assocs[] = {

WARNING:MISPLACED_INIT: __cpuinitconst should be placed after levels[]
#301: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:207:
+static const unsigned char __cpuinitconst levels[] = { 1, 1, 2, 3 };

WARNING:MISPLACED_INIT: __cpuinitconst should be placed after types[]
#302: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:208:
+static const unsigned char __cpuinitconst types[] = { 1, 2, 3, 3 };

WARNING:MISPLACED_INIT: __cpuinitconst should be placed after transmeta_cpu_dev
#313: FILE: arch/x86/kernel/cpu/transmeta.c:101:
+static const struct cpu_dev __cpuinitconst transmeta_cpu_dev = {

WARNING:MISPLACED_INIT: __cpuinitconst should be placed after umc_cpu_dev
#324: FILE: arch/x86/kernel/cpu/umc.c:11:
+static const struct cpu_dev __cpuinitconst umc_cpu_dev = {

WARNING:MISPLACED_INIT: __cpuinitconst should be placed after mmconf_dmi_table[]
#335: FILE: arch/x86/kernel/mmconf-fam10h_64.c:229:
+static const struct dmi_system_id __cpuinitconst mmconf_dmi_table[] = {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000155948.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 16 warnings, 8 checks, 240 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000155948.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
