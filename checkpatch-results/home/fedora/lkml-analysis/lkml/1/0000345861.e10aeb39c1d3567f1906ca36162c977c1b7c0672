WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#53: FILE: include/asm-x86/processor.h:34:
+^Iunsigned long val = 0; ^I/* Damn you, gcc! */$

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#57: FILE: include/asm-x86/processor.h:38:
+		asm("mov %%db0, %0" :"=r" (val)); break;
 		                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#59: FILE: include/asm-x86/processor.h:40:
+		asm("mov %%db1, %0" :"=r" (val)); break;
 		                    ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#61: FILE: include/asm-x86/processor.h:42:
+		asm("mov %%db2, %0" :"=r" (val)); break;
 		                    ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#63: FILE: include/asm-x86/processor.h:44:
+		asm("mov %%db3, %0" :"=r" (val)); break;
 		                    ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#65: FILE: include/asm-x86/processor.h:46:
+		asm("mov %%db6, %0" :"=r" (val)); break;
 		                    ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#67: FILE: include/asm-x86/processor.h:48:
+		asm("mov %%db7, %0" :"=r" (val)); break;
 		                    ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#69: FILE: include/asm-x86/processor.h:50:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#78: FILE: include/asm-x86/processor.h:59:
+		asm("mov %0,%%db0"	: /* no output */ :"r" (value));
 		                  	                  ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#81: FILE: include/asm-x86/processor.h:62:
+		asm("mov %0,%%db1"	: /* no output */ :"r" (value));
 		                  	                  ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#84: FILE: include/asm-x86/processor.h:65:
+		asm("mov %0,%%db2"	: /* no output */ :"r" (value));
 		                  	                  ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#87: FILE: include/asm-x86/processor.h:68:
+		asm("mov %0,%%db3"	: /* no output */ :"r" (value));
 		                  	                  ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#90: FILE: include/asm-x86/processor.h:71:
+		asm("mov %0,%%db6"	: /* no output */ :"r" (value));
 		                  	                  ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#93: FILE: include/asm-x86/processor.h:74:
+		asm("mov %0,%%db7"	: /* no output */ :"r" (value));
 		                  	                  ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#96: FILE: include/asm-x86/processor.h:77:
+		BUG();

CHECK:LINE_SPACING: Please don't use multiple blank lines
#100: FILE: include/asm-x86/processor.h:81:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#109: FILE: include/asm-x86/processor.h:89:
+#define get_debugreg(var, register)				\
+	(var) = native_get_debugreg(register)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#126: FILE: include/asm-x86/processor.h:106:
+	unsigned cr4;

WARNING:LINE_SPACING: Missing a blank line after declarations
#127: FILE: include/asm-x86/processor.h:107:
+	unsigned cr4;
+	mmu_cr4_features |= mask;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#135: FILE: include/asm-x86/processor.h:115:
+	unsigned cr4;

WARNING:LINE_SPACING: Missing a blank line after declarations
#136: FILE: include/asm-x86/processor.h:116:
+	unsigned cr4;
+	mmu_cr4_features &= ~mask;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#142: FILE: include/asm-x86/processor.h:122:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000345861.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 13 errors, 7 warnings, 2 checks, 257 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000345861.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
