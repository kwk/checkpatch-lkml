CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#84: FILE: drivers/char/vt_ioctl.c:1184:
+compat_fontx_ioctl(int cmd, struct compat_consolefontdesc __user *user_cfd,
+			 int perm, struct console_font_op *op)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#132: FILE: drivers/char/vt_ioctl.c:1232:
+compat_kdfontop_ioctl(struct compat_console_font_op __user *fontop,
+			 int perm, struct console_font_op *op, struct vc_data *vc)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#158: FILE: drivers/char/vt_ioctl.c:1258:
+compat_unimap_ioctl(unsigned int cmd, struct compat_unimapdesc __user *user_ud,
+			 int perm, struct vc_data *vc)

WARNING:SIZEOF_PARENTHESIS: sizeof tmp should be sizeof(tmp)
#163: FILE: drivers/char/vt_ioctl.c:1263:
+	if (copy_from_user(&tmp, user_ud, sizeof tmp))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#168: FILE: drivers/char/vt_ioctl.c:1268:
+		if (!access_ok(VERIFY_WRITE, tmp_entries,
+				tmp.entry_ct*sizeof(struct unipair)))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#168: FILE: drivers/char/vt_ioctl.c:1268:
+				tmp.entry_ct*sizeof(struct unipair)))
 				            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around user_ud->entry_ct
#178: FILE: drivers/char/vt_ioctl.c:1278:
+		return con_get_unimap(vc, tmp.entry_ct, &(user_ud->entry_ct), tmp_entries);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#183: FILE: drivers/char/vt_ioctl.c:1283:
+long vt_compat_ioctl(struct tty_struct *tty, struct file * file,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#184: FILE: drivers/char/vt_ioctl.c:1284:
+long vt_compat_ioctl(struct tty_struct *tty, struct file * file,
+	     unsigned int cmd, unsigned long arg)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#198: FILE: drivers/char/vt_ioctl.c:1298:
+^Iif (!vc_cons_allocated(console)) { ^I/* impossible? */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#272: FILE: drivers/char/vt_ioctl.c:1372:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#275: FILE: drivers/char/vt_ioctl.c:1375:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#287: FILE: include/linux/tty.h:529:
+extern long vt_compat_ioctl(struct tty_struct *tty, struct file * file,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#287: FILE: include/linux/tty.h:529:
+extern long vt_compat_ioctl(struct tty_struct *tty, struct file * file,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#288: FILE: include/linux/tty.h:530:
+extern long vt_compat_ioctl(struct tty_struct *tty, struct file * file,
+		     unsigned int cmd, unsigned long arg);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000087821.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 2 warnings, 11 checks, 232 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000087821.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
