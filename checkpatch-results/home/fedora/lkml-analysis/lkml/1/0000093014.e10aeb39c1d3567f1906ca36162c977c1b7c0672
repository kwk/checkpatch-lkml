WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#94: FILE: fs/fat/dir.c:1371:
+	BUG_ON(root_inode->i_ino != MSDOS_ROOT_INO);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#100: FILE: fs/fat/dir.c:1377:
+		/* volume label: note that it is not enough to check only
+		   whether the ATTR_VOLUME bit is set, since this would yield

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#101: FILE: fs/fat/dir.c:1378:
+		   true on any vfat extended entry */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#116: FILE: fs/fat/dir.c:1393:
+	BUG_ON(root_inode->i_ino != MSDOS_ROOT_INO);

CHECK:SPACING: No space is necessary after a cast
#119: FILE: fs/fat/dir.c:1396:
+	       (name) ? name : (const unsigned char *) FAT_LABEL_NONAME,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#123: FILE: fs/fat/dir.c:1400:
+	de.start = de.starthi = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#161: FILE: fs/fat/fat.h:49:
+	unsigned short root_ts;   /* root dir timestamps:
+				       ignore, load, preserve, save */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#161: FILE: fs/fat/fat.h:49:
+				       ignore, load, preserve, save */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#178: FILE: fs/fat/fat.h:267:
+extern int fat_get_label_entry(struct inode *root_inode,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#181: FILE: fs/fat/fat.h:270:
+extern int fat_create_label_entry(struct inode *root_inode,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#191: FILE: fs/fat/fat.h:355:
+extern void fat_time_de2inode(struct msdos_sb_info *sbi, struct inode *inode,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#193: FILE: fs/fat/fat.h:357:
+extern void fat_time_inode2de(struct msdos_sb_info *sbi, struct inode *inode,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#228: FILE: fs/fat/inode.c:592:
+		 * as the timestamps of the file system's label dir entry. */

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#235: FILE: fs/fat/inode.c:599:
+				if (sbi->options.root_ts & FAT_ROOT_TS_CREATE) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#236: FILE: fs/fat/inode.c:600:
+					printk(KERN_INFO "FAT: creating volume"

WARNING:SPLIT_STRING: quoted string split across lines
#237: FILE: fs/fat/inode.c:601:
+					printk(KERN_INFO "FAT: creating volume"
+					       " label on %s to save root dir"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#238: FILE: fs/fat/inode.c:602:
+					       " label on %s to save root dir"
+					       " timestamps\n", sb->s_id);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#243: FILE: fs/fat/inode.c:607:
+					/* No label present, but CREATE flag is
+					   not set. Thus not complaining. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#243: FILE: fs/fat/inode.c:607:
+					   not set. Thus not complaining. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#275: FILE: fs/fat/inode.c:624:
+			printk(KERN_ERR "FAT: unable to read inode block "

WARNING:SPLIT_STRING: quoted string split across lines
#276: FILE: fs/fat/inode.c:625:
+			printk(KERN_ERR "FAT: unable to read inode block "
+			       "for updating (i_pos %lld)\n", i_pos);

CHECK:SPACING: No space is necessary after a cast
#303: FILE: fs/fat/inode.c:635:
+		raw_entry = &((struct msdos_dir_entry *) (bh->b_data))

CHECK:CAMELCASE: Avoid CamelCase: <Opt_err_panic>
#342: FILE: fs/fat/inode.c:905:
+	Opt_err_panic, Opt_err_ro, Opt_rootts_load, Opt_rootts_preserve,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Opt_err_ro>
#342: FILE: fs/fat/inode.c:905:
+	Opt_err_panic, Opt_err_ro, Opt_rootts_load, Opt_rootts_preserve,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_rootts_load>
#342: FILE: fs/fat/inode.c:905:
+	Opt_err_panic, Opt_err_ro, Opt_rootts_load, Opt_rootts_preserve,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_rootts_preserve>
#342: FILE: fs/fat/inode.c:905:
+	Opt_err_panic, Opt_err_ro, Opt_rootts_load, Opt_rootts_preserve,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_rootts_save>
#343: FILE: fs/fat/inode.c:906:
+	Opt_rootts_save, Opt_rootts_ignore, Opt_err,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_rootts_ignore>
#343: FILE: fs/fat/inode.c:906:
+	Opt_rootts_save, Opt_rootts_ignore, Opt_err,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_err>
#343: FILE: fs/fat/inode.c:906:
+	Opt_rootts_save, Opt_rootts_ignore, Opt_err,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#390: FILE: fs/fat/inode.c:1256:
+	/* Try to restore the root dir's timestamps from the FAT volume label
+	   entry */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#390: FILE: fs/fat/inode.c:1256:
+	   entry */

CHECK:BRACES: braces {} should be used on all arms of this statement
#416: FILE: fs/fat/misc.c:275:
+	if (sbi->options.isvfat) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#420: FILE: fs/fat/misc.c:279:
+	} else

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#421: FILE: fs/fat/misc.c:280:
+		inode->i_ctime = inode->i_atime = inode->i_mtime;

WARNING:LINE_SPACING: Missing a blank line after declarations
#431: FILE: fs/fat/misc.c:290:
+		__le16 atime;
+		fat_time_unix2fat(sbi, &inode->i_ctime, &de->ctime,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000093014.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 17 warnings, 18 checks, 347 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000093014.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
