CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#101: FILE: arch/x86/include/asm/msr.h:270:
 }
+struct msr *msrs_alloc(const struct cpumask *mask)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#105: FILE: arch/x86/include/asm/msr.h:274:
+}
+void msrs_free(struct msr *msrs)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#121: FILE: arch/x86/lib/msr.c:10:
+	unsigned msrs_len;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#134: FILE: arch/x86/lib/msr.c:23:
+	while (i < rv->msrs_len &&
+		rv->msrs[i].cpu != this_cpu)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#139: FILE: arch/x86/lib/msr.c:28:
+		pr_err("%s: called on a wrong cpu (%d vs %d)?\n",
+			caller, rv->msrs[i].cpu, this_cpu);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#201: FILE: arch/x86/lib/msr.c:150:
+	unsigned msrs_len;

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*msrs)...) over kzalloc(sizeof(struct msr)...)
#210: FILE: arch/x86/lib/msr.c:159:
+	msrs = kzalloc(sizeof(struct msr) * msrs_len, GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#210: FILE: arch/x86/lib/msr.c:159:
+	msrs = kzalloc(sizeof(struct msr) * msrs_len, GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#212: FILE: arch/x86/lib/msr.c:161:
+	if (!msrs) {
+		pr_warning("%s: error allocating msrs\n", __func__);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000038221.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 5 checks, 191 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000038221.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
