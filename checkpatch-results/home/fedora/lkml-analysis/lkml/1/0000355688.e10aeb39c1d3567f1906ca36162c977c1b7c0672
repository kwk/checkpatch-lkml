WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
 include/asm-x86/indirect_64.h      |   34 ++++++++++++++++++++++++++++++++++

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#61: FILE: x86/ia32/sys_ia32.c:895:
+	extern long (*ia32_sys_call_table[])(u32, u32, u32, u32, u32, u32);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#72: FILE: x86/ia32/sys_ia32.c:906:
+	switch (INDIRECT_SYSCALL32(&regs))
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#100: FILE: asm-x86/indirect_32.h:1:
+#ifndef _ASM_X86_INDIRECT_32_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#113: FILE: asm-x86/indirect_32.h:14:
+#define INDIRECT_SYSCALL(regs) (regs)->eax

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'regs' - possible side-effects?
#115: FILE: asm-x86/indirect_32.h:16:
+#define CALL_INDIRECT(regs) \
+  ({ extern long (*sys_call_table[]) (__u32, __u32, __u32, __u32, __u32, __u32); \
+     sys_call_table[INDIRECT_SYSCALL(regs)] ((regs)->ebx, (regs)->ecx, \
+					     (regs)->edx, (regs)->esi, \
+					     (regs)->edi, (regs)->ebp); \
+     })

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: asm-x86/indirect_32.h:17:
+  ({ extern long (*sys_call_table[]) (__u32, __u32, __u32, __u32, __u32, __u32); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: asm-x86/indirect_32.h:18:
+     sys_call_table[INDIRECT_SYSCALL(regs)] ((regs)->ebx, (regs)->ecx, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: asm-x86/indirect_32.h:21:
+     })$

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#126: FILE: asm-x86/indirect_64.h:1:
+#ifndef _ASM_X86_INDIRECT_64_H

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#149: FILE: asm-x86/indirect_64.h:24:
+#define INDIRECT_SYSCALL(regs) (regs)->rax

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#150: FILE: asm-x86/indirect_64.h:25:
+#define INDIRECT_SYSCALL32(regs) (regs)->eax

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'regs' - possible side-effects?
#152: FILE: asm-x86/indirect_64.h:27:
+#define CALL_INDIRECT(regs) \
+  ({ extern long (*sys_call_table[]) (__u64, __u64, __u64, __u64, __u64, __u64); \
+     sys_call_table[INDIRECT_SYSCALL(regs)] ((regs)->rdi, (regs)->rsi, \
+					     (regs)->rdx, (regs)->r10, \
+					     (regs)->r8, (regs)->r9); \
+     })

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: asm-x86/indirect_64.h:28:
+  ({ extern long (*sys_call_table[]) (__u64, __u64, __u64, __u64, __u64, __u64); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: asm-x86/indirect_64.h:29:
+     sys_call_table[INDIRECT_SYSCALL(regs)] ((regs)->rdi, (regs)->rsi, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: asm-x86/indirect_64.h:32:
+     })$

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#163: FILE: asm-x86/indirect.h:1:
+#ifdef CONFIG_X86_32

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000355688.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 19 warnings, 2 checks, 135 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000355688.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
