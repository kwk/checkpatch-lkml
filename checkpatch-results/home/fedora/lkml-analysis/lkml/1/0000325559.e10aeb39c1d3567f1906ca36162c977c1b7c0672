WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
The kernel implements readlink of /proc/pid/exe by getting the file from the

WARNING:BAD_SIGN_OFF: Use a single space after Cc:
#52: 
Cc:"Eric W. Biederman" <ebiederm@xmission.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#111: FILE: fs/binfmt_flat.c:534:
+		textpos = do_mmap(bprm->file, 0, text_len, PROT_READ|PROT_EXEC,
 		                                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#112: FILE: fs/binfmt_flat.c:535:
+				  MAP_PRIVATE|MAP_EXECUTABLE, 0);
 				             ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#148: FILE: fs/proc/base.c:1152:
+ * Callers must hold the mm's mmap_sem for these */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: space required before the open brace '{'
#157: FILE: fs/proc/base.c:1161:
+	if ((mm->num_exe_file_vmas == 0) && mm->exe_file){

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mm->num_exe_file_vmas == 0'
#157: FILE: fs/proc/base.c:1161:
+	if ((mm->num_exe_file_vmas == 0) && mm->exe_file){

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#162: FILE: fs/proc/base.c:1166:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#179: FILE: fs/proc/base.c:1183:
+	 * VM_EXECUTABLE vmas */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#191: FILE: fs/proc/base.c:1195:
+	 * this is called during fork when the task is not yet in /proc */

CHECK:BRACES: Unbalanced braces around else statement
#215: FILE: fs/proc/base.c:1219:
+	} else

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#351: FILE: include/linux/mm.h:1022:
+extern void added_exe_file_vma(struct mm_struct *mm);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#352: FILE: include/linux/mm.h:1023:
+extern void removed_exe_file_vma(struct mm_struct *mm);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#408: FILE: include/linux/proc_fs.h:212:
+ * only needed to implement /proc/<pid>|self/exe so we define them here. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#409: FILE: include/linux/proc_fs.h:213:
+extern void set_mm_exe_file(struct mm_struct *mm, struct file *new_exe_file);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#410: FILE: include/linux/proc_fs.h:214:
+extern struct file *get_mm_exe_file(struct mm_struct *mm);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#411: FILE: include/linux/proc_fs.h:215:
+extern void dup_mm_exe_file(struct mm_struct *oldmm, struct mm_struct *newmm);

ERROR:CODE_INDENT: code indent should use tabs where possible
#434: FILE: include/linux/proc_fs.h:276:
+^I       ^I^I^I   struct mm_struct *newmm)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#434: FILE: include/linux/proc_fs.h:276:
+^I       ^I^I^I   struct mm_struct *newmm)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#434: FILE: include/linux/proc_fs.h:276:
+static inline void dup_mm_exe_file(struct mm_struct *oldmm,
+	       			   struct mm_struct *newmm)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000325559.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 7 warnings, 11 checks, 453 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000325559.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
