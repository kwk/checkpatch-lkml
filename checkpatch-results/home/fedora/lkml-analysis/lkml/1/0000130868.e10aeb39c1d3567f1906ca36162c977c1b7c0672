WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
>>> +- Lots of cleanups, testing, bug fixing, optimizations, benchmarking etc...

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: block/blk-core.c:709:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#144: FILE: block/blk-core.c:767:
+	if (rl->count[rw]+1 >= queue_congestion_on_threshold(q) ||
 	                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#146: FILE: block/blk-core.c:769:
+		if (rl->count[rw]+1 >= q->nr_requests ||
 		                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#231: FILE: block/blk-sysfs.c:69:
+	} else if (rl->count[READ]+1 <= q->nr_requests && !iog_full[READ]) {
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#240: FILE: block/blk-sysfs.c:76:
+	} else if (rl->count[WRITE]+1 <= q->nr_requests && !iog_full[WRITE]) {
 	                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: block/elevator-fq.c:949:
+static void io_group_set_nrq(struct io_group_nrq *nrq, int nr_requests,
+			 int *congested, int *full)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#278: FILE: block/elevator-fq.c:953:
+	BUG_ON(nr_requests < 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#283: FILE: block/elevator-fq.c:958:
+	for (i=0; i<2; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#283: FILE: block/elevator-fq.c:958:
+	for (i=0; i<2; i++) {
 	           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#291: FILE: block/elevator-fq.c:966:
+		else if (nrq->count[i]+1 <= nrq->nr_requests)
 		                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#297: FILE: block/elevator-fq.c:972:
+void io_group_set_nrq_all(struct request_queue *q, int nr,
+			    int *congested, int *full)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#309: FILE: block/elevator-fq.c:984:
+	for (i=0; i<2; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#309: FILE: block/elevator-fq.c:984:
+	for (i=0; i<2; i++)
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#314: FILE: block/elevator-fq.c:989:
+	for (i=0; i<2; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#314: FILE: block/elevator-fq.c:989:
+	for (i=0; i<2; i++) {
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#322: FILE: block/elevator-fq.c:997:
+		for (i=0; i<2; i++) {
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#322: FILE: block/elevator-fq.c:997:
+		for (i=0; i<2; i++) {
 		           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#337: FILE: block/elevator-fq.c:1012:
+		struct io_group_nrq *nrq = &iog->nrq;
+		if (nrq->count[rw] >= nrq->nr_congestion_off)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#351: FILE: block/elevator-fq.c:1026:
+		struct io_group_nrq *nrq = &iog->nrq;
+		if (nrq->count[rw] >= nrq->nr_requests)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#403: FILE: block/elevator-fq.c:1316:
+	BUG_ON(!iog);

WARNING:TYPO_SPELLING: 'maximun' may be misspelled - perhaps 'maximum'?
#444: FILE: block/elevator-fq.h:191:
+ * @nr_requests: maximun num of requests for the io_group
                  ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'determin' may be misspelled - perhaps 'determine'?
#445: FILE: block/elevator-fq.h:192:
+ * @nr_congestion_on: threshold to determin the io_group is cogested.
                                    ^^^^^^^^

WARNING:TYPO_SPELLING: 'determin' may be misspelled - perhaps 'determine'?
#446: FILE: block/elevator-fq.h:193:
+ * @nr_congestion_off: threshold to determin the io_group is not congested.
                                     ^^^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#475: FILE: block/elevator-fq.h:490:
+extern void io_group_set_nrq_all(struct request_queue *q, int nr,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#476: FILE: block/elevator-fq.h:491:
+extern void io_group_set_nrq_all(struct request_queue *q, int nr,
+			    int *congested, int *full);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#477: FILE: block/elevator-fq.h:492:
+extern struct io_group *io_congested_io_group(struct request_queue *q, int rw);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#478: FILE: block/elevator-fq.h:493:
+extern struct io_group *io_full_io_group(struct request_queue *q, int rw);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#479: FILE: block/elevator-fq.h:494:
+extern struct io_group *__io_get_io_group(struct request_queue *q);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#494: FILE: block/elevator-fq.h:519:
+	BUG_ON(!iog);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#500: FILE: block/elevator-fq.h:525:
+	BUG_ON(!iog);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#506: FILE: block/elevator-fq.h:531:
+	BUG_ON(!iog);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#512: FILE: block/elevator-fq.h:537:
+	BUG_ON(!iog);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#518: FILE: block/elevator-fq.h:543:
+	BUG_ON(!iog);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#524: FILE: block/elevator-fq.h:549:
+	BUG_ON(!iog);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#530: FILE: block/elevator-fq.h:555:
+	BUG_ON(!iog);

WARNING:LINE_SPACING: Missing a blank line after declarations
#544: FILE: block/elevator-fq.h:613:
+	int i;
+	for (i=0; i<2; i++)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#544: FILE: block/elevator-fq.h:613:
+	for (i=0; i<2; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#544: FILE: block/elevator-fq.h:613:
+	for (i=0; i<2; i++)
 	           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#626: FILE: block/elevator-fq.h:799:
+	int i;
+	for (i=0; i<2; i++)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#626: FILE: block/elevator-fq.h:799:
+	for (i=0; i<2; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#626: FILE: block/elevator-fq.h:799:
+	for (i=0; i<2; i++)
 	           ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000130868.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 13 errors, 17 warnings, 12 checks, 564 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000130868.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
