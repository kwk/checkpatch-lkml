WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
v2: reserve_early kva ram area, in case there are holes in highmem, to avoid

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#70: FILE: arch/x86/mm/discontig_32.c:255:
+		node_kva_target = round_down(node_end_pfn[nid] - size,
 						 PTRS_PER_PTE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#76: FILE: arch/x86/mm/discontig_32.c:259:
+			node_kva_final = find_e820_area(node_kva_target,
 					((u64)node_end_pfn[nid])<<PAGE_SHIFT,

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#84: FILE: arch/x86/mm/discontig_32.c:264:
+			 (node_kva_target>>PAGE_SHIFT) > (node_start_pfn[nid]));
 			                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#97: FILE: arch/x86/mm/discontig_32.c:272:
+		printk("Reserving %ld pages of KVA for lmem_map of node %d at %llx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#98: FILE: arch/x86/mm/discontig_32.c:273:
+		printk("Reserving %ld pages of KVA for lmem_map of node %d at %llx\n",
+				size, nid, node_kva_final>>PAGE_SHIFT);

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#98: FILE: arch/x86/mm/discontig_32.c:273:
+				size, nid, node_kva_final>>PAGE_SHIFT);
 				                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#120: FILE: arch/x86/mm/discontig_32.c:287:
+			      node_kva_final+(((u64)size)<<PAGE_SHIFT),
 			                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#120: FILE: arch/x86/mm/discontig_32.c:287:
+			      node_kva_final+(((u64)size)<<PAGE_SHIFT),
 			                                 ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#123: FILE: arch/x86/mm/discontig_32.c:290:
+		node_remap_start_pfn[nid] = node_kva_final>>PAGE_SHIFT;
 		                                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#125: FILE: arch/x86/mm/discontig_32.c:292:
+		remove_active_range(nid, node_remap_start_pfn[nid],
+					 node_remap_start_pfn[nid] + size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#138: FILE: include/linux/mm.h:1001:
+extern void remove_active_range(unsigned int nid, unsigned long start_pfn,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#139: FILE: include/linux/mm.h:1002:
+extern void remove_active_range(unsigned int nid, unsigned long start_pfn,
+					unsigned long end_pfn);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#170: FILE: mm/page_alloc.c:3581:
+	printk(KERN_DEBUG "remove_active_range (%d, %lu, %lu)\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'remove_active_range', this function's name, in a string
#170: FILE: mm/page_alloc.c:3581:
+	printk(KERN_DEBUG "remove_active_range (%d, %lu, %lu)\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#171: FILE: mm/page_alloc.c:3582:
+	printk(KERN_DEBUG "remove_active_range (%d, %lu, %lu)\n",
+			  nid, start_pfn, end_pfn);

WARNING:LINE_SPACING: Missing a blank line after declarations
#189: FILE: mm/page_alloc.c:3597:
+			unsigned long temp_end_pfn = early_node_map[i].end_pfn;
+			early_node_map[i].end_pfn = start_pfn;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000267470.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 12 checks, 136 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000267470.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
