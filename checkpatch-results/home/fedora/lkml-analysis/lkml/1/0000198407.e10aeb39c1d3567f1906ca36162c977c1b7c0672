CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#35: 
On Thu, Nov 27, 2008 at 03:23:14PM +0200, Török Edwin wrote:
                                           ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#37: 
> > On Thu, Nov 27, 2008 at 03:10:20PM +0200, Török Edwin wrote:
                                               ^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
> > No not at all. It's always really useful to hear any problems like this.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#77: FILE: include/asm-generic/rwsem-xadd.h:1:
+#ifndef _ASM_GENERIC_RWSEM_XADD_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#98: FILE: include/asm-generic/rwsem-xadd.h:22:
+#include <asm/atomic.h>

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#133: FILE: include/asm-generic/rwsem-xadd.h:57:
+	spinlock_t		wait_lock;

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#141: FILE: include/asm-generic/rwsem-xadd.h:65:
+# define __RWSEM_DEP_MAP_INIT(lockname) , .dep_map = { .name = #lockname }
                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#146: FILE: include/asm-generic/rwsem-xadd.h:70:
+#define __RWSEM_INITIALIZER(name) \
+	{ .count = ATOMIC_LONG_INIT(RWSEM_UNLOCKED_VALUE),	\
+	  .wait_lock = __SPIN_LOCK_UNLOCKED((name).wait_lock),	\
+	  .wait_list = LIST_HEAD_INIT((name).wait_list)		\
+	  __RWSEM_DEP_MAP_INIT(name) }

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#152: FILE: include/asm-generic/rwsem-xadd.h:76:
+#define DECLARE_RWSEM(name)		\
+	struct rw_semaphore name = __RWSEM_INITIALIZER(name)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#155: FILE: include/asm-generic/rwsem-xadd.h:79:
+extern struct rw_semaphore *rwsem_down_read_failed(struct rw_semaphore *sem);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#156: FILE: include/asm-generic/rwsem-xadd.h:80:
+extern struct rw_semaphore *rwsem_down_write_failed(struct rw_semaphore *sem);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#157: FILE: include/asm-generic/rwsem-xadd.h:81:
+extern struct rw_semaphore *rwsem_wake(struct rw_semaphore *sem);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#158: FILE: include/asm-generic/rwsem-xadd.h:82:
+extern struct rw_semaphore *rwsem_downgrade_wake(struct rw_semaphore *sem);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#160: FILE: include/asm-generic/rwsem-xadd.h:84:
+extern void __init_rwsem(struct rw_semaphore *sem, const char *name,

WARNING:LIKELY_MISUSE: Using unlikely should generally have parentheses around the comparison
#175: FILE: include/asm-generic/rwsem-xadd.h:99:
+	if (unlikely(atomic_long_inc_return(&sem->count)) <= 0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: include/asm-generic/rwsem-xadd.h:109:
+		if (tmp == atomic_long_cmpxchg(&sem->count, tmp,
+				   tmp + RWSEM_ACTIVE_READ_BIAS)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#214: FILE: include/asm-generic/rwsem-xadd.h:138:
+	tmp = atomic_long_cmpxchg(&sem->count, RWSEM_UNLOCKED_VALUE,
+		      RWSEM_ACTIVE_WRITE_BIAS);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#236: FILE: include/asm-generic/rwsem-xadd.h:160:
+	if (unlikely(atomic_long_sub_return(RWSEM_ACTIVE_WRITE_BIAS,
+			      &sem->count) < 0))

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#277: FILE: lib/rwsem.c:14:
+#include <asm/atomic.h>

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#354: FILE: lib/rwsem.c:112:
+		waiter = list_entry(sem->wait_list.next,
 					struct rwsem_waiter, list);

WARNING:LINE_SPACING: Missing a blank line after declarations
#375: FILE: lib/rwsem.c:125:
+		struct task_struct *tsk;
+		waiter = list_entry(wake_list.next, struct rwsem_waiter, list);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MEMORY_BARRIER: memory barrier without comment
#380: FILE: lib/rwsem.c:129:
+		smp_mb();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#406: FILE: lib/rwsem.c:146:
+static struct rw_semaphore * __sched rwsem_down_failed_common(struct rw_semaphore *sem,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#451: FILE: lib/rwsem.c:185:
+struct rw_semaphore __sched *rwsem_down_read_failed(struct rw_semaphore *sem)
                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#466: FILE: lib/rwsem.c:199:
+struct rw_semaphore __sched *rwsem_down_write_failed(struct rw_semaphore *sem)
                             ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000198407.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 7 warnings, 16 checks, 736 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000198407.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
