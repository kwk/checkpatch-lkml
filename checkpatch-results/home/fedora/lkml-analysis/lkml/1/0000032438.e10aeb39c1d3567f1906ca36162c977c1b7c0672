WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
The following changes since commit b8a7f3cd7e8212e5c572178ff3b5a514861036a5:

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id 'b8a7f3cd7e8212e5c572178ff3b5a514861036a5', maybe rebased or not pulled?
#29: 
The following changes since commit b8a7f3cd7e8212e5c572178ff3b5a514861036a5:

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id 'a7a9f439b8380b930a47a0b17b217f87458844f6', maybe rebased or not pulled?
#48: 
commit a7a9f439b8380b930a47a0b17b217f87458844f6

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#71: 
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Do not use whitespace before Acked-by:
#72: 
    Acked-by: Hollis Blanchard <hollisb@us.ibm.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#86: 
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

WARNING:BAD_SIGN_OFF: Duplicate signature
#86: 
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#113: 
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

WARNING:BAD_SIGN_OFF: Duplicate signature
#113: 
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#142: FILE: include/linux/kernel.h:706:
+/* Force a compilation error if condition is true, but also produce a
+   result (of value 0 and type size_t), so the expression can be used

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#144: FILE: include/linux/kernel.h:708:
+   aren't permitted). */

ERROR:SPACING: space required before that '-' (ctx:OxO)
#145: FILE: include/linux/kernel.h:709:
+#define BUILD_BUG_ON_ZERO(e) (sizeof(struct { int:-!!(e); }))
                                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before that '-' (ctx:OxO)
#146: FILE: include/linux/kernel.h:710:
+#define BUILD_BUG_ON_NULL(e) ((void *)sizeof(struct { int:-!!(e); }))
                                                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxO)
#164: FILE: include/linux/kernel.h:728:
+#define BUILD_BUG_ON(condition) ((void)sizeof(char[1 - 2*!!(condition)]))
                                                         ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'condition' - possible side-effects?
#167: FILE: include/linux/kernel.h:731:
+#define BUILD_BUG_ON(condition)					\
+	do {							\
+		((void)sizeof(char[1 - 2*!!(condition)]));	\
+		if (condition) __build_bug_on_failed = 1;	\
+	} while(0)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxO)
#169: FILE: include/linux/kernel.h:733:
+		((void)sizeof(char[1 - 2*!!(condition)]));	\
 		                        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#170: FILE: include/linux/kernel.h:734:
+		if (condition) __build_bug_on_failed = 1;	\

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required before the open parenthesis '('
#171: FILE: include/linux/kernel.h:735:
+	} while(0)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#175: FILE: include/linux/kernel.h:739:
+#define __FUNCTION__ (__func__)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#257: FILE: include/linux/virtio_config.h:115:
+		BUG_ON(fbit >= 32);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000032438.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 13 warnings, 3 checks, 121 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000032438.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
