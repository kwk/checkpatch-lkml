WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
The patch adds kernel parameter intel_iommu=pt to set up pass through mode in

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 15)
#127: FILE: arch/x86/kernel/pci-swiotlb.c:74:
+	if ((!iommu_detected && !no_iommu && max_pfn > MAX_DMA32_PFN) ||
[...]
 	       swiotlb = 1;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#128: FILE: arch/x86/kernel/pci-swiotlb.c:75:
+	if ((!iommu_detected && !no_iommu && max_pfn > MAX_DMA32_PFN) ||
+		iommu_pass_through)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#150: FILE: drivers/pci/dmar.c:545:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#197: FILE: drivers/pci/intel-iommu.c:324:
+			printk(KERN_INFO "Intel-IOMMU: Pass Through enabled\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#253: FILE: drivers/pci/intel-iommu.c:1343:
+static int domain_context_mapping_one(struct dmar_domain *domain, int segment,
+				 u8 bus, u8 devfn, int translation)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#263: FILE: drivers/pci/intel-iommu.c:1358:
+	BUG_ON(translation != CONTEXT_TT_PASS_THROUGH &&

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#264: FILE: drivers/pci/intel-iommu.c:1359:
+	BUG_ON(translation != CONTEXT_TT_PASS_THROUGH &&
+		translation != CONTEXT_TT_MULTI_LEVEL);

CHECK:BRACES: braces {} should be used on all arms of this statement
#280: FILE: drivers/pci/intel-iommu.c:1424:
+	if (likely(translation == CONTEXT_TT_MULTI_LEVEL)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#283: FILE: drivers/pci/intel-iommu.c:1427:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#296: FILE: drivers/pci/intel-iommu.c:1456:
+domain_context_mapping(struct dmar_domain *domain, struct pci_dev *pdev,
+			int translation)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#361: FILE: drivers/pci/intel-iommu.c:1900:
+		ret = domain_context_mapping(domain, pdev,
+						CONTEXT_TT_PASS_THROUGH);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#388: FILE: drivers/pci/intel-iommu.c:1973:
+			printk(KERN_INFO

WARNING:TYPO_SPELLING: 'intialized' may be misspelled - perhaps 'initialized'?
#401: FILE: drivers/pci/intel-iommu.c:2041:
+	 * devices are intialized by pass through translation type.
 	               ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#406: FILE: drivers/pci/intel-iommu.c:2046:
+			printk(KERN_ERR "IOMMU: Pass through init failed.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#462: FILE: drivers/pci/intel-iommu.c:2081:
+					printk(KERN_ERR

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#483: FILE: drivers/pci/intel-iommu.c:2201:
+		ret = domain_context_mapping(domain, pdev,
+						 CONTEXT_TT_MULTI_LEVEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#503: FILE: drivers/pci/intel-iommu.c:2892:
+		printk(KERN_INFO

CHECK:BRACES: Unbalanced braces around else statement
#506: FILE: drivers/pci/intel-iommu.c:2895:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#507: FILE: drivers/pci/intel-iommu.c:2896:
+		printk(KERN_INFO

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#540: FILE: include/linux/dma_remapping.h:27:
+extern int iommu_calculate_max_sagaw(struct intel_iommu *iommu);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#546: FILE: include/linux/dma_remapping.h:33:
 }
+static inline int iommu_calculate_max_sagaw(struct intel_iommu *iommu)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'e' may be better as '(e)' to avoid precedence issues
#561: FILE: include/linux/intel-iommu.h:123:
+#define ecap_pass_through(e)	((e >> 6) & 0x1)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000138764.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 11 warnings, 12 checks, 440 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000138764.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
