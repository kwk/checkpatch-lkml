CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#47: FILE: mm/page_alloc.c:1210:
+		if ((gfp_mask & __GFP_VFALLBACK) &&
+				system_state == SYSTEM_RUNNING)  {

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gfp_t' should also have an identifier name
#48: FILE: mm/page_alloc.c:1211:
+			struct page *vcompound_alloc(gfp_t, int,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#48: FILE: mm/page_alloc.c:1211:
+			struct page *vcompound_alloc(gfp_t, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct zonelist *' should also have an identifier name
#48: FILE: mm/page_alloc.c:1211:
+			struct page *vcompound_alloc(gfp_t, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#48: FILE: mm/page_alloc.c:1211:
+			struct page *vcompound_alloc(gfp_t, int,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#49: FILE: mm/page_alloc.c:1212:
+			struct page *vcompound_alloc(gfp_t, int,
+					struct zonelist *, unsigned long);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#52: FILE: mm/page_alloc.c:1215:
+			page = vcompound_alloc(gfp_mask, order,
+						zonelist, alloc_flags);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#53: FILE: mm/page_alloc.c:1216:
+		} else
[...]
 		page = buffered_rmqueue(zonelist, zone, order, gfp_mask);

CHECK:BRACES: Unbalanced braces around else statement
#53: FILE: mm/page_alloc.c:1216:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000379341.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 4 checks, 33 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000379341.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
