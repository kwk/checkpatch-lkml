WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#83: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#88: FILE: drivers/mtd/maps/vmu-flash.c:1:
+/* vmu-flash.c

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'removeable' may be misspelled - perhaps 'removable'?
#131: FILE: drivers/mtd/maps/vmu-flash.c:44:
+	u32 removeable;
 	    ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#145: FILE: drivers/mtd/maps/vmu-flash.c:58:
+static struct vmu_block *ofs_to_block(unsigned long src_ofs,
+	struct mtd_info *mtd, int partition)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*vblock)...) over kmalloc(sizeof(struct vmu_block)...)
#164: FILE: drivers/mtd/maps/vmu-flash.c:77:
+	vblock = kmalloc(sizeof(struct vmu_block), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#190: FILE: drivers/mtd/maps/vmu-flash.c:103:
+	memcpy(card->blockread, mq->recvbuf->buf + 12,
+		card->blocklen/card->readcnt);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#190: FILE: drivers/mtd/maps/vmu-flash.c:103:
+		card->blocklen/card->readcnt);
 		              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#192: FILE: drivers/mtd/maps/vmu-flash.c:105:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#196: FILE: drivers/mtd/maps/vmu-flash.c:109:
+ * of the driver can access block reads */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#198: FILE: drivers/mtd/maps/vmu-flash.c:111:
+static int maple_vmu_read_block(unsigned int num, unsigned char *buf,
+	struct mtd_info *mtd)

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#219: FILE: drivers/mtd/maps/vmu-flash.c:132:
+		if (!pcache->buffer) {
+			dev_err(&mdev->dev, "VMU at (%d, %d) - read fails due"

WARNING:SPLIT_STRING: quoted string split across lines
#220: FILE: drivers/mtd/maps/vmu-flash.c:133:
+			dev_err(&mdev->dev, "VMU at (%d, %d) - read fails due"
+				" to lack of memory\n", mdev->port,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#228: FILE: drivers/mtd/maps/vmu-flash.c:141:
+	/*
+	* Reads may be phased - again the hardware spec

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: drivers/mtd/maps/vmu-flash.c:150:
+			wait_event_interruptible_timeout(mdev->maple_wait,
+				(mdev->busy == 0), HZ);

WARNING:SPLIT_STRING: quoted string split across lines
#240: FILE: drivers/mtd/maps/vmu-flash.c:153:
+				dev_notice(&mdev->dev, "VMU at (%d, %d)"
+					" is busy\n", mdev->port, mdev->unit);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#247: FILE: drivers/mtd/maps/vmu-flash.c:160:
+		blockread = kmalloc(card->blocklen/card->readcnt, GFP_KERNEL);
 		                                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#256: FILE: drivers/mtd/maps/vmu-flash.c:169:
+		maple_getcond_callback(mdev, vmu_blockread, 0,
+			MAPLE_FUNC_MEMCARD);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#258: FILE: drivers/mtd/maps/vmu-flash.c:171:
+		error = maple_add_packet(mdev, MAPLE_FUNC_MEMCARD,
+				MAPLE_COMMAND_BREAD, 2, &sendbuf);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#260: FILE: drivers/mtd/maps/vmu-flash.c:173:
+		wait = wait_event_interruptible_timeout(mdev->maple_wait,
+			((mdev->busy == 0) || (mdev->busy == 2)), HZ/2);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#260: FILE: drivers/mtd/maps/vmu-flash.c:173:
+			((mdev->busy == 0) || (mdev->busy == 2)), HZ/2);
 			                                            ^

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#262: FILE: drivers/mtd/maps/vmu-flash.c:175:
+		/*
+		* MTD layer does not handle hotplugging well

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mdev->busy == 2'
#266: FILE: drivers/mtd/maps/vmu-flash.c:179:
+		if (error || (mdev->busy == 2)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'wait == 0'
#272: FILE: drivers/mtd/maps/vmu-flash.c:185:
+		if ((wait == 0) || (wait == -ERESTARTSYS)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around mdev->mq->list
#274: FILE: drivers/mtd/maps/vmu-flash.c:187:
+			list_del_init(&(mdev->mq->list));

WARNING:SPLIT_STRING: quoted string split across lines
#279: FILE: drivers/mtd/maps/vmu-flash.c:192:
+				dev_warn(&mdev->dev, "VMU read on (%d, %d)"
+					" interrupted on block 0x%X\n",

WARNING:SPLIT_STRING: quoted string split across lines
#283: FILE: drivers/mtd/maps/vmu-flash.c:196:
+				dev_notice(&mdev->dev, "VMU read on (%d, %d)"
+					" timed out on block 0x%X\n",

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#288: FILE: drivers/mtd/maps/vmu-flash.c:201:
+		memcpy(buf + (card->blocklen/card->readcnt) * x, blockread,
 		                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#289: FILE: drivers/mtd/maps/vmu-flash.c:202:
+		memcpy(buf + (card->blocklen/card->readcnt) * x, blockread,
+			card->blocklen/card->readcnt);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#289: FILE: drivers/mtd/maps/vmu-flash.c:202:
+			card->blocklen/card->readcnt);
 			              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#291: FILE: drivers/mtd/maps/vmu-flash.c:204:
+		memcpy(pcache->buffer + (card->blocklen/card->readcnt) * x,
 		                                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#292: FILE: drivers/mtd/maps/vmu-flash.c:205:
+		memcpy(pcache->buffer + (card->blocklen/card->readcnt) * x,
+			card->blockread, card->blocklen/card->readcnt);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#292: FILE: drivers/mtd/maps/vmu-flash.c:205:
+			card->blockread, card->blocklen/card->readcnt);
 			                               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: drivers/mtd/maps/vmu-flash.c:219:
+static int maple_vmu_write_block(unsigned int num, const unsigned char *buf,
+	struct mtd_info *mtd)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#319: FILE: drivers/mtd/maps/vmu-flash.c:232:
+	phaselen = card->blocklen/card->writecnt;
 	                         ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#330: FILE: drivers/mtd/maps/vmu-flash.c:243:
+		* or 1 second - which ever is longer */

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#330: FILE: drivers/mtd/maps/vmu-flash.c:243:
+		/* wait until the device is not busy doing something else
+		* or 1 second - which ever is longer */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#333: FILE: drivers/mtd/maps/vmu-flash.c:246:
+			wait_event_interruptible_timeout(mdev->maple_wait,
+				(mdev->busy == 0), HZ);

WARNING:SPLIT_STRING: quoted string split across lines
#337: FILE: drivers/mtd/maps/vmu-flash.c:250:
+				dev_notice(&mdev->dev, "VMU write at (%d, %d)"
+					"failed - device is busy\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#345: FILE: drivers/mtd/maps/vmu-flash.c:258:
+		locking = maple_add_packet(mdev, MAPLE_FUNC_MEMCARD,
+			MAPLE_COMMAND_BWRITE, phaselen / 4 + 2, sendbuf);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#347: FILE: drivers/mtd/maps/vmu-flash.c:260:
+		wait = wait_event_interruptible_timeout(mdev->maple_wait,
+			(mdev->busy == 0), HZ/10);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#347: FILE: drivers/mtd/maps/vmu-flash.c:260:
+			(mdev->busy == 0), HZ/10);
 			                     ^

WARNING:SPLIT_STRING: quoted string split across lines
#358: FILE: drivers/mtd/maps/vmu-flash.c:271:
+			dev_warn(&mdev->dev, "Write at (%d, %d) of block"
+				" 0x%X at phase %d failed: could not"

WARNING:SPLIT_STRING: quoted string split across lines
#359: FILE: drivers/mtd/maps/vmu-flash.c:272:
+				" 0x%X at phase %d failed: could not"
+				" communicate with VMU", mdev->port,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around mdev->mq->list
#363: FILE: drivers/mtd/maps/vmu-flash.c:276:
+			list_del_init(&(mdev->mq->list));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#381: FILE: drivers/mtd/maps/vmu-flash.c:294:
+static unsigned char vmu_flash_read_char(unsigned long ofs, int *retval,
+	struct mtd_info *mtd)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#429: FILE: drivers/mtd/maps/vmu-flash.c:342:
+static int vmu_flash_read(struct mtd_info *mtd, loff_t from, size_t len,
+	size_t *retlen,  u_char *buf)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pcache->block == vblock->num'
#459: FILE: drivers/mtd/maps/vmu-flash.c:372:
+		if (pcache->valid &&
+			time_before(jiffies, pcache->jiffies_atc + HZ) &&
+			(pcache->block == vblock->num)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#460: FILE: drivers/mtd/maps/vmu-flash.c:373:
+		if (pcache->valid &&
+			time_before(jiffies, pcache->jiffies_atc + HZ) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#467: FILE: drivers/mtd/maps/vmu-flash.c:380:
+				memcpy(buf + index,
+					pcache->buffer + vblock->ofs,

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#478: FILE: drivers/mtd/maps/vmu-flash.c:391:
+			/*
+			* Not cached so read one byte -

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#498: FILE: drivers/mtd/maps/vmu-flash.c:411:
+static int vmu_flash_write(struct mtd_info *mtd, loff_t to, size_t len,
+	size_t *retlen, const u_char *buf)

CHECK:SPACING: No space is necessary after a cast
#602: FILE: drivers/mtd/maps/vmu-flash.c:515:
+	res = (unsigned short *) (mq->recvbuf->buf);

CHECK:CAMELCASE: Avoid CamelCase: <tempA>
#603: FILE: drivers/mtd/maps/vmu-flash.c:516:
+	card->tempA = res[12];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <tempB>
#604: FILE: drivers/mtd/maps/vmu-flash.c:517:
+	card->tempB = res[6];

WARNING:SPLIT_STRING: quoted string split across lines
#607: FILE: drivers/mtd/maps/vmu-flash.c:520:
+	dev_info(&mdev->dev, "VMU device at partition %d has %d user "
+		"blocks with a root block at %d\n", card->partition,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#623: FILE: drivers/mtd/maps/vmu-flash.c:536:
+	mtd_cur->flags = MTD_WRITEABLE|MTD_NO_ERASE;
 	                              ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*mpart)...) over kmalloc(sizeof(struct mdev_part)...)
#631: FILE: drivers/mtd/maps/vmu-flash.c:544:
+	mpart = kmalloc(sizeof(struct mdev_part), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*pcache)...) over kzalloc(sizeof(struct vmu_cache)...)
#640: FILE: drivers/mtd/maps/vmu-flash.c:553:
+	pcache = kzalloc(sizeof(struct vmu_cache), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#650: FILE: drivers/mtd/maps/vmu-flash.c:563:
+	maple_getcond_callback(mdev, NULL, 0,
+		MAPLE_FUNC_MEMCARD);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#653: FILE: drivers/mtd/maps/vmu-flash.c:566:
+	/*
+	* Set up a recursive call to the (probably theoretical)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#659: FILE: drivers/mtd/maps/vmu-flash.c:572:
+		maple_getcond_callback(mdev, vmu_queryblocks, 0,
+			MAPLE_FUNC_MEMCARD);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#661: FILE: drivers/mtd/maps/vmu-flash.c:574:
+		maple_add_packet(mdev, MAPLE_FUNC_MEMCARD,
+			MAPLE_COMMAND_GETMINFO, 2, &partnum);

WARNING:SPLIT_STRING: quoted string split across lines
#667: FILE: drivers/mtd/maps/vmu-flash.c:580:
+	dev_err(&mdev->dev, "Could not register maple device at (%d, %d)"
+		"error is 0x%X\n", mdev->port, mdev->unit, error);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#679: FILE: drivers/mtd/maps/vmu-flash.c:592:
+	maple_getcond_callback(mdev, NULL, 0,
+		MAPLE_FUNC_MEMCARD);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#686: FILE: drivers/mtd/maps/vmu-flash.c:599:
+static int __devinit vmu_connect(struct maple_device *mdev)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#696: FILE: drivers/mtd/maps/vmu-flash.c:609:
+	 * using Brian Kernighan's/Peter Wegner's method */

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*card)...) over kmalloc(sizeof(struct memcard)...)
#702: FILE: drivers/mtd/maps/vmu-flash.c:615:
+	card = kmalloc(sizeof(struct memcard), GFP_KERNEL);

WARNING:TYPO_SPELLING: 'removeable' may be misspelled - perhaps 'removable'?
#712: FILE: drivers/mtd/maps/vmu-flash.c:625:
+	card->removeable = basic_flash_data >> 7 & 1;
 	      ^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#717: FILE: drivers/mtd/maps/vmu-flash.c:630:
+	/*
+	* Not sure there are actually any multi-partition devices in the

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*card->parts)...) over kmalloc(sizeof(struct vmupart)...)
#720: FILE: drivers/mtd/maps/vmu-flash.c:633:
+	card->parts = kmalloc(sizeof(struct vmupart) * card->partitions,

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#720: FILE: drivers/mtd/maps/vmu-flash.c:633:
+	card->parts = kmalloc(sizeof(struct vmupart) * card->partitions,
+		GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#721: FILE: drivers/mtd/maps/vmu-flash.c:634:
+	card->parts = kmalloc(sizeof(struct vmupart) * card->partitions,
+		GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*card->mtd)...) over kmalloc(sizeof(struct mtd_info)...)
#727: FILE: drivers/mtd/maps/vmu-flash.c:640:
+	card->mtd = kmalloc(sizeof(struct mtd_info) * card->partitions,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#728: FILE: drivers/mtd/maps/vmu-flash.c:641:
+	card->mtd = kmalloc(sizeof(struct mtd_info) * card->partitions,
+		GFP_KERNEL);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#737: FILE: drivers/mtd/maps/vmu-flash.c:650:
+	/*
+	* We want to trap meminfo not get cond

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#742: FILE: drivers/mtd/maps/vmu-flash.c:655:
+	maple_getcond_callback(mdev, vmu_queryblocks, 0,
+		MAPLE_FUNC_MEMCARD);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#747: FILE: drivers/mtd/maps/vmu-flash.c:660:
+		wait_event_interruptible_timeout(mdev->maple_wait,
+			(mdev->busy == 0), HZ);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#750: FILE: drivers/mtd/maps/vmu-flash.c:663:
+			dev_notice(&mdev->dev, "VMU at (%d, %d) is busy\n",
+				mdev->port, mdev->unit);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#759: FILE: drivers/mtd/maps/vmu-flash.c:672:
+	/*
+	* Set up the minfo call: vmu_queryblocks will handle

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#763: FILE: drivers/mtd/maps/vmu-flash.c:676:
+	error = maple_add_packet(mdev, MAPLE_FUNC_MEMCARD,
+		MAPLE_COMMAND_GETMINFO, 2, &partnum);

WARNING:SPLIT_STRING: quoted string split across lines
#766: FILE: drivers/mtd/maps/vmu-flash.c:679:
+		dev_err(&mdev->dev, "Could not lock VMU at (%d, %d)"
+			" error is 0x%X\n", mdev->port, mdev->unit, error);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#781: FILE: drivers/mtd/maps/vmu-flash.c:694:
+static void __devexit vmu_disconnect(struct maple_device *mdev)

WARNING:TYPO_SPELLING: 'flakyness' may be misspelled - perhaps 'flakiness'?
#801: FILE: drivers/mtd/maps/vmu-flash.c:714:
+ * and general flakyness of Dreamcast VMUs
                ^^^^^^^^^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#825: FILE: drivers/mtd/maps/vmu-flash.c:738:
+	switch (error) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#828: FILE: drivers/mtd/maps/vmu-flash.c:741:
+		dev_notice(&mdev->dev, ERRSTR " invalid partition number\n",
+			mdev->port, mdev->unit);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#833: FILE: drivers/mtd/maps/vmu-flash.c:746:
+		dev_notice(&mdev->dev, ERRSTR " phase error\n",
+			mdev->port, mdev->unit);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#838: FILE: drivers/mtd/maps/vmu-flash.c:751:
+		dev_notice(&mdev->dev, ERRSTR " invalid block number\n",
+			mdev->port, mdev->unit);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#843: FILE: drivers/mtd/maps/vmu-flash.c:756:
+		dev_notice(&mdev->dev, ERRSTR " write error\n",
+			mdev->port, mdev->unit);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#848: FILE: drivers/mtd/maps/vmu-flash.c:761:
+		dev_notice(&mdev->dev, ERRSTR " invalid write length\n",
+			mdev->port, mdev->unit);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#853: FILE: drivers/mtd/maps/vmu-flash.c:766:
+		dev_notice(&mdev->dev, ERRSTR " bad CRC\n",
+			mdev->port, mdev->unit);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#858: FILE: drivers/mtd/maps/vmu-flash.c:771:
+		dev_notice(&mdev->dev, ERRSTR " 0x%X\n",
+			mdev->port, mdev->unit, error);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#862: FILE: drivers/mtd/maps/vmu-flash.c:775:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#863: FILE: drivers/mtd/maps/vmu-flash.c:776:
+static int __devinit probe_maple_vmu(struct device *dev)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#880: FILE: drivers/mtd/maps/vmu-flash.c:793:
+static int __devexit remove_maple_vmu(struct device *dev)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#893: FILE: drivers/mtd/maps/vmu-flash.c:806:
+^I^I.remove = ^I__devexit_p(remove_maple_vmu),$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000172497.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 33 warnings, 62 checks, 846 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000172497.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
