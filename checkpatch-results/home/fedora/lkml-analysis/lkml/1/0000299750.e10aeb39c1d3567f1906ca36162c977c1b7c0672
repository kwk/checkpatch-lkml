WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
1. Release rcu_read_lock() after acquiring task_lock(). Also get a reference

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#103: FILE: include/linux/cgroup.h:307:
+	void (*mm_owner_changed)(struct cgroup_subsys *ss,
+					struct cgroup *old,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#158: FILE: include/linux/memcontrol.h:48:
+extern struct mem_cgroup *mem_cgroup_from_task(struct task_struct *p);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#213: FILE: include/linux/sched.h:2148:
+extern void mm_update_next_owner(struct mm_struct *mm);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#214: FILE: include/linux/sched.h:2149:
+extern void mm_init_owner(struct mm_struct *mm, struct task_struct *p);

WARNING:LINE_SPACING: Missing a blank line after declarations
#302: FILE: kernel/cgroup.c:2741:
+		int i;
+		for (i = 0; i < CGROUP_SUBSYS_COUNT; i++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#304: FILE: kernel/cgroup.c:2743:
+			struct cgroup_subsys *ss = subsys[i];
+			oldcgrp = task_cgroup(old, ss->subsys_id);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#377: FILE: kernel/exit.c:632:
+	BUG_ON(c == p);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:CODE_INDENT: code indent should use tabs where possible
#385: FILE: kernel/exit.c:640:
+ ^I * Delay rcu_read_unlock() till we have the task_lock()$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#385: FILE: kernel/exit.c:640:
+ ^I * Delay rcu_read_unlock() till we have the task_lock()$

ERROR:CODE_INDENT: code indent should use tabs where possible
#386: FILE: kernel/exit.c:641:
+ ^I * to ensure that c does not slip away underneath us$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#386: FILE: kernel/exit.c:641:
+ ^I * to ensure that c does not slip away underneath us$

ERROR:CODE_INDENT: code indent should use tabs where possible
#387: FILE: kernel/exit.c:642:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#387: FILE: kernel/exit.c:642:
+ ^I */$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#488: FILE: mm/memcontrol.c:467:
+	BUG_ON(!mem_cont);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000299750.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 8 warnings, 4 checks, 377 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000299750.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
