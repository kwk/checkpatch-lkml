WARNING:BAD_SIGN_OFF: Non-standard signature: 'Sigend-off-by:' - perhaps 'Signed-off-by:'?
#36: 
Sigend-off-by: Jeff Dike <jdike@c2.user-mode-linux.org>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#52: FILE: include/linux/netdevice.h:488:
+#if defined(CONFIG_VHOST_PASSTHRU) || defined(CONFIG_VHOST_PASSTHRU_MODULE)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#57: FILE: include/linux/netdevice.h:493:
+	unsigned	flags;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mpassthru_port *' should also have an identifier name
#59: FILE: include/linux/netdevice.h:495:
+	struct skb_user_page	*(*ctor)(struct mpassthru_port *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sk_buff *' should also have an identifier name
#59: FILE: include/linux/netdevice.h:495:
+	struct skb_user_page	*(*ctor)(struct mpassthru_port *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#59: FILE: include/linux/netdevice.h:495:
+	struct skb_user_page	*(*ctor)(struct mpassthru_port *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#60: FILE: include/linux/netdevice.h:496:
+	struct skb_user_page	*(*ctor)(struct mpassthru_port *,
+				struct sk_buff *, int);

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#70: FILE: include/linux/netdevice.h:650:
+#if defined(CONFIG_VHOST_PASSTHRU) || defined(CONFIG_VHOST_PASSTHRU_MODULE)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#72: FILE: include/linux/netdevice.h:652:
+	int			(*ndo_mp_port_prep)(struct net_device *dev,
+						struct mpassthru_port *port);

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#93: FILE: include/linux/netdevice.h:2033:
+#if defined(CONFIG_VHOST_PASSTHRU) || defined(CONFIG_VHOST_PASSTHRU_MODULE)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#95: FILE: include/linux/netdevice.h:2035:
+static inline int netdev_mp_port_prep(struct net_device *dev,
+		struct mpassthru_port *port)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#118: FILE: include/linux/netdevice.h:2058:
+	if (npages <= 0 || npages > MAX_SKB_FRAGS ||
+			(data_len < PAGE_SIZE * (npages - 1) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#130: FILE: include/linux/netdevice.h:2070:
+static inline int netdev_mp_port_attach(struct net_device *dev,
+		struct mpassthru_port *port)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct skb_user_page *' should also have an identifier name
#164: FILE: include/linux/skbuff.h:217:
+	void		(*dtor)(struct skb_user_page *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#195: FILE: include/linux/skbuff.h:1520:
+extern struct skb_user_page *netdev_alloc_user_pages(struct net_device *dev,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#196: FILE: include/linux/skbuff.h:1521:
+extern struct skb_user_page *netdev_alloc_user_pages(struct net_device *dev,
+			struct sk_buff *skb, int npages);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#198: FILE: include/linux/skbuff.h:1523:
+static inline struct skb_user_page *netdev_alloc_user_page(

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#222: FILE: net/core/dev.c:2268:
+#if defined(CONFIG_VHOST_PASSTHRU) || defined(CONFIG_VHOST_PASSTHRU_MODULE)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#224: FILE: net/core/dev.c:2270:
+static inline struct sk_buff *handle_mpassthru(struct sk_buff *skb,
+					struct packet_type **pt_prev,

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#263: FILE: net/core/dev.c:2485:
+#if defined(CONFIG_VHOST_PASSTHRU) || defined(CONFIG_VHOST_PASSTHRU_MODULE)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#287: FILE: net/core/skbuff.c:179:
+#if defined(CONFIG_VHOST_PASSTHRU) || defined(CONFIG_VHOST_PASSTHRU_MODULE)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#299: FILE: net/core/skbuff.c:190:
+#if defined(CONFIG_VHOST_PASSTHRU) || defined(CONFIG_VHOST_PASSTHRU_MODULE)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#302: FILE: net/core/skbuff.c:193:
+		data = kmalloc_node_track_caller(

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#305: FILE: net/core/skbuff.c:196:
+#if defined(CONFIG_VHOST_PASSTHRU) || defined(CONFIG_VHOST_PASSTHRU_MODULE)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#309: FILE: net/core/skbuff.c:200:
+			data = kmalloc_node_track_caller(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#312: FILE: net/core/skbuff.c:203:
+			printk(KERN_INFO "can't alloc user buffer.\n");

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#326: FILE: net/core/skbuff.c:231:
+#if defined(CONFIG_VHOST_PASSTHRU) || defined(CONFIG_VHOST_PASSTHRU_MODULE)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#329: FILE: net/core/skbuff.c:234:
+		memcpy(user->ushinfo, skb_shinfo(skb),
+				sizeof(struct skb_shared_info));

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#338: FILE: net/core/skbuff.c:259:
+#if defined(CONFIG_VHOST_PASSTHRU) || defined(CONFIG_VHOST_PASSTHRU_MODULE)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#358: FILE: net/core/skbuff.c:310:
+#if defined(CONFIG_VHOST_PASSTHRU) || defined(CONFIG_VHOST_PASSTHRU_MODULE)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#360: FILE: net/core/skbuff.c:312:
+struct skb_user_page *netdev_alloc_user_pages(struct net_device *dev,
+			struct sk_buff *skb, int npages)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#370: FILE: net/core/skbuff.c:322:
+	BUG_ON(npages > ctor->npages);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#388: FILE: net/core/skbuff.c:393:
+#if defined(CONFIG_VHOST_PASSTHRU) || defined(CONFIG_VHOST_PASSTHRU_MODULE)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#400: FILE: net/core/skbuff.c:408:
+#if defined(CONFIG_VHOST_PASSTHRU) || defined(CONFIG_VHOST_PASSTHRU_MODULE)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#412: FILE: net/core/skbuff.c:565:
+#if defined(CONFIG_VHOST_PASSTHRU) || defined(CONFIG_VHOST_PASSTHRU_MODULE)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000003428.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 22 warnings, 13 checks, 344 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000003428.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
