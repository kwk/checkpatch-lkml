WARNING:TYPO_SPELLING: 'similiar' may be misspelled - perhaps 'similar'?
#29: 
This patch fixes sysfs exit code for the EDAC PCI device in a similiar
                                                              ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BAD_SIGN_OFF: Use a single space after Cc:
#41: 
Cc:		greg@kroah.com

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Use a single space after Cc:
#42: 
Cc:		Alan Cox <alan@lxorguk.ukuu.org.uk>

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#43: 
Signed-off-by:  Doug Thompson <dougthompson@xmission.com>

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#90: FILE: drivers/edac/edac_pci_sysfs.c:80:
+	debugf0("%s()\n", __func__);

WARNING:SPACING: missing space after return type
#107: FILE: drivers/edac/edac_pci_sysfs.c:94:
+	ssize_t(*show) (struct edac_pci_ctl_info *, char *);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#107: FILE: drivers/edac/edac_pci_sysfs.c:94:
+	ssize_t(*show) (struct edac_pci_ctl_info *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct edac_pci_ctl_info *' should also have an identifier name
#107: FILE: drivers/edac/edac_pci_sysfs.c:94:
+	ssize_t(*show) (struct edac_pci_ctl_info *, char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#107: FILE: drivers/edac/edac_pci_sysfs.c:94:
+	ssize_t(*show) (struct edac_pci_ctl_info *, char *);

WARNING:SPACING: missing space after return type
#108: FILE: drivers/edac/edac_pci_sysfs.c:95:
+	ssize_t(*store) (struct edac_pci_ctl_info *, const char *, size_t);

WARNING:SPACING: Unnecessary space before function pointer arguments
#108: FILE: drivers/edac/edac_pci_sysfs.c:95:
+	ssize_t(*store) (struct edac_pci_ctl_info *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct edac_pci_ctl_info *' should also have an identifier name
#108: FILE: drivers/edac/edac_pci_sysfs.c:95:
+	ssize_t(*store) (struct edac_pci_ctl_info *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#108: FILE: drivers/edac/edac_pci_sysfs.c:95:
+	ssize_t(*store) (struct edac_pci_ctl_info *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#108: FILE: drivers/edac/edac_pci_sysfs.c:95:
+	ssize_t(*store) (struct edac_pci_ctl_info *, const char *, size_t);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#143: FILE: drivers/edac/edac_pci_sysfs.c:163:
+	debugf0("%s()\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#192: FILE: drivers/edac/edac_pci_sysfs.c:208:
+	debugf0("%s()\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#263: FILE: drivers/edac/edac_pci_sysfs.c:351:
+	debugf0("%s()\n", __func__);

WARNING:TYPO_SPELLING: 'atributes' may be misspelled - perhaps 'attributes'?
#270: FILE: drivers/edac/edac_pci_sysfs.c:358:
+	 * controls and atributes
 	                ^^^^^^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'edac_pci_main_kobj_teardown', this function's name, in a string
#440: FILE: drivers/edac/edac_pci_sysfs.c:494:
+	debugf0("%s() calling edac_pci_main_kobj_teardown()\n", __func__);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#456: FILE: drivers/edac/edac_pci_sysfs.c:537:
+	debugf0("%s()\n", __func__);

WARNING:TYPO_SPELLING: 'Fucntion' may be misspelled - perhaps 'Function'?
#465: FILE: drivers/edac/edac_pci_sysfs.c:551:
+ *	Fucntion to retrieve the current parity status
   	^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#586: FILE: drivers/edac/edac_pci_sysfs.c:728:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#637: FILE: drivers/edac/edac_pci.c:48:
+	debugf1("%s()\n", __func__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pci"
#646: FILE: drivers/edac/edac_pci.c:56:
+	if (pci  == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'informaton' may be misspelled - perhaps 'information'?
#669: FILE: drivers/edac/edac_pci.c:76:
+ *	call the remove sysfs informaton, which will unregister
   	                      ^^^^^^^^^^

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#678: FILE: drivers/edac/edac_pci.c:83:
+	debugf1("%s()\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#696: FILE: drivers/edac/edac_pci.c:100:
+	debugf1("%s()\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#704: FILE: drivers/edac/edac_pci.c:125:
+	debugf1("%s()\n", __func__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rover"
#711: FILE: drivers/edac/edac_pci.c:131:
+	if (unlikely(rover != NULL))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#744: FILE: drivers/edac/edac_pci.c:226:
+ * ^Iperiodic function that performs the operation$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pci->edac_check != NULL'
#766: FILE: drivers/edac/edac_pci.c:243:
+		if ((pci->edac_check != NULL) && edac_pci_get_check_errors())

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pci->edac_check"
#766: FILE: drivers/edac/edac_pci.c:243:
+		if ((pci->edac_check != NULL) && edac_pci_get_check_errors())

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#800: FILE: drivers/edac/edac_pci.c:286:
+	debugf0("%s()\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#818: FILE: drivers/edac/edac_pci.c:303:
+	debugf0("%s()\n", __func__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pci"
#884: FILE: drivers/edac/edac_pci.c:398:
+	if (pci  == NULL) {

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#919: FILE: drivers/edac/edac_pci.c:427:
+	debugf4("%s()\n", __func__);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#974: FILE: drivers/edac/edac_module.h:69:
+extern void edac_pci_remove_sysfs(struct edac_pci_ctl_info *pci);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#975: FILE: drivers/edac/edac_module.h:70:
+extern void edac_pci_handle_pe(struct edac_pci_ctl_info *pci, const char *msg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#976: FILE: drivers/edac/edac_module.h:71:
+extern void edac_pci_handle_npe(struct edac_pci_ctl_info *pci,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000400545.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 30 warnings, 9 checks, 899 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000400545.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
