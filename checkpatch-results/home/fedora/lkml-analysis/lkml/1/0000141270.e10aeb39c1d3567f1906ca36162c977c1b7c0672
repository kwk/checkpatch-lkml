WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
->last_pid is visible though /proc/loadavg, so it needs to be dumped too, sigh.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#134: FILE: include/linux/pid.h:122:
+extern struct pid *alloc_pid(struct pid_namespace *ns, int *cr_nr, unsigned int cr_level);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:BRACES: braces {} should be used on all arms of this statement
#216: FILE: kernel/cr/cr-file.c:113:
+	if (file->f_owner.pid) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#219: FILE: kernel/cr/cr-file.c:116:
+	} else

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#266: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#270: FILE: kernel/cr/cr-pid.c:1:
+/* Copyright (C) 2000-2009 Parallels Holdings, Ltd. */

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#300: FILE: kernel/cr/cr-pid.c:31:
+	printk("collect pid_ns %p: rv %d\n", pid_ns, rv);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#331: FILE: kernel/cr/cr-pid.c:62:
+	printk("dump pid_ns %p\n", pid_ns);

CHECK:BRACES: braces {} should be used on all arms of this statement
#338: FILE: kernel/cr/cr-pid.c:69:
+	if (pid_ns == ctx->cr_init_tsk->nsproxy->pid_ns)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#340: FILE: kernel/cr/cr-pid.c:71:
+	else {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*i)...) over kzalloc(sizeof(struct cr_image_pid_ns)...)
#395: FILE: kernel/cr/cr-pid.c:126:
+	i = kzalloc(sizeof(struct cr_image_pid_ns), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:BRACES: braces {} should be used on all arms of this statement
#408: FILE: kernel/cr/cr-pid.c:139:
+	if (i->cr_pos_parent != CR_POS_UNDEF) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#418: FILE: kernel/cr/cr-pid.c:149:
+	} else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#445: FILE: kernel/cr/cr-pid.c:176:
+	printk("restore pid_ns %p, pos %lld\n", pid_ns, (long long)pos);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#454: FILE: kernel/cr/cr-pid.c:185:
+	printk("collect pid %p: rv %d\n", pid, rv);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#471: FILE: kernel/cr/cr-pid.c:202:
+		BUG_ON(pid->level < level0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#511: FILE: kernel/cr/cr-pid.c:242:
+	printk("dump pid %p\n", pid);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#514: FILE: kernel/cr/cr-pid.c:245:
+	BUG_ON(pid->level < level0);

WARNING:KREALLOC_ARG_REUSE: Reusing the krealloc arg is almost always a bug
#570: FILE: kernel/cr/cr-pid.c:301:
+	i = krealloc(i, image_len, GFP_KERNEL);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#604: FILE: kernel/cr/cr-pid.c:335:
+	printk("restore pid %p, pos %lld\n", pid, (long long)pos);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#626: FILE: kernel/cr/cr-pid.c:357:
+		tsk->pid = tsk->tgid = pid_nr(pid);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#734: FILE: kernel/pid.c:192:
+	map = &pid_ns->pidmap[pid/BITS_PER_PAGE];
 	                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000141270.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 12 warnings, 10 checks, 683 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000141270.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
