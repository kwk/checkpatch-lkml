WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#29: 
It allows attaching upto 16 leds which can either be on, off
                    ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'usefull' may be misspelled - perhaps 'useful'?
#35: 
usefull when platform data is passed to the driver to define
^^^^^^^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#56: FILE: drivers/leds/Kconfig:106:
+config LEDS_PCA9532
+	tristate "LED driver for PCA9532 dimmer"
+	depends on LEDS_CLASS && I2C && INPUT && EXPERIMENTAL
+	help
+	  This option enables support for NXP pca9532
+	  led controller. It is generally only usefull
+	  as a platform driver
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:TYPO_SPELLING: 'usefull' may be misspelled - perhaps 'useful'?
#61: FILE: drivers/leds/Kconfig:111:
+	  led controller. It is generally only usefull
 	                                       ^^^^^^^

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#80: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#85: FILE: drivers/leds/leds-pca9532.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#108: FILE: drivers/leds/leds-pca9532.c:24:
+#define PCA9532_REG_PSC(i) (0x2+(i)*2)
                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#108: FILE: drivers/leds/leds-pca9532.c:24:
+#define PCA9532_REG_PSC(i) (0x2+(i)*2)
                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#109: FILE: drivers/leds/leds-pca9532.c:25:
+#define PCA9532_REG_PWM(i) (0x3+(i)*2)
                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#109: FILE: drivers/leds/leds-pca9532.c:25:
+#define PCA9532_REG_PWM(i) (0x3+(i)*2)
                                    ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#111: FILE: drivers/leds/leds-pca9532.c:27:
+#define LED_REG(led) ((led>>2)+PCA9532_REG_LS0)
                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#111: FILE: drivers/leds/leds-pca9532.c:27:
+#define LED_REG(led) ((led>>2)+PCA9532_REG_LS0)
                               ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'led' may be better as '(led)' to avoid precedence issues
#111: FILE: drivers/leds/leds-pca9532.c:27:
+#define LED_REG(led) ((led>>2)+PCA9532_REG_LS0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'led' may be better as '(led)' to avoid precedence issues
#112: FILE: drivers/leds/leds-pca9532.c:28:
+#define LED_NUM(led) (led & 0x3)

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#119: FILE: drivers/leds/leds-pca9532.c:35:
+	struct mutex update_lock;

WARNING:TYPO_SPELLING: 'Additionaly' may be misspelled - perhaps 'Additionally'?
#136: FILE: drivers/leds/leds-pca9532.c:52:
+/* We have two pwm/blinkers, but 16 possible leds to drive. Additionaly,
                                                             ^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#140: FILE: drivers/leds/leds-pca9532.c:56:
+ * */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#142: FILE: drivers/leds/leds-pca9532.c:58:
+static int pca9532_setpwm(struct i2c_client *client, int pwm, int blink,
+	enum led_brightness value)

WARNING:LINE_SPACING: Missing a blank line after declarations
#146: FILE: drivers/leds/leds-pca9532.c:62:
+	struct pca9532_data *data = i2c_get_clientdata(client);
+	for (i = 0; i < 16; i++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#147: FILE: drivers/leds/leds-pca9532.c:63:
+		if (data->leds[i].type == PCA9532_TYPE_LED &&
[...]
+				a++;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#148: FILE: drivers/leds/leds-pca9532.c:64:
+		if (data->leds[i].type == PCA9532_TYPE_LED &&
+			data->leds[i].state == PCA9532_PWM0+pwm) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#148: FILE: drivers/leds/leds-pca9532.c:64:
+			data->leds[i].state == PCA9532_PWM0+pwm) {
 			                                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#155: FILE: drivers/leds/leds-pca9532.c:71:
+		dev_err(&client->dev,
+		"fear of division by zero %d/%d, wanted %d\n",

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#159: FILE: drivers/leds/leds-pca9532.c:75:
+	b = b/a;
 	     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#165: FILE: drivers/leds/leds-pca9532.c:81:
+	i2c_smbus_write_byte_data(client, PCA9532_REG_PWM(pwm),
+		data->pwm[pwm]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#168: FILE: drivers/leds/leds-pca9532.c:84:
+	i2c_smbus_write_byte_data(client, PCA9532_REG_PSC(pwm),
+		data->psc[pwm]);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#183: FILE: drivers/leds/leds-pca9532.c:99:
+	reg = reg & ~(0x3<<LED_NUM(led->id)*2);
 	                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#183: FILE: drivers/leds/leds-pca9532.c:99:
+	reg = reg & ~(0x3<<LED_NUM(led->id)*2);
 	                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#185: FILE: drivers/leds/leds-pca9532.c:101:
+	reg = reg | (led->state << LED_NUM(led->id)*2);
 	                                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#191: FILE: drivers/leds/leds-pca9532.c:107:
+static void pca9532_set_brightness(struct led_classdev *led_cdev,
+	enum led_brightness value)

CHECK:BRACES: braces {} should be used on all arms of this statement
#196: FILE: drivers/leds/leds-pca9532.c:112:
+	if (value == LED_OFF)
[...]
+	else if (value == LED_FULL)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#200: FILE: drivers/leds/leds-pca9532.c:116:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#210: FILE: drivers/leds/leds-pca9532.c:126:
+static int pca9532_set_blink(struct led_classdev *led_cdev,
+	unsigned long *delay_on, unsigned long *delay_off)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#225: FILE: drivers/leds/leds-pca9532.c:141:
+	psc = (*delay_on * 152-1)/1000;
 	                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#225: FILE: drivers/leds/leds-pca9532.c:141:
+	psc = (*delay_on * 152-1)/1000;
 	                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#230: FILE: drivers/leds/leds-pca9532.c:146:
+int pca9532_event(struct input_dev *dev, unsigned int type, unsigned int code,
+	int value)

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#243: FILE: drivers/leds/leds-pca9532.c:159:
+	dev_info(&dev->dev, "setting beep to %d \n", data->pwm[1]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: drivers/leds/leds-pca9532.c:162:
+	i2c_smbus_write_byte_data(data->client, PCA9532_REG_PWM(1),
+		data->pwm[1]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#253: FILE: drivers/leds/leds-pca9532.c:169:
+static int pca9532_configure(struct i2c_client *client,
+	struct pca9532_data *data, struct pca9532_platform_data *pdata)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#261: FILE: drivers/leds/leds-pca9532.c:177:
+		i2c_smbus_write_byte_data(client, PCA9532_REG_PWM(i),
+			data->pwm[i]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#263: FILE: drivers/leds/leds-pca9532.c:179:
+		i2c_smbus_write_byte_data(client, PCA9532_REG_PSC(i),
+			data->psc[i]);

WARNING:LINE_SPACING: Missing a blank line after declarations
#269: FILE: drivers/leds/leds-pca9532.c:185:
+		struct pca9532_led *pled = &pdata->leds[i];
+		led->client = client;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#283: FILE: drivers/leds/leds-pca9532.c:199:
+			if (led_classdev_register(&client->dev,
+				&led->ldev) < 0)	{

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#292: FILE: drivers/leds/leds-pca9532.c:208:
+			BUG_ON(data->idev);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data->idev"
#296: FILE: drivers/leds/leds-pca9532.c:212:
+			if (data->idev == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "data->idev"
#332: FILE: drivers/leds/leds-pca9532.c:248:
+				if (data->idev != NULL) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#342: FILE: drivers/leds/leds-pca9532.c:258:
+
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#350: FILE: drivers/leds/leds-pca9532.c:266:
+	if (!i2c_check_functionality(client->adapter,
+		I2C_FUNC_SMBUS_BYTE_DATA))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*data)...) over kzalloc(sizeof(struct pca9532_data)...)
#353: FILE: drivers/leds/leds-pca9532.c:269:
+	data = kzalloc(sizeof(struct pca9532_data), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pca9532_pdata"
#362: FILE: drivers/leds/leds-pca9532.c:278:
+	if (pca9532_pdata == NULL)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#368: FILE: drivers/leds/leds-pca9532.c:284:
+
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#374: FILE: drivers/leds/leds-pca9532.c:290:
+	int i;
+	for (i = 0; i < 16; i++)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "data->idev"
#382: FILE: drivers/leds/leds-pca9532.c:298:
+			if (data->idev != NULL) {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#418: FILE: include/linux/leds-pca9532.h:1:
+/*

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000288171.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 15 warnings, 39 checks, 393 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000288171.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
