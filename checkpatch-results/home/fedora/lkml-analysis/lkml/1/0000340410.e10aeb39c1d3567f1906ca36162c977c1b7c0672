CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#75: FILE: fs/udf/balloc.c:472:
+	epos.block = oepos.block = iinfo->i_location;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: Unbalanced braces around else statement
#90: FILE: fs/udf/balloc.c:555:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <i_lenAlloc>
#111: FILE: fs/udf/balloc.c:606:
+					iinfo->i_lenAlloc += adsize;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <i_lenEAttr>
#256: FILE: fs/udf/file.c:54:
+	memcpy(kaddr, iinfo->i_ext.i_data + iinfo->i_lenEAttr, inode->i_size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#284: FILE: fs/udf/file.c:94:
+	memcpy(iinfo->i_ext.i_data + iinfo->i_lenEAttr + offset,
 		kaddr + offset, copied);

CHECK:CAMELCASE: Avoid CamelCase: <i_lenExtents>
#342: FILE: fs/udf/ialloc.c:83:
+	iinfo->i_lenExtents = 0;

CHECK:CAMELCASE: Avoid CamelCase: <partitionReferenceNum>
#349: FILE: fs/udf/ialloc.c:89:
+			      dinfo->i_location.partitionReferenceNum,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#358: FILE: fs/udf/ialloc.c:113:
+		iinfo->i_unique = uniqueID = le64_to_cpu(lvhd->uniqueID);

CHECK:CAMELCASE: Avoid CamelCase: <uniqueID>
#358: FILE: fs/udf/ialloc.c:113:
+		iinfo->i_unique = uniqueID = le64_to_cpu(lvhd->uniqueID);

CHECK:CAMELCASE: Avoid CamelCase: <logicalBlockNum>
#370: FILE: fs/udf/ialloc.c:129:
+	iinfo->i_location.logicalBlockNum = block;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#478: FILE: fs/udf/inode.c:192:
+		memcpy(kaddr, iinfo->i_ext.i_data + iinfo->i_lenEAttr,
+			iinfo->i_lenAlloc);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#563: FILE: fs/udf/inode.c:287:
+	memset(iinfo->i_ext.i_data + iinfo->i_lenEAttr, 0,
+		iinfo->i_lenAlloc);

CHECK:BRACES: braces {} should be used on all arms of this statement
#722: FILE: fs/udf/inode.c:1053:
+			if (iinfo->i_alloc_type == ICBTAG_FLAG_AD_IN_ICB) {
[...]
 			} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#733: FILE: fs/udf/inode.c:1062:
+			memset(iinfo->i_ext.i_data + iinfo->i_lenEAttr + offset,
 				0x00, inode->i_sb->s_blocksize -

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#763: FILE: fs/udf/inode.c:1123:
+		ibh = udf_read_ptagged(inode->i_sb, iinfo->i_location, 1,
 					&ident);

CHECK:CAMELCASE: Avoid CamelCase: <icbTag>
#792: FILE: fs/udf/inode.c:1185:
+	iinfo->i_alloc_type = le16_to_cpu(fe->icbTag.flags) &

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#841: FILE: fs/udf/inode.c:1219:
+		iinfo->i_lenAlloc = le32_to_cpu(

CHECK:CAMELCASE: Avoid CamelCase: <lengthExtendedAttr>
#878: FILE: fs/udf/inode.c:1285:
+		iinfo->i_lenEAttr = le32_to_cpu(fe->lengthExtendedAttr);

CHECK:CAMELCASE: Avoid CamelCase: <lengthAllocDescs>
#879: FILE: fs/udf/inode.c:1286:
+		iinfo->i_lenAlloc = le32_to_cpu(fe->lengthAllocDescs);

CHECK:CAMELCASE: Avoid CamelCase: <fileEntry>
#880: FILE: fs/udf/inode.c:1287:
+		offset = sizeof(struct fileEntry) + iinfo->i_lenEAttr;

WARNING:LINE_SPACING: Missing a blank line after declarations
#929: FILE: fs/udf/inode.c:1389:
+	struct udf_inode_info *iinfo = UDF_I(inode);
+	iinfo->i_ext.i_data = kmalloc(size, GFP_KERNEL);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <extLocation>
#1547: FILE: fs/udf/namei.c:640:
+	cfi.icb.extLocation = cpu_to_lelb(iinfo->i_location);

CHECK:BRACES: Unbalanced braces around else statement
#1706: FILE: fs/udf/namei.c:992:
+	} else

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000340410.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 1 warnings, 22 checks, 1717 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000340410.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
