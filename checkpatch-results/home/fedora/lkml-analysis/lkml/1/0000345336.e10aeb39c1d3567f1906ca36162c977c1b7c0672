WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#139: FILE: drivers/ata/libata-core.c:4451:
+		BUG_ON(i == sg);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#151: FILE: drivers/ata/libata-core.c:4463:
+		BUG_ON(tail->max == 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#188: FILE: drivers/ata/libata-core.c:4483:
+	BUG_ON(!(qc->flags & ATA_QCFLAG_DMAMAP));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#192: FILE: drivers/ata/libata-core.c:4487:
+		BUG_ON(list_empty(&qc->pad_sgent.ring.list));

CHECK:SPACING: No space is necessary after a cast
#248: FILE: drivers/ata/libata-core.c:4542:
+		addr = (u32) sg_dma_address(&sg->sg[i]);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#277: FILE: drivers/ata/libata-core.c:4593:
+		addr = (u32) sg_dma_address(&sg->sg[i]);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#353: FILE: drivers/ata/libata-core.c:4788:
+	BUG_ON(qc->sg->num == 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#354: FILE: drivers/ata/libata-core.c:4789:
+	BUG_ON(sg_virt(&qc->sg->sg[0]) == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sg_virt"
#354: FILE: drivers/ata/libata-core.c:4789:
+	BUG_ON(sg_virt(&qc->sg->sg[0]) == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#553: FILE: drivers/ata/libata-scsi.c:1544:
+			printk("scsi_bufflen = %u, sg_ring num %u/%u len = %u, qc->nbytes = %u\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#559: FILE: drivers/ata/libata-scsi.c:1550:
+		BUG_ON(scsi_bufflen(cmd) != sg_ring_len(scsi_sgring(cmd)));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#560: FILE: drivers/ata/libata-scsi.c:1551:
+		BUG_ON(scsi_bufflen(cmd) != qc->nbytes);

WARNING:LINE_SPACING: Missing a blank line after declarations
#573: FILE: drivers/ata/libata-scsi.c:1616:
+		struct scatterlist *sg = &scsi_sgring(cmd)->sg[0];
+		BUG_ON(scsi_sgring(cmd)->num != 1);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#573: FILE: drivers/ata/libata-scsi.c:1616:
+		BUG_ON(scsi_sgring(cmd)->num != 1);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!qc->sg"
#721: FILE: drivers/ata/sata_nv.c:2002:
+	WARN_ON(qc->sg == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!qc->sg"
#756: FILE: drivers/ata/sata_promise.c:550:
+	WARN_ON(qc->sg == NULL);

CHECK:SPACING: No space is necessary after a cast
#770: FILE: drivers/ata/sata_promise.c:561:
+		addr = (u32) sg_dma_address(&sg->sg[i]);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!qc->sg"
#792: FILE: drivers/ata/sata_qstor.c:293:
+	WARN_ON(qc->sg == NULL);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#908: FILE: include/linux/libata.h:863:
+extern void ata_sg_init(struct ata_queued_cmd *qc, struct sg_ring *sg);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000345336.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 11 warnings, 8 checks, 839 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000345336.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
