WARNING:TYPO_SPELLING: 'completly' may be misspelled - perhaps 'completely'?
#32: 
This patch is a completly rewritten 2D engine. The engine is no longer
                ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'funtion' may be misspelled - perhaps 'function'?
#37: 
good to have a single funtion to deal with this stuff as it allows to
                      ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#67: FILE: drivers/video/via/accel.c:24:
+static int hw_bitblt_1(void __iomem *engine, u8 op, u32 width, u32 height,
+	u8 dst_bpp, u32 dst_addr, u32 dst_pitch, u32 dst_x, u32 dst_y,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#74: FILE: drivers/video/via/accel.c:31:
+		printk(KERN_WARNING "hw_bitblt_1: Invalid operation: %d\n", op);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hw_bitblt_1', this function's name, in a string
#74: FILE: drivers/video/via/accel.c:31:
+		printk(KERN_WARNING "hw_bitblt_1: Invalid operation: %d\n", op);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#89: FILE: drivers/video/via/accel.c:46:
+		printk(KERN_WARNING "hw_bitblt_1: Unsupported bpp %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hw_bitblt_1', this function's name, in a string
#89: FILE: drivers/video/via/accel.c:46:
+		printk(KERN_WARNING "hw_bitblt_1: Unsupported bpp %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#90: FILE: drivers/video/via/accel.c:47:
+		printk(KERN_WARNING "hw_bitblt_1: Unsupported bpp %d\n",
+			dst_bpp);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#97: FILE: drivers/video/via/accel.c:54:
+		if (src_x & (op == VIA_BITBLT_MONO ? 0xFFFF8000 : 0xFFFFF000)
+			|| src_y & 0xFFFFF000) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#98: FILE: drivers/video/via/accel.c:55:
+			printk(KERN_WARNING "hw_bitblt_1: Unsupported source "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hw_bitblt_1', this function's name, in a string
#98: FILE: drivers/video/via/accel.c:55:
+			printk(KERN_WARNING "hw_bitblt_1: Unsupported source "

WARNING:SPLIT_STRING: quoted string split across lines
#99: FILE: drivers/video/via/accel.c:56:
+			printk(KERN_WARNING "hw_bitblt_1: Unsupported source "
+				"x/y %d %d\n", src_x, src_y);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#107: FILE: drivers/video/via/accel.c:64:
+		printk(KERN_WARNING "hw_bitblt_1: Unsupported destination x/y "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hw_bitblt_1', this function's name, in a string
#107: FILE: drivers/video/via/accel.c:64:
+		printk(KERN_WARNING "hw_bitblt_1: Unsupported destination x/y "

WARNING:SPLIT_STRING: quoted string split across lines
#108: FILE: drivers/video/via/accel.c:65:
+		printk(KERN_WARNING "hw_bitblt_1: Unsupported destination x/y "
+			"%d %d\n", dst_x, dst_y);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#115: FILE: drivers/video/via/accel.c:72:
+		printk(KERN_WARNING "hw_bitblt_1: Unsupported width/height "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hw_bitblt_1', this function's name, in a string
#115: FILE: drivers/video/via/accel.c:72:
+		printk(KERN_WARNING "hw_bitblt_1: Unsupported width/height "

WARNING:SPLIT_STRING: quoted string split across lines
#116: FILE: drivers/video/via/accel.c:73:
+		printk(KERN_WARNING "hw_bitblt_1: Unsupported width/height "
+			"%d %d\n", width, height);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#131: FILE: drivers/video/via/accel.c:88:
+			printk(KERN_WARNING "hw_bitblt_1: Unsupported source "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hw_bitblt_1', this function's name, in a string
#131: FILE: drivers/video/via/accel.c:88:
+			printk(KERN_WARNING "hw_bitblt_1: Unsupported source "

WARNING:SPLIT_STRING: quoted string split across lines
#132: FILE: drivers/video/via/accel.c:89:
+			printk(KERN_WARNING "hw_bitblt_1: Unsupported source "
+				"address %X\n", tmp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#140: FILE: drivers/video/via/accel.c:97:
+		printk(KERN_WARNING "hw_bitblt_1: Unsupported destination "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hw_bitblt_1', this function's name, in a string
#140: FILE: drivers/video/via/accel.c:97:
+		printk(KERN_WARNING "hw_bitblt_1: Unsupported destination "

WARNING:SPLIT_STRING: quoted string split across lines
#141: FILE: drivers/video/via/accel.c:98:
+		printk(KERN_WARNING "hw_bitblt_1: Unsupported destination "
+			"address %X\n", dst_addr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#152: FILE: drivers/video/via/accel.c:109:
+		printk(KERN_WARNING "hw_bitblt_1: Unsupported pitch %X %X\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hw_bitblt_1', this function's name, in a string
#152: FILE: drivers/video/via/accel.c:109:
+		printk(KERN_WARNING "hw_bitblt_1: Unsupported pitch %X %X\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: drivers/video/via/accel.c:110:
+		printk(KERN_WARNING "hw_bitblt_1: Unsupported pitch %X %X\n",
+			tmp, dst_pitch);

CHECK:BRACES: braces {} should be used on all arms of this statement
#160: FILE: drivers/video/via/accel.c:117:
+	if (op == VIA_BITBLT_FILL)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#162: FILE: drivers/video/via/accel.c:119:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#186: FILE: drivers/video/via/accel.c:143:
+static int hw_bitblt_2(void __iomem *engine, u8 op, u32 width, u32 height,
+	u8 dst_bpp, u32 dst_addr, u32 dst_pitch, u32 dst_x, u32 dst_y,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#193: FILE: drivers/video/via/accel.c:150:
+		printk(KERN_WARNING "hw_bitblt_2: Invalid operation: %d\n", op);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hw_bitblt_2', this function's name, in a string
#193: FILE: drivers/video/via/accel.c:150:
+		printk(KERN_WARNING "hw_bitblt_2: Invalid operation: %d\n", op);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#208: FILE: drivers/video/via/accel.c:165:
+		printk(KERN_WARNING "hw_bitblt_2: Unsupported bpp %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hw_bitblt_2', this function's name, in a string
#208: FILE: drivers/video/via/accel.c:165:
+		printk(KERN_WARNING "hw_bitblt_2: Unsupported bpp %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#209: FILE: drivers/video/via/accel.c:166:
+		printk(KERN_WARNING "hw_bitblt_2: Unsupported bpp %d\n",
+			dst_bpp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#219: FILE: drivers/video/via/accel.c:176:
+		printk(KERN_WARNING "hw_bitblt_2: Unsupported pitch %X %X\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hw_bitblt_2', this function's name, in a string
#219: FILE: drivers/video/via/accel.c:176:
+		printk(KERN_WARNING "hw_bitblt_2: Unsupported pitch %X %X\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#220: FILE: drivers/video/via/accel.c:177:
+		printk(KERN_WARNING "hw_bitblt_2: Unsupported pitch %X %X\n",
+			tmp, dst_pitch);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#227: FILE: drivers/video/via/accel.c:184:
+		printk(KERN_WARNING "hw_bitblt_2: Unsupported width/height "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hw_bitblt_2', this function's name, in a string
#227: FILE: drivers/video/via/accel.c:184:
+		printk(KERN_WARNING "hw_bitblt_2: Unsupported width/height "

WARNING:SPLIT_STRING: quoted string split across lines
#228: FILE: drivers/video/via/accel.c:185:
+		printk(KERN_WARNING "hw_bitblt_2: Unsupported width/height "
+			"%d %d\n", width, height);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#235: FILE: drivers/video/via/accel.c:192:
+		printk(KERN_WARNING "hw_bitblt_2: Unsupported destination x/y "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hw_bitblt_2', this function's name, in a string
#235: FILE: drivers/video/via/accel.c:192:
+		printk(KERN_WARNING "hw_bitblt_2: Unsupported destination x/y "

WARNING:SPLIT_STRING: quoted string split across lines
#236: FILE: drivers/video/via/accel.c:193:
+		printk(KERN_WARNING "hw_bitblt_2: Unsupported destination x/y "
+			"%d %d\n", dst_x, dst_y);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#243: FILE: drivers/video/via/accel.c:200:
+		printk(KERN_WARNING "hw_bitblt_2: Unsupported destination "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hw_bitblt_2', this function's name, in a string
#243: FILE: drivers/video/via/accel.c:200:
+		printk(KERN_WARNING "hw_bitblt_2: Unsupported destination "

WARNING:SPLIT_STRING: quoted string split across lines
#244: FILE: drivers/video/via/accel.c:201:
+		printk(KERN_WARNING "hw_bitblt_2: Unsupported destination "
+			"address %X\n", dst_addr);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#252: FILE: drivers/video/via/accel.c:209:
+		if (src_x & (op == VIA_BITBLT_MONO ? 0xFFFF8000 : 0xFFFFF000)
+			|| src_y & 0xFFFFF000) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#253: FILE: drivers/video/via/accel.c:210:
+			printk(KERN_WARNING "hw_bitblt_2: Unsupported source "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hw_bitblt_2', this function's name, in a string
#253: FILE: drivers/video/via/accel.c:210:
+			printk(KERN_WARNING "hw_bitblt_2: Unsupported source "

WARNING:SPLIT_STRING: quoted string split across lines
#254: FILE: drivers/video/via/accel.c:211:
+			printk(KERN_WARNING "hw_bitblt_2: Unsupported source "
+				"x/y %d %d\n", src_x, src_y);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#262: FILE: drivers/video/via/accel.c:219:
+			printk(KERN_WARNING "hw_bitblt_2: Unsupported source "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hw_bitblt_2', this function's name, in a string
#262: FILE: drivers/video/via/accel.c:219:
+			printk(KERN_WARNING "hw_bitblt_2: Unsupported source "

WARNING:SPLIT_STRING: quoted string split across lines
#263: FILE: drivers/video/via/accel.c:220:
+			printk(KERN_WARNING "hw_bitblt_2: Unsupported source "
+				"address %X\n", tmp);

CHECK:BRACES: braces {} should be used on all arms of this statement
#277: FILE: drivers/video/via/accel.c:234:
+	if (op == VIA_BITBLT_FILL)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#279: FILE: drivers/video/via/accel.c:236:
+	else {

CHECK:CAMELCASE: Avoid CamelCase: <dwVQStartAddr>
#338: FILE: drivers/video/via/accel.c:294:
+	u32 dwVQStartAddr, dwVQEndAddr;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <dwVQEndAddr>
#338: FILE: drivers/video/via/accel.c:294:
+	u32 dwVQStartAddr, dwVQEndAddr;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#543: FILE: drivers/video/via/viafbdev.c:787:
+	if (viapar->shared->hw_bitblt(viapar->io_virt, VIA_BITBLT_FILL,
+		rect->width, rect->height, info->var.bits_per_pixel,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#610: FILE: drivers/video/via/viafbdev.c:808:
+	if (viapar->shared->hw_bitblt(viapar->io_virt, VIA_BITBLT_COLOR,
+		area->width, area->height, info->var.bits_per_pixel,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#629: FILE: drivers/video/via/viafbdev.c:823:
+	if (!viapar->shared->hw_bitblt ||
+		(image->depth != 1 && image->depth != viapar->depth)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#686: FILE: drivers/video/via/viafbdev.c:828:
+	if (image->depth == 1) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#697: FILE: drivers/video/via/viafbdev.c:839:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#702: FILE: drivers/video/via/viafbdev.c:844:
+	if (viapar->shared->hw_bitblt(viapar->io_virt, op,
+		image->width, image->height, info->var.bits_per_pixel,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#739: FILE: drivers/video/via/viafbdev.c:2045:
+		viaparinfo1->depth = fb_get_color_depth(&viafbinfo1->var,
+			&viafbinfo1->fix);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#747: FILE: drivers/video/via/viafbdev.c:2053:
+	viaparinfo->depth = fb_get_color_depth(&viafbinfo->var,
+		&viafbinfo->fix);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#762: FILE: drivers/video/via/viafbdev.h:55:
+	int (*hw_bitblt)(void __iomem *engine, u8 op, u32 width, u32 height,
+		u8 dst_bpp, u32 dst_addr, u32 dst_pitch, u32 dst_x, u32 dst_y,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078145.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 44 warnings, 23 checks, 685 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078145.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
