WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
   git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip.git x86-fixes-for-linus

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#118: FILE: arch/x86/include/asm/efi.h:87:
+extern void __iomem *efi_ioremap(unsigned long addr, unsigned long size,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#406: FILE: arch/x86/kernel/reboot.c:414:
+		printk(KERN_INFO "%s series board detected. "

WARNING:SPLIT_STRING: quoted string split across lines
#407: FILE: arch/x86/kernel/reboot.c:415:
+		printk(KERN_INFO "%s series board detected. "
+		       "Selecting PCI-method for reboots.\n", d->ident);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:MISPLACED_INIT: __initdata should be placed after pci_reboot_dmi_table[]
#412: FILE: arch/x86/kernel/reboot.c:420:
+static struct dmi_system_id __initdata pci_reboot_dmi_table[] = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

CHECK:BRACES: braces {} should be used on all arms of this statement
#535: FILE: arch/x86/mm/pageattr.c:594:
+	if (cpa->flags & CPA_PAGES_ARRAY) {
[...]
+	} else if (cpa->flags & CPA_ARRAY)
[...]
 	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#537: FILE: arch/x86/mm/pageattr.c:596:
+		struct page *page = cpa->pages[cpa->curpage];
+		if (unlikely(PageHighMem(page)))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#551: FILE: arch/x86/mm/pageattr.c:703:
+	if (cpa->flags & CPA_PAGES_ARRAY) {
[...]
+	} else if (cpa->flags & CPA_ARRAY)
[...]
 	else
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#553: FILE: arch/x86/mm/pageattr.c:705:
+		struct page *page = cpa->pages[cpa->curpage];
+		if (unlikely(PageHighMem(page)))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000088761.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 3 checks, 425 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000088761.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
