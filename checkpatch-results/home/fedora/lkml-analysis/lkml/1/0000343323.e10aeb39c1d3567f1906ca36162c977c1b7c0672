WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#322: FILE: drivers/kvm/x86.c:103:
+	unsigned offset = ((cr3 & (PAGE_SIZE-1)) >> 5) << 2;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#322: FILE: drivers/kvm/x86.c:103:
+	unsigned offset = ((cr3 & (PAGE_SIZE-1)) >> 5) << 2;
 	                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#352: FILE: drivers/kvm/x86.c:133:
+		printk(KERN_DEBUG "set_cr0: 0x%lx #GP, reserved bits 0x%lx\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_cr0', this function's name, in a string
#352: FILE: drivers/kvm/x86.c:133:
+		printk(KERN_DEBUG "set_cr0: 0x%lx #GP, reserved bits 0x%lx\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#359: FILE: drivers/kvm/x86.c:140:
+		printk(KERN_DEBUG "set_cr0: #GP, CD == 0 && NW == 1\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_cr0', this function's name, in a string
#359: FILE: drivers/kvm/x86.c:140:
+		printk(KERN_DEBUG "set_cr0: #GP, CD == 0 && NW == 1\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#365: FILE: drivers/kvm/x86.c:146:
+		printk(KERN_DEBUG "set_cr0: #GP, set PG flag "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_cr0', this function's name, in a string
#365: FILE: drivers/kvm/x86.c:146:
+		printk(KERN_DEBUG "set_cr0: #GP, set PG flag "

WARNING:SPLIT_STRING: quoted string split across lines
#366: FILE: drivers/kvm/x86.c:147:
+		printk(KERN_DEBUG "set_cr0: #GP, set PG flag "
+		       "and a clear PE flag\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#377: FILE: drivers/kvm/x86.c:158:
+				printk(KERN_DEBUG "set_cr0: #GP, start paging "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_cr0', this function's name, in a string
#377: FILE: drivers/kvm/x86.c:158:
+				printk(KERN_DEBUG "set_cr0: #GP, start paging "

WARNING:SPLIT_STRING: quoted string split across lines
#378: FILE: drivers/kvm/x86.c:159:
+				printk(KERN_DEBUG "set_cr0: #GP, start paging "
+				       "in long mode while PAE is disabled\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#384: FILE: drivers/kvm/x86.c:165:
+				printk(KERN_DEBUG "set_cr0: #GP, start paging "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_cr0', this function's name, in a string
#384: FILE: drivers/kvm/x86.c:165:
+				printk(KERN_DEBUG "set_cr0: #GP, start paging "

WARNING:SPLIT_STRING: quoted string split across lines
#385: FILE: drivers/kvm/x86.c:166:
+				printk(KERN_DEBUG "set_cr0: #GP, start paging "
+				       "in long mode while CS.L == 1\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#389: FILE: drivers/kvm/x86.c:170:
+
+			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#390: FILE: drivers/kvm/x86.c:171:
+		} else
[...]
+		if (is_pae(vcpu) && !load_pdptrs(vcpu, vcpu->cr3)) {

CHECK:BRACES: Unbalanced braces around else statement
#390: FILE: drivers/kvm/x86.c:171:
+		} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#393: FILE: drivers/kvm/x86.c:174:
+			printk(KERN_DEBUG "set_cr0: #GP, pdptrs "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_cr0', this function's name, in a string
#393: FILE: drivers/kvm/x86.c:174:
+			printk(KERN_DEBUG "set_cr0: #GP, pdptrs "

WARNING:SPLIT_STRING: quoted string split across lines
#394: FILE: drivers/kvm/x86.c:175:
+			printk(KERN_DEBUG "set_cr0: #GP, pdptrs "
+			       "reserved bits\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#399: FILE: drivers/kvm/x86.c:180:
+
+	}

WARNING:RETURN_VOID: void function return statements are not generally useful
#408: FILE: drivers/kvm/x86.c:189:
+	return;
+}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#420: FILE: drivers/kvm/x86.c:201:
+		printk(KERN_DEBUG "set_cr4: #GP, reserved bits\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_cr4', this function's name, in a string
#420: FILE: drivers/kvm/x86.c:201:
+		printk(KERN_DEBUG "set_cr4: #GP, reserved bits\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#427: FILE: drivers/kvm/x86.c:208:
+			printk(KERN_DEBUG "set_cr4: #GP, clearing PAE while "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_cr4', this function's name, in a string
#427: FILE: drivers/kvm/x86.c:208:
+			printk(KERN_DEBUG "set_cr4: #GP, clearing PAE while "

WARNING:SPLIT_STRING: quoted string split across lines
#428: FILE: drivers/kvm/x86.c:209:
+			printk(KERN_DEBUG "set_cr4: #GP, clearing PAE while "
+			       "in long mode\n");

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#433: FILE: drivers/kvm/x86.c:214:
+	} else if (is_paging(vcpu) && !is_pae(vcpu) && (cr4 & X86_CR4_PAE)
+		   && !load_pdptrs(vcpu, vcpu->cr3)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#434: FILE: drivers/kvm/x86.c:215:
+		printk(KERN_DEBUG "set_cr4: #GP, pdptrs reserved bits\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_cr4', this function's name, in a string
#434: FILE: drivers/kvm/x86.c:215:
+		printk(KERN_DEBUG "set_cr4: #GP, pdptrs reserved bits\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#440: FILE: drivers/kvm/x86.c:221:
+		printk(KERN_DEBUG "set_cr4: #GP, setting VMXE\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_cr4', this function's name, in a string
#440: FILE: drivers/kvm/x86.c:221:
+		printk(KERN_DEBUG "set_cr4: #GP, setting VMXE\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#456: FILE: drivers/kvm/x86.c:237:
+			printk(KERN_DEBUG "set_cr3: #GP, reserved bits\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_cr3', this function's name, in a string
#456: FILE: drivers/kvm/x86.c:237:
+			printk(KERN_DEBUG "set_cr3: #GP, reserved bits\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#463: FILE: drivers/kvm/x86.c:244:
+				printk(KERN_DEBUG

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_cr3', this function's name, in a string
#464: FILE: drivers/kvm/x86.c:245:
+				       "set_cr3: #GP, reserved bits\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#469: FILE: drivers/kvm/x86.c:250:
+				printk(KERN_DEBUG "set_cr3: #GP, pdptrs "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_cr3', this function's name, in a string
#469: FILE: drivers/kvm/x86.c:250:
+				printk(KERN_DEBUG "set_cr3: #GP, pdptrs "

WARNING:SPLIT_STRING: quoted string split across lines
#470: FILE: drivers/kvm/x86.c:251:
+				printk(KERN_DEBUG "set_cr3: #GP, pdptrs "
+				       "reserved bits\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#491: FILE: drivers/kvm/x86.c:272:
+	if (unlikely(!gfn_to_memslot(vcpu->kvm, cr3 >> PAGE_SHIFT)))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#493: FILE: drivers/kvm/x86.c:274:
+	else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#504: FILE: drivers/kvm/x86.c:285:
+		printk(KERN_DEBUG "set_cr8: #GP, reserved bits 0x%lx\n", cr8);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_cr8', this function's name, in a string
#504: FILE: drivers/kvm/x86.c:285:
+		printk(KERN_DEBUG "set_cr8: #GP, reserved bits 0x%lx\n", cr8);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000343323.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 37 warnings, 7 checks, 473 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000343323.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
