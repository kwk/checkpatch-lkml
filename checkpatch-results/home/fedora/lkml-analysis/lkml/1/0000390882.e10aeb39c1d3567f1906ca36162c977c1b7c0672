CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'r' may be better as '(r)' to avoid precedence issues
#357: FILE: arch/um/include/sysdep-x86_64/ptrace.h:239:
+#define UPT_SEGV_IS_FIXABLE(r) REGS_SEGV_IS_FIXABLE(&r->skas)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#451: FILE: arch/um/include/um_uaccess.h:30:
+extern int copy_from_user(void *to, const void __user *from, int n);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#452: FILE: arch/um/include/um_uaccess.h:31:
+extern int copy_to_user(void __user *to, const void *from, int n);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#465: FILE: arch/um/include/um_uaccess.h:52:
+extern int strncpy_from_user(char *dst, const char __user *src, int count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#477: FILE: arch/um/include/um_uaccess.h:65:
+extern int __clear_user(void __user *mem, int len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#489: FILE: arch/um/include/um_uaccess.h:77:
+extern int clear_user(void __user *mem, int len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#501: FILE: arch/um/include/um_uaccess.h:90:
+extern int strnlen_user(const void __user *str, int len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#530: FILE: include/asm-um/ptrace-i386.h:61:
+extern int do_get_thread_area_skas(struct user_desc *info);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#531: FILE: include/asm-um/ptrace-i386.h:62:
+extern int do_set_thread_area_skas(struct user_desc *info);

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#892: FILE: arch/um/kernel/um_arch.c:89:
+	seq_printf(m, "mode\t\t: skas\n");

ERROR:SPACING: space required before the open parenthesis '('
#966: FILE: arch/um/os-Linux/main.c:197:
+	if(!kmalloc_ok)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#975: FILE: arch/um/os-Linux/main.c:250:
+		if(kmalloc_ok)

ERROR:SPACING: space required before the open parenthesis '('
#980: FILE: arch/um/os-Linux/main.c:254:
+		if(kmalloc_ok)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1095: FILE: include/asm-um/mmu_context.h:59:
+	return(init_new_context_skas(task, mm));

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1254: FILE: arch/um/kernel/ksyms.c:40:
+EXPORT_SYMBOL(strnlen_user);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1255: FILE: arch/um/kernel/ksyms.c:41:
+EXPORT_SYMBOL(strncpy_from_user);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1256: FILE: arch/um/kernel/ksyms.c:42:
+EXPORT_SYMBOL(copy_to_user);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1257: FILE: arch/um/kernel/ksyms.c:43:
+EXPORT_SYMBOL(copy_from_user);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1258: FILE: arch/um/kernel/ksyms.c:44:
+EXPORT_SYMBOL(clear_user);

CHECK:SPACING: No space is necessary after a cast
#1280: FILE: arch/um/sys-x86_64/syscalls.c:94:
+	return arch_prctl_skas(current, code, (unsigned long __user *) addr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1303: FILE: arch/um/sys-x86_64/signal.c:137:
+       ret = copy_sc_from_user_skas(to, from);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1314: FILE: arch/um/sys-x86_64/signal.c:146:
+       return copy_sc_to_user_skas(to, fp, from, mask, sp);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000390882.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 8 warnings, 10 checks, 982 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000390882.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
