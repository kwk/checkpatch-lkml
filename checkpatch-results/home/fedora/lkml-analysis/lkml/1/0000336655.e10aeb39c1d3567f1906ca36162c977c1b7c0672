WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#100: FILE: drivers/pci/pcie/aspm.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#101: FILE: drivers/pci/pcie/aspm.c:2:
+ * File:	drivers/pci/pcie/aspm.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:TYPO_SPELLING: 'sibiling' may be misspelled - perhaps 'sibling'?
#130: FILE: drivers/pci/pcie/aspm.c:31:
+	struct list_head sibiling;
 	                 ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#164: FILE: drivers/pci/pcie/aspm.c:65:
+static const char* policy_str[] = {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#164: FILE: drivers/pci/pcie/aspm.c:65:
+static const char* policy_str[] = {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#180: FILE: drivers/pci/pcie/aspm.c:81:
+		return PCIE_LINK_STATE_L0S|PCIE_LINK_STATE_L1;
 		                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#270: FILE: drivers/pci/pcie/aspm.c:171:
+	 * */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#272: FILE: drivers/pci/pcie/aspm.c:173:
+	child_dev = list_entry(pdev->subordinate->devices.next, struct pci_dev,
+		bus_list);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#273: FILE: drivers/pci/pcie/aspm.c:174:
+	BUG_ON(!child_dev->is_pcie);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: braces {} should be used on all arms of this statement
#328: FILE: drivers/pci/pcie/aspm.c:229:
+	if (latency_encoding == 0x7) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#332: FILE: drivers/pci/pcie/aspm.c:233:
+			ns = 5*1000; /* > 4us */
 			      ^

CHECK:BRACES: Unbalanced braces around else statement
#333: FILE: drivers/pci/pcie/aspm.c:234:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#345: FILE: drivers/pci/pcie/aspm.c:246:
+	if (latency_encoding == 0x7) {
[...]
+	} else
[...]

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#349: FILE: drivers/pci/pcie/aspm.c:250:
+			ns = 65*1000; /* > 64us */
 			       ^

CHECK:BRACES: Unbalanced braces around else statement
#350: FILE: drivers/pci/pcie/aspm.c:251:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#356: FILE: drivers/pci/pcie/aspm.c:257:
+static void pcie_aspm_get_cap_device(struct pci_dev *pdev, u32 *state,
+	unsigned int *l0s, unsigned int *l1, unsigned int *enabled)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#366: FILE: drivers/pci/pcie/aspm.c:267:
+	if (*state != PCIE_LINK_STATE_L0S && *state != (PCIE_LINK_STATE_L1|PCIE_LINK_STATE_L0S))
 	                                                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#378: FILE: drivers/pci/pcie/aspm.c:279:
+	*enabled = reg16 & (PCIE_LINK_STATE_L0S|PCIE_LINK_STATE_L1);
 	                                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#389: FILE: drivers/pci/pcie/aspm.c:290:
+	pcie_aspm_get_cap_device(pdev, &link_state->support_state,
+		&link_state->l0s_upper_latency,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#394: FILE: drivers/pci/pcie/aspm.c:295:
+	child_dev = list_entry(pdev->subordinate->devices.next, struct pci_dev,
+		bus_list);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#396: FILE: drivers/pci/pcie/aspm.c:297:
+	pcie_aspm_get_cap_device(child_dev, &state,
+		&link_state->l0s_down_latency,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#413: FILE: drivers/pci/pcie/aspm.c:314:
+		if (child_dev->pcie_type != PCI_EXP_TYPE_ENDPOINT &&
+			child_dev->pcie_type != PCI_EXP_TYPE_LEG_END)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#431: FILE: drivers/pci/pcie/aspm.c:332:
+static unsigned int __pcie_aspm_check_state_one(struct pci_dev *pdev,
+	unsigned int state)

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#473: FILE: drivers/pci/pcie/aspm.c:374:
+			break;
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#473: FILE: drivers/pci/pcie/aspm.c:374:
+		else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#491: FILE: drivers/pci/pcie/aspm.c:392:
+static unsigned int pcie_aspm_check_state(struct pci_dev *pdev,
+	unsigned int state)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#503: FILE: drivers/pci/pcie/aspm.c:404:
+			 * */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#508: FILE: drivers/pci/pcie/aspm.c:409:
+		if ((child_dev->pcie_type != PCI_EXP_TYPE_ENDPOINT &&
+			child_dev->pcie_type != PCI_EXP_TYPE_LEG_END) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#513: FILE: drivers/pci/pcie/aspm.c:414:
+		if (child_dev->current_state == PCI_D1 ||
+			child_dev->current_state == PCI_D2 ||

ERROR:SPACING: space required before the open brace '{'
#544: FILE: drivers/pci/pcie/aspm.c:445:
+		if (child_dev->pcie_type == PCI_EXP_TYPE_PCI_BRIDGE){

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#576: FILE: drivers/pci/pcie/aspm.c:477:
+	state &= PCIE_LINK_STATE_L0S|PCIE_LINK_STATE_L1;
 	                            ^

WARNING:TYPO_SPELLING: 'scaned' may be misspelled - perhaps 'scanned'?
#612: FILE: drivers/pci/pcie/aspm.c:513:
+ * It is called after the pcie and its children devices are scaned.
                                                             ^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#626: FILE: drivers/pci/pcie/aspm.c:527:
+	if (pdev->pcie_type != PCI_EXP_TYPE_ROOT_PORT &&
+		pdev->pcie_type != PCI_EXP_TYPE_DOWNSTREAM)

WARNING:TYPO_SPELLING: 'sibiling' may be misspelled - perhaps 'sibling'?
#658: FILE: drivers/pci/pcie/aspm.c:559:
+	list_add(&link_state->sibiling, &link_list);
 	                      ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#677: FILE: drivers/pci/pcie/aspm.c:578:
+	if (parent->pcie_type != PCI_EXP_TYPE_ROOT_PORT &&
+		parent->pcie_type != PCI_EXP_TYPE_DOWNSTREAM)

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#684: FILE: drivers/pci/pcie/aspm.c:585:
+	 * the the whole slot, so just wait

WARNING:TYPO_SPELLING: 'sibiling' may be misspelled - perhaps 'sibling'?
#694: FILE: drivers/pci/pcie/aspm.c:595:
+	list_del(&link_state->sibiling);
 	                      ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#711: FILE: drivers/pci/pcie/aspm.c:612:
+	if (pdev->pcie_type != PCI_EXP_TYPE_ROOT_PORT &&
+		pdev->pcie_type != PCI_EXP_TYPE_DOWNSTREAM)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#740: FILE: drivers/pci/pcie/aspm.c:641:
+	link_state->support_state &= ~(state & (PCIE_LINK_STATE_L0S|PCIE_LINK_STATE_L1));
 	                                                           ^

WARNING:TYPO_SPELLING: 'sibiling' may be misspelled - perhaps 'sibling'?
#769: FILE: drivers/pci/pcie/aspm.c:670:
+	list_for_each_entry(link_state, &link_list, sibiling) {
 	                                            ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#772: FILE: drivers/pci/pcie/aspm.c:673:
+		__pcie_aspm_configure_link_state(pdev,
+			policy_to_aspm_state(pdev));

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#777: FILE: drivers/pci/pcie/aspm.c:678:
+
+	}

WARNING:LINE_SPACING: Missing a blank line after declarations
#786: FILE: drivers/pci/pcie/aspm.c:687:
+	int i, cnt = 0;
+	for (i = 0; i < ARRAY_SIZE(policy_str); i++)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#795: FILE: drivers/pci/pcie/aspm.c:696:
+module_param_call(policy, pcie_aspm_set_policy, pcie_aspm_get_policy,
+	NULL, 0644);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#799: FILE: drivers/pci/pcie/aspm.c:700:
+static ssize_t link_state_show(struct device *dev,
+		struct device_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#809: FILE: drivers/pci/pcie/aspm.c:710:
+static ssize_t link_state_store(struct device *dev,
+		struct device_attribute *attr,

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#818: FILE: drivers/pci/pcie/aspm.c:719:
+	state = buf[0]-'0';
 	              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#829: FILE: drivers/pci/pcie/aspm.c:730:
+static ssize_t clk_ctl_show(struct device *dev,
+		struct device_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#839: FILE: drivers/pci/pcie/aspm.c:740:
+static ssize_t clk_ctl_store(struct device *dev,
+		struct device_attribute *attr,

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#848: FILE: drivers/pci/pcie/aspm.c:749:
+	state = buf[0]-'0';
 	              ^

WARNING:DEVICE_ATTR_RW: Use DEVICE_ATTR_RW
#857: FILE: drivers/pci/pcie/aspm.c:758:
+}

The DEVICE_ATTR_RW(name) helper macro can be used instead of
DEVICE_ATTR(name, 0644, name_show, name_store);

Note that the macro automatically appends _show and _store to the
named attribute variable of the device for the show and store methods.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:DEVICE_ATTR_RW: Use DEVICE_ATTR_RW
#860: FILE: drivers/pci/pcie/aspm.c:761:
+static DEVICE_ATTR(clk_ctl, 0644, clk_ctl_show, clk_ctl_store);

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#862: FILE: drivers/pci/pcie/aspm.c:763:
+static char power_group[] = "power";

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#868: FILE: drivers/pci/pcie/aspm.c:769:
+	if (!pdev->is_pcie || (pdev->pcie_type != PCI_EXP_TYPE_ROOT_PORT &&
+		pdev->pcie_type != PCI_EXP_TYPE_DOWNSTREAM))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#873: FILE: drivers/pci/pcie/aspm.c:774:
+		sysfs_add_file_to_group(&pdev->dev.kobj,
+			&dev_attr_link_state.attr, power_group);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#876: FILE: drivers/pci/pcie/aspm.c:777:
+		sysfs_add_file_to_group(&pdev->dev.kobj,
+			&dev_attr_clk_ctl.attr, power_group);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#884: FILE: drivers/pci/pcie/aspm.c:785:
+	if (!pdev->is_pcie || (pdev->pcie_type != PCI_EXP_TYPE_ROOT_PORT &&
+		pdev->pcie_type != PCI_EXP_TYPE_DOWNSTREAM))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#889: FILE: drivers/pci/pcie/aspm.c:790:
+		sysfs_remove_file_from_group(&pdev->dev.kobj,
+			&dev_attr_link_state.attr, power_group);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#892: FILE: drivers/pci/pcie/aspm.c:793:
+		sysfs_remove_file_from_group(&pdev->dev.kobj,
+			&dev_attr_clk_ctl.attr, power_group);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#902: FILE: drivers/pci/pcie/aspm.c:803:
+__setup("pcie_noaspm", pcie_aspm_disable);

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#908: FILE: drivers/pci/pcie/aspm.c:809:
+	pci_osc_support_set(OSC_ACTIVE_STATE_PWR_SUPPORT|
 	                                                ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#917: FILE: include/linux/aspm.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#942: FILE: include/linux/aspm.h:26:
+extern void pcie_aspm_init_link_state(struct pci_dev *pdev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#943: FILE: include/linux/aspm.h:27:
+extern void pcie_aspm_exit_link_state(struct pci_dev *pdev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#944: FILE: include/linux/aspm.h:28:
+extern void pcie_aspm_pm_state_change(struct pci_dev *pdev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#945: FILE: include/linux/aspm.h:29:
+extern int pcie_aspm_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#946: FILE: include/linux/aspm.h:30:
+extern void pci_disable_link_state(struct pci_dev *pdev, int state);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#956: FILE: include/linux/aspm.h:40:
+extern void pcie_aspm_create_sysfs_dev_files(struct pci_dev *pdev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#957: FILE: include/linux/aspm.h:41:
+extern void pcie_aspm_remove_sysfs_dev_files(struct pci_dev *pdev);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#975: FILE: drivers/pci/pcie/Kconfig:33:
+config PCIEASPM
+	bool "PCI Express ASPM support(Experimental)"
+	depends on PCI && EXPERIMENTAL
+	default y
+	help
+	  This enables PCI Express ASPM (Active State Power Management) and
+	  Clock Power Management. ASPM supports state L0/L0s/L1.
+
+	  When in doubt, say N.

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#984: FILE: drivers/pci/pcie/Kconfig:42:
+config PCIEASPM_DEBUG
+	bool "Debug PCI Express ASPM"
+	depends on PCIEASPM
+	default n
+	help
+	  This enables PCI Express ASPM debug support. It will add per-device
+	  interface to control ASPM.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000336655.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 20 warnings, 49 checks, 1006 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000336655.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
