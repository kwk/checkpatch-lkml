WARNING:SPLIT_STRING: quoted string split across lines
#67: FILE: drivers/serial/8250_kgdb.c:41:
+MODULE_PARM_DESC(kgdb8250, "<io or mmio>,<address>,<baud rate>,<irq> or "
+			   "<port #>,<baud rate>");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:CONST_STRUCT: struct kgdb_io should normally be const
#69: FILE: drivers/serial/8250_kgdb.c:43:
+static struct kgdb_io kgdb8250_io_ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:BRACES: braces {} should be used on all arms of this statement
#223: FILE: drivers/serial/8250_kgdb.c:201:
+	if (!strncmp(str, "io", 2)) {
[...]
+	} else if (!strncmp(str, "mmap", 4)) {
[...]
+	} else if (!strncmp(str, "mmio", 4)) {
[...]
+	} else if (*str >= '0' || *str <= '9') {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#247: FILE: drivers/serial/8250_kgdb.c:225:
+		kgdb8250_baud = simple_strtoul(str, &str, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:BRACES: Unbalanced braces around else statement
#253: FILE: drivers/serial/8250_kgdb.c:231:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#260: FILE: drivers/serial/8250_kgdb.c:238:
+	if (current_port->iotype == UPIO_PORT)
[...]
+	else {
[...]

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#261: FILE: drivers/serial/8250_kgdb.c:239:
+		current_port->iobase = simple_strtoul(str, &str, 16);

CHECK:BRACES: Unbalanced braces around else statement
#262: FILE: drivers/serial/8250_kgdb.c:240:
+	else {

CHECK:SPACING: No space is necessary after a cast
#265: FILE: drivers/serial/8250_kgdb.c:243:
+				(unsigned long) simple_strtoul(str, &str, 16);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#265: FILE: drivers/serial/8250_kgdb.c:243:
+				(unsigned long) simple_strtoul(str, &str, 16);

CHECK:SPACING: No space is necessary after a cast
#268: FILE: drivers/serial/8250_kgdb.c:246:
+				(void *) simple_strtoul(str, &str, 16);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#268: FILE: drivers/serial/8250_kgdb.c:246:
+				(void *) simple_strtoul(str, &str, 16);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#275: FILE: drivers/serial/8250_kgdb.c:253:
+	kgdb8250_baud = simple_strtoul(str, &str, 10);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#283: FILE: drivers/serial/8250_kgdb.c:261:
+	current_port->irq = simple_strtoul(str, &str, 10);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#345: FILE: drivers/serial/8250_kgdb.c:360:
+#endif ^I/* CONFIG_KGD_8250_MODULE */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#365: FILE: drivers/serial/8250_kgdb.c:375:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: drivers/serial/8250_kgdb.c:375:
+ $

WARNING:TYPO_SPELLING: 'existance' may be misspelled - perhaps 'existence'?
#366: FILE: drivers/serial/8250_kgdb.c:376:
+	/* test uart existance */
 	             ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#369: FILE: drivers/serial/8250_kgdb.c:379:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: drivers/serial/8250_kgdb.c:379:
+ $

CHECK:BRACES: braces {} should be used on all arms of this statement
#389: FILE: drivers/serial/8250_kgdb.c:386:
+		if (kgdb8250_baud == 115200) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#393: FILE: drivers/serial/8250_kgdb.c:390:
+		} else

WARNING:REPEATED_WORD: Possible repeated word: 'start'
#431: FILE: drivers/serial/8250_kgdb.c:428:
+	 * already a 1 and maybe locked there before we even start start.

WARNING:CONST_STRUCT: struct kgdb_io should normally be const
#563: FILE: drivers/serial/8250_kgdb.c:485:
+static struct kgdb_io kgdb8250_io_ops = {

WARNING:CONST_STRUCT: struct kgdb_io should normally be const
#599: FILE: drivers/serial/8250_kgdb.c:516:
+struct kgdb_io kgdb_io_ops = {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000329755.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 15 warnings, 8 checks, 547 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000329755.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
