WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#43: FILE: drivers/block/Kconfig:456:
+config XILINX_SYSACE
+	tristate "Xilinx SystemACE support"
+	depends on 4xx
+	help
+	  Include support for the Xilinx SystemACE CompactFlash interface
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#63: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#68: FILE: drivers/block/xsysace.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#281: FILE: drivers/block/xsysace.c:214:
+	u16(*in) (struct ace_device * ace, int reg);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: missing space after return type
#281: FILE: drivers/block/xsysace.c:214:
+	u16(*in) (struct ace_device * ace, int reg);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#281: FILE: drivers/block/xsysace.c:214:
+	u16(*in) (struct ace_device * ace, int reg);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#282: FILE: drivers/block/xsysace.c:215:
+	void (*out) (struct ace_device * ace, int reg, u16 val);

WARNING:SPACING: Unnecessary space before function pointer arguments
#282: FILE: drivers/block/xsysace.c:215:
+	void (*out) (struct ace_device * ace, int reg, u16 val);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#283: FILE: drivers/block/xsysace.c:216:
+	void (*datain) (struct ace_device * ace);

WARNING:SPACING: Unnecessary space before function pointer arguments
#283: FILE: drivers/block/xsysace.c:216:
+	void (*datain) (struct ace_device * ace);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#284: FILE: drivers/block/xsysace.c:217:
+	void (*dataout) (struct ace_device * ace);

WARNING:SPACING: Unnecessary space before function pointer arguments
#284: FILE: drivers/block/xsysace.c:217:
+	void (*dataout) (struct ace_device * ace);

WARNING:LINE_SPACING: Missing a blank line after declarations
#291: FILE: drivers/block/xsysace.c:224:
+	void *r = ace->baseaddr + reg;
+	return in_8(r) | (in_8(r + 1) << 8);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#297: FILE: drivers/block/xsysace.c:230:
+	void *r = ace->baseaddr + reg;
+	out_8(r, val);

WARNING:LINE_SPACING: Missing a blank line after declarations
#306: FILE: drivers/block/xsysace.c:239:
+	int i = ACE_FIFO_SIZE;
+	while (i--)

WARNING:LINE_SPACING: Missing a blank line after declarations
#316: FILE: drivers/block/xsysace.c:249:
+	int i = ACE_FIFO_SIZE;
+	while (i--)

WARNING:LINE_SPACING: Missing a blank line after declarations
#343: FILE: drivers/block/xsysace.c:276:
+	u16 *dst = ace->data_ptr;
+	while (i--)

WARNING:LINE_SPACING: Missing a blank line after declarations
#352: FILE: drivers/block/xsysace.c:285:
+	u16 *src = ace->data_ptr;
+	while (i--)

WARNING:LINE_SPACING: Missing a blank line after declarations
#372: FILE: drivers/block/xsysace.c:305:
+	u16 *dst = ace->data_ptr;
+	while (i--)

WARNING:LINE_SPACING: Missing a blank line after declarations
#381: FILE: drivers/block/xsysace.c:314:
+	u16 *src = ace->data_ptr;
+	while (i--)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#432: FILE: drivers/block/xsysace.c:365:
+		printk(KERN_INFO "%.8x:", i);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#435: FILE: drivers/block/xsysace.c:368:
+				printk(" ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#436: FILE: drivers/block/xsysace.c:369:
+			printk("%.2x", ptr[i + j]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#438: FILE: drivers/block/xsysace.c:371:
+		printk(" ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#440: FILE: drivers/block/xsysace.c:373:
+			printk("%c", isprint(ptr[i + j]) ? ptr[i + j] : '.');

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#441: FILE: drivers/block/xsysace.c:374:
+		printk("\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ace_fsm_yield', this function's name, in a string
#511: FILE: drivers/block/xsysace.c:444:
+	dev_dbg(ace->dev, "ace_fsm_yield()\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ace_fsm_yieldirq', this function's name, in a string
#519: FILE: drivers/block/xsysace.c:452:
+	dev_dbg(ace->dev, "ace_fsm_yieldirq()\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#528: FILE: drivers/block/xsysace.c:461:
+struct request *ace_get_next_request(request_queue_t * q)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#620: FILE: drivers/block/xsysace.c:553:
+		 * transfer to complete */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#660: FILE: drivers/block/xsysace.c:593:
+			/* Error occured, disable the disk */
 			         ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#823: FILE: drivers/block/xsysace.c:756:
+	 * delete the timer) */

WARNING:TYPO_SPELLING: 'occurance' may be misspelled - perhaps 'occurrence'?
#842: FILE: drivers/block/xsysace.c:775:
+	/* Check for error occurance */
 	                   ^^^^^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#895: FILE: drivers/block/xsysace.c:828:
+static void ace_request(request_queue_t * q)

WARNING:LINE_SPACING: Missing a blank line after declarations
#911: FILE: drivers/block/xsysace.c:844:
+	struct ace_device *ace = gd->private_data;
+	dev_dbg(ace->dev, "ace_media_changed(): %i\n", ace->media_change);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ace_media_changed', this function's name, in a string
#911: FILE: drivers/block/xsysace.c:844:
+	dev_dbg(ace->dev, "ace_media_changed(): %i\n", ace->media_change);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ace_revalidate_disk', this function's name, in a string
#921: FILE: drivers/block/xsysace.c:854:
+	dev_dbg(ace->dev, "ace_revalidate_disk()\n");

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#938: FILE: drivers/block/xsysace.c:871:
+static int ace_open(struct inode *inode, struct file *filp)
                                                       ^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ace_open', this function's name, in a string
#943: FILE: drivers/block/xsysace.c:876:
+	dev_dbg(ace->dev, "ace_open() users=%i\n", ace->users + 1);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#954: FILE: drivers/block/xsysace.c:887:
+static int ace_release(struct inode *inode, struct file *filp)
                                                          ^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ace_release', this function's name, in a string
#960: FILE: drivers/block/xsysace.c:893:
+	dev_dbg(ace->dev, "ace_release() users=%i\n", ace->users - 1);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#972: FILE: drivers/block/xsysace.c:905:
+static int ace_ioctl(struct inode *inode, struct file *filp,
                                                        ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#978: FILE: drivers/block/xsysace.c:911:
+	struct hd_geometry g;
+	dev_dbg(ace->dev, "ace_ioctl()\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ace_ioctl', this function's name, in a string
#978: FILE: drivers/block/xsysace.c:911:
+	dev_dbg(ace->dev, "ace_ioctl()\n");

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#994: FILE: drivers/block/xsysace.c:927:
+static struct block_device_operations ace_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1006: FILE: drivers/block/xsysace.c:939:
+static int __devinit ace_setup(struct ace_device *ace)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ace->queue"
#1042: FILE: drivers/block/xsysace.c:975:
+	if (ace->queue == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'endianess' may be misspelled - perhaps 'endianness'?
#1062: FILE: drivers/block/xsysace.c:995:
+		/* 0x0101 should work regardless of endianess */
 		                                    ^^^^^^^^^

WARNING:TYPO_SPELLING: 'endianess' may be misspelled - perhaps 'endianness'?
#1065: FILE: drivers/block/xsysace.c:998:
+		/* read it back to determine endianess */
 		                             ^^^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'version == 0'
#1077: FILE: drivers/block/xsysace.c:1010:
+	if ((version == 0) || (version == 0xFFFF))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'version == 0xFFFF'
#1077: FILE: drivers/block/xsysace.c:1010:
+	if ((version == 0) || (version == 0xFFFF))

WARNING:INDENTED_LABEL: labels should not be indented
#1103: FILE: drivers/block/xsysace.c:1036:
+      err_read:

WARNING:INDENTED_LABEL: labels should not be indented
#1105: FILE: drivers/block/xsysace.c:1038:
+      err_alloc_disk:

WARNING:INDENTED_LABEL: labels should not be indented
#1107: FILE: drivers/block/xsysace.c:1040:
+      err_blk_initq:

WARNING:INDENTED_LABEL: labels should not be indented
#1111: FILE: drivers/block/xsysace.c:1044:
+      err_ioremap:

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1112: FILE: drivers/block/xsysace.c:1045:
+	printk(KERN_INFO "xsysace: error initializing device at 0x%lx\n",

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1117: FILE: drivers/block/xsysace.c:1050:
+static void __devexit ace_teardown(struct ace_device *ace)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1139: FILE: drivers/block/xsysace.c:1072:
+static int __devinit ace_probe(struct device *device)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ace_probe', this function's name, in a string
#1145: FILE: drivers/block/xsysace.c:1078:
+	dev_dbg(device, "ace_probe(%p)\n", device);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ace)...) over kzalloc(sizeof(struct ace_device)...)
#1150: FILE: drivers/block/xsysace.c:1083:
+	ace = kzalloc(sizeof(struct ace_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:INDENTED_LABEL: labels should not be indented
#1176: FILE: drivers/block/xsysace.c:1109:
+      err_setup:

WARNING:INDENTED_LABEL: labels should not be indented
#1179: FILE: drivers/block/xsysace.c:1112:
+      err_alloc:

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1180: FILE: drivers/block/xsysace.c:1113:
+	printk(KERN_ERR "xsysace: could not initialize device\n");

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1187: FILE: drivers/block/xsysace.c:1120:
+static int __devexit ace_remove(struct device *device)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ace_remove', this function's name, in a string
#1191: FILE: drivers/block/xsysace.c:1124:
+	dev_dbg(device, "ace_remove(%p)\n", device);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1215: FILE: drivers/block/xsysace.c:1148:
+		printk(KERN_WARNING "xsysace: register_blkdev() failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1228: FILE: drivers/block/xsysace.c:1161:
+		printk(KERN_WARNING "systemace unregister_blkdev(%i) failed\n",

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000434791.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 57 warnings, 4 checks, 1183 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000434791.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
