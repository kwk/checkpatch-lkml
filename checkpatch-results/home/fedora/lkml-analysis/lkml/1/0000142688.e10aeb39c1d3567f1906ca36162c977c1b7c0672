ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#57: FILE: arch/x86/kvm/x86.c:45:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#65: FILE: arch/x86/kvm/x86.c:737:
 }
+static int set_msr_mce(struct kvm_vcpu *vcpu, u32 msr, u64 data)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#67: FILE: arch/x86/kvm/x86.c:739:
+	u64 mcg_cap =3D vcpu->arch.mcg_cap;
 	            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#68: FILE: arch/x86/kvm/x86.c:740:
+	unsigned bank_num =3D mcg_cap & 0xff;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#68: FILE: arch/x86/kvm/x86.c:740:
+	unsigned bank_num =3D mcg_cap & 0xff;
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#81: FILE: arch/x86/kvm/x86.c:744:
+		vcpu->arch.mcg_status =3D data;
 		                      ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#88: FILE: arch/x86/kvm/x86.c:749:
+		if (data !=3D 0 && data !=3D ~(u64)0)
 		         ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#88: FILE: arch/x86/kvm/x86.c:749:
+		if (data !=3D 0 && data !=3D ~(u64)0)
 		                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#90: FILE: arch/x86/kvm/x86.c:751:
+		vcpu->arch.mcg_ctl =3D data;
 		                   ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#93: FILE: arch/x86/kvm/x86.c:754:
+		if (msr >=3D MSR_IA32_MC0_CTL &&
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#95: FILE: arch/x86/kvm/x86.c:756:
+			u32 offset =3D msr - MSR_IA32_MC0_CTL;
 			           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#97: FILE: arch/x86/kvm/x86.c:758:
+			if ((offset & 0x3) =3D=3D 0 &&
 			                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#97: FILE: arch/x86/kvm/x86.c:758:
+			if ((offset & 0x3) =3D=3D 0 &&
 			                      ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#97: FILE: arch/x86/kvm/x86.c:758:
+			if ((offset & 0x3) =3D=3D 0 &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#98: FILE: arch/x86/kvm/x86.c:759:
+			    data !=3D 0 && data !=3D ~(u64)0)
 			         ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#98: FILE: arch/x86/kvm/x86.c:759:
+			    data !=3D 0 && data !=3D ~(u64)0)
 			                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#100: FILE: arch/x86/kvm/x86.c:761:
+			vcpu->arch.mce_banks[offset] =3D data;
 			                             ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#120: FILE: arch/x86/kvm/x86.c:831:
+		if (!set_msr_mce(vcpu, msr, data))
+		    break;

WARNING:TABSTOP: Statements should start on a tabstop
#121: FILE: arch/x86/kvm/x86.c:832:
+		    break;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#130: FILE: arch/x86/kvm/x86.c:886:
 }
+static int get_msr_mce(struct kvm_vcpu *vcpu, u32 msr, u64 *pdata)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#133: FILE: arch/x86/kvm/x86.c:889:
+	u64 mcg_cap =3D vcpu->arch.mcg_cap;
 	            ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#134: FILE: arch/x86/kvm/x86.c:890:
+	unsigned bank_num =3D mcg_cap & 0xff;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#134: FILE: arch/x86/kvm/x86.c:890:
+	unsigned bank_num =3D mcg_cap & 0xff;
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#144: FILE: arch/x86/kvm/x86.c:894:
+		data =3D 0;
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#147: FILE: arch/x86/kvm/x86.c:897:
+		data =3D vcpu->arch.mcg_cap;
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#158: FILE: arch/x86/kvm/x86.c:902:
+		data =3D vcpu->arch.mcg_ctl;
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#161: FILE: arch/x86/kvm/x86.c:905:
+		data =3D vcpu->arch.mcg_status;
 		     ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#164: FILE: arch/x86/kvm/x86.c:908:
+		if (msr >=3D MSR_IA32_MC0_CTL &&
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#166: FILE: arch/x86/kvm/x86.c:910:
+			u32 offset =3D msr - MSR_IA32_MC0_CTL;
 			           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#167: FILE: arch/x86/kvm/x86.c:911:
+			u32 offset =3D msr - MSR_IA32_MC0_CTL;
+			data =3D vcpu->arch.mce_banks[offset];

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#167: FILE: arch/x86/kvm/x86.c:911:
+			data =3D vcpu->arch.mce_banks[offset];
 			     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#172: FILE: arch/x86/kvm/x86.c:916:
+	*pdata =3D data;
 	       ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#200: FILE: arch/x86/kvm/x86.c:1493:
 }
+static int kvm_vcpu_ioctl_x86_setup_mce(struct kvm_vcpu *vcpu,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#204: FILE: arch/x86/kvm/x86.c:1497:
+	unsigned bank_num =3D mcg_cap & 0xff, bank;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#204: FILE: arch/x86/kvm/x86.c:1497:
+	unsigned bank_num =3D mcg_cap & 0xff, bank;
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#207: FILE: arch/x86/kvm/x86.c:1500:
+	r =3D -EINVAL;
 	  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#207: FILE: arch/x86/kvm/x86.c:1500:
+	r =3D -EINVAL;
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#210: FILE: arch/x86/kvm/x86.c:1503:
+	r =3D -ENOMEM;
 	  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#210: FILE: arch/x86/kvm/x86.c:1503:
+	r =3D -ENOMEM;
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#211: FILE: arch/x86/kvm/x86.c:1504:
+	banks =3D kzalloc(bank_num * sizeof(u64) * 4, GFP_KERNEL);
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#214: FILE: arch/x86/kvm/x86.c:1507:
+	r =3D 0;
 	  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#215: FILE: arch/x86/kvm/x86.c:1508:
+	vcpu->arch.mce_banks =3D banks;
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#216: FILE: arch/x86/kvm/x86.c:1509:
+	vcpu->arch.mcg_cap =3D mcg_cap;
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#219: FILE: arch/x86/kvm/x86.c:1512:
+		vcpu->arch.mcg_ctl =3D ~(u64)0;
 		                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#221: FILE: arch/x86/kvm/x86.c:1514:
+	for (bank =3D 0; bank < bank_num; bank++)
 	          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#222: FILE: arch/x86/kvm/x86.c:1515:
+		vcpu->arch.mce_banks[bank*4] =3D ~(u64)0;
 		                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#222: FILE: arch/x86/kvm/x86.c:1515:
+		vcpu->arch.mce_banks[bank*4] =3D ~(u64)0;
 		                             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#230: FILE: arch/x86/kvm/x86.c:1523:
+	u64 mcg_cap =3D vcpu->arch.mcg_cap;
 	            ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#231: FILE: arch/x86/kvm/x86.c:1524:
+	unsigned bank_num =3D mcg_cap & 0xff;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#231: FILE: arch/x86/kvm/x86.c:1524:
+	unsigned bank_num =3D mcg_cap & 0xff;
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#232: FILE: arch/x86/kvm/x86.c:1525:
+	u64 *banks =3D vcpu->arch.mce_banks;
 	           ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#234: FILE: arch/x86/kvm/x86.c:1527:
+	if (mce->bank >=3D bank_num || !(mce->status & MCI_STATUS_VAL))
 	              ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#241: FILE: arch/x86/kvm/x86.c:1534:
+	    vcpu->arch.mcg_ctl !=3D ~(u64)0)
 	                       ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#243: FILE: arch/x86/kvm/x86.c:1536:
+	banks +=3D 4 * mce->bank;
 	      ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#248: FILE: arch/x86/kvm/x86.c:1541:
+	if ((mce->status & MCI_STATUS_UC) && banks[0] !=3D ~(u64)0)
 	                                              ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#250: FILE: arch/x86/kvm/x86.c:1543:
+	if (mce->status & MCI_STATUS_UC) {
[...]
+	} else if (!(banks[1] & MCI_STATUS_VAL) ||
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#251: FILE: arch/x86/kvm/x86.c:1544:
+		u64 status =3D mce->status;
 		           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#252: FILE: arch/x86/kvm/x86.c:1545:
+		u64 status =3D mce->status;
+		if ((vcpu->arch.mcg_status & MCG_STATUS_MCIP) ||

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#254: FILE: arch/x86/kvm/x86.c:1547:
+			printk(KERN_DEBUG "kvm: set_mce: "

WARNING:SPLIT_STRING: quoted string split across lines
#255: FILE: arch/x86/kvm/x86.c:1548:
+			printk(KERN_DEBUG "kvm: set_mce: "
+			       "injects mce exception while "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#256: FILE: arch/x86/kvm/x86.c:1549:
+			       "injects mce exception while "
+			       "previous one is in progress!\n");

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#261: FILE: arch/x86/kvm/x86.c:1554:
+			status |=3D MCI_STATUS_OVER;
 			       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#262: FILE: arch/x86/kvm/x86.c:1555:
+		banks[1] =3D mce->status;
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#263: FILE: arch/x86/kvm/x86.c:1556:
+		banks[2] =3D mce->addr;
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#264: FILE: arch/x86/kvm/x86.c:1557:
+		banks[3] =3D mce->misc;
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#265: FILE: arch/x86/kvm/x86.c:1558:
+		vcpu->arch.mcg_status =3D mce->mcg_status;
 		                      ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#269: FILE: arch/x86/kvm/x86.c:1562:
+		    !((mcg_cap & MCG_TES_P) && ((banks[1]>>53) & 0x3) < 2))) {
 		                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#270: FILE: arch/x86/kvm/x86.c:1563:
+		u64 status =3D mce->status;
 		           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#271: FILE: arch/x86/kvm/x86.c:1564:
+		u64 status =3D mce->status;
+		if (banks[1] & MCI_STATUS_VAL)

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#272: FILE: arch/x86/kvm/x86.c:1565:
+			status |=3D MCI_STATUS_OVER;
 			       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#273: FILE: arch/x86/kvm/x86.c:1566:
+		banks[1] =3D mce->status;
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#274: FILE: arch/x86/kvm/x86.c:1567:
+		banks[2] =3D mce->addr;
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#275: FILE: arch/x86/kvm/x86.c:1568:
+		banks[3] =3D mce->misc;
 		         ^

CHECK:BRACES: Unbalanced braces around else statement
#276: FILE: arch/x86/kvm/x86.c:1569:
+	} else

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#277: FILE: arch/x86/kvm/x86.c:1570:
+		banks[1] |=3D MCI_STATUS_OVER;
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#291: FILE: arch/x86/kvm/x86.c:1711:
+		r =3D -EFAULT;
 		  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#291: FILE: arch/x86/kvm/x86.c:1711:
+		r =3D -EFAULT;
 		      ^

WARNING:SIZEOF_PARENTHESIS: sizeof mcg_cap should be sizeof(mcg_cap)
#292: FILE: arch/x86/kvm/x86.c:1712:
+		if (copy_from_user(&mcg_cap, argp, sizeof mcg_cap))

ERROR:SPACING: spaces required around that '&=' (ctx:WxV)
#298: FILE: arch/x86/kvm/x86.c:1718:
+		mcg_cap &=3D ~(MCG_EXT_P|MCG_CMCI_P);
 		        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#298: FILE: arch/x86/kvm/x86.c:1718:
+		mcg_cap &=3D ~(MCG_EXT_P|MCG_CMCI_P);
 		                        ^

WARNING:SIZEOF_PARENTHESIS: sizeof mcg_cap should be sizeof(mcg_cap)
#299: FILE: arch/x86/kvm/x86.c:1719:
+		if (copy_to_user(argp, &mcg_cap, sizeof mcg_cap))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#301: FILE: arch/x86/kvm/x86.c:1721:
+		r =3D kvm_vcpu_ioctl_x86_setup_mce(vcpu, mcg_cap);
 		  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#307: FILE: arch/x86/kvm/x86.c:1727:
+		r =3D -EFAULT;
 		  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#307: FILE: arch/x86/kvm/x86.c:1727:
+		r =3D -EFAULT;
 		      ^

WARNING:SIZEOF_PARENTHESIS: sizeof mce should be sizeof(mce)
#308: FILE: arch/x86/kvm/x86.c:1728:
+		if (copy_from_user(&mce, argp, sizeof mce))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#310: FILE: arch/x86/kvm/x86.c:1730:
+		r =3D kvm_vcpu_ioctl_x86_set_mce(vcpu, &mce);
 		  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#336: FILE: include/linux/kvm.h:294:
 };
+/* x86 MCE */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#368: FILE: include/linux/kvm.h:16:
+#define MCG_TES_P	 (1ULL<<11)  /* Threshold-based error status */
                  	      ^

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#368: FILE: include/linux/kvm.h:16:
+#define MCG_TES_P	 (1ULL<<11)  /* Threshold-based error status */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000142688.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 59 errors, 15 warnings, 15 checks, 307 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000142688.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
