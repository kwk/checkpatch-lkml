CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#70: FILE: arch/x86/kernel/io_apic_64.c:468:
+		nr_ioapic_registers[apic] = reg_01.bits.entries+1;
 		                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#74: FILE: arch/x86/kernel/io_apic_64.c:472:
+		early_ioapic_entries[apic] =
+			kzalloc(sizeof(struct IO_APIC_route_entry) *
+				nr_ioapic_registers[apic], GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#85: FILE: arch/x86/kernel/io_apic_64.c:483:
+			entry = early_ioapic_entries[apic][pin] =

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#129: FILE: include/asm-x86/io_apic.h:197:
+extern int save_mask_IO_APIC_setup(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#130: FILE: include/asm-x86/io_apic.h:198:
+extern void restore_IO_APIC_setup(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#131: FILE: include/asm-x86/io_apic.h:199:
+extern void reinit_intr_remapped_IO_APIC(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#131: FILE: include/asm-x86/io_apic.h:199:
+extern void reinit_intr_remapped_IO_APIC(int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000256364.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 5 checks, 90 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000256364.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
