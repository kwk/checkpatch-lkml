CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#47: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:38:
+#define S3C2440_SDICON_SDRESET        (1<<8)
                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#47: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:38:
+#define S3C2440_SDICON_SDRESET        (1<<8)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#48: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:39:
+#define S3C2440_SDICON_MMCCLOCK       (1<<5)
                                         ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#48: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:39:
+#define S3C2440_SDICON_MMCCLOCK       (1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#57: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:51:
+#define S3C2410_SDICMDCON_SENDERHOST  (1<<6)
                                         ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#57: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:51:
+#define S3C2410_SDICMDCON_SENDERHOST  (1<<6)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#66: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:61:
+#define S3C2440_SDIDCON_DS_BYTE       (0<<22)
                                         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#67: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:62:
+#define S3C2440_SDIDCON_DS_HALFWORD   (1<<22)
                                         ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#67: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:62:
+#define S3C2440_SDIDCON_DS_HALFWORD   (1<<22)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#68: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:63:
+#define S3C2440_SDIDCON_DS_WORD       (2<<22)
                                         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#76: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:72:
+#define S3C2440_SDIDCON_DATSTART      (1<<14)
                                         ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#76: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:72:
+#define S3C2440_SDIDCON_DATSTART      (1<<14)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#92: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:97:
+#define S3C2440_SDIFSTA_FIFORESET      (1<<16)
                                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#92: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:97:
+#define S3C2440_SDIFSTA_FIFORESET      (1<<16)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#93: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:98:
+#define S3C2440_SDIFSTA_FIFOFAIL       (3<<14)  /* 3 is correct (2 bits) */
                                          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#98: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:101:
+#define S3C2410_SDIFSTA_TFHALF         (1<<11)
                                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#98: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:101:
+#define S3C2410_SDIFSTA_TFHALF         (1<<11)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#99: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:102:
+#define S3C2410_SDIFSTA_TFEMPTY        (1<<10)
                                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#99: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:102:
+#define S3C2410_SDIFSTA_TFEMPTY        (1<<10)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#108: FILE: drivers/mmc/host/s3cmci.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#129: FILE: drivers/mmc/host/s3cmci.c:22:
+#include <asm/io.h>

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#153: FILE: drivers/mmc/host/s3cmci.c:46:
+#define dbg(host, channels, args...)		 \
+	if (dbgmap_err & channels) 		 \
+		dev_err(&host->pdev->dev, args); \
+	else if (dbgmap_info & channels)	 \
+		dev_info(&host->pdev->dev, args);\
+	else if (dbgmap_debug & channels)	 \
+		dev_dbg(&host->pdev->dev, args);

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'host' - possible side-effects?
#153: FILE: drivers/mmc/host/s3cmci.c:46:
+#define dbg(host, channels, args...)		 \
+	if (dbgmap_err & channels) 		 \
+		dev_err(&host->pdev->dev, args); \
+	else if (dbgmap_info & channels)	 \
+		dev_info(&host->pdev->dev, args);\
+	else if (dbgmap_debug & channels)	 \
+		dev_dbg(&host->pdev->dev, args);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'host' may be better as '(host)' to avoid precedence issues
#153: FILE: drivers/mmc/host/s3cmci.c:46:
+#define dbg(host, channels, args...)		 \
+	if (dbgmap_err & channels) 		 \
+		dev_err(&host->pdev->dev, args); \
+	else if (dbgmap_info & channels)	 \
+		dev_info(&host->pdev->dev, args);\
+	else if (dbgmap_debug & channels)	 \
+		dev_dbg(&host->pdev->dev, args);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'channels' - possible side-effects?
#153: FILE: drivers/mmc/host/s3cmci.c:46:
+#define dbg(host, channels, args...)		 \
+	if (dbgmap_err & channels) 		 \
+		dev_err(&host->pdev->dev, args); \
+	else if (dbgmap_info & channels)	 \
+		dev_info(&host->pdev->dev, args);\
+	else if (dbgmap_debug & channels)	 \
+		dev_dbg(&host->pdev->dev, args);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'channels' may be better as '(channels)' to avoid precedence issues
#153: FILE: drivers/mmc/host/s3cmci.c:46:
+#define dbg(host, channels, args...)		 \
+	if (dbgmap_err & channels) 		 \
+		dev_err(&host->pdev->dev, args); \
+	else if (dbgmap_info & channels)	 \
+		dev_info(&host->pdev->dev, args);\
+	else if (dbgmap_debug & channels)	 \
+		dev_dbg(&host->pdev->dev, args);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#153: FILE: drivers/mmc/host/s3cmci.c:46:
+#define dbg(host, channels, args...)		 \
+	if (dbgmap_err & channels) 		 \
+		dev_err(&host->pdev->dev, args); \
+	else if (dbgmap_info & channels)	 \
+		dev_info(&host->pdev->dev, args);\
+	else if (dbgmap_debug & channels)	 \
+		dev_dbg(&host->pdev->dev, args);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#154: FILE: drivers/mmc/host/s3cmci.c:47:
+^Iif (dbgmap_err & channels) ^I^I \$

WARNING:TYPO_SPELLING: 'RESSIZE' may be misspelled - perhaps 'RESIZE'?
#161: FILE: drivers/mmc/host/s3cmci.c:54:
+#define RESSIZE(ressource) (((ressource)->end - (ressource)->start)+1)
         ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'ressource' may be misspelled - perhaps 'resource'?
#161: FILE: drivers/mmc/host/s3cmci.c:54:
+#define RESSIZE(ressource) (((ressource)->end - (ressource)->start)+1)
                               ^^^^^^^^^

WARNING:TYPO_SPELLING: 'ressource' may be misspelled - perhaps 'resource'?
#161: FILE: drivers/mmc/host/s3cmci.c:54:
+#define RESSIZE(ressource) (((ressource)->end - (ressource)->start)+1)
                                                  ^^^^^^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#161: FILE: drivers/mmc/host/s3cmci.c:54:
+#define RESSIZE(ressource) (((ressource)->end - (ressource)->start)+1)
                                                                    ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ressource' - possible side-effects?
#161: FILE: drivers/mmc/host/s3cmci.c:54:
+#define RESSIZE(ressource) (((ressource)->end - (ressource)->start)+1)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#178: FILE: drivers/mmc/host/s3cmci.c:71:
+^Icon ^I= readl(host->base + S3C2410_SDICON);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#179: FILE: drivers/mmc/host/s3cmci.c:72:
+^Ipre ^I= readl(host->base + S3C2410_SDIPRE);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#180: FILE: drivers/mmc/host/s3cmci.c:73:
+^Icmdarg ^I= readl(host->base + S3C2410_SDICMDARG);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#181: FILE: drivers/mmc/host/s3cmci.c:74:
+^Icmdcon ^I= readl(host->base + S3C2410_SDICMDCON);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#182: FILE: drivers/mmc/host/s3cmci.c:75:
+^Icmdsta ^I= readl(host->base + S3C2410_SDICMDSTAT);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#183: FILE: drivers/mmc/host/s3cmci.c:76:
+^Ir0 ^I= readl(host->base + S3C2410_SDIRSP0);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#184: FILE: drivers/mmc/host/s3cmci.c:77:
+^Ir1 ^I= readl(host->base + S3C2410_SDIRSP1);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#185: FILE: drivers/mmc/host/s3cmci.c:78:
+^Ir2 ^I= readl(host->base + S3C2410_SDIRSP2);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#186: FILE: drivers/mmc/host/s3cmci.c:79:
+^Ir3 ^I= readl(host->base + S3C2410_SDIRSP3);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#187: FILE: drivers/mmc/host/s3cmci.c:80:
+^Itimer ^I= readl(host->base + S3C2410_SDITIMER);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#188: FILE: drivers/mmc/host/s3cmci.c:81:
+^Ibsize ^I= readl(host->base + S3C2410_SDIBSIZE);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#189: FILE: drivers/mmc/host/s3cmci.c:82:
+^Idatcon ^I= readl(host->base + S3C2410_SDIDCON);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#190: FILE: drivers/mmc/host/s3cmci.c:83:
+^Idatcnt ^I= readl(host->base + S3C2410_SDIDCNT);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#191: FILE: drivers/mmc/host/s3cmci.c:84:
+^Idatsta ^I= readl(host->base + S3C2410_SDIDSTA);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#192: FILE: drivers/mmc/host/s3cmci.c:85:
+^Ifsta ^I= readl(host->base + S3C2410_SDIFSTA);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#196: FILE: drivers/mmc/host/s3cmci.c:89:
+	dbg(host, dbg_debug, "%s  CON:[%08x]  PRE:[%08x]  TMR:[%08x]\n",
+				prefix, con, pre, timer);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#199: FILE: drivers/mmc/host/s3cmci.c:92:
+	dbg(host, dbg_debug, "%s CCON:[%08x] CARG:[%08x] CSTA:[%08x]\n",
+				prefix, cmdcon, cmdarg, cmdsta);

WARNING:SPLIT_STRING: quoted string split across lines
#202: FILE: drivers/mmc/host/s3cmci.c:95:
+	dbg(host, dbg_debug, "%s DCON:[%08x] FSTA:[%08x]"
+			       " DSTA:[%08x] DCNT:[%08x]\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#206: FILE: drivers/mmc/host/s3cmci.c:99:
+	dbg(host, dbg_debug, "%s   R0:[%08x]   R1:[%08x]"
+			       "   R2:[%08x]   R3:[%08x]\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: drivers/mmc/host/s3cmci.c:104:
+static void prepare_dbgmsg(struct s3cmci_host *host, struct mmc_command *cmd,
+								int stop)

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: drivers/mmc/host/s3cmci.c:106:
+ ^Isnprintf(host->dbgmsg_cmd, 300,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#213: FILE: drivers/mmc/host/s3cmci.c:106:
+ ^Isnprintf(host->dbgmsg_cmd, 300,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: drivers/mmc/host/s3cmci.c:106:
+ ^Isnprintf(host->dbgmsg_cmd, 300,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#214: FILE: drivers/mmc/host/s3cmci.c:107:
+ 	snprintf(host->dbgmsg_cmd, 300,
+		"#%u%s op:%i arg:0x%08x flags:0x08%x retries:%u",

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#215: FILE: drivers/mmc/host/s3cmci.c:108:
+		host->ccnt, (stop?" (STOP)":""),
 		                 ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#215: FILE: drivers/mmc/host/s3cmci.c:108:
+		host->ccnt, (stop?" (STOP)":""),
 		                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#220: FILE: drivers/mmc/host/s3cmci.c:113:
+		snprintf(host->dbgmsg_dat, 300,
+			"#%u bsize:%u blocks:%u bytes:%u",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#230: FILE: drivers/mmc/host/s3cmci.c:123:
+static void dbg_dumpcmd(struct s3cmci_host *host, struct mmc_command *cmd,
+								int fail)

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#232: FILE: drivers/mmc/host/s3cmci.c:125:
+	unsigned int dbglvl = fail?dbg_fail:dbg_debug;
 	                          ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#232: FILE: drivers/mmc/host/s3cmci.c:125:
+	unsigned int dbglvl = fail?dbg_fail:dbg_debug;
 	                                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: drivers/mmc/host/s3cmci.c:132:
+		dbg(host, dbglvl, "CMD[OK] %s R0:0x%08x\n",
+			host->dbgmsg_cmd, cmd->resp[0]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#242: FILE: drivers/mmc/host/s3cmci.c:135:
+		dbg(host, dbglvl, "CMD[ERR %i] %s Status:%s\n",
+			cmd->error, host->dbgmsg_cmd, host->status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#252: FILE: drivers/mmc/host/s3cmci.c:145:
+		dbg(host, dbglvl, "DAT[ERR %i] %s DCNT:0x%08x\n",
+			cmd->data->error, host->dbgmsg_dat,

ERROR:SPACING: spaces required around that '|=' (ctx:VxW)
#263: FILE: drivers/mmc/host/s3cmci.c:156:
+	newmask|= imask;
 	       ^

ERROR:SPACING: spaces required around that '&=' (ctx:VxW)
#275: FILE: drivers/mmc/host/s3cmci.c:168:
+	newmask&= ~imask;
 	       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#288: FILE: drivers/mmc/host/s3cmci.c:181:
+static inline int get_data_buffer(struct s3cmci_host *host,
+			volatile u32 *words, volatile u32 **pointer)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#288: FILE: drivers/mmc/host/s3cmci.c:181:
+			volatile u32 *words, volatile u32 **pointer)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!host->mrq'
#295: FILE: drivers/mmc/host/s3cmci.c:188:
+	if ((!host->mrq) || (!host->mrq->data))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!host->mrq->data'
#295: FILE: drivers/mmc/host/s3cmci.c:188:
+	if ((!host->mrq) || (!host->mrq->data))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#300: FILE: drivers/mmc/host/s3cmci.c:193:
+		dbg(host, dbg_debug, "no more buffers (%i/%i)\n",
+		      host->pio_sgptr, host->mrq->data->sg_len);

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#306: FILE: drivers/mmc/host/s3cmci.c:199:
+	*pointer= page_address(sg->page) + sg->offset;
 	        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#311: FILE: drivers/mmc/host/s3cmci.c:204:
+	dbg(host, dbg_sg, "new buffer (%i/%i)\n",
+	      host->pio_sgptr, host->mrq->data->sg_len);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'host' may be better as '(host)' to avoid precedence issues
#316: FILE: drivers/mmc/host/s3cmci.c:209:
+#define FIFO_FILL(host) ((readl(host->base + S3C2410_SDIFSTA) & S3C2410_SDIFSTA_COUNTMASK) >> 2)

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#317: FILE: drivers/mmc/host/s3cmci.c:210:
+#define FIFO_FREE(host) ((63 - (readl(host->base + S3C2410_SDIFSTA) & S3C2410_SDIFSTA_COUNTMASK)) >> 2)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'host' may be better as '(host)' to avoid precedence issues
#317: FILE: drivers/mmc/host/s3cmci.c:210:
+#define FIFO_FREE(host) ((63 - (readl(host->base + S3C2410_SDIFSTA) & S3C2410_SDIFSTA_COUNTMASK)) >> 2)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#333: FILE: drivers/mmc/host/s3cmci.c:226:
+			res = get_data_buffer(host, &host->pio_words,
+							&host->pio_ptr);

WARNING:SPLIT_STRING: quoted string split across lines
#339: FILE: drivers/mmc/host/s3cmci.c:232:
+				dbg(host, dbg_pio, "pio_read(): "
+					"complete (no more data).\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#344: FILE: drivers/mmc/host/s3cmci.c:237:
+			dbg(host, dbg_pio, "pio_read(): new target: [%i]@[%p]\n",
+			       host->pio_words, host->pio_ptr);

WARNING:SPLIT_STRING: quoted string split across lines
#348: FILE: drivers/mmc/host/s3cmci.c:241:
+		dbg(host, dbg_pio, "pio_read(): fifo:[%02i] "
+				   "buffer:[%03i] dcnt:[%08X]\n",

ERROR:SPACING: spaces required around that '-=' (ctx:VxW)
#355: FILE: drivers/mmc/host/s3cmci.c:248:
+		host->pio_words-= fifo;
 		               ^

ERROR:SPACING: spaces required around that '+=' (ctx:VxW)
#356: FILE: drivers/mmc/host/s3cmci.c:249:
+		host->pio_count+= fifo;
 		               ^

ERROR:SPACING: space required before the open parenthesis '('
#358: FILE: drivers/mmc/host/s3cmci.c:251:
+		while(fifo--) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#358: FILE: drivers/mmc/host/s3cmci.c:251:
+		while(fifo--) {
+			*(host->pio_ptr++) = readl(from_ptr);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#367: FILE: drivers/mmc/host/s3cmci.c:260:
+			dbg(host, dbg_pio, "pio_read(): "
+				"complete (no more buffers).\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#390: FILE: drivers/mmc/host/s3cmci.c:283:
+			res = get_data_buffer(host, &host->pio_words,
+							&host->pio_ptr);

WARNING:SPLIT_STRING: quoted string split across lines
#393: FILE: drivers/mmc/host/s3cmci.c:286:
+				dbg(host, dbg_pio, "pio_write(): "
+					"complete (no more data).\n");

WARNING:SPLIT_STRING: quoted string split across lines
#400: FILE: drivers/mmc/host/s3cmci.c:293:
+			dbg(host, dbg_pio, "pio_write(): "
+				"new source: [%i]@[%p]\n",

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#403: FILE: drivers/mmc/host/s3cmci.c:296:
+
+		}

ERROR:SPACING: spaces required around that '-=' (ctx:VxW)
#408: FILE: drivers/mmc/host/s3cmci.c:301:
+		host->pio_words-= fifo;
 		               ^

ERROR:SPACING: spaces required around that '+=' (ctx:VxW)
#409: FILE: drivers/mmc/host/s3cmci.c:302:
+		host->pio_count+= fifo;
 		               ^

ERROR:SPACING: space required before the open parenthesis '('
#411: FILE: drivers/mmc/host/s3cmci.c:304:
+		while(fifo--) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#411: FILE: drivers/mmc/host/s3cmci.c:304:
+		while(fifo--) {
+			writel(*(host->pio_ptr++), to_ptr);
+		}

CHECK:SPACING: No space is necessary after a cast
#421: FILE: drivers/mmc/host/s3cmci.c:314:
+	struct s3cmci_host *host = (struct s3cmci_host *) data;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#423: FILE: drivers/mmc/host/s3cmci.c:316:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#434: FILE: drivers/mmc/host/s3cmci.c:327:
+			dbg(host, dbg_err, "unfinished %s "
+				"- pio_count:[%u] pio_words:[%u]\n",

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#435: FILE: drivers/mmc/host/s3cmci.c:328:
+				(host->pio_active == XFER_READ)?"read":"write",
 				                               ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#435: FILE: drivers/mmc/host/s3cmci.c:328:
+				(host->pio_active == XFER_READ)?"read":"write",
 				                                      ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#449: FILE: drivers/mmc/host/s3cmci.c:342:
+ *   host->mrq ^I^I^Ipoints to current request$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#485: FILE: drivers/mmc/host/s3cmci.c:378:
+^Imci_csta ^I= readl(host->base + S3C2410_SDICMDSTAT);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#486: FILE: drivers/mmc/host/s3cmci.c:379:
+^Imci_dsta ^I= readl(host->base + S3C2410_SDIDSTA);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#487: FILE: drivers/mmc/host/s3cmci.c:380:
+^Imci_dcnt ^I= readl(host->base + S3C2410_SDIDCNT);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#488: FILE: drivers/mmc/host/s3cmci.c:381:
+^Imci_fsta ^I= readl(host->base + S3C2410_SDIFSTA);$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'host->complete_what == COMPLETION_NONE'
#493: FILE: drivers/mmc/host/s3cmci.c:386:
+	if ((host->complete_what == COMPLETION_NONE) ||
+			(host->complete_what == COMPLETION_FINALIZE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'host->complete_what == COMPLETION_FINALIZE'
#493: FILE: drivers/mmc/host/s3cmci.c:386:
+	if ((host->complete_what == COMPLETION_NONE) ||
+			(host->complete_what == COMPLETION_FINALIZE)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#494: FILE: drivers/mmc/host/s3cmci.c:387:
+	if ((host->complete_what == COMPLETION_NONE) ||
+			(host->complete_what == COMPLETION_FINALIZE)) {

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#506: FILE: drivers/mmc/host/s3cmci.c:399:
+	cmd = host->cmd_is_stop?host->mrq->stop:host->mrq->cmd;
 	                       ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#506: FILE: drivers/mmc/host/s3cmci.c:399:
+	cmd = host->cmd_is_stop?host->mrq->stop:host->mrq->cmd;
 	                                       ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'host->pio_active == XFER_WRITE'
#515: FILE: drivers/mmc/host/s3cmci.c:408:
+		if ((host->pio_active == XFER_WRITE) &&
+				(mci_fsta & S3C2410_SDIFSTA_TFDET)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#516: FILE: drivers/mmc/host/s3cmci.c:409:
+		if ((host->pio_active == XFER_WRITE) &&
+				(mci_fsta & S3C2410_SDIFSTA_TFDET)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#517: FILE: drivers/mmc/host/s3cmci.c:410:
+				(mci_fsta & S3C2410_SDIFSTA_TFDET)) {
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'host->pio_active == XFER_READ'
#523: FILE: drivers/mmc/host/s3cmci.c:416:
+		if ((host->pio_active == XFER_READ) &&
+				(mci_fsta & S3C2410_SDIFSTA_RFDET)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#524: FILE: drivers/mmc/host/s3cmci.c:417:
+		if ((host->pio_active == XFER_READ) &&
+				(mci_fsta & S3C2410_SDIFSTA_RFDET)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#525: FILE: drivers/mmc/host/s3cmci.c:418:
+				(mci_fsta & S3C2410_SDIFSTA_RFDET)) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#527: FILE: drivers/mmc/host/s3cmci.c:420:
+			disable_imask(host,
+				S3C2410_SDIIMSK_RXFIFOHALF | S3C2410_SDIIMSK_RXFIFOLAST);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#572: FILE: drivers/mmc/host/s3cmci.c:465:
+	/* errors handled after this point are only relevant
+	   when a data transfer is in progress */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#572: FILE: drivers/mmc/host/s3cmci.c:465:
+	   when a data transfer is in progress */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#616: FILE: drivers/mmc/host/s3cmci.c:509:
+		if (host->complete_what == COMPLETION_XFERFINISH_RSPFIN) {
+			host->complete_what = COMPLETION_RSPFIN;
+		}

WARNING:SPLIT_STRING: quoted string split across lines
#642: FILE: drivers/mmc/host/s3cmci.c:535:
+	dbg(host, dbg_irq, "csta:0x%08x dsta:0x%08x "
+			   "fsta:0x%08x dcnt:0x%08x status:%s.\n",

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#649: FILE: drivers/mmc/host/s3cmci.c:542:
+
+}

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#653: FILE: drivers/mmc/host/s3cmci.c:546:
+ * ISR for the CardDetect Pin
+*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#667: FILE: drivers/mmc/host/s3cmci.c:560:
+void s3cmci_dma_done_callback(struct s3c2410_dma_chan *dma_ch, void *buf_id,
+	int size, enum s3c2410_dma_buffresult result)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#673: FILE: drivers/mmc/host/s3cmci.c:566:
+^Imci_csta ^I= readl(host->base + S3C2410_SDICMDSTAT);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#674: FILE: drivers/mmc/host/s3cmci.c:567:
+^Imci_dsta ^I= readl(host->base + S3C2410_SDIDSTA);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#675: FILE: drivers/mmc/host/s3cmci.c:568:
+^Imci_fsta ^I= readl(host->base + S3C2410_SDIFSTA);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#676: FILE: drivers/mmc/host/s3cmci.c:569:
+^Imci_dcnt ^I= readl(host->base + S3C2410_SDIDCNT);$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!host->mrq'
#678: FILE: drivers/mmc/host/s3cmci.c:571:
+	if ((!host->mrq) || (!host->mrq) || (!host->mrq->data))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!host->mrq'
#678: FILE: drivers/mmc/host/s3cmci.c:571:
+	if ((!host->mrq) || (!host->mrq) || (!host->mrq->data))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!host->mrq->data'
#678: FILE: drivers/mmc/host/s3cmci.c:571:
+	if ((!host->mrq) || (!host->mrq) || (!host->mrq->data))

WARNING:SPLIT_STRING: quoted string split across lines
#688: FILE: drivers/mmc/host/s3cmci.c:581:
+		dbg(host, dbg_fail, "DMA FAILED: csta=0x%08x dsta=0x%08x "
+			"fsta=0x%08x dcnt:0x%08x result:0x%08x toGo:%u\n",

WARNING:SPLIT_STRING: quoted string split across lines
#698: FILE: drivers/mmc/host/s3cmci.c:591:
+		dbg(host, dbg_dma, "DMA DONE  Size:%i DSTA:[%08x] "
+			"DCNT:[%08x] toGo:%u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#705: FILE: drivers/mmc/host/s3cmci.c:598:
+	dbg(host, dbg_dma, "DMA FINISHED Size:%i DSTA:%08x DCNT:%08x\n",
+		size, mci_dsta, mci_dcnt);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#714: FILE: drivers/mmc/host/s3cmci.c:607:
+
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#721: FILE: drivers/mmc/host/s3cmci.c:614:
+
+}

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#726: FILE: drivers/mmc/host/s3cmci.c:619:
+	struct mmc_command *cmd = host->cmd_is_stop?mrq->stop:mrq->cmd;
 	                                           ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#726: FILE: drivers/mmc/host/s3cmci.c:619:
+	struct mmc_command *cmd = host->cmd_is_stop?mrq->stop:mrq->cmd;
 	                                                     ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd->error == MMC_ERR_NONE'
#735: FILE: drivers/mmc/host/s3cmci.c:628:
+	if (cmd->data && (cmd->error == MMC_ERR_NONE) &&
+		  (cmd->data->error == MMC_ERR_NONE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd->data->error == MMC_ERR_NONE'
#735: FILE: drivers/mmc/host/s3cmci.c:628:
+	if (cmd->data && (cmd->error == MMC_ERR_NONE) &&
+		  (cmd->data->error == MMC_ERR_NONE)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#736: FILE: drivers/mmc/host/s3cmci.c:629:
+	if (cmd->data && (cmd->error == MMC_ERR_NONE) &&
+		  (cmd->data->error == MMC_ERR_NONE)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#737: FILE: drivers/mmc/host/s3cmci.c:630:
+		  (cmd->data->error == MMC_ERR_NONE)) {
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!host->dma_complete'
#738: FILE: drivers/mmc/host/s3cmci.c:631:
+		if (host->dodma && (!host->dma_complete)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!host->cmd_is_stop'
#773: FILE: drivers/mmc/host/s3cmci.c:666:
+	if (cmd->data && cmd->data->stop && (!host->cmd_is_stop)) {

WARNING:TYPO_SPELLING: 'Calulate' may be misspelled - perhaps 'Calculate'?
#783: FILE: drivers/mmc/host/s3cmci.c:676:
+	// Calulate the amout of bytes transfer, but only if there was
 	   ^^^^^^^^

WARNING:TYPO_SPELLING: 'amout' may be misspelled - perhaps 'amount'?
#783: FILE: drivers/mmc/host/s3cmci.c:676:
+	// Calulate the amout of bytes transfer, but only if there was
 	                ^^^^^

WARNING:TYPO_SPELLING: 'transfering' may be misspelled - perhaps 'transferring'?
#792: FILE: drivers/mmc/host/s3cmci.c:685:
+	// If we had an error while transfering data we flush the
 	                            ^^^^^^^^^^^

ERROR:SPACING: spaces required around that '|=' (ctx:VxW)
#808: FILE: drivers/mmc/host/s3cmci.c:701:
+			mci_con|= S3C2410_SDICON_FIFORESET;
 			       ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#820: FILE: drivers/mmc/host/s3cmci.c:713:
+
+

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#823: FILE: drivers/mmc/host/s3cmci.c:716:
+	static int setup_ok = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#832: FILE: drivers/mmc/host/s3cmci.c:725:
+	s3c2410_dma_devconfig(host->dma, source, 3,
+		host->mem->start + host->sdidata);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#836: FILE: drivers/mmc/host/s3cmci.c:729:
+		s3c2410_dma_config(host->dma, 4,
+			(S3C2410_DCON_HWTRIG | S3C2410_DCON_CH0_SDI));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#844: FILE: drivers/mmc/host/s3cmci.c:737:
+static void s3cmci_send_command(struct s3cmci_host *host,
+					struct mmc_command *cmd)

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#854: FILE: drivers/mmc/host/s3cmci.c:747:
+	if (cmd->data) {
[...]
+	} else if (cmd->flags & MMC_RSP_PRESENT) {
[...]
+	} else {
[...]

ERROR:SPACING: spaces required around that '|=' (ctx:VxW)
#865: FILE: drivers/mmc/host/s3cmci.c:758:
+	ccon|= S3C2410_SDICMDCON_SENDERHOST | S3C2410_SDICMDCON_CMDSTART;
 	    ^

ERROR:SPACING: spaces required around that '|=' (ctx:VxW)
#871: FILE: drivers/mmc/host/s3cmci.c:764:
+		ccon|= S3C2410_SDICMDCON_LONGRSP;
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#878: FILE: drivers/mmc/host/s3cmci.c:771:
+	u32 dcon, imsk, stoptries=3;
 	                         ^

ERROR:SPACING: space required before the open parenthesis '('
#887: FILE: drivers/mmc/host/s3cmci.c:780:
+	while(readl(host->base + S3C2410_SDIDSTA) &

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#889: FILE: drivers/mmc/host/s3cmci.c:782:
+		(S3C2410_SDIDSTA_TXDATAON | S3C2410_SDIDSTA_RXDATAON)) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#891: FILE: drivers/mmc/host/s3cmci.c:784:
+		dbg(host, dbg_err,
+			"mci_setup_data() transfer stillin progress.\n");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#907: FILE: drivers/mmc/host/s3cmci.c:800:
+	if (host->dodma) {
+		dcon |= S3C2410_SDIDCON_DMAEN;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#911: FILE: drivers/mmc/host/s3cmci.c:804:
+	if (host->bus_width == MMC_BUS_WIDTH_4) {
+		dcon |= S3C2410_SDIDCON_WIDEBUS;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#915: FILE: drivers/mmc/host/s3cmci.c:808:
+	if (!(data->flags & MMC_DATA_STREAM)) {
+		dcon |= S3C2410_SDIDCON_BLOCKMODE;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#954: FILE: drivers/mmc/host/s3cmci.c:847:
+		if (data->flags & MMC_DATA_READ) {
+			writel(0xFF, host->base + S3C2410_SDIPRE);
+		}

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#966: FILE: drivers/mmc/host/s3cmci.c:859:
+	int rw = (data->flags & MMC_DATA_WRITE)?1:0;
 	                                       ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#966: FILE: drivers/mmc/host/s3cmci.c:859:
+	int rw = (data->flags & MMC_DATA_WRITE)?1:0;
 	                                         ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#968: FILE: drivers/mmc/host/s3cmci.c:861:
+	if (rw != ((data->flags & MMC_DATA_READ)?0:1))
 	                                        ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#968: FILE: drivers/mmc/host/s3cmci.c:861:
+	if (rw != ((data->flags & MMC_DATA_READ)?0:1))
 	                                          ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#974: FILE: drivers/mmc/host/s3cmci.c:867:
+	host->pio_active = rw?XFER_WRITE:XFER_READ;
 	                     ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#974: FILE: drivers/mmc/host/s3cmci.c:867:
+	host->pio_active = rw?XFER_WRITE:XFER_READ;
 	                                ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#991: FILE: drivers/mmc/host/s3cmci.c:884:
+	int rw = (data->flags & MMC_DATA_WRITE)?1:0;
 	                                       ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#991: FILE: drivers/mmc/host/s3cmci.c:884:
+	int rw = (data->flags & MMC_DATA_WRITE)?1:0;
 	                                         ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#993: FILE: drivers/mmc/host/s3cmci.c:886:
+	if (rw != ((data->flags & MMC_DATA_READ)?0:1))
 	                                        ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#993: FILE: drivers/mmc/host/s3cmci.c:886:
+	if (rw != ((data->flags & MMC_DATA_READ)?0:1))
 	                                          ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#996: FILE: drivers/mmc/host/s3cmci.c:889:
+	s3cmci_dma_setup(host, rw?S3C2410_DMASRC_MEM:S3C2410_DMASRC_HW);
 	                         ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#996: FILE: drivers/mmc/host/s3cmci.c:889:
+	s3cmci_dma_setup(host, rw?S3C2410_DMASRC_MEM:S3C2410_DMASRC_HW);
 	                                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1000: FILE: drivers/mmc/host/s3cmci.c:893:
+	dma_len = dma_map_sg(mmc_dev(host->mmc), data->sg, data->sg_len,
+				(rw)?DMA_TO_DEVICE:DMA_FROM_DEVICE);

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1000: FILE: drivers/mmc/host/s3cmci.c:893:
+				(rw)?DMA_TO_DEVICE:DMA_FROM_DEVICE);
 				    ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1000: FILE: drivers/mmc/host/s3cmci.c:893:
+				(rw)?DMA_TO_DEVICE:DMA_FROM_DEVICE);
 				                  ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1002: FILE: drivers/mmc/host/s3cmci.c:895:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1013: FILE: drivers/mmc/host/s3cmci.c:906:
+		dbg(host, dbg_dma, "enqueue %i:%u@%u\n", i,
+			sg_dma_address(&data->sg[i]),

CHECK:SPACING: No space is necessary after a cast
#1016: FILE: drivers/mmc/host/s3cmci.c:909:
+		res = s3c2410_dma_enqueue(host->dma, (void *) host,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1017: FILE: drivers/mmc/host/s3cmci.c:910:
+		res = s3c2410_dma_enqueue(host->dma, (void *) host,
+				sg_dma_address(&data->sg[i]),

ERROR:CODE_INDENT: code indent should use tabs where possible
#1024: FILE: drivers/mmc/host/s3cmci.c:917:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1024: FILE: drivers/mmc/host/s3cmci.c:917:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1024: FILE: drivers/mmc/host/s3cmci.c:917:
+ ^I}$

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1035: FILE: drivers/mmc/host/s3cmci.c:928:
+	struct mmc_command *cmd = host->cmd_is_stop?mrq->stop:mrq->cmd;
 	                                           ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1035: FILE: drivers/mmc/host/s3cmci.c:928:
+	struct mmc_command *cmd = host->cmd_is_stop?mrq->stop:mrq->cmd;
 	                                                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1049: FILE: drivers/mmc/host/s3cmci.c:942:
+		int res;
+		res = s3cmci_setup_data(host, cmd->data);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1061: FILE: drivers/mmc/host/s3cmci.c:954:
+
+

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1062: FILE: drivers/mmc/host/s3cmci.c:955:
+		if (host->dodma) {
[...]
+		} else {
[...]

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1076: FILE: drivers/mmc/host/s3cmci.c:969:
+
+	}

ERROR:CODE_INDENT: code indent should use tabs where possible
#1087: FILE: drivers/mmc/host/s3cmci.c:980:
+ ^Istruct s3cmci_host *host = mmc_priv(mmc);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1087: FILE: drivers/mmc/host/s3cmci.c:980:
+ ^Istruct s3cmci_host *host = mmc_priv(mmc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1087: FILE: drivers/mmc/host/s3cmci.c:980:
+ ^Istruct s3cmci_host *host = mmc_priv(mmc);$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1102: FILE: drivers/mmc/host/s3cmci.c:995:
+	switch(ios->power_mode) {
+		case MMC_POWER_ON:
+		case MMC_POWER_UP:
[...]
+		case MMC_POWER_OFF:
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#1102: FILE: drivers/mmc/host/s3cmci.c:995:
+	switch(ios->power_mode) {

ERROR:SPACING: spaces required around that '|=' (ctx:VxV)
#1113: FILE: drivers/mmc/host/s3cmci.c:1006:
+				mci_con|=S3C2410_SDICON_FIFORESET;
 				       ^

ERROR:SPACING: spaces required around that '|=' (ctx:VxV)
#1123: FILE: drivers/mmc/host/s3cmci.c:1016:
+				mci_con|=S3C2440_SDICON_SDRESET;
 				       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1129: FILE: drivers/mmc/host/s3cmci.c:1022:
+	for (mci_psc=0; mci_psc<255; mci_psc++) {
 	            ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1129: FILE: drivers/mmc/host/s3cmci.c:1022:
+	for (mci_psc=0; mci_psc<255; mci_psc++) {
 	                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1130: FILE: drivers/mmc/host/s3cmci.c:1023:
+		host->real_rate = host->clk_rate / (host->clk_div*(mci_psc+1));
 		                                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1130: FILE: drivers/mmc/host/s3cmci.c:1023:
+		host->real_rate = host->clk_rate / (host->clk_div*(mci_psc+1));
 		                                                          ^

ERROR:SPACING: space required before the open parenthesis '('
#1136: FILE: drivers/mmc/host/s3cmci.c:1029:
+	if(mci_psc > 255) mci_psc = 255;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1136: FILE: drivers/mmc/host/s3cmci.c:1029:
+	if(mci_psc > 255) mci_psc = 255;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: spaces required around that '&=' (ctx:WxO)
#1149: FILE: drivers/mmc/host/s3cmci.c:1042:
+		mci_con &=~S3C2410_SDICON_CLOCKTYPE;
 		        ^

ERROR:SPACING: space required before that '~' (ctx:OxV)
#1149: FILE: drivers/mmc/host/s3cmci.c:1042:
+		mci_con &=~S3C2410_SDICON_CLOCKTYPE;
 		          ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1153: FILE: drivers/mmc/host/s3cmci.c:1046:
+	if ((ios->power_mode==MMC_POWER_ON)
 	                    ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ios->power_mode==MMC_POWER_ON'
#1153: FILE: drivers/mmc/host/s3cmci.c:1046:
+	if ((ios->power_mode==MMC_POWER_ON)
+		|| (ios->power_mode==MMC_POWER_UP)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ios->power_mode==MMC_POWER_UP'
#1153: FILE: drivers/mmc/host/s3cmci.c:1046:
+	if ((ios->power_mode==MMC_POWER_ON)
+		|| (ios->power_mode==MMC_POWER_UP)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1154: FILE: drivers/mmc/host/s3cmci.c:1047:
+	if ((ios->power_mode==MMC_POWER_ON)
+		|| (ios->power_mode==MMC_POWER_UP)) {

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1154: FILE: drivers/mmc/host/s3cmci.c:1047:
+		|| (ios->power_mode==MMC_POWER_UP)) {
 		                   ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1155: FILE: drivers/mmc/host/s3cmci.c:1048:
+		|| (ios->power_mode==MMC_POWER_UP)) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1157: FILE: drivers/mmc/host/s3cmci.c:1050:
+		dbg(host, dbg_conf, "running at %lukHz (requested: %ukHz).\n",
+			host->real_rate/1000, ios->clock/1000);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1157: FILE: drivers/mmc/host/s3cmci.c:1050:
+			host->real_rate/1000, ios->clock/1000);
 			               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1157: FILE: drivers/mmc/host/s3cmci.c:1050:
+			host->real_rate/1000, ios->clock/1000);
 			                                ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1164: FILE: drivers/mmc/host/s3cmci.c:1057:
+
+}

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1182: FILE: drivers/mmc/host/s3cmci.c:1075:
+^Istruct mmc_host ^I*mmc;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1183: FILE: drivers/mmc/host/s3cmci.c:1076:
+^Istruct s3cmci_host ^I*host;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1194: FILE: drivers/mmc/host/s3cmci.c:1087:
+^Ihost->mmc ^I= mmc;$

CHECK:SPACING: No space is necessary after a cast
#1198: FILE: drivers/mmc/host/s3cmci.c:1091:
+	tasklet_init(&host->pio_tasklet, pio_tasklet, (unsigned long) host);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1211: FILE: drivers/mmc/host/s3cmci.c:1104:
+^Ihost->complete_what ^I= COMPLETION_NONE;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1212: FILE: drivers/mmc/host/s3cmci.c:1105:
+^Ihost->pio_active ^I= XFER_NONE;$

WARNING:TYPO_SPELLING: 'resouce' may be misspelled - perhaps 'resource'?
#1220: FILE: drivers/mmc/host/s3cmci.c:1113:
+			"failed to get io memory region resouce.\n");
 			                                ^^^^^^^

WARNING:TYPO_SPELLING: 'RESSIZE' may be misspelled - perhaps 'RESIZE'?
#1227: FILE: drivers/mmc/host/s3cmci.c:1120:
+		RESSIZE(host->mem), pdev->name);
 		^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1227: FILE: drivers/mmc/host/s3cmci.c:1120:
+	host->mem = request_mem_region(host->mem->start,
+		RESSIZE(host->mem), pdev->name);

WARNING:TYPO_SPELLING: 'RESSIZE' may be misspelled - perhaps 'RESIZE'?
#1235: FILE: drivers/mmc/host/s3cmci.c:1128:
+	host->base = ioremap(host->mem->start, RESSIZE(host->mem));
 	                                       ^^^^^^^

WARNING:TYPO_SPELLING: 'resouce' may be misspelled - perhaps 'resource'?
#1244: FILE: drivers/mmc/host/s3cmci.c:1137:
+		dev_err(&pdev->dev, "failed to get interrupt resouce.\n");
 		                                             ^^^^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1282: FILE: drivers/mmc/host/s3cmci.c:1175:
+	if ((ret = clk_enable(host->clk))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1289: FILE: drivers/mmc/host/s3cmci.c:1182:
+^Immc->ops ^I= &s3cmci_ops;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1292: FILE: drivers/mmc/host/s3cmci.c:1185:
+^Immc->f_min ^I= host->clk_rate / (host->clk_div * 256);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1293: FILE: drivers/mmc/host/s3cmci.c:1186:
+^Immc->f_max ^I= host->clk_rate / host->clk_div;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1304: FILE: drivers/mmc/host/s3cmci.c:1197:
+	dbg(host, dbg_debug, "probe: mode:%s mapped mci_base:%p irq:%u irq_cd:%u dma:%u.\n",
+		(host->is2440?"2440":""),

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1304: FILE: drivers/mmc/host/s3cmci.c:1197:
+		(host->is2440?"2440":""),
 		             ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1304: FILE: drivers/mmc/host/s3cmci.c:1197:
+		(host->is2440?"2440":""),
 		                    ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1307: FILE: drivers/mmc/host/s3cmci.c:1200:
+	if ((ret = mmc_add_host(mmc))) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1314: FILE: drivers/mmc/host/s3cmci.c:1207:
+	dev_info(&pdev->dev,"initialisation done.\n");
 	                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1324: FILE: drivers/mmc/host/s3cmci.c:1217:
+ ^Ifree_irq(host->irq_cd, host);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1324: FILE: drivers/mmc/host/s3cmci.c:1217:
+ ^Ifree_irq(host->irq_cd, host);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1324: FILE: drivers/mmc/host/s3cmci.c:1217:
+ ^Ifree_irq(host->irq_cd, host);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1327: FILE: drivers/mmc/host/s3cmci.c:1220:
+ ^Ifree_irq(host->irq, host);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1327: FILE: drivers/mmc/host/s3cmci.c:1220:
+ ^Ifree_irq(host->irq, host);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1327: FILE: drivers/mmc/host/s3cmci.c:1220:
+ ^Ifree_irq(host->irq, host);$

WARNING:TYPO_SPELLING: 'RESSIZE' may be misspelled - perhaps 'RESIZE'?
#1333: FILE: drivers/mmc/host/s3cmci.c:1226:
+	release_mem_region(host->mem->start, RESSIZE(host->mem));
 	                                     ^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1343: FILE: drivers/mmc/host/s3cmci.c:1236:
+^Istruct mmc_host ^I*mmc  = platform_get_drvdata(pdev);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1344: FILE: drivers/mmc/host/s3cmci.c:1237:
+^Istruct s3cmci_host ^I*host = mmc_priv(mmc);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1349: FILE: drivers/mmc/host/s3cmci.c:1242:
+ ^Ifree_irq(host->irq_cd, host);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1349: FILE: drivers/mmc/host/s3cmci.c:1242:
+ ^Ifree_irq(host->irq_cd, host);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1349: FILE: drivers/mmc/host/s3cmci.c:1242:
+ ^Ifree_irq(host->irq_cd, host);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1350: FILE: drivers/mmc/host/s3cmci.c:1243:
+ ^Ifree_irq(host->irq, host);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1350: FILE: drivers/mmc/host/s3cmci.c:1243:
+ ^Ifree_irq(host->irq, host);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1350: FILE: drivers/mmc/host/s3cmci.c:1243:
+ ^Ifree_irq(host->irq, host);$

WARNING:TYPO_SPELLING: 'RESSIZE' may be misspelled - perhaps 'RESIZE'?
#1352: FILE: drivers/mmc/host/s3cmci.c:1245:
+	release_mem_region(host->mem->start, RESSIZE(host->mem));
 	                                     ^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1394: FILE: drivers/mmc/host/s3cmci.c:1287:
+
+

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1396: FILE: drivers/mmc/host/s3cmci.c:1289:
+static struct platform_driver s3cmci_driver_2410 =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1405: FILE: drivers/mmc/host/s3cmci.c:1298:
+static struct platform_driver s3cmci_driver_2412 =
+{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1414: FILE: drivers/mmc/host/s3cmci.c:1307:
+static struct platform_driver s3cmci_driver_2440 =
+{

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1422: FILE: drivers/mmc/host/s3cmci.c:1315:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1450: FILE: drivers/mmc/host/s3cmci.h:1:
+/*

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1488: FILE: drivers/mmc/host/s3cmci.h:39:
+	unsigned		sdiimsk;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1489: FILE: drivers/mmc/host/s3cmci.h:40:
+	unsigned		sdidata;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1492: FILE: drivers/mmc/host/s3cmci.h:43:
+	volatile int		dmatogo;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1497: FILE: drivers/mmc/host/s3cmci.h:48:
+	spinlock_t		complete_lock;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1498: FILE: drivers/mmc/host/s3cmci.h:49:
+	volatile enum s3cmci_waitfor

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1501: FILE: drivers/mmc/host/s3cmci.h:52:
+	volatile int		dma_complete;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1503: FILE: drivers/mmc/host/s3cmci.h:54:
+	volatile u32		pio_sgptr;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1504: FILE: drivers/mmc/host/s3cmci.h:55:
+	volatile u32		pio_words;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1505: FILE: drivers/mmc/host/s3cmci.h:56:
+	volatile u32		pio_count;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1506: FILE: drivers/mmc/host/s3cmci.h:57:
+	volatile u32		*pio_ptr;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1510: FILE: drivers/mmc/host/s3cmci.h:61:
+	volatile u32		pio_active;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1514: FILE: drivers/mmc/host/s3cmci.h:65:
+^Ichar ^I^I^Idbgmsg_cmd[301];$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1515: FILE: drivers/mmc/host/s3cmci.h:66:
+^Ichar ^I^I^Idbgmsg_dat[301];$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1516: FILE: drivers/mmc/host/s3cmci.h:67:
+	volatile char		*status;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000261073.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 41 errors, 104 warnings, 128 checks, 1488 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000261073.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
