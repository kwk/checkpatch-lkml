CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#168: FILE: fs/notify/fsnotify.h:77:
+extern void fsnotify_clear_marks_by_group(struct fsnotify_group *group);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#169: FILE: fs/notify/fsnotify.h:78:
+extern void fsnotify_clear_marks_by_inode(struct inode *inode, unsigned int flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#170: FILE: fs/notify/fsnotify.h:79:
+extern void fsnotify_destroy_mark_by_entry(struct fsnotify_mark_entry *entry);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#171: FILE: fs/notify/fsnotify.h:80:
+extern void fsnotify_get_mark(struct fsnotify_mark_entry *entry);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#172: FILE: fs/notify/fsnotify.h:81:
+extern void fsnotify_put_mark(struct fsnotify_mark_entry *entry);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#224: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#229: FILE: fs/notify/inode_mark.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#244: FILE: fs/notify/inode_mark.c:16:
+ *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#255: FILE: fs/notify/inode_mark.c:27:
+#include <asm/atomic.h>

WARNING:BRACES: braces {} are not necessary for single statement blocks
#267: FILE: fs/notify/inode_mark.c:39:
+	if (entry->free_private) {
+		entry->free_private(entry);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#409: FILE: fs/notify/inode_mark.c:181:
+struct fsnotify_mark_entry *fsnotify_find_mark_entry(struct fsnotify_group *group, struct inode *inode)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#421: FILE: fs/notify/inode_mark.c:193:
+}
+/*

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#430: FILE: fs/notify/inode_mark.c:202:
+struct fsnotify_mark_entry *fsnotify_mark_add(struct fsnotify_group *group, struct inode *inode, __u64 mask)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#488: FILE: fs/notify/inode_mark.c:260:
+
+

WARNING:LONG_LINE: line length of 133 exceeds 100 columns
#491: FILE: fs/notify/inode_mark.c:263:
+	fsnotify_mark_kmem_cache = kmem_cache_create("fsnotify_mark_entry", sizeof(struct fsnotify_mark_entry), 0, SLAB_PANIC, NULL);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#565: FILE: include/linux/fsnotify_backend.h:82:
+	void (*mark_clear_inode)(struct fsnotify_mark_entry *entry, struct inode *inode, unsigned int flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#588: FILE: include/linux/fsnotify_backend.h:110:
+extern void __fsnotify_inode_delete(struct inode *inode, int flag);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#592: FILE: include/linux/fsnotify_backend.h:114:
+extern void fsnotify_recalc_group_mask(struct fsnotify_group *group);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#597: FILE: include/linux/fsnotify_backend.h:119:
+extern void fsnotify_recalc_inode_mask(struct inode *inode);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#598: FILE: include/linux/fsnotify_backend.h:120:
+extern struct fsnotify_mark_entry *fsnotify_find_mark_entry(struct fsnotify_group *group, struct inode *inode);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#598: FILE: include/linux/fsnotify_backend.h:120:
+extern struct fsnotify_mark_entry *fsnotify_find_mark_entry(struct fsnotify_group *group, struct inode *inode);

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#599: FILE: include/linux/fsnotify_backend.h:121:
+extern struct fsnotify_mark_entry *fsnotify_mark_add(struct fsnotify_group *group, struct inode *inode, __u64 mask);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#599: FILE: include/linux/fsnotify_backend.h:121:
+extern struct fsnotify_mark_entry *fsnotify_mark_add(struct fsnotify_group *group, struct inode *inode, __u64 mask);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000193023.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 10 warnings, 12 checks, 506 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000193023.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
