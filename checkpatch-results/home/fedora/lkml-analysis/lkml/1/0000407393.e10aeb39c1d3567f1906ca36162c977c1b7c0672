WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#29: 
We need to pass the filp one layer deeper in XFS, but
                    ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->fsuid != inode->i_uid'
#81: FILE: fs/ext2/ioctl.c:42:
+		if ((current->fsuid != inode->i_uid) && !capable(CAP_FOWNER)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: No space is necessary after a cast
#88: FILE: fs/ext2/ioctl.c:47:
+		if (get_user(flags, (int __user *) arg)) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#129: FILE: fs/ext2/ioctl.c:92:
+		if (get_user(inode->i_generation, (int __user *) arg)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->fsuid != inode->i_uid'
#163: FILE: fs/ext3/ioctl.c:46:
+		if ((current->fsuid != inode->i_uid) && !capable(CAP_FOWNER)) {

CHECK:SPACING: No space is necessary after a cast
#170: FILE: fs/ext3/ioctl.c:51:
+		if (get_user(flags, (int __user *) arg)) {

CHECK:SPACING: No space is necessary after a cast
#228: FILE: fs/ext3/ioctl.c:141:
+		if (get_user(generation, (int __user *) arg)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->fsuid != inode->i_uid'
#268: FILE: fs/ext3/ioctl.c:203:
+		if ((current->fsuid != inode->i_uid) && !capable(CAP_FOWNER)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->fsuid != inode->i_uid'
#374: FILE: fs/ext4/ioctl.c:45:
+		if ((current->fsuid != inode->i_uid) && !capable(CAP_FOWNER)) {

CHECK:SPACING: No space is necessary after a cast
#379: FILE: fs/ext4/ioctl.c:50:
+		if (get_user(flags, (int __user *) arg)) {

CHECK:SPACING: No space is necessary after a cast
#444: FILE: fs/ext4/ioctl.c:139:
+		if (get_user(generation, (int __user *) arg)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->fsuid != inode->i_uid'
#488: FILE: fs/ext4/ioctl.c:201:
+		if ((current->fsuid != inode->i_uid) && !capable(CAP_FOWNER)) {

WARNING:INDENTED_LABEL: labels should not be indented
#595: FILE: fs/fat/file.c:110:
+	up_no_drop_write:

WARNING:LINE_SPACING: Missing a blank line after declarations
#616: FILE: fs/hfsplus/ioctl.c:39:
+		int err = 0;
+		err = mnt_want_write(filp->f_vfsmnt);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->fsuid != inode->i_uid'
#620: FILE: fs/hfsplus/ioctl.c:43:
+		if ((current->fsuid != inode->i_uid) && !capable(CAP_FOWNER)) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#642: FILE: fs/hfsplus/ioctl.c:60:
+		if (flags & ~(FS_IMMUTABLE_FL|FS_APPEND_FL|FS_NODUMP_FL)) {
 		                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#642: FILE: fs/hfsplus/ioctl.c:60:
+		if (flags & ~(FS_IMMUTABLE_FL|FS_APPEND_FL|FS_NODUMP_FL)) {
 		                                          ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->fsuid != inode->i_uid'
#690: FILE: fs/jfs/ioctl.c:75:
+		if ((current->fsuid != inode->i_uid) && !capable(CAP_FOWNER)) {

CHECK:SPACING: No space is necessary after a cast
#694: FILE: fs/jfs/ioctl.c:79:
+		if (get_user(flags, (int __user *) arg)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#748: FILE: fs/ocfs2/ioctl.c:131:
+		status = ocfs2_set_inode_attr(inode, flags,
 			OCFS2_FL_MODIFIABLE);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#790: FILE: fs/reiserfs/ioctl.c:58:
 			if ((current->fsuid != inode->i_uid)
+			    && !capable(CAP_FOWNER)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#804: FILE: fs/reiserfs/ioctl.c:69:
 					  REISERFS_APPEND_FL))
+			    && !capable(CAP_LINUX_IMMUTABLE)) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#910: FILE: fs/xfs/linux-2.6/xfs_ioctl.c:812:
+		return xfs_attrmulti_by_handle(mp, arg, filp, inode);
 		                                        ^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000407393.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 19 checks, 827 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000407393.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
