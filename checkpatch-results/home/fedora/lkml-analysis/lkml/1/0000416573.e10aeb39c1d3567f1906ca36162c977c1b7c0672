WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#87: FILE: drivers/mtd/mtdoops.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#104: FILE: drivers/mtd/mtdoops.c:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#105: FILE: drivers/mtd/mtdoops.c:19:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA$

WARNING:LINE_SPACING: Missing a blank line after declarations
#137: FILE: drivers/mtd/mtdoops.c:51:
+	wait_queue_head_t *wait_q = (wait_queue_head_t *)done->priv;
+	wake_up(wait_q);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#164: FILE: drivers/mtd/mtdoops.c:78:
+		printk(KERN_WARNING "mtdoops: erase of region [0x%x, 0x%x] "

WARNING:SPLIT_STRING: quoted string split across lines
#165: FILE: drivers/mtd/mtdoops.c:79:
+		printk(KERN_WARNING "mtdoops: erase of region [0x%x, 0x%x] "
+				     "on \"%s\" failed\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#191: FILE: drivers/mtd/mtdoops.c:105:
+			&retlen, (u_char *) &count);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'retlen != 4'
#192: FILE: drivers/mtd/mtdoops.c:106:
+	if ((retlen != 4) || (ret < 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret < 0'
#192: FILE: drivers/mtd/mtdoops.c:106:
+	if ((retlen != 4) || (ret < 0)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#193: FILE: drivers/mtd/mtdoops.c:107:
+		printk(KERN_ERR "mtdoops: Read failure at %d (%d of 4 read)"

WARNING:SPLIT_STRING: quoted string split across lines
#194: FILE: drivers/mtd/mtdoops.c:108:
+		printk(KERN_ERR "mtdoops: Read failure at %d (%d of 4 read)"
+				", err %d.\n", cxt->nextpage * OOPS_PAGE_SIZE,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#203: FILE: drivers/mtd/mtdoops.c:117:
+	printk(KERN_DEBUG "mtdoops: Ready %d, %d (no erase)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#204: FILE: drivers/mtd/mtdoops.c:118:
+	printk(KERN_DEBUG "mtdoops: Ready %d, %d (no erase)\n",
+			cxt->nextpage, cxt->nextcount);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#226: FILE: drivers/mtd/mtdoops.c:140:
+	while (mtd->block_isbad &&
+			mtd->block_isbad(mtd, cxt->nextpage * OOPS_PAGE_SIZE)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#228: FILE: drivers/mtd/mtdoops.c:142:
+		printk(KERN_WARNING "mtdoops: Bad block at %08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#229: FILE: drivers/mtd/mtdoops.c:143:
+		printk(KERN_WARNING "mtdoops: Bad block at %08x\n",
+				cxt->nextpage * OOPS_PAGE_SIZE);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#235: FILE: drivers/mtd/mtdoops.c:149:
+			printk(KERN_ERR "mtdoops: All blocks bad!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#249: FILE: drivers/mtd/mtdoops.c:163:
+	printk(KERN_DEBUG "mtdoops: Ready %d, %d \n", cxt->nextpage, cxt->nextcount);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#249: FILE: drivers/mtd/mtdoops.c:163:
+	printk(KERN_DEBUG "mtdoops: Ready %d, %d \n", cxt->nextpage, cxt->nextcount);

CHECK:SPACING: No space is necessary after a cast
#270: FILE: drivers/mtd/mtdoops.c:184:
+		mtd->read(mtd, page * OOPS_PAGE_SIZE, 4, &retlen, (u_char *) &count);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#283: FILE: drivers/mtd/mtdoops.c:197:
+		} else if ((count > maxcount) && (count > 0xc0000000)
+					&& (maxcount > 0x80000000)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#292: FILE: drivers/mtd/mtdoops.c:206:
+		printk(KERN_DEBUG "mtdoops: Ready %d, %d (first init)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#293: FILE: drivers/mtd/mtdoops.c:207:
+		printk(KERN_DEBUG "mtdoops: Ready %d, %d (first init)\n",
+				cxt->nextpage, cxt->nextcount);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#303: FILE: drivers/mtd/mtdoops.c:217:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mtd->index != cxt->mtd_index'
#309: FILE: drivers/mtd/mtdoops.c:223:
+	if ((mtd->index != cxt->mtd_index) || cxt->mtd_index < 0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#313: FILE: drivers/mtd/mtdoops.c:227:
+		printk(KERN_ERR "MTD partition %d not big enough for mtdoops\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#314: FILE: drivers/mtd/mtdoops.c:228:
+		printk(KERN_ERR "MTD partition %d not big enough for mtdoops\n",
+				mtd->index);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#325: FILE: drivers/mtd/mtdoops.c:239:
+	printk(KERN_DEBUG "mtdoops: Attached to MTD device %d\n", mtd->index);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mtd->index != cxt->mtd_index'
#332: FILE: drivers/mtd/mtdoops.c:246:
+	if ((mtd->index != cxt->mtd_index) || cxt->mtd_index < 0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#339: FILE: drivers/mtd/mtdoops.c:253:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#352: FILE: drivers/mtd/mtdoops.c:266:
+		size_t retlen;
+		if (cxt->writecount < OOPS_PAGE_SIZE)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#354: FILE: drivers/mtd/mtdoops.c:268:
+			memset(cxt->oops_buf + cxt->writecount, 0xff,
+					OOPS_PAGE_SIZE - cxt->writecount);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'retlen != OOPS_PAGE_SIZE'
#361: FILE: drivers/mtd/mtdoops.c:275:
+		if ((retlen != OOPS_PAGE_SIZE) || (ret < 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret < 0'
#361: FILE: drivers/mtd/mtdoops.c:275:
+		if ((retlen != OOPS_PAGE_SIZE) || (ret < 0))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#362: FILE: drivers/mtd/mtdoops.c:276:
+			printk(KERN_ERR "mtdoops: Write failure at %d (%d of %d"

WARNING:SPLIT_STRING: quoted string split across lines
#363: FILE: drivers/mtd/mtdoops.c:277:
+			printk(KERN_ERR "mtdoops: Write failure at %d (%d of %d"
+				" written), err %d.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#425: FILE: drivers/mtd/mtdoops.c:339:
+		printk(KERN_ERR "Failed to allocate oops buffer workspace\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#425: FILE: drivers/mtd/mtdoops.c:339:
+	if (!cxt->oops_buf) {
+		printk(KERN_ERR "Failed to allocate oops buffer workspace\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#445: FILE: drivers/mtd/mtdoops.c:359:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000416573.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 19 warnings, 18 checks, 387 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000416573.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
