WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: drivers/char/mem.c:865:
+    unsigned int        minor;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: drivers/char/mem.c:866:
+    char            *name;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: drivers/char/mem.c:867:
+    umode_t            mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: drivers/char/mem.c:868:
+    const struct file_operations    *fops;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: drivers/char/mem.c:869:
+    struct backing_dev_info    *dev_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: drivers/char/mem.c:871:
+    {1, "mem",     S_IRUSR | S_IWUSR | S_IRGRP, &mem_fops,$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR | S_IRGRP' are not preferred. Consider using octal permissions '0640'.
#79: FILE: drivers/char/mem.c:871:
+    {1, "mem",     S_IRUSR | S_IWUSR | S_IRGRP, &mem_fops,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:CODE_INDENT: code indent should use tabs where possible
#80: FILE: drivers/char/mem.c:872:
+        &directly_mappable_cdev_bdi},$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: drivers/char/mem.c:872:
+        &directly_mappable_cdev_bdi},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: drivers/char/mem.c:874:
+    {2, "kmem",    S_IRUSR | S_IWUSR | S_IRGRP, &kmem_fops,$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR | S_IRGRP' are not preferred. Consider using octal permissions '0640'.
#87: FILE: drivers/char/mem.c:874:
+    {2, "kmem",    S_IRUSR | S_IWUSR | S_IRGRP, &kmem_fops,

ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: drivers/char/mem.c:875:
+        &directly_mappable_cdev_bdi},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: drivers/char/mem.c:875:
+        &directly_mappable_cdev_bdi},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: drivers/char/mem.c:877:
+    {3, "null",    S_IRUGO | S_IWUGO,           &null_fops, NULL},$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#93: FILE: drivers/char/mem.c:877:
+    {3, "null",    S_IRUGO | S_IWUGO,           &null_fops, NULL},

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: drivers/char/mem.c:879:
+    {4, "port",    S_IRUSR | S_IWUSR | S_IRGRP, &port_fops, NULL},$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR | S_IRGRP' are not preferred. Consider using octal permissions '0640'.
#98: FILE: drivers/char/mem.c:879:
+    {4, "port",    S_IRUSR | S_IWUSR | S_IRGRP, &port_fops, NULL},

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: drivers/char/mem.c:881:
+    {5, "zero",    S_IRUGO | S_IWUGO,           &zero_fops, &zero_bdi},$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#116: FILE: drivers/char/mem.c:881:
+    {5, "zero",    S_IRUGO | S_IWUGO,           &zero_fops, &zero_bdi},

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: drivers/char/mem.c:882:
+    {7, "full",    S_IRUGO | S_IWUGO,           &full_fops, NULL},$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#117: FILE: drivers/char/mem.c:882:
+    {7, "full",    S_IRUGO | S_IWUGO,           &full_fops, NULL},

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: drivers/char/mem.c:883:
+    {8, "random",  S_IRUGO | S_IWUSR,           &random_fops, NULL},$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#118: FILE: drivers/char/mem.c:883:
+    {8, "random",  S_IRUGO | S_IWUSR,           &random_fops, NULL},

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: drivers/char/mem.c:884:
+    {9, "urandom", S_IRUGO | S_IWUSR,           &urandom_fops, NULL},$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#119: FILE: drivers/char/mem.c:884:
+    {9, "urandom", S_IRUGO | S_IWUSR,           &urandom_fops, NULL},

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: drivers/char/mem.c:885:
+    {11,"kmsg",    S_IRUGO | S_IWUSR,           &kmsg_fops, NULL},$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#120: FILE: drivers/char/mem.c:885:
+    {11,"kmsg",    S_IRUGO | S_IWUSR,           &kmsg_fops, NULL},
        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#120: FILE: drivers/char/mem.c:885:
+    {11,"kmsg",    S_IRUGO | S_IWUSR,           &kmsg_fops, NULL},

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: drivers/char/mem.c:887:
+    {12,"oldmem",    S_IRUSR | S_IWUSR | S_IRGRP, &oldmem_fops, NULL},$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#125: FILE: drivers/char/mem.c:887:
+    {12,"oldmem",    S_IRUSR | S_IWUSR | S_IRGRP, &oldmem_fops, NULL},
        ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR | S_IRGRP' are not preferred. Consider using octal permissions '0640'.
#125: FILE: drivers/char/mem.c:887:
+    {12,"oldmem",    S_IRUSR | S_IWUSR | S_IRGRP, &oldmem_fops, NULL},

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#132: FILE: drivers/char/mem.c:891:
+static int memory_open(struct inode * inode, struct file * filp)
                                                            ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#132: FILE: drivers/char/mem.c:891:
+static int memory_open(struct inode * inode, struct file * filp)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#132: FILE: drivers/char/mem.c:891:
+static int memory_open(struct inode * inode, struct file * filp)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: drivers/char/mem.c:893:
+    int ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: drivers/char/mem.c:894:
+    int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: drivers/char/mem.c:896:
+    lock_kernel();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: drivers/char/mem.c:898:
+    for (i = 0; i < ARRAY_SIZE(devlist); i++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: drivers/char/mem.c:899:
+        if (devlist[i].minor == iminor(inode)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: drivers/char/mem.c:899:
+        if (devlist[i].minor == iminor(inode)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#140: FILE: drivers/char/mem.c:899:
+        if (devlist[i].minor == iminor(inode)) {
+            filp->f_op = devlist[i].fops;

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: drivers/char/mem.c:900:
+            filp->f_op = devlist[i].fops;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: drivers/char/mem.c:900:
+            filp->f_op = devlist[i].fops;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: drivers/char/mem.c:901:
+            if (devlist[i].dev_info) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: drivers/char/mem.c:901:
+            if (devlist[i].dev_info) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: drivers/char/mem.c:902:
+                filp->f_mapping->backing_dev_info =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: drivers/char/mem.c:902:
+                filp->f_mapping->backing_dev_info =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: drivers/char/mem.c:903:
+                    devlist[i].dev_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: drivers/char/mem.c:903:
+                    devlist[i].dev_info;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: drivers/char/mem.c:904:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: drivers/char/mem.c:904:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: drivers/char/mem.c:906:
+            break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: drivers/char/mem.c:906:
+            break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: drivers/char/mem.c:907:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: drivers/char/mem.c:907:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: drivers/char/mem.c:910:
+    if (i == ARRAY_SIZE(devlist))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: drivers/char/mem.c:911:
+        ret = -ENXIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: drivers/char/mem.c:911:
+        ret = -ENXIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: drivers/char/mem.c:912:
+    else$

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: drivers/char/mem.c:913:
+        if (filp->f_op && filp->f_op->open)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: drivers/char/mem.c:913:
+        if (filp->f_op && filp->f_op->open)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#156: FILE: drivers/char/mem.c:913:
+        if (filp->f_op && filp->f_op->open)
+            ret = filp->f_op->open(inode,filp);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#157: FILE: drivers/char/mem.c:914:
+            ret = filp->f_op->open(inode,filp);
                                          ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: drivers/char/mem.c:914:
+            ret = filp->f_op->open(inode,filp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: drivers/char/mem.c:914:
+            ret = filp->f_op->open(inode,filp);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#157: FILE: drivers/char/mem.c:914:
+            ret = filp->f_op->open(inode,filp);
                                         ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000137126.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 18 errors, 48 warnings, 0 checks, 134 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000137126.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
