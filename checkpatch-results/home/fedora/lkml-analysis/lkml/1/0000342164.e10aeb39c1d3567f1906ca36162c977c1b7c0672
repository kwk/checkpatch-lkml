WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
- Don't return if we're blocking interrupts, goto done and restore interrupts.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#50: FILE: arch/cris/arch-v32/kernel/fasttimer.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#315: FILE: arch/cris/arch-v32/kernel/fasttimer.c:155:
+	trig_wrap = (trig = r_time0 + delay_us*(1000/10)) < r_time0;
 	                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#315: FILE: arch/cris/arch-v32/kernel/fasttimer.c:155:
+	trig_wrap = (trig = r_time0 + delay_us*(1000/10)) < r_time0;
 	                                            ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'r_time1 < trig'
#338: FILE: arch/cris/arch-v32/kernel/fasttimer.c:173:
+	if ((trig_wrap && !time_wrap) || (r_time1 < trig)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 4)
#350: FILE: arch/cris/arch-v32/kernel/fasttimer.c:180:
+	} else {
[...]
     trig_cfg.tmr = regk_timer_off;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tmp"
#379: FILE: arch/cris/arch-v32/kernel/fasttimer.c:210:
+	while (tmp != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: braces {} should be used on all arms of this statement
#380: FILE: arch/cris/arch-v32/kernel/fasttimer.c:211:
+		if (tmp == t) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#381: FILE: arch/cris/arch-v32/kernel/fasttimer.c:212:
+			printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#383: FILE: arch/cris/arch-v32/kernel/fasttimer.c:214:
+				"timer name: %s data: 0x%08lX already "
+				"in list!\n", name, data);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 8)
#386: FILE: arch/cris/arch-v32/kernel/fasttimer.c:217:
+		} else
         tmp = tmp->next;

CHECK:BRACES: Unbalanced braces around else statement
#386: FILE: arch/cris/arch-v32/kernel/fasttimer.c:217:
+		} else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 4)
#400: FILE: arch/cris/arch-v32/kernel/fasttimer.c:230:
+	if (t->tv_expires.tv_usec > 1000000) {
     t->tv_expires.tv_usec -= 1000000;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: arch/cris/arch-v32/kernel/fasttimer.c:240:
+  if (tmp == NULL || fasttime_cmp(&t->tv_expires, &tmp->tv_expires) < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#413: FILE: arch/cris/arch-v32/kernel/fasttimer.c:240:
+  if (tmp == NULL || fasttime_cmp(&t->tv_expires, &tmp->tv_expires) < 0) {
[...]
     t->prev = NULL;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tmp"
#413: FILE: arch/cris/arch-v32/kernel/fasttimer.c:240:
+  if (tmp == NULL || fasttime_cmp(&t->tv_expires, &tmp->tv_expires) < 0) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: arch/cris/arch-v32/kernel/fasttimer.c:343:
+  REG_WR(timer, regi_timer0, rw_intr_mask, intr_mask);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#516: FILE: arch/cris/arch-v32/kernel/fasttimer.c:366:
+		D1(printk(KERN_DEBUG

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 6)
#521: FILE: arch/cris/arch-v32/kernel/fasttimer.c:369:
+		if (fasttime_cmp(&t->tv_expires, &tv) <= 0) {
[...]
       timer_expired_log[fast_timers_expired % NUM_TIMER_STATS] = *t;

CHECK:BRACES: braces {} should be used on all arms of this statement
#561: FILE: arch/cris/arch-v32/kernel/fasttimer.c:395:
+			if (f != NULL) {
[...]
+			} else
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "f"
#561: FILE: arch/cris/arch-v32/kernel/fasttimer.c:395:
+			if (f != NULL) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#563: FILE: arch/cris/arch-v32/kernel/fasttimer.c:397:
+				 * enabled. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 8)
#567: FILE: arch/cris/arch-v32/kernel/fasttimer.c:401:
+			} else
         DEBUG_LOG("!trimertrig %i function==NULL!\n", fast_timer_ints);

CHECK:BRACES: Unbalanced braces around else statement
#567: FILE: arch/cris/arch-v32/kernel/fasttimer.c:401:
+			} else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 6)
#573: FILE: arch/cris/arch-v32/kernel/fasttimer.c:403:
+		} else {
[...]
       D1(printk(".\n"));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "t"
#582: FILE: arch/cris/arch-v32/kernel/fasttimer.c:409:
+		if (t != NULL) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 10)
#604: FILE: arch/cris/arch-v32/kernel/fasttimer.c:423:
+				if (!fast_timer_running) {
[...]
           timer_started_log[fast_timers_started % NUM_TIMER_STATS] = *t;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 8)
#615: FILE: arch/cris/arch-v32/kernel/fasttimer.c:430:
+			} else {
[...]
         D1(printk("e! %d\n", us));

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 4)
#629: FILE: arch/cris/arch-v32/kernel/fasttimer.c:441:
+	if (!t)
     D1(printk("ttrig stop!\n"));

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#667: FILE: arch/cris/arch-v32/kernel/fasttimer.c:464:
+	 * somewhat redundant since the timer is what wakes us up.) */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 4)
#706: FILE: arch/cris/arch-v32/kernel/fasttimer.c:502:
+	if (!offset || !used) {
     do_gettimeofday_fast(&tv);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 8)
#725: FILE: arch/cris/arch-v32/kernel/fasttimer.c:532:
+			if (debug_log_cnt_wrapped)
         i = debug_log_cnt;

WARNING:SPLIT_STRING: quoted string split across lines
#786: FILE: arch/cris/arch-v32/kernel/fasttimer.c:627:
       used += sprintf(bigbuf + used, "%-14s s: %6lu.%06lu e: %6lu.%06lu "
+			"d: %6li us data: 0x%08lX"

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#826: FILE: arch/cris/arch-v32/kernel/fasttimer.c:719:
+  printk(KERN_DEBUG "fast_timer_test() %is %06i\n", tv.tv_jiff, tv.tv_usec);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#826: FILE: arch/cris/arch-v32/kernel/fasttimer.c:719:
+  printk(KERN_DEBUG "fast_timer_test() %is %06i\n", tv.tv_jiff, tv.tv_usec);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'fast_timer_test', this function's name, in a string
#826: FILE: arch/cris/arch-v32/kernel/fasttimer.c:719:
+  printk(KERN_DEBUG "fast_timer_test() %is %06i\n", tv.tv_jiff, tv.tv_usec);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#831: FILE: arch/cris/arch-v32/kernel/fasttimer.c:723:
+    printk(KERN_DEBUG "%i %i %i %i %i\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#831: FILE: arch/cris/arch-v32/kernel/fasttimer.c:723:
+    printk(KERN_DEBUG "%i %i %i %i %i\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#832: FILE: arch/cris/arch-v32/kernel/fasttimer.c:724:
+    printk(KERN_DEBUG "%i %i %i %i %i\n",
+      j_u[j], j_u[j+1], j_u[j+2], j_u[j+3], j_u[j+4]);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#832: FILE: arch/cris/arch-v32/kernel/fasttimer.c:724:
+      j_u[j], j_u[j+1], j_u[j+2], j_u[j+3], j_u[j+4]);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#832: FILE: arch/cris/arch-v32/kernel/fasttimer.c:724:
+      j_u[j], j_u[j+1], j_u[j+2], j_u[j+3], j_u[j+4]);
                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#832: FILE: arch/cris/arch-v32/kernel/fasttimer.c:724:
+      j_u[j], j_u[j+1], j_u[j+2], j_u[j+3], j_u[j+4]);
                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#832: FILE: arch/cris/arch-v32/kernel/fasttimer.c:724:
+      j_u[j], j_u[j+1], j_u[j+2], j_u[j+3], j_u[j+4]);
                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#832: FILE: arch/cris/arch-v32/kernel/fasttimer.c:724:
+      j_u[j], j_u[j+1], j_u[j+2], j_u[j+3], j_u[j+4]);
                                                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#843: FILE: arch/cris/arch-v32/kernel/fasttimer.c:729:
+    printk(KERN_DEBUG "%i.%i %i.%i %i.%i %i.%i %i.%i\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#843: FILE: arch/cris/arch-v32/kernel/fasttimer.c:729:
+    printk(KERN_DEBUG "%i.%i %i.%i %i.%i %i.%i %i.%i\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#844: FILE: arch/cris/arch-v32/kernel/fasttimer.c:730:
+    printk(KERN_DEBUG "%i.%i %i.%i %i.%i %i.%i %i.%i\n",
+			tv_exp[j].tv_jiff, tv_exp[j].tv_usec,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#845: FILE: arch/cris/arch-v32/kernel/fasttimer.c:731:
+			tv_exp[j+1].tv_jiff, tv_exp[j+1].tv_usec,
 			        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#845: FILE: arch/cris/arch-v32/kernel/fasttimer.c:731:
+			tv_exp[j+1].tv_jiff, tv_exp[j+1].tv_usec,
 			                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#846: FILE: arch/cris/arch-v32/kernel/fasttimer.c:732:
+			tv_exp[j+2].tv_jiff, tv_exp[j+2].tv_usec,
 			        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#846: FILE: arch/cris/arch-v32/kernel/fasttimer.c:732:
+			tv_exp[j+2].tv_jiff, tv_exp[j+2].tv_usec,
 			                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#847: FILE: arch/cris/arch-v32/kernel/fasttimer.c:733:
+			tv_exp[j+3].tv_jiff, tv_exp[j+3].tv_usec,
 			        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#847: FILE: arch/cris/arch-v32/kernel/fasttimer.c:733:
+			tv_exp[j+3].tv_jiff, tv_exp[j+3].tv_usec,
 			                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#848: FILE: arch/cris/arch-v32/kernel/fasttimer.c:734:
+			tv_exp[j+4].tv_jiff, tv_exp[j+4].tv_usec);
 			        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#848: FILE: arch/cris/arch-v32/kernel/fasttimer.c:734:
+			tv_exp[j+4].tv_jiff, tv_exp[j+4].tv_usec);
 			                             ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#864: FILE: arch/cris/arch-v32/kernel/fasttimer.c:764:
+	printk(KERN_INFO "Timers started    %is %06i\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#865: FILE: arch/cris/arch-v32/kernel/fasttimer.c:765:
+	printk(KERN_INFO "Timers started    %is %06i\n",
+		tv0.tv_jiff, tv0.tv_usec);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#866: FILE: arch/cris/arch-v32/kernel/fasttimer.c:766:
+	printk(KERN_INFO "Timers started at %is %06i\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#867: FILE: arch/cris/arch-v32/kernel/fasttimer.c:767:
+	printk(KERN_INFO "Timers started at %is %06i\n",
+		tv1.tv_jiff, tv1.tv_usec);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#868: FILE: arch/cris/arch-v32/kernel/fasttimer.c:768:
+	printk(KERN_INFO "Timers done       %is %06i\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#869: FILE: arch/cris/arch-v32/kernel/fasttimer.c:769:
+	printk(KERN_INFO "Timers done       %is %06i\n",
+		tv2.tv_jiff, tv2.tv_usec);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#915: FILE: arch/cris/arch-v32/kernel/fasttimer.c:824:
+    fasttimer_proc_entry = create_proc_entry("fasttimer", 0, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#916: FILE: arch/cris/arch-v32/kernel/fasttimer.c:825:
+    if (fasttimer_proc_entry)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#916: FILE: arch/cris/arch-v32/kernel/fasttimer.c:825:
+    if (fasttimer_proc_entry)
+      fasttimer_proc_entry->read_proc = proc_fasttimer_read;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#917: FILE: arch/cris/arch-v32/kernel/fasttimer.c:826:
+      fasttimer_proc_entry->read_proc = proc_fasttimer_read;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#927: FILE: arch/cris/arch-v32/kernel/fasttimer.c:831:
+			printk(KERN_ERR "err: fasttimer irq\n");

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#936: FILE: arch/cris/arch-v32/kernel/fasttimer.c:840:
+__initcall(fast_timer_init);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000342164.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 39 warnings, 28 checks, 859 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000342164.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
