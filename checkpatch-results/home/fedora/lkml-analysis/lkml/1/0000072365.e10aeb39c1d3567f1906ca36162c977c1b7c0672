WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
Gitweb:     http://git.kernel.org/tip/0a02ad9331dd4db56c29c60db2e99c4daaad8a48

WARNING:TYPO_SPELLING: 'chello' may be misspelled - perhaps 'cello'?
#60: 
Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
                                 ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#80: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#159: FILE: tools/perf/builtin-sched.c:1:
+#include "builtin.h"

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:STATIC_CONST: Move const after static - use 'static const char'
#174: FILE: tools/perf/builtin-sched.c:16:
+static char		const *input_name = "perf.data";

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#179: FILE: tools/perf/builtin-sched.c:21:
+static unsigned long	total = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#180: FILE: tools/perf/builtin-sched.c:22:
+static unsigned long	total_comm = 0;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#188: FILE: tools/perf/builtin-sched.c:30:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: tools/perf/builtin-sched.c:39:
+	dump_printf("%p [%p]: PERF_EVENT_COMM: %s:%d\n",
+		(void *)(offset + head),

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!thread"
#201: FILE: tools/perf/builtin-sched.c:43:
+	if (thread == NULL ||

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#243: FILE: tools/perf/builtin-sched.c:85:
+	dump_printf("%p [%p]: PERF_EVENT_SAMPLE (IP, %d): %d/%d: %p period: %Ld\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#244: FILE: tools/perf/builtin-sched.c:86:
+	dump_printf("%p [%p]: PERF_EVENT_SAMPLE (IP, %d): %d/%d: %p period: %Ld\n",
+		(void *)(offset + head),

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!thread"
#253: FILE: tools/perf/builtin-sched.c:95:
+	if (thread == NULL) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#270: FILE: tools/perf/builtin-sched.c:112:
+	} else if (cpumode == PERF_EVENT_MISC_USER) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#362: FILE: tools/perf/builtin-sched.c:204:
+		die("No trace sample to read. Did you call perf record "
+		    "without -R?");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#398: FILE: tools/perf/builtin-sched.c:240:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#400: FILE: tools/perf/builtin-sched.c:242:
+	if (!size || process_event(event, offset, head) < 0) {
+

WARNING:TYPO_SPELLING: 'tha' may be misspelled - perhaps 'than'?
#444: FILE: tools/perf/builtin-sched.c:286:
+		 * Special case: if there's an argument left then assume tha
 		                                                         ^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#451: FILE: tools/perf/builtin-sched.c:293:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#464: FILE: tools/perf/builtin.h:19:
+extern int cmd_sched(int argc, const char **argv, const char *prefix);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#465: FILE: tools/perf/builtin.h:20:
+extern int cmd_list(int argc, const char **argv, const char *prefix);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#473: FILE: tools/perf/builtin.h:26:
+extern int cmd_version(int argc, const char **argv, const char *prefix);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000072365.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 8 warnings, 12 checks, 385 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000072365.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
