WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
and new suite "memcpy": measurements performance of memcpy(2) like function.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#62: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#67: FILE: tools/perf/bench/mem-memcpy.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#101: FILE: tools/perf/bench/mem-memcpy.c:35:
+static int use_clockcycle = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#103: FILE: tools/perf/bench/mem-memcpy.c:37:
+typedef unsigned long int clockcycle_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#103: FILE: tools/perf/bench/mem-memcpy.c:37:
+typedef unsigned long int clockcycle_t;

WARNING:UNNECESSARY_INT: Prefer 'long' over 'long int' as the int is unnecessary
#109: FILE: tools/perf/bench/mem-memcpy.c:43:
+	long int ret;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: tools/perf/bench/mem-memcpy.c:57:
+	OPT_STRING('l', "length", &length_str, "1MB",
+		    "Specify length of memory to copy. "

WARNING:SPLIT_STRING: quoted string split across lines
#124: FILE: tools/perf/bench/mem-memcpy.c:58:
+		    "Specify length of memory to copy. "
+		    "available unit: B, MB, GB (upper and lower)"),

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#126: FILE: tools/perf/bench/mem-memcpy.c:60:
+	OPT_STRING('r', "routine", &routine, "default",
+		    "Specify routine to copy"),

WARNING:TYPO_SPELLING: 'architecuture' may be misspelled - perhaps 'architecture'?
#129: FILE: tools/perf/bench/mem-memcpy.c:63:
+	 * TODO: This should be expanded to any architecuture
 	                                        ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#240: FILE: tools/perf/bench/mem-memcpy.c:174:
+^I * ^Igettimeofday(&diff, NULL);$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#277: FILE: tools/perf/bench/mem-memcpy.c:211:
+	if (use_clockcycle) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000048496.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 10 warnings, 2 checks, 258 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000048496.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
