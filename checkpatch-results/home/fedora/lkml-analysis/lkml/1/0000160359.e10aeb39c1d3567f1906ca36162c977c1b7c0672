WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#149: FILE: kernel/trace/trace_events_stage_1.h:33:
+#define TRACE_FIELD_SPECIAL(type_item, item, cmd) \
+	type_item;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#162: FILE: kernel/trace/trace_events_stage_2.h:43:
+#define TRACE_FIELD_SPECIAL(type_item, item, cmd) \
+	field->item,

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'item' may be better as '(item)' to avoid precedence issues
#162: FILE: kernel/trace/trace_events_stage_2.h:43:
+#define TRACE_FIELD_SPECIAL(type_item, item, cmd) \
+	field->item,

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#177: FILE: kernel/trace/trace_events_stage_3.h:151:
+#define TRACE_FIELD(type, item, assign)\
+	entry->item = assign;

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'item' may be better as '(item)' to avoid precedence issues
#177: FILE: kernel/trace/trace_events_stage_3.h:151:
+#define TRACE_FIELD(type, item, assign)\
+	entry->item = assign;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#177: FILE: kernel/trace/trace_events_stage_3.h:151:
+#define TRACE_FIELD(type, item, assign)\
+	entry->item = assign;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#187: FILE: kernel/trace/trace_events_stage_3.h:161:
+#define TRACE_FIELD_SPECIAL(type_item, item, cmd) \
+	cmd;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000160359.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 3 warnings, 2 checks, 53 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000160359.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
