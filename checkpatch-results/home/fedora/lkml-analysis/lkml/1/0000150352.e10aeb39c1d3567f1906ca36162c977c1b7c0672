WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
This patch modifies the ptrace code to use the new wrapper routines around the 

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#103: FILE: arch/x86/kernel/ptrace.c:455:
+static int decode_dr7(unsigned long dr7, int bpnum, unsigned *len,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#104: FILE: arch/x86/kernel/ptrace.c:456:
+static int decode_dr7(unsigned long dr7, int bpnum, unsigned *len,
+		unsigned *type)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#104: FILE: arch/x86/kernel/ptrace.c:456:
+		unsigned *type)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around current->thread
#126: FILE: arch/x86/kernel/ptrace.c:467:
+	struct thread_struct *thread = &(current->thread);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tsk->thread
#154: FILE: arch/x86/kernel/ptrace.c:486:
+	struct thread_struct *thread = &(tsk->thread);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#171: FILE: arch/x86/kernel/ptrace.c:498:
+		unsigned len, type;

CHECK:BRACES: braces {} should be used on all arms of this statement
#227: FILE: arch/x86/kernel/ptrace.c:511:
+		if (bp->triggered)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#229: FILE: arch/x86/kernel/ptrace.c:513:
+		else {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tsk->thread
#257: FILE: arch/x86/kernel/ptrace.c:538:
+	struct thread_struct *thread = &(tsk->thread);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tsk->thread
#278: FILE: arch/x86/kernel/ptrace.c:559:
+	struct thread_struct *thread = &(tsk->thread);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#302: FILE: arch/x86/kernel/ptrace.c:583:
+			rc = __modify_user_hw_breakpoint(n, tsk,
+							  thread->hbp[n]);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*thread->hbp[n])...) over kzalloc(sizeof(struct hw_breakpoint)...)
#305: FILE: arch/x86/kernel/ptrace.c:586:
+		thread->hbp[n] = kzalloc(sizeof(struct hw_breakpoint),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: arch/x86/kernel/ptrace.c:587:
+		thread->hbp[n] = kzalloc(sizeof(struct hw_breakpoint),
+								GFP_KERNEL);

CHECK:BRACES: braces {} should be used on all arms of this statement
#307: FILE: arch/x86/kernel/ptrace.c:588:
+		if (!thread->hbp[n]) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#310: FILE: arch/x86/kernel/ptrace.c:591:
+		} else

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#328: FILE: arch/x86/kernel/ptrace.c:921:
+			tmp = ptrace_get_debugreg(child, addr/sizeof(data));
 			                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#337: FILE: arch/x86/kernel/ptrace.c:939:
+						addr/sizeof(data), data);
 						    ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000150352.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 14 checks, 279 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000150352.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
