WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#73: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#78: FILE: drivers/input/touchscreen/wm97xx-core.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#135: FILE: drivers/input/touchscreen/wm97xx-core.c:58:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#213: FILE: drivers/input/touchscreen/wm97xx-core.c:136:
+	if (wm->id == WM9713_ID2 &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: drivers/input/touchscreen/wm97xx-core.c:197:
+void wm97xx_set_gpio(struct wm97xx *wm, u32 gpio,
+				enum wm97xx_gpio_status status)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#299: FILE: drivers/input/touchscreen/wm97xx-core.c:222:
+void wm97xx_config_gpio(struct wm97xx *wm, u32 gpio, enum wm97xx_gpio_dir dir,
+		   enum wm97xx_gpio_pol pol, enum wm97xx_gpio_sticky sticky,

WARNING:LINE_SPACING: Missing a blank line after declarations
#358: FILE: drivers/input/touchscreen/wm97xx-core.c:281:
+		u16 status, pol;
+		mutex_lock(&wm->codec_mutex);

WARNING:TYPO_SPELLING: 'availiable' may be misspelled - perhaps 'available'?
#388: FILE: drivers/input/touchscreen/wm97xx-core.c:311:
+			/* Data is not availiable immediately on pen down */
 			               ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#407: FILE: drivers/input/touchscreen/wm97xx-core.c:330:
+ * can take upto 1ms to clear the interrupt source. We schedule a task
             ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#417: FILE: drivers/input/touchscreen/wm97xx-core.c:340:
+	struct wm97xx *wm = dev_id;
+	wm->mach_ops->irq_enable(wm, 0);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#430: FILE: drivers/input/touchscreen/wm97xx-core.c:353:
+	 * provided. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#431: FILE: drivers/input/touchscreen/wm97xx-core.c:354:
+	BUG_ON(!wm->mach_ops->irq_enable);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#443: FILE: drivers/input/touchscreen/wm97xx-core.c:366:
+		BUG_ON(!wm->mach_ops->irq_gpio);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#446: FILE: drivers/input/touchscreen/wm97xx-core.c:369:
+		wm97xx_reg_write(wm, AC97_MISC_AFE,
+				reg & ~(wm->mach_ops->irq_gpio));

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#474: FILE: drivers/input/touchscreen/wm97xx-core.c:397:
+			/* We need high frequency updates only while
+			* pen is down, the user never will be able to

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#509: FILE: drivers/input/touchscreen/wm97xx-core.c:432:
+/*
+* The touchscreen sample reader.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#516: FILE: drivers/input/touchscreen/wm97xx-core.c:439:
+	BUG_ON(!wm->codec);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!wm->ts_workq"
#539: FILE: drivers/input/touchscreen/wm97xx-core.c:462:
+	if (wm->ts_workq == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#591: FILE: drivers/input/touchscreen/wm97xx-core.c:514:
+			BUG_ON(!wm->mach_ops->irq_gpio);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*wm)...) over kzalloc(sizeof(struct wm97xx)...)
#624: FILE: drivers/input/touchscreen/wm97xx-core.c:547:
+	wm = kzalloc(sizeof(struct wm97xx), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!wm->input_dev"
#669: FILE: drivers/input/touchscreen/wm97xx-core.c:592:
+	if (wm->input_dev == NULL) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#718: FILE: drivers/input/touchscreen/wm97xx-core.c:641:
+	 * extensions) */

WARNING:LINE_SPACING: Missing a blank line after declarations
#783: FILE: drivers/input/touchscreen/wm97xx-core.c:706:
+			u16 reg;
+			reg = wm97xx_reg_read(wm, AC97_EXTENDED_MID) & 0x7fff;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#838: FILE: drivers/input/touchscreen/wm97xx-core.c:761:
+^I.name = ^I"ac97",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#839: FILE: drivers/input/touchscreen/wm97xx-core.c:762:
+^I.bus = ^I^I&ac97_bus_type,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#840: FILE: drivers/input/touchscreen/wm97xx-core.c:763:
+^I.owner = ^ITHIS_MODULE,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#841: FILE: drivers/input/touchscreen/wm97xx-core.c:764:
+^I.probe = ^Iwm97xx_probe,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#842: FILE: drivers/input/touchscreen/wm97xx-core.c:765:
+^I.remove = ^Iwm97xx_remove,$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#870: FILE: include/linux/wm97xx.h:1:
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#892: FILE: include/linux/wm97xx.h:23:
+#define AC97_WM97XX_DIGITISER_RD ^I0x7a$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#916: FILE: include/linux/wm97xx.h:47:
+#define WM97XX_RATE(i)		(((i & 3) << 8) | ((i & 4) ? 0xf0 : 0))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'i' may be better as '(i)' to avoid precedence issues
#916: FILE: include/linux/wm97xx.h:47:
+#define WM97XX_RATE(i)		(((i & 3) << 8) | ((i & 4) ? 0xf0 : 0))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'i' may be better as '(i)' to avoid precedence issues
#917: FILE: include/linux/wm97xx.h:48:
+#define WM97XX_DELAY(i)		((i << 4) & 0x00f0)	/* sample delay times */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'i' may be better as '(i)' to avoid precedence issues
#920: FILE: include/linux/wm97xx.h:51:
+#define WM97XX_SLT(i)		((i - 5) & 0x7)	/* panel slot (5-11) */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#934: FILE: include/linux/wm97xx.h:65:
+
+

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#939: FILE: include/linux/wm97xx.h:70:
+#define WM9712_PIL		0x0100	/* current used for pressure measurement. set 400uA else 200uA */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#943: FILE: include/linux/wm97xx.h:74:
+#define WM9712_RPU(i)		(i&0x3f)	/* internal pull up on pen detect (64k / rpu) */
                      		  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'i' may be better as '(i)' to avoid precedence issues
#943: FILE: include/linux/wm97xx.h:74:
+#define WM9712_RPU(i)		(i&0x3f)	/* internal pull up on pen detect (64k / rpu) */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'i' may be better as '(i)' to avoid precedence issues
#944: FILE: include/linux/wm97xx.h:75:
+#define WM9712_PD(i)		(0x1 << i)	/* power management */

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#956: FILE: include/linux/wm97xx.h:87:
+#define WM9705_PIL		0x0080	/* current used for pressure measurement. set 400uA else 200uA */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'i' may be better as '(i)' to avoid precedence issues
#961: FILE: include/linux/wm97xx.h:92:
+#define WM9705_PDD(i)		(i & 0x000f)	/* pen detect comparator threshold */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#963: FILE: include/linux/wm97xx.h:94:
+
+

CHECK:BIT_MACRO: Prefer using the BIT macro
#990: FILE: include/linux/wm97xx.h:121:
+#define WM97XX_GPIO_1		(1 << 1)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#991: FILE: include/linux/wm97xx.h:122:
+#define WM97XX_GPIO_2		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#992: FILE: include/linux/wm97xx.h:123:
+#define WM97XX_GPIO_3		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#993: FILE: include/linux/wm97xx.h:124:
+#define WM97XX_GPIO_4		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#994: FILE: include/linux/wm97xx.h:125:
+#define WM97XX_GPIO_5		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#995: FILE: include/linux/wm97xx.h:126:
+#define WM97XX_GPIO_6		(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#996: FILE: include/linux/wm97xx.h:127:
+#define WM97XX_GPIO_7		(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#997: FILE: include/linux/wm97xx.h:128:
+#define WM97XX_GPIO_8		(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#998: FILE: include/linux/wm97xx.h:129:
+#define WM97XX_GPIO_9		(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#999: FILE: include/linux/wm97xx.h:130:
+#define WM97XX_GPIO_10		(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1000: FILE: include/linux/wm97xx.h:131:
+#define WM97XX_GPIO_11		(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1001: FILE: include/linux/wm97xx.h:132:
+#define WM97XX_GPIO_12		(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1002: FILE: include/linux/wm97xx.h:133:
+#define WM97XX_GPIO_13		(1 << 13)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1003: FILE: include/linux/wm97xx.h:134:
+#define WM97XX_GPIO_14		(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1004: FILE: include/linux/wm97xx.h:135:
+#define WM97XX_GPIO_15		(1 << 15)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1006: FILE: include/linux/wm97xx.h:137:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1009: FILE: include/linux/wm97xx.h:140:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1019: FILE: include/linux/wm97xx.h:150:
+/* The pen is down (RC_VALID implies RC_PENDOWN, but sometimes it is helpful
+   to tell the handler that the pen is down but we don't know yet his coords,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1020: FILE: include/linux/wm97xx.h:151:
+   so the handler should not sleep or wait for pendown irq) */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1030: FILE: include/linux/wm97xx.h:161:
+    int x;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1031: FILE: include/linux/wm97xx.h:162:
+    int y;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1032: FILE: include/linux/wm97xx.h:163:
+    int p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1039: FILE: include/linux/wm97xx.h:170:
+    WM97XX_GPIO_HIGH,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1040: FILE: include/linux/wm97xx.h:171:
+    WM97XX_GPIO_LOW$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1047: FILE: include/linux/wm97xx.h:178:
+    WM97XX_GPIO_IN,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1048: FILE: include/linux/wm97xx.h:179:
+    WM97XX_GPIO_OUT$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1055: FILE: include/linux/wm97xx.h:186:
+    WM97XX_GPIO_POL_HIGH,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1056: FILE: include/linux/wm97xx.h:187:
+    WM97XX_GPIO_POL_LOW$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1063: FILE: include/linux/wm97xx.h:194:
+    WM97XX_GPIO_STICKY,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1064: FILE: include/linux/wm97xx.h:195:
+    WM97XX_GPIO_NOTSTICKY$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1071: FILE: include/linux/wm97xx.h:202:
+    WM97XX_GPIO_WAKE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1072: FILE: include/linux/wm97xx.h:203:
+    WM97XX_GPIO_NOWAKE$

WARNING:SPACING: Unnecessary space before function pointer arguments
#1098: FILE: include/linux/wm97xx.h:229:
+	int (*poll_sample) (struct wm97xx *, int adcsel, int *sample);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct wm97xx *' should also have an identifier name
#1098: FILE: include/linux/wm97xx.h:229:
+	int (*poll_sample) (struct wm97xx *, int adcsel, int *sample);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: Unnecessary space before function pointer arguments
#1101: FILE: include/linux/wm97xx.h:232:
+	int (*poll_touch) (struct wm97xx *, struct wm97xx_data *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct wm97xx *' should also have an identifier name
#1101: FILE: include/linux/wm97xx.h:232:
+	int (*poll_touch) (struct wm97xx *, struct wm97xx_data *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct wm97xx_data *' should also have an identifier name
#1101: FILE: include/linux/wm97xx.h:232:
+	int (*poll_touch) (struct wm97xx *, struct wm97xx_data *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1103: FILE: include/linux/wm97xx.h:234:
+	int (*acc_enable) (struct wm97xx *, int enable);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct wm97xx *' should also have an identifier name
#1103: FILE: include/linux/wm97xx.h:234:
+	int (*acc_enable) (struct wm97xx *, int enable);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1104: FILE: include/linux/wm97xx.h:235:
+	void (*phy_init) (struct wm97xx *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct wm97xx *' should also have an identifier name
#1104: FILE: include/linux/wm97xx.h:235:
+	void (*phy_init) (struct wm97xx *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1105: FILE: include/linux/wm97xx.h:236:
+	void (*dig_enable) (struct wm97xx *, int enable);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct wm97xx *' should also have an identifier name
#1105: FILE: include/linux/wm97xx.h:236:
+	void (*dig_enable) (struct wm97xx *, int enable);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1106: FILE: include/linux/wm97xx.h:237:
+	void (*dig_restore) (struct wm97xx *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct wm97xx *' should also have an identifier name
#1106: FILE: include/linux/wm97xx.h:237:
+	void (*dig_restore) (struct wm97xx *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1107: FILE: include/linux/wm97xx.h:238:
+	void (*aux_prepare) (struct wm97xx *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct wm97xx *' should also have an identifier name
#1107: FILE: include/linux/wm97xx.h:238:
+	void (*aux_prepare) (struct wm97xx *);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1110: FILE: include/linux/wm97xx.h:241:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1113: FILE: include/linux/wm97xx.h:244:
+struct wm97xx_mach_ops {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'transmited' may be misspelled - perhaps 'transmitted'?
#1114: FILE: include/linux/wm97xx.h:245:
+	/* accelerated touch readback - coords are transmited on AC97 link */
 	                                           ^^^^^^^^^^

WARNING:SPACING: Unnecessary space before function pointer arguments
#1116: FILE: include/linux/wm97xx.h:247:
+	void (*acc_pen_up) (struct wm97xx *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct wm97xx *' should also have an identifier name
#1116: FILE: include/linux/wm97xx.h:247:
+	void (*acc_pen_up) (struct wm97xx *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1117: FILE: include/linux/wm97xx.h:248:
+	int (*acc_pen_down) (struct wm97xx *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct wm97xx *' should also have an identifier name
#1117: FILE: include/linux/wm97xx.h:248:
+	int (*acc_pen_down) (struct wm97xx *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1118: FILE: include/linux/wm97xx.h:249:
+	int (*acc_startup) (struct wm97xx *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct wm97xx *' should also have an identifier name
#1118: FILE: include/linux/wm97xx.h:249:
+	int (*acc_startup) (struct wm97xx *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1119: FILE: include/linux/wm97xx.h:250:
+	void (*acc_shutdown) (struct wm97xx *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct wm97xx *' should also have an identifier name
#1119: FILE: include/linux/wm97xx.h:250:
+	void (*acc_shutdown) (struct wm97xx *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1122: FILE: include/linux/wm97xx.h:253:
+	void (*irq_enable) (struct wm97xx *, int enable);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct wm97xx *' should also have an identifier name
#1122: FILE: include/linux/wm97xx.h:253:
+	void (*irq_enable) (struct wm97xx *, int enable);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1128: FILE: include/linux/wm97xx.h:259:
+	void (*pre_sample) (int);  /* function to run before sampling */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1128: FILE: include/linux/wm97xx.h:259:
+	void (*pre_sample) (int);  /* function to run before sampling */

WARNING:SPACING: Unnecessary space before function pointer arguments
#1129: FILE: include/linux/wm97xx.h:260:
+	void (*post_sample) (int);  /* function to run after sampling */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1129: FILE: include/linux/wm97xx.h:260:
+	void (*post_sample) (int);  /* function to run after sampling */

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#1142: FILE: include/linux/wm97xx.h:273:
+	struct mutex codec_mutex;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1162: FILE: include/linux/wm97xx.h:293:
+void wm97xx_set_gpio(struct wm97xx *wm, u32 gpio,
+			  enum wm97xx_gpio_status status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1164: FILE: include/linux/wm97xx.h:295:
+void wm97xx_config_gpio(struct wm97xx *wm, u32 gpio,
+				     enum wm97xx_gpio_dir dir,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct wm97xx *' should also have an identifier name
#1177: FILE: include/linux/wm97xx.h:308:
+int wm97xx_register_mach_ops(struct wm97xx *, struct wm97xx_mach_ops *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct wm97xx_mach_ops *' should also have an identifier name
#1177: FILE: include/linux/wm97xx.h:308:
+int wm97xx_register_mach_ops(struct wm97xx *, struct wm97xx_mach_ops *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct wm97xx *' should also have an identifier name
#1178: FILE: include/linux/wm97xx.h:309:
+void wm97xx_unregister_mach_ops(struct wm97xx *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000300812.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 72 warnings, 39 checks, 1097 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000300812.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
