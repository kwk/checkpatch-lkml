WARNING:UNDOCUMENTED_DT_STRING: DT compatible string "fsl,irda" appears un-documented -- check /home/fedora/lkml-analysis/linux/Documentation/devicetree/bindings/
#70: FILE: arch/powerpc/boot/dts/mpc885ads.dts:184:
+				compatible = "fsl,irda";

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void init_irda_ioports() should probably be void init_irda_ioports(void)
#107: FILE: arch/powerpc/platforms/8xx/mpc885ads_setup.c:330:
+static void init_irda_ioports()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#111: FILE: arch/powerpc/platforms/8xx/mpc885ads_setup.c:334:
+	unsigned *bcsr_io;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bcsr_io"
#115: FILE: arch/powerpc/platforms/8xx/mpc885ads_setup.c:338:
+	if (bcsr_io == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#116: FILE: arch/powerpc/platforms/8xx/mpc885ads_setup.c:339:
+		printk(KERN_CRIT "Could not remap BCSR1\n");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#121: FILE: arch/powerpc/platforms/8xx/mpc885ads_setup.c:344:
+	clrbits32(bcsr_io,BCSR1_IRDAEN);
 	                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!model"
#174: FILE: arch/powerpc/sysdev/fsl_soc.c:1127:
+		if (model == NULL)

CHECK:SPACING: No space is necessary after a cast
#177: FILE: arch/powerpc/sysdev/fsl_soc.c:1130:
+		id = (u32 *) get_property(np, "device-id", NULL);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#192: FILE: arch/powerpc/sysdev/fsl_soc.c:1145:
+			r[2].start = r[2].end = irq_of_parse_and_map(np, 0);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#197: FILE: arch/powerpc/sysdev/fsl_soc.c:1150:
+				    platform_device_register_simple("fsl-cpm-scc:irda", i, &r[0], 3);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#219: FILE: drivers/net/irda/Kconfig:20:
+config 8XX_SIR
+	  tristate "mpc8xx SIR"
+	  depends on 8xx && IRDA
+
 comment "Dongle support"
 

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#239: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#244: FILE: drivers/net/irda/m8xx-sir.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#275: FILE: drivers/net/irda/m8xx-sir.c:32:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#276: FILE: drivers/net/irda/m8xx-sir.c:33:
+#include <asm/cacheflush.h>

WARNING:INCLUDE_LINUX: Use #include <linux/pgtable.h> instead of <asm/pgtable.h>
#279: FILE: drivers/net/irda/m8xx-sir.c:36:
+#include <asm/pgtable.h>

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#281: FILE: drivers/net/irda/m8xx-sir.c:38:
+#include <asm/bitops.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#282: FILE: drivers/net/irda/m8xx-sir.c:39:
+#include <asm/uaccess.h>

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#287: FILE: drivers/net/irda/m8xx-sir.c:44:
+/*
+ * Our netdevice.  There is only ever one of these.

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#324: FILE: drivers/net/irda/m8xx-sir.c:81:
+	spinlock_t lock;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#368: FILE: drivers/net/irda/m8xx-sir.c:125:
+			if (skb == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#369: FILE: drivers/net/irda/m8xx-sir.c:126:
+				printk(KERN_INFO

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#369: FILE: drivers/net/irda/m8xx-sir.c:126:
+			if (skb == NULL) {
+				printk(KERN_INFO

CHECK:SPACING: No space is necessary after a cast
#404: FILE: drivers/net/irda/m8xx-sir.c:161:
+	si->cur_rx = (cbd_t *) bdp;

CHECK:SPACING: No space is necessary after a cast
#461: FILE: drivers/net/irda/m8xx-sir.c:218:
+			si->dirty_tx = (cbd_t *) bdp;

WARNING:LINE_SPACING: Missing a blank line after declarations
#472: FILE: drivers/net/irda/m8xx-sir.c:229:
+			cpm8xx_t *cp = immr_map(im_cpm);
+			printk(KERN_INFO "restart TX\n");

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#472: FILE: drivers/net/irda/m8xx-sir.c:229:
+			printk(KERN_INFO "restart TX\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#481: FILE: drivers/net/irda/m8xx-sir.c:238:
+			out_be16(&cp->cp_cpcr,
+			    mk_cr_cmd(CPM_CR_CH_SCC2,

WARNING:SPACING: space prohibited before semicolon
#483: FILE: drivers/net/irda/m8xx-sir.c:240:
+			while (in_be16(&cp->cp_cpcr) & CPM_CR_FLG) ;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#483: FILE: drivers/net/irda/m8xx-sir.c:240:
+			while (in_be16(&cp->cp_cpcr) & CPM_CR_FLG) ;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#495: FILE: drivers/net/irda/m8xx-sir.c:252:
+	volatile scc_ahdlc_t *ahp = si->ahp;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#503: FILE: drivers/net/irda/m8xx-sir.c:260:
+	/*
+	 * Does this packet contain a request to change the interface

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#515: FILE: drivers/net/irda/m8xx-sir.c:272:
+	/*
+	 * If this is an empty frame, we can bypass a lot.

WARNING:LINE_SPACING: Missing a blank line after declarations
#538: FILE: drivers/net/irda/m8xx-sir.c:295:
+		struct irda_skb_cb *cb = (struct irda_skb_cb *)skb->cb;
+		xbofs =

WARNING:REPEATED_WORD: Possible repeated word: 'specified'
#562: FILE: drivers/net/irda/m8xx-sir.c:319:
+	/* If we have a mean turn-around time, impose the specified
+	 * specified delay.  We could shorten this by timing from

CHECK:SPACING: No space is necessary after a cast
#588: FILE: drivers/net/irda/m8xx-sir.c:345:
+	si->cur_tx = (cbd_t *) bdp;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#609: FILE: drivers/net/irda/m8xx-sir.c:366:
+				printk(KERN_INFO

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mpc8xx_irda_ioctl', this function's name, in a string
#610: FILE: drivers/net/irda/m8xx-sir.c:367:
+				       "mpc8xx_irda_ioctl: SIOCSBANDWIDTH: !netif_running\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:LINE_SPACING: Missing a blank line after declarations
#637: FILE: drivers/net/irda/m8xx-sir.c:394:
+	struct mpc8xx_irda *si = ndev->priv;
+	return &si->stats;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!si->sccp"
#651: FILE: drivers/net/irda/m8xx-sir.c:408:
+	if (si->sccp == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!si->ahp"
#657: FILE: drivers/net/irda/m8xx-sir.c:414:
+	if (si->ahp == NULL)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#667: FILE: drivers/net/irda/m8xx-sir.c:424:
+	volatile cpm8xx_t *cp = immr_map(im_cpm);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#669: FILE: drivers/net/irda/m8xx-sir.c:426:
+	volatile scc_ahdlc_t *ahp;

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#672: FILE: drivers/net/irda/m8xx-sir.c:429:
+	unsigned char *ba;
 	               ^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#677: FILE: drivers/net/irda/m8xx-sir.c:434:
+	if ((err = mpc8xx_irda_pd_setup(si)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#699: FILE: drivers/net/irda/m8xx-sir.c:456:
+	si->dirty_tx = si->cur_tx = si->tx_bd_base;

WARNING:SPACING: space prohibited before semicolon
#705: FILE: drivers/net/irda/m8xx-sir.c:462:
+	while (in_be16(&cp->cp_cpcr) & CPM_CR_FLG) ;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#705: FILE: drivers/net/irda/m8xx-sir.c:462:
+	while (in_be16(&cp->cp_cpcr) & CPM_CR_FLG) ;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#707: FILE: drivers/net/irda/m8xx-sir.c:464:
+	si->skb_cur = si->skb_dirty = 0;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#764: FILE: drivers/net/irda/m8xx-sir.c:521:
+	for (i = 0; i < CPM_IRDA_RX_PAGES; i++) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#767: FILE: drivers/net/irda/m8xx-sir.c:524:
+		ba = (unsigned char *)dma_alloc_coherent(NULL, PAGE_SIZE,
 		^^

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#767: FILE: drivers/net/irda/m8xx-sir.c:524:
+		ba = (unsigned char *)dma_alloc_coherent(NULL, PAGE_SIZE,

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#775: FILE: drivers/net/irda/m8xx-sir.c:532:
+			si->rx_vaddr[k++] = ba;
 			                    ^^

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#777: FILE: drivers/net/irda/m8xx-sir.c:534:
+			ba += CPM_IRDA_RX_FRSIZE;
 			^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#823: FILE: drivers/net/irda/m8xx-sir.c:580:
+	if ((err = mpc8xx_irda_startup(dev)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#880: FILE: drivers/net/irda/m8xx-sir.c:637:
+	if (!(ndev = alloc_irdadev(sizeof(struct mpc8xx_irda))))

CHECK:BRACES: braces {} should be used on all arms of this statement
#906: FILE: drivers/net/irda/m8xx-sir.c:663:
+	if (!err) {
[...]
+	} else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#908: FILE: drivers/net/irda/m8xx-sir.c:665:
+		printk(KERN_INFO "IrDA: Registered device %s\n", ndev->name);

CHECK:BRACES: Unbalanced braces around else statement
#909: FILE: drivers/net/irda/m8xx-sir.c:666:
+	} else

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#927: FILE: drivers/net/irda/m8xx-sir.c:684:
+	/*
+	 * We now know that the netdevice is no longer in use, and all

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#968: FILE: include/asm-ppc/commproc.h:620:
+/* Asynchronous HDLC Mode Parameter RAM.
+*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:NEW_TYPEDEFS: do not add new typedefs
#969: FILE: include/asm-ppc/commproc.h:621:
+typedef struct scc_ahdlc {

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#990: FILE: include/asm-ppc/commproc.h:642:
+/* SCC Mode Register (PMSR) as used by Ethernet.
+*/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#996: FILE: include/asm-ppc/commproc.h:648:
+/* SCC Event register as used by Asynchronous HDLC.
+*/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1009: FILE: include/asm-ppc/commproc.h:661:
+/* Buffer descriptor control/status used by AHDLC receive.
+*/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1025: FILE: include/asm-ppc/commproc.h:677:
+/* Buffer descriptor control/status used by AHDLC transmit.
+*/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000434655.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 42 warnings, 17 checks, 947 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000434655.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
