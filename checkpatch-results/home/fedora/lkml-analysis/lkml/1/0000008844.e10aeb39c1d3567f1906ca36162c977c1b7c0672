WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#66: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1217: FILE: drivers/acpi/processor_driver.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1218: FILE: drivers/acpi/processor_driver.c:2:
+ * acpi_processor.c - ACPI Processor Driver ($Revision: 71 $)

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1224: FILE: drivers/acpi/processor_driver.c:8:
+ *  ^I^I^I- Added processor hotplug support$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1239: FILE: drivers/acpi/processor_driver.c:23:
+ *  with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1240: FILE: drivers/acpi/processor_driver.c:24:
+ *  59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#1265: FILE: drivers/acpi/processor_driver.c:49:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/delay.h> instead of <asm/delay.h>
#1268: FILE: drivers/acpi/processor_driver.c:52:
+#include <asm/delay.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#1269: FILE: drivers/acpi/processor_driver.c:53:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/processor.h> instead of <asm/processor.h>
#1270: FILE: drivers/acpi/processor_driver.c:54:
+#include <asm/processor.h>

WARNING:INCLUDE_LINUX: Use #include <linux/smp.h> instead of <asm/smp.h>
#1271: FILE: drivers/acpi/processor_driver.c:55:
+#include <asm/smp.h>

WARNING:INCLUDE_LINUX: Use #include <linux/acpi.h> instead of <asm/acpi.h>
#1272: FILE: drivers/acpi/processor_driver.c:56:
+#include <asm/acpi.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1308: FILE: drivers/acpi/processor_driver.c:92:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#1345: FILE: drivers/acpi/processor_driver.c:129:
+                                Errata Handling$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1345: FILE: drivers/acpi/processor_driver.c:129:
+/* --------------------------------------------------------------------------
+                                Errata Handling

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1346: FILE: drivers/acpi/processor_driver.c:130:
+   -------------------------------------------------------------------------- */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1353: FILE: drivers/acpi/processor_driver.c:137:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1380: FILE: drivers/acpi/processor_driver.c:164:
+	switch (dev->revision) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1454: FILE: drivers/acpi/processor_driver.c:238:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1473: FILE: drivers/acpi/processor_driver.c:257:
+                              FS Interface (/proc)$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1473: FILE: drivers/acpi/processor_driver.c:257:
+/* --------------------------------------------------------------------------
+                              FS Interface (/proc)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1474: FILE: drivers/acpi/processor_driver.c:258:
+   -------------------------------------------------------------------------- */

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#1477: FILE: drivers/acpi/processor_driver.c:261:
+static struct proc_dir_entry *acpi_processor_dir = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1483: FILE: drivers/acpi/processor_driver.c:267:
+
+

WARNING:INDENTED_LABEL: labels should not be indented
#1500: FILE: drivers/acpi/processor_driver.c:284:
+      end:

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1514: FILE: drivers/acpi/processor_driver.c:298:
+
+

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1524: FILE: drivers/acpi/processor_driver.c:308:
+				 S_IRUGO, acpi_device_dir(device),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1532: FILE: drivers/acpi/processor_driver.c:316:
+				 S_IFREG | S_IRUGO | S_IWUSR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1541: FILE: drivers/acpi/processor_driver.c:325:
+				 S_IFREG | S_IRUGO | S_IWUSR,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1549: FILE: drivers/acpi/processor_driver.c:333:
+}
+static int acpi_processor_remove_fs(struct acpi_device *device)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1551: FILE: drivers/acpi/processor_driver.c:335:
+{
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1570: FILE: drivers/acpi/processor_driver.c:354:
+}
+static inline int acpi_processor_remove_fs(struct acpi_device *device)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1585: FILE: drivers/acpi/processor_driver.c:369:
+static int map_lapic_id(struct acpi_subtable_header *entry,
+		 u32 acpi_id, int *apic_id)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1621: FILE: drivers/acpi/processor_driver.c:405:
+static int map_lsapic_id(struct acpi_subtable_header *entry,
+		int device_declaration, u32 acpi_id, int *apic_id)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1632: FILE: drivers/acpi/processor_driver.c:416:
+	if (device_declaration) {
[...]
+	} else if (lsapic->processor_id == acpi_id)
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1634: FILE: drivers/acpi/processor_driver.c:418:
+			printk(KERN_ERR PREFIX

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1701: FILE: drivers/acpi/processor_driver.c:485:
+	if (header->type == ACPI_MADT_TYPE_LOCAL_APIC) {
[...]
+	} else if (header->type == ACPI_MADT_TYPE_LOCAL_SAPIC) {
[...]

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1709: FILE: drivers/acpi/processor_driver.c:493:
+	if (buffer.pointer)
+		kfree(buffer.pointer);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1733: FILE: drivers/acpi/processor_driver.c:517:
+                                 Driver Interface$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1733: FILE: drivers/acpi/processor_driver.c:517:
+/* --------------------------------------------------------------------------
+                                 Driver Interface

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1734: FILE: drivers/acpi/processor_driver.c:518:
+   -------------------------------------------------------------------------- */

CHECK:BRACES: Unbalanced braces around else statement
#1762: FILE: drivers/acpi/processor_driver.c:546:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1770: FILE: drivers/acpi/processor_driver.c:554:
+			printk(KERN_ERR PREFIX "Evaluating processor object\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#1786: FILE: drivers/acpi/processor_driver.c:570:
+		unsigned long long value;
+		status = acpi_evaluate_integer(pr->handle, METHOD_NAME__UID,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1787: FILE: drivers/acpi/processor_driver.c:571:
+		status = acpi_evaluate_integer(pr->handle, METHOD_NAME__UID,
+						NULL, &value);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1789: FILE: drivers/acpi/processor_driver.c:573:
+			printk(KERN_ERR PREFIX

CHECK:BRACES: braces {} should be used on all arms of this statement
#1832: FILE: drivers/acpi/processor_driver.c:616:
+	if (!object.processor.pblk_address)
[...]
+	else if (object.processor.pblk_length != 6)
[...]
+	else {
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1835: FILE: drivers/acpi/processor_driver.c:619:
+		printk(KERN_ERR PREFIX "Invalid PBLK length [%d]\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1836: FILE: drivers/acpi/processor_driver.c:620:
+		printk(KERN_ERR PREFIX "Invalid PBLK length [%d]\n",
+			    object.processor.pblk_length);

CHECK:BRACES: Unbalanced braces around else statement
#1837: FILE: drivers/acpi/processor_driver.c:621:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1883: FILE: drivers/acpi/processor_driver.c:667:
+		acpi_bus_generate_proc_event(device, event,
+					pr->performance_platform_limit);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1885: FILE: drivers/acpi/processor_driver.c:669:
+		acpi_bus_generate_netlink_event(device->pnp.device_class,
+						  dev_name(&device->dev), event,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1892: FILE: drivers/acpi/processor_driver.c:676:
+		acpi_bus_generate_netlink_event(device->pnp.device_class,
+						  dev_name(&device->dev), event, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1898: FILE: drivers/acpi/processor_driver.c:682:
+		acpi_bus_generate_netlink_event(device->pnp.device_class,
+						  dev_name(&device->dev), event, 0);

WARNING:RETURN_VOID: void function return statements are not generally useful
#1906: FILE: drivers/acpi/processor_driver.c:690:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1909: FILE: drivers/acpi/processor_driver.c:693:
+static int acpi_cpu_soft_notify(struct notifier_block *nfb,
+		unsigned long action, void *hcpu)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1923: FILE: drivers/acpi/processor_driver.c:707:
+static struct notifier_block acpi_cpu_notifier =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*pr)...) over kzalloc(sizeof(struct acpi_processor)...)
#1933: FILE: drivers/acpi/processor_driver.c:717:
+	pr = kzalloc(sizeof(struct acpi_processor), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1953: FILE: drivers/acpi/processor_driver.c:737:
+	BUG_ON((pr->id >= nr_cpu_ids) || (pr->id < 0));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "per_cpu"
#1960: FILE: drivers/acpi/processor_driver.c:744:
+	if (per_cpu(processor_device_array, pr->id) != NULL &&

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1962: FILE: drivers/acpi/processor_driver.c:746:
+		printk(KERN_WARNING "BIOS reported wrong ACPI id "

WARNING:SPLIT_STRING: quoted string split across lines
#1963: FILE: drivers/acpi/processor_driver.c:747:
+		printk(KERN_WARNING "BIOS reported wrong ACPI id "
+			"for the processor\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1990: FILE: drivers/acpi/processor_driver.c:774:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1994: FILE: drivers/acpi/processor_driver.c:778:
+	pr->cdev = thermal_cooling_device_register("Processor", device,
+						&processor_cooling_ops);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2001: FILE: drivers/acpi/processor_driver.c:785:
+	dev_dbg(&device->dev, "registered as cooling_device%d\n",
+		 pr->cdev->id);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2007: FILE: drivers/acpi/processor_driver.c:791:
+		printk(KERN_ERR PREFIX "Create sysfs link\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2014: FILE: drivers/acpi/processor_driver.c:798:
+		printk(KERN_ERR PREFIX "Create sysfs link\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2038: FILE: drivers/acpi/processor_driver.c:822:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2077: FILE: drivers/acpi/processor_driver.c:861:
+ * ^IAcpi processor hotplug support ^I^I^I^I       ^I    *$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2085: FILE: drivers/acpi/processor_driver.c:869:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2096: FILE: drivers/acpi/processor_driver.c:880:
+		ACPI_DEBUG_PRINT((ACPI_DB_INFO,
+				"Processor does not support hot plug\n"));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2109: FILE: drivers/acpi/processor_driver.c:893:
+
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2110: FILE: drivers/acpi/processor_driver.c:894:
+	if (acpi_get_parent(handle, &phandle)) {
+		return -ENODEV;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2114: FILE: drivers/acpi/processor_driver.c:898:
+	if (acpi_bus_get_device(phandle, &pdev)) {
+		return -ENODEV;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2118: FILE: drivers/acpi/processor_driver.c:902:
+	if (acpi_bus_add(device, pdev, handle, ACPI_BUS_TYPE_PROCESSOR)) {
+		return -ENODEV;
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2132: FILE: drivers/acpi/processor_driver.c:916:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2137: FILE: drivers/acpi/processor_driver.c:921:
+		ACPI_DEBUG_PRINT((ACPI_DB_INFO,
+		"Processor driver received %s event\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2147: FILE: drivers/acpi/processor_driver.c:931:
+				printk(KERN_ERR PREFIX

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2157: FILE: drivers/acpi/processor_driver.c:941:
+			printk(KERN_ERR PREFIX

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2163: FILE: drivers/acpi/processor_driver.c:947:
+			printk(KERN_ERR PREFIX

WARNING:RETURN_VOID: void function return statements are not generally useful
#2175: FILE: drivers/acpi/processor_driver.c:959:
+	return;
+}

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2213: FILE: drivers/acpi/processor_driver.c:997:
+{
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2214: FILE: drivers/acpi/processor_driver.c:998:
+	if (!is_processor_present(handle)) {
+		return AE_ERROR;
+	}

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#2236: FILE: drivers/acpi/processor_driver.c:1020:
+	return (0);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2243: FILE: drivers/acpi/processor_driver.c:1027:
+}
+static int acpi_processor_handle_eject(struct acpi_processor *pr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2254: FILE: drivers/acpi/processor_driver.c:1038:
+	int action = INSTALL_NOTIFY_HANDLER;
+	acpi_walk_namespace(ACPI_TYPE_PROCESSOR,

WARNING:LINE_SPACING: Missing a blank line after declarations
#2267: FILE: drivers/acpi/processor_driver.c:1051:
+	int action = UNINSTALL_NOTIFY_HANDLER;
+	acpi_walk_namespace(ACPI_TYPE_PROCESSOR,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2292: FILE: drivers/acpi/processor_driver.c:1076:
+	if (ACPI_FAILURE(acpi_get_table(ACPI_SIG_MADT, 0,
+				(struct acpi_table_header **)&madt)))

WARNING:RETURN_VOID: void function return statements are not generally useful
#2349: FILE: drivers/acpi/processor_driver.c:1133:
+	return;
+}

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2354: FILE: drivers/acpi/processor_driver.c:1138:
+EXPORT_SYMBOL(acpi_processor_set_thermal_limit);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000008844.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 46 warnings, 36 checks, 1148 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000008844.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
