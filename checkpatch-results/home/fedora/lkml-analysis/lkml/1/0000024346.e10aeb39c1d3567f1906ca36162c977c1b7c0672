WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
Gitweb:     http://git.kernel.org/tip/631c9def804b2c92b5cca04fb9ff7b5df9e35094

WARNING:BAD_SIGN_OFF: Duplicate signature
#107: 
Cc: Frederic Weisbecker <fweisbec@gmail.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Duplicate signature
#109: 
Cc: Arnaldo Carvalho de Melo <acme@redhat.com>

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!symbol_conf.vmlinux_name"
#226: FILE: tools/perf/builtin-probe.c:209:
+	if (symbol_conf.vmlinux_name == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!session.psession"
#233: FILE: tools/perf/builtin-probe.c:216:
+	if (session.psession == NULL)

WARNING:SPLIT_STRING: quoted string split across lines
#269: FILE: tools/perf/builtin-probe.c:266:
+			pr_warning("  Error: Don't use --line with"
+				   " --add/--del.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:BRACES: braces {} should be used on all arms of this statement
#335: FILE: tools/perf/util/probe-event.c:77:
+	if (ptr) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#347: FILE: tools/perf/util/probe-event.c:89:
+			semantic_error("Start line must be smaller"
+				       " than end line.");

CHECK:BRACES: Unbalanced braces around else statement
#352: FILE: tools/perf/util/probe-event.c:94:
+	} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fgets"
#375: FILE: tools/perf/util/probe-event.c:725:
+	if (fgets(buf, LINEBUF_SIZE, fp) == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fgets"
#386: FILE: tools/perf/util/probe-event.c:736:
+		if (fgets(buf, LINEBUF_SIZE, fp) == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fp"
#418: FILE: tools/perf/util/probe-event.c:768:
+	if (fp == NULL)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#439: FILE: tools/perf/util/probe-event.h:8:
+extern void parse_line_range_desc(const char *arg, struct line_range *lr);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#447: FILE: tools/perf/util/probe-event.h:19:
+extern void show_line_range(struct line_range *lr);

CHECK:CAMELCASE: Avoid CamelCase: <Dwarf_Die>
#459: FILE: tools/perf/util/probe-finder.c:143:
+static int cu_get_filename(Dwarf_Die cu_die, Dwarf_Unsigned fno, char **buf)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Dwarf_Unsigned>
#459: FILE: tools/perf/util/probe-finder.c:143:
+static int cu_get_filename(Dwarf_Die cu_die, Dwarf_Unsigned fno, char **buf)

CHECK:CAMELCASE: Avoid CamelCase: <Dwarf_Signed>
#461: FILE: tools/perf/util/probe-finder.c:145:
+	Dwarf_Signed cnt, i;

CHECK:BRACES: braces {} should be used on all arms of this statement
#469: FILE: tools/perf/util/probe-finder.c:153:
+	if (ret == DW_DLV_OK) {
[...]
+	} else
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#470: FILE: tools/perf/util/probe-finder.c:154:
+		if ((Dwarf_Unsigned)cnt > fno - 1) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#474: FILE: tools/perf/util/probe-finder.c:158:
+		} else

CHECK:BRACES: Unbalanced braces around else statement
#479: FILE: tools/perf/util/probe-finder.c:163:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#531: FILE: tools/perf/util/probe-finder.c:756:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited before semicolon
#543: FILE: tools/perf/util/probe-finder.c:768:
+			return ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ln"
#550: FILE: tools/perf/util/probe-finder.c:775:
+	DIE_IF(ln == NULL);

CHECK:CAMELCASE: Avoid CamelCase: <Dwarf_Line>
#560: FILE: tools/perf/util/probe-finder.c:785:
+	Dwarf_Line *lines;

CHECK:CAMELCASE: Avoid CamelCase: <Dwarf_Addr>
#563: FILE: tools/perf/util/probe-finder.c:788:
+	Dwarf_Addr addr;

CHECK:CAMELCASE: Avoid CamelCase: <Dwarf_Half>
#599: FILE: tools/perf/util/probe-finder.c:824:
+	Dwarf_Half tag;

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#617: FILE: tools/perf/util/probe-finder.c:842:
+		lr->offset = die_get_decl_line(dlink->die);;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#652: FILE: tools/perf/util/probe-finder.c:877:
+		ret = dwarf_next_cu_header(__dw_debug, NULL, NULL, NULL,
+			&addr_size, &next_cuh, &__dw_error);

CHECK:BRACES: braces {} should be used on all arms of this statement
#666: FILE: tools/perf/util/probe-finder.c:891:
+			if (lr->function)
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#668: FILE: tools/perf/util/probe-finder.c:893:
+			else {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#714: FILE: tools/perf/util/probe-finder.h:56:
+extern int find_line_range(int fd, struct line_range *lr);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000024346.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 25 checks, 568 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000024346.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
