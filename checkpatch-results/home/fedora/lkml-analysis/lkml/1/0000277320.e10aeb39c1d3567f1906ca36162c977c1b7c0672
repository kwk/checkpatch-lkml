WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#29: 
	int (*permission) (struct inode *inode, int mask, struct nameidata *nd);
	                                                                    ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACING: Unnecessary space before function pointer arguments
#129: FILE: include/linux/fs.h:1267:
+	int (*permission) (struct dentry *, int, int);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#129: FILE: include/linux/fs.h:1267:
+	int (*permission) (struct dentry *, int, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#129: FILE: include/linux/fs.h:1267:
+	int (*permission) (struct dentry *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#129: FILE: include/linux/fs.h:1267:
+	int (*permission) (struct dentry *, int, int);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#202: FILE: fs/ecryptfs/inode.c:814:
+	struct nameidata nd = { .flags = flags };
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#224: FILE: fs/ecryptfs/inode.c:816:
+	return dentry_permission(lower_dentry, mask, &nd);
 	                                              ^^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#410: FILE: fs/nfs/dir.c:1952:
 			if (nfs_server_capable(inode, NFS_CAP_ATOMIC_OPEN)
+					&& (flags & LOOKUP_OPEN))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#423: FILE: include/linux/nfs_fs.h:325:
+extern int nfs_permission(struct dentry *, int, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#423: FILE: include/linux/nfs_fs.h:325:
+extern int nfs_permission(struct dentry *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#423: FILE: include/linux/nfs_fs.h:325:
+extern int nfs_permission(struct dentry *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#423: FILE: include/linux/nfs_fs.h:325:
+extern int nfs_permission(struct dentry *, int, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#615: FILE: fs/afs/internal.h:606:
+extern int afs_permission(struct dentry *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#615: FILE: fs/afs/internal.h:606:
+extern int afs_permission(struct dentry *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#615: FILE: fs/afs/internal.h:606:
+extern int afs_permission(struct dentry *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#615: FILE: fs/afs/internal.h:606:
+extern int afs_permission(struct dentry *, int, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#641: FILE: fs/ext2/acl.h:61:
+extern int ext2_permission(struct dentry *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#641: FILE: fs/ext2/acl.h:61:
+extern int ext2_permission(struct dentry *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#641: FILE: fs/ext2/acl.h:61:
+extern int ext2_permission(struct dentry *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#641: FILE: fs/ext2/acl.h:61:
+extern int ext2_permission(struct dentry *, int, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#654: FILE: fs/ext3/acl.h:61:
+extern int ext3_permission(struct dentry *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#654: FILE: fs/ext3/acl.h:61:
+extern int ext3_permission(struct dentry *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#654: FILE: fs/ext3/acl.h:61:
+extern int ext3_permission(struct dentry *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#654: FILE: fs/ext3/acl.h:61:
+extern int ext3_permission(struct dentry *, int, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#667: FILE: fs/ext4/acl.h:61:
+extern int ext4_permission(struct dentry *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#667: FILE: fs/ext4/acl.h:61:
+extern int ext4_permission(struct dentry *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#667: FILE: fs/ext4/acl.h:61:
+extern int ext4_permission(struct dentry *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#667: FILE: fs/ext4/acl.h:61:
+extern int ext4_permission(struct dentry *, int, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#680: FILE: fs/jffs2/acl.h:31:
+extern int jffs2_permission(struct dentry *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#680: FILE: fs/jffs2/acl.h:31:
+extern int jffs2_permission(struct dentry *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#680: FILE: fs/jffs2/acl.h:31:
+extern int jffs2_permission(struct dentry *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#680: FILE: fs/jffs2/acl.h:31:
+extern int jffs2_permission(struct dentry *, int, int);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#707: FILE: fs/namei.c:268:
+						 nd ? nd->flags : 0);
 						 ^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000277320.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 26 warnings, 7 checks, 449 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000277320.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
