WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
There's been a patch floating around for toshiba_acpi that exports an ad-hoc

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#125: FILE: drivers/acpi/toshiba_acpi.c:231:
+static acpi_status hci_write2(u32 reg, u32 in1, u32 in2, u32* result)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: drivers/acpi/toshiba_acpi.c:233:
+        u32 in[HCI_WORDS] = { HCI_SET, reg, in1, in2, 0, 0 };$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: drivers/acpi/toshiba_acpi.c:233:
+        u32 in[HCI_WORDS] = { HCI_SET, reg, in1, in2, 0, 0 };$

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: drivers/acpi/toshiba_acpi.c:234:
+        u32 out[HCI_WORDS];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: drivers/acpi/toshiba_acpi.c:234:
+        u32 out[HCI_WORDS];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#129: FILE: drivers/acpi/toshiba_acpi.c:235:
+        acpi_status status = hci_raw(in, out);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: drivers/acpi/toshiba_acpi.c:235:
+        acpi_status status = hci_raw(in, out);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: drivers/acpi/toshiba_acpi.c:236:
+        *result = (status == AE_OK) ? out[0] : HCI_FAILURE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: drivers/acpi/toshiba_acpi.c:236:
+        *result = (status == AE_OK) ? out[0] : HCI_FAILURE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: drivers/acpi/toshiba_acpi.c:237:
+        return status;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: drivers/acpi/toshiba_acpi.c:237:
+        return status;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#134: FILE: drivers/acpi/toshiba_acpi.c:240:
+static acpi_status hci_read2(u32 reg, u32* out1, u32* out2, u32* result)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#134: FILE: drivers/acpi/toshiba_acpi.c:240:
+static acpi_status hci_read2(u32 reg, u32* out1, u32* out2, u32* result)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#134: FILE: drivers/acpi/toshiba_acpi.c:240:
+static acpi_status hci_read2(u32 reg, u32* out1, u32* out2, u32* result)

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: drivers/acpi/toshiba_acpi.c:242:
+        u32 in[HCI_WORDS] = { HCI_GET, reg, *out1, *out2, 0, 0 };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: drivers/acpi/toshiba_acpi.c:242:
+        u32 in[HCI_WORDS] = { HCI_GET, reg, *out1, *out2, 0, 0 };$

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: drivers/acpi/toshiba_acpi.c:243:
+        u32 out[HCI_WORDS];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: drivers/acpi/toshiba_acpi.c:243:
+        u32 out[HCI_WORDS];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: drivers/acpi/toshiba_acpi.c:244:
+        acpi_status status = hci_raw(in, out);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: drivers/acpi/toshiba_acpi.c:244:
+        acpi_status status = hci_raw(in, out);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: drivers/acpi/toshiba_acpi.c:245:
+        *out1 = out[2];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: drivers/acpi/toshiba_acpi.c:245:
+        *out1 = out[2];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: drivers/acpi/toshiba_acpi.c:246:
+        *out2 = out[3];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: drivers/acpi/toshiba_acpi.c:246:
+        *out2 = out[3];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: drivers/acpi/toshiba_acpi.c:247:
+        *result = (status == AE_OK) ? out[0] : HCI_FAILURE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: drivers/acpi/toshiba_acpi.c:247:
+        *result = (status == AE_OK) ? out[0] : HCI_FAILURE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: drivers/acpi/toshiba_acpi.c:248:
+        return status;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: drivers/acpi/toshiba_acpi.c:248:
+        return status;$

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#155: FILE: drivers/acpi/toshiba_acpi.c:261:
+	struct mutex mutex;

WARNING:LINE_SPACING: Missing a blank line after declarations
#170: FILE: drivers/acpi/toshiba_acpi.c:276:
+	u32 value, value2;
+	value = 0;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#173: FILE: drivers/acpi/toshiba_acpi.c:279:
+	if (hci_result == HCI_SUCCESS) {
+		*present = (value & HCI_WIRELESS_BT_PRESENT) ? TRUE : FALSE;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#183: FILE: drivers/acpi/toshiba_acpi.c:289:
+	u32 value, value2;
+	value = 0;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#216: FILE: drivers/acpi/toshiba_acpi.c:322:
+	if (hci_get_radio_state(&radio_state) != HCI_SUCCESS) {
+		return -EFAULT;
+	}

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#222: FILE: drivers/acpi/toshiba_acpi.c:328:
+		if (!radio_state) {
+		    return -EPERM;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#222: FILE: drivers/acpi/toshiba_acpi.c:328:
+		if (!radio_state) {
+		    return -EPERM;
+		}

WARNING:TABSTOP: Statements should start on a tabstop
#223: FILE: drivers/acpi/toshiba_acpi.c:329:
+		    return -EPERM;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#237: FILE: drivers/acpi/toshiba_acpi.c:343:
+	if (result1 != HCI_SUCCESS || result2 != HCI_SUCCESS) {
+		return -EFAULT;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#254: FILE: drivers/acpi/toshiba_acpi.c:360:
+	if (hci_result != HCI_SUCCESS) {
+		return; /* Can't do anything useful */
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#285: FILE: drivers/acpi/toshiba_acpi.c:713:
+	if (toshiba_acpi.rfk_dev) {
+		rfkill_unregister(toshiba_acpi.rfk_dev);
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#319: FILE: drivers/acpi/toshiba_acpi.c:757:
+	toshiba_acpi.p_dev = platform_device_register_simple("toshiba_acpi",
+							      -1, NULL, 0);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#322: FILE: drivers/acpi/toshiba_acpi.c:760:
+		printk(MY_ERR "unable to register platform device\n");

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#323: FILE: drivers/acpi/toshiba_acpi.c:761:
+		toshiba_acpi.p_dev= NULL;
 		                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#351: FILE: drivers/acpi/toshiba_acpi.c:786:
+	toshiba_backlight_device = backlight_device_register("toshiba",
+						&toshiba_acpi.p_dev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#368: FILE: drivers/acpi/toshiba_acpi.c:802:
+		toshiba_acpi.rfk_dev = rfkill_allocate(&toshiba_acpi.p_dev->dev,
+							RFKILL_TYPE_BLUETOOTH);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#370: FILE: drivers/acpi/toshiba_acpi.c:804:
+			printk(MY_ERR "unable to allocate rfkill device\n");

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#381: FILE: drivers/acpi/toshiba_acpi.c:815:
+		if (hci_get_bt_on(&bt_on) == HCI_SUCCESS && bt_on) {
[...]
+		} else if (hci_get_radio_state(&radio_on) == HCI_SUCCESS && radio_on) {
[...]
+		} else {
[...]

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#391: FILE: drivers/acpi/toshiba_acpi.c:825:
+			printk(MY_ERR "unable to register rfkill device\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#400: FILE: drivers/acpi/toshiba_acpi.c:834:
+		printk(MY_ERR "unable to allocate kill-switch input device\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#417: FILE: drivers/acpi/toshiba_acpi.c:851:
+		printk(MY_ERR "unable to register kill-switch input device\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000239416.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 17 errors, 29 warnings, 4 checks, 360 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000239416.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
