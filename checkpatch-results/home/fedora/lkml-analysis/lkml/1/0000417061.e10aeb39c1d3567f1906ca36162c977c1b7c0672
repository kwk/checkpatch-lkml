WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#75: FILE: drivers/scsi/mvme16x_scsi.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#110: FILE: drivers/scsi/mvme16x_scsi.c:36:
+static __devinit int

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#113: FILE: drivers/scsi/mvme16x_scsi.c:39:
+	struct Scsi_Host * host = NULL;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#113: FILE: drivers/scsi/mvme16x_scsi.c:39:
+	struct Scsi_Host * host = NULL;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <NCR_700_Host_Parameters>
#114: FILE: drivers/scsi/mvme16x_scsi.c:40:
+	struct NCR_700_Host_Parameters *hostdata;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#120: FILE: drivers/scsi/mvme16x_scsi.c:46:
+		printk(KERN_INFO "mvme16x-scsi: detection disabled, "

WARNING:SPLIT_STRING: quoted string split across lines
#121: FILE: drivers/scsi/mvme16x_scsi.c:47:
+		printk(KERN_INFO "mvme16x-scsi: detection disabled, "
+				 "SCSI chip not present\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*hostdata)...) over kmalloc(sizeof(struct NCR_700_Host_Parameters)...)
#125: FILE: drivers/scsi/mvme16x_scsi.c:51:
+	hostdata = kmalloc(sizeof(struct NCR_700_Host_Parameters), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hostdata"
#126: FILE: drivers/scsi/mvme16x_scsi.c:52:
+	if (hostdata == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#127: FILE: drivers/scsi/mvme16x_scsi.c:53:
+		printk(KERN_ERR "mvme16x-scsi: "

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#127: FILE: drivers/scsi/mvme16x_scsi.c:53:
+	if (hostdata == NULL) {
+		printk(KERN_ERR "mvme16x-scsi: "

WARNING:SPLIT_STRING: quoted string split across lines
#128: FILE: drivers/scsi/mvme16x_scsi.c:54:
+		printk(KERN_ERR "mvme16x-scsi: "
+				"Failed to allocate host data\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#144: FILE: drivers/scsi/mvme16x_scsi.c:70:
+		printk(KERN_ERR "mvme16x-scsi: No host detected; "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#152: FILE: drivers/scsi/mvme16x_scsi.c:78:
+		printk(KERN_ERR "mvme16x-scsi: request_irq failed\n");

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#158: FILE: drivers/scsi/mvme16x_scsi.c:84:
+		volatile unsigned long v;

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#178: FILE: drivers/scsi/mvme16x_scsi.c:104:
+static __devexit int

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#186: FILE: drivers/scsi/mvme16x_scsi.c:112:
+		volatile unsigned long v;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000417061.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 12 warnings, 4 checks, 183 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000417061.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
