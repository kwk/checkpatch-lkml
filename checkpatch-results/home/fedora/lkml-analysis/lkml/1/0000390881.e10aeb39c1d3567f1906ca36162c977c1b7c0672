WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_context *' should also have an identifier name
#55: FILE: arch/um/include/tlb.h:36:
+			     int (*do_ops)(struct mm_context *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct host_vm_op *' should also have an identifier name
#55: FILE: arch/um/include/tlb.h:36:
+			     int (*do_ops)(struct mm_context *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#55: FILE: arch/um/include/tlb.h:36:
+			     int (*do_ops)(struct mm_context *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#55: FILE: arch/um/include/tlb.h:36:
+			     int (*do_ops)(struct mm_context *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void **' should also have an identifier name
#55: FILE: arch/um/include/tlb.h:36:
+			     int (*do_ops)(struct mm_context *,

WARNING:NEW_TYPEDEFS: do not add new typedefs
#73: FILE: arch/um/include/um_mmu.h:13:
+typedef struct mm_context {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#82: FILE: arch/um/include/um_mmu.h:22:
+extern void __switch_mm(struct mm_id * mm_idp);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#82: FILE: arch/um/include/um_mmu.h:22:
+extern void __switch_mm(struct mm_id * mm_idp);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#85: FILE: arch/um/include/um_mmu.h:25:
+extern long init_new_ldt(struct mm_context *to_mm, struct mm_context *from_mm);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#86: FILE: arch/um/include/um_mmu.h:26:
+extern void free_ldt(struct mm_context *mm);

CHECK:SPACING: No space is necessary after a cast
#260: FILE: arch/um/kernel/skas/mmu.c:52:
+	mm->context.last_pmd = (unsigned long) __va(pud_val(*pud));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: arch/um/kernel/skas/mmu.c:69:
+ ^Istruct mm_context *from_mm = NULL;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#270: FILE: arch/um/kernel/skas/mmu.c:69:
+ ^Istruct mm_context *from_mm = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: arch/um/kernel/skas/mmu.c:69:
+ ^Istruct mm_context *from_mm = NULL;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#333: FILE: arch/um/sys-i386/ldt.c:138:
+	uml_ldt_t * ldt = &current->mm->context.ldt;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#343: FILE: arch/um/sys-i386/ldt.c:206:
+	uml_ldt_t * ldt = &current->mm->context.ldt;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#344: FILE: arch/um/sys-i386/ldt.c:207:
+	struct mm_id * mm_idp = &current->mm->context.id;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000390881.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 8 warnings, 4 checks, 299 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000390881.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
