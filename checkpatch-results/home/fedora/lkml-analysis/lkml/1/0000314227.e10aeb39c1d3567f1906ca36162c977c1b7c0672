ERROR:TRAILING_WHITESPACE: trailing whitespace
#52: FILE: Documentation/DMA-API.txt:398:
+dma_addr_t $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#53: FILE: Documentation/DMA-API.txt:399:
+dma_map_single_attrs(struct device *dev, void *cpu_addr, size_t size, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#54: FILE: Documentation/DMA-API.txt:400:
+^I^I     enum dma_data_direction dir, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#57: FILE: Documentation/DMA-API.txt:403:
+void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#62: FILE: Documentation/DMA-API.txt:408:
+int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#64: FILE: Documentation/DMA-API.txt:410:
+^I^I int nents, enum dma_data_direction dir, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#67: FILE: Documentation/DMA-API.txt:413:
+void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#68: FILE: Documentation/DMA-API.txt:414:
+dma_unmap_sg_attrs(struct device *dev, struct scatterlist *sgl, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#72: FILE: Documentation/DMA-API.txt:418:
+The four functions above are just like the counterpart functions $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#73: FILE: Documentation/DMA-API.txt:419:
+without the _attrs suffixes, except that they pass an optional $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#74: FILE: Documentation/DMA-API.txt:420:
+struct dma_attrs*. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: Documentation/DMA-API.txt:422:
+struct dma_attrs encapsulates a set of "dma attributes". For the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#77: FILE: Documentation/DMA-API.txt:423:
+definition of struct dma_attrs see linux/dma-attrs.h. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#79: FILE: Documentation/DMA-API.txt:425:
+The interpretation of dma attributes is architecture-specific, and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#80: FILE: Documentation/DMA-API.txt:426:
+each attribute should be documented in Documentation/DMA-attributes.txt. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#82: FILE: Documentation/DMA-API.txt:428:
+If struct dma_attrs* is NULL, the semantics of each of these $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#83: FILE: Documentation/DMA-API.txt:429:
+functions is identical to those of the corresponding function $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#84: FILE: Documentation/DMA-API.txt:430:
+without the _attrs suffix. As a result dma_map_single_attrs() $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#87: FILE: Documentation/DMA-API.txt:433:
+As an example of the use of the *_attrs functions, here's how $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#88: FILE: Documentation/DMA-API.txt:434:
+you could pass an attribute DMA_ATTR_FOO when mapping memory $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#92: FILE: Documentation/DMA-API.txt:438:
+/* DMA_ATTR_FOO should be defined in linux/dma-attrs.h and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#102: FILE: Documentation/DMA-API.txt:448:
+Architectures that care about DMA_ATTR_FOO would check for its $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: Documentation/DMA-API.txt:449:
+presence in their implementations of the mapping and unmapping $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#106: FILE: Documentation/DMA-API.txt:452:
+void whizco_dma_map_sg_attrs(struct device *dev, dma_addr_t dma_addr, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#107: FILE: Documentation/DMA-API.txt:453:
+^I^I^I     size_t size, enum dma_data_direction dir, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#113: FILE: Documentation/DMA-API.txt:459:
+^Iif (foo) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#128: FILE: Documentation/DMA-attributes.txt:4:
+This document describes the semantics of the DMA attributes that are $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#129: FILE: Documentation/DMA-attributes.txt:5:
+defined in linux/dma-attrs.h. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#136: FILE: Documentation/DMA-attributes.txt:12:
+It provides a mechanism for devices to explicitly order their DMA $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#139: FILE: Documentation/DMA-attributes.txt:15:
+On IA64_SGI_SN2 machines, DMA may be reordered within the NUMA $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#140: FILE: Documentation/DMA-attributes.txt:16:
+interconnect. Allowing reordering improves performance, but in some $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#141: FILE: Documentation/DMA-attributes.txt:17:
+situations it may be necessary to ensure that one DMA write is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: Documentation/DMA-attributes.txt:18:
+complete before another is visible. For example, if the device does $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: Documentation/DMA-attributes.txt:19:
+a DMA write to indicate that data is available in memory, DMA of the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: Documentation/DMA-attributes.txt:22:
+When a memory region is mapped with the DMA_ATTR_SYNC_ON_WRITE attribute, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#147: FILE: Documentation/DMA-attributes.txt:23:
+a write to that region causes all in-flight DMA to be flushed to memory. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#148: FILE: Documentation/DMA-attributes.txt:24:
+Any pending DMA will complete and be visible in memory before the write $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: Documentation/DMA-attributes.txt:25:
+to the region with the DMA_ATTR_SYNC_ON_WRITE attribute becomes visible. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#151: FILE: Documentation/DMA-attributes.txt:27:
+(For more information, see the document titled "SGI Altix Architecture $

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000314227.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 39 errors, 0 warnings, 0 checks, 100 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000314227.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
