WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#52: FILE: include/linux/list.h:26:
+ * think of them as a separate type. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#62: FILE: include/linux/list.h:36:
+};
+union list_head_or_node_const {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#68: FILE: include/linux/list.h:42:
+};
+#define __lh(n) (((union list_head_or_node)(n))._h)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#87: FILE: include/linux/list.h:93:
+extern void list_add_lh(struct list_head *new, struct list_head *head);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#140: FILE: include/linux/list.h:201:
+extern void list_del_lh(struct list_head *entry);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'member' - possible side-effects?
#242: FILE: include/linux/list.h:468:
+#define list_entry(ptr, type, member) ({				\
+	const typeof(((type *)0)->member) *__mptr = (void *)(ptr);	\
+	(type *)( (char *)__mptr - offsetof(type,member) );})

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'member' may be better as '(member)' to avoid precedence issues
#242: FILE: include/linux/list.h:468:
+#define list_entry(ptr, type, member) ({				\
+	const typeof(((type *)0)->member) *__mptr = (void *)(ptr);	\
+	(type *)( (char *)__mptr - offsetof(type,member) );})

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#243: FILE: include/linux/list.h:469:
+	const typeof(((type *)0)->member) *__mptr = (void *)(ptr);	\
 	                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#244: FILE: include/linux/list.h:470:
+	(type *)( (char *)__mptr - offsetof(type,member) );})
 	                                        ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#244: FILE: include/linux/list.h:470:
+	(type *)( (char *)__mptr - offsetof(type,member) );})
 	                                                  ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#244: FILE: include/linux/list.h:470:
+	(type *)( (char *)__mptr - offsetof(type,member) );})

ERROR:SPACING: space prohibited before that close parenthesis ')'
#244: FILE: include/linux/list.h:470:
+	(type *)( (char *)__mptr - offsetof(type,member) );})

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000420210.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 1 warnings, 7 checks, 238 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000420210.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
