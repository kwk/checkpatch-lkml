CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#110: FILE: drivers/isdn/gigaset/asyncdata.c:182:
+						dev_err(cs->dev,
+					"invalid packet size (%d)\n", skb->len);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "skb"
#133: FILE: drivers/isdn/gigaset/asyncdata.c:196:
+				if (skb != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#137: FILE: drivers/isdn/gigaset/asyncdata.c:200:
+					dev_warn(cs->dev,
+						"could not allocate new skb\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "skb"
#161: FILE: drivers/isdn/gigaset/asyncdata.c:307:
+			if (skb != NULL) {

WARNING:TYPO_SPELLING: 'acknowledgement' may be misspelled - perhaps 'acknowledgment'?
#207: FILE: drivers/isdn/gigaset/asyncdata.c:459:
+	 * + room for acknowledgement header
 	              ^^^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'acknowledgement' may be misspelled - perhaps 'acknowledgment'?
#219: FILE: drivers/isdn/gigaset/asyncdata.c:467:
+	/* Copy acknowledgement header into new skb */
 	        ^^^^^^^^^^^^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#252: FILE: drivers/isdn/gigaset/asyncdata.c:521:
+	iraw_skb = dev_alloc_skb(2*skb->len + headroom);
 	                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'acknowledgement' may be misspelled - perhaps 'acknowledgment'?
#259: FILE: drivers/isdn/gigaset/asyncdata.c:527:
+	/* Copy acknowledgement header into new skb */
 	        ^^^^^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#309: FILE: drivers/isdn/gigaset/bas-gigaset.c:1067:
+				   gigaset_isoc_send_skb() */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:BRACES: braces {} should be used on all arms of this statement
#367: FILE: drivers/isdn/gigaset/common.c:625:
+		if (bcs->skb != NULL)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "bcs->skb"
#367: FILE: drivers/isdn/gigaset/common.c:625:
+		if (bcs->skb != NULL)

CHECK:BRACES: Unbalanced braces around else statement
#369: FILE: drivers/isdn/gigaset/common.c:627:
+		else {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#638: FILE: drivers/isdn/gigaset/gigaset.h:400:
+	unsigned proto2;		/* layer 2 protocol (L2_*) */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#647: FILE: drivers/isdn/gigaset/gigaset.h:461:
+	unsigned isdn_up;		/* !=0 after gigaset_isdn_start() */

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#653: FILE: drivers/isdn/gigaset/gigaset.h:466:
+	void *iif;			/* LL interface structure */
 	      ^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#665: FILE: drivers/isdn/gigaset/gigaset.h:624:
+	 * with the first cs->hw_hdr_len bytes of skb->head preserved. */

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#793: FILE: drivers/isdn/gigaset/i4l.c:101:
+	isdn_if *iif = bcs->cs->iif;
 	         ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#793: FILE: drivers/isdn/gigaset/i4l.c:101:
+	isdn_if *iif = bcs->cs->iif;
 	                        ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#812: FILE: drivers/isdn/gigaset/i4l.c:131:
+ * Called by hardware module {bas,ser,usb}_gigaset when user data has
                                   ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#818: FILE: drivers/isdn/gigaset/i4l.c:137:
+	isdn_if *iif = bcs->cs->iif;
 	         ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#818: FILE: drivers/isdn/gigaset/i4l.c:137:
+	isdn_if *iif = bcs->cs->iif;
 	                        ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#829: FILE: drivers/isdn/gigaset/i4l.c:148:
+ * Called by hardware module {bas,ser,usb}_gigaset when a receive error
                                   ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#834: FILE: drivers/isdn/gigaset/i4l.c:153:
+	isdn_if *iif = bcs->cs->iif;
 	         ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#834: FILE: drivers/isdn/gigaset/i4l.c:153:
+	isdn_if *iif = bcs->cs->iif;
 	                        ^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#851: FILE: drivers/isdn/gigaset/i4l.c:170:
+	response.parm.errcode = ISDN_STAT_L1ERR_RECV;
 	         ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cs"
#879: FILE: drivers/isdn/gigaset/i4l.c:195:
+	if (cs == NULL) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#921: FILE: drivers/isdn/gigaset/i4l.c:223:
+		commands = kzalloc(AT_NUM*(sizeof *commands), GFP_ATOMIC);
 		                         ^

WARNING:SIZEOF_PARENTHESIS: sizeof *commands should be sizeof(*commands)
#921: FILE: drivers/isdn/gigaset/i4l.c:223:
+		commands = kzalloc(AT_NUM*(sizeof *commands), GFP_ATOMIC);

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#930: FILE: drivers/isdn/gigaset/i4l.c:230:
+		l = 3 + strlen(cntrl->parm.setup.phone);
 		                      ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#934: FILE: drivers/isdn/gigaset/i4l.c:234:
+		if (cntrl->parm.setup.phone[0] == '*' &&
 		           ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#935: FILE: drivers/isdn/gigaset/i4l.c:235:
+		    cntrl->parm.setup.phone[1] == '*') {
 		           ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#941: FILE: drivers/isdn/gigaset/i4l.c:241:
+				 "D%s\r", cntrl->parm.setup.phone+2);
 				                 ^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#941: FILE: drivers/isdn/gigaset/i4l.c:241:
+				 "D%s\r", cntrl->parm.setup.phone+2);
 				                                 ^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#947: FILE: drivers/isdn/gigaset/i4l.c:247:
+				 "D%s\r", cntrl->parm.setup.phone);
 				                 ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#950: FILE: drivers/isdn/gigaset/i4l.c:250:
+		l = strlen(cntrl->parm.setup.eazmsn);
 		                  ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#957: FILE: drivers/isdn/gigaset/i4l.c:257:
+				 cntrl->parm.setup.eazmsn);
 				        ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#960: FILE: drivers/isdn/gigaset/i4l.c:260:
+		switch (cntrl->parm.setup.si1) {
 		               ^^^^

CHECK:SPACING: No space is necessary after a cast
#985: FILE: drivers/isdn/gigaset/i4l.c:285:
+			 (unsigned) bcs->channel + 1);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#985: FILE: drivers/isdn/gigaset/i4l.c:285:
+			 (unsigned) bcs->channel + 1);

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#1067: FILE: drivers/isdn/gigaset/i4l.c:336:
+			 cntrl->parm.num);
 			        ^^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1147: FILE: drivers/isdn/gigaset/i4l.c:437:
+	isdn_if *iif = cs->iif;
 	         ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1147: FILE: drivers/isdn/gigaset/i4l.c:437:
+	isdn_if *iif = cs->iif;
 	                   ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1160: FILE: drivers/isdn/gigaset/i4l.c:448:
+	isdn_if *iif = bcs->cs->iif;
 	         ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1160: FILE: drivers/isdn/gigaset/i4l.c:448:
+	isdn_if *iif = bcs->cs->iif;
 	                        ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1298: FILE: drivers/isdn/gigaset/i4l.c:470:
+	isdn_if *iif = cs->iif;
 	         ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1298: FILE: drivers/isdn/gigaset/i4l.c:470:
+	isdn_if *iif = cs->iif;
 	                   ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1408: FILE: drivers/isdn/gigaset/i4l.c:638:
+	isdn_if *iif;
 	         ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1412: FILE: drivers/isdn/gigaset/i4l.c:642:
+	iif = kmalloc(sizeof *iif, GFP_KERNEL);
 	^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1412: FILE: drivers/isdn/gigaset/i4l.c:642:
+	iif = kmalloc(sizeof *iif, GFP_KERNEL);
 	                      ^^^

WARNING:SIZEOF_PARENTHESIS: sizeof *iif should be sizeof(*iif)
#1412: FILE: drivers/isdn/gigaset/i4l.c:642:
+	iif = kmalloc(sizeof *iif, GFP_KERNEL);

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1413: FILE: drivers/isdn/gigaset/i4l.c:643:
+	if (!iif) {
 	     ^^^

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1414: FILE: drivers/isdn/gigaset/i4l.c:644:
+	if (!iif) {
+		pr_err("out of memory\n");

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1421: FILE: drivers/isdn/gigaset/i4l.c:651:
+		kfree(iif);
 		      ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1429: FILE: drivers/isdn/gigaset/i4l.c:675:
+		kfree(iif);
 		      ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1433: FILE: drivers/isdn/gigaset/i4l.c:679:
+	cs->iif = iif;
 	    ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1433: FILE: drivers/isdn/gigaset/i4l.c:679:
+	cs->iif = iif;
 	          ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1449: FILE: drivers/isdn/gigaset/i4l.c:695:
+	kfree(cs->iif);
 	          ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1450: FILE: drivers/isdn/gigaset/i4l.c:696:
+	cs->iif = NULL;
 	    ^^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1585: FILE: drivers/isdn/gigaset/isocdata.c:866:
+		bcs->skb = skb = dev_alloc_skb(SBUFSIZE + cs->hw_hdr_len);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1603: FILE: drivers/isdn/gigaset/isocdata.c:886:
+			bcs->skb = skb =

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000063096.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 46 warnings, 14 checks, 1501 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000063096.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
