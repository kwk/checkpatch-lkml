CHECK:LINE_SPACING: Please don't use multiple blank lines
#85: FILE: drivers/block/mg_disk.c:60:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#88: FILE: drivers/block/mg_disk.c:63:
+#define MG_REG_CTRL_INTR_DISABLE		(0x1<<1)
                                 		    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#89: FILE: drivers/block/mg_disk.c:64:
+#define MG_REG_CTRL_RESET			(0x1<<2)
                          			    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#91: FILE: drivers/block/mg_disk.c:66:
+#define MG_REG_CTRL_INTR_POLA_ACTIVE_LOW	(0x1<<4)
                                         	    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#93: FILE: drivers/block/mg_disk.c:68:
+#define MG_REG_CTRL_DPD_POLA_ACTIVE_HIGH	(0x1<<5)
                                         	    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#95: FILE: drivers/block/mg_disk.c:70:
+#define MG_REG_CTRL_DPD_ENABLE			(0x1<<6)
                               			    ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#146: FILE: drivers/block/mg_disk.c:121:
+#define MG_OP_CASCADE (1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#147: FILE: drivers/block/mg_disk.c:122:
+#define MG_OP_CASCADE_SYNC_RD (1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#148: FILE: drivers/block/mg_disk.c:123:
+#define MG_OP_CASCADE_SYNC_WR (1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#149: FILE: drivers/block/mg_disk.c:124:
+#define MG_OP_INTERLEAVE (1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#157: FILE: drivers/block/mg_disk.c:132:
+#define MG_BURST_LEN_4 (1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#174: FILE: drivers/block/mg_disk.c:149:
+#define MG_BOOT_DEV		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#176: FILE: drivers/block/mg_disk.c:151:
+#define MG_STORAGE_DEV		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#178: FILE: drivers/block/mg_disk.c:153:
+#define MG_STORAGE_DEV_SKIP_RST	(1 << 2)

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#204: FILE: drivers/block/mg_disk.c:179:
+	spinlock_t lock;

WARNING:SPACING: Unnecessary space before function pointer arguments
#208: FILE: drivers/block/mg_disk.c:183:
+	void (*mg_do_intr) (struct mg_host *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mg_host *' should also have an identifier name
#208: FILE: drivers/block/mg_disk.c:183:
+	void (*mg_do_intr) (struct mg_host *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#233: FILE: drivers/block/mg_disk.c:208:
+	printk(KERN_DEBUG "%s:%d "fmt, __func__, __LINE__, ##args)

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#242: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000135327.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 15 checks, 195 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000135327.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
