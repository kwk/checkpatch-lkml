WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#136: FILE: arch/x86/kernel/io_apic_32.c:717:
+		irq_cpu_data[i].irq_delta = kzalloc(sizeof(unsigned long) * nr_irqs, GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#137: FILE: arch/x86/kernel/io_apic_32.c:718:
+		irq_cpu_data[i].last_irq = kzalloc(sizeof(unsigned long) * nr_irqs, GFP_KERNEL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#194: FILE: arch/x86/kernel/io_apic_64.c:228:
+	BUG_ON(irq >= nr_irqs);						\

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#203: FILE: arch/x86/kernel/io_apic_64.c:305:
+	BUG_ON(irq >= nr_irqs);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#218: FILE: arch/x86/kernel/io_apic_64.c:367:
+	BUG_ON(irq >= nr_irqs);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#235: FILE: arch/x86/kernel/io_apic_64.c:638:
+	BUG_ON(best_guess >= nr_irqs);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#244: FILE: arch/x86/kernel/io_apic_64.c:770:
+	BUG_ON(irq >= nr_irqs);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#253: FILE: arch/x86/kernel/io_apic_64.c:792:
+	BUG_ON((unsigned)irq >= nr_irqs);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#253: FILE: arch/x86/kernel/io_apic_64.c:792:
+	BUG_ON((unsigned)irq >= nr_irqs);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#262: FILE: arch/x86/kernel/io_apic_64.c:866:
+	BUG_ON((unsigned)irq >= nr_irqs);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#262: FILE: arch/x86/kernel/io_apic_64.c:866:
+	BUG_ON((unsigned)irq >= nr_irqs);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#338: FILE: arch/x86/kernel/irq_32.c:229:
+	if (unlikely((unsigned)irq >= nr_irqs)) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000244014.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 12 warnings, 0 checks, 326 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000244014.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
