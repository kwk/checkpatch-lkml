WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

CHECK:CAMELCASE: Avoid CamelCase: <zfLnxGetVapId>
#69: FILE: staging/otus/ioctl_new.c:65:
+extern u16_t zfLnxGetVapId(zdev_t *dev);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#173: FILE: staging/otus/ioctl_new.c:114:
+		return ((freq-2412)/5) + 1;
 		             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#173: FILE: staging/otus/ioctl_new.c:114:
+		return ((freq-2412)/5) + 1;
 		                   ^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#174: FILE: staging/otus/ioctl_new.c:115:
+		return ((freq-2412)/5) + 1;
+	} else {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#176: FILE: staging/otus/ioctl_new.c:117:
+		u16_t num_chan = sizeof(channel_frequency_11A)/sizeof(u32_t);
 		                                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#180: FILE: staging/otus/ioctl_new.c:121:
+				return channel_frequency_11A[ii-1];
 				                               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#203: FILE: staging/otus/ioctl_new.c:142:
+		u16_t num_chan = sizeof(channel_frequency_11A)/sizeof(u32_t);
 		                                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#207: FILE: staging/otus/ioctl_new.c:146:
+				return channel_frequency_11A[ii+1];
 				                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#254: FILE: staging/otus/ioctl_new.c:162:
+	char essidbuf[IW_ESSID_MAX_SIZE+1];
 	                               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#266: FILE: staging/otus/ioctl_new.c:170:
+	printk(KERN_ERR "usbdrv_ioctl_setessid\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#274: FILE: staging/otus/ioctl_new.c:174:
+		if (erq->length > (IW_ESSID_MAX_SIZE+1))
 		                                    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#290: FILE: staging/otus/ioctl_new.c:184:
+	printk(KERN_ERR "essidbuf: ");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#297: FILE: staging/otus/ioctl_new.c:187:
+		printk(KERN_ERR "%02x ", essidbuf[i]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#300: FILE: staging/otus/ioctl_new.c:189:
+	printk(KERN_ERR "\n");

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanSetSSID>
#314: FILE: staging/otus/ioctl_new.c:196:
+	zfiWlanSetSSID(dev, essidbuf, erq->length);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#315: FILE: staging/otus/ioctl_new.c:197:
+	#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#316: FILE: staging/otus/ioctl_new.c:198:
+		printk(KERN_ERR "macp->wd.ws.ssid: ");

CHECK:CAMELCASE: Avoid CamelCase: <ssidLen>
#322: FILE: staging/otus/ioctl_new.c:200:
+		for (i = 0; i < macp->wd.ws.ssidLen; i++)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#323: FILE: staging/otus/ioctl_new.c:201:
+			printk(KERN_ERR "%02x ", macp->wd.ws.ssid[i]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#329: FILE: staging/otus/ioctl_new.c:203:
+		printk(KERN_ERR "\n");

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanDisable>
#333: FILE: staging/otus/ioctl_new.c:206:
+	zfiWlanDisable(dev, 0);

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanEnable>
#334: FILE: staging/otus/ioctl_new.c:207:
+	zfiWlanEnable(dev);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#349: FILE: staging/otus/ioctl_new.c:217:
+	u8_t essidbuf[IW_ESSID_MAX_SIZE+1];
 	                               ^

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQuerySSID>
#359: FILE: staging/otus/ioctl_new.c:224:
+	zfiWlanQuerySSID(dev, essidbuf, &len);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#365: FILE: staging/otus/ioctl_new.c:228:
+	printk(KERN_ERR "ESSID: ");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#372: FILE: staging/otus/ioctl_new.c:231:
+		printk(KERN_ERR "%c", essidbuf[i]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#375: FILE: staging/otus/ioctl_new.c:233:
+	printk(KERN_ERR "\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#409: FILE: staging/otus/ioctl_new.c:257:
+u32 encode_ie(void *buf, u32 bufsize, const u8 *ie, u32 ielen,
+		const u8 *leader, u32 leader_len)

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#433: FILE: staging/otus/ioctl_new.c:270:
+	return (i == ielen ? p - (u8 *)buf:0);
 	                                  ^

CHECK:CAMELCASE: Avoid CamelCase: <zsBssInfo>
#446: FILE: staging/otus/ioctl_new.c:280:
+	char *end_buf, struct zsBssInfo *list)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#462: FILE: staging/otus/ioctl_new.c:288:
+		char    buf[64*2 + 30];
 		              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#472: FILE: staging/otus/ioctl_new.c:298:
+	current_ev = iwe_stream_add_event(info,	current_ev,
+					end_buf, &iwe, IW_EV_ADDR_LEN);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#489: FILE: staging/otus/ioctl_new.c:315:
+	current_ev = iwe_stream_add_point(info,	current_ev,
+					end_buf, &iwe, &list->ssid[2]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#506: FILE: staging/otus/ioctl_new.c:332:
+			current_ev = iwe_stream_add_event(info,	current_ev,
+						end_buf, &iwe, IW_EV_UINT_LEN);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iwe.u.freq.m <= 196'
#521: FILE: staging/otus/ioctl_new.c:346:
+		if ((184 <= iwe.u.freq.m) && (iwe.u.freq.m <= 196))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#521: FILE: staging/otus/ioctl_new.c:346:
+		if ((184 <= iwe.u.freq.m) && (iwe.u.freq.m <= 196))

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#533: FILE: staging/otus/ioctl_new.c:358:
+	current_ev = iwe_stream_add_event(info, current_ev,
+					end_buf, &iwe, IW_EV_FREQ_LEN);

CHECK:CAMELCASE: Avoid CamelCase: <signalStrength>
#547: FILE: staging/otus/ioctl_new.c:372:
+	iwe.u.qual.level = list->signalStrength;

CHECK:CAMELCASE: Avoid CamelCase: <signalQuality>
#549: FILE: staging/otus/ioctl_new.c:374:
+	iwe.u.qual.qual = list->signalQuality;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#551: FILE: staging/otus/ioctl_new.c:376:
+	current_ev = iwe_stream_add_event(info,	current_ev,
+					end_buf, &iwe, IW_EV_QUAL_LEN);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#569: FILE: staging/otus/ioctl_new.c:394:
+	current_ev = iwe_stream_add_point(info,	current_ev,
+					end_buf, &iwe, list->ssid);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#578: FILE: staging/otus/ioctl_new.c:403:
+	/* Rate : stuffing multiple values in a single event require a bit
+	* more of magic

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#584: FILE: staging/otus/ioctl_new.c:409:
+	iwe.u.bitrate.fixed = iwe.u.bitrate.disabled = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:CAMELCASE: Avoid CamelCase: <supportedRates>
#586: FILE: staging/otus/ioctl_new.c:411:
+	for (i = 0 ; i < list->supportedRates[1] ; i++) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#588: FILE: staging/otus/ioctl_new.c:413:
+		iwe.u.bitrate.value = ((list->supportedRates[i+2] & 0x7f)
 		                                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#592: FILE: staging/otus/ioctl_new.c:417:
+		current_val = iwe_stream_add_value(info, current_ev,
+				current_val, end_buf, &iwe, IW_EV_PARAM_LEN);

CHECK:CAMELCASE: Avoid CamelCase: <extSupportedRates>
#856: FILE: staging/otus/ioctl_new.c:426:
+	for (i = 0 ; i < list->extSupportedRates[1] ; i++) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#858: FILE: staging/otus/ioctl_new.c:428:
+		iwe.u.bitrate.value = ((list->extSupportedRates[i+2] & 0x7f)
 		                                                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#862: FILE: staging/otus/ioctl_new.c:432:
+		current_val = iwe_stream_add_value(info, current_ev,
+				current_val, end_buf, &iwe, IW_EV_PARAM_LEN);

CHECK:CAMELCASE: Avoid CamelCase: <beaconInterval>
#878: FILE: staging/otus/ioctl_new.c:448:
+	snprintf(buf, sizeof(buf), "bcn_int=%d", (list->beaconInterval[1] << 8)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#882: FILE: staging/otus/ioctl_new.c:452:
+	current_ev = iwe_stream_add_point(info, current_ev,
+						end_buf, &iwe, buf);

CHECK:CAMELCASE: Avoid CamelCase: <wpaIe>
#890: FILE: staging/otus/ioctl_new.c:460:
+	if (list->wpaIe[1] != 0) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#898: FILE: staging/otus/ioctl_new.c:468:
+			iwe.u.data.length = encode_ie(buf, sizeof(buf),
+					list->wpaIe, list->wpaIe[1]+2,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#898: FILE: staging/otus/ioctl_new.c:468:
+					list->wpaIe, list->wpaIe[1]+2,
 					                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#899: FILE: staging/otus/ioctl_new.c:469:
+					rsn_leader, sizeof(rsn_leader)-1);
 					                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#902: FILE: staging/otus/ioctl_new.c:472:
+			iwe.u.data.length = encode_ie(buf, sizeof(buf),
+					list->wpaIe, list->wpaIe[1]+2,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#902: FILE: staging/otus/ioctl_new.c:472:
+					list->wpaIe, list->wpaIe[1]+2,
 					                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#903: FILE: staging/otus/ioctl_new.c:473:
+					wpa_leader, sizeof(wpa_leader)-1);
 					                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#907: FILE: staging/otus/ioctl_new.c:477:
+			current_ev = iwe_stream_add_point(info, current_ev,
+							end_buf, &iwe, buf);

CHECK:CAMELCASE: Avoid CamelCase: <rsnIe>
#916: FILE: staging/otus/ioctl_new.c:486:
+	if (list->rsnIe[1] != 0) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#918: FILE: staging/otus/ioctl_new.c:488:
+		static const char rsn_leader[] = "rsn_ie=";
+		memset(&iwe, 0, sizeof(iwe));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#923: FILE: staging/otus/ioctl_new.c:493:
+			iwe.u.data.length = encode_ie(buf, sizeof(buf),
+			list->rsnIe, list->rsnIe[1]+2,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#923: FILE: staging/otus/ioctl_new.c:493:
+			list->rsnIe, list->rsnIe[1]+2,
 			                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#924: FILE: staging/otus/ioctl_new.c:494:
+			rsn_leader, sizeof(rsn_leader)-1);
 			                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#927: FILE: staging/otus/ioctl_new.c:497:
+				current_ev = iwe_stream_add_point(info,
+					current_ev, end_buf,  &iwe, buf);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#938: FILE: staging/otus/ioctl_new.c:508:
+	/* The other data in the scan result are not really
+	* interesting, so for now drop it

CHECK:CAMELCASE: Avoid CamelCase: <FreqKHz>
#967: FILE: staging/otus/ioctl_new.c:528:
+	u32_t FreqKHz;

CHECK:CAMELCASE: Avoid CamelCase: <DeviceOpened>
#1066: FILE: staging/otus/ioctl_new.c:572:
+	if (macp->DeviceOpened == 1) {

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanSetFrequency>
#1067: FILE: staging/otus/ioctl_new.c:573:
+		zfiWlanSetFrequency(dev, FreqKHz, 0); /* Immediate */

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQueryFrequency>
#1095: FILE: staging/otus/ioctl_new.c:594:
+	freq->m = zfiWlanQueryFrequency(dev);

CHECK:CAMELCASE: Avoid CamelCase: <WlanMode>
#1111: FILE: staging/otus/ioctl_new.c:605:
+	u8_t WlanMode;

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanSetWlanMode>
#1158: FILE: staging/otus/ioctl_new.c:628:
+	zfiWlanSetWlanMode(dev, WlanMode);

CHECK:CAMELCASE: Avoid CamelCase: <irqFlag>
#1174: FILE: staging/otus/ioctl_new.c:639:
+	unsigned long irqFlag;

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQueryWlanMode>
#1207: FILE: staging/otus/ioctl_new.c:650:
+	switch (zfiWlanQueryWlanMode(dev)) {

CHECK:SPACING: No space is necessary after a cast
#1252: FILE: staging/otus/ioctl_new.c:691:
+	struct iw_range *range = (struct iw_range *) extra;

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQueryAllowChannels>
#1276: FILE: staging/otus/ioctl_new.c:715:
+	channel_num = zfiWlanQueryAllowChannels(dev, channels);

WARNING:TYPO_SPELLING: 'Gurantee' may be misspelled - perhaps 'Guarantee'?
#1278: FILE: staging/otus/ioctl_new.c:717:
+	/* Gurantee reported channel numbers is less
 	   ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1279: FILE: staging/otus/ioctl_new.c:718:
+	/* Gurantee reported channel numbers is less
+	* or equal to IW_MAX_FREQUENCIES

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1373: FILE: staging/otus/ioctl_new.c:735:
+	#if 0

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1386: FILE: staging/otus/ioctl_new.c:746:
+			range->freq[val].m = (2412+(i-1)*5)*1000;
 			                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1386: FILE: staging/otus/ioctl_new.c:746:
+			range->freq[val].m = (2412+(i-1)*5)*1000;
 			                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1386: FILE: staging/otus/ioctl_new.c:746:
+			range->freq[val].m = (2412+(i-1)*5)*1000;
 			                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1386: FILE: staging/otus/ioctl_new.c:746:
+			range->freq[val].m = (2412+(i-1)*5)*1000;
 			                                   ^

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1401: FILE: staging/otus/ioctl_new.c:760:
+	/* MIMO Rate Not Defined Now
+	* For 802.11a, there are too more frequency.

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1428: FILE: staging/otus/ioctl_new.c:787:
+	/* estimated max throughput
+	* XXX need to cap it if we're running at ~2Mbps..

CHECK:CAMELCASE: Avoid CamelCase: <MacAddr>
#1439: FILE: staging/otus/ioctl_new.c:796:
+		struct sockaddr *MacAddr, char *extra)

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanSetMacAddress>
#1451: FILE: staging/otus/ioctl_new.c:805:
+		zfiWlanSetMacAddress(dev, (u16_t *)&MacAddr->sa_data[0]);

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanSetBssid>
#1454: FILE: staging/otus/ioctl_new.c:808:
+		zfiWlanSetBssid(dev, &MacAddr->sa_data[0]);

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQueryMacAddress>
#1514: FILE: staging/otus/ioctl_new.c:834:
+		zfiWlanQueryMacAddress(dev, &MacAddr->sa_data[0]);

CHECK:CAMELCASE: Avoid CamelCase: <adapterState>
#1517: FILE: staging/otus/ioctl_new.c:837:
+		if (macp->adapterState == ZM_STATUS_MEDIA_CONNECT) {

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQueryBssid>
#1518: FILE: staging/otus/ioctl_new.c:838:
+			zfiWlanQueryBssid(dev, &MacAddr->sa_data[0]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1523: FILE: staging/otus/ioctl_new.c:843:
+			memcpy(&MacAddr->sa_data[0], zero_addr,
+							sizeof(zero_addr));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1555: FILE: staging/otus/ioctl_new.c:867:
+	printk(DEFAULT_MESSAGE_LOGLEVEL "CWY - usbdrvwext_siwscan\n");

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanScan>
#1558: FILE: staging/otus/ioctl_new.c:869:
+	zfiWlanScan(dev);

CHECK:CAMELCASE: Avoid CamelCase: <zsBssListV1>
#1626: FILE: staging/otus/ioctl_new.c:884:
+	struct zsBssListV1 *pBssList = kmalloc(sizeof(struct zsBssListV1),

CHECK:CAMELCASE: Avoid CamelCase: <pBssList>
#1626: FILE: staging/otus/ioctl_new.c:884:
+	struct zsBssListV1 *pBssList = kmalloc(sizeof(struct zsBssListV1),

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*pBssList)...) over kmalloc(sizeof(struct zsBssListV1)...)
#1626: FILE: staging/otus/ioctl_new.c:884:
+	struct zsBssListV1 *pBssList = kmalloc(sizeof(struct zsBssListV1),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1639: FILE: staging/otus/ioctl_new.c:897:
+	printk(DEFAULT_MESSAGE_LOGLEVEL "giwscan - Report Scan Results\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1641: FILE: staging/otus/ioctl_new.c:899:
+	/* printk("giwscan - BssList Sreucture Len : %d\n", sizeof(BssList));
+	* printk("giwscan - BssList Count : %d\n",

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQueryBssListV1>
#1646: FILE: staging/otus/ioctl_new.c:904:
+	zfiWlanQueryBssListV1(dev, pBssList);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1650: FILE: staging/otus/ioctl_new.c:908:
+	printk(DEFAULT_MESSAGE_LOGLEVEL "giwscan - pBssList->bssCount : %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1651: FILE: staging/otus/ioctl_new.c:909:
+	printk(DEFAULT_MESSAGE_LOGLEVEL "giwscan - pBssList->bssCount : %d\n",
+						pBssList->bssCount);

CHECK:CAMELCASE: Avoid CamelCase: <bssCount>
#1651: FILE: staging/otus/ioctl_new.c:909:
+						pBssList->bssCount);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1656: FILE: staging/otus/ioctl_new.c:914:
+		/* Translate to WE format this entry
+		* current_ev = usbdrv_translate_scan(dev, info, current_ev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1660: FILE: staging/otus/ioctl_new.c:918:
+		current_ev = usbdrv_translate_scan(dev, info, current_ev,
+					end_buf, &pBssList->bssInfo[i]);

CHECK:CAMELCASE: Avoid CamelCase: <bssInfo>
#1660: FILE: staging/otus/ioctl_new.c:918:
+					end_buf, &pBssList->bssInfo[i]);

CHECK:CAMELCASE: Avoid CamelCase: <EssidBuf>
#1693: FILE: staging/otus/ioctl_new.c:942:
+	char EssidBuf[IW_ESSID_MAX_SIZE + 1];

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1740: FILE: staging/otus/ioctl_new.c:962:
+			zfiWlanSetFrequency(dev, zfiWlanQueryFrequency(dev),
+						FALSE);

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanSetEncryMode>
#1741: FILE: staging/otus/ioctl_new.c:963:
+			zfiWlanSetEncryMode(dev, zfiWlanQueryEncryMode(dev));

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQueryEncryMode>
#1741: FILE: staging/otus/ioctl_new.c:963:
+			zfiWlanSetEncryMode(dev, zfiWlanQueryEncryMode(dev));

CHECK:CAMELCASE: Avoid CamelCase: <EssidLen>
#1797: FILE: staging/otus/ioctl_new.c:981:
+	u8_t EssidLen;

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1824: FILE: staging/otus/ioctl_new.c:1008:
+	/* if (essid->pointer) {
+	* if (copy_to_user(essid->pointer, EssidBuf, essid->length)) {

CHECK:CAMELCASE: Avoid CamelCase: <zcIndextoRateBG>
#1920: FILE: staging/otus/ioctl_new.c:1054:
+	u16_t zcIndextoRateBG[16] = {1000, 2000, 5500, 11000, 0, 0, 0, 0,

CHECK:CAMELCASE: Avoid CamelCase: <zcRateToMCS>
#1922: FILE: staging/otus/ioctl_new.c:1056:
+	u16_t zcRateToMCS[] = {0xff, 0, 1, 2, 3, 0xb, 0xf, 0xa, 0xe, 0x9, 0xd,

CHECK:CAMELCASE: Avoid CamelCase: <RateIndex>
#1924: FILE: staging/otus/ioctl_new.c:1058:
+	u8_t i, RateIndex = 4;

CHECK:CAMELCASE: Avoid CamelCase: <RateKbps>
#1925: FILE: staging/otus/ioctl_new.c:1059:
+	u16_t RateKbps;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1946: FILE: staging/otus/ioctl_new.c:1080:
+		printk(DEFAULT_MESSAGE_LOGLEVEL "RateIndex : %d\n", RateIndex);

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanSetTxRate>
#1951: FILE: staging/otus/ioctl_new.c:1084:
+		zfiWlanSetTxRate(dev, i);

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQueryRxRate>
#1983: FILE: staging/otus/ioctl_new.c:1106:
+	frq->value = zfiWlanQueryRxRate(dev) * 1000;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val < 0'
#2012: FILE: staging/otus/ioctl_new.c:1124:
+	if ((val < 0) || (val > 2347))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val > 2347'
#2012: FILE: staging/otus/ioctl_new.c:1124:
+	if ((val < 0) || (val > 2347))

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanSetRtsThreshold>
#2016: FILE: staging/otus/ioctl_new.c:1127:
+	zfiWlanSetRtsThreshold(dev, val);

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQueryRtsThreshold>
#2046: FILE: staging/otus/ioctl_new.c:1144:
+	rts->value = zfiWlanQueryRtsThreshold(dev);

CHECK:CAMELCASE: Avoid CamelCase: <fragThreshold>
#2062: FILE: staging/otus/ioctl_new.c:1156:
+	u16_t fragThreshold;

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanSetFragThreshold>
#2079: FILE: staging/otus/ioctl_new.c:1166:
+	zfiWlanSetFragThreshold(dev, fragThreshold);

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQueryFragThreshold>
#2112: FILE: staging/otus/ioctl_new.c:1187:
+	val = zfiWlanQueryFragThreshold(dev);

CHECK:CAMELCASE: Avoid CamelCase: <zsKeyInfo>
#2210: FILE: staging/otus/ioctl_new.c:1235:
+	struct zsKeyInfo keyInfo;

CHECK:CAMELCASE: Avoid CamelCase: <keyInfo>
#2210: FILE: staging/otus/ioctl_new.c:1235:
+	struct zsKeyInfo keyInfo;

CHECK:CAMELCASE: Avoid CamelCase: <WepState>
#2212: FILE: staging/otus/ioctl_new.c:1237:
+	int WepState = ZM_ENCRYPTION_WEP_DISABLED;

CHECK:CAMELCASE: Avoid CamelCase: <keyLength>
#2220: FILE: staging/otus/ioctl_new.c:1245:
+		keyInfo.keyLength = erq->length;

CHECK:CAMELCASE: Avoid CamelCase: <keyIndex>
#2221: FILE: staging/otus/ioctl_new.c:1246:
+		keyInfo.keyIndex = (erq->flags & IW_ENCODE_INDEX) - 1;

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanSetKey>
#2226: FILE: staging/otus/ioctl_new.c:1251:
+		zfiWlanSetKey(dev, keyInfo);

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanRemoveKey>
#2230: FILE: staging/otus/ioctl_new.c:1255:
+			zfiWlanRemoveKey(dev, 0, i);

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanSetWepStatus>
#2236: FILE: staging/otus/ioctl_new.c:1261:
+		zfiWlanSetWepStatus(dev, WepState);

CHECK:CAMELCASE: Avoid CamelCase: <EncryptionMode>
#2310: FILE: staging/otus/ioctl_new.c:1280:
+	u8_t EncryptionMode;

CHECK:CAMELCASE: Avoid CamelCase: <keyLen>
#2311: FILE: staging/otus/ioctl_new.c:1281:
+	u8_t keyLen = 0;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2358: FILE: staging/otus/ioctl_new.c:1325:
+		printk(KERN_ERR "Unknown EncryMode\n");

CHECK:CAMELCASE: Avoid CamelCase: <PSMode>
#2375: FILE: staging/otus/ioctl_new.c:1338:
+	u8_t PSMode;

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanSetPowerSaveMode>
#2392: FILE: staging/otus/ioctl_new.c:1348:
+	zfiWlanSetPowerSaveMode(dev, PSMode);

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQueryPowerSaveMode>
#2928: FILE: staging/otus/ioctl_new.c:1365:
+	if (zfiWlanQueryPowerSaveMode(dev) == ZM_STA_PS_NONE)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2939: FILE: staging/otus/ioctl_new.c:1376:
+*^I^I   ^I void *w, char *extra)$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2939: FILE: staging/otus/ioctl_new.c:1376:
+/*int usbdrvwext_setparam(struct net_device *dev, struct iw_request_info *info,
+*		   	 void *w, char *extra)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3491: FILE: staging/otus/ioctl_new.c:1916:
+		printk(DEFAULT_MESSAGE_LOGLEVEL

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#3493: FILE: staging/otus/ioctl_new.c:1918:
+				" 0x%08x\n", zdreq->addr, *p);
 				    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#3501: FILE: staging/otus/ioctl_new.c:1924:
+				"usbdrv : write value : 0x%08x to memory addr :
 				                          ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3512: FILE: staging/otus/ioctl_new.c:1933:
+		printk(DEFAULT_MESSAGE_LOGLEVEL

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3516: FILE: staging/otus/ioctl_new.c:1937:
+		printk(DEFAULT_MESSAGE_LOGLEVEL "IOCTL TEST\n");

WARNING:IF_1: Consider removing the #if 1 and its #endif
#3517: FILE: staging/otus/ioctl_new.c:1938:
+		#if 1

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#3520: FILE: staging/otus/ioctl_new.c:1941:
+			if ((i&0x7) == 0)
 			      ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3521: FILE: staging/otus/ioctl_new.c:1942:
+				printk(DEFAULT_MESSAGE_LOGLEVEL "\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3522: FILE: staging/otus/ioctl_new.c:1943:
+			printk(DEFAULT_MESSAGE_LOGLEVEL "%02X ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3523: FILE: staging/otus/ioctl_new.c:1944:
+			printk(DEFAULT_MESSAGE_LOGLEVEL "%02X ",
+					(unsigned char)zdreq->data[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3525: FILE: staging/otus/ioctl_new.c:1946:
+		printk(DEFAULT_MESSAGE_LOGLEVEL "\n");

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#3636: FILE: staging/otus/ioctl_new.c:1950:
+		#if 0 {

CHECK:CAMELCASE: Avoid CamelCase: <zfiRecv80211>
#3648: FILE: staging/otus/ioctl_new.c:1962:
+			zfiRecv80211(dev, s, NULL);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3673: FILE: staging/otus/ioctl_new.c:1987:
+		printk(DEFAULT_MESSAGE_LOGLEVEL

WARNING:LINE_SPACING: Missing a blank line after declarations
#3696: FILE: staging/otus/ioctl_new.c:2010:
+		u8_t buffer[2];
+		zfiWlanQuerySignalInfo(dev, &buffer[0]);

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanQuerySignalInfo>
#3696: FILE: staging/otus/ioctl_new.c:2010:
+		zfiWlanQuerySignalInfo(dev, &buffer[0]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3697: FILE: staging/otus/ioctl_new.c:2011:
+		printk(DEFAULT_MESSAGE_LOGLEVEL

WARNING:LINE_SPACING: Missing a blank line after declarations
#3704: FILE: staging/otus/ioctl_new.c:2018:
+		u8_t buffer[2];
+		zfiWlanQuerySignalInfo(dev, &buffer[0]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3705: FILE: staging/otus/ioctl_new.c:2019:
+		printk(DEFAULT_MESSAGE_LOGLEVEL

CHECK:CAMELCASE: Avoid CamelCase: <vapId>
#3995: FILE: staging/otus/ioctl_new.c:2048:
+	u16_t vapId = 0;

CHECK:BRACES: braces {} should be used on all arms of this statement
#4004: FILE: staging/otus/ioctl_new.c:2057:
+		if (zfiWlanQueryWlanMode(dev) == ZM_MODE_AP) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#4007: FILE: staging/otus/ioctl_new.c:2060:
+		} else

CHECK:CAMELCASE: Avoid CamelCase: <initIv>
#4010: FILE: staging/otus/ioctl_new.c:2063:
+		keyInfo.initIv = zdparm->u.crypt.seq;

CHECK:CAMELCASE: Avoid CamelCase: <macAddr>
#4011: FILE: staging/otus/ioctl_new.c:2064:
+		keyInfo.macAddr = (u16_t *)zdparm->sta_addr;

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#4028: FILE: staging/otus/ioctl_new.c:2081:
+				/* if (macp->cardSetting.WPAIeLen==0)
+				* { 802.1x dynamic WEP

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#4039: FILE: staging/otus/ioctl_new.c:2092:
+				/* if (memcmp(zero_mac,zdparm->sta_addr, 6)==0)
+				* {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4049: FILE: staging/otus/ioctl_new.c:2102:
+			printk(KERN_ERR "Set Encryption Type NONE\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#4054: FILE: staging/otus/ioctl_new.c:2107:
+			/* //Linux Supplicant will inverse Tx/Rx key
+			* //So we inverse it back, CWYang(+)

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#4076: FILE: staging/otus/ioctl_new.c:2129:
+			/* CamEncryType = ZM_AES;
+			* if (idx == 0)

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#4098: FILE: staging/otus/ioctl_new.c:2151:
+	/* For Dynamic WEP key (Non-WPA Radius), the key ID range: 0-3
+	* In WPA/RSN mode, the key ID range: 1-3, usually, a broadcast key.

WARNING:LINE_SPACING: Missing a blank line after declarations
#4120: FILE: staging/otus/ioctl_new.c:2173:
+			int ii;
+			printk(DEFAULT_MESSAGE_LOGLEVEL

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4120: FILE: staging/otus/ioctl_new.c:2173:
+			printk(DEFAULT_MESSAGE_LOGLEVEL

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4123: FILE: staging/otus/ioctl_new.c:2176:
+				printk(DEFAULT_MESSAGE_LOGLEVEL

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4126: FILE: staging/otus/ioctl_new.c:2179:
+					printk(DEFAULT_MESSAGE_LOGLEVEL "\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4128: FILE: staging/otus/ioctl_new.c:2181:
+			printk(DEFAULT_MESSAGE_LOGLEVEL "\n");

CHECK:CAMELCASE: Avoid CamelCase: <vapAddr>
#4139: FILE: staging/otus/ioctl_new.c:2192:
+		keyInfo.vapAddr[0] = keyInfo.macAddr[0];

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4150: FILE: staging/otus/ioctl_new.c:2202:
+		printk(KERN_ERR "usbdrv_wpa_ioctl: ZD_CMD_SET_MLME\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4160: FILE: staging/otus/ioctl_new.c:2212:
+			printk(DEFAULT_MESSAGE_LOGLEVEL

CHECK:SPACING: No space is necessary after a cast
#4163: FILE: staging/otus/ioctl_new.c:2215:
+			if (zfiWlanDeauth(dev, (u16_t *) zdparm->sta_addr,

CHECK:CAMELCASE: Avoid CamelCase: <zfiWlanDeauth>
#4163: FILE: staging/otus/ioctl_new.c:2215:
+			if (zfiWlanDeauth(dev, (u16_t *) zdparm->sta_addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4164: FILE: staging/otus/ioctl_new.c:2216:
+			if (zfiWlanDeauth(dev, (u16_t *) zdparm->sta_addr,
+				zdparm->u.mlme.reason_code) != 0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4165: FILE: staging/otus/ioctl_new.c:2217:
+				printk(KERN_ERR "Can't deauthencate STA: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4166: FILE: staging/otus/ioctl_new.c:2218:
+				printk(KERN_ERR "Can't deauthencate STA: %s\n",
+					mac_addr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4168: FILE: staging/otus/ioctl_new.c:2220:
+				printk(KERN_ERR "Deauthenticate STA: %s"

WARNING:SPLIT_STRING: quoted string split across lines
#4169: FILE: staging/otus/ioctl_new.c:2221:
+				printk(KERN_ERR "Deauthenticate STA: %s"
+					"with reason code: %d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:MISSING_SPACE: break quoted strings at a space character
#4169: FILE: staging/otus/ioctl_new.c:2221:
+				printk(KERN_ERR "Deauthenticate STA: %s"
+					"with reason code: %d\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4173: FILE: staging/otus/ioctl_new.c:2225:
+			printk(DEFAULT_MESSAGE_LOGLEVEL

CHECK:SPACING: No space is necessary after a cast
#4176: FILE: staging/otus/ioctl_new.c:2228:
+			if (zfiWlanDeauth(dev, (u16_t *) zdparm->sta_addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4177: FILE: staging/otus/ioctl_new.c:2229:
+			if (zfiWlanDeauth(dev, (u16_t *) zdparm->sta_addr,
+				zdparm->u.mlme.reason_code) != 0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4178: FILE: staging/otus/ioctl_new.c:2230:
+				printk(KERN_ERR "Can't disassociate STA: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4179: FILE: staging/otus/ioctl_new.c:2231:
+				printk(KERN_ERR "Can't disassociate STA: %s\n",
+					mac_addr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4181: FILE: staging/otus/ioctl_new.c:2233:
+				printk(KERN_ERR "Disassociate STA: %s"

WARNING:SPLIT_STRING: quoted string split across lines
#4182: FILE: staging/otus/ioctl_new.c:2234:
+				printk(KERN_ERR "Disassociate STA: %s"
+					"with reason code: %d\n",

WARNING:MISSING_SPACE: break quoted strings at a space character
#4182: FILE: staging/otus/ioctl_new.c:2234:
+				printk(KERN_ERR "Disassociate STA: %s"
+					"with reason code: %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4186: FILE: staging/otus/ioctl_new.c:2238:
+			printk(KERN_ERR "MLME command: 0x%04x not support\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4187: FILE: staging/otus/ioctl_new.c:2239:
+			printk(KERN_ERR "MLME command: 0x%04x not support\n",
+				zdparm->u.mlme.cmd);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4193: FILE: staging/otus/ioctl_new.c:2245:
+		printk(KERN_ERR "usbdrv_wpa_ioctl: ZD_CMD_SCAN_REQ\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4196: FILE: staging/otus/ioctl_new.c:2248:
+		printk(KERN_ERR "usbdrv_wpa_ioctl:

CHECK:CAMELCASE: Avoid CamelCase: <Length>
#4200: FILE: staging/otus/ioctl_new.c:2252:
+		* zm_msg1_mm(ZM_LV_0, "CWY - wpaie Length : ",

CHECK:CAMELCASE: Avoid CamelCase: <wpaLen>
#4222: FILE: staging/otus/ioctl_new.c:2274:
+		printk(KERN_ERR "wd->ap.wpaLen : % d\n", len);

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#4226: FILE: staging/otus/ioctl_new.c:2278:
+			printk(KERN_ERR "0x%02x ", wpaie[ii]);
 			                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Copy>
#4237: FILE: staging/otus/ioctl_new.c:2289:
+		*     printk(KERN_ERR "Copy WPA IE into mWPAIe\n");

CHECK:CAMELCASE: Avoid CamelCase: <mWPAIe>
#4237: FILE: staging/otus/ioctl_new.c:2289:
+		*     printk(KERN_ERR "Copy WPA IE into mWPAIe\n");

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#4250: FILE: staging/otus/ioctl_new.c:2302:
+		printk(KERN_ERR "usbdrv_wpa_ioctl default : 0x%04x\n",
 		                                              ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#4388: FILE: staging/otus/ioctl_new.c:2342:
+			printk(KERN_ERR "0x%02x ",
 			                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Key>
#4395: FILE: staging/otus/ioctl_new.c:2347:
+		printk(KERN_ERR "Key Index : % d\n", zdparm->u.crypt.keyid);

CHECK:CAMELCASE: Avoid CamelCase: <Index>
#4395: FILE: staging/otus/ioctl_new.c:2347:
+		printk(KERN_ERR "Key Index : % d\n", zdparm->u.crypt.keyid);

CHECK:CAMELCASE: Avoid CamelCase: <Encryption>
#4396: FILE: staging/otus/ioctl_new.c:2348:
+		printk(KERN_ERR "Encryption key = ");

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#4398: FILE: staging/otus/ioctl_new.c:2350:
+			printk(KERN_ERR "0x%02x ", zdparm->u.crypt.key[ii]);
 			                   ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#4405: FILE: staging/otus/ioctl_new.c:2356:
+			printk(KERN_ERR "0x%02x ", zdparm->u.crypt.key[ii]);
 			                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#4487: FILE: staging/otus/ioctl_new.c:2415:
+		strcpy(wrq->u.name, "IEEE 802.11-DS");
 		                                ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#4625: FILE: staging/otus/ioctl_new.c:2511:
+		* "usbdrv : cmd = % 2x, reg = 0x%04lx,
 		                                ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#4626: FILE: staging/otus/ioctl_new.c:2512:
+		*value = 0x%08lx\n",
 		           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxO)
#4669: FILE: staging/otus/ioctl_new.c:2543:
+			"*************ZD_PARAM_ROAMING : % d\n", arg);
 			 ^

CHECK:CAMELCASE: Avoid CamelCase: <Station>
#4705: FILE: staging/otus/ioctl_new.c:2570:
+				printk(KERN_ERR "Station Mode\n");

CHECK:CAMELCASE: Avoid CamelCase: <Mode>
#4705: FILE: staging/otus/ioctl_new.c:2570:
+				printk(KERN_ERR "Station Mode\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4707: FILE: staging/otus/ioctl_new.c:2572:
+					&wpaIe, &wpalen); */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4709: FILE: staging/otus/ioctl_new.c:2574:
+					wpaIe[21], wpaIe[22], wpaIe[23]); */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4711: FILE: staging/otus/ioctl_new.c:2576:
+					wpaIe[17], wpaIe[18], wpaIe[19]); */

CHECK:CAMELCASE: Avoid CamelCase: <authMode>
#4716: FILE: staging/otus/ioctl_new.c:2581:
+				"wd->sta.authMode = ZM_AUTH_MODE_WPAPSK\n");

CHECK:CAMELCASE: Avoid CamelCase: <wepStatus>
#4761: FILE: staging/otus/ioctl_new.c:2621:
+				"wd->sta.wepStatus = ZM_ENCRYPTION_TKIP\n");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxO)
#4809: FILE: staging/otus/ioctl_new.c:2669:
+				"****************ZD_PARAM_COUNTERMEASURES : ");
 				 ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000134330.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 74 warnings, 152 checks, 5154 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000134330.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
