WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
allocation when it should not have been, I thought it might be a good idea to

CHECK:BIT_MACRO: Prefer using the BIT macro
#142: FILE: include/linux/lockdep.h:49:
+#define LOCKF_USED_IN_RECLAIM_FS	(1 << LOCK_USED_IN_RECLAIM_FS)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#145: FILE: include/linux/lockdep.h:52:
+#define LOCKF_HELD_OVER_RECLAIM_FS	(1 << LOCK_HELD_OVER_RECLAIM_FS)

CHECK:BIT_MACRO: Prefer using the BIT macro
#152: FILE: include/linux/lockdep.h:59:
+#define LOCKF_USED_IN_RECLAIM_FS_READ	(1 << LOCK_USED_IN_RECLAIM_FS_READ)

CHECK:BIT_MACRO: Prefer using the BIT macro
#155: FILE: include/linux/lockdep.h:62:
+#define LOCKF_HELD_OVER_RECLAIM_FS_READ	(1 << LOCK_HELD_OVER_RECLAIM_FS_READ)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#164: FILE: include/linux/lockdep.h:335:
+extern void lockdep_set_current_reclaim_state(gfp_t gfp_mask);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#165: FILE: include/linux/lockdep.h:336:
+extern void lockdep_clear_current_reclaim_state(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#166: FILE: include/linux/lockdep.h:337:
+extern void lockdep_trace_alloc(gfp_t mask);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: kernel/lockdep.c:472:
+get_usage_chars(struct lock_class *class, char *c1, char *c2, char *c3,
+					char *c4, char *c5, char *c6)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#263: FILE: kernel/lockdep.c:538:
+	printk("){%c%c%c%c%c%c}", c1, c2, c3, c4, c5, c6);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#278: FILE: kernel/lockdep.c:1338:
+	if (!check_usage(curr, prev, next, LOCK_USED_IN_RECLAIM_FS,
+					LOCK_HELD_OVER_RECLAIM_FS, "reclaim-fs"))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#288: FILE: kernel/lockdep.c:1348:
+	if (!check_usage(curr, prev, next, LOCK_USED_IN_RECLAIM_FS_READ,
+					LOCK_HELD_OVER_RECLAIM_FS, "reclaim-fs-read"))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#332: FILE: kernel/lockdep.c:2079:
+		if (!check_usage_forwards(curr, this,
+				LOCK_HELD_OVER_RECLAIM_FS_READ, "reclaim-fs-read"))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#385: FILE: kernel/lockdep.c:2196:
+		if (!check_usage_backwards(curr, this,
+				   LOCK_USED_IN_RECLAIM_FS_READ, "reclaim-fs-read"))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#464: FILE: kernel/lockdep.c:2297:
+			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 40)
#541: FILE: kernel/lockdep.c:2548:
+			if (!mark_lock(curr, hlock, LOCK_USED_IN_RECLAIM_FS_READ))
+					return 0;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 40)
#544: FILE: kernel/lockdep.c:2551:
+			if (!mark_lock(curr, hlock, LOCK_USED_IN_RECLAIM_FS))
+					return 0;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#631: FILE: kernel/lockdep_internals.h:36:
+get_usage_chars(struct lock_class *class, char *c1, char *c2, char *c3,
+					char *c4, char *c5, char *c6);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000175162.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 13 checks, 528 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000175162.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
