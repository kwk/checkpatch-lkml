WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#48: 
=46irstly, please note that I'm new to the kernel community, so if I'm doin=

WARNING:TYPO_SPELLING: 'onl' may be misspelled - perhaps 'only'?
#65: 
I'm attaching a first attempt at implementing it. I have tested it, but onl=
                                                                        ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id 'fab1872fcbb8a5cdb85d7e7a88ecf0cad99d1c80', maybe rebased or not pulled?
#89: 
commit fab1872fcbb8a5cdb85d7e7a88ecf0cad99d1c80

WARNING:TYPO_SPELLING: 'permision' may be misspelled - perhaps 'permission'?
#93: 
    [CIFS] Adds support for permision checking vs. posix acl.
                            ^^^^^^^^^

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#105: FILE: fs/cifs/cifsfs.c:283:
k)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#119: FILE: fs/cifs/cifsfs.c:706:
+	.check_acl =3D cifs_check_acl,
 	           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#129: FILE: fs/cifs/cifsfs.c:723:
+	.check_acl =3D cifs_check_acl,
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#140: FILE: fs/cifs/cifsfs.c:742:
+	.check_acl =3D cifs_check_acl,
 	           ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#162: FILE: fs/cifs/cifsfs.h:112:
+extern int cifs_check_acl(struct inode *inode, int mask);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#180: FILE: fs/cifs/xattr.c:380:
+	int rc =3D -EOPNOTSUPP;
 	       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#180: FILE: fs/cifs/xattr.c:380:
+	int rc =3D -EOPNOTSUPP;
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#183: FILE: fs/cifs/xattr.c:383:
+	struct dentry *dentry =3D NULL;
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#185: FILE: fs/cifs/xattr.c:385:
+	void *ea_value =3D NULL;
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#187: FILE: fs/cifs/xattr.c:387:
+	struct posix_acl *acl =3D NULL;
 	                      ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#190: FILE: fs/cifs/xattr.c:390:
+	/* CIFS gets acl from server by path, and thus needs a dentry rather than
+	   an inode. Note that the path of each dentry will point to the same ino=

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#193: FILE: fs/cifs/xattr.c:392:
+	   doesn't matter which one we pick, so just pick the fist. */

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#195: FILE: fs/cifs/xattr.c:394:
+		dentry =3D list_first_entry(&inode->i_dentry, struct dentry, d_alias);
 		       ^

WARNING:TYPO_SPELLING: 'wron' may be misspelled - perhaps 'wrong'?
#197: FILE: fs/cifs/xattr.c:396:
+	/* If we didn't get an dentry for the inode, something went terribly wron=
 	                                                                     ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#199: FILE: fs/cifs/xattr.c:397:
+	/* If we didn't get an dentry for the inode, something went terribly wron=
+	   All we can do at this point is to return an error. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#199: FILE: fs/cifs/xattr.c:397:
+	   All we can do at this point is to return an error. */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#200: FILE: fs/cifs/xattr.c:398:
+	if (!dentry || IS_ERR(dentry))=20
 	                              ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#200: FILE: fs/cifs/xattr.c:398:
+	if (!dentry || IS_ERR(dentry))=20

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#204: FILE: fs/cifs/xattr.c:402:
+	/* Try to fit the extended attribute corresponding to the posix acl in 4k
+	   memory. 4k was chosen because it always fits in a single page, and is

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#205: FILE: fs/cifs/xattr.c:403:
+	   the maximum on a default ext2/3/4 backing fs. */

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#206: FILE: fs/cifs/xattr.c:404:
+	buf_size =3D 4096;
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#207: FILE: fs/cifs/xattr.c:405:
+	ea_value =3D kmalloc(buf_size, GFP_KERNEL);
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#209: FILE: fs/cifs/xattr.c:407:
+		rc =3D -EAGAIN;
 		   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#209: FILE: fs/cifs/xattr.c:407:
+		rc =3D -EAGAIN;
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#212: FILE: fs/cifs/xattr.c:410:
+	ea_size =3D cifs_getxattr(dentry, POSIX_ACL_XATTR_ACCESS, ea_value, buf_s=
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#212: FILE: fs/cifs/xattr.c:410:
+	ea_size =3D cifs_getxattr(dentry, POSIX_ACL_XATTR_ACCESS, ea_value, buf_s=
 	                                                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#216: FILE: fs/cifs/xattr.c:413:
+	if (ea_size =3D=3D -ERANGE) {
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#216: FILE: fs/cifs/xattr.c:413:
+	if (ea_size =3D=3D -ERANGE) {
 	               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#216: FILE: fs/cifs/xattr.c:413:
+	if (ea_size =3D=3D -ERANGE) {
 	                   ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#216: FILE: fs/cifs/xattr.c:413:
+	if (ea_size =3D=3D -ERANGE) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#218: FILE: fs/cifs/xattr.c:415:
+		buf_size =3D 65536;
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#219: FILE: fs/cifs/xattr.c:416:
+		ea_value =3D kmalloc(buf_size, GFP_KERNEL);
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#221: FILE: fs/cifs/xattr.c:418:
+			rc =3D -EAGAIN;
 			   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#221: FILE: fs/cifs/xattr.c:418:
+			rc =3D -EAGAIN;
 			       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#224: FILE: fs/cifs/xattr.c:421:
+		ea_size =3D cifs_getxattr(dentry, POSIX_ACL_XATTR_ACCESS, ea_value, buf_=
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#224: FILE: fs/cifs/xattr.c:421:
+		ea_size =3D cifs_getxattr(dentry, POSIX_ACL_XATTR_ACCESS, ea_value, buf_=
 		                                                                        ^

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#229: FILE: fs/cifs/xattr.c:425:
+	if (ea_size <=3D 0) {
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#230: FILE: fs/cifs/xattr.c:426:
+		rc =3D -EAGAIN;
 		   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#230: FILE: fs/cifs/xattr.c:426:
+		rc =3D -EAGAIN;
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#231: FILE: fs/cifs/xattr.c:427:
+		if (ea_size =3D=3D -EOPNOTSUPP || ea_size =3D=3D -EIO || ea_size =3D=3D =
 		            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#231: FILE: fs/cifs/xattr.c:427:
+		if (ea_size =3D=3D -EOPNOTSUPP || ea_size =3D=3D -EIO || ea_size =3D=3D =
 		               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#231: FILE: fs/cifs/xattr.c:427:
+		if (ea_size =3D=3D -EOPNOTSUPP || ea_size =3D=3D -EIO || ea_size =3D=3D =
 		                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#231: FILE: fs/cifs/xattr.c:427:
+		if (ea_size =3D=3D -EOPNOTSUPP || ea_size =3D=3D -EIO || ea_size =3D=3D =
 		                                          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#231: FILE: fs/cifs/xattr.c:427:
+		if (ea_size =3D=3D -EOPNOTSUPP || ea_size =3D=3D -EIO || ea_size =3D=3D =
 		                                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#231: FILE: fs/cifs/xattr.c:427:
+		if (ea_size =3D=3D -EOPNOTSUPP || ea_size =3D=3D -EIO || ea_size =3D=3D =
 		                                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#231: FILE: fs/cifs/xattr.c:427:
+		if (ea_size =3D=3D -EOPNOTSUPP || ea_size =3D=3D -EIO || ea_size =3D=3D =
 		                                                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#231: FILE: fs/cifs/xattr.c:427:
+		if (ea_size =3D=3D -EOPNOTSUPP || ea_size =3D=3D -EIO || ea_size =3D=3D =
 		                                                                    ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#231: FILE: fs/cifs/xattr.c:427:
+		if (ea_size =3D=3D -EOPNOTSUPP || ea_size =3D=3D -EIO || ea_size =3D=3D =

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#234: FILE: fs/cifs/xattr.c:428:
+			rc =3D ea_size;
 			   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#239: FILE: fs/cifs/xattr.c:433:
+	acl =3D posix_acl_from_xattr(ea_value, ea_size);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#241: FILE: fs/cifs/xattr.c:435:
+		rc =3D PTR_ERR(acl);
 		   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#243: FILE: fs/cifs/xattr.c:437:
+		rc =3D posix_acl_permission(inode, acl, mask);
 		   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#245: FILE: fs/cifs/xattr.c:439:
+		rc =3D -EAGAIN;
 		   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#245: FILE: fs/cifs/xattr.c:439:
+		rc =3D -EAGAIN;
 		       ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000005867.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 38 errors, 11 warnings, 9 checks, 138 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000005867.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
