WARNING:TYPO_SPELLING: 'exmple' may be misspelled - perhaps 'example'?
#79: 
the thread ID as it is now. And I only hooked up "stat64()" as an exmple. 
                                                                  ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#132: FILE: arch/i386/kernel/process.c:735:
+^I * on the next scheduling event. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#135: FILE: arch/i386/kernel/process.c:738:
+^I * "do not try this again". If it failed once, we shouldn't waste $

CHECK:SPACING: No space is necessary after a cast
#156: FILE: arch/i386/kernel/process.c:759:
+	status = (int __user *) regs.edx;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#157: FILE: arch/i386/kernel/process.c:760:
+	user_args = (unsigned long __user *) regs.esi;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#198: FILE: include/linux/sched.h:1660:
+extern long do_async(void *async_cookie, unsigned int syscall, unsigned long flags,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#199: FILE: include/linux/sched.h:1661:
+extern long do_async(void *async_cookie, unsigned int syscall, unsigned long flags,
+	 int __user *status, unsigned long __user *user_args);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#200: FILE: include/linux/sched.h:1662:
+extern void schedule_async(void);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: include/linux/sched.h:1663:
+                                        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: include/linux/sched.h:1663:
+                                        $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: include/linux/sched.h:1663:
+                                        $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#202: FILE: include/linux/sched.h:1664:
+                                        
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#220: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#225: FILE: kernel/async.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#226: FILE: kernel/async.c:2:
+ * kernel/async.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#233: FILE: kernel/async.c:9:
+#include <asm/uaccess.h>

WARNING:NEW_TYPEDEFS: do not add new typedefs
#236: FILE: kernel/async.c:12:
+typedef asmlinkage long (*master_syscall_t)(unsigned long arg, ...);

CHECK:SPACING: No space is necessary after a cast
#239: FILE: kernel/async.c:15:
+	{ (master_syscall_t) (syscall), (param) }

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#248: FILE: kernel/async.c:24:
+long do_async(

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#269: FILE: kernel/async.c:45:
+	size = sizeof(unsigned long)*desc->args;
 	                            ^

WARNING:TYPO_SPELLING: 'origial' may be misspelled - perhaps 'original'?
#285: FILE: kernel/async.c:61:
+	 * origial parent, and cleared out the async_cookie. We're
 	   ^^^^^^^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#311: FILE: kernel/fork.c:1423:
+void __attribute__ ((weak)) schedule_async(void)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#313: FILE: kernel/fork.c:1425:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000469243.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 10 warnings, 9 checks, 214 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000469243.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
