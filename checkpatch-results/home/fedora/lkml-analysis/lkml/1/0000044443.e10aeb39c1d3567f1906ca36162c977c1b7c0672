WARNING:LINE_SPACING: Missing a blank line after declarations
#124: FILE: arch/x86/kvm/mmu.c:2198:
+	struct kvm_arch_async_pf arch;
+	arch.token = (vcpu->arch.async_pf_id++ << 12) | vcpu->vcpu_id;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#220: FILE: arch/x86/kvm/x86.c:5258:
 	return vcpu->arch.mp_state == KVM_MP_STATE_RUNNABLE
+		|| !list_empty_careful(&vcpu->async_pf_done)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#225: FILE: arch/x86/kvm/x86.c:5260:
 		|| vcpu->arch.mp_state == KVM_MP_STATE_SIPI_RECEIVED
+		|| vcpu->arch.nmi_pending

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#226: FILE: arch/x86/kvm/x86.c:5261:
+		|| vcpu->arch.nmi_pending
+		|| (kvm_arch_interrupt_allowed(vcpu) &&

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#306: FILE: include/linux/kvm_host.h:124:
+	spinlock_t async_pf_lock;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#330: FILE: include/trace/events/kvm.h:149:
+TRACE_EVENT(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#335: FILE: include/trace/events/kvm.h:154:
+	TP_STRUCT__entry(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#339: FILE: include/trace/events/kvm.h:158:
+	TP_fast_assign(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#346: FILE: include/trace/events/kvm.h:165:
+TRACE_EVENT(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#351: FILE: include/trace/events/kvm.h:170:
+	TP_STRUCT__entry(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#357: FILE: include/trace/events/kvm.h:176:
+	TP_fast_assign(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#367: FILE: include/trace/events/kvm.h:186:
+TRACE_EVENT(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#372: FILE: include/trace/events/kvm.h:191:
+	TP_STRUCT__entry(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#378: FILE: include/trace/events/kvm.h:197:
+	TP_fast_assign(

CHECK:BRACES: braces {} should be used on all arms of this statement
#458: FILE: virt/kvm/kvm_main.c:858:
+	if (unlikely(npages != 1)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vma"
#464: FILE: virt/kvm/kvm_main.c:864:
+		if (vma == NULL || addr < vma->vm_start ||

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#472: FILE: virt/kvm/kvm_main.c:872:
+		BUG_ON(!kvm_is_mmio_pfn(*pfn));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: Unbalanced braces around else statement
#473: FILE: virt/kvm/kvm_main.c:873:
+	} else

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#531: FILE: virt/kvm/kvm_main.c:1178:
+	if (waitqueue_active(q))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!work->page"
#561: FILE: virt/kvm/kvm_main.c:1208:
+		if (work->page == NULL) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#564: FILE: virt/kvm/kvm_main.c:1211:
+			return;
+		} else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#596: FILE: virt/kvm/kvm_main.c:1243:
+	/* do alloc atomic since if we are going to sleep anyway we
+	   may as well sleep faulting in page */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#596: FILE: virt/kvm/kvm_main.c:1243:
+	   may as well sleep faulting in page */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#612: FILE: virt/kvm/kvm_main.c:1259:
+	/* this can't really happen otherwise gfn_to_pfn_async
+	   would succeed */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#612: FILE: virt/kvm/kvm_main.c:1259:
+	   would succeed */

WARNING:NEEDLESS_IF: kmem_cache_destroy(NULL) is safe and this check is probably not required
#683: FILE: virt/kvm/kvm_main.c:2373:
+	if (async_pf_cache)
+		kmem_cache_destroy(async_pf_cache);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000044443.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 17 checks, 579 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000044443.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
