WARNING:BAD_SIGN_OFF: Use a single space after Cc:
#39: 
CC:             Alan Cox alan@lxorguk.ukuu.org.uk

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Alan Cox alan@lxorguk.ukuu.org.uk'
#39: 
CC:             Alan Cox alan@lxorguk.ukuu.org.uk

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#40: 
Signed-off-by:	Douglas Thompson <dougthompson@xmission.com>

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct edac_device_ctl_info *' should also have an identifier name
#75: FILE: drivers/edac/edac_core.h:482:
+	ssize_t (*show)(struct edac_device_ctl_info *, char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#75: FILE: drivers/edac/edac_core.h:482:
+	ssize_t (*show)(struct edac_device_ctl_info *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct edac_device_ctl_info *' should also have an identifier name
#76: FILE: drivers/edac/edac_core.h:483:
+	ssize_t (*store)(struct edac_device_ctl_info *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#76: FILE: drivers/edac/edac_core.h:483:
+	ssize_t (*store)(struct edac_device_ctl_info *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#76: FILE: drivers/edac/edac_core.h:483:
+	ssize_t (*store)(struct edac_device_ctl_info *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kobject *' should also have an identifier name
#97: FILE: drivers/edac/edac_core.h:491:
+	ssize_t (*show)(struct kobject *, struct attribute *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct attribute *' should also have an identifier name
#97: FILE: drivers/edac/edac_core.h:491:
+	ssize_t (*show)(struct kobject *, struct attribute *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#97: FILE: drivers/edac/edac_core.h:491:
+	ssize_t (*show)(struct kobject *, struct attribute *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kobject *' should also have an identifier name
#98: FILE: drivers/edac/edac_core.h:492:
+	ssize_t (*store)(struct kobject *, struct attribute *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct attribute *' should also have an identifier name
#98: FILE: drivers/edac/edac_core.h:492:
+	ssize_t (*store)(struct kobject *, struct attribute *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#98: FILE: drivers/edac/edac_core.h:492:
+	ssize_t (*store)(struct kobject *, struct attribute *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#98: FILE: drivers/edac/edac_core.h:492:
+	ssize_t (*store)(struct kobject *, struct attribute *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#99: FILE: drivers/edac/edac_core.h:493:
+	ssize_t (*store)(struct kobject *, struct attribute *,
+			const char *, size_t);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#143: FILE: drivers/edac/edac_core.h:633:
+		char *edac_device_name, unsigned nr_instances,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#144: FILE: drivers/edac/edac_core.h:634:
+		char *edac_block_name, unsigned nr_blocks,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#160: FILE: drivers/edac/edac_device.c:70:
+	struct edac_dev_sysfs_block_attribute *attrib_spec, unsigned nr_attrib)

WARNING:TYPO_SPELLING: 'specificed' may be misspelled - perhaps 'specified'?
#215: FILE: drivers/edac/edac_device.c:117:
+		/* no attribute array specificed */
 		                      ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nr_attrib == 0'
#283: FILE: drivers/edac/edac_device.c:180:
+			if ((nr_attrib == 0) || (attrib_spec == NULL))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'attrib_spec == NULL'
#283: FILE: drivers/edac/edac_device.c:180:
+			if ((nr_attrib == 0) || (attrib_spec == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!attrib_spec"
#283: FILE: drivers/edac/edac_device.c:180:
+			if ((nr_attrib == 0) || (attrib_spec == NULL))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#288: FILE: drivers/edac/edac_device.c:185:
+			attrib_p = &dev_attrib[block*nr_instances*nr_attrib];
 			                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#288: FILE: drivers/edac/edac_device.c:185:
+			attrib_p = &dev_attrib[block*nr_instances*nr_attrib];
 			                                         ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sysfs_attrib"
#328: FILE: drivers/edac/edac_device_sysfs.c:489:
+	if (sysfs_attrib != NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#331: FILE: drivers/edac/edac_device_sysfs.c:492:
+			err = sysfs_create_file(&block->kobj,
+				(struct attribute *) &sysfs_attrib[i]);

CHECK:SPACING: No space is necessary after a cast
#331: FILE: drivers/edac/edac_device_sysfs.c:492:
+				(struct attribute *) &sysfs_attrib[i]);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000408851.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 18 warnings, 9 checks, 279 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000408851.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
