WARNING:SPLIT_STRING: quoted string split across lines
#59: FILE: fs/fat/cache.c:245:
+			fat_fs_error(sb, __func__, "detected the cluster "
+				"chain loop (i_pos %lld)",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#71: FILE: fs/fat/cache.c:256:
+			fat_fs_error(sb, __func__, "invalid cluster chain"
+				     " (i_pos %lld)",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#82: FILE: fs/fat/cache.c:289:
+		fat_fs_error(sb, __func__, "request beyond EOF (i_pos %lld)",
+			MSDOS_I(inode)->i_pos);

WARNING:SPLIT_STRING: quoted string split across lines
#97: FILE: fs/fat/dir.c:89:
+		fat_fs_warning(sb, __func__, "Directory bread(block %llu) "
+			"failed",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#109: FILE: fs/fat/dir.c:1274:
+		fat_fs_warning(sb, __func__, "Corrupted directory (i_pos %lld)",
+			MSDOS_I(dir)->i_pos);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#132: FILE: fs/fat/fat.h:318:
+extern void fat_fs_error(struct super_block *s, const char *function,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#133: FILE: fs/fat/fat.h:319:
+extern void fat_fs_error(struct super_block *s, const char *function,
+			const char *fmt, ...)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(3, 4) over __attribute__((format(printf, 3, 4)))
#134: FILE: fs/fat/fat.h:320:
+	__attribute__ ((format (printf, 3, 4))) __cold;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#135: FILE: fs/fat/fat.h:321:
+extern void fat_fs_warning(struct super_block *s, const char *function,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#136: FILE: fs/fat/fat.h:322:
+extern void fat_fs_warning(struct super_block *s, const char *function,
+			const char *fmt, ...)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(3, 4) over __attribute__((format(printf, 3, 4)))
#137: FILE: fs/fat/fat.h:323:
+	__attribute__ ((format (printf, 3, 4))) __cold;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: fs/fat/fatent.c:97:
+	fat_fs_warning(sb, __func__, "FAT read failed (blocknr %llu)",
+		(llu)blocknr);

WARNING:SPLIT_STRING: quoted string split across lines
#162: FILE: fs/fat/fatent.c:110:
+		fat_fs_warning(sb, __func__, "FAT: FAT read failed "
+			"(blocknr %llu)",

WARNING:SPLIT_STRING: quoted string split across lines
#173: FILE: fs/fat/fatent.c:351:
+		fat_fs_error(sb, __func__, "invalid access to FAT "
+			"(entry 0x%08x)", entry);

WARNING:SPLIT_STRING: quoted string split across lines
#184: FILE: fs/fat/fatent.c:564:
+			fat_fs_error(sb, __func__, "deleting FAT entry beyond "
+				"EOF");

WARNING:SPLIT_STRING: quoted string split across lines
#215: FILE: fs/fat/inode.c:80:
+		fat_fs_error(sb, __func__, "corrupted file size "
+			"(i_pos %lld, %lld)",

WARNING:SPLIT_STRING: quoted string split across lines
#226: FILE: fs/fat/inode.c:584:
+		fat_fs_warning(sb, __func__, "unable to read inode block "
+		       "for updating (i_pos %lld)", i_pos);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#237: FILE: fs/fat/inode.c:1136:
+				printk(KERN_ERR "FAT: Unrecognized mount "

WARNING:SPLIT_STRING: quoted string split across lines
#238: FILE: fs/fat/inode.c:1137:
+				printk(KERN_ERR "FAT: Unrecognized mount "
+					"option \"%s\" or missing value\n", p);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#249: FILE: fs/fat/inode.c:1146:
+		printk(KERN_WARNING "FAT: utf8 is not a recommended IO "

WARNING:SPLIT_STRING: quoted string split across lines
#250: FILE: fs/fat/inode.c:1147:
+		printk(KERN_WARNING "FAT: utf8 is not a recommended IO "
+			"charset for FAT filesystems, filesystem will be "

WARNING:SPLIT_STRING: quoted string split across lines
#251: FILE: fs/fat/inode.c:1148:
+			"charset for FAT filesystems, filesystem will be "
+			"case sensitive!");

WARNING:SPLIT_STRING: quoted string split across lines
#269: FILE: fs/fat/inode.c:1249:
+			fat_fs_warning(sb, __func__, "bogus number of reserved "
+					"sectors");

WARNING:SPLIT_STRING: quoted string split across lines
#277: FILE: fs/fat/inode.c:1256:
+			fat_fs_warning(sb, __func__, "bogus number of FAT "
+					"structure");

WARNING:SPLIT_STRING: quoted string split across lines
#288: FILE: fs/fat/inode.c:1270:
+			fat_fs_warning(sb, __func__, "invalid media value "
+				"(0x%02x)",

WARNING:SPLIT_STRING: quoted string split across lines
#300: FILE: fs/fat/inode.c:1281:
+			fat_fs_warning(sb, __func__, "bogus logical sector "
+				"size %u",

WARNING:SPLIT_STRING: quoted string split across lines
#311: FILE: fs/fat/inode.c:1290:
+			fat_fs_warning(sb, __func__, "bogus sectors per "
+				"cluster %u",

WARNING:SPLIT_STRING: quoted string split across lines
#321: FILE: fs/fat/inode.c:1298:
+		fat_fs_warning(sb, __func__, "logical sector size too small "
+			"for device"

WARNING:SPLIT_STRING: quoted string split across lines
#322: FILE: fs/fat/inode.c:1299:
+			"for device"
+		       " (logical sector size = %u)", logical_sector_size);

WARNING:SPLIT_STRING: quoted string split across lines
#333: FILE: fs/fat/inode.c:1308:
+			fat_fs_warning(sb, __func__, "unable to set "
+				"blocksize %u",

WARNING:SPLIT_STRING: quoted string split across lines
#343: FILE: fs/fat/inode.c:1315:
+			fat_fs_warning(sb, __func__, "unable to read "
+				"boot sector (logical sector size = %lu)",

WARNING:SPLIT_STRING: quoted string split across lines
#355: FILE: fs/fat/inode.c:1352:
+			fat_fs_warning(sb, __func__, "bread failed, FSINFO "
+				"block (sector = %lu)",

WARNING:SPLIT_STRING: quoted string split across lines
#367: FILE: fs/fat/inode.c:1383:
+			fat_fs_warning(sb, __func__, "bogus directroy-entries"
+				" per block (%u)",

WARNING:SPLIT_STRING: quoted string split across lines
#379: FILE: fs/fat/inode.c:1407:
+			fat_fs_warning(sb, __func__, "count of clusters too "
+				"big (%u)",

WARNING:SPLIT_STRING: quoted string split across lines
#400: FILE: fs/fat/inode.c:1449:
+			fat_fs_warning(sb, __func__, "IO charset %s not "
+				"found",

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#423: FILE: fs/fat/misc.c:22:
+void fat_fs_error(struct super_block *s, const char * function,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#424: FILE: fs/fat/misc.c:23:
+void fat_fs_error(struct super_block *s, const char * function,
+			const char *fmt, ...)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#430: FILE: fs/fat/misc.c:28:
+	printk(KERN_ERR "FAT: Filesystem error (dev %s): %s:\n", s->s_id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#431: FILE: fs/fat/misc.c:29:
+	printk(KERN_ERR "FAT: Filesystem error (dev %s): %s:\n", s->s_id,
+		function);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#443: FILE: fs/fat/misc.c:51:
+void fat_fs_warning(struct super_block *s, const char * function,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#444: FILE: fs/fat/misc.c:52:
+void fat_fs_warning(struct super_block *s, const char * function,
+			const char *fmt, ...)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#448: FILE: fs/fat/misc.c:56:
+	printk(KERN_ERR "FAT: Filesystem warning (dev %s): %s:\n", s->s_id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#449: FILE: fs/fat/misc.c:57:
+	printk(KERN_ERR "FAT: Filesystem warning (dev %s): %s:\n", s->s_id,
+		function);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#451: FILE: fs/fat/misc.c:59:
+	printk(KERN_ERR "    ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#454: FILE: fs/fat/misc.c:62:
+	printk("\n");

WARNING:SPLIT_STRING: quoted string split across lines
#477: FILE: fs/fat/misc.c:88:
+		fat_fs_warning(sb, __func__, "Invalid FSINFO signature: "
+		       "0x%08x, 0x%08x (sector = %lu)",

WARNING:SPLIT_STRING: quoted string split across lines
#490: FILE: fs/fat/misc.c:157:
+		fat_fs_error(sb, __func__, "clusters badly computed "
+			"(%d != %llu)",

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000117421.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 34 warnings, 11 checks, 416 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000117421.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
