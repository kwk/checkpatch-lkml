WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#84: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#89: FILE: arch/arm/plat-omap/include/plat/vram.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#105: FILE: arch/arm/plat-omap/include/plat/vram.h:17:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#106: FILE: arch/arm/plat-omap/include/plat/vram.h:18:
+ * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#118: FILE: arch/arm/plat-omap/include/plat/vram.h:30:
+extern int omap_vram_add_region(unsigned long paddr, size_t size);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#119: FILE: arch/arm/plat-omap/include/plat/vram.h:31:
+extern int omap_vram_free(unsigned long paddr, size_t size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#120: FILE: arch/arm/plat-omap/include/plat/vram.h:32:
+extern int omap_vram_alloc(int mtype, size_t size, unsigned long *paddr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#121: FILE: arch/arm/plat-omap/include/plat/vram.h:33:
+extern int omap_vram_reserve(unsigned long paddr, size_t size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#122: FILE: arch/arm/plat-omap/include/plat/vram.h:34:
+extern void omap_vram_get_info(unsigned long *vram, unsigned long *free_vram,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: arch/arm/plat-omap/include/plat/vram.h:35:
+extern void omap_vram_get_info(unsigned long *vram, unsigned long *free_vram,
+		unsigned long *largest_free_block);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#126: FILE: arch/arm/plat-omap/include/plat/vram.h:38:
+extern void omap_vram_set_sdram_vram(u32 size, u32 start);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#127: FILE: arch/arm/plat-omap/include/plat/vram.h:39:
+extern void omap_vram_set_sram_vram(u32 size, u32 start);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#129: FILE: arch/arm/plat-omap/include/plat/vram.h:41:
+extern void omap_vram_reserve_sdram(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#130: FILE: arch/arm/plat-omap/include/plat/vram.h:42:
+extern unsigned long omap_vram_reserve_sram(unsigned long sram_pstart,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#141: FILE: arch/arm/plat-omap/include/plat/vram.h:53:
+static inline unsigned long omap_vram_reserve_sram(unsigned long sram_pstart,
+					    unsigned long sram_vstart,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#169: FILE: arch/arm/plat-omap/sram.c:191:
+	reserved = omap_vram_reserve_sram(omap_sram_start, omap_sram_base,
+			omap_sram_size,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#222: FILE: drivers/video/omap2/vram.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#238: FILE: drivers/video/omap2/vram.c:17:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#239: FILE: drivers/video/omap2/vram.c:18:
+ * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#271: FILE: drivers/video/omap2/vram.c:50:
+ * time when we cannot yet allocate the region list */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#284: FILE: drivers/video/omap2/vram.c:63:
+	unsigned pages;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#291: FILE: drivers/video/omap2/vram.c:70:
+	unsigned pages;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#307: FILE: drivers/video/omap2/vram.c:86:
+static struct vram_region *omap_vram_create_region(unsigned long paddr,
+		unsigned pages)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#307: FILE: drivers/video/omap2/vram.c:86:
+		unsigned pages)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#322: FILE: drivers/video/omap2/vram.c:101:
+#if 0

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#331: FILE: drivers/video/omap2/vram.c:110:
+static struct vram_alloc *omap_vram_create_allocation(struct vram_region *vr,
+		unsigned long paddr, unsigned pages)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#331: FILE: drivers/video/omap2/vram.c:110:
+		unsigned long paddr, unsigned pages)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#363: FILE: drivers/video/omap2/vram.c:142:
+	unsigned pages;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#367: FILE: drivers/video/omap2/vram.c:146:
+		DBG("adding region paddr %08lx size %d\n",
+				paddr, size);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rm"
#373: FILE: drivers/video/omap2/vram.c:152:
+		if (rm == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#393: FILE: drivers/video/omap2/vram.c:172:
+	unsigned start, end;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#422: FILE: drivers/video/omap2/vram.c:201:
+static int _omap_vram_reserve(unsigned long paddr, unsigned pages)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!omap_vram_create_allocation"
#461: FILE: drivers/video/omap2/vram.c:240:
+		if (omap_vram_create_allocation(rm, paddr, pages) == NULL)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#472: FILE: drivers/video/omap2/vram.c:251:
+	unsigned pages;

WARNING:LINE_SPACING: Missing a blank line after declarations
#493: FILE: drivers/video/omap2/vram.c:272:
+	struct completion *compl = data;
+	complete(compl);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#496: FILE: drivers/video/omap2/vram.c:275:
+static int _omap_vram_clear(u32 paddr, unsigned pages)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#499: FILE: drivers/video/omap2/vram.c:278:
+	unsigned elem_count;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#500: FILE: drivers/video/omap2/vram.c:279:
+	unsigned frame_count;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#507: FILE: drivers/video/omap2/vram.c:286:
+	r = omap_request_dma(OMAP_DMA_NO_DEVICE, "VRAM DMA",
+			_omap_vram_dma_cb,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#518: FILE: drivers/video/omap2/vram.c:297:
+	omap_set_dma_transfer_params(lch, OMAP_DMA_DATA_TYPE_S32,
+			elem_count, frame_count,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#523: FILE: drivers/video/omap2/vram.c:302:
+	omap_set_dma_dest_params(lch, 0, OMAP_DMA_AMODE_POST_INC,
+			paddr, 0, 0);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#543: FILE: drivers/video/omap2/vram.c:322:
+static int _omap_vram_alloc(int mtype, unsigned pages, unsigned long *paddr)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!alloc"
#575: FILE: drivers/video/omap2/vram.c:354:
+		if (alloc == NULL)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#590: FILE: drivers/video/omap2/vram.c:369:
+	unsigned pages;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#593: FILE: drivers/video/omap2/vram.c:372:
+	BUG_ON(mtype > OMAP_VRAM_MEMTYPE_MAX || !size);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#611: FILE: drivers/video/omap2/vram.c:390:
+void omap_vram_get_info(unsigned long *vram,
+		unsigned long *free_vram,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#624: FILE: drivers/video/omap2/vram.c:403:
+		unsigned free;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#653: FILE: drivers/video/omap2/vram.c:432:
+	unsigned size;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#660: FILE: drivers/video/omap2/vram.c:439:
+		seq_printf(s, "%08lx-%08lx (%d bytes)\n",
+				vr->paddr, vr->paddr + size - 1,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#666: FILE: drivers/video/omap2/vram.c:445:
+			seq_printf(s, "    %08lx-%08lx (%d bytes)\n",
+					va->paddr, va->paddr + size - 1,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#692: FILE: drivers/video/omap2/vram.c:471:
+	d = debugfs_create_file("vram", S_IRUGO, NULL,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#693: FILE: drivers/video/omap2/vram.c:472:
+	d = debugfs_create_file("vram", S_IRUGO, NULL,
+			NULL, &vram_debug_fops);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#709: FILE: drivers/video/omap2/vram.c:488:
+		omap_vram_add_region(postponed_regions[i].paddr,
+				postponed_regions[i].size);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#739: FILE: drivers/video/omap2/vram.c:518:
+		omap_vram_def_sdram_start = simple_strtoul((*p) + 1, p, 16);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#741: FILE: drivers/video/omap2/vram.c:520:
+}
+__early_param("vram=", omap_vram_early_vram);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#783: FILE: drivers/video/omap2/vram.c:562:
+		if ((paddr & ~PAGE_MASK) || paddr < sdram_start ||
+				paddr + size > sdram_start + sdram_size) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#799: FILE: drivers/video/omap2/vram.c:578:
+		BUG_ON(paddr & ~PAGE_MASK);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#818: FILE: drivers/video/omap2/vram.c:597:
+unsigned long __init omap_vram_reserve_sram(unsigned long sram_pstart,
+				  unsigned long sram_vstart,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#848: FILE: drivers/video/omap2/vram.c:627:
+	if (paddr < sram_pstart ||
+			paddr + size > sram_pstart + sram_size) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000050325.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 25 warnings, 30 checks, 768 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000050325.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
