WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#76: FILE: drivers/w1/w1.c:252:
+	if (strict_strtol(buf, 0, &tmp) == -EINVAL)

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#96: FILE: drivers/w1/w1.c:284:
+	if (strict_strtol(buf, 0, &tmp) == -EINVAL)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#128: FILE: drivers/w1/w1.c:404:
+static W1_MASTER_ATTR_RW(pullup, S_IRUGO | S_IWUGO);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#152: FILE: drivers/w1/w1.h:149:
+	u8		(*set_pullup)(void *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#152: FILE: drivers/w1/w1.h:149:
+	u8		(*set_pullup)(void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct w1_master *' should also have an identifier name
#173: FILE: drivers/w1/w1.h:215:
+void w1_next_pullup(struct w1_master *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#173: FILE: drivers/w1/w1.h:215:
+void w1_next_pullup(struct w1_master *, int);

WARNING:TYPO_SPELLING: 'hardare' may be misspelled - perhaps 'hardware'?
#204: FILE: drivers/w1/w1_int.c:115:
+	 * generated a strong pullup in bit bang mode, only hardare that
 	                                                    ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#211: FILE: drivers/w1/w1_int.c:122:
+		printk(KERN_ERR "w1_add_master_device: set_pullup requires "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'w1_add_master_device', this function's name, in a string
#211: FILE: drivers/w1/w1_int.c:122:
+		printk(KERN_ERR "w1_add_master_device: set_pullup requires "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#212: FILE: drivers/w1/w1_int.c:123:
+		printk(KERN_ERR "w1_add_master_device: set_pullup requires "
+			"write_byte or touch_bit, disabling\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#235: FILE: drivers/w1/w1_io.c:105:
+	if (dev->pullup_duration &&
+		dev->enable_pullup && dev->bus_master->set_pullup) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000246985.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 11 warnings, 1 checks, 226 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000246985.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
