WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#156: FILE: include/asm-x86/processor.h:1:
+#ifndef _X86_PROCESSOR_H_

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/bug.h> instead of <asm/bug.h>
#160: FILE: include/asm-x86/processor.h:5:
+#include <asm/bug.h>

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#176: FILE: include/asm-x86/processor.h:21:
+^Iunsigned long val = 0; ^I/* Damn you, gcc! */$

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#180: FILE: include/asm-x86/processor.h:25:
+		asm volatile ("mov %%db0, %0" :"=r" (val)); break;
 		                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#182: FILE: include/asm-x86/processor.h:27:
+		asm volatile ("mov %%db1, %0" :"=r" (val)); break;
 		                              ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#184: FILE: include/asm-x86/processor.h:29:
+		asm volatile ("mov %%db2, %0" :"=r" (val)); break;
 		                              ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#186: FILE: include/asm-x86/processor.h:31:
+		asm volatile ("mov %%db3, %0" :"=r" (val)); break;
 		                              ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#188: FILE: include/asm-x86/processor.h:33:
+		asm volatile ("mov %%db6, %0" :"=r" (val)); break;
 		                              ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#190: FILE: include/asm-x86/processor.h:35:
+		asm volatile ("mov %%db7, %0" :"=r" (val)); break;
 		                              ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#201: FILE: include/asm-x86/processor.h:46:
+		asm("mov %0,%%db0"	:  :"r" (value) : "memory");
 		                  	   ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#204: FILE: include/asm-x86/processor.h:49:
+		asm("mov %0,%%db1"	:  :"r" (value) : "memory");
 		                  	   ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#207: FILE: include/asm-x86/processor.h:52:
+		asm("mov %0,%%db2"	:  :"r" (value) : "memory");
 		                  	   ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#210: FILE: include/asm-x86/processor.h:55:
+		asm("mov %0,%%db3"	:  :"r" (value) : "memory");
 		                  	   ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#213: FILE: include/asm-x86/processor.h:58:
+		asm("mov %0,%%db6"	:  :"r" (value) : "memory");
 		                  	   ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#216: FILE: include/asm-x86/processor.h:61:
+		asm("mov %0,%%db7"	:  :"r" (value) : "memory");
 		                  	   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#245: FILE: include/asm-x86/processor.h:90:
+#define get_debugreg(var, register)				\
+	(var) = native_get_debugreg(register)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#267: FILE: include/asm-x86/processor.h:112:
+static inline void cpuid_count(int op, int count, unsigned *eax,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#268: FILE: include/asm-x86/processor.h:113:
+			       unsigned *ebx, unsigned *ecx, unsigned *edx)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#268: FILE: include/asm-x86/processor.h:113:
+			       unsigned *ebx, unsigned *ecx, unsigned *edx)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#268: FILE: include/asm-x86/processor.h:113:
+			       unsigned *ebx, unsigned *ecx, unsigned *edx)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#285: FILE: include/asm-x86/processor.h:130:
+}
+static inline unsigned int cpuid_ebx(unsigned int op)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#292: FILE: include/asm-x86/processor.h:137:
+}
+static inline unsigned int cpuid_ecx(unsigned int op)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#299: FILE: include/asm-x86/processor.h:144:
+}
+static inline unsigned int cpuid_edx(unsigned int op)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#523: FILE: include/asm-x86/processor_64.h:265:
+extern void native_swapgs(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:TYPO_SPELLING: 'simmetry' may be misspelled - perhaps 'symmetry'?
#525: FILE: include/asm-x86/processor_64.h:267:
+/* We have it for simmetry with i386 code, but we don't really use it */
                   ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#526: FILE: include/asm-x86/processor_64.h:268:
+static inline void native_set_iopl_mask(unsigned mask)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#528: FILE: include/asm-x86/processor_64.h:270:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#529: FILE: include/asm-x86/processor_64.h:271:
+
+}

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000359477.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 13 errors, 9 warnings, 6 checks, 452 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000359477.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
