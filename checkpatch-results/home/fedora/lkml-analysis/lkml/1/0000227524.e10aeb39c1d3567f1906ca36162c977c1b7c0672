WARNING:TYPO_SPELLING: 'genric' may be misspelled - perhaps 'generic'?
#35: 
v2: make it more genric, so subsys user only need to two line macro
                 ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'intead' may be misspelled - perhaps 'instead'?
#37: 
v4: use printk intead of pci_printk
               ^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <nameStr>
#122: FILE: include/linux/init.h:261:
+#define DEFINE_LOGLEVEL_SETUP(nameX, tagX, nameStr)		\

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <__loglevel_setup_##nameX>
#123: FILE: include/linux/init.h:262:
+	static struct loglevel_setup __loglevel_setup_##nameX __initdata = \

CHECK:CAMELCASE: Avoid CamelCase: <__loglevel_setup_ptr_##nameX>
#128: FILE: include/linux/init.h:267:
+	static struct loglevel_setup *__loglevel_setup_ptr_##nameX __used \

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".loglevel_setup.init") over __attribute__((__section__(".loglevel_setup.init")))
#129: FILE: include/linux/init.h:268:
+	__attribute__((__section__(".loglevel_setup.init"))) =	\

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#167: FILE: init/main.c:255:
+static int __init save_tag_name_level(const char *tag, const char *name,
+					int level)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#199: FILE: init/main.c:287:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#232: FILE: init/main.c:319:
+		char *k = strchr(str, ',');
+		if (k)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#254: FILE: kernel/printk.c:460:
+				unsigned end, int msg_log_level, int level)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#258: FILE: kernel/printk.c:463:
+	if ((msg_log_level < level || ignore_loglevel) &&
 			console_drivers && start != end) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#308: FILE: kernel/printk.c:533:
+				_call_console_drivers(start_print, cur_index,
+							msg_level, level);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000227524.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 7 checks, 220 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000227524.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
