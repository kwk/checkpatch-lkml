WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#39: FILE: drivers/edac/cpc925_edac.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#56: FILE: drivers/edac/cpc925_edac.c:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#57: FILE: drivers/edac/cpc925_edac.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#87: FILE: drivers/edac/cpc925_edac.c:49:
+	reg_end = reg + len/4;
 	                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:RETURN_VOID: void function return statements are not generally useful
#200: FILE: drivers/edac/cpc925_edac.c:162:
+	return;
+}

WARNING:TYPO_SPELLING: 'BA' may be misspelled - perhaps 'BY'?
#211: FILE: drivers/edac/cpc925_edac.c:173:
+ * physical address(PA) bits to bank address(BA) bits mappings are:
                                              ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'BA' may be misspelled - perhaps 'BY'?
#212: FILE: drivers/edac/cpc925_edac.c:174:
+ * BA	0   1
    ^^

WARNING:TYPO_SPELLING: 'mear' may be misspelled - perhaps 'wear'?
#219: FILE: drivers/edac/cpc925_edac.c:181:
+static void cpc925_mc_get_pfn(struct mem_ctl_info *mci, u32 mear,
                                                             ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#220: FILE: drivers/edac/cpc925_edac.c:182:
+static void cpc925_mc_get_pfn(struct mem_ctl_info *mci, u32 mear,
+		unsigned long *pfn, unsigned long *offset, int *csrow)

WARNING:TYPO_SPELLING: 'mear' may be misspelled - perhaps 'wear'?
#227: FILE: drivers/edac/cpc925_edac.c:189:
+	bcnt = (mear & MEAR_BCNT_MASK) >> MEAR_BCNT_SHIFT;
 	        ^^^^

WARNING:TYPO_SPELLING: 'mear' may be misspelled - perhaps 'wear'?
#228: FILE: drivers/edac/cpc925_edac.c:190:
+	rank = (mear & MEAR_RANK_MASK) >> MEAR_RANK_SHIFT;
 	        ^^^^

WARNING:TYPO_SPELLING: 'mear' may be misspelled - perhaps 'wear'?
#229: FILE: drivers/edac/cpc925_edac.c:191:
+	col = (mear & MEAR_COL_MASK) >> MEAR_COL_SHIFT;
 	       ^^^^

WARNING:TYPO_SPELLING: 'mear' may be misspelled - perhaps 'wear'?
#230: FILE: drivers/edac/cpc925_edac.c:192:
+	bank = (mear & MEAR_BANK_MASK) >> MEAR_BANK_SHIFT;
 	        ^^^^

WARNING:TYPO_SPELLING: 'mear' may be misspelled - perhaps 'wear'?
#231: FILE: drivers/edac/cpc925_edac.c:193:
+	row = mear & MEAR_ROW_MASK;
 	      ^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#238: FILE: drivers/edac/cpc925_edac.c:200:
+		cpc925_mc_printk(mci, KERN_ERR, "ECC occurs in a "
+			"non-populated csrow, broken hardware?\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'mear' may be misspelled - perhaps 'wear'?
#306: FILE: drivers/edac/cpc925_edac.c:268:
+	u32 mear;
 	    ^^^^

WARNING:TYPO_SPELLING: 'mear' may be misspelled - perhaps 'wear'?
#320: FILE: drivers/edac/cpc925_edac.c:282:
+	mear = __raw_readl(pdata->vbase + REG_MEAR_OFFSET);
 	^^^^

WARNING:TYPO_SPELLING: 'mear' may be misspelled - perhaps 'wear'?
#323: FILE: drivers/edac/cpc925_edac.c:285:
+	cpc925_mc_get_pfn(mci, mear, &pfn, &offset, &csrow);
 	                       ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#340: FILE: drivers/edac/cpc925_edac.c:302:
+	cpc925_mc_printk(mci, KERN_INFO, "APIMASK		0x%08x\n",
+		__raw_readl(pdata->vbase + REG_APIMASK_OFFSET));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#342: FILE: drivers/edac/cpc925_edac.c:304:
+	cpc925_mc_printk(mci, KERN_INFO, "APIEXCP		0x%08x\n",
+		apiexcp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#344: FILE: drivers/edac/cpc925_edac.c:306:
+	cpc925_mc_printk(mci, KERN_INFO, "Mem Scrub Ctrl	0x%08x\n",
+		__raw_readl(pdata->vbase + REG_MSCR_OFFSET));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#346: FILE: drivers/edac/cpc925_edac.c:308:
+	cpc925_mc_printk(mci, KERN_INFO, "Mem Scrub Rge Start	0x%08x\n",
+		__raw_readl(pdata->vbase + REG_MSRSR_OFFSET));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#348: FILE: drivers/edac/cpc925_edac.c:310:
+	cpc925_mc_printk(mci, KERN_INFO, "Mem Scrub Rge End	0x%08x\n",
+		__raw_readl(pdata->vbase + REG_MSRER_OFFSET));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#350: FILE: drivers/edac/cpc925_edac.c:312:
+	cpc925_mc_printk(mci, KERN_INFO, "Mem Scrub Pattern	0x%08x\n",
+		__raw_readl(pdata->vbase + REG_MSPR_OFFSET));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#352: FILE: drivers/edac/cpc925_edac.c:314:
+	cpc925_mc_printk(mci, KERN_INFO, "Mem Chk Ctrl		0x%08x\n",
+		__raw_readl(pdata->vbase + REG_MCCR_OFFSET));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#354: FILE: drivers/edac/cpc925_edac.c:316:
+	cpc925_mc_printk(mci, KERN_INFO, "Mem Chk Rge End	0x%08x\n",
+		__raw_readl(pdata->vbase + REG_MCRER_OFFSET));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#356: FILE: drivers/edac/cpc925_edac.c:318:
+	cpc925_mc_printk(mci, KERN_INFO, "Mem Err Address	0x%08x\n",
+		mesr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#358: FILE: drivers/edac/cpc925_edac.c:320:
+	cpc925_mc_printk(mci, KERN_INFO, "Mem Err Syndrome	0x%08x\n",
+		syndrome);

WARNING:RETURN_VOID: void function return statements are not generally useful
#389: FILE: drivers/edac/cpc925_edac.c:351:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#464: FILE: drivers/edac/cpc925_edac.c:426:
+		__raw_writel(BRGCTRL_DETSERR,
+				dev_info->vbase + REG_BRGCTRL_OFFSET);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#468: FILE: drivers/edac/cpc925_edac.c:430:
+		__raw_writel(HT_LINKCTRL_DETECTED,
+				dev_info->vbase + REG_LINKCTRL_OFFSET);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#473: FILE: drivers/edac/cpc925_edac.c:435:
+		__raw_writel(BRGCTRL_SECBUSRESET,
+				dev_info->vbase + REG_BRGCTRL_OFFSET);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#477: FILE: drivers/edac/cpc925_edac.c:439:
+		__raw_writel(ERRCTRL_RSP_ERR,
+				dev_info->vbase + REG_ERRCTRL_OFFSET);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#481: FILE: drivers/edac/cpc925_edac.c:443:
+		__raw_writel(HT_LINKERR_DETECTED,
+				dev_info->vbase + REG_LINKERR_OFFSET);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#520: FILE: drivers/edac/cpc925_edac.c:482:
+		dev_info->pdev = platform_device_register_simple(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#524: FILE: drivers/edac/cpc925_edac.c:486:
+			cpc925_printk(KERN_ERR,
+				"Can't register platform device for %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#536: FILE: drivers/edac/cpc925_edac.c:498:
+			edac_device_alloc_ctl_info(0, dev_info->ctl_name,
+				1, NULL, 0, 0, NULL, 0, dev_info->edac_idx);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#556: FILE: drivers/edac/cpc925_edac.c:518:
+			cpc925_printk(KERN_ERR,
+				"Unable to add edac device for %s\n",

WARNING:TYPO_SPELLING: 'bandwith' may be misspelled - perhaps 'bandwidth'?
#598: FILE: drivers/edac/cpc925_edac.c:560:
+/* Convert current back-ground scrub rate into byte/sec bandwith */
                                                         ^^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'si == 0'
#610: FILE: drivers/edac/cpc925_edac.c:572:
+	if (((mscr & MSCR_SCRUB_MOD_MASK) != MSCR_BACKGR_SCRUB) ||
+	    (si == 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: braces {} should be used on all arms of this statement
#610: FILE: drivers/edac/cpc925_edac.c:572:
+	if (((mscr & MSCR_SCRUB_MOD_MASK) != MSCR_BACKGR_SCRUB) ||
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#614: FILE: drivers/edac/cpc925_edac.c:576:
+	} else

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#642: FILE: drivers/edac/cpc925_edac.c:604:
+static int __devinit cpc925_probe(struct platform_device *pdev)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#682: FILE: drivers/edac/cpc925_edac.c:644:
+	mci = edac_mc_alloc(sizeof(struct cpc925_mc_pdata),
+			CPC925_NR_CSROWS, nr_channels + 1, edac_mc_idx);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#734: FILE: drivers/edac/cpc925_edac.c:696:
+	devm_release_mem_region(&pdev->dev, r->start, r->end-r->start+1);
 	                                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#734: FILE: drivers/edac/cpc925_edac.c:696:
+	devm_release_mem_region(&pdev->dev, r->start, r->end-r->start+1);
 	                                                             ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#770: FILE: drivers/edac/cpc925_edac.c:732:
+	printk(KERN_INFO "IBM CPC925 EDAC driver " CPC925_EDAC_REVISION "\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#771: FILE: drivers/edac/cpc925_edac.c:733:
+	printk(KERN_INFO "\t(c) 2008 Wind River Systems, Inc\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#778: FILE: drivers/edac/cpc925_edac.c:740:
+		printk(KERN_WARNING "Failed to register %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#779: FILE: drivers/edac/cpc925_edac.c:741:
+		printk(KERN_WARNING "Failed to register %s\n",
+			CPC925_EDAC_MOD_STR);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000145588.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 20 warnings, 28 checks, 757 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000145588.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
