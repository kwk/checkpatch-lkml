WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#48: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#53: FILE: fs/ubifs/master.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#68: FILE: fs/ubifs/master.c:16:
+ * this program; if not, write to the Free Software Foundation, Inc., 51$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#222: FILE: fs/ubifs/master.c:170:
+	if (c->big_lpt && (c->lsave_lnum < c->lpt_first ||
+	    c->lsave_lnum > c->lpt_last || c->lsave_offs < 0 ||

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#446: FILE: fs/ubifs/sb.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#461: FILE: fs/ubifs/sb.c:16:
+ * this program; if not, write to the Free Software Foundation, Inc., 51$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#483: FILE: fs/ubifs/sb.c:38:
+#define DEFAULT_MAX_JNL (32*1024*1024)
                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#483: FILE: fs/ubifs/sb.c:38:
+#define DEFAULT_MAX_JNL (32*1024*1024)
                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#510: FILE: fs/ubifs/sb.c:65:
+#define DEFAULT_MAX_RP_SIZE (5*1024*1024)
                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#510: FILE: fs/ubifs/sb.c:65:
+#define DEFAULT_MAX_RP_SIZE (5*1024*1024)
                                    ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#533: FILE: fs/ubifs/sb.c:88:
+	uint64_t tmp64, main_bytes;

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR | S_IXUGO' are not preferred. Consider using octal permissions '0755'.
#741: FILE: fs/ubifs/sb.c:296:
+	ino->mode = cpu_to_le32(S_IFDIR | S_IRUGO | S_IWUSR | S_IXUGO);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SPLIT_STRING: quoted string split across lines
#815: FILE: fs/ubifs/sb.c:370:
+		ubifs_err("bad LEB count: %d in superblock, %d on UBI volume, "
+			  "%d minimum required", c->leb_cnt, c->vi.size,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#858: FILE: fs/ubifs/sb.c:413:
+	if (c->lsave_cnt < 0 || (c->lsave_cnt > DEFAULT_LSAVE_CNT &&
+	    c->lsave_cnt > c->max_leb_cnt - UBIFS_SB_LEBS - UBIFS_MST_LEBS -

WARNING:SPLIT_STRING: quoted string split across lines
#966: FILE: fs/ubifs/sb.c:521:
+		ubifs_err("on-flash format version is %d, but software only "
+			  "supports up to version %d", c->fmt_vers,

CHECK:BRACES: Unbalanced braces around else statement
#1028: FILE: fs/ubifs/sb.c:583:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000275423.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 6 warnings, 8 checks, 996 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000275423.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
