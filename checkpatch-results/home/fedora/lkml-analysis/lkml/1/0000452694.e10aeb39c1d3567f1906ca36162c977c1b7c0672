WARNING:TYPO_SPELLING: 'conjuction' may be misspelled - perhaps 'conjunction'?
#28: 
issues, to be reviewed in conjuction with the integrity service 
                          ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#34: 
signed-off-by: Mimi Zohar <zohar@us.ibm.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#60: FILE: security/slim/slm_main.c:41:
+	slim_enabled = simple_strtol(str, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#63: FILE: security/slim/slm_main.c:44:
+__setup("slim=", slim_enabled_setup);

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#68: FILE: security/slim/slm_main.c:49:
+unsigned int integrity_enforce = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#71: FILE: security/slim/slm_main.c:52:
+	integrity_enforce = simple_strtol(str, NULL, 0);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#75: FILE: security/slim/slm_main.c:56:
+__setup("slim_integrity_enforce=", integrity_enforce_setup);

WARNING:SPLIT_STRING: quoted string split across lines
#136: FILE: security/slim/slm_main.c:729:
+			dprintk(SLM_INTEGRITY, "%s: %s (Integrity status: "
+				" FAIL)\n", __FUNCTION__, fname);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#136: FILE: security/slim/slm_main.c:729:
+				" FAIL)\n", __FUNCTION__, fname);

WARNING:SPLIT_STRING: quoted string split across lines
#142: FILE: security/slim/slm_main.c:735:
+			dprintk(SLM_INTEGRITY, "%s: %s (Integrity status: "
+				" NOLABEL)\n", __FUNCTION__, fname);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#142: FILE: security/slim/slm_main.c:735:
+				" NOLABEL)\n", __FUNCTION__, fname);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'level.iac_level == SLM_IAC_SYSTEM'
#149: FILE: security/slim/slm_main.c:742:
+	if ((level.iac_level == SLM_IAC_SYSTEM) && (mask == MAY_READ))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mask == MAY_READ'
#149: FILE: security/slim/slm_main.c:742:
+	if ((level.iac_level == SLM_IAC_SYSTEM) && (mask == MAY_READ))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rc < 0'
#166: FILE: security/slim/slm_main.c:1451:
+	if ((rc < 0) && integrity_enforce)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000452694.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 8 warnings, 5 checks, 175 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000452694.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
