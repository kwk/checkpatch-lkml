WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#50: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#55: FILE: arch/score/mm/cache.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#56: FILE: arch/score/mm/cache.c:2:
+ * arch/score/mm/cache.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#77: FILE: arch/score/mm/cache.c:23:
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/mmu_context.h> instead of <asm/mmu_context.h>
#87: FILE: arch/score/mm/cache.c:33:
+#include <asm/mmu_context.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: arch/score/mm/cache.c:40:
+                       unsigned long start, unsigned long end);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#94: FILE: arch/score/mm/cache.c:40:
+void (*flush_cache_range)(struct vm_area_struct *vma,
+                       unsigned long start, unsigned long end);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: arch/score/mm/cache.c:40:
+                       unsigned long start, unsigned long end);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#96: FILE: arch/score/mm/cache.c:42:
+                       unsigned long page, unsigned long pfn);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#96: FILE: arch/score/mm/cache.c:42:
+void (*flush_cache_page)(struct vm_area_struct *vma,
+                       unsigned long page, unsigned long pfn);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: arch/score/mm/cache.c:42:
+                       unsigned long page, unsigned long pfn);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: arch/score/mm/cache.c:55:
+                               unsigned long start, unsigned long end);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#109: FILE: arch/score/mm/cache.c:55:
+static void s7_flush_cache_range(struct vm_area_struct *vma,
+                               unsigned long start, unsigned long end);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: arch/score/mm/cache.c:55:
+                               unsigned long start, unsigned long end);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: arch/score/mm/cache.c:57:
+                               unsigned long page, unsigned long pfn);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#111: FILE: arch/score/mm/cache.c:57:
+static void s7_flush_cache_page(struct vm_area_struct *vma,
+                               unsigned long page, unsigned long pfn);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: arch/score/mm/cache.c:57:
+                               unsigned long page, unsigned long pfn);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#112: FILE: arch/score/mm/cache.c:58:
+static void s7_flush_icache_range(unsigned long start, unsigned long $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#113: FILE: arch/score/mm/cache.c:58:
end);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#116: FILE: arch/score/mm/cache.c:61:
+static void s7_flush_dcache_range(unsigned long start, unsigned long $

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: arch/score/mm/cache.c:64:
+               pte_t pte)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#120: FILE: arch/score/mm/cache.c:64:
+void __update_cache(struct vm_area_struct *vma, unsigned long address,
+               pte_t pte)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: arch/score/mm/cache.c:64:
+               pte_t pte)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: arch/score/mm/cache.c:66:
+       struct page *page;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: arch/score/mm/cache.c:67:
+       unsigned long pfn, addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: arch/score/mm/cache.c:68:
+       int exec = (vma->vm_flags & VM_EXEC);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: arch/score/mm/cache.c:70:
+       pfn = pte_pfn(pte);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: arch/score/mm/cache.c:71:
+       if (unlikely(!pfn_valid(pfn)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#127: FILE: arch/score/mm/cache.c:71:
+       if (unlikely(!pfn_valid(pfn)))
+               return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: arch/score/mm/cache.c:72:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: arch/score/mm/cache.c:72:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: arch/score/mm/cache.c:73:
+       page = pfn_to_page(pfn);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: arch/score/mm/cache.c:74:
+       if (page_mapping(page) && test_bit(PG_arch_1, &page->flags)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#130: FILE: arch/score/mm/cache.c:74:
+       if (page_mapping(page) && test_bit(PG_arch_1, &page->flags)) {
+               addr = (unsigned long) page_address(page);

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: arch/score/mm/cache.c:75:
+               addr = (unsigned long) page_address(page);$

CHECK:SPACING: No space is necessary after a cast
#131: FILE: arch/score/mm/cache.c:75:
+               addr = (unsigned long) page_address(page);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: arch/score/mm/cache.c:75:
+               addr = (unsigned long) page_address(page);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: arch/score/mm/cache.c:76:
+               if (exec)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: arch/score/mm/cache.c:76:
+               if (exec)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#132: FILE: arch/score/mm/cache.c:76:
+               if (exec)
+                       s7_flush_data_cache_page(addr);

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: arch/score/mm/cache.c:77:
+                       s7_flush_data_cache_page(addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: arch/score/mm/cache.c:77:
+                       s7_flush_data_cache_page(addr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: arch/score/mm/cache.c:78:
+               clear_bit(PG_arch_1, &page->flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: arch/score/mm/cache.c:78:
+               clear_bit(PG_arch_1, &page->flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: arch/score/mm/cache.c:79:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: arch/score/mm/cache.c:84:
+       protection_map[0] = PAGE_NONE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: arch/score/mm/cache.c:85:
+       protection_map[1] = PAGE_READONLY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: arch/score/mm/cache.c:86:
+       protection_map[2] = PAGE_COPY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: arch/score/mm/cache.c:87:
+       protection_map[3] = PAGE_COPY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: arch/score/mm/cache.c:88:
+       protection_map[4] = PAGE_READONLY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: arch/score/mm/cache.c:89:
+       protection_map[5] = PAGE_READONLY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: arch/score/mm/cache.c:90:
+       protection_map[6] = PAGE_COPY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: arch/score/mm/cache.c:91:
+       protection_map[7] = PAGE_COPY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: arch/score/mm/cache.c:92:
+       protection_map[8] = PAGE_NONE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: arch/score/mm/cache.c:93:
+       protection_map[9] = PAGE_READONLY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: arch/score/mm/cache.c:94:
+       protection_map[10] = PAGE_SHARED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: arch/score/mm/cache.c:95:
+       protection_map[11] = PAGE_SHARED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: arch/score/mm/cache.c:96:
+       protection_map[12] = PAGE_READONLY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: arch/score/mm/cache.c:97:
+       protection_map[13] = PAGE_READONLY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: arch/score/mm/cache.c:98:
+       protection_map[14] = PAGE_SHARED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: arch/score/mm/cache.c:99:
+       protection_map[15] = PAGE_SHARED;$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#158: FILE: arch/score/mm/cache.c:102:
+void __devinit cpu_cache_init(void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: arch/score/mm/cache.c:104:
+       flush_cache_all = s7_flush_cache_all;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: arch/score/mm/cache.c:105:
+       __flush_cache_all = s7___flush_cache_all;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: arch/score/mm/cache.c:106:
+       flush_cache_mm = s7_flush_cache_mm;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: arch/score/mm/cache.c:107:
+       flush_cache_range = s7_flush_cache_range;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: arch/score/mm/cache.c:108:
+       flush_cache_page = s7_flush_cache_page;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: arch/score/mm/cache.c:109:
+       flush_icache_range = s7_flush_icache_range;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: arch/score/mm/cache.c:110:
+       flush_cache_sigtramp = s7_flush_cache_sigtramp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: arch/score/mm/cache.c:111:
+       flush_data_cache_page = s7_flush_data_cache_page;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: arch/score/mm/cache.c:113:
+       setup_protection_map();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: arch/score/mm/cache.c:118:
+       __asm__ __volatile__($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#174: FILE: arch/score/mm/cache.c:118:
+       __asm__ __volatile__(

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: arch/score/mm/cache.c:119:
+       "la r8, s7_flush_icache_all\n"$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 's7_flush_icache_all', this function's name, in a string
#175: FILE: arch/score/mm/cache.c:119:
+       "la r8, s7_flush_icache_all\n"

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: arch/score/mm/cache.c:120:
+       "cache 0x10, [r8, 0]\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: arch/score/mm/cache.c:121:
+       "nop\nnop\nnop\nnop\nnop\nnop\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: arch/score/mm/cache.c:122:
+       : : : "r8");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: arch/score/mm/cache.c:127:
+       __asm__ __volatile__($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#183: FILE: arch/score/mm/cache.c:127:
+       __asm__ __volatile__(

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: arch/score/mm/cache.c:128:
+       "la r8, s7_flush_dcache_all\n"$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 's7_flush_dcache_all', this function's name, in a string
#184: FILE: arch/score/mm/cache.c:128:
+       "la r8, s7_flush_dcache_all\n"

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: arch/score/mm/cache.c:129:
+       "cache 0x1f, [r8, 0]\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: arch/score/mm/cache.c:130:
+       "nop\nnop\nnop\nnop\nnop\nnop\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: arch/score/mm/cache.c:131:
+       "cache 0x1a, [r8, 0]\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: arch/score/mm/cache.c:132:
+       "nop\nnop\nnop\nnop\nnop\nnop\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: arch/score/mm/cache.c:133:
+       : : : "r8");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: arch/score/mm/cache.c:138:
+       __asm__ __volatile__($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#194: FILE: arch/score/mm/cache.c:138:
+       __asm__ __volatile__(

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: arch/score/mm/cache.c:139:
+       "la r8, s7_flush_cache_all\n"$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 's7_flush_cache_all', this function's name, in a string
#195: FILE: arch/score/mm/cache.c:139:
+       "la r8, s7_flush_cache_all\n"

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: arch/score/mm/cache.c:140:
+       "cache 0x10, [r8, 0]\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: arch/score/mm/cache.c:141:
+       "nop\nnop\nnop\nnop\nnop\nnop\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: arch/score/mm/cache.c:142:
+       "cache 0x1f, [r8, 0]\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: arch/score/mm/cache.c:143:
+       "nop\nnop\nnop\nnop\nnop\nnop\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: arch/score/mm/cache.c:144:
+       "cache 0x1a, [r8, 0]\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: arch/score/mm/cache.c:145:
+       "nop\nnop\nnop\nnop\nnop\nnop\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: arch/score/mm/cache.c:146:
+       : : : "r8");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: arch/score/mm/cache.c:151:
+       __asm__ __volatile__($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#207: FILE: arch/score/mm/cache.c:151:
+       __asm__ __volatile__(

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: arch/score/mm/cache.c:152:
+       "la r8, s7_flush_cache_all\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: arch/score/mm/cache.c:153:
+       "cache 0x10, [r8, 0]\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: arch/score/mm/cache.c:154:
+       "nop\nnop\nnop\nnop\nnop\nnop\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: arch/score/mm/cache.c:155:
+       "cache 0x1f, [r8, 0]\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: arch/score/mm/cache.c:156:
+       "nop\nnop\nnop\nnop\nnop\nnop\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: arch/score/mm/cache.c:157:
+       "cache 0x1a, [r8, 0]\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: arch/score/mm/cache.c:158:
+       "nop\nnop\nnop\nnop\nnop\nnop\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: arch/score/mm/cache.c:159:
+       : : : "r8");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: arch/score/mm/cache.c:164:
+       if (!(mm->context))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#220: FILE: arch/score/mm/cache.c:164:
+       if (!(mm->context))
+               return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: arch/score/mm/cache.c:165:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: arch/score/mm/cache.c:165:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: arch/score/mm/cache.c:166:
+       s7_flush_cache_all();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#226: FILE: arch/score/mm/cache.c:170:
+We must check each page in the range whether present. If the page is $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#226: FILE: arch/score/mm/cache.c:170:
+/*if we flush a range precisely , the processing may be very long.
+We must check each page in the range whether present. If the page is 

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#228: FILE: arch/score/mm/cache.c:171:
+we can flush the range in the page. Be careful, the range may be cross $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#233: FILE: arch/score/mm/cache.c:175:
+/*
+The interface is provided in hopes that the port can find

ERROR:CODE_INDENT: code indent should use tabs where possible
#239: FILE: arch/score/mm/cache.c:181:
+               unsigned long start, unsigned long end)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: arch/score/mm/cache.c:181:
+s7_flush_cache_range(struct vm_area_struct *vma,
+               unsigned long start, unsigned long end)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: arch/score/mm/cache.c:181:
+               unsigned long start, unsigned long end)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: arch/score/mm/cache.c:183:
+       struct mm_struct *mm = vma->vm_mm;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: arch/score/mm/cache.c:184:
+       int exec = vma->vm_flags & VM_EXEC;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: arch/score/mm/cache.c:185:
+       pgd_t *pgdp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: arch/score/mm/cache.c:186:
+       pud_t *pudp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: arch/score/mm/cache.c:187:
+       pmd_t *pmdp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: arch/score/mm/cache.c:188:
+       pte_t *ptep;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: arch/score/mm/cache.c:190:
+       if (!(mm->context))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#248: FILE: arch/score/mm/cache.c:190:
+       if (!(mm->context))
+               return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: arch/score/mm/cache.c:191:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: arch/score/mm/cache.c:191:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: arch/score/mm/cache.c:193:
+       pgdp = pgd_offset(mm, start);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: arch/score/mm/cache.c:194:
+       pudp = pud_offset(pgdp, start);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: arch/score/mm/cache.c:195:
+       pmdp = pmd_offset(pudp, start);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: arch/score/mm/cache.c:196:
+       ptep = pte_offset(pmdp, start);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: arch/score/mm/cache.c:198:
+       while (start <= end) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#256: FILE: arch/score/mm/cache.c:198:
+       while (start <= end) {
+               unsigned long tmpend;

ERROR:CODE_INDENT: code indent should use tabs where possible
#257: FILE: arch/score/mm/cache.c:199:
+               unsigned long tmpend;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: arch/score/mm/cache.c:199:
+               unsigned long tmpend;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#258: FILE: arch/score/mm/cache.c:200:
+               pgdp = pgd_offset(mm, start);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#258: FILE: arch/score/mm/cache.c:200:
+               unsigned long tmpend;
+               pgdp = pgd_offset(mm, start);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: arch/score/mm/cache.c:200:
+               pgdp = pgd_offset(mm, start);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: arch/score/mm/cache.c:201:
+               pudp = pud_offset(pgdp, start);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: arch/score/mm/cache.c:201:
+               pudp = pud_offset(pgdp, start);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#260: FILE: arch/score/mm/cache.c:202:
+               pmdp = pmd_offset(pudp, start);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: arch/score/mm/cache.c:202:
+               pmdp = pmd_offset(pudp, start);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#261: FILE: arch/score/mm/cache.c:203:
+               ptep = pte_offset(pmdp, start);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: arch/score/mm/cache.c:203:
+               ptep = pte_offset(pmdp, start);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#263: FILE: arch/score/mm/cache.c:205:
+               if (!(pte_val(*ptep) & _PAGE_PRESENT)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: arch/score/mm/cache.c:205:
+               if (!(pte_val(*ptep) & _PAGE_PRESENT)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#263: FILE: arch/score/mm/cache.c:205:
+               if (!(pte_val(*ptep) & _PAGE_PRESENT)) {
+                       start = (start + PAGE_SIZE) & ~(PAGE_SIZE - 1);

ERROR:CODE_INDENT: code indent should use tabs where possible
#264: FILE: arch/score/mm/cache.c:206:
+                       start = (start + PAGE_SIZE) & ~(PAGE_SIZE - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: arch/score/mm/cache.c:206:
+                       start = (start + PAGE_SIZE) & ~(PAGE_SIZE - 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#265: FILE: arch/score/mm/cache.c:207:
+                       continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: arch/score/mm/cache.c:207:
+                       continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#266: FILE: arch/score/mm/cache.c:208:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: arch/score/mm/cache.c:208:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#267: FILE: arch/score/mm/cache.c:209:
+               tmpend = (start | (PAGE_SIZE-1)) > end ?$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: arch/score/mm/cache.c:209:
+               tmpend = (start | (PAGE_SIZE-1)) > end ?$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#267: FILE: arch/score/mm/cache.c:209:
+               tmpend = (start | (PAGE_SIZE-1)) > end ?
                                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: arch/score/mm/cache.c:210:
+                                end : (start | (PAGE_SIZE-1));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: arch/score/mm/cache.c:210:
+                                end : (start | (PAGE_SIZE-1));$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#268: FILE: arch/score/mm/cache.c:210:
+                                end : (start | (PAGE_SIZE-1));
                                                          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: arch/score/mm/cache.c:212:
+               s7_flush_dcache_range(start, tmpend);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: arch/score/mm/cache.c:212:
+               s7_flush_dcache_range(start, tmpend);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#271: FILE: arch/score/mm/cache.c:213:
+               if (exec)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: arch/score/mm/cache.c:213:
+               if (exec)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#271: FILE: arch/score/mm/cache.c:213:
+               if (exec)
+                       s7_flush_icache_range(start, tmpend);

ERROR:CODE_INDENT: code indent should use tabs where possible
#272: FILE: arch/score/mm/cache.c:214:
+                       s7_flush_icache_range(start, tmpend);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: arch/score/mm/cache.c:214:
+                       s7_flush_icache_range(start, tmpend);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: arch/score/mm/cache.c:215:
+               start = (start + PAGE_SIZE) & ~(PAGE_SIZE - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: arch/score/mm/cache.c:215:
+               start = (start + PAGE_SIZE) & ~(PAGE_SIZE - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: arch/score/mm/cache.c:216:
+       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#279: FILE: arch/score/mm/cache.c:221:
+               unsigned long addr, unsigned long pfn)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#279: FILE: arch/score/mm/cache.c:221:
+s7_flush_cache_page(struct vm_area_struct *vma,
+               unsigned long addr, unsigned long pfn)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: arch/score/mm/cache.c:221:
+               unsigned long addr, unsigned long pfn)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: arch/score/mm/cache.c:223:
+       int exec = vma->vm_flags & VM_EXEC;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: arch/score/mm/cache.c:224:
+       unsigned long kaddr = 0xa0000000 | (pfn << PAGE_SHIFT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: arch/score/mm/cache.c:226:
+       s7_flush_dcache_range(kaddr, kaddr + PAGE_SIZE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: arch/score/mm/cache.c:228:
+       if (exec)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#286: FILE: arch/score/mm/cache.c:228:
+       if (exec)
+               s7_flush_icache_range(kaddr, kaddr + PAGE_SIZE);

ERROR:CODE_INDENT: code indent should use tabs where possible
#287: FILE: arch/score/mm/cache.c:229:
+               s7_flush_icache_range(kaddr, kaddr + PAGE_SIZE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: arch/score/mm/cache.c:229:
+               s7_flush_icache_range(kaddr, kaddr + PAGE_SIZE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: arch/score/mm/cache.c:234:
+       __asm__ __volatile__($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#292: FILE: arch/score/mm/cache.c:234:
+       __asm__ __volatile__(

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: arch/score/mm/cache.c:235:
+       "cache 0x02, [%0, 0]\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: arch/score/mm/cache.c:236:
+       "nop\nnop\nnop\nnop\nnop\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: arch/score/mm/cache.c:237:
+       "cache 0x02, [%0, 0x4]\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: arch/score/mm/cache.c:238:
+       "nop\nnop\nnop\nnop\nnop\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: arch/score/mm/cache.c:240:
+       "cache 0x0d, [%0, 0]\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: arch/score/mm/cache.c:241:
+       "nop\nnop\nnop\nnop\nnop\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: arch/score/mm/cache.c:242:
+       "cache 0x0d, [%0, 0x4]\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: arch/score/mm/cache.c:243:
+       "nop\nnop\nnop\nnop\nnop\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: arch/score/mm/cache.c:245:
+       "cache 0x1a, [%0, 0]\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: arch/score/mm/cache.c:246:
+       "nop\nnop\nnop\nnop\nnop\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: arch/score/mm/cache.c:247:
+       : : "r" (addr));$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#309: FILE: arch/score/mm/cache.c:251:
+/*
+Just flush entire Dcache!!

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: arch/score/mm/cache.c:258:
+       unsigned int i;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#317: FILE: arch/score/mm/cache.c:259:
+       for (i = 0; i < (PAGE_SIZE / L1_CACHE_BYTES); i += L1_CACHE_BYTES) $

WARNING:LINE_SPACING: Missing a blank line after declarations
#317: FILE: arch/score/mm/cache.c:259:
+       unsigned int i;
+       for (i = 0; i < (PAGE_SIZE / L1_CACHE_BYTES); i += L1_CACHE_BYTES) 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: arch/score/mm/cache.c:259:
+       for (i = 0; i < (PAGE_SIZE / L1_CACHE_BYTES); i += L1_CACHE_BYTES) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#317: FILE: arch/score/mm/cache.c:259:
+       for (i = 0; i < (PAGE_SIZE / L1_CACHE_BYTES); i += L1_CACHE_BYTES) 
[...]
+               __asm__ __volatile__(

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: arch/score/mm/cache.c:260:
+               __asm__ __volatile__($

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: arch/score/mm/cache.c:260:
+               __asm__ __volatile__($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#319: FILE: arch/score/mm/cache.c:260:
+               __asm__ __volatile__(

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: arch/score/mm/cache.c:261:
+               "cache 0x0e, [%0, 0]\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: arch/score/mm/cache.c:261:
+               "cache 0x0e, [%0, 0]\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#321: FILE: arch/score/mm/cache.c:262:
+               "cache 0x1a, [%0, 0]\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: arch/score/mm/cache.c:262:
+               "cache 0x1a, [%0, 0]\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#322: FILE: arch/score/mm/cache.c:263:
+               "nop\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: arch/score/mm/cache.c:263:
+               "nop\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#323: FILE: arch/score/mm/cache.c:264:
+               : : "r" (addr));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: arch/score/mm/cache.c:264:
+               : : "r" (addr));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#324: FILE: arch/score/mm/cache.c:265:
+               addr += L1_CACHE_BYTES;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: arch/score/mm/cache.c:265:
+               addr += L1_CACHE_BYTES;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: arch/score/mm/cache.c:266:
+       }$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#329: FILE: arch/score/mm/cache.c:270:
+/*
+1. WB and invalid a cache line of Dcache

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: arch/score/mm/cache.c:276:
+       int size, i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: arch/score/mm/cache.c:278:
+       start = start & ~(L1_CACHE_BYTES - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: arch/score/mm/cache.c:279:
+       end = end & ~(L1_CACHE_BYTES - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: arch/score/mm/cache.c:280:
+       size = end - start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: arch/score/mm/cache.c:282:
+       for (i = 0; i < size; i += L1_CACHE_BYTES) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#341: FILE: arch/score/mm/cache.c:282:
+       for (i = 0; i < size; i += L1_CACHE_BYTES) {
+               __asm__ __volatile__(

ERROR:CODE_INDENT: code indent should use tabs where possible
#342: FILE: arch/score/mm/cache.c:283:
+               __asm__ __volatile__($

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: arch/score/mm/cache.c:283:
+               __asm__ __volatile__($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#342: FILE: arch/score/mm/cache.c:283:
+               __asm__ __volatile__(

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: arch/score/mm/cache.c:284:
+               "cache 0x0e, [%0, 0]\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: arch/score/mm/cache.c:284:
+               "cache 0x0e, [%0, 0]\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: arch/score/mm/cache.c:285:
+               "nop\nnop\nnop\nnop\nnop\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: arch/score/mm/cache.c:285:
+               "nop\nnop\nnop\nnop\nnop\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: arch/score/mm/cache.c:286:
+               "cache 0x1a, [%0, 0]\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: arch/score/mm/cache.c:286:
+               "cache 0x1a, [%0, 0]\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: arch/score/mm/cache.c:287:
+               "nop\nnop\nnop\nnop\nnop\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: arch/score/mm/cache.c:287:
+               "nop\nnop\nnop\nnop\nnop\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: arch/score/mm/cache.c:288:
+               : : "r" (start));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: arch/score/mm/cache.c:288:
+               : : "r" (start));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#348: FILE: arch/score/mm/cache.c:289:
+               start += L1_CACHE_BYTES;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: arch/score/mm/cache.c:289:
+               start += L1_CACHE_BYTES;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: arch/score/mm/cache.c:290:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: arch/score/mm/cache.c:295:
+       int size, i;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#355: FILE: arch/score/mm/cache.c:296:
+       int size, i;
+       start = start & ~(L1_CACHE_BYTES - 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: arch/score/mm/cache.c:296:
+       start = start & ~(L1_CACHE_BYTES - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: arch/score/mm/cache.c:297:
+       end = end & ~(L1_CACHE_BYTES - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: arch/score/mm/cache.c:299:
+       size = end - start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: arch/score/mm/cache.c:301:
+       for (i = 0; i < size; i += L1_CACHE_BYTES) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#360: FILE: arch/score/mm/cache.c:301:
+       for (i = 0; i < size; i += L1_CACHE_BYTES) {
+               __asm__ __volatile__(

ERROR:CODE_INDENT: code indent should use tabs where possible
#361: FILE: arch/score/mm/cache.c:302:
+               __asm__ __volatile__($

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: arch/score/mm/cache.c:302:
+               __asm__ __volatile__($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#361: FILE: arch/score/mm/cache.c:302:
+               __asm__ __volatile__(

ERROR:CODE_INDENT: code indent should use tabs where possible
#362: FILE: arch/score/mm/cache.c:303:
+               "cache 0x02, [%0, 0]\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: arch/score/mm/cache.c:303:
+               "cache 0x02, [%0, 0]\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#363: FILE: arch/score/mm/cache.c:304:
+               "nop\nnop\nnop\nnop\nnop\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: arch/score/mm/cache.c:304:
+               "nop\nnop\nnop\nnop\nnop\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#364: FILE: arch/score/mm/cache.c:305:
+               : : "r" (start));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: arch/score/mm/cache.c:305:
+               : : "r" (start));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#365: FILE: arch/score/mm/cache.c:306:
+               start += L1_CACHE_BYTES;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: arch/score/mm/cache.c:306:
+               start += L1_CACHE_BYTES;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: arch/score/mm/cache.c:307:
+       }$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#374: FILE: arch/score/mm/extable.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#375: FILE: arch/score/mm/extable.c:2:
+ * arch/score/mm/extable.c

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#396: FILE: arch/score/mm/extable.c:23:
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: arch/score/mm/extable.c:30:
+       const struct exception_table_entry *fixup;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#405: FILE: arch/score/mm/extable.c:32:
+       fixup = search_exception_tables(regs->cp0_epc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#406: FILE: arch/score/mm/extable.c:33:
+       if (fixup) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#406: FILE: arch/score/mm/extable.c:33:
+       if (fixup) {
+               regs->cp0_epc = fixup->fixup;

ERROR:CODE_INDENT: code indent should use tabs where possible
#407: FILE: arch/score/mm/extable.c:34:
+               regs->cp0_epc = fixup->fixup;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: arch/score/mm/extable.c:34:
+               regs->cp0_epc = fixup->fixup;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#408: FILE: arch/score/mm/extable.c:35:
+               return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: arch/score/mm/extable.c:35:
+               return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: arch/score/mm/extable.c:36:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: arch/score/mm/extable.c:37:
+       return 0;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#418: FILE: arch/score/mm/fault.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#419: FILE: arch/score/mm/fault.c:2:
+ * arch/score/mm/fault.c

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#440: FILE: arch/score/mm/fault.c:23:
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

ERROR:CODE_INDENT: code indent should use tabs where possible
#461: FILE: arch/score/mm/fault.c:44:
+                               unsigned long address)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#461: FILE: arch/score/mm/fault.c:44:
+asmlinkage void do_page_fault(struct pt_regs *regs, unsigned long write,
+                               unsigned long address)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: arch/score/mm/fault.c:44:
+                               unsigned long address)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: arch/score/mm/fault.c:46:
+       struct vm_area_struct *vma = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: arch/score/mm/fault.c:47:
+       struct task_struct *tsk = current;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: arch/score/mm/fault.c:48:
+       struct mm_struct *mm = tsk->mm;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#466: FILE: arch/score/mm/fault.c:49:
+       const int field = sizeof(unsigned long) * 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: arch/score/mm/fault.c:50:
+       siginfo_t info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: arch/score/mm/fault.c:51:
+       int fault;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: arch/score/mm/fault.c:53:
+       info.si_code = SEGV_MAPERR;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#473: FILE: arch/score/mm/fault.c:56:
+       /*
+       * We fault-in kernel-space virtual memory on-demand. The

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: arch/score/mm/fault.c:64:
+       if (unlikely(address >= VMALLOC_START && address <= VMALLOC_END))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#481: FILE: arch/score/mm/fault.c:64:
+       if (unlikely(address >= VMALLOC_START && address <= VMALLOC_END))
+               goto vmalloc_fault;

ERROR:CODE_INDENT: code indent should use tabs where possible
#482: FILE: arch/score/mm/fault.c:65:
+               goto vmalloc_fault;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: arch/score/mm/fault.c:65:
+               goto vmalloc_fault;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: arch/score/mm/fault.c:67:
+       if (unlikely(address >= MODULE_START && address < MODULE_END))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#484: FILE: arch/score/mm/fault.c:67:
+       if (unlikely(address >= MODULE_START && address < MODULE_END))
+               goto vmalloc_fault;

ERROR:CODE_INDENT: code indent should use tabs where possible
#485: FILE: arch/score/mm/fault.c:68:
+               goto vmalloc_fault;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#485: FILE: arch/score/mm/fault.c:68:
+               goto vmalloc_fault;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#489: FILE: arch/score/mm/fault.c:72:
+       /*
+       * If we're in an interrupt or have no user

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: arch/score/mm/fault.c:75:
+       if (in_atomic() || !mm)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#492: FILE: arch/score/mm/fault.c:75:
+       if (in_atomic() || !mm)
+               goto bad_area_nosemaphore;

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#492: FILE: arch/score/mm/fault.c:75:
+       if (in_atomic() || !mm)

in_atomic() is not for driver use so any such use is reported as an ERROR.
Also in_atomic() is often used to determine if sleeping is permitted,
but it is not reliable in this use model.  Therefore its use is
strongly discouraged.

However, in_atomic() is ok for core kernel use.

See: https://lore.kernel.org/lkml/20080320201723.b87b3732.akpm@linux-foundation.org/

ERROR:CODE_INDENT: code indent should use tabs where possible
#493: FILE: arch/score/mm/fault.c:76:
+               goto bad_area_nosemaphore;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: arch/score/mm/fault.c:76:
+               goto bad_area_nosemaphore;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#495: FILE: arch/score/mm/fault.c:78:
+       down_read(&mm->mmap_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: arch/score/mm/fault.c:79:
+       vma = find_vma(mm, address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: arch/score/mm/fault.c:80:
+       if (!vma)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#497: FILE: arch/score/mm/fault.c:80:
+       if (!vma)
+               goto bad_area;

ERROR:CODE_INDENT: code indent should use tabs where possible
#498: FILE: arch/score/mm/fault.c:81:
+               goto bad_area;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: arch/score/mm/fault.c:81:
+               goto bad_area;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#499: FILE: arch/score/mm/fault.c:82:
+       if (vma->vm_start <= address)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#499: FILE: arch/score/mm/fault.c:82:
+       if (vma->vm_start <= address)
+               goto good_area;

ERROR:CODE_INDENT: code indent should use tabs where possible
#500: FILE: arch/score/mm/fault.c:83:
+               goto good_area;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#500: FILE: arch/score/mm/fault.c:83:
+               goto good_area;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#501: FILE: arch/score/mm/fault.c:84:
+       if (!(vma->vm_flags & VM_GROWSDOWN))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#501: FILE: arch/score/mm/fault.c:84:
+       if (!(vma->vm_flags & VM_GROWSDOWN))
+               goto bad_area;

ERROR:CODE_INDENT: code indent should use tabs where possible
#502: FILE: arch/score/mm/fault.c:85:
+               goto bad_area;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#502: FILE: arch/score/mm/fault.c:85:
+               goto bad_area;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#503: FILE: arch/score/mm/fault.c:86:
+       if (expand_stack(vma, address))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#503: FILE: arch/score/mm/fault.c:86:
+       if (expand_stack(vma, address))
+               goto bad_area;

ERROR:CODE_INDENT: code indent should use tabs where possible
#504: FILE: arch/score/mm/fault.c:87:
+               goto bad_area;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#504: FILE: arch/score/mm/fault.c:87:
+               goto bad_area;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#506: FILE: arch/score/mm/fault.c:89:
+       /*
+       * Ok, we have a good vm_area for this memory access, so

ERROR:CODE_INDENT: code indent should use tabs where possible
#508: FILE: arch/score/mm/fault.c:91:
+        */$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#508: FILE: arch/score/mm/fault.c:91:
+       * we can handle it..
+        */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: arch/score/mm/fault.c:93:
+       info.si_code = SEGV_ACCERR;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: arch/score/mm/fault.c:95:
+       if (write) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#512: FILE: arch/score/mm/fault.c:95:
+       if (write) {
+               if (!(vma->vm_flags & VM_WRITE))

ERROR:CODE_INDENT: code indent should use tabs where possible
#513: FILE: arch/score/mm/fault.c:96:
+               if (!(vma->vm_flags & VM_WRITE))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#513: FILE: arch/score/mm/fault.c:96:
+               if (!(vma->vm_flags & VM_WRITE))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#513: FILE: arch/score/mm/fault.c:96:
+               if (!(vma->vm_flags & VM_WRITE))
+                       goto bad_area;

ERROR:CODE_INDENT: code indent should use tabs where possible
#514: FILE: arch/score/mm/fault.c:97:
+                       goto bad_area;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#514: FILE: arch/score/mm/fault.c:97:
+                       goto bad_area;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#515: FILE: arch/score/mm/fault.c:98:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#515: FILE: arch/score/mm/fault.c:98:
+       } else {
+               if (!(vma->vm_flags & (VM_READ | VM_WRITE | VM_EXEC)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#516: FILE: arch/score/mm/fault.c:99:
+               if (!(vma->vm_flags & (VM_READ | VM_WRITE | VM_EXEC)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#516: FILE: arch/score/mm/fault.c:99:
+               if (!(vma->vm_flags & (VM_READ | VM_WRITE | VM_EXEC)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#516: FILE: arch/score/mm/fault.c:99:
+               if (!(vma->vm_flags & (VM_READ | VM_WRITE | VM_EXEC)))
+                       goto bad_area;

ERROR:CODE_INDENT: code indent should use tabs where possible
#517: FILE: arch/score/mm/fault.c:100:
+                       goto bad_area;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#517: FILE: arch/score/mm/fault.c:100:
+                       goto bad_area;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#518: FILE: arch/score/mm/fault.c:101:
+       }$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#522: FILE: arch/score/mm/fault.c:105:
+       /*
+       * If for any reason at all we couldn't handle the fault,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: arch/score/mm/fault.c:109:
+       fault = handle_mm_fault(mm, vma, address, write);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: arch/score/mm/fault.c:110:
+       if (unlikely(fault & VM_FAULT_ERROR)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#527: FILE: arch/score/mm/fault.c:110:
+       if (unlikely(fault & VM_FAULT_ERROR)) {
+               if (fault & VM_FAULT_OOM)

ERROR:CODE_INDENT: code indent should use tabs where possible
#528: FILE: arch/score/mm/fault.c:111:
+               if (fault & VM_FAULT_OOM)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: arch/score/mm/fault.c:111:
+               if (fault & VM_FAULT_OOM)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#528: FILE: arch/score/mm/fault.c:111:
+               if (fault & VM_FAULT_OOM)
+                       goto out_of_memory;

ERROR:CODE_INDENT: code indent should use tabs where possible
#529: FILE: arch/score/mm/fault.c:112:
+                       goto out_of_memory;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#529: FILE: arch/score/mm/fault.c:112:
+                       goto out_of_memory;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#530: FILE: arch/score/mm/fault.c:113:
+               else if (fault & VM_FAULT_SIGBUS)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#530: FILE: arch/score/mm/fault.c:113:
+               else if (fault & VM_FAULT_SIGBUS)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#530: FILE: arch/score/mm/fault.c:113:
+               else if (fault & VM_FAULT_SIGBUS)
+                       goto do_sigbus;

ERROR:CODE_INDENT: code indent should use tabs where possible
#531: FILE: arch/score/mm/fault.c:114:
+                       goto do_sigbus;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: arch/score/mm/fault.c:114:
+                       goto do_sigbus;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#532: FILE: arch/score/mm/fault.c:115:
+               BUG();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#532: FILE: arch/score/mm/fault.c:115:
+               BUG();$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#532: FILE: arch/score/mm/fault.c:115:
+               BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: arch/score/mm/fault.c:116:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#534: FILE: arch/score/mm/fault.c:117:
+       if (fault & VM_FAULT_MAJOR)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#534: FILE: arch/score/mm/fault.c:117:
+       if (fault & VM_FAULT_MAJOR)
+               tsk->maj_flt++;

ERROR:CODE_INDENT: code indent should use tabs where possible
#535: FILE: arch/score/mm/fault.c:118:
+               tsk->maj_flt++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#535: FILE: arch/score/mm/fault.c:118:
+               tsk->maj_flt++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#536: FILE: arch/score/mm/fault.c:119:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#536: FILE: arch/score/mm/fault.c:119:
+       else
+               tsk->min_flt++;

ERROR:CODE_INDENT: code indent should use tabs where possible
#537: FILE: arch/score/mm/fault.c:120:
+               tsk->min_flt++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#537: FILE: arch/score/mm/fault.c:120:
+               tsk->min_flt++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#539: FILE: arch/score/mm/fault.c:122:
+       up_read(&mm->mmap_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#540: FILE: arch/score/mm/fault.c:123:
+       return;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#543: FILE: arch/score/mm/fault.c:126:
+       /*
+       * Something tried to access memory that isn't in our memory map..

ERROR:CODE_INDENT: code indent should use tabs where possible
#545: FILE: arch/score/mm/fault.c:128:
+        */$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#545: FILE: arch/score/mm/fault.c:128:
+       * Fix it, but check if it's kernel or user first..
+        */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#547: FILE: arch/score/mm/fault.c:130:
+       up_read(&mm->mmap_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#551: FILE: arch/score/mm/fault.c:134:
+       if (user_mode(regs)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#551: FILE: arch/score/mm/fault.c:134:
+       if (user_mode(regs)) {
+               tsk->thread.cp0_badvaddr = address;

ERROR:CODE_INDENT: code indent should use tabs where possible
#552: FILE: arch/score/mm/fault.c:135:
+               tsk->thread.cp0_badvaddr = address;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#552: FILE: arch/score/mm/fault.c:135:
+               tsk->thread.cp0_badvaddr = address;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#553: FILE: arch/score/mm/fault.c:136:
+               tsk->thread.error_code = write;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#553: FILE: arch/score/mm/fault.c:136:
+               tsk->thread.error_code = write;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#554: FILE: arch/score/mm/fault.c:137:
+               info.si_signo = SIGSEGV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#554: FILE: arch/score/mm/fault.c:137:
+               info.si_signo = SIGSEGV;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#555: FILE: arch/score/mm/fault.c:138:
+               info.si_errno = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: arch/score/mm/fault.c:138:
+               info.si_errno = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#556: FILE: arch/score/mm/fault.c:139:
+               /* info.si_code has been set above */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#557: FILE: arch/score/mm/fault.c:140:
+               info.si_addr = (void __user *) address;$

CHECK:SPACING: No space is necessary after a cast
#557: FILE: arch/score/mm/fault.c:140:
+               info.si_addr = (void __user *) address;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#557: FILE: arch/score/mm/fault.c:140:
+               info.si_addr = (void __user *) address;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#558: FILE: arch/score/mm/fault.c:141:
+               force_sig_info(SIGSEGV, &info, tsk);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#558: FILE: arch/score/mm/fault.c:141:
+               force_sig_info(SIGSEGV, &info, tsk);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#559: FILE: arch/score/mm/fault.c:142:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#559: FILE: arch/score/mm/fault.c:142:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#560: FILE: arch/score/mm/fault.c:143:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: arch/score/mm/fault.c:147:
+       if (fixup_exception(regs)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#564: FILE: arch/score/mm/fault.c:147:
+       if (fixup_exception(regs)) {
+               current->thread.cp0_baduaddr = address;

ERROR:CODE_INDENT: code indent should use tabs where possible
#565: FILE: arch/score/mm/fault.c:148:
+               current->thread.cp0_baduaddr = address;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: arch/score/mm/fault.c:148:
+               current->thread.cp0_baduaddr = address;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#566: FILE: arch/score/mm/fault.c:149:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#566: FILE: arch/score/mm/fault.c:149:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#567: FILE: arch/score/mm/fault.c:150:
+       }$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#570: FILE: arch/score/mm/fault.c:153:
+       /*
+       * Oops. The kernel tried to access some bad page. We'll have to

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#573: FILE: arch/score/mm/fault.c:156:
+       bust_spinlocks(1);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#575: FILE: arch/score/mm/fault.c:158:
+       printk(KERN_ALERT "CPU %d Unable to handle kernel paging request $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#575: FILE: arch/score/mm/fault.c:158:
+       printk(KERN_ALERT "CPU %d Unable to handle kernel paging request $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#575: FILE: arch/score/mm/fault.c:158:
+       printk(KERN_ALERT "CPU %d Unable to handle kernel paging request 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#577: FILE: arch/score/mm/fault.c:159:
+                       "virtual address %0*lx, epc == %0*lx, ra == $

ERROR:CODE_INDENT: code indent should use tabs where possible
#577: FILE: arch/score/mm/fault.c:159:
+                       "virtual address %0*lx, epc == %0*lx, ra == $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: arch/score/mm/fault.c:159:
+                       "virtual address %0*lx, epc == %0*lx, ra == $

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#577: FILE: arch/score/mm/fault.c:159:
+                       "virtual address %0*lx, epc == %0*lx, ra == 
                                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#577: FILE: arch/score/mm/fault.c:159:
+                       "virtual address %0*lx, epc == %0*lx, ra == 
                                           ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#577: FILE: arch/score/mm/fault.c:159:
+                       "virtual address %0*lx, epc == %0*lx, ra == 
                                                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#577: FILE: arch/score/mm/fault.c:159:
+                       "virtual address %0*lx, epc == %0*lx, ra == 
                                                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#579: FILE: arch/score/mm/fault.c:160:
+                       0, field, address, field, regs->cp0_epc,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#579: FILE: arch/score/mm/fault.c:160:
+                       0, field, address, field, regs->cp0_epc,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#580: FILE: arch/score/mm/fault.c:161:
+                       field, regs->regs[3]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#580: FILE: arch/score/mm/fault.c:161:
+                       field, regs->regs[3]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: arch/score/mm/fault.c:162:
+       die("Oops", regs);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#584: FILE: arch/score/mm/fault.c:165:
+       * We ran out of memory, or some other thing happened to us that $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#584: FILE: arch/score/mm/fault.c:165:
+       /*
+       * We ran out of memory, or some other thing happened to us that 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: arch/score/mm/fault.c:169:
+       up_read(&mm->mmap_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#590: FILE: arch/score/mm/fault.c:170:
+       if (is_global_init(tsk)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#590: FILE: arch/score/mm/fault.c:170:
+       if (is_global_init(tsk)) {
+               yield();

ERROR:CODE_INDENT: code indent should use tabs where possible
#591: FILE: arch/score/mm/fault.c:171:
+               yield();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#591: FILE: arch/score/mm/fault.c:171:
+               yield();$

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#591: FILE: arch/score/mm/fault.c:171:
+               yield();

ERROR:CODE_INDENT: code indent should use tabs where possible
#592: FILE: arch/score/mm/fault.c:172:
+               down_read(&mm->mmap_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#592: FILE: arch/score/mm/fault.c:172:
+               down_read(&mm->mmap_sem);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#593: FILE: arch/score/mm/fault.c:173:
+               goto survive;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#593: FILE: arch/score/mm/fault.c:173:
+               goto survive;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#594: FILE: arch/score/mm/fault.c:174:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: arch/score/mm/fault.c:175:
+       printk("VM: killing process %s\n", tsk->comm);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#595: FILE: arch/score/mm/fault.c:175:
+       printk("VM: killing process %s\n", tsk->comm);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#596: FILE: arch/score/mm/fault.c:176:
+       if (user_mode(regs))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#596: FILE: arch/score/mm/fault.c:176:
+       if (user_mode(regs))
+               do_group_exit(SIGKILL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#597: FILE: arch/score/mm/fault.c:177:
+               do_group_exit(SIGKILL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#597: FILE: arch/score/mm/fault.c:177:
+               do_group_exit(SIGKILL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#598: FILE: arch/score/mm/fault.c:178:
+       goto no_context;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#601: FILE: arch/score/mm/fault.c:181:
+       up_read(&mm->mmap_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#603: FILE: arch/score/mm/fault.c:183:
+       if (!user_mode(regs))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#603: FILE: arch/score/mm/fault.c:183:
+       if (!user_mode(regs))
+               goto no_context;

ERROR:CODE_INDENT: code indent should use tabs where possible
#604: FILE: arch/score/mm/fault.c:184:
+               goto no_context;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#604: FILE: arch/score/mm/fault.c:184:
+               goto no_context;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#605: FILE: arch/score/mm/fault.c:185:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 7)
#605: FILE: arch/score/mm/fault.c:185:
+       else
[...]
+       tsk->thread.cp0_badvaddr = address;

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#607: FILE: arch/score/mm/fault.c:187:
+       /*
+       * Send a sigbus, regardless of whether we were in kernel

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#610: FILE: arch/score/mm/fault.c:190:
+       tsk->thread.cp0_badvaddr = address;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#611: FILE: arch/score/mm/fault.c:191:
+       info.si_signo = SIGBUS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#612: FILE: arch/score/mm/fault.c:192:
+       info.si_errno = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#613: FILE: arch/score/mm/fault.c:193:
+       info.si_code = BUS_ADRERR;$

CHECK:SPACING: No space is necessary after a cast
#614: FILE: arch/score/mm/fault.c:194:
+       info.si_addr = (void __user *) address;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#614: FILE: arch/score/mm/fault.c:194:
+       info.si_addr = (void __user *) address;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#615: FILE: arch/score/mm/fault.c:195:
+       force_sig_info(SIGBUS, &info, tsk);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#616: FILE: arch/score/mm/fault.c:196:
+       return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#618: FILE: arch/score/mm/fault.c:198:
+       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#619: FILE: arch/score/mm/fault.c:199:
+               /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#620: FILE: arch/score/mm/fault.c:200:
+               * Synchronize this task's top level page-table$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#620: FILE: arch/score/mm/fault.c:200:
+               /*
+               * Synchronize this task's top level page-table

ERROR:CODE_INDENT: code indent should use tabs where possible
#621: FILE: arch/score/mm/fault.c:201:
+               * with the 'reference' page table.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#622: FILE: arch/score/mm/fault.c:202:
+               *$

ERROR:CODE_INDENT: code indent should use tabs where possible
#623: FILE: arch/score/mm/fault.c:203:
+               * Do _not_ use "tsk" here. We might be inside$

ERROR:CODE_INDENT: code indent should use tabs where possible
#624: FILE: arch/score/mm/fault.c:204:
+               * an interrupt in the middle of a task switch..$

ERROR:CODE_INDENT: code indent should use tabs where possible
#625: FILE: arch/score/mm/fault.c:205:
+               */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#626: FILE: arch/score/mm/fault.c:206:
+               int offset = __pgd_offset(address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#626: FILE: arch/score/mm/fault.c:206:
+               int offset = __pgd_offset(address);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#627: FILE: arch/score/mm/fault.c:207:
+               pgd_t *pgd, *pgd_k;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#627: FILE: arch/score/mm/fault.c:207:
+               pgd_t *pgd, *pgd_k;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#628: FILE: arch/score/mm/fault.c:208:
+               pud_t *pud, *pud_k;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: arch/score/mm/fault.c:208:
+               pud_t *pud, *pud_k;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#629: FILE: arch/score/mm/fault.c:209:
+               pmd_t *pmd, *pmd_k;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#629: FILE: arch/score/mm/fault.c:209:
+               pmd_t *pmd, *pmd_k;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#630: FILE: arch/score/mm/fault.c:210:
+               pte_t *pte_k;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#630: FILE: arch/score/mm/fault.c:210:
+               pte_t *pte_k;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#632: FILE: arch/score/mm/fault.c:212:
+               pgd = (pgd_t *) pgd_current + offset;$

CHECK:SPACING: No space is necessary after a cast
#632: FILE: arch/score/mm/fault.c:212:
+               pgd = (pgd_t *) pgd_current + offset;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#632: FILE: arch/score/mm/fault.c:212:
+               pgd = (pgd_t *) pgd_current + offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#633: FILE: arch/score/mm/fault.c:213:
+               pgd_k = init_mm.pgd + offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#633: FILE: arch/score/mm/fault.c:213:
+               pgd_k = init_mm.pgd + offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#635: FILE: arch/score/mm/fault.c:215:
+               if (!pgd_present(*pgd_k))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#635: FILE: arch/score/mm/fault.c:215:
+               if (!pgd_present(*pgd_k))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#635: FILE: arch/score/mm/fault.c:215:
+               if (!pgd_present(*pgd_k))
+                       goto no_context;

ERROR:CODE_INDENT: code indent should use tabs where possible
#636: FILE: arch/score/mm/fault.c:216:
+                       goto no_context;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#636: FILE: arch/score/mm/fault.c:216:
+                       goto no_context;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#637: FILE: arch/score/mm/fault.c:217:
+               set_pgd(pgd, *pgd_k);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#637: FILE: arch/score/mm/fault.c:217:
+               set_pgd(pgd, *pgd_k);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#639: FILE: arch/score/mm/fault.c:219:
+               pud = pud_offset(pgd, address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#639: FILE: arch/score/mm/fault.c:219:
+               pud = pud_offset(pgd, address);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#640: FILE: arch/score/mm/fault.c:220:
+               pud_k = pud_offset(pgd_k, address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#640: FILE: arch/score/mm/fault.c:220:
+               pud_k = pud_offset(pgd_k, address);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#641: FILE: arch/score/mm/fault.c:221:
+               if (!pud_present(*pud_k))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#641: FILE: arch/score/mm/fault.c:221:
+               if (!pud_present(*pud_k))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#641: FILE: arch/score/mm/fault.c:221:
+               if (!pud_present(*pud_k))
+                       goto no_context;

ERROR:CODE_INDENT: code indent should use tabs where possible
#642: FILE: arch/score/mm/fault.c:222:
+                       goto no_context;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#642: FILE: arch/score/mm/fault.c:222:
+                       goto no_context;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#644: FILE: arch/score/mm/fault.c:224:
+               pmd = pmd_offset(pud, address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#644: FILE: arch/score/mm/fault.c:224:
+               pmd = pmd_offset(pud, address);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#645: FILE: arch/score/mm/fault.c:225:
+               pmd_k = pmd_offset(pud_k, address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#645: FILE: arch/score/mm/fault.c:225:
+               pmd_k = pmd_offset(pud_k, address);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#646: FILE: arch/score/mm/fault.c:226:
+               if (!pmd_present(*pmd_k))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#646: FILE: arch/score/mm/fault.c:226:
+               if (!pmd_present(*pmd_k))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#646: FILE: arch/score/mm/fault.c:226:
+               if (!pmd_present(*pmd_k))
+                       goto no_context;

ERROR:CODE_INDENT: code indent should use tabs where possible
#647: FILE: arch/score/mm/fault.c:227:
+                       goto no_context;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#647: FILE: arch/score/mm/fault.c:227:
+                       goto no_context;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#648: FILE: arch/score/mm/fault.c:228:
+               set_pmd(pmd, *pmd_k);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#648: FILE: arch/score/mm/fault.c:228:
+               set_pmd(pmd, *pmd_k);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#650: FILE: arch/score/mm/fault.c:230:
+               pte_k = pte_offset_kernel(pmd_k, address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#650: FILE: arch/score/mm/fault.c:230:
+               pte_k = pte_offset_kernel(pmd_k, address);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#651: FILE: arch/score/mm/fault.c:231:
+               if (!pte_present(*pte_k))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#651: FILE: arch/score/mm/fault.c:231:
+               if (!pte_present(*pte_k))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#651: FILE: arch/score/mm/fault.c:231:
+               if (!pte_present(*pte_k))
+                       goto no_context;

ERROR:CODE_INDENT: code indent should use tabs where possible
#652: FILE: arch/score/mm/fault.c:232:
+                       goto no_context;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#652: FILE: arch/score/mm/fault.c:232:
+                       goto no_context;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#653: FILE: arch/score/mm/fault.c:233:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#653: FILE: arch/score/mm/fault.c:233:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#654: FILE: arch/score/mm/fault.c:234:
+       }$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#662: FILE: arch/score/mm/init.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#663: FILE: arch/score/mm/init.c:2:
+ * arch/score/mm/init.c

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#684: FILE: arch/score/mm/init.c:23:
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#703: FILE: arch/score/mm/init.c:42:
+ * We have up to 8 empty zeroed pages so we can map one of the right $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#715: FILE: arch/score/mm/init.c:53:
+       unsigned int order = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#716: FILE: arch/score/mm/init.c:54:
+       unsigned long size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#717: FILE: arch/score/mm/init.c:55:
+       struct page *page;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#719: FILE: arch/score/mm/init.c:57:
+       empty_zero_page = __get_free_pages(GFP_KERNEL | __GFP_ZERO, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#719: FILE: arch/score/mm/init.c:57:
+       empty_zero_page = __get_free_pages(GFP_KERNEL | __GFP_ZERO, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#721: FILE: arch/score/mm/init.c:58:
+       empty_zero_page = __get_free_pages(GFP_KERNEL | __GFP_ZERO, 
+       if (!empty_zero_page)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#721: FILE: arch/score/mm/init.c:58:
+       if (!empty_zero_page)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#721: FILE: arch/score/mm/init.c:58:
+       if (!empty_zero_page)
+               panic("Oh boy, that early out of memory?");

ERROR:CODE_INDENT: code indent should use tabs where possible
#722: FILE: arch/score/mm/init.c:59:
+               panic("Oh boy, that early out of memory?");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#722: FILE: arch/score/mm/init.c:59:
+               panic("Oh boy, that early out of memory?");$

CHECK:SPACING: No space is necessary after a cast
#724: FILE: arch/score/mm/init.c:61:
+       page = virt_to_page((void *) empty_zero_page);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#724: FILE: arch/score/mm/init.c:61:
+       page = virt_to_page((void *) empty_zero_page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#725: FILE: arch/score/mm/init.c:62:
+       split_page(page, order);$

CHECK:SPACING: No space is necessary after a cast
#726: FILE: arch/score/mm/init.c:63:
+       while (page < virt_to_page((void *) (empty_zero_page +

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#726: FILE: arch/score/mm/init.c:63:
+       while (page < virt_to_page((void *) (empty_zero_page +$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#726: FILE: arch/score/mm/init.c:63:
+       while (page < virt_to_page((void *) (empty_zero_page +
[...]
+               SetPageReserved(page);

ERROR:CODE_INDENT: code indent should use tabs where possible
#727: FILE: arch/score/mm/init.c:64:
+                                            (PAGE_SIZE << order)))) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#727: FILE: arch/score/mm/init.c:64:
+                                            (PAGE_SIZE << order)))) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#728: FILE: arch/score/mm/init.c:65:
+               SetPageReserved(page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#728: FILE: arch/score/mm/init.c:65:
+               SetPageReserved(page);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#729: FILE: arch/score/mm/init.c:66:
+               page++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#729: FILE: arch/score/mm/init.c:66:
+               page++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#730: FILE: arch/score/mm/init.c:67:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#732: FILE: arch/score/mm/init.c:69:
+       size = PAGE_SIZE << order;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#733: FILE: arch/score/mm/init.c:70:
+       zero_page_mask = (size - 1) & PAGE_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#735: FILE: arch/score/mm/init.c:72:
+       return 1UL << order;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#741: FILE: arch/score/mm/init.c:78:
+       if (pagenr >= min_low_pfn && pagenr < max_low_pfn)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#741: FILE: arch/score/mm/init.c:78:
+       if (pagenr >= min_low_pfn && pagenr < max_low_pfn)
+               return 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#742: FILE: arch/score/mm/init.c:79:
+               return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#742: FILE: arch/score/mm/init.c:79:
+               return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#743: FILE: arch/score/mm/init.c:80:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#743: FILE: arch/score/mm/init.c:80:
+       else
+               return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#744: FILE: arch/score/mm/init.c:81:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#744: FILE: arch/score/mm/init.c:81:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#749: FILE: arch/score/mm/init.c:86:
+       unsigned long max_zone_pfns[MAX_NR_ZONES];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#750: FILE: arch/score/mm/init.c:87:
+       unsigned long lastpfn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#752: FILE: arch/score/mm/init.c:89:
+       pagetable_init();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#753: FILE: arch/score/mm/init.c:90:
+       max_zone_pfns[ZONE_NORMAL] = max_low_pfn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#754: FILE: arch/score/mm/init.c:91:
+       lastpfn = max_low_pfn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#755: FILE: arch/score/mm/init.c:92:
+       free_area_init_nodes(max_zone_pfns);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#760: FILE: arch/score/mm/init.c:97:
+       unsigned long codesize, reservedpages, datasize, initsize;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#761: FILE: arch/score/mm/init.c:98:
+       unsigned long tmp, ram = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#763: FILE: arch/score/mm/init.c:100:
+       max_mapnr = max_low_pfn;$

CHECK:SPACING: No space is necessary after a cast
#764: FILE: arch/score/mm/init.c:101:
+       high_memory = (void *) __va(max_low_pfn << PAGE_SHIFT);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#764: FILE: arch/score/mm/init.c:101:
+       high_memory = (void *) __va(max_low_pfn << PAGE_SHIFT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#765: FILE: arch/score/mm/init.c:102:
+       totalram_pages += free_all_bootmem();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#766: FILE: arch/score/mm/init.c:103:
+       totalram_pages -= setup_zero_pages();   /* Setup zeroed pages. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#767: FILE: arch/score/mm/init.c:104:
+       reservedpages = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#769: FILE: arch/score/mm/init.c:106:
+       for (tmp = 0; tmp < max_low_pfn; tmp++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#769: FILE: arch/score/mm/init.c:106:
+       for (tmp = 0; tmp < max_low_pfn; tmp++)
+               if (page_is_ram(tmp)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#770: FILE: arch/score/mm/init.c:107:
+               if (page_is_ram(tmp)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#770: FILE: arch/score/mm/init.c:107:
+               if (page_is_ram(tmp)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#770: FILE: arch/score/mm/init.c:107:
+               if (page_is_ram(tmp)) {
+                       ram++;

ERROR:CODE_INDENT: code indent should use tabs where possible
#771: FILE: arch/score/mm/init.c:108:
+                       ram++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#771: FILE: arch/score/mm/init.c:108:
+                       ram++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#772: FILE: arch/score/mm/init.c:109:
+                       if (PageReserved(pfn_to_page(tmp)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#772: FILE: arch/score/mm/init.c:109:
+                       if (PageReserved(pfn_to_page(tmp)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#772: FILE: arch/score/mm/init.c:109:
+                       if (PageReserved(pfn_to_page(tmp)))
+                               reservedpages++;

ERROR:CODE_INDENT: code indent should use tabs where possible
#773: FILE: arch/score/mm/init.c:110:
+                               reservedpages++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#773: FILE: arch/score/mm/init.c:110:
+                               reservedpages++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#774: FILE: arch/score/mm/init.c:111:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#774: FILE: arch/score/mm/init.c:111:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#776: FILE: arch/score/mm/init.c:113:
+       num_physpages = ram;$

CHECK:SPACING: No space is necessary after a cast
#777: FILE: arch/score/mm/init.c:114:
+       codesize = (unsigned long) &_etext - (unsigned long) &_text;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#777: FILE: arch/score/mm/init.c:114:
+       codesize = (unsigned long) &_etext - (unsigned long) &_text;$

CHECK:SPACING: No space is necessary after a cast
#778: FILE: arch/score/mm/init.c:115:
+       datasize = (unsigned long) &_edata - (unsigned long) &_etext;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#778: FILE: arch/score/mm/init.c:115:
+       datasize = (unsigned long) &_edata - (unsigned long) &_etext;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#779: FILE: arch/score/mm/init.c:116:
+       initsize = (unsigned long) &__init_end - (unsigned long) $

CHECK:SPACING: No space is necessary after a cast
#779: FILE: arch/score/mm/init.c:116:
+       initsize = (unsigned long) &__init_end - (unsigned long) 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#779: FILE: arch/score/mm/init.c:116:
+       initsize = (unsigned long) &__init_end - (unsigned long) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#782: FILE: arch/score/mm/init.c:118:
+       kclist_add(&kcore_mem, __va(0), max_low_pfn << PAGE_SHIFT);$

CHECK:SPACING: No space is necessary after a cast
#783: FILE: arch/score/mm/init.c:119:
+       kclist_add(&kcore_vmalloc, (void *) VMALLOC_START,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#783: FILE: arch/score/mm/init.c:119:
+       kclist_add(&kcore_vmalloc, (void *) VMALLOC_START,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#784: FILE: arch/score/mm/init.c:120:
+                       VMALLOC_END - VMALLOC_START);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#784: FILE: arch/score/mm/init.c:120:
+       kclist_add(&kcore_vmalloc, (void *) VMALLOC_START,
+                       VMALLOC_END - VMALLOC_START);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#784: FILE: arch/score/mm/init.c:120:
+                       VMALLOC_END - VMALLOC_START);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#786: FILE: arch/score/mm/init.c:122:
+       printk(KERN_INFO "Memory: %luk/%luk available (%ldk kernel code, "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#786: FILE: arch/score/mm/init.c:122:
+       printk(KERN_INFO "Memory: %luk/%luk available (%ldk kernel code, "

ERROR:TRAILING_WHITESPACE: trailing whitespace
#787: FILE: arch/score/mm/init.c:123:
+                       "%ldk reserved, %ldk data, %ldk init, %ldk $

ERROR:CODE_INDENT: code indent should use tabs where possible
#787: FILE: arch/score/mm/init.c:123:
+                       "%ldk reserved, %ldk data, %ldk init, %ldk $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#787: FILE: arch/score/mm/init.c:123:
+                       "%ldk reserved, %ldk data, %ldk init, %ldk $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#789: FILE: arch/score/mm/init.c:124:
+                       (unsigned long) nr_free_pages() << $

ERROR:CODE_INDENT: code indent should use tabs where possible
#789: FILE: arch/score/mm/init.c:124:
+                       (unsigned long) nr_free_pages() << $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#789: FILE: arch/score/mm/init.c:124:
+                       (unsigned long) nr_free_pages() << $

ERROR:CODE_INDENT: code indent should use tabs where possible
#791: FILE: arch/score/mm/init.c:125:
+                       ram << (PAGE_SHIFT-10), codesize >> 10,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#791: FILE: arch/score/mm/init.c:125:
+                       ram << (PAGE_SHIFT-10), codesize >> 10,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#792: FILE: arch/score/mm/init.c:126:
+                       reservedpages << (PAGE_SHIFT-10), datasize >> 10,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#792: FILE: arch/score/mm/init.c:126:
+                       reservedpages << (PAGE_SHIFT-10), datasize >> 10,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#793: FILE: arch/score/mm/init.c:127:
+                       initsize >> 10,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#793: FILE: arch/score/mm/init.c:127:
+                       initsize >> 10,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#794: FILE: arch/score/mm/init.c:128:
+                       (unsigned long) (totalhigh_pages << $

ERROR:CODE_INDENT: code indent should use tabs where possible
#794: FILE: arch/score/mm/init.c:128:
+                       (unsigned long) (totalhigh_pages << $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#794: FILE: arch/score/mm/init.c:128:
+                       (unsigned long) (totalhigh_pages << $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#799: FILE: arch/score/mm/init.c:132:
+void free_init_pages(const char *what, unsigned long begin, unsigned long $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#802: FILE: arch/score/mm/init.c:134:
+       unsigned long pfn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#804: FILE: arch/score/mm/init.c:136:
+       for (pfn = PFN_UP(begin); pfn < PFN_DOWN(end); pfn++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#805: FILE: arch/score/mm/init.c:137:
+               struct page *page = pfn_to_page(pfn);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#805: FILE: arch/score/mm/init.c:137:
+               struct page *page = pfn_to_page(pfn);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#806: FILE: arch/score/mm/init.c:138:
+               void *addr = phys_to_virt(PFN_PHYS(pfn));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#806: FILE: arch/score/mm/init.c:138:
+               void *addr = phys_to_virt(PFN_PHYS(pfn));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#808: FILE: arch/score/mm/init.c:140:
+               ClearPageReserved(page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#808: FILE: arch/score/mm/init.c:140:
+               ClearPageReserved(page);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#809: FILE: arch/score/mm/init.c:141:
+               init_page_count(page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#809: FILE: arch/score/mm/init.c:141:
+               init_page_count(page);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#810: FILE: arch/score/mm/init.c:142:
+               memset(addr, POISON_FREE_INITMEM, PAGE_SIZE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#810: FILE: arch/score/mm/init.c:142:
+               memset(addr, POISON_FREE_INITMEM, PAGE_SIZE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#811: FILE: arch/score/mm/init.c:143:
+               __free_page(page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#811: FILE: arch/score/mm/init.c:143:
+               __free_page(page);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#812: FILE: arch/score/mm/init.c:144:
+               totalram_pages++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#812: FILE: arch/score/mm/init.c:144:
+               totalram_pages++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#813: FILE: arch/score/mm/init.c:145:
+       }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#814: FILE: arch/score/mm/init.c:146:
+       printk(KERN_INFO "Freeing %s: %ldk freed\n", what, (end - begin) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#814: FILE: arch/score/mm/init.c:146:
+       printk(KERN_INFO "Freeing %s: %ldk freed\n", what, (end - begin) $

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#814: FILE: arch/score/mm/init.c:146:
+       printk(KERN_INFO "Freeing %s: %ldk freed\n", what, (end - begin) 
                                  ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#814: FILE: arch/score/mm/init.c:146:
+       printk(KERN_INFO "Freeing %s: %ldk freed\n", what, (end - begin) 
                                    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#814: FILE: arch/score/mm/init.c:146:
+       printk(KERN_INFO "Freeing %s: %ldk freed\n", what, (end - begin) 
                                      ^

CHECK:CAMELCASE: Avoid CamelCase: <Freeing>
#814: FILE: arch/score/mm/init.c:146:
+       printk(KERN_INFO "Freeing %s: %ldk freed\n", what, (end - begin) 

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#821: FILE: arch/score/mm/init.c:152:
+       free_init_pages("initrd memory",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#822: FILE: arch/score/mm/init.c:153:
+       virt_to_phys((void *) start),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#823: FILE: arch/score/mm/init.c:154:
+       virt_to_phys((void *) end));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#829: FILE: arch/score/mm/init.c:160:
+       free_init_pages("unused kernel memory",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#830: FILE: arch/score/mm/init.c:161:
+           (unsigned long)__init_begin, (unsigned long)__init_end);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#830: FILE: arch/score/mm/init.c:161:
+           (unsigned long)__init_begin, (unsigned long)__init_end);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#835: FILE: arch/score/mm/init.c:166:
+#define __page_aligned(order) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#839: FILE: arch/score/mm/init.c:169:
+ * gcc 3.3 and older have trouble determining that PTRS_PER_PGD and $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#839: FILE: arch/score/mm/init.c:169:
+ * gcc 3.3 and older have trouble determining that PTRS_PER_PGD and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#841: FILE: arch/score/mm/init.c:170:
+ * are constants.  So we use the variants from asm-offset.h until that $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#841: FILE: arch/score/mm/init.c:170:
+ * are constants.  So we use the variants from asm-offset.h until that $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#843: FILE: arch/score/mm/init.c:171:
+ * will officially be retired.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#844: FILE: arch/score/mm/init.c:172:
+ */$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000113541.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 170 errors, 432 warnings, 39 checks, 773 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000113541.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
