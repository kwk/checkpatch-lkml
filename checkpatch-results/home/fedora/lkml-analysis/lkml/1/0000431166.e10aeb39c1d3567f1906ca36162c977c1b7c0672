WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
  the entire freelist. Allocation can be slightly faster too, because we can

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#48: 
Then, we don't encode seperate size and next fields into each slob block,
                      ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#97: FILE: mm/slob.c:39:
+#include <asm/atomic.h>

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#107: FILE: mm/slob.c:49:
+#if PAGE_SIZE <= (32*1024)
                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(sizeof(long)) over __attribute__((aligned(sizeof(long))))
#122: FILE: mm/slob.c:61:
+} __attribute__((aligned(sizeof(long))));

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#140: FILE: mm/slob.c:79:
+};
+static inline void struct_slob_page_wrong_size(void)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#232: FILE: mm/slob.c:161:
+	if (size > 1) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#235: FILE: mm/slob.c:164:
+	} else

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#262: FILE: mm/slob.c:190:
+	return base+next;
 	           ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#388: FILE: mm/slob.c:287:
+		BUG_ON(!b);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#407: FILE: mm/slob.c:305:
+	BUG_ON(!size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#447: FILE: mm/slob.c:327:
+		set_slob(b, units,
+			(void *)((unsigned long)(b +

CHECK:BRACES: braces {} should be used on all arms of this statement
#470: FILE: mm/slob.c:350:
+		if (!slob_last(prev) && b + units == next) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#473: FILE: mm/slob.c:353:
+		} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#476: FILE: mm/slob.c:356:
+		if (prev + slob_units(prev) == b) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#479: FILE: mm/slob.c:359:
+		} else

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#495: FILE: mm/slob.c:375:
+};
+typedef struct bigblock bigblock_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#495: FILE: mm/slob.c:375:
+typedef struct bigblock bigblock_t;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#501: FILE: mm/slob.c:381:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#540: FILE: mm/slob.c:472:
+		BUG();

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000431166.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 12 checks, 510 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000431166.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
