WARNING:TYPO_SPELLING: 'decorder' may be misspelled - perhaps 'decoder'?
#29: 
Subject: [PATCH -tip 3/6 V4.1] x86: instruction decorder API
                                                ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#65: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#70: FILE: arch/x86/include/asm/insn.h:1:
+#ifndef _ASM_X86_INSN_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#86: FILE: arch/x86/include/asm/insn.h:17:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#87: FILE: arch/x86/include/asm/insn.h:18:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'insn' - possible side-effects?
#165: FILE: arch/x86/include/asm/insn.h:96:
+#define MOFFSET64(insn)	(((u64)((insn)->moffset2.value) << 32) | \
+			  (u32)((insn)->moffset1.value))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'insn' - possible side-effects?
#168: FILE: arch/x86/include/asm/insn.h:99:
+#define IMMEDIATE64(insn)	(((u64)((insn)->immediate2.value) << 32) | \
+				  (u32)((insn)->immediate1.value))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#171: FILE: arch/x86/include/asm/insn.h:102:
+extern void insn_init(struct insn *insn, const u8 *kaddr, bool x86_64);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#172: FILE: arch/x86/include/asm/insn.h:103:
+extern void insn_get_prefixes(struct insn *insn);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#173: FILE: arch/x86/include/asm/insn.h:104:
+extern void insn_get_opcode(struct insn *insn);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#174: FILE: arch/x86/include/asm/insn.h:105:
+extern void insn_get_modrm(struct insn *insn);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#175: FILE: arch/x86/include/asm/insn.h:106:
+extern void insn_get_sib(struct insn *insn);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#176: FILE: arch/x86/include/asm/insn.h:107:
+extern void insn_get_displacement(struct insn *insn);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#177: FILE: arch/x86/include/asm/insn.h:108:
+extern void insn_get_immediate(struct insn *insn);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#178: FILE: arch/x86/include/asm/insn.h:109:
+extern void insn_get_length(struct insn *insn);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#183: FILE: arch/x86/include/asm/insn.h:114:
+extern bool insn_rip_relative(struct insn *insn);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#218: FILE: arch/x86/lib/insn.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#232: FILE: arch/x86/lib/insn.c:15:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#233: FILE: arch/x86/lib/insn.c:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#243: FILE: arch/x86/lib/insn.c:26:
+#define W(row, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, ba, bb, bc, bd, be, bf)\
                                                        ^^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'row' may be better as '(row)' to avoid precedence issues
#243: FILE: arch/x86/lib/insn.c:26:
+#define W(row, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, ba, bb, bc, bd, be, bf)\
+	(((b0##UL << 0x0)|(b1##UL << 0x1)|(b2##UL << 0x2)|(b3##UL << 0x3) |   \
+	  (b4##UL << 0x4)|(b5##UL << 0x5)|(b6##UL << 0x6)|(b7##UL << 0x7) |   \
+	  (b8##UL << 0x8)|(b9##UL << 0x9)|(ba##UL << 0xa)|(bb##UL << 0xb) |   \
+	  (bc##UL << 0xc)|(bd##UL << 0xd)|(be##UL << 0xe)|(bf##UL << 0xf))    \
+	 << (row % 32))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#244: FILE: arch/x86/lib/insn.c:27:
+	(((b0##UL << 0x0)|(b1##UL << 0x1)|(b2##UL << 0x2)|(b3##UL << 0x3) |   \
 	                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#244: FILE: arch/x86/lib/insn.c:27:
+	(((b0##UL << 0x0)|(b1##UL << 0x1)|(b2##UL << 0x2)|(b3##UL << 0x3) |   \
 	                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#244: FILE: arch/x86/lib/insn.c:27:
+	(((b0##UL << 0x0)|(b1##UL << 0x1)|(b2##UL << 0x2)|(b3##UL << 0x3) |   \
 	                                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#245: FILE: arch/x86/lib/insn.c:28:
+	  (b4##UL << 0x4)|(b5##UL << 0x5)|(b6##UL << 0x6)|(b7##UL << 0x7) |   \
 	                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#245: FILE: arch/x86/lib/insn.c:28:
+	  (b4##UL << 0x4)|(b5##UL << 0x5)|(b6##UL << 0x6)|(b7##UL << 0x7) |   \
 	                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#245: FILE: arch/x86/lib/insn.c:28:
+	  (b4##UL << 0x4)|(b5##UL << 0x5)|(b6##UL << 0x6)|(b7##UL << 0x7) |   \
 	                                                 ^

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#246: FILE: arch/x86/lib/insn.c:29:
+	  (b8##UL << 0x8)|(b9##UL << 0x9)|(ba##UL << 0xa)|(bb##UL << 0xb) |   \
 	                                   ^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#246: FILE: arch/x86/lib/insn.c:29:
+	  (b8##UL << 0x8)|(b9##UL << 0x9)|(ba##UL << 0xa)|(bb##UL << 0xb) |   \
 	                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#246: FILE: arch/x86/lib/insn.c:29:
+	  (b8##UL << 0x8)|(b9##UL << 0x9)|(ba##UL << 0xa)|(bb##UL << 0xb) |   \
 	                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#246: FILE: arch/x86/lib/insn.c:29:
+	  (b8##UL << 0x8)|(b9##UL << 0x9)|(ba##UL << 0xa)|(bb##UL << 0xb) |   \
 	                                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#247: FILE: arch/x86/lib/insn.c:30:
+	  (bc##UL << 0xc)|(bd##UL << 0xd)|(be##UL << 0xe)|(bf##UL << 0xf))    \
 	                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#247: FILE: arch/x86/lib/insn.c:30:
+	  (bc##UL << 0xc)|(bd##UL << 0xd)|(be##UL << 0xe)|(bf##UL << 0xf))    \
 	                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#247: FILE: arch/x86/lib/insn.c:30:
+	  (bc##UL << 0xc)|(bd##UL << 0xd)|(be##UL << 0xe)|(bf##UL << 0xf))    \
 	                                                 ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#282: FILE: arch/x86/lib/insn.c:65:
+	struct insn_field *prefixes = &insn->prefixes;
+	if (prefixes->got)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around insn->next_byte
#285: FILE: arch/x86/lib/insn.c:68:
+		u8 b = *(insn->next_byte);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LINE_SPACING: Missing a blank line after declarations
#372: FILE: arch/x86/lib/insn.c:155:
+	struct insn_field *opcode = &insn->opcode;
+	if (opcode->got)

CHECK:BRACES: braces {} should be used on all arms of this statement
#377: FILE: arch/x86/lib/insn.c:160:
+	if (OPCODE1(insn) == 0x0f) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#379: FILE: arch/x86/lib/insn.c:162:
+		if (OPCODE2(insn) == 0x38 || OPCODE2(insn) == 0x3a) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#382: FILE: arch/x86/lib/insn.c:165:
+		} else

CHECK:BRACES: Unbalanced braces around else statement
#384: FILE: arch/x86/lib/insn.c:167:
+	} else

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#394: FILE: arch/x86/lib/insn.c:177:
+	W(0x10, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0) , /* 1f */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#396: FILE: arch/x86/lib/insn.c:179:
+	W(0x30, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0) , /* 3f */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#398: FILE: arch/x86/lib/insn.c:181:
+	W(0x50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) , /* 5f */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#400: FILE: arch/x86/lib/insn.c:183:
+	W(0x70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) , /* 7f */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#402: FILE: arch/x86/lib/insn.c:185:
+	W(0x90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) , /* 9f */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#404: FILE: arch/x86/lib/insn.c:187:
+	W(0xb0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) , /* bf */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#406: FILE: arch/x86/lib/insn.c:189:
+	W(0xd0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1) , /* df */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#417: FILE: arch/x86/lib/insn.c:200:
+	W(0x10, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1) , /* 1f */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#419: FILE: arch/x86/lib/insn.c:202:
+	W(0x30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) , /* 3f */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#421: FILE: arch/x86/lib/insn.c:204:
+	W(0x50, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1) , /* 5f */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#423: FILE: arch/x86/lib/insn.c:206:
+	W(0x70, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1) , /* 7f */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#425: FILE: arch/x86/lib/insn.c:208:
+	W(0x90, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1) , /* 9f */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#427: FILE: arch/x86/lib/insn.c:210:
+	W(0xb0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1) , /* bf */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#429: FILE: arch/x86/lib/insn.c:212:
+	W(0xd0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1) , /* df */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#441: FILE: arch/x86/lib/insn.c:224:
+	W(0x10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) , /* 1f */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#443: FILE: arch/x86/lib/insn.c:226:
+	W(0x30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) , /* 3f */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#445: FILE: arch/x86/lib/insn.c:228:
+	W(0x50, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1) , /* 5f */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#447: FILE: arch/x86/lib/insn.c:230:
+	W(0x70, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1) , /* 7f */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#449: FILE: arch/x86/lib/insn.c:232:
+	W(0x90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) , /* 9f */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#451: FILE: arch/x86/lib/insn.c:234:
+	W(0xb0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) , /* bf */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#453: FILE: arch/x86/lib/insn.c:236:
+	W(0xd0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) , /* df */
 	                                                        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#464: FILE: arch/x86/lib/insn.c:247:
+	u8 reg = MODRM_REG(insn);
+	if (insn->opcode.nbytes == 1) {

CHECK:SPACING: No space is necessary after a cast
#466: FILE: arch/x86/lib/insn.c:249:
+			     (const unsigned long *) onebyte_force_64) ||

WARNING:LINE_SPACING: Missing a blank line after declarations
#486: FILE: arch/x86/lib/insn.c:269:
+	struct insn_field *modrm = &insn->modrm;
+	if (modrm->got)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#493: FILE: arch/x86/lib/insn.c:276:
+		modrm->nbytes = test_bit(OPCODE1(insn),
+				(const unsigned long *) onebyte_has_modrm);

CHECK:SPACING: No space is necessary after a cast
#493: FILE: arch/x86/lib/insn.c:276:
+				(const unsigned long *) onebyte_has_modrm);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#497: FILE: arch/x86/lib/insn.c:280:
+		modrm->nbytes = test_bit(OPCODE2(insn),
+				(const unsigned long *) twobyte_has_modrm);

CHECK:SPACING: No space is necessary after a cast
#497: FILE: arch/x86/lib/insn.c:280:
+				(const unsigned long *) twobyte_has_modrm);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 't' - possible side-effects?
#564: FILE: arch/x86/lib/insn.c:347:
+#define get_next(t, insn)			\
+	({t r; r = *(t*)insn->next_byte; insn->next_byte += sizeof(t); r; })

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'insn' - possible side-effects?
#564: FILE: arch/x86/lib/insn.c:347:
+#define get_next(t, insn)			\
+	({t r; r = *(t*)insn->next_byte; insn->next_byte += sizeof(t); r; })

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'insn' may be better as '(insn)' to avoid precedence issues
#564: FILE: arch/x86/lib/insn.c:347:
+#define get_next(t, insn)			\
+	({t r; r = *(t*)insn->next_byte; insn->next_byte += sizeof(t); r; })

CHECK:SPACING: spaces preferred around that '*' (ctx:VxB)
#565: FILE: arch/x86/lib/insn.c:348:
+	({t r; r = *(t*)insn->next_byte; insn->next_byte += sizeof(t); r; })
 	              ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#579: FILE: arch/x86/lib/insn.c:362:
+	u8 mod;
+	if (insn->displacement.got)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#589: FILE: arch/x86/lib/insn.c:372:
+^I^I * ^Iaddress size = 2 (0x67 prefix in 32-bit mode)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#599: FILE: arch/x86/lib/insn.c:382:
+^I^I * ^Ifield is 4 bytes$

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#629: FILE: arch/x86/lib/insn.c:412:
+	W(0x10, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0) , /* 1f */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#631: FILE: arch/x86/lib/insn.c:414:
+	W(0x30, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0) , /* 3f */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#633: FILE: arch/x86/lib/insn.c:416:
+	W(0x50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) , /* 5f */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#635: FILE: arch/x86/lib/insn.c:418:
+	W(0x70, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1) , /* 7f */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#637: FILE: arch/x86/lib/insn.c:420:
+	W(0x90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) , /* 9f */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#639: FILE: arch/x86/lib/insn.c:422:
+	W(0xb0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0) , /* bf */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#641: FILE: arch/x86/lib/insn.c:424:
+	W(0xd0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) , /* df */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#652: FILE: arch/x86/lib/insn.c:435:
+	W(0x10, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0) , /* 1f */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#654: FILE: arch/x86/lib/insn.c:437:
+	W(0x30, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0) , /* 3f */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#656: FILE: arch/x86/lib/insn.c:439:
+	W(0x50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) , /* 5f */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#658: FILE: arch/x86/lib/insn.c:441:
+	W(0x70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) , /* 7f */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#660: FILE: arch/x86/lib/insn.c:443:
+	W(0x90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) , /* 9f */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#662: FILE: arch/x86/lib/insn.c:445:
+	W(0xb0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) , /* bf */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#664: FILE: arch/x86/lib/insn.c:447:
+	W(0xd0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) , /* df */
 	                                                        ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#690: FILE: arch/x86/lib/insn.c:473:
+	insn->moffset1.got = insn->moffset2.got = true;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#728: FILE: arch/x86/lib/insn.c:511:
+	insn->immediate1.got = insn->immediate2.got = true;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#750: FILE: arch/x86/lib/insn.c:533:
+	insn->immediate1.got = insn->immediate2.got = true;

WARNING:LINE_SPACING: Missing a blank line after declarations
#766: FILE: arch/x86/lib/insn.c:549:
+	u8 opcode;
+	if (insn->immediate.got)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#783: FILE: arch/x86/lib/insn.c:566:
+		} else if (0xb8 <= opcode && opcode <= 0xbf /* mov immv */) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:BRACES: braces {} should be used on all arms of this statement
#799: FILE: arch/x86/lib/insn.c:582:
+		if ((opcode & 0xf0) == 0x80 /* Jcc imm32 */) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#801: FILE: arch/x86/lib/insn.c:584:
+		} else

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000144350.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 39 errors, 15 warnings, 43 checks, 764 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000144350.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
