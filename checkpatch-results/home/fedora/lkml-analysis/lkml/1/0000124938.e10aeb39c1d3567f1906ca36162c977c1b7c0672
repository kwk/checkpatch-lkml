WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
> > >> > As a side note Red Hat ships runtime configurable tick behaviour in RHEL

WARNING:BAD_SIGN_OFF: 'Rh-acked-by:' is the preferred signature form
#78: 
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: 'Rh-acked-by:' is the preferred signature form
#79: 
RH-Acked-by: Alan Cox <alan@redhat.com>

WARNING:BAD_SIGN_OFF: 'Rh-nacked-by:' is the preferred signature form
#80: 
RH-Nacked-by: Alan Cox <alan@redhat.com>

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: arch/x86_64/kernel/time.c:436:
+       if (lost > (int)tick_divider - 1)  {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#135: FILE: arch/x86_64/kernel/time.c:436:
+       if (lost > (int)tick_divider - 1)  {
                handle_lost_ticks(lost, regs);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: arch/i386/kernel/apic.c:1030:
+       const int LOOPS = REAL_HZ/10;$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#211: FILE: arch/i386/kernel/apic.c:1030:
+       const int LOOPS = REAL_HZ/10;
                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: arch/i386/kernel/apic.c:1079:
+                       ((long)(t2-t1)/LOOPS)/(1000000/REAL_HZ),$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: arch/i386/kernel/apic.c:1079:
+                       ((long)(t2-t1)/LOOPS)/(1000000/REAL_HZ),$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#221: FILE: arch/i386/kernel/apic.c:1079:
+                       ((long)(t2-t1)/LOOPS)/(1000000/REAL_HZ),
                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#221: FILE: arch/i386/kernel/apic.c:1079:
+                       ((long)(t2-t1)/LOOPS)/(1000000/REAL_HZ),
                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#221: FILE: arch/i386/kernel/apic.c:1079:
+                       ((long)(t2-t1)/LOOPS)/(1000000/REAL_HZ),
                                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#221: FILE: arch/i386/kernel/apic.c:1079:
+                       ((long)(t2-t1)/LOOPS)/(1000000/REAL_HZ),
                                                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: arch/i386/kernel/apic.c:1080:
+                       ((long)(t2-t1)/LOOPS)%(1000000/REAL_HZ));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: arch/i386/kernel/apic.c:1080:
+                       ((long)(t2-t1)/LOOPS)%(1000000/REAL_HZ));$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#222: FILE: arch/i386/kernel/apic.c:1080:
+                       ((long)(t2-t1)/LOOPS)%(1000000/REAL_HZ));
                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#222: FILE: arch/i386/kernel/apic.c:1080:
+                       ((long)(t2-t1)/LOOPS)%(1000000/REAL_HZ));
                                      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#222: FILE: arch/i386/kernel/apic.c:1080:
+                       ((long)(t2-t1)/LOOPS)%(1000000/REAL_HZ));
                                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#222: FILE: arch/i386/kernel/apic.c:1080:
+                       ((long)(t2-t1)/LOOPS)%(1000000/REAL_HZ));
                                                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#228: FILE: arch/i386/kernel/apic.c:1084:
+               result/(1000000/REAL_HZ),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: arch/i386/kernel/apic.c:1084:
+               result/(1000000/REAL_HZ),$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#228: FILE: arch/i386/kernel/apic.c:1084:
+               result/(1000000/REAL_HZ),
                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#228: FILE: arch/i386/kernel/apic.c:1084:
+               result/(1000000/REAL_HZ),
                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: arch/i386/kernel/apic.c:1085:
+               result%(1000000/REAL_HZ));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: arch/i386/kernel/apic.c:1085:
+               result%(1000000/REAL_HZ));$

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#229: FILE: arch/i386/kernel/apic.c:1085:
+               result%(1000000/REAL_HZ));
                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#229: FILE: arch/i386/kernel/apic.c:1085:
+               result%(1000000/REAL_HZ));
                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: arch/x86_64/kernel/apic.c:814:
+       return result * APIC_DIVISOR / REAL_HZ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: arch/x86_64/kernel/apic.c:944:
+       int i;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#251: FILE: arch/x86_64/kernel/apic.c:945:
+       int i;
+       for (i = 0; i < tick_divider; i++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: arch/x86_64/kernel/apic.c:945:
+       for (i = 0; i < tick_divider; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#251: FILE: arch/x86_64/kernel/apic.c:945:
+       for (i = 0; i < tick_divider; i++) {
+               profile_tick(CPU_PROFILING, regs);

ERROR:CODE_INDENT: code indent should use tabs where possible
#252: FILE: arch/x86_64/kernel/apic.c:946:
+               profile_tick(CPU_PROFILING, regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: arch/x86_64/kernel/apic.c:946:
+               profile_tick(CPU_PROFILING, regs);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#255: FILE: arch/x86_64/kernel/apic.c:948:
+               update_process_times(user_mode(regs));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: arch/x86_64/kernel/apic.c:948:
+               update_process_times(user_mode(regs));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: arch/x86_64/kernel/apic.c:950:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: arch/x86_64/kernel/pmtimer.c:67:
+       lost = delta / (USEC_PER_SEC / REAL_HZ);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: arch/x86_64/kernel/pmtimer.c:68:
+       offset_delay = delta % (USEC_PER_SEC / REAL_HZ);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#292: FILE: arch/x86_64/kernel/time.c:309:
+               offset *= NSEC_PER_TICK / hpet_tick_real;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: arch/x86_64/kernel/time.c:309:
+               offset *= NSEC_PER_TICK / hpet_tick_real;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: arch/x86_64/kernel/time.c:411:
+                       (offset - vxtime.last) * NSEC_PER_TICK / hpet_tick_real;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: arch/x86_64/kernel/time.c:411:
+                       (offset - vxtime.last) * NSEC_PER_TICK / hpet_tick_real;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#310: FILE: arch/x86_64/kernel/time.c:420:
+                          vxtime.tsc_quot) >> US_SCALE) - USEC_PER_REAL_TICK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: arch/x86_64/kernel/time.c:420:
+                          vxtime.tsc_quot) >> US_SCALE) - USEC_PER_REAL_TICK;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#318: FILE: arch/x86_64/kernel/time.c:425:
+               if (offset > USEC_PER_REAL_TICK) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: arch/x86_64/kernel/time.c:425:
+               if (offset > USEC_PER_REAL_TICK) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#318: FILE: arch/x86_64/kernel/time.c:425:
+               if (offset > USEC_PER_REAL_TICK) {
+                       lost = offset / USEC_PER_REAL_TICK;

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: arch/x86_64/kernel/time.c:426:
+                       lost = offset / USEC_PER_REAL_TICK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: arch/x86_64/kernel/time.c:426:
+                       lost = offset / USEC_PER_REAL_TICK;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: arch/x86_64/kernel/time.c:427:
+                       offset %= USEC_PER_REAL_TICK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: arch/x86_64/kernel/time.c:427:
+                       offset %= USEC_PER_REAL_TICK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: arch/i386/kernel/apic.c:1188:
+       int i;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#369: FILE: arch/i386/kernel/apic.c:1189:
+       int i;
+       for (i = 0; i < tick_divider; i++) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: arch/i386/kernel/apic.c:1189:
+       for (i = 0; i < tick_divider; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#369: FILE: arch/i386/kernel/apic.c:1189:
+       for (i = 0; i < tick_divider; i++) {
+               profile_tick(CPU_PROFILING, regs);

ERROR:CODE_INDENT: code indent should use tabs where possible
#370: FILE: arch/i386/kernel/apic.c:1190:
+               profile_tick(CPU_PROFILING, regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: arch/i386/kernel/apic.c:1190:
+               profile_tick(CPU_PROFILING, regs);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#373: FILE: arch/i386/kernel/apic.c:1192:
+               update_process_times(user_mode_vm(regs));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: arch/i386/kernel/apic.c:1192:
+               update_process_times(user_mode_vm(regs));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: arch/i386/kernel/apic.c:1194:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: arch/i386/kernel/i8253.c:99:
+       count *= tick_divider;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: arch/i386/kernel/i8253.c:102:
+       return (cycle_t)(jifs * LOGICAL_LATCH) + count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: arch/i386/kernel/time.c:377:
+       unsigned int divider = 1;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#434: FILE: arch/i386/kernel/time.c:378:
+       unsigned int divider = 1;
+       get_option(&s, &divider);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: arch/i386/kernel/time.c:378:
+       get_option(&s, &divider);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: arch/i386/kernel/time.c:379:
+       if (divider >= 1 && HZ/divider >= 25)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#435: FILE: arch/i386/kernel/time.c:379:
+       if (divider >= 1 && HZ/divider >= 25)
+               tick_divider = divider;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#435: FILE: arch/i386/kernel/time.c:379:
+       if (divider >= 1 && HZ/divider >= 25)
                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#436: FILE: arch/i386/kernel/time.c:380:
+               tick_divider = divider;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: arch/i386/kernel/time.c:380:
+               tick_divider = divider;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#437: FILE: arch/i386/kernel/time.c:381:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#437: FILE: arch/i386/kernel/time.c:381:
+       else
+               printk(KERN_ERR "tick_divider: %d is out of range.\n", divider);

ERROR:CODE_INDENT: code indent should use tabs where possible
#438: FILE: arch/i386/kernel/time.c:382:
+               printk(KERN_ERR "tick_divider: %d is out of range.\n", divider);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: arch/i386/kernel/time.c:382:
+               printk(KERN_ERR "tick_divider: %d is out of range.\n", divider);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#438: FILE: arch/i386/kernel/time.c:382:
+               printk(KERN_ERR "tick_divider: %d is out of range.\n", divider);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#439: FILE: arch/i386/kernel/time.c:383:
+       return 1;$

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#442: FILE: arch/i386/kernel/time.c:386:
+__setup("divider=", divider_setup);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: arch/i386/kernel/time_hpet.c:160:
+       hpet_tick_real = hpet_tick * tick_divider;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: arch/i386/kernel/time_hpet.c:161:
+       if (hpet_timer_stop_set_go(hpet_tick_real))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#463: FILE: arch/i386/kernel/time_hpet.c:161:
+       if (hpet_timer_stop_set_go(hpet_tick_real))
                return -1;

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#475: FILE: arch/x86_64/Kconfig:446:
+config TICK_DIVIDER
+       bool "Support clock division"
+       default n
+       help
+         Supports the use of clock division allowing the real interrupt
+         rate to be lower than the HZ setting.
+
 # Mark as embedded because too many people got it wrong.
 # The code disables itself when not needed.

Kconfig symbols should have a help text which fully describes
it.

ERROR:CODE_INDENT: code indent should use tabs where possible
#517: FILE: arch/x86_64/kernel/time.c:113:
+          scaling here. We do however care that the limit is in real ticks */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#517: FILE: arch/x86_64/kernel/time.c:113:
+       /* The hpet counter runs at a fixed rate so we don't care about HZ
+          scaling here. We do however care that the limit is in real ticks */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#517: FILE: arch/x86_64/kernel/time.c:113:
+          scaling here. We do however care that the limit is in real ticks */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#518: FILE: arch/x86_64/kernel/time.c:114:
+       return (min(counter,hpet_tick_real) * vxtime.quot) >> US_SCALE;$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#518: FILE: arch/x86_64/kernel/time.c:114:
+       return (min(counter,hpet_tick_real) * vxtime.quot) >> US_SCALE;
                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#527: FILE: arch/x86_64/kernel/time.c:338:
+                                                       hpet_tick_real;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: arch/x86_64/kernel/time.c:338:
+                                                       hpet_tick_real;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#536: FILE: arch/x86_64/kernel/time.c:361:
+       int delay = 0, offset = 0, lost = 0, i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#544: FILE: arch/x86_64/kernel/time.c:379:
+                *$

ERROR:CODE_INDENT: code indent should use tabs where possible
#545: FILE: arch/x86_64/kernel/time.c:380:
+                * We are working in physical time here$

ERROR:CODE_INDENT: code indent should use tabs where possible
#548: FILE: arch/x86_64/kernel/time.c:382:
+               offset = hpet_readl(HPET_T0_CMP) - hpet_tick_real;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#548: FILE: arch/x86_64/kernel/time.c:382:
+               offset = hpet_readl(HPET_T0_CMP) - hpet_tick_real;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#556: FILE: arch/x86_64/kernel/time.c:390:
+               /* We are in physical not logical ticks */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#558: FILE: arch/x86_64/kernel/time.c:392:
+               /* True ticks of delay elapsed */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#559: FILE: arch/x86_64/kernel/time.c:393:
+               delay *= tick_divider;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#559: FILE: arch/x86_64/kernel/time.c:393:
+               delay *= tick_divider;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#564: FILE: arch/x86_64/kernel/time.c:398:
        if (vxtime.mode == VXTIME_HPET) {
+               if (offset - vxtime.last > hpet_tick_real) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#567: FILE: arch/x86_64/kernel/time.c:399:
+               if (offset - vxtime.last > hpet_tick_real) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#567: FILE: arch/x86_64/kernel/time.c:399:
+               if (offset - vxtime.last > hpet_tick_real) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#567: FILE: arch/x86_64/kernel/time.c:399:
+               if (offset - vxtime.last > hpet_tick_real) {
+                       lost = (offset - vxtime.last) / hpet_tick_real - 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#568: FILE: arch/x86_64/kernel/time.c:400:
+                       lost = (offset - vxtime.last) / hpet_tick_real - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#568: FILE: arch/x86_64/kernel/time.c:400:
+                       lost = (offset - vxtime.last) / hpet_tick_real - 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#569: FILE: arch/x86_64/kernel/time.c:401:
+                       /* Lost is now in real ticks but we want logical */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#570: FILE: arch/x86_64/kernel/time.c:402:
+                       lost *= tick_divider;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#570: FILE: arch/x86_64/kernel/time.c:402:
+                       lost *= tick_divider;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: arch/x86_64/kernel/time.c:436:
+       if (lost > tick_divider - 1)  {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#581: FILE: arch/x86_64/kernel/time.c:436:
+       if (lost > tick_divider - 1)  {
                handle_lost_ticks(lost, regs);

ERROR:CODE_INDENT: code indent should use tabs where possible
#584: FILE: arch/x86_64/kernel/time.c:438:
+               jiffies += lost - (tick_divider - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#584: FILE: arch/x86_64/kernel/time.c:438:
+               jiffies += lost - (tick_divider - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#592: FILE: arch/x86_64/kernel/time.c:445:
+       for (i = 0; i < tick_divider; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#592: FILE: arch/x86_64/kernel/time.c:445:
+       for (i = 0; i < tick_divider; i++) {
+               do_timer(regs);

ERROR:CODE_INDENT: code indent should use tabs where possible
#593: FILE: arch/x86_64/kernel/time.c:446:
+               do_timer(regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#593: FILE: arch/x86_64/kernel/time.c:446:
+               do_timer(regs);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#596: FILE: arch/x86_64/kernel/time.c:448:
+               update_process_times(user_mode(regs));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#596: FILE: arch/x86_64/kernel/time.c:448:
+               update_process_times(user_mode(regs));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#605: FILE: arch/x86_64/kernel/time.c:452:
+        * In the SMP case we use the local APIC timer interrupt to do the profiling,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#606: FILE: arch/x86_64/kernel/time.c:453:
+        * except when we simulate SMP mode on a uniprocessor system, in that case we$

ERROR:CODE_INDENT: code indent should use tabs where possible
#607: FILE: arch/x86_64/kernel/time.c:454:
+        * have to call the local interrupt handler.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#608: FILE: arch/x86_64/kernel/time.c:455:
+        */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#612: FILE: arch/x86_64/kernel/time.c:458:
+               profile_tick(CPU_PROFILING, regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#612: FILE: arch/x86_64/kernel/time.c:458:
+               profile_tick(CPU_PROFILING, regs);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#616: FILE: arch/x86_64/kernel/time.c:460:
+               if (!using_apic_timer)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#616: FILE: arch/x86_64/kernel/time.c:460:
+               if (!using_apic_timer)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#616: FILE: arch/x86_64/kernel/time.c:460:
+               if (!using_apic_timer)
+                       smp_local_timer_interrupt(regs);

ERROR:CODE_INDENT: code indent should use tabs where possible
#617: FILE: arch/x86_64/kernel/time.c:461:
+                       smp_local_timer_interrupt(regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#617: FILE: arch/x86_64/kernel/time.c:461:
+                       smp_local_timer_interrupt(regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#619: FILE: arch/x86_64/kernel/time.c:463:
+       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#629: FILE: arch/x86_64/kernel/time.c:815:
+               hpet_writel(hpet_tick_real, HPET_T0_CMP); /* next interrupt */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#629: FILE: arch/x86_64/kernel/time.c:815:
+               hpet_writel(hpet_tick_real, HPET_T0_CMP); /* next interrupt */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#630: FILE: arch/x86_64/kernel/time.c:816:
+               hpet_writel(hpet_tick_real, HPET_T0_CMP); /* period */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#630: FILE: arch/x86_64/kernel/time.c:816:
+               hpet_writel(hpet_tick_real, HPET_T0_CMP); /* period */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#641: FILE: arch/x86_64/kernel/time.c:854:
+       hpet_tick_real = hpet_tick * tick_divider;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#646: FILE: arch/x86_64/kernel/time.c:858:
+       return hpet_timer_stop_set_go(hpet_tick_real);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#652: FILE: arch/x86_64/kernel/time.c:863:
+       return hpet_timer_stop_set_go(hpet_tick_real);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#667: FILE: arch/x86_64/kernel/time.c:1020:
                if (hpet_use_timer)
+                       vxtime.last = hpet_readl(HPET_T0_CMP) - hpet_tick_real;

ERROR:CODE_INDENT: code indent should use tabs where possible
#669: FILE: arch/x86_64/kernel/time.c:1021:
+                       vxtime.last = hpet_readl(HPET_T0_CMP) - hpet_tick_real;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#669: FILE: arch/x86_64/kernel/time.c:1021:
+                       vxtime.last = hpet_readl(HPET_T0_CMP) - hpet_tick_real;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#676: FILE: arch/x86_64/kernel/time.c:1091:
                if (hpet_use_timer)
+                       vxtime.last = hpet_readl(HPET_T0_CMP) - hpet_tick_real;

ERROR:CODE_INDENT: code indent should use tabs where possible
#678: FILE: arch/x86_64/kernel/time.c:1092:
+                       vxtime.last = hpet_readl(HPET_T0_CMP) - hpet_tick_real;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#678: FILE: arch/x86_64/kernel/time.c:1092:
+                       vxtime.last = hpet_readl(HPET_T0_CMP) - hpet_tick_real;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#689: FILE: arch/x86_64/kernel/time.c:1374:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#694: FILE: arch/x86_64/kernel/time.c:1379:
+       unsigned int divider = 1;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#695: FILE: arch/x86_64/kernel/time.c:1380:
+       unsigned int divider = 1;
+       get_option(&s, &divider);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#695: FILE: arch/x86_64/kernel/time.c:1380:
+       get_option(&s, &divider);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#696: FILE: arch/x86_64/kernel/time.c:1381:
+       if (divider >= 1 && HZ/divider >= 25)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#696: FILE: arch/x86_64/kernel/time.c:1381:
+       if (divider >= 1 && HZ/divider >= 25)
+               tick_divider = divider;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#696: FILE: arch/x86_64/kernel/time.c:1381:
+       if (divider >= 1 && HZ/divider >= 25)
                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#697: FILE: arch/x86_64/kernel/time.c:1382:
+               tick_divider = divider;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#697: FILE: arch/x86_64/kernel/time.c:1382:
+               tick_divider = divider;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#698: FILE: arch/x86_64/kernel/time.c:1383:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#698: FILE: arch/x86_64/kernel/time.c:1383:
+       else
+               printk(KERN_ERR "tick_divider: %d is out of range.\n", divider);

ERROR:CODE_INDENT: code indent should use tabs where possible
#699: FILE: arch/x86_64/kernel/time.c:1384:
+               printk(KERN_ERR "tick_divider: %d is out of range.\n", divider);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#699: FILE: arch/x86_64/kernel/time.c:1384:
+               printk(KERN_ERR "tick_divider: %d is out of range.\n", divider);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#699: FILE: arch/x86_64/kernel/time.c:1384:
+               printk(KERN_ERR "tick_divider: %d is out of range.\n", divider);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#700: FILE: arch/x86_64/kernel/time.c:1385:
+       return 1;$

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#703: FILE: arch/x86_64/kernel/time.c:1388:
+__setup("divider=", divider_setup);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#714: FILE: include/asm-i386/mach-default/do_timer.h:19:
+       int i;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#715: FILE: include/asm-i386/mach-default/do_timer.h:20:
+       int i;
+       for (i = 0; i < tick_divider; i++) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#715: FILE: include/asm-i386/mach-default/do_timer.h:20:
+       for (i = 0; i < tick_divider; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#715: FILE: include/asm-i386/mach-default/do_timer.h:20:
+       for (i = 0; i < tick_divider; i++) {
+               do_timer(regs);

ERROR:CODE_INDENT: code indent should use tabs where possible
#716: FILE: include/asm-i386/mach-default/do_timer.h:21:
+               do_timer(regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#716: FILE: include/asm-i386/mach-default/do_timer.h:21:
+               do_timer(regs);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#719: FILE: include/asm-i386/mach-default/do_timer.h:23:
+               update_process_times(user_mode_vm(regs));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#719: FILE: include/asm-i386/mach-default/do_timer.h:23:
+               update_process_times(user_mode_vm(regs));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#721: FILE: include/asm-i386/mach-default/do_timer.h:25:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#729: FILE: include/asm-i386/mach-default/do_timer.h:32:
+       for (i = 0; i < tick_divider; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#729: FILE: include/asm-i386/mach-default/do_timer.h:32:
+       for (i = 0; i < tick_divider; i++)
+               profile_tick(CPU_PROFILING, regs);

ERROR:CODE_INDENT: code indent should use tabs where possible
#730: FILE: include/asm-i386/mach-default/do_timer.h:33:
+               profile_tick(CPU_PROFILING, regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#730: FILE: include/asm-i386/mach-default/do_timer.h:33:
+               profile_tick(CPU_PROFILING, regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#742: FILE: include/asm-i386/mach-visws/do_timer.h:9:
+       int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#747: FILE: include/asm-i386/mach-visws/do_timer.h:13:
+       for (i = 0; i < tick_divider; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#747: FILE: include/asm-i386/mach-visws/do_timer.h:13:
+       for (i = 0; i < tick_divider; i++) {
+               do_timer(regs);

ERROR:CODE_INDENT: code indent should use tabs where possible
#748: FILE: include/asm-i386/mach-visws/do_timer.h:14:
+               do_timer(regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#748: FILE: include/asm-i386/mach-visws/do_timer.h:14:
+               do_timer(regs);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#751: FILE: include/asm-i386/mach-visws/do_timer.h:16:
+               update_process_times(user_mode_vm(regs));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#751: FILE: include/asm-i386/mach-visws/do_timer.h:16:
+               update_process_times(user_mode_vm(regs));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#753: FILE: include/asm-i386/mach-visws/do_timer.h:18:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#761: FILE: include/asm-i386/mach-visws/do_timer.h:25:
+       for (i = 0; i < tick_divider; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#761: FILE: include/asm-i386/mach-visws/do_timer.h:25:
+       for (i = 0; i < tick_divider; i++)
+               profile_tick(CPU_PROFILING, regs);

ERROR:CODE_INDENT: code indent should use tabs where possible
#762: FILE: include/asm-i386/mach-visws/do_timer.h:26:
+               profile_tick(CPU_PROFILING, regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#762: FILE: include/asm-i386/mach-visws/do_timer.h:26:
+               profile_tick(CPU_PROFILING, regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#775: FILE: include/asm-i386/mach-voyager/do_timer.h:6:
+       int i;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#776: FILE: include/asm-i386/mach-voyager/do_timer.h:7:
+       int i;
+       for (i = 0; i < tick_divider; i++) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#776: FILE: include/asm-i386/mach-voyager/do_timer.h:7:
+       for (i = 0; i < tick_divider; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#776: FILE: include/asm-i386/mach-voyager/do_timer.h:7:
+       for (i = 0; i < tick_divider; i++) {
+               do_timer(regs);

ERROR:CODE_INDENT: code indent should use tabs where possible
#777: FILE: include/asm-i386/mach-voyager/do_timer.h:8:
+               do_timer(regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#777: FILE: include/asm-i386/mach-voyager/do_timer.h:8:
+               do_timer(regs);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#780: FILE: include/asm-i386/mach-voyager/do_timer.h:10:
+               update_process_times(user_mode_vm(regs));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#780: FILE: include/asm-i386/mach-voyager/do_timer.h:10:
+               update_process_times(user_mode_vm(regs));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#784: FILE: include/asm-i386/mach-voyager/do_timer.h:12:
+               voyager_timer_interrupt(regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#784: FILE: include/asm-i386/mach-voyager/do_timer.h:12:
+               voyager_timer_interrupt(regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#785: FILE: include/asm-i386/mach-voyager/do_timer.h:13:
+       }$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#803: FILE: include/linux/jiffies.h:42:
+#define REAL_HZ (HZ/tick_divider)
                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#806: FILE: include/linux/jiffies.h:44:
+#define LATCH  ((CLOCK_TICK_RATE + REAL_HZ/2) / REAL_HZ)       /* For divider */
                                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#808: FILE: include/linux/jiffies.h:46:
+#define LATCH_HPET ((HPET_TICK_RATE + REAL_HZ/2) / REAL_HZ)
                                              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#810: FILE: include/linux/jiffies.h:48:
+#define LOGICAL_LATCH  ((CLOCK_TICK_RATE + HZ/2) / HZ) /* For divider */
                                              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#813: FILE: include/linux/jiffies.h:50:
+#define LOGICAL_LATCH_HPET ((HPET_TICK_RATE + HZ/2) / HZ)
                                                 ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#822: FILE: include/linux/jiffies.h:65:
+#define ACTHZ (SH_DIV (CLOCK_TICK_RATE, LOGICAL_LATCH, 8))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#825: FILE: include/linux/jiffies.h:67:
+#define ACTHZ_HPET (SH_DIV (HPET_TICK_RATE, LOGICAL_LATCH_HPET, 8))

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#840: FILE: init/calibrate.c:31:
 static unsigned long __devinit calibrate_delay_direct(void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#845: FILE: init/calibrate.c:39:
+       unsigned long delay_calibration_ticks = ((REAL_HZ < 100) ? 1 : (REAL_HZ/100));$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#845: FILE: init/calibrate.c:39:
+       unsigned long delay_calibration_ticks = ((REAL_HZ < 100) ? 1 : (REAL_HZ/100));
                                                                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#854: FILE: init/calibrate.c:68:
+               while (jiffies <= (start_jiffies + tick_divider)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#854: FILE: init/calibrate.c:68:
+               while (jiffies <= (start_jiffies + tick_divider)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#854: FILE: init/calibrate.c:68:
+               while (jiffies <= (start_jiffies + tick_divider)) {
                        pre_start = start;

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#854: FILE: init/calibrate.c:68:
+               while (jiffies <= (start_jiffies + tick_divider)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#863: FILE: init/calibrate.c:77:
+                      (start_jiffies + tick_divider * (1 + delay_calibration_ticks))) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#863: FILE: init/calibrate.c:77:
+                      (start_jiffies + tick_divider * (1 + delay_calibration_ticks))) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#872: FILE: init/calibrate.c:83:
+               tsc_rate_max = (post_end - pre_start) / delay_calibration_ticks;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#872: FILE: init/calibrate.c:83:
+               tsc_rate_max = (post_end - pre_start) / delay_calibration_ticks;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#873: FILE: init/calibrate.c:84:
+               tsc_rate_min = (pre_end - post_start) / delay_calibration_ticks;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#873: FILE: init/calibrate.c:84:
+               tsc_rate_min = (pre_end - post_start) / delay_calibration_ticks;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#875: FILE: init/calibrate.c:86:
+               tsc_rate_max /= tick_divider;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#875: FILE: init/calibrate.c:86:
+               tsc_rate_max /= tick_divider;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#876: FILE: init/calibrate.c:87:
+               tsc_rate_min /= tick_divider;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#876: FILE: init/calibrate.c:87:
+               tsc_rate_min /= tick_divider;$

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#889: FILE: arch/i386/Kconfig:241:
+config TICK_DIVIDER
+       bool "Support clock division"
+       default n
+       help
+         Supports the use of clock division allowing the real interrupt
+         rate to be lower than the HZ setting.
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000124938.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 60 errors, 136 warnings, 24 checks, 570 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000124938.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
