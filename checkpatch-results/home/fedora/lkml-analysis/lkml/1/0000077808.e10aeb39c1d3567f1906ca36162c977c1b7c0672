WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
 r  b   swpd   free   buff  cache   si   so    bi    bo   in    cs us sy id wa

CHECK:BIT_MACRO: Prefer using the BIT macro
#150: FILE: fs/fs-writeback.c:55:
+#define WS_USED (1 << WS_USED_B)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#151: FILE: fs/fs-writeback.c:56:
+#define WS_ONSTACK (1 << WS_ONSTACK_B)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#343: FILE: fs/fs-writeback.c:166:
+		BUG_ON(!work->seen);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#345: FILE: fs/fs-writeback.c:168:
+		BUG_ON(!bdi->wb_cnt);

WARNING:MEMORY_BARRIER: memory barrier without comment
#358: FILE: fs/fs-writeback.c:173:
+		smp_mb();

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#769: FILE: fs/fs-writeback.c:719:
+			work->sync_mode = sync_mode = WB_SYNC_ALL;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: braces {} should be used on all arms of this statement
#817: FILE: fs/fs-writeback.c:767:
+		if (pages_written)
[...]
+		else if (wait_jiffies != -1UL) {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#914: FILE: fs/fs-writeback.c:864:
+			name = (const char *) dentry->d_name.name;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#916: FILE: fs/fs-writeback.c:866:
+		printk(KERN_DEBUG

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#932: FILE: fs/fs-writeback.c:882:
+ *  ^Imark_inode_dirty_sync.$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1002: FILE: fs/fs-writeback.c:952:
+		if (inode->i_state & (I_FREEING|I_CLEAR))
 		                               ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1020: FILE: fs/fs-writeback.c:970:
+EXPORT_SYMBOL(__mark_inode_dirty);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:SPACING: space prohibited after that open parenthesis '('
#1235: FILE: include/linux/backing-dev.h:103:
+void bdi_writeback_all( struct writeback_control *wbc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1285: FILE: include/linux/fs.h:2070:
+extern void generic_sync_sb_inodes(struct writeback_control *wbc);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1286: FILE: include/linux/fs.h:2071:
+extern void generic_sync_bdi_inodes(struct writeback_control *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct writeback_control *' should also have an identifier name
#1286: FILE: include/linux/fs.h:2071:
+extern void generic_sync_bdi_inodes(struct writeback_control *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1307: FILE: include/linux/writeback.h:44:
+	struct super_block *sb;		/* if !NULL, only write inodes from
+					   this super_block */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1307: FILE: include/linux/writeback.h:44:
+					   this super_block */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1373: FILE: mm/backing-dev.c:204:
+	BUG_ON(IS_ERR(sync_supers_tsk));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1569: FILE: mm/backing-dev.c:401:
+		wb->task = kthread_run(bdi_start_fn, wb, "flush-%s",
+					dev_name(bdi->dev));

WARNING:STORAGE_CLASS: storage class 'static' should be located before type 'void'
#1599: FILE: mm/backing-dev.c:431:
+void static bdi_add_default_flusher_task(struct backing_dev_info *bdi)

WARNING:TYPO_SPELLING: 'simultanous' may be misspelled - perhaps 'simultaneous'?
#1606: FILE: mm/backing-dev.c:438:
+	 * abort if we two or more simultanous calls to
 	                           ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#1607: FILE: mm/backing-dev.c:439:
+	 * bdi_add_default_flusher_task() occured, further additions will block
 	                                  ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1646: FILE: mm/backing-dev.c:486:
+		wb->task = kthread_run(bdi_forker_task, wb, "bdi-%s",
+						dev_name(dev));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1682: FILE: mm/backing-dev.c:524:
+	wait_on_bit(&bdi->state, BDI_pending, bdi_sched_wait,
+			TASK_UNINTERRUPTIBLE);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000077808.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 14 warnings, 11 checks, 1870 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000077808.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
