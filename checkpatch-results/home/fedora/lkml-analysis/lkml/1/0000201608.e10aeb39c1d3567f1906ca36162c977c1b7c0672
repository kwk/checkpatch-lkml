WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#58: FILE: drivers/pci/intel-iommu.c:108:
+};
+#define context_present(c) ((c).lo & 1)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ';' (ctx:VxV)
#65: FILE: drivers/pci/intel-iommu.c:115:
+#define context_set_present(c) do {(c).lo |= 1;} while (0)
                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#65: FILE: drivers/pci/intel-iommu.c:115:
+#define context_set_present(c) do {(c).lo |= 1;} while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#66: FILE: drivers/pci/intel-iommu.c:116:
+#define context_set_fault_enable(c) \
+	do {(c).lo &= (((u64)-1) << 2) | 1;} while (0)

ERROR:SPACING: space required after that ';' (ctx:VxV)
#67: FILE: drivers/pci/intel-iommu.c:117:
+	do {(c).lo &= (((u64)-1) << 2) | 1;} while (0)
 	                                  ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'c' - possible side-effects?
#68: FILE: drivers/pci/intel-iommu.c:118:
+#define context_set_translation_type(c, val) \
+	do { \
+		(c).lo &= (((u64)-1) << 4) | 3; \
+		(c).lo |= ((val) & 3) << 2; \
+	} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#74: FILE: drivers/pci/intel-iommu.c:124:
+#define context_set_address_root(c, val) \
+	do {(c).lo |= (val) & VTD_PAGE_MASK; } while (0)

ERROR:SPACING: space required after that ';' (ctx:VxV)
#76: FILE: drivers/pci/intel-iommu.c:126:
+#define context_set_address_width(c, val) do {(c).hi |= (val) & 7;} while (0)
                                                                  ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#76: FILE: drivers/pci/intel-iommu.c:126:
+#define context_set_address_width(c, val) do {(c).hi |= (val) & 7;} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#77: FILE: drivers/pci/intel-iommu.c:127:
+#define context_set_domain_id(c, val) \
+	do {(c).hi |= ((val) & ((1 << 16) - 1)) << 8;} while (0)

ERROR:SPACING: space required after that ';' (ctx:VxV)
#78: FILE: drivers/pci/intel-iommu.c:128:
+	do {(c).hi |= ((val) & ((1 << 16) - 1)) << 8;} while (0)
 	                                            ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#79: FILE: drivers/pci/intel-iommu.c:129:
+#define context_clear_entry(c) do {(c).lo = 0; (c).hi = 0;} while (0)
                                                          ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'c' - possible side-effects?
#79: FILE: drivers/pci/intel-iommu.c:129:
+#define context_clear_entry(c) do {(c).lo = 0; (c).hi = 0;} while (0)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000201608.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 6 warnings, 3 checks, 88 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000201608.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
