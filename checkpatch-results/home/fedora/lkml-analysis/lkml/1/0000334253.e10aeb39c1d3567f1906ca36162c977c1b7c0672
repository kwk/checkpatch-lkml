WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
Latest BIOS ACPI PNP device resource descriptions may have (especially on the

ERROR:SPACING: space required after that ',' (ctx:VxV)
#104: FILE: include/linux/pnp.h:34:
+#define pnp_port_ptr(dev,bar)	((dev)->res.allocated_ports > (bar) \
                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#111: FILE: include/linux/pnp.h:41:
+	(pnp_port_ptr((dev),(bar)) ? \
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#123: FILE: include/linux/pnp.h:53:
+#define pnp_mem_ptr(dev,bar)	((dev)->res.allocated_mems > (bar) \
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#129: FILE: include/linux/pnp.h:59:
+	(pnp_mem_ptr((dev),(bar)) ? \
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#141: FILE: include/linux/pnp.h:71:
+#define pnp_irq_ptr(dev,bar)	((dev)->res.allocated_irqs > (bar) \
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#146: FILE: include/linux/pnp.h:76:
+	(pnp_irq_ptr((dev),(bar)) ? \
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#152: FILE: include/linux/pnp.h:81:
+#define pnp_dma_ptr(dev,bar)	((dev)->res.allocated_dmas > (bar) \
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#157: FILE: include/linux/pnp.h:86:
+	(pnp_dma_ptr((dev),(bar)) ? \
 	                  ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#214: FILE: include/linux/pnp.h:493:
+#define pnp_dbg(format, arg...) printk(KERN_INFO "pnp: " format "\n" , ## arg)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#214: FILE: include/linux/pnp.h:493:
+#define pnp_dbg(format, arg...) printk(KERN_INFO "pnp: " format "\n" , ## arg)
                                                                      ^

WARNING:SPLIT_STRING: quoted string split across lines
#269: FILE: drivers/pnp/interface.c:388:
+					pnp_err("Cannot manually set port"
+						"resource %d for device %s",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:MISSING_SPACE: break quoted strings at a space character
#269: FILE: drivers/pnp/interface.c:388:
+					pnp_err("Cannot manually set port"
+						"resource %d for device %s",

WARNING:SPLIT_STRING: quoted string split across lines
#291: FILE: drivers/pnp/interface.c:417:
+					pnp_err("Cannot manually set mem "
+						"resource %d for device %s",

WARNING:SPLIT_STRING: quoted string split across lines
#313: FILE: drivers/pnp/interface.c:446:
+					pnp_err("Cannot manually set irq "
+						"resource %d for device %s",

WARNING:SPLIT_STRING: quoted string split across lines
#334: FILE: drivers/pnp/interface.c:465:
+					pnp_err("Cannot manually set dma "
+						"resource %d for device %s",

WARNING:TYPO_SPELLING: 'alloced' may be misspelled - perhaps 'allocated'?
#357: FILE: drivers/pnp/manager.c:18:
+/* Defines the amount of struct resources that will get (re-)alloced
                                                              ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#371: FILE: drivers/pnp/manager.c:32:
+	int i;
+	pnp_dbg("Resource table dump:");

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'Allocted' may be misspelled - perhaps 'Allocated'?
#372: FILE: drivers/pnp/manager.c:33:
+	pnp_dbg("Allocted: ports: %d [%p - %p]",
 	         ^^^^^^^^

WARNING:TYPO_SPELLING: 'Allocted' may be misspelled - perhaps 'Allocated'?
#382: FILE: drivers/pnp/manager.c:43:
+	pnp_dbg("Allocted: mems: %d [%p - %p]",
 	         ^^^^^^^^

WARNING:TYPO_SPELLING: 'Allocted' may be misspelled - perhaps 'Allocated'?
#392: FILE: drivers/pnp/manager.c:53:
+	pnp_dbg("Allocted: irqs: %d [%p - %p]",
 	         ^^^^^^^^

WARNING:TYPO_SPELLING: 'Allocted' may be misspelled - perhaps 'Allocated'?
#401: FILE: drivers/pnp/manager.c:62:
+	pnp_dbg("Allocted: dmas: %d [%p - %p]",
 	         ^^^^^^^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#420: FILE: drivers/pnp/manager.c:81:
+}
+static void pnp_init_mem(struct resource *res)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#427: FILE: drivers/pnp/manager.c:88:
+}
+static void pnp_init_irq(struct resource *res)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#434: FILE: drivers/pnp/manager.c:95:
+}
+static void pnp_init_dma(struct resource *res)

WARNING:KREALLOC_ARG_REUSE: Reusing the krealloc arg is almost always a bug
#464: FILE: drivers/pnp/manager.c:125:
+	res->port_resource = krealloc(res->port_resource,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#465: FILE: drivers/pnp/manager.c:126:
+	res->port_resource = krealloc(res->port_resource,
+	      (sizeof(struct resource) * res->allocated_ports)

WARNING:SPLIT_STRING: quoted string split across lines
#477: FILE: drivers/pnp/manager.c:138:
+	pnp_dbg("Port allocate: %p - %p; Allocated: %lu bytes, size of"
+		"struct: %lu - allocated ports: %d",

WARNING:MISSING_SPACE: break quoted strings at a space character
#477: FILE: drivers/pnp/manager.c:138:
+	pnp_dbg("Port allocate: %p - %p; Allocated: %lu bytes, size of"
+		"struct: %lu - allocated ports: %d",

CHECK:SPACING: No space is necessary after a cast
#484: FILE: drivers/pnp/manager.c:145:
+		(unsigned long) sizeof(struct resource),

WARNING:KREALLOC_ARG_REUSE: Reusing the krealloc arg is almost always a bug
#498: FILE: drivers/pnp/manager.c:159:
+	res->mem_resource = krealloc(res->mem_resource,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#499: FILE: drivers/pnp/manager.c:160:
+	res->mem_resource = krealloc(res->mem_resource,
+	     (sizeof(struct resource) * res->allocated_mems)

WARNING:SPLIT_STRING: quoted string split across lines
#512: FILE: drivers/pnp/manager.c:173:
+	pnp_dbg("Mem allocate: %p - %p; Allocated: %lu bytes, size of"
+		"struct: %lu - allocated mems: %d",

WARNING:MISSING_SPACE: break quoted strings at a space character
#512: FILE: drivers/pnp/manager.c:173:
+	pnp_dbg("Mem allocate: %p - %p; Allocated: %lu bytes, size of"
+		"struct: %lu - allocated mems: %d",

CHECK:SPACING: No space is necessary after a cast
#519: FILE: drivers/pnp/manager.c:180:
+		(unsigned long) sizeof(struct resource),

WARNING:KREALLOC_ARG_REUSE: Reusing the krealloc arg is almost always a bug
#534: FILE: drivers/pnp/manager.c:195:
+	res->irq_resource = krealloc(res->irq_resource,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#535: FILE: drivers/pnp/manager.c:196:
+	res->irq_resource = krealloc(res->irq_resource,
+	     (sizeof(struct resource) * res->allocated_irqs)

WARNING:SPLIT_STRING: quoted string split across lines
#547: FILE: drivers/pnp/manager.c:208:
+	pnp_dbg("Irq allocate: %p - %p; Allocated: %lu bytes, size of"
+		"struct: %lu - allocated irqs: %d",

WARNING:MISSING_SPACE: break quoted strings at a space character
#547: FILE: drivers/pnp/manager.c:208:
+	pnp_dbg("Irq allocate: %p - %p; Allocated: %lu bytes, size of"
+		"struct: %lu - allocated irqs: %d",

CHECK:SPACING: No space is necessary after a cast
#554: FILE: drivers/pnp/manager.c:215:
+		(unsigned long) sizeof(struct resource),

WARNING:KREALLOC_ARG_REUSE: Reusing the krealloc arg is almost always a bug
#568: FILE: drivers/pnp/manager.c:229:
+	res->dma_resource = krealloc(res->dma_resource,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#569: FILE: drivers/pnp/manager.c:230:
+	res->dma_resource = krealloc(res->dma_resource,
+	     (sizeof(struct resource) * res->allocated_dmas)

WARNING:SPLIT_STRING: quoted string split across lines
#581: FILE: drivers/pnp/manager.c:242:
+	pnp_dbg("Dma allocate: %p - %p; Allocated: %lu bytes, size of"
+		"struct: %lu - allocated dmas: %d",

WARNING:MISSING_SPACE: break quoted strings at a space character
#581: FILE: drivers/pnp/manager.c:242:
+	pnp_dbg("Dma allocate: %p - %p; Allocated: %lu bytes, size of"
+		"struct: %lu - allocated dmas: %d",

CHECK:SPACING: No space is necessary after a cast
#588: FILE: drivers/pnp/manager.c:249:
+		(unsigned long) sizeof(struct resource),

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#596: FILE: drivers/pnp/manager.c:257:
+		" - alloc: %d", type, val, __FUNCTION__, x)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#598: FILE: drivers/pnp/manager.c:259:
+
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#616: FILE: drivers/pnp/manager.c:277:
+	pnp_dbg("%s", __FUNCTION__);

CHECK:BRACES: braces {} should be used on all arms of this statement
#618: FILE: drivers/pnp/manager.c:279:
+	if (res->flags & IORESOURCE_IO) {
[...]
+	} else 	if (res->flags & IORESOURCE_MEM) {
[...]
+	} else if (res->flags & IORESOURCE_IRQ) {
[...]
+	} else	if (res->flags & IORESOURCE_DMA) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#636: FILE: drivers/pnp/manager.c:297:
+^I} else ^Iif (res->flags & IORESOURCE_MEM) {$

CHECK:BRACES: Unbalanced braces around else statement
#684: FILE: drivers/pnp/manager.c:345:
+	} else

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#690: FILE: drivers/pnp/manager.c:351:
+#define pnp_print_assign_err(type, val)					\
+	pnp_dbg("%s resource %d not allocated, cannot assign value",	\
+		type, val);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#694: FILE: drivers/pnp/manager.c:355:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#816: FILE: drivers/pnp/manager.c:633:
+	/* We must never end up here, this functions are poisson for dynamic
+	   allocation via pointer array.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#867: FILE: drivers/pnp/manager.c:729:
+	/* We must never end up here, these functions are poisson for dynamic
+	   allocation via pointer array.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#869: FILE: drivers/pnp/manager.c:731:
+	BUG_ON(1);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#914: FILE: drivers/pnp/pnpacpi/rsparser.c:106:
+		/* <trenn> Check: Do we need to allocate and assign
+		   this resource at all? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#914: FILE: drivers/pnp/pnpacpi/rsparser.c:106:
+		   this resource at all? */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#917: FILE: drivers/pnp/pnpacpi/rsparser.c:109:
+			pnp_err("Bug in %s", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#932: FILE: drivers/pnp/pnpacpi/rsparser.c:121:
+		pnp_err("Bug in %s", __FUNCTION__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#966: FILE: drivers/pnp/pnpacpi/rsparser.c:178:
+		/* <trenn> Check: Do we need to allocate and assign
+		   this resource at all? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#966: FILE: drivers/pnp/pnpacpi/rsparser.c:178:
+		   this resource at all? */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#969: FILE: drivers/pnp/pnpacpi/rsparser.c:181:
+			pnp_err("Bug in %s", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#975: FILE: drivers/pnp/pnpacpi/rsparser.c:187:
+		pnp_err("Bug in %s", __FUNCTION__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1008: FILE: drivers/pnp/pnpacpi/rsparser.c:201:
+		/* <trenn> Check: Do we need to allocate and assign
+		   this resource at all? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1008: FILE: drivers/pnp/pnpacpi/rsparser.c:201:
+		   this resource at all? */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1011: FILE: drivers/pnp/pnpacpi/rsparser.c:204:
+			pnp_err("Bug in %s", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1017: FILE: drivers/pnp/pnpacpi/rsparser.c:210:
+		pnp_err("Bug in %s", __FUNCTION__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1050: FILE: drivers/pnp/pnpacpi/rsparser.c:223:
+		/* <trenn> Check: Do we need to allocate and assign
+		   this resource at all? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1050: FILE: drivers/pnp/pnpacpi/rsparser.c:223:
+		   this resource at all? */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1053: FILE: drivers/pnp/pnpacpi/rsparser.c:226:
+			pnp_err("Bug in %s", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1062: FILE: drivers/pnp/pnpacpi/rsparser.c:235:
+		pnp_err("Bug in %s", __FUNCTION__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1094: FILE: drivers/pnp/pnpbios/rsparser.c:65:
+		/* <trenn> Check: Do we need to allocate and assign
+		   this resource at all? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1094: FILE: drivers/pnp/pnpbios/rsparser.c:65:
+		   this resource at all? */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1097: FILE: drivers/pnp/pnpbios/rsparser.c:68:
+			pnp_err("Bug in %s", __FUNCTION__);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1100: FILE: drivers/pnp/pnpbios/rsparser.c:71:
+	new_res.start = new_res.end = (unsigned long)irq;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1103: FILE: drivers/pnp/pnpbios/rsparser.c:74:
+		pnp_err("Bug in %s", __FUNCTION__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1128: FILE: drivers/pnp/pnpbios/rsparser.c:86:
+		/* <trenn> Check: Do we need to allocate and assign
+		   this resource at all? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1128: FILE: drivers/pnp/pnpbios/rsparser.c:86:
+		   this resource at all? */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1131: FILE: drivers/pnp/pnpbios/rsparser.c:89:
+			pnp_err("Bug in %s", __FUNCTION__);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1134: FILE: drivers/pnp/pnpbios/rsparser.c:92:
+	new_res.start = new_res.end = (unsigned long)dma;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1136: FILE: drivers/pnp/pnpbios/rsparser.c:94:
+		pnp_err("Bug in %s", __FUNCTION__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1161: FILE: drivers/pnp/pnpbios/rsparser.c:106:
+		/* <trenn> Check: Do we need to allocate and assign
+		   this resource at all? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1161: FILE: drivers/pnp/pnpbios/rsparser.c:106:
+		   this resource at all? */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1164: FILE: drivers/pnp/pnpbios/rsparser.c:109:
+			pnp_err("Bug in %s", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1170: FILE: drivers/pnp/pnpbios/rsparser.c:115:
+		pnp_err("Bug in %s", __FUNCTION__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1195: FILE: drivers/pnp/pnpbios/rsparser.c:127:
+		/* <trenn> Check: Do we need to allocate and assign
+		   this resource at all? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1195: FILE: drivers/pnp/pnpbios/rsparser.c:127:
+		   this resource at all? */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1198: FILE: drivers/pnp/pnpbios/rsparser.c:130:
+			pnp_err("Bug in %s", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1204: FILE: drivers/pnp/pnpbios/rsparser.c:136:
+		pnp_err("Bug in %s", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1270: FILE: drivers/pnp/isapnp/core.c:963:
+				pnp_err("Bug in %s", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1282: FILE: drivers/pnp/isapnp/core.c:973:
+				pnp_err("Bug in %s", __FUNCTION__);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1293: FILE: drivers/pnp/isapnp/core.c:981:
+			new_res.start = new_res.end = ret;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1296: FILE: drivers/pnp/isapnp/core.c:984:
+				pnp_err("Bug in %s", __FUNCTION__);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1305: FILE: drivers/pnp/isapnp/core.c:991:
+			new_res.start = new_res.end = ret;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1308: FILE: drivers/pnp/isapnp/core.c:994:
+				pnp_err("Bug in %s", __FUNCTION__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1398: FILE: drivers/pnp/support.c:19:
+/* <trenn> This interface is only used by pnpbios and one driver:
+   sound/isa/sscape.c

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000334253.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 69 warnings, 19 checks, 1306 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000334253.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
