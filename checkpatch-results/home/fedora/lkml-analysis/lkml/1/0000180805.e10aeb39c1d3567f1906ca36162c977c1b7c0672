WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#56: FILE: drivers/mmc/host/Kconfig:68:
+config MMC_ESDHC
+	tristate "Freescale Enhanced SD Host Controller Interface support"
+	depends on FSL_SOC
+	help
+	  This selects the Freescale Enhanced SD Host Controller Interface
+	  as found in some Freescale PowerPC microprocessors.
+
+	  If unsure, say N.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#81: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#86: FILE: drivers/mmc/host/esdhc.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:BIT_MACRO: Prefer using the BIT macro
#128: FILE: drivers/mmc/host/esdhc.c:43:
+#define ESDHC_QUIRK_CLOCK_BEFORE_RESET	(1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#129: FILE: drivers/mmc/host/esdhc.c:44:
+#define ESDHC_QUIRK_FORCE_DMA		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#130: FILE: drivers/mmc/host/esdhc.c:45:
+#define ESDHC_QUIRK_NO_CARD_NO_RESET	(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#131: FILE: drivers/mmc/host/esdhc.c:46:
+#define ESDHC_QUIRK_SINGLE_POWER_WRITE	(1 << 3)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#141: FILE: drivers/mmc/host/esdhc.c:56:
+	DBG("Sysaddr: 0x%08x | Blkattr: 0x%08x",
+		fsl_readl(host->ioaddr + ESDHC_DMA_ADDRESS),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#144: FILE: drivers/mmc/host/esdhc.c:59:
+	DBG("Argument: 0x%08x | COMMAND: 0x%08x",
+		fsl_readl(host->ioaddr + ESDHC_ARGUMENT),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#147: FILE: drivers/mmc/host/esdhc.c:62:
+	DBG("Present: 0x%08x | DMA ctl: 0x%08x",
+		fsl_readl(host->ioaddr + ESDHC_PRESENT_STATE),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: drivers/mmc/host/esdhc.c:65:
+	DBG("PROCTL: 0x%08x | SYSCTL: 0x%08x",
+		fsl_readl(host->ioaddr + ESDHC_PROTOCOL_CONTROL),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: drivers/mmc/host/esdhc.c:68:
+	DBG("Int stat: 0x%08x",
+		fsl_readl(host->ioaddr + ESDHC_INT_STATUS));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#155: FILE: drivers/mmc/host/esdhc.c:70:
+	DBG("Intenab: 0x%08x | Sigenab: 0x%08x",
+		fsl_readl(host->ioaddr + ESDHC_INT_ENABLE),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#158: FILE: drivers/mmc/host/esdhc.c:73:
+	DBG("AC12 err: 0x%08x | Version: 0x%08x",
+		fsl_readl(host->ioaddr + ESDHC_ACMD12_ERR),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: drivers/mmc/host/esdhc.c:76:
+	DBG("Caps: 0x%08x | Watermark: 0x%08x",
+		fsl_readl(host->ioaddr + ESDHC_CAPABILITIES),

WARNING:SPLIT_STRING: quoted string split across lines
#193: FILE: drivers/mmc/host/esdhc.c:108:
+			dev_err(host->mmc->parent, "Reset 0x%x never "
+				"completed.\n", (int)mask);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#209: FILE: drivers/mmc/host/esdhc.c:124:
+	setbits32(host->ioaddr + ESDHC_SYSTEM_CONTROL,
+			(ESDHC_CLOCK_INT_EN | ESDHC_CLOCK_INT_STABLE));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#318: FILE: drivers/mmc/host/esdhc.c:233:
+				BUG_ON(blksize != 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#365: FILE: drivers/mmc/host/esdhc.c:280:
+				BUG_ON(blksize != 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#377: FILE: drivers/mmc/host/esdhc.c:292:
+	BUG_ON(!host->data);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#403: FILE: drivers/mmc/host/esdhc.c:318:
+	unsigned blkattr = 0;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#404: FILE: drivers/mmc/host/esdhc.c:319:
+	unsigned target_timeout, current_timeout;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#409: FILE: drivers/mmc/host/esdhc.c:324:
+	if (data == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#413: FILE: drivers/mmc/host/esdhc.c:328:
+	DBG("blksz %04x blks %04x flags %08x\n",
+		data->blksz, data->blocks, data->flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#415: FILE: drivers/mmc/host/esdhc.c:330:
+	DBG("tsac %d ms nsac %d clk\n",
+		data->timeout_ns / 1000000, data->timeout_clks);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#418: FILE: drivers/mmc/host/esdhc.c:333:
+	BUG_ON(data->blksz * data->blocks > 524288);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#419: FILE: drivers/mmc/host/esdhc.c:334:
+	BUG_ON(data->blksz > host->mmc->max_blk_size);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#420: FILE: drivers/mmc/host/esdhc.c:335:
+	BUG_ON(data->blocks > 65535);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#441: FILE: drivers/mmc/host/esdhc.c:356:
+	host->timeout_clk = host->clock/1000;
 	                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#472: FILE: drivers/mmc/host/esdhc.c:387:
+		BUG_ON(sg_count != 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#475: FILE: drivers/mmc/host/esdhc.c:390:
+		fsl_writel(host->ioaddr + ESDHC_DMA_ADDRESS,
+				sg_dma_address(data->sg));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#479: FILE: drivers/mmc/host/esdhc.c:394:
+		clrbits32(host->ioaddr + ESDHC_INT_ENABLE,
+				(ESDHC_INT_DATA_AVAIL | ESDHC_INT_SPACE_AVAIL));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#481: FILE: drivers/mmc/host/esdhc.c:396:
+		clrbits32(host->ioaddr + ESDHC_SIGNAL_ENABLE,
+				(ESDHC_INT_DATA_AVAIL | ESDHC_INT_SPACE_AVAIL));

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#483: FILE: drivers/mmc/host/esdhc.c:398:
+		wml_value = data->blksz/4;
 		                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#507: FILE: drivers/mmc/host/esdhc.c:422:
+		setbits32(host->ioaddr + ESDHC_INT_ENABLE,
+				(ESDHC_INT_DATA_AVAIL | ESDHC_INT_SPACE_AVAIL));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#509: FILE: drivers/mmc/host/esdhc.c:424:
+		setbits32(host->ioaddr + ESDHC_SIGNAL_ENABLE,
+				(ESDHC_INT_DATA_AVAIL | ESDHC_INT_SPACE_AVAIL));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#525: FILE: drivers/mmc/host/esdhc.c:440:
+	if (data == NULL)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd->data != NULL'
#553: FILE: drivers/mmc/host/esdhc.c:468:
+	if ((cmd->data != NULL) || (cmd->flags & MMC_RSP_BUSY))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cmd->data"
#553: FILE: drivers/mmc/host/esdhc.c:468:
+	if ((cmd->data != NULL) || (cmd->flags & MMC_RSP_BUSY))

WARNING:SPLIT_STRING: quoted string split across lines
#566: FILE: drivers/mmc/host/esdhc.c:481:
+			dev_err(host->mmc->parent, "Controller never "
+				"released inhibit bit(s).\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#610: FILE: drivers/mmc/host/esdhc.c:525:
+	fsl_writel(host->ioaddr + ESDHC_COMMAND,
+		 ESDHC_MAKE_CMD(cmd->opcode, flags));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#618: FILE: drivers/mmc/host/esdhc.c:533:
+	BUG_ON(!host->data);

WARNING:SPLIT_STRING: quoted string split across lines
#641: FILE: drivers/mmc/host/esdhc.c:556:
+		dev_err(host->mmc->parent, "Controller signalled completion "
+			"even though there were blocks left.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#647: FILE: drivers/mmc/host/esdhc.c:562:
+		dev_err(host->mmc->parent, "Controller transmitted completion "
+			"even though there were timeout error.\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#674: FILE: drivers/mmc/host/esdhc.c:589:
+	BUG_ON(host->cmd == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!host->cmd"
#674: FILE: drivers/mmc/host/esdhc.c:589:
+	BUG_ON(host->cmd == NULL);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#681: FILE: drivers/mmc/host/esdhc.c:596:
+						ESDHC_RESPONSE + (3-i)*4) << 8;
 						                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#681: FILE: drivers/mmc/host/esdhc.c:596:
+						ESDHC_RESPONSE + (3-i)*4) << 8;
 						                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#724: FILE: drivers/mmc/host/esdhc.c:639:
+			if ((host->max_clk / pre_div) < (clock*16))
 			                                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#756: FILE: drivers/mmc/host/esdhc.c:671:
+		setbits32(host->ioaddr + ESDHC_SYSTEM_CONTROL,
+					ESDHC_CLOCK_DEFAULT);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "host->mrq"
#774: FILE: drivers/mmc/host/esdhc.c:689:
+	WARN_ON(host->mrq != NULL);

WARNING:SPLIT_STRING: quoted string split across lines
#865: FILE: drivers/mmc/host/esdhc.c:780:
+				"Card removed during transfer! "
+				"Resetting the controller.\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mrq->cmd->error != 0'
#902: FILE: drivers/mmc/host/esdhc.c:817:
+	if ((mrq->cmd->error != 0) ||
+		(mrq->data && ((mrq->data->error != 0) ||
+		(mrq->data->stop &&
+			(mrq->data->stop->error != 0))))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mrq->data->error != 0'
#902: FILE: drivers/mmc/host/esdhc.c:817:
+	if ((mrq->cmd->error != 0) ||
+		(mrq->data && ((mrq->data->error != 0) ||
+		(mrq->data->stop &&
+			(mrq->data->stop->error != 0))))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mrq->data->stop->error != 0'
#902: FILE: drivers/mmc/host/esdhc.c:817:
+	if ((mrq->cmd->error != 0) ||
+		(mrq->data && ((mrq->data->error != 0) ||
+		(mrq->data->stop &&
+			(mrq->data->stop->error != 0))))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#903: FILE: drivers/mmc/host/esdhc.c:818:
+	if ((mrq->cmd->error != 0) ||
+		(mrq->data && ((mrq->data->error != 0) ||

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#906: FILE: drivers/mmc/host/esdhc.c:821:
+			(mrq->data->stop->error != 0))))) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#918: FILE: drivers/mmc/host/esdhc.c:833:
+		/* Spec says we should do both at the same time, but Ricoh
+		   controllers do not like that. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#918: FILE: drivers/mmc/host/esdhc.c:833:
+		   controllers do not like that. */

WARNING:SPLIT_STRING: quoted string split across lines
#946: FILE: drivers/mmc/host/esdhc.c:861:
+		dev_err(host->mmc->parent, "Timeout waiting for hardware "
+			"interrupt.\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#968: FILE: drivers/mmc/host/esdhc.c:883:
+	BUG_ON(intmask == 0);

WARNING:SPLIT_STRING: quoted string split across lines
#972: FILE: drivers/mmc/host/esdhc.c:887:
+		dev_err(host->mmc->parent, "Got command interrupt even "
+			"though no command operation was in progress.\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#996: FILE: drivers/mmc/host/esdhc.c:911:
+	BUG_ON(intmask == 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1004: FILE: drivers/mmc/host/esdhc.c:919:
+		if (intmask & ESDHC_INT_DATA_END ||
+				intmask & ESDHC_INT_DMA_END)

WARNING:SPLIT_STRING: quoted string split across lines
#1008: FILE: drivers/mmc/host/esdhc.c:923:
+		dev_err(host->mmc->parent, "Got data interrupt even though "
+			"no data operation was in progress.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1033: FILE: drivers/mmc/host/esdhc.c:948:
+			fsl_writel(host->ioaddr + ESDHC_DMA_ADDRESS,
+				fsl_readl(host->ioaddr + ESDHC_DMA_ADDRESS));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1061: FILE: drivers/mmc/host/esdhc.c:976:
+				fsl_writel(host->ioaddr + ESDHC_INT_ENABLE,
+					ESDHC_INT_INSERT_MASK);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1063: FILE: drivers/mmc/host/esdhc.c:978:
+				fsl_writel(host->ioaddr + ESDHC_SIGNAL_ENABLE,
+					ESDHC_INT_INSERT_MASK);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1071: FILE: drivers/mmc/host/esdhc.c:986:
+				fsl_writel(host->ioaddr + ESDHC_INT_ENABLE,
+					ESDHC_INT_REMOVE_MASK);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1073: FILE: drivers/mmc/host/esdhc.c:988:
+				fsl_writel(host->ioaddr + ESDHC_SIGNAL_ENABLE,
+					ESDHC_INT_REMOVE_MASK);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1084: FILE: drivers/mmc/host/esdhc.c:999:
+		fsl_writel(host->ioaddr + ESDHC_INT_STATUS,
+			status & ESDHC_INT_CMD_MASK);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1090: FILE: drivers/mmc/host/esdhc.c:1005:
+		fsl_writel(host->ioaddr + ESDHC_INT_STATUS,
+			status & ESDHC_INT_DATA_MASK);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1153: FILE: drivers/mmc/host/esdhc.c:1068:
+static int __devinit esdhc_probe(struct of_device *ofdev,

WARNING:SPLIT_STRING: quoted string split across lines
#1204: FILE: drivers/mmc/host/esdhc.c:1119:
+		dev_err(host->mmc->parent, "Unknown controller version "
+			"(%d). You may experience problems.\n", version);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1207: FILE: drivers/mmc/host/esdhc.c:1122:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MINMAX: min() should probably be min_t(int, *clk, 50000000)
#1239: FILE: drivers/mmc/host/esdhc.c:1154:
+	mmc->f_max = min((int)*clk, 50000000);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1247: FILE: drivers/mmc/host/esdhc.c:1162:
+		mmc->ocr_avail |= MMC_VDD_32_33|MMC_VDD_33_34;
 		                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1249: FILE: drivers/mmc/host/esdhc.c:1164:
+		mmc->ocr_avail |= MMC_VDD_29_30|MMC_VDD_30_31;
 		                               ^

WARNING:SPLIT_STRING: quoted string split across lines
#1255: FILE: drivers/mmc/host/esdhc.c:1170:
+		dev_err(host->mmc->parent, "Hardware doesn't report any "
+			"support voltages.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1305: FILE: drivers/mmc/host/esdhc.c:1220:
+	tasklet_init(&host->card_tasklet,
+		esdhc_tasklet_card, (unsigned long)host);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1307: FILE: drivers/mmc/host/esdhc.c:1222:
+	tasklet_init(&host->finish_tasklet,
+		esdhc_tasklet_finish, (unsigned long)host);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1327: FILE: drivers/mmc/host/esdhc.c:1242:
+	dev_info(host->mmc->parent, "probed at 0x%08lx, irq %d, %s\n",
+		host->addr, host->irq,

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1349: FILE: drivers/mmc/host/esdhc.c:1264:
+static int __devexit esdhc_remove(struct of_device *ofdev)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1351: FILE: drivers/mmc/host/esdhc.c:1266:
+{
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1413: FILE: drivers/mmc/host/esdhc.h:1:
+/*

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dma' may be better as '(dma)' to avoid precedence issues
#1445: FILE: drivers/mmc/host/esdhc.h:33:
+#define ESDHC_MAKE_BLKSZ(dma, blksz) (((dma & 0x7) << 12) | (blksz & 0xFFF))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'blksz' may be better as '(blksz)' to avoid precedence issues
#1445: FILE: drivers/mmc/host/esdhc.h:33:
+#define ESDHC_MAKE_BLKSZ(dma, blksz) (((dma & 0x7) << 12) | (blksz & 0xFFF))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'c' may be better as '(c)' to avoid precedence issues
#1471: FILE: drivers/mmc/host/esdhc.h:59:
+#define ESDHC_MAKE_CMD(c, f) (((c & 0xff) << 24) | (f & 0xfb0037))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'f' may be better as '(f)' to avoid precedence issues
#1471: FILE: drivers/mmc/host/esdhc.h:59:
+#define ESDHC_MAKE_CMD(c, f) (((c & 0xff) << 24) | (f & 0xfb0037))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1491: FILE: drivers/mmc/host/esdhc.h:79:
+#define ESDHC_PROTOCOL_CONTROL ^I0x28$

WARNING:TYPO_SPELLING: 'curren' may be misspelled - perhaps 'current'?
#1592: FILE: drivers/mmc/host/esdhc.h:180:
+/* 45-4F reserved for more caps and max curren*/
                                         ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1636: FILE: drivers/mmc/host/esdhc.h:224:
+#define ESDHC_USE_DMA		(1<<0)
                      		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1636: FILE: drivers/mmc/host/esdhc.h:224:
+#define ESDHC_USE_DMA		(1<<0)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000180805.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 34 warnings, 59 checks, 1598 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000180805.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
