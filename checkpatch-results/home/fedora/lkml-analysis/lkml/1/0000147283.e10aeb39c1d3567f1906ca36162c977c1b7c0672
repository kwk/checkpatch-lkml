WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#50: FILE: fs/reiserfs/file.c:137:
+static int reiserfs_sync_file(struct file *filp,
                                            ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:CAMELCASE: Avoid CamelCase: <Sh>
#68: FILE: fs/reiserfs/fix_node.c:784:
+	    *Sh = PATH_H_PBUFFER(tb->tb_path, n_h);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#321: FILE: fs/reiserfs/fix_node.c:1116:
+		if ((n_ret_value = get_far_parent(tb, n_h + 1, &curf,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: No space is necessary after a cast
#476: FILE: fs/reiserfs/stree.c:141:
+	k1_u32 = (__u32 *) key1;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#477: FILE: fs/reiserfs/stree.c:142:
+	k2_u32 = (__u32 *) key2;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#517: FILE: fs/reiserfs/stree.c:191:
+			     int width,	/* Item size in the array.
+					   searched. Lest the reader be

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#523: FILE: fs/reiserfs/stree.c:197:
+					   the item size. */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#687: FILE: fs/reiserfs/stree.c:345:
+	RFALSE(!key || chk_path->path_length < FIRST_PATH_ELEMENT_OFFSET
+	       || chk_path->path_length > MAX_HEIGHT,

WARNING:TYPO_SPELLING: 'delimitiing' may be misspelled - perhaps 'delimiting'?
#704: FILE: fs/reiserfs/stree.c:356:
+		/* key must be less than right delimitiing key */
 		                               ^^^^^^^^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#812: FILE: fs/reiserfs/stree.c:629:
+		if ((bh = last_element->pe_buffer =

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around last_element->pe_position
#877: FILE: fs/reiserfs/stree.c:710:
+				      &(last_element->pe_position));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#948: FILE: fs/reiserfs/stree.c:780:
+			       struct treepath *search_path	/* Filled up by this function.          */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 217 exceeds 100 columns
#1049: FILE: fs/reiserfs/stree.c:954:
+static char prepare_for_delete_or_cut(struct reiserfs_transaction_handle *th, struct inode *inode, struct treepath *path, const struct cpu_key *item_key, int *removed,	/* Number of unformatted nodes which were removed

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 135 exceeds 100 columns
#1052: FILE: fs/reiserfs/stree.c:956:
+				      int *cut_size, unsigned long long n_new_file_length	/* MAX_KEY_OFFSET in case of delete. */

WARNING:TABSTOP: Statements should start on a tabstop
#1108: FILE: fs/reiserfs/stree.c:1016:
+		    if (!delete && (*cut_size) != 0 &&

WARNING:TABSTOP: Statements should start on a tabstop
#1120: FILE: fs/reiserfs/stree.c:1032:
+		    if (item_moved (&s_ih, path))  {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1120: FILE: fs/reiserfs/stree.c:1032:
+		    if (item_moved (&s_ih, path))  {

WARNING:TABSTOP: Statements should start on a tabstop
#1147: FILE: fs/reiserfs/stree.c:1055:
+	    if (*cut_size == 0) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1312: FILE: fs/reiserfs/stree.c:1459:
+	/* return indirect_to_direct(inode, path, item_key,
+				  n_new_file_size, mode); */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1312: FILE: fs/reiserfs/stree.c:1459:
+				  n_new_file_size, mode); */

WARNING:LONG_LINE: line length of 140 exceeds 100 columns
#1472: FILE: fs/reiserfs/stree.c:1917:
+int reiserfs_paste_into_item(struct reiserfs_transaction_handle *th, struct treepath *search_path,	/* Path to the pasted item.	  */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around key->on_disk_key
#1485: FILE: fs/reiserfs/stree.c:1935:
+		       key2type(&(key->on_disk_key)));

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1538: FILE: fs/reiserfs/stree.c:1981:
+		do_balance(&s_paste_balance, NULL /*ih */ , body, M_PASTE);
 		                                          ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around key->on_disk_key
#1547: FILE: fs/reiserfs/stree.c:1992:
+		       key2type(&(key->on_disk_key)));

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1652: FILE: fs/reiserfs/tail_conversion.c:178:
+							 * pointer to be cut. */

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ih' - possible side-effects?
#1726: FILE: include/linux/reiserfs_fs.h:697:
+#define I_K_KEY_IN_ITEM(ih, key, n_blocksize) \
+    (!COMP_SHORT_KEYS(ih, key) && \
+	  I_OFF_BYTE_IN_ITEM(ih, k_offset(key), n_blocksize))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'key' - possible side-effects?
#1726: FILE: include/linux/reiserfs_fs.h:697:
+#define I_K_KEY_IN_ITEM(ih, key, n_blocksize) \
+    (!COMP_SHORT_KEYS(ih, key) && \
+	  I_OFF_BYTE_IN_ITEM(ih, k_offset(key), n_blocksize))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1727: FILE: include/linux/reiserfs_fs.h:698:
+    (!COMP_SHORT_KEYS(ih, key) && \$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'path' - possible side-effects?
#1748: FILE: include/linux/reiserfs_fs.h:1207:
+#define PATH_PLAST_BUFFER(path) (PATH_OFFSET_PBUFFER((path), (path)->path_length))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'path' - possible side-effects?
#1756: FILE: include/linux/reiserfs_fs.h:1214:
+#define PATH_LAST_POSITION(path) (PATH_OFFSET_POSITION((path), (path)->path_length))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'path' - possible side-effects?
#1759: FILE: include/linux/reiserfs_fs.h:1216:
+#define PATH_PITEM_HEAD(path)    B_N_PITEM_HEAD(PATH_PLAST_BUFFER(path), PATH_LAST_POSITION(path))

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#1764: FILE: include/linux/reiserfs_fs.h:1220:
+#define PATH_H_PBUFFER(path, h) PATH_OFFSET_PBUFFER (path, path->path_length - (h))	/* tb->S[h] */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1764: FILE: include/linux/reiserfs_fs.h:1220:
+#define PATH_H_PBUFFER(path, h) PATH_OFFSET_PBUFFER (path, path->path_length - (h))	/* tb->S[h] */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1764: FILE: include/linux/reiserfs_fs.h:1220:
+#define PATH_H_PBUFFER(path, h) PATH_OFFSET_PBUFFER (path, path->path_length - (h))	/* tb->S[h] */

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'path' - possible side-effects?
#1764: FILE: include/linux/reiserfs_fs.h:1220:
+#define PATH_H_PBUFFER(path, h) PATH_OFFSET_PBUFFER (path, path->path_length - (h))	/* tb->S[h] */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1789: FILE: include/linux/reiserfs_fs.h:1796:
+extern void copy_item_head(struct item_head *to,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000147283.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 18 warnings, 14 checks, 1694 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000147283.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
