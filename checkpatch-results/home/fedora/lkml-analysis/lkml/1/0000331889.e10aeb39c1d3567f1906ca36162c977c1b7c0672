CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#102: FILE: include/linux/device.h:75:
+extern int __must_check bus_register(struct bus_type *bus);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#103: FILE: include/linux/device.h:76:
+extern void bus_unregister(struct bus_type *bus);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#106: FILE: include/linux/device.h:78:
+extern int __must_check bus_rescan_devices(struct bus_type *bus);

WARNING:SPACING: Unnecessary space before function pointer arguments
#137: FILE: include/linux/device.h:125:
+	int (*probe) (struct device *dev);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#138: FILE: include/linux/device.h:126:
+	int (*remove) (struct device *dev);

WARNING:SPACING: Unnecessary space before function pointer arguments
#139: FILE: include/linux/device.h:127:
+	void (*shutdown) (struct device *dev);

WARNING:SPACING: Unnecessary space before function pointer arguments
#140: FILE: include/linux/device.h:128:
+	int (*suspend) (struct device *dev, pm_message_t state);

WARNING:SPACING: Unnecessary space before function pointer arguments
#141: FILE: include/linux/device.h:129:
+	int (*resume) (struct device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#150: FILE: include/linux/device.h:136:
+extern int __must_check driver_register(struct device_driver *drv);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#151: FILE: include/linux/device.h:137:
+extern void driver_unregister(struct device_driver *drv);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#156: FILE: include/linux/device.h:139:
+extern struct device_driver *get_driver(struct device_driver *drv);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#157: FILE: include/linux/device.h:140:
+extern void put_driver(struct device_driver *drv);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#158: FILE: include/linux/device.h:141:
+extern struct device_driver *driver_find(const char *name,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#183: FILE: include/linux/device.h:158:
+extern int __must_check driver_create_file(struct device_driver *driver,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#185: FILE: include/linux/device.h:160:
+extern void driver_remove_file(struct device_driver *driver,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#198: FILE: include/linux/device.h:167:
+extern int __must_check driver_for_each_device(struct device_driver *drv,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#249: FILE: include/linux/device.h:204:
+extern int __must_check class_register(struct class *class);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#250: FILE: include/linux/device.h:205:
+extern void class_unregister(struct class *class);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#274: FILE: include/linux/device.h:223:
+extern int __must_check class_create_file(struct class *class,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#276: FILE: include/linux/device.h:225:
+extern void class_remove_file(struct class *class,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct class_device *' should also have an identifier name
#284: FILE: include/linux/device.h:230:
+	ssize_t (*show)(struct class_device *, char *buf);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct class_device *' should also have an identifier name
#285: FILE: include/linux/device.h:231:
+	ssize_t (*store)(struct class_device *, const char *buf, size_t count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#340: FILE: include/linux/device.h:298:
+extern struct class_device *class_device_get(struct class_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct class_device *' should also have an identifier name
#340: FILE: include/linux/device.h:298:
+extern struct class_device *class_device_get(struct class_device *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#344: FILE: include/linux/device.h:301:
+extern void class_device_remove_file(struct class_device *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct class_device *' should also have an identifier name
#344: FILE: include/linux/device.h:301:
+extern void class_device_remove_file(struct class_device *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct class_device_attribute *' should also have an identifier name
#344: FILE: include/linux/device.h:301:
+extern void class_device_remove_file(struct class_device *,

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(5, 6) over __attribute__((format(printf, 5, 6)))
#353: FILE: include/linux/device.h:328:
+					__attribute__((format(printf, 5, 6)));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#381: FILE: include/linux/device.h:363:
+extern void device_remove_file(struct device *dev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#398: FILE: include/linux/device.h:381:
+extern void *__devres_alloc(dr_release_t release, size_t size, gfp_t gfp,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#399: FILE: include/linux/device.h:382:
+extern void *__devres_alloc(dr_release_t release, size_t size, gfp_t gfp,
 			     const char *name);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#404: FILE: include/linux/device.h:386:
+extern void *devres_alloc(dr_release_t release, size_t size, gfp_t gfp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#411: FILE: include/linux/device.h:390:
+extern void *devres_find(struct device *dev, dr_release_t release,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#415: FILE: include/linux/device.h:392:
+extern void *devres_get(struct device *dev, void *new_res,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#417: FILE: include/linux/device.h:394:
+extern void *devres_remove(struct device *dev, dr_release_t release,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#483: FILE: include/linux/device.h:503:
+extern int __must_check device_register(struct device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#484: FILE: include/linux/device.h:504:
+extern void device_unregister(struct device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#485: FILE: include/linux/device.h:505:
+extern void device_initialize(struct device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#486: FILE: include/linux/device.h:506:
+extern int __must_check device_add(struct device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#487: FILE: include/linux/device.h:507:
+extern void device_del(struct device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#488: FILE: include/linux/device.h:508:
+extern int device_for_each_child(struct device *dev, void *data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#489: FILE: include/linux/device.h:509:
+extern int device_for_each_child(struct device *dev, void *data,
+		     int (*fn)(struct device *dev, void *data));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#490: FILE: include/linux/device.h:510:
+extern struct device *device_find_child(struct device *dev, void *data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#491: FILE: include/linux/device.h:511:
+extern struct device *device_find_child(struct device *dev, void *data,
+				int (*match)(struct device *dev, void *data));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#501: FILE: include/linux/device.h:520:
+extern void device_release_driver(struct device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#502: FILE: include/linux/device.h:521:
+extern int  __must_check device_attach(struct device *dev);

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(4, 5) over __attribute__((format(printf, 4, 5)))
#511: FILE: include/linux/device.h:530:
+				    __attribute__((format(printf, 4, 5)));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#532: FILE: include/linux/device.h:556:
+extern struct device *get_device(struct device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#533: FILE: include/linux/device.h:557:
+extern void put_device(struct device *dev);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#542: FILE: include/linux/device.h:569:
+	printk(level "%s %s: " format , dev_driver_string(dev) , \

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#542: FILE: include/linux/device.h:569:
+	printk(level "%s %s: " format , dev_driver_string(dev) , \
 	                              ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#542: FILE: include/linux/device.h:569:
+	printk(level "%s %s: " format , dev_driver_string(dev) , \
 	                                                       ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#543: FILE: include/linux/device.h:570:
+	       (dev)->bus_id , ## arg)
 	                     ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000331889.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 13 warnings, 37 checks, 507 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000331889.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
