CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#66: FILE: drivers/char/tpm/tpm.c:375:
+ssize_t tpm_transmit(struct tpm_chip *chip, char *buf,
 			    size_t bufsiz)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#89: FILE: drivers/char/tpm/tpm.c:726:
+static struct tpm_chip* tpm_chip_lookup(int chip_num, int chip_typ)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#91: FILE: drivers/char/tpm/tpm.c:728:
+        struct tpm_chip *pos;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: drivers/char/tpm/tpm.c:728:
+        struct tpm_chip *pos;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#93: FILE: drivers/char/tpm/tpm.c:730:
+        spin_lock(&driver_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: drivers/char/tpm/tpm.c:730:
+        spin_lock(&driver_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: drivers/char/tpm/tpm.c:731:
+        list_for_each_entry(pos, &tpm_chip_list, list)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: drivers/char/tpm/tpm.c:731:
+        list_for_each_entry(pos, &tpm_chip_list, list)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#95: FILE: drivers/char/tpm/tpm.c:732:
+                if ((chip_num == TPM_ANY_NUM ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: drivers/char/tpm/tpm.c:732:
+                if ((chip_num == TPM_ANY_NUM ||$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'chip_typ == TPM_ANY_TYPE'
#95: FILE: drivers/char/tpm/tpm.c:732:
+                if ((chip_num == TPM_ANY_NUM ||
+                        pos->dev_num == chip_num ) &&
+                        (chip_typ == TPM_ANY_TYPE)){

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:CODE_INDENT: code indent should use tabs where possible
#96: FILE: drivers/char/tpm/tpm.c:733:
+                        pos->dev_num == chip_num ) &&$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#96: FILE: drivers/char/tpm/tpm.c:733:
+                if ((chip_num == TPM_ANY_NUM ||
+                        pos->dev_num == chip_num ) &&

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: drivers/char/tpm/tpm.c:733:
+                        pos->dev_num == chip_num ) &&$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#96: FILE: drivers/char/tpm/tpm.c:733:
+                        pos->dev_num == chip_num ) &&

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: drivers/char/tpm/tpm.c:734:
+                        (chip_typ == TPM_ANY_TYPE)){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: drivers/char/tpm/tpm.c:734:
+                        (chip_typ == TPM_ANY_TYPE)){$

ERROR:SPACING: space required before the open brace '{'
#97: FILE: drivers/char/tpm/tpm.c:734:
+                        (chip_typ == TPM_ANY_TYPE)){

ERROR:CODE_INDENT: code indent should use tabs where possible
#98: FILE: drivers/char/tpm/tpm.c:735:
+                        spin_unlock(&driver_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: drivers/char/tpm/tpm.c:735:
+                        spin_unlock(&driver_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: drivers/char/tpm/tpm.c:736:
+                        return pos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: drivers/char/tpm/tpm.c:736:
+                        return pos;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: drivers/char/tpm/tpm.c:737:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: drivers/char/tpm/tpm.c:737:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: drivers/char/tpm/tpm.c:739:
+        spin_unlock(&driver_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: drivers/char/tpm/tpm.c:739:
+        spin_unlock(&driver_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: drivers/char/tpm/tpm.c:740:
+        return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: drivers/char/tpm/tpm.c:740:
+        return NULL;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#112: FILE: drivers/char/tpm/tpm.c:749:
+int tpm_pcr_read( u32 chip_id, int pcr_idx, u8* res_buf, int res_buf_size )

ERROR:SPACING: space prohibited after that open parenthesis '('
#112: FILE: drivers/char/tpm/tpm.c:749:
+int tpm_pcr_read( u32 chip_id, int pcr_idx, u8* res_buf, int res_buf_size )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#112: FILE: drivers/char/tpm/tpm.c:749:
+int tpm_pcr_read( u32 chip_id, int pcr_idx, u8* res_buf, int res_buf_size )

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: drivers/char/tpm/tpm.c:751:
+        u8 data[READ_PCR_RESULT_SIZE];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: drivers/char/tpm/tpm.c:751:
+        u8 data[READ_PCR_RESULT_SIZE];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: drivers/char/tpm/tpm.c:752:
+        int rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: drivers/char/tpm/tpm.c:752:
+        int rc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: drivers/char/tpm/tpm.c:753:
+        __be32 index;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: drivers/char/tpm/tpm.c:753:
+        __be32 index;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: drivers/char/tpm/tpm.c:754:
+        int chip_num = chip_id & TPM_CHIP_NUM_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: drivers/char/tpm/tpm.c:754:
+        int chip_num = chip_id & TPM_CHIP_NUM_MASK;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: drivers/char/tpm/tpm.c:755:
+        struct tpm_chip* chip;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: drivers/char/tpm/tpm.c:755:
+        struct tpm_chip* chip;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#118: FILE: drivers/char/tpm/tpm.c:755:
+        struct tpm_chip* chip;

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: drivers/char/tpm/tpm.c:757:
+        if ( res_buf && res_buf_size < TPM_DIGEST_SIZE )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: drivers/char/tpm/tpm.c:757:
+        if ( res_buf && res_buf_size < TPM_DIGEST_SIZE )$

ERROR:SPACING: space prohibited after that open parenthesis '('
#120: FILE: drivers/char/tpm/tpm.c:757:
+        if ( res_buf && res_buf_size < TPM_DIGEST_SIZE )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#120: FILE: drivers/char/tpm/tpm.c:757:
+        if ( res_buf && res_buf_size < TPM_DIGEST_SIZE )

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: drivers/char/tpm/tpm.c:758:
+                return -ENOSPC;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: drivers/char/tpm/tpm.c:758:
+                return -ENOSPC;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: drivers/char/tpm/tpm.c:760:
+        if ( (chip = tpm_chip_lookup( chip_num,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: drivers/char/tpm/tpm.c:760:
+        if ( (chip = tpm_chip_lookup( chip_num,$

ERROR:SPACING: space prohibited after that open parenthesis '('
#123: FILE: drivers/char/tpm/tpm.c:760:
+        if ( (chip = tpm_chip_lookup( chip_num,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#123: FILE: drivers/char/tpm/tpm.c:760:
+        if ( (chip = tpm_chip_lookup( chip_num,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: drivers/char/tpm/tpm.c:761:
+                                chip_id >> TPM_CHIP_TYPE_SHIFT ) ) == NULL )$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#124: FILE: drivers/char/tpm/tpm.c:761:
+        if ( (chip = tpm_chip_lookup( chip_num,
+                                chip_id >> TPM_CHIP_TYPE_SHIFT ) ) == NULL )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: drivers/char/tpm/tpm.c:761:
+                                chip_id >> TPM_CHIP_TYPE_SHIFT ) ) == NULL )$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#124: FILE: drivers/char/tpm/tpm.c:761:
+                                chip_id >> TPM_CHIP_TYPE_SHIFT ) ) == NULL )

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: drivers/char/tpm/tpm.c:762:
+                return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: drivers/char/tpm/tpm.c:762:
+                return -ENODEV;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: drivers/char/tpm/tpm.c:764:
+        memcpy(data, pcrread, sizeof(pcrread));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: drivers/char/tpm/tpm.c:764:
+        memcpy(data, pcrread, sizeof(pcrread));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: drivers/char/tpm/tpm.c:765:
+        index = cpu_to_be32(pcr_idx);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: drivers/char/tpm/tpm.c:765:
+        index = cpu_to_be32(pcr_idx);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#129: FILE: drivers/char/tpm/tpm.c:766:
+        memcpy(data + 10, &index, 4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: drivers/char/tpm/tpm.c:766:
+        memcpy(data + 10, &index, 4);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: drivers/char/tpm/tpm.c:767:
+        if ((rc = tpm_transmit(chip, data, sizeof(data))) > 0 )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: drivers/char/tpm/tpm.c:767:
+        if ((rc = tpm_transmit(chip, data, sizeof(data))) > 0 )$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#130: FILE: drivers/char/tpm/tpm.c:767:
+        if ((rc = tpm_transmit(chip, data, sizeof(data))) > 0 )

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#130: FILE: drivers/char/tpm/tpm.c:767:
+        if ((rc = tpm_transmit(chip, data, sizeof(data))) > 0 )

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: drivers/char/tpm/tpm.c:768:
+                rc = be32_to_cpu(*((u32*)(data+6)));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: drivers/char/tpm/tpm.c:768:
+                rc = be32_to_cpu(*((u32*)(data+6)));$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#131: FILE: drivers/char/tpm/tpm.c:768:
+                rc = be32_to_cpu(*((u32*)(data+6)));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#131: FILE: drivers/char/tpm/tpm.c:768:
+                rc = be32_to_cpu(*((u32*)(data+6)));
                                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: drivers/char/tpm/tpm.c:770:
+        if ( rc == 0 && res_buf )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: drivers/char/tpm/tpm.c:770:
+        if ( rc == 0 && res_buf )$

ERROR:SPACING: space prohibited after that open parenthesis '('
#133: FILE: drivers/char/tpm/tpm.c:770:
+        if ( rc == 0 && res_buf )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#133: FILE: drivers/char/tpm/tpm.c:770:
+        if ( rc == 0 && res_buf )

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: drivers/char/tpm/tpm.c:771:
+                memcpy(res_buf, data+10, TPM_DIGEST_SIZE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: drivers/char/tpm/tpm.c:771:
+                memcpy(res_buf, data+10, TPM_DIGEST_SIZE);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#134: FILE: drivers/char/tpm/tpm.c:771:
+                memcpy(res_buf, data+10, TPM_DIGEST_SIZE);
                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: drivers/char/tpm/tpm.c:773:
+        return rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: drivers/char/tpm/tpm.c:773:
+        return rc;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#138: FILE: drivers/char/tpm/tpm.c:775:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: drivers/char/tpm/tpm.c:780:
+        0, 193,                 /* TPM_TAG_RQU_COMMAND */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: drivers/char/tpm/tpm.c:780:
+        0, 193,                 /* TPM_TAG_RQU_COMMAND */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: drivers/char/tpm/tpm.c:781:
+        0, 0, 0, 34,            /* length */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: drivers/char/tpm/tpm.c:781:
+        0, 0, 0, 34,            /* length */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: drivers/char/tpm/tpm.c:782:
+        0, 0, 0, 20,            /* TPM_ORD_Extend */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: drivers/char/tpm/tpm.c:782:
+        0, 0, 0, 20,            /* TPM_ORD_Extend */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: drivers/char/tpm/tpm.c:783:
+        0, 0, 0, 0              /* PCR index */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: drivers/char/tpm/tpm.c:783:
+        0, 0, 0, 0              /* PCR index */$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#154: FILE: drivers/char/tpm/tpm.c:791:
+int tpm_pcr_extend(u32 chip_id, int pcr_idx, const u8* hash)

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: drivers/char/tpm/tpm.c:793:
+        u8 data[EXTEND_PCR_SIZE];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: drivers/char/tpm/tpm.c:793:
+        u8 data[EXTEND_PCR_SIZE];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: drivers/char/tpm/tpm.c:794:
+        int rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: drivers/char/tpm/tpm.c:794:
+        int rc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: drivers/char/tpm/tpm.c:795:
+        __be32 index;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: drivers/char/tpm/tpm.c:795:
+        __be32 index;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: drivers/char/tpm/tpm.c:796:
+        int chip_num = chip_id & TPM_CHIP_NUM_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: drivers/char/tpm/tpm.c:796:
+        int chip_num = chip_id & TPM_CHIP_NUM_MASK;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: drivers/char/tpm/tpm.c:797:
+        struct tpm_chip* chip;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: drivers/char/tpm/tpm.c:797:
+        struct tpm_chip* chip;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#160: FILE: drivers/char/tpm/tpm.c:797:
+        struct tpm_chip* chip;

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: drivers/char/tpm/tpm.c:799:
+        if ( (chip = tpm_chip_lookup( chip_num,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: drivers/char/tpm/tpm.c:799:
+        if ( (chip = tpm_chip_lookup( chip_num,$

ERROR:SPACING: space prohibited after that open parenthesis '('
#162: FILE: drivers/char/tpm/tpm.c:799:
+        if ( (chip = tpm_chip_lookup( chip_num,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#162: FILE: drivers/char/tpm/tpm.c:799:
+        if ( (chip = tpm_chip_lookup( chip_num,

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: drivers/char/tpm/tpm.c:800:
+                        chip_id >> TPM_CHIP_TYPE_SHIFT )) == NULL )$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#163: FILE: drivers/char/tpm/tpm.c:800:
+        if ( (chip = tpm_chip_lookup( chip_num,
+                        chip_id >> TPM_CHIP_TYPE_SHIFT )) == NULL )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: drivers/char/tpm/tpm.c:800:
+                        chip_id >> TPM_CHIP_TYPE_SHIFT )) == NULL )$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#163: FILE: drivers/char/tpm/tpm.c:800:
+                        chip_id >> TPM_CHIP_TYPE_SHIFT )) == NULL )

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: drivers/char/tpm/tpm.c:801:
+                return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: drivers/char/tpm/tpm.c:801:
+                return -ENODEV;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: drivers/char/tpm/tpm.c:803:
+        memcpy(data, pcrextend, sizeof(pcrextend));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: drivers/char/tpm/tpm.c:803:
+        memcpy(data, pcrextend, sizeof(pcrextend));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: drivers/char/tpm/tpm.c:804:
+        index = cpu_to_be32(pcr_idx);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: drivers/char/tpm/tpm.c:804:
+        index = cpu_to_be32(pcr_idx);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: drivers/char/tpm/tpm.c:805:
+        memcpy(data + 10, &index, 4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: drivers/char/tpm/tpm.c:805:
+        memcpy(data + 10, &index, 4);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: drivers/char/tpm/tpm.c:806:
+        memcpy( data + 14, hash, TPM_DIGEST_SIZE );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: drivers/char/tpm/tpm.c:806:
+        memcpy( data + 14, hash, TPM_DIGEST_SIZE );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#169: FILE: drivers/char/tpm/tpm.c:806:
+        memcpy( data + 14, hash, TPM_DIGEST_SIZE );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#169: FILE: drivers/char/tpm/tpm.c:806:
+        memcpy( data + 14, hash, TPM_DIGEST_SIZE );

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: drivers/char/tpm/tpm.c:807:
+        if ((rc = tpm_transmit(chip, data, sizeof(data))) > 0 )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: drivers/char/tpm/tpm.c:807:
+        if ((rc = tpm_transmit(chip, data, sizeof(data))) > 0 )$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#170: FILE: drivers/char/tpm/tpm.c:807:
+        if ((rc = tpm_transmit(chip, data, sizeof(data))) > 0 )

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#170: FILE: drivers/char/tpm/tpm.c:807:
+        if ((rc = tpm_transmit(chip, data, sizeof(data))) > 0 )

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: drivers/char/tpm/tpm.c:808:
+                rc = be32_to_cpu(*((u32*)(data+6)));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: drivers/char/tpm/tpm.c:808:
+                rc = be32_to_cpu(*((u32*)(data+6)));$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#171: FILE: drivers/char/tpm/tpm.c:808:
+                rc = be32_to_cpu(*((u32*)(data+6)));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#171: FILE: drivers/char/tpm/tpm.c:808:
+                rc = be32_to_cpu(*((u32*)(data+6)));
                                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: drivers/char/tpm/tpm.c:809:
+        return rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: drivers/char/tpm/tpm.c:809:
+        return rc;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#218: FILE: include/linux/tpm.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#260: FILE: include/linux/tpm.h:43:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#262: FILE: include/linux/tpm.h:45:
+extern int tpm_pcr_read(u32 chip_id, int pcr_idx, u8* res_buf, int res_buf_size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#262: FILE: include/linux/tpm.h:45:
+extern int tpm_pcr_read(u32 chip_id, int pcr_idx, u8* res_buf, int res_buf_size);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#263: FILE: include/linux/tpm.h:46:
+extern int tpm_pcr_extend(u32 chip_id, int pcr_idx, const u8* hash);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#263: FILE: include/linux/tpm.h:46:
+extern int tpm_pcr_extend(u32 chip_id, int pcr_idx, const u8* hash);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#265: FILE: include/linux/tpm.h:48:
+static inline int tpm_pcr_read(u32 chip_id, int pcr_idx, u8* res_buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#266: FILE: include/linux/tpm.h:49:
+static inline int tpm_pcr_read(u32 chip_id, int pcr_idx, u8* res_buf,
+				int res_buf_size)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#271: FILE: include/linux/tpm.h:54:
+static inline int tpm_pcr_extend(u32 chip_id, int pcr_idx, const u8* hash)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000458690.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 79 errors, 49 warnings, 13 checks, 228 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000458690.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
