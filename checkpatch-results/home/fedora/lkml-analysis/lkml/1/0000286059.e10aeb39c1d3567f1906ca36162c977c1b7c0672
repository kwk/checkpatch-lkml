WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#61: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#605: FILE: drivers/of/of_device.c:1:
+#include <linux/string.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#691: FILE: drivers/of/of_device.c:87:
+		strlcpy(dev->dev.bus_id, bus_id, BUS_ID_SIZE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#700: FILE: drivers/of/of_device.c:96:
+ssize_t of_device_get_modalias(struct of_device *ofdev,
+				char *str, ssize_t len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#708: FILE: drivers/of/of_device.c:104:
+	csize = snprintf(str, len, "of:N%sT%s",
+				ofdev->node->name, ofdev->node->type);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#716: FILE: drivers/of/of_device.c:112:
+	for (i = (cplen-1); i >= 0 && !compat[i]; i--)
 	               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#735: FILE: drivers/of/of_device.c:131:
+	memcpy(&str[csize+1], compat, cplen);
 	                 ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#738: FILE: drivers/of/of_device.c:134:
+		char c = str[i];
+		if (c == '\0')

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#767: FILE: drivers/of/of_device.c:163:
+	 * up using a number of environment variables instead. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#774: FILE: drivers/of/of_device.c:170:
+		sl = strlen (compat) + 1;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#786: FILE: drivers/of/of_device.c:182:
+	sl = of_device_get_modalias(ofdev, &env->buf[env->buflen-1],
 	                                                        ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#801: FILE: drivers/of/of_platform.c:1:
+/*

WARNING:INCLUDE_LINUX: Use #include <linux/topology.h> instead of <asm/topology.h>
#827: FILE: drivers/of/of_platform.c:27:
+#include <asm/topology.h>

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#829: FILE: drivers/of/of_platform.c:29:
+#include <asm/atomic.h>

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#860: FILE: drivers/of/of_platform.c:60:
+       .uevent^I= of_device_uevent,$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#871: FILE: drivers/of/of_platform.c:71:
+struct of_device* of_platform_device_create(struct device_node *np,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#898: FILE: drivers/of/of_platform.c:98:
+
+

WARNING:TYPO_SPELLING: 'instanciate' may be misspelled - perhaps 'instantiate'?
#902: FILE: drivers/of/of_platform.c:102:
+ * children. Optionally recursively instanciate matching busses.
                                     ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'instanciate' may be misspelled - perhaps 'instantiate'?
#903: FILE: drivers/of/of_platform.c:103:
+ * @bus: device node of the bus to instanciate
                                    ^^^^^^^^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#918: FILE: drivers/of/of_platform.c:118:
+		if (dev == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line (or did you mean 'else if'?)
#925: FILE: drivers/of/of_platform.c:125:
+		} if (rc) {

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:TYPO_SPELLING: 'instanciated' may be misspelled - perhaps 'instantiated'?
#939: FILE: drivers/of/of_platform.c:139:
+ * Note that children of the provided root are not instanciated as devices
                                                    ^^^^^^^^^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!matches"
#951: FILE: drivers/of/of_platform.c:151:
+	if (matches == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!root"
#955: FILE: drivers/of/of_platform.c:155:
+	if (root == NULL)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'of_platform_bus_probe', this function's name, in a string
#960: FILE: drivers/of/of_platform.c:160:
+	pr_debug("of_platform_bus_probe()\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#969: FILE: drivers/of/of_platform.c:169:
+		if (dev == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#983: FILE: drivers/of/of_platform.c:183:
+		if (dev == NULL)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1018: FILE: drivers/of/of_platform.c:218:
+	phandle *ph = data;
+	return to_of_device(dev)->node->linux_phandle == *ph;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1033: FILE: drivers/of/of_platform.c:233:
+
+

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1042: FILE: drivers/of/of_platform.c:242:
+static int __devinit of_pci_phb_probe(struct of_device *dev,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ppc_md.pci_setup_phb"
#1048: FILE: drivers/of/of_platform.c:248:
+	if (ppc_md.pci_setup_phb == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1051: FILE: drivers/of/of_platform.c:251:
+	printk(KERN_INFO "Setting up PCI bus %s\n", dev->node->full_name);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!phb->bus"
#1081: FILE: drivers/of/of_platform.c:281:
+	if (phb->bus == NULL)

WARNING:TYPO_SPELLING: 'wether' may be misspelled - perhaps 'weather'?
#1085: FILE: drivers/of/of_platform.c:285:
+	 * wether we are doing probe-only or not, like assigning unassigned
 	   ^^^^^^

WARNING:CONST_STRUCT: struct of_device_id should normally be const
#1101: FILE: drivers/of/of_platform.c:301:
+static struct of_device_id of_pci_phb_ids[] = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000286059.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 19 warnings, 14 checks, 530 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000286059.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
