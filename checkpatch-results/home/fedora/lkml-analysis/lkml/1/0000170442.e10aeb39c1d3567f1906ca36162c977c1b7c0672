WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#107: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#112: FILE: drivers/edac/ppc4xx_edac.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'DED' may be misspelled - perhaps 'DEAD'?
#150: FILE: drivers/edac/ppc4xx_edac.c:39:
+ *       - 4-bit SEC/DED
                      ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'DED' may be misspelled - perhaps 'DEAD'?
#164: FILE: drivers/edac/ppc4xx_edac.c:53:
+ *       - 8-bit SEC/DED
                      ^^^

WARNING:TYPO_SPELLING: 'DED' may be misspelled - perhaps 'DEAD'?
#177: FILE: drivers/edac/ppc4xx_edac.c:66:
+ *       - 8-bit SEC/DED
                      ^^^

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#210: FILE: drivers/edac/ppc4xx_edac.c:99:
+ * Regardless of whether the error is a CE or a UE, we report the
                                                 ^^

ERROR:DATE_TIME: Use of the '__DATE__' macro makes the build non-deterministic
#227: FILE: drivers/edac/ppc4xx_edac.c:116:
+#define PPC4XX_EDAC_MODULE_REVISION	"v1.0.0 " __DATE__

It is generally desirable that building the same source code with
the same set of tools is reproducible, i.e. the output is always
exactly the same.

The kernel does *not* use the ``__DATE__`` and ``__TIME__`` macros,
and enables warnings if they are used as they can lead to
non-deterministic builds.

See: https://www.kernel.org/doc/html/latest/kbuild/reproducible-builds.html#timestamps

WARNING:TYPO_SPELLING: 'acccessed' may be misspelled - perhaps 'accessed'?
#256: FILE: drivers/edac/ppc4xx_edac.c:145:
+ * indirectly acccessed and have a base and length defined by the
               ^^^^^^^^^

WARNING:TYPO_SPELLING: 'ded' may be misspelled - perhaps 'dead'?
#280: FILE: drivers/edac/ppc4xx_edac.c:169:
+		int ded;	/* Double-bit detectable error IRQ assigned */
 		    ^^^

WARNING:CONST_STRUCT: struct of_device_id should normally be const
#308: FILE: drivers/edac/ppc4xx_edac.c:197:
+static struct of_device_id ppc4xx_edac_match[] = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:UNDOCUMENTED_DT_STRING: DT compatible string "ibm,sdram-4xx-ddr2" appears un-documented -- check /home/fedora/lkml-analysis/linux/Documentation/devicetree/bindings/
#310: FILE: drivers/edac/ppc4xx_edac.c:199:
+		.compatible	= "ibm,sdram-4xx-ddr2"

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#329: FILE: drivers/edac/ppc4xx_edac.c:218:
+static const unsigned ppc4xx_edac_nr_csrows = 2;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#330: FILE: drivers/edac/ppc4xx_edac.c:219:
+static const unsigned ppc4xx_edac_nr_chans = 1;

WARNING:TYPO_SPELLING: 'interpretted' may be misspelled - perhaps 'interpreted'?
#411: FILE: drivers/edac/ppc4xx_edac.c:300:
+ * ppc4xx_edac_generate_bank_message - generate interpretted bank status message
                                                 ^^^^^^^^^^^^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 28)
#446: FILE: drivers/edac/ppc4xx_edac.c:335:
+		if (ppc4xx_edac_check_bank_error(status, row)) {
+			    n = snprintf(buffer, size,

WARNING:TABSTOP: Statements should start on a tabstop
#451: FILE: drivers/edac/ppc4xx_edac.c:340:
+		    if (n < 0 || n >= size)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (20, 28)
#451: FILE: drivers/edac/ppc4xx_edac.c:340:
+		    if (n < 0 || n >= size)
+			    goto fail;

WARNING:TABSTOP: Statements should start on a tabstop
#452: FILE: drivers/edac/ppc4xx_edac.c:341:
+			    goto fail;

WARNING:TYPO_SPELLING: 'interpretted' may be misspelled - perhaps 'interpreted'?
#473: FILE: drivers/edac/ppc4xx_edac.c:362:
+ * ppc4xx_edac_generate_checkbit_message - generate interpretted checkbit message
                                                     ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'interpretted' may be misspelled - perhaps 'interpreted'?
#531: FILE: drivers/edac/ppc4xx_edac.c:420:
+ * ppc4xx_edac_generate_lane_message - generate interpretted byte lane message
                                                 ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'interpretted' may be misspelled - perhaps 'interpreted'?
#596: FILE: drivers/edac/ppc4xx_edac.c:485:
+ * ppc4xx_edac_generate_ecc_message - generate interpretted ECC status message
                                                ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'interpretted' may be misspelled - perhaps 'interpreted'?
#652: FILE: drivers/edac/ppc4xx_edac.c:541:
+ * ppc4xx_edac_generate_plb_message - generate interpretted PLB status message
                                                ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'interpretted' may be misspelled - perhaps 'interpreted'?
#697: FILE: drivers/edac/ppc4xx_edac.c:586:
+ * ppc4xx_edac_generate_message - generate interpretted status message
                                            ^^^^^^^^^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buffer"
#717: FILE: drivers/edac/ppc4xx_edac.c:606:
+	if (buffer == NULL || size == 0)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'interpretted' may be misspelled - perhaps 'interpreted'?
#740: FILE: drivers/edac/ppc4xx_edac.c:629:
+ * interpretted specified ECC status.
    ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#846: FILE: drivers/edac/ppc4xx_edac.c:735:
+ * ppc4xx_edac_handle_ue - handle controller uncorrectable ECC error (UE)
                                                                       ^^

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#880: FILE: drivers/edac/ppc4xx_edac.c:769:
+ * both the EDAC polling thread and this driver's CE and UE interrupt
                                                          ^^

WARNING:TYPO_SPELLING: 'DED' may be misspelled - perhaps 'DEAD'?
#908: FILE: drivers/edac/ppc4xx_edac.c:797:
+ * ppc4xx_edac_isr - SEC (CE) and DED (UE) interrupt service routine
                                   ^^^

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#908: FILE: drivers/edac/ppc4xx_edac.c:797:
+ * ppc4xx_edac_isr - SEC (CE) and DED (UE) interrupt service routine
                                        ^^

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#914: FILE: drivers/edac/ppc4xx_edac.c:803:
+ * (CE) and uncorrectable (UE) ECC errors for the ibm,sdram-4xx-ddr2
                            ^^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#947: FILE: drivers/edac/ppc4xx_edac.c:836:
+static enum dev_type __devinit

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#971: FILE: drivers/edac/ppc4xx_edac.c:860:
+static enum mem_type __devinit

WARNING:TYPO_SPELLING: 'intialize' may be misspelled - perhaps 'initialize'?
#987: FILE: drivers/edac/ppc4xx_edac.c:876:
+ * ppc4xx_edac_init_csrows - intialize driver instance rows
                              ^^^^^^^^^

WARNING:TYPO_SPELLING: 'intializes' may be misspelled - perhaps 'initializes'?
#995: FILE: drivers/edac/ppc4xx_edac.c:884:
+ * This routine intializes the virtual "chip select rows" associated
                 ^^^^^^^^^^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1002: FILE: drivers/edac/ppc4xx_edac.c:891:
+static int __devinit

WARNING:SPLIT_STRING: quoted string split across lines
#1068: FILE: drivers/edac/ppc4xx_edac.c:957:
+					      "Unrecognized memory bank %d "
+					      "size 0x%08x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'intialize' may be misspelled - perhaps 'initialize'?
#1106: FILE: drivers/edac/ppc4xx_edac.c:995:
+ * ppc4xx_edac_mc_init - intialize driver instance
                          ^^^^^^^^^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1126: FILE: drivers/edac/ppc4xx_edac.c:1015:
+static int __devinit

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!match"
#1138: FILE: drivers/edac/ppc4xx_edac.c:1027:
+	if (match == NULL)

WARNING:TYPO_SPELLING: 'ded' may be misspelled - perhaps 'dead'?
#1151: FILE: drivers/edac/ppc4xx_edac.c:1040:
+	pdata->irqs.ded		= NO_IRQ;
 	            ^^^

WARNING:TYPO_SPELLING: 'capabilites' may be misspelled - perhaps 'capabilities'?
#1166: FILE: drivers/edac/ppc4xx_edac.c:1055:
+	 * Update the actual capabilites based on the MCOPT1[MCHK]
 	                     ^^^^^^^^^^^

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#1187: FILE: drivers/edac/ppc4xx_edac.c:1076:
+	mci->ctl_name		= match->compatible,
+	mci->dev_name		= np->full_name;

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#1214: FILE: drivers/edac/ppc4xx_edac.c:1103:
+ * This routine parses the correctable (CE) and uncorrectable error (UE)
                                                                      ^^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1221: FILE: drivers/edac/ppc4xx_edac.c:1110:
+static int __devinit

WARNING:TYPO_SPELLING: 'DED' may be misspelled - perhaps 'DEAD'?
#1247: FILE: drivers/edac/ppc4xx_edac.c:1136:
+				      "Unable to request irq %d for ECC DED",
 				                                        ^^^

WARNING:TYPO_SPELLING: 'ded' may be misspelled - perhaps 'dead'?
#1270: FILE: drivers/edac/ppc4xx_edac.c:1159:
+	pdata->irqs.ded = ded_irq;
 	            ^^^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1299: FILE: drivers/edac/ppc4xx_edac.c:1188:
+static int __devinit

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!np"
#1304: FILE: drivers/edac/ppc4xx_edac.c:1193:
+	if (np == NULL || dcr_host == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dcr_host"
#1304: FILE: drivers/edac/ppc4xx_edac.c:1193:
+	if (np == NULL || dcr_host == NULL)

WARNING:TABSTOP: Statements should start on a tabstop
#1331: FILE: drivers/edac/ppc4xx_edac.c:1220:
+		    return -ENODEV;

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1351: FILE: drivers/edac/ppc4xx_edac.c:1240:
+static int __devinit

WARNING:SPLIT_STRING: quoted string split across lines
#1394: FILE: drivers/edac/ppc4xx_edac.c:1283:
+		ppc4xx_edac_printk(KERN_INFO, "%s: No ECC memory detected or "
+				   "ECC is disabled.\n", np->full_name);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mci"
#1410: FILE: drivers/edac/ppc4xx_edac.c:1299:
+	if (mci == NULL) {

WARNING:SPLIT_STRING: quoted string split across lines
#1412: FILE: drivers/edac/ppc4xx_edac.c:1301:
+		ppc4xx_edac_printk(KERN_ERR, "%s: "
+				   "Failed to allocate EDAC MC instance!\n",

WARNING:TYPO_SPELLING: 'ded' may be misspelled - perhaps 'dead'?
#1480: FILE: drivers/edac/ppc4xx_edac.c:1369:
+		free_irq(pdata->irqs.ded, mci);
 		                     ^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1559: FILE: drivers/edac/ppc4xx_edac.c:1448:
+MODULE_PARM_DESC(edac_op_state, "EDAC Error Reporting State: "
+		 "0=" EDAC_OPSTATE_POLL_STR ", 2=" EDAC_OPSTATE_INT_STR);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1566: FILE: drivers/edac/ppc4xx_edac.h:1:
+/*

WARNING:TYPO_SPELLING: 'statuss' may be misspelled - perhaps 'status'?
#1598: FILE: drivers/edac/ppc4xx_edac.h:33:
+#define SDRAM_BESRT			0x01	/* Error statuss (test/set)  */
                    			    	         ^^^^^^^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'id' may be better as '(id)' to avoid precedence issues
#1656: FILE: drivers/edac/ppc4xx_edac.h:91:
+#define	SDRAM_WMIRQ_ENCODE(id)		PPC_REG_VAL((id % \
+						     SDRAM_PLB_M0ID_COUNT), 1)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000170442.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 52 warnings, 6 checks, 1638 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000170442.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
