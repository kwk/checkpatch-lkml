WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#57: FILE: include/asm-i386/vmi_time.h:41:
+	u64 (*get_cycle_counter)(int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#70: FILE: include/asm-i386/vmi_time.h:57:
+extern void apic_vmi_timer_interrupt(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#94: FILE: arch/i386/kernel/vmi.c:60:
+	void (*cpuid)(void /* non-c */);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#98: FILE: arch/i386/kernel/vmi.c:64:
+	void (*allocate_page)(u32, u32, u32, u32, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#98: FILE: arch/i386/kernel/vmi.c:64:
+	void (*allocate_page)(u32, u32, u32, u32, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#98: FILE: arch/i386/kernel/vmi.c:64:
+	void (*allocate_page)(u32, u32, u32, u32, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#98: FILE: arch/i386/kernel/vmi.c:64:
+	void (*allocate_page)(u32, u32, u32, u32, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#98: FILE: arch/i386/kernel/vmi.c:64:
+	void (*allocate_page)(u32, u32, u32, u32, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#99: FILE: arch/i386/kernel/vmi.c:65:
+	void (*release_page)(u32, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#99: FILE: arch/i386/kernel/vmi.c:65:
+	void (*release_page)(u32, u32);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#100: FILE: arch/i386/kernel/vmi.c:66:
+	void (*set_pte)(pte_t, pte_t *, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pte_t' should also have an identifier name
#100: FILE: arch/i386/kernel/vmi.c:66:
+	void (*set_pte)(pte_t, pte_t *, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pte_t *' should also have an identifier name
#100: FILE: arch/i386/kernel/vmi.c:66:
+	void (*set_pte)(pte_t, pte_t *, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#100: FILE: arch/i386/kernel/vmi.c:66:
+	void (*set_pte)(pte_t, pte_t *, unsigned);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#101: FILE: arch/i386/kernel/vmi.c:67:
+	void (*update_pte)(pte_t *, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pte_t *' should also have an identifier name
#101: FILE: arch/i386/kernel/vmi.c:67:
+	void (*update_pte)(pte_t *, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#101: FILE: arch/i386/kernel/vmi.c:67:
+	void (*update_pte)(pte_t *, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#102: FILE: arch/i386/kernel/vmi.c:68:
+	void (*set_linear_mapping)(int, u32, u32, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#102: FILE: arch/i386/kernel/vmi.c:68:
+	void (*set_linear_mapping)(int, u32, u32, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#102: FILE: arch/i386/kernel/vmi.c:68:
+	void (*set_linear_mapping)(int, u32, u32, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#102: FILE: arch/i386/kernel/vmi.c:68:
+	void (*set_linear_mapping)(int, u32, u32, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#103: FILE: arch/i386/kernel/vmi.c:69:
+	void (*flush_tlb)(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#104: FILE: arch/i386/kernel/vmi.c:70:
+	void (*set_initial_ap_state)(int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#104: FILE: arch/i386/kernel/vmi.c:70:
+	void (*set_initial_ap_state)(int, int);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#151: FILE: arch/i386/kernel/vmi.c:213:
+static void vmi_set_ldt(const void *addr, unsigned entries)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#382: FILE: arch/i386/kernel/vmitime.c:104:
+#if 0

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000473367.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 25 warnings, 1 checks, 400 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000473367.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
