WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#71: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#76: FILE: drivers/leds/leds-pca955x.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#77: FILE: drivers/leds/leds-pca955x.c:2:
+ * drivers/leds/leds-pca955x.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#132: FILE: drivers/leds/leds-pca955x.c:57:
+#define DBG(x...) printk(KERN_INFO "leds-pca955x: " x)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#138: FILE: drivers/leds/leds-pca955x.c:63:
+#define NUM_INPUT_REGS(bits)	((bits+7)/8)
                             	      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#138: FILE: drivers/leds/leds-pca955x.c:63:
+#define NUM_INPUT_REGS(bits)	((bits+7)/8)
                             	         ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'bits' may be better as '(bits)' to avoid precedence issues
#138: FILE: drivers/leds/leds-pca955x.c:63:
+#define NUM_INPUT_REGS(bits)	((bits+7)/8)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#140: FILE: drivers/leds/leds-pca955x.c:65:
+#define NUM_LED_REGS(bits)	((bits+3)/4)
                           	      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#140: FILE: drivers/leds/leds-pca955x.c:65:
+#define NUM_LED_REGS(bits)	((bits+3)/4)
                           	         ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'bits' may be better as '(bits)' to avoid precedence issues
#140: FILE: drivers/leds/leds-pca955x.c:65:
+#define NUM_LED_REGS(bits)	((bits+3)/4)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#149: FILE: drivers/leds/leds-pca955x.c:74:
+#define LED_SET(reg, led, state) \
+	((reg & (~(0x3 << (led << 1)))) | ((state & 0x0F) << (led << 1)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'led' - possible side-effects?
#149: FILE: drivers/leds/leds-pca955x.c:74:
+#define LED_SET(reg, led, state) \
+	((reg & (~(0x3 << (led << 1)))) | ((state & 0x0F) << (led << 1)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'led' may be better as '(led)' to avoid precedence issues
#149: FILE: drivers/leds/leds-pca955x.c:74:
+#define LED_SET(reg, led, state) \
+	((reg & (~(0x3 << (led << 1)))) | ((state & 0x0F) << (led << 1)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'state' may be better as '(state)' to avoid precedence issues
#149: FILE: drivers/leds/leds-pca955x.c:74:
+#define LED_SET(reg, led, state) \
+	((reg & (~(0x3 << (led << 1)))) | ((state & 0x0F) << (led << 1)))

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#200: FILE: drivers/leds/leds-pca955x.c:125:
+	spinlock_t		lock;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#216: FILE: drivers/leds/leds-pca955x.c:141:
+	i2c_smbus_write_byte_data(client,
+		NUM_INPUT_REGS(pca955x->chipdef->bits) + 2*n,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#216: FILE: drivers/leds/leds-pca955x.c:141:
+		NUM_INPUT_REGS(pca955x->chipdef->bits) + 2*n,
 		                                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#232: FILE: drivers/leds/leds-pca955x.c:157:
+	i2c_smbus_write_byte_data(client,
+		NUM_INPUT_REGS(pca955x->chipdef->bits) + 1 + 2*n,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#232: FILE: drivers/leds/leds-pca955x.c:157:
+		NUM_INPUT_REGS(pca955x->chipdef->bits) + 1 + 2*n,
 		                                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: drivers/leds/leds-pca955x.c:170:
+	i2c_smbus_write_byte_data(client,
+		NUM_INPUT_REGS(pca955x->chipdef->bits) + 4 + n,

CHECK:SPACING: No space is necessary after a cast
#257: FILE: drivers/leds/leds-pca955x.c:182:
+	return (u8) i2c_smbus_read_byte_data(client,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#258: FILE: drivers/leds/leds-pca955x.c:183:
+	return (u8) i2c_smbus_read_byte_data(client,
+		NUM_INPUT_REGS(pca955x->chipdef->bits) + 4 + n);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#292: FILE: drivers/leds/leds-pca955x.c:217:
+		pca955x_write_pwm(pca955x->client, 1, 255-pca955x->brightness);
 		                                         ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pca955x->lock
#305: FILE: drivers/leds/leds-pca955x.c:230:
+	spin_lock(&(pca955x->lock));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pca955x->work
#312: FILE: drivers/leds/leds-pca955x.c:237:
+	schedule_work(&(pca955x->work));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pca955x->lock
#314: FILE: drivers/leds/leds-pca955x.c:239:
+	spin_unlock(&(pca955x->lock));

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#317: FILE: drivers/leds/leds-pca955x.c:242:
+static int __devinit pca955x_probe(struct i2c_client *client,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#318: FILE: drivers/leds/leds-pca955x.c:243:
+static int __devinit pca955x_probe(struct i2c_client *client,
+					const struct i2c_device_id *id)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#330: FILE: drivers/leds/leds-pca955x.c:255:
+	DBG("probe() enter: chip 0x%02x, with type='%s'\n", client->addr,
+			id->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#336: FILE: drivers/leds/leds-pca955x.c:261:
+		dev_err(&client->dev, "invalid slave address %02x\n",
+				client->addr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#340: FILE: drivers/leds/leds-pca955x.c:265:
+	printk(KERN_INFO "leds-pca955x: Using %s %d-bit LED driver at "

WARNING:SPLIT_STRING: quoted string split across lines
#341: FILE: drivers/leds/leds-pca955x.c:266:
+	printk(KERN_INFO "leds-pca955x: Using %s %d-bit LED driver at "
+			"slave address 0x%02x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#351: FILE: drivers/leds/leds-pca955x.c:276:
+			dev_err(&client->dev, "board info claims %d LEDs"
+					" on a %d-bit chip\n",

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*pca955x)...) over kzalloc(sizeof(struct pca955x_led)...)
#358: FILE: drivers/leds/leds-pca955x.c:283:
+		pca955x = kzalloc(sizeof(struct pca955x_led), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#371: FILE: drivers/leds/leds-pca955x.c:296:
+				snprintf(pca955x->name, 32, "pca955x:%s",
+							pdata->leds[i].name);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pca955x->work
#391: FILE: drivers/leds/leds-pca955x.c:316:
+		INIT_WORK(&(pca955x->work), pca955x_led_work);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pca955x->led_cdev
#393: FILE: drivers/leds/leds-pca955x.c:318:
+		led_classdev_register(&client->dev, &(pca955x->led_cdev));

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#401: FILE: drivers/leds/leds-pca955x.c:326:
+	pca955x_write_pwm(client, 0, 255-LED_HALF);
 	                                ^

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#417: FILE: drivers/leds/leds-pca955x.c:342:
+static int __devexit pca955x_remove(struct i2c_client *client)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pca955x->led_cdev
#424: FILE: drivers/leds/leds-pca955x.c:349:
+		led_classdev_unregister(&(pca955x->led_cdev));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pca955x->work
#425: FILE: drivers/leds/leds-pca955x.c:350:
+		cancel_work_sync(&(pca955x->work));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000280725.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 32 checks, 425 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000280725.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
