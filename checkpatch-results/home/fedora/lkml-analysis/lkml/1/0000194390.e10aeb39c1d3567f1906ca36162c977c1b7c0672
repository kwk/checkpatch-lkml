WARNING:TYPO_SPELLING: 'infomation' may be misspelled - perhaps 'information'?
#15: 
Subject: [PATCH 30/44] KVM: ia64: Add some debug points to provide crash infomation
                                                                         ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#70: FILE: arch/ia64/kvm/mmio.c:83:
+				panic_vm(v, "Can't LHF write with size %ld!\n",
+						length);

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#121: FILE: arch/ia64/kvm/mmio.c:317:
+		panic_vm(vcpu, "Unsupported MMIO access instruction! \

WARNING:SPLIT_STRING: quoted string split across lines
#146: FILE: arch/ia64/kvm/process.c:531:
+		panic_vm(vcpu, "Interruption with vector :0x%lx occurs "
+						"with psr.ic = 0\n", vector);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#186: FILE: arch/ia64/kvm/vcpu.c:1654:
+		panic_vm(vcpu, "Only support guests with vpsr.pk =0 \

WARNING:LINE_SPACING: Missing a blank line after declarations
#211: FILE: arch/ia64/kvm/vcpu.c:2162:
+	struct kvm_vcpu *vcpu = current_vcpu;
+	if (vcpu != NULL)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "vcpu"
#211: FILE: arch/ia64/kvm/vcpu.c:2162:
+	if (vcpu != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#212: FILE: arch/ia64/kvm/vcpu.c:2163:
+		printk("vcpu 0x%p vcpu %d\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#215: FILE: arch/ia64/kvm/vcpu.c:2166:
+	printk("psr : %016lx ifs : %016lx ip  : [<%016lx>]\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#218: FILE: arch/ia64/kvm/vcpu.c:2169:
+	printk("unat: %016lx pfs : %016lx rsc : %016lx\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#220: FILE: arch/ia64/kvm/vcpu.c:2171:
+	printk("rnat: %016lx bspstore: %016lx pr  : %016lx\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#222: FILE: arch/ia64/kvm/vcpu.c:2173:
+	printk("ldrs: %016lx ccv : %016lx fpsr: %016lx\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#224: FILE: arch/ia64/kvm/vcpu.c:2175:
+	printk("csd : %016lx ssd : %016lx\n", regs->ar_csd, regs->ar_ssd);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#225: FILE: arch/ia64/kvm/vcpu.c:2176:
+	printk("b0  : %016lx b6  : %016lx b7  : %016lx\n", regs->b0,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#226: FILE: arch/ia64/kvm/vcpu.c:2177:
+	printk("b0  : %016lx b6  : %016lx b7  : %016lx\n", regs->b0,
+							regs->b6, regs->b7);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#227: FILE: arch/ia64/kvm/vcpu.c:2178:
+	printk("f6  : %05lx%016lx f7  : %05lx%016lx\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#230: FILE: arch/ia64/kvm/vcpu.c:2181:
+	printk("f8  : %05lx%016lx f9  : %05lx%016lx\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#233: FILE: arch/ia64/kvm/vcpu.c:2184:
+	printk("f10 : %05lx%016lx f11 : %05lx%016lx\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#237: FILE: arch/ia64/kvm/vcpu.c:2188:
+	printk("r1  : %016lx r2  : %016lx r3  : %016lx\n", regs->r1,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#238: FILE: arch/ia64/kvm/vcpu.c:2189:
+	printk("r1  : %016lx r2  : %016lx r3  : %016lx\n", regs->r1,
+							regs->r2, regs->r3);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#239: FILE: arch/ia64/kvm/vcpu.c:2190:
+	printk("r8  : %016lx r9  : %016lx r10 : %016lx\n", regs->r8,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#240: FILE: arch/ia64/kvm/vcpu.c:2191:
+	printk("r8  : %016lx r9  : %016lx r10 : %016lx\n", regs->r8,
+							regs->r9, regs->r10);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#241: FILE: arch/ia64/kvm/vcpu.c:2192:
+	printk("r11 : %016lx r12 : %016lx r13 : %016lx\n", regs->r11,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#242: FILE: arch/ia64/kvm/vcpu.c:2193:
+	printk("r11 : %016lx r12 : %016lx r13 : %016lx\n", regs->r11,
+							regs->r12, regs->r13);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#243: FILE: arch/ia64/kvm/vcpu.c:2194:
+	printk("r14 : %016lx r15 : %016lx r16 : %016lx\n", regs->r14,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#244: FILE: arch/ia64/kvm/vcpu.c:2195:
+	printk("r14 : %016lx r15 : %016lx r16 : %016lx\n", regs->r14,
+							regs->r15, regs->r16);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#245: FILE: arch/ia64/kvm/vcpu.c:2196:
+	printk("r17 : %016lx r18 : %016lx r19 : %016lx\n", regs->r17,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: arch/ia64/kvm/vcpu.c:2197:
+	printk("r17 : %016lx r18 : %016lx r19 : %016lx\n", regs->r17,
+							regs->r18, regs->r19);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#247: FILE: arch/ia64/kvm/vcpu.c:2198:
+	printk("r20 : %016lx r21 : %016lx r22 : %016lx\n", regs->r20,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#248: FILE: arch/ia64/kvm/vcpu.c:2199:
+	printk("r20 : %016lx r21 : %016lx r22 : %016lx\n", regs->r20,
+							regs->r21, regs->r22);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#249: FILE: arch/ia64/kvm/vcpu.c:2200:
+	printk("r23 : %016lx r24 : %016lx r25 : %016lx\n", regs->r23,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#250: FILE: arch/ia64/kvm/vcpu.c:2201:
+	printk("r23 : %016lx r24 : %016lx r25 : %016lx\n", regs->r23,
+							regs->r24, regs->r25);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#251: FILE: arch/ia64/kvm/vcpu.c:2202:
+	printk("r26 : %016lx r27 : %016lx r28 : %016lx\n", regs->r26,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#252: FILE: arch/ia64/kvm/vcpu.c:2203:
+	printk("r26 : %016lx r27 : %016lx r28 : %016lx\n", regs->r26,
+							regs->r27, regs->r28);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#253: FILE: arch/ia64/kvm/vcpu.c:2204:
+	printk("r29 : %016lx r30 : %016lx r31 : %016lx\n", regs->r29,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#254: FILE: arch/ia64/kvm/vcpu.c:2205:
+	printk("r29 : %016lx r30 : %016lx r31 : %016lx\n", regs->r29,
+							regs->r30, regs->r31);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#256: FILE: arch/ia64/kvm/vcpu.c:2207:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#269: FILE: arch/ia64/kvm/vcpu.c:2219:
+	printk(buf);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000194390.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 25 warnings, 13 checks, 227 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000194390.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
