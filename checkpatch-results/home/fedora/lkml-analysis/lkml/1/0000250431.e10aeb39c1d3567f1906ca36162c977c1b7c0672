ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#479: FILE: drivers/net/wan/cosa.c:350:
+static inline struct channel_data* dev_to_chan(struct net_device *dev)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#582: FILE: drivers/net/wan/cosa.c:571:
+		if (!(chan->netdev = alloc_hdlcdev(chan))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#583: FILE: drivers/net/wan/cosa.c:572:
+			printk(KERN_WARNING "%s: alloc_hdlcdev failed.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#598: FILE: drivers/net/wan/cosa.c:587:
+			printk(KERN_WARNING "%s: register_hdlc_device()"

WARNING:SPLIT_STRING: quoted string split across lines
#599: FILE: drivers/net/wan/cosa.c:588:
+			printk(KERN_WARNING "%s: register_hdlc_device()"
+			       " failed.\n", chan->netdev->name);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#697: FILE: drivers/net/wan/cosa.c:643:
+		printk(KERN_WARNING "%s: cosa_net_open called with usage count"

WARNING:SPLIT_STRING: quoted string split across lines
#698: FILE: drivers/net/wan/cosa.c:644:
+		printk(KERN_WARNING "%s: cosa_net_open called with usage count"
+		       " %d\n", chan->name, chan->usage);

WARNING:LINE_SPACING: Missing a blank line after declarations
#895: FILE: drivers/net/wan/cosa.c:1194:
+	struct channel_data *chan = dev_to_chan(dev);
+	rv = cosa_ioctl_common(chan->cosa, chan, cmd,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#927: FILE: drivers/net/wan/farsync.c:50:
+					 * useful */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1053: FILE: drivers/net/wan/hdlc_cisco.c:70:
+static inline struct cisco_state* state(hdlc_device *hdlc)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1096: FILE: drivers/net/wan/hdlc_cisco.c:374:
+		result = hdlc->attach(dev, ENCODING_NRZ,PARITY_CRC16_PR1_CCITT);
 		                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1311: FILE: drivers/net/wan/hostess_sv11.c:47:
+static inline struct z8530_dev* dev_to_sv(struct net_device *dev)

CHECK:CAMELCASE: Avoid CamelCase: <chanA>
#1363: FILE: drivers/net/wan/hostess_sv11.c:86:
+			err = z8530_sync_open(d, &sv11->chanA);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1471: FILE: drivers/net/wan/hostess_sv11.c:152:
+	/* struct z8530_dev *sv11=dev_to_sv(d);
+	   z8530_ioctl(d,&sv11->chanA,ifr,cmd) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1471: FILE: drivers/net/wan/hostess_sv11.c:152:
+	   z8530_ioctl(d,&sv11->chanA,ifr,cmd) */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1544: FILE: drivers/net/wan/hostess_sv11.c:186:
+		printk(KERN_WARNING "hostess: I/O 0x%X already in use.\n",

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*sv)...) over kzalloc(sizeof(struct z8530_dev)...)
#1562: FILE: drivers/net/wan/hostess_sv11.c:191:
+	sv = kzalloc(sizeof(struct z8530_dev), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:CAMELCASE: Avoid CamelCase: <chanB>
#1586: FILE: drivers/net/wan/hostess_sv11.c:203:
+	sv->chanB.ctrlio = -1;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1706: FILE: drivers/net/wan/hostess_sv11.c:265:
+	sv->chanA.netdevice = netdev = alloc_hdlcdev(sv);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1722: FILE: drivers/net/wan/hostess_sv11.c:278:
+		printk(KERN_ERR "hostess: unable to register HDLC device.\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1807: FILE: drivers/net/wan/hostess_sv11.c:335:
+	if ((sv11_unit = sv11_init(io, irq)) == NULL)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'lmc_softc_t * const' should also have an identifier name
#1831: FILE: drivers/net/wan/lmc/lmc.h:14:
+void lmc_led_on(lmc_softc_t * const, u32);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#1831: FILE: drivers/net/wan/lmc/lmc.h:14:
+void lmc_led_on(lmc_softc_t * const, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'lmc_softc_t * const' should also have an identifier name
#1832: FILE: drivers/net/wan/lmc/lmc.h:15:
+void lmc_led_off(lmc_softc_t * const, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#1832: FILE: drivers/net/wan/lmc/lmc.h:15:
+void lmc_led_off(lmc_softc_t * const, u32);

CHECK:CAMELCASE: Avoid CamelCase: <lmcEventLog>
#1847: FILE: drivers/net/wan/lmc/lmc.h:29:
+static void lmcEventLog(u32 EventNum, u32 arg2, u32 arg3);

CHECK:CAMELCASE: Avoid CamelCase: <EventNum>
#1847: FILE: drivers/net/wan/lmc/lmc.h:29:
+static void lmcEventLog(u32 EventNum, u32 arg2, u32 arg3);

CHECK:CAMELCASE: Avoid CamelCase: <lmcEventLogIndex>
#1867: FILE: drivers/net/wan/lmc/lmc_debug.c:50:
+u32 lmcEventLogIndex;

CHECK:CAMELCASE: Avoid CamelCase: <lmcEventLogBuf>
#1868: FILE: drivers/net/wan/lmc/lmc_debug.c:51:
+u32 lmcEventLogBuf[LMC_EVENTLOGSIZE * LMC_EVENTLOGARGS];

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1980: FILE: drivers/net/wan/lmc/lmc_main.c:113:
+    lmc_softc_t *sc = dev_to_sc(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1984: FILE: drivers/net/wan/lmc/lmc_main.c:115:
+    int ret = -EOPNOTSUPP;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1985: FILE: drivers/net/wan/lmc/lmc_main.c:116:
+    u16 regVal;$

CHECK:CAMELCASE: Avoid CamelCase: <regVal>
#1985: FILE: drivers/net/wan/lmc/lmc_main.c:116:
+    u16 regVal;

WARNING:TABSTOP: Statements should start on a tabstop
#2021: FILE: drivers/net/wan/lmc/lmc_main.c:170:
+	    u16 old_type = sc->if_type;

WARNING:TABSTOP: Statements should start on a tabstop
#2022: FILE: drivers/net/wan/lmc/lmc_main.c:171:
+	    u16	new_type;

WARNING:TABSTOP: Statements should start on a tabstop
#2030: FILE: drivers/net/wan/lmc/lmc_main.c:178:
+	    if (copy_from_user(&new_type, ifr->ifr_data, sizeof(u16))) {

WARNING:TABSTOP: Statements should start on a tabstop
#2048: FILE: drivers/net/wan/lmc/lmc_main.c:195:
+	    break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2087: FILE: drivers/net/wan/lmc/lmc_main.c:222:
+    case LMCIOCGETLMCSTATS:$

WARNING:TABSTOP: Statements should start on a tabstop
#2088: FILE: drivers/net/wan/lmc/lmc_main.c:223:
+	    if (sc->lmc_cardtype == LMC_CARDTYPE_T1) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 20)
#2088: FILE: drivers/net/wan/lmc/lmc_main.c:223:
+	    if (sc->lmc_cardtype == LMC_CARDTYPE_T1) {
+		    lmc_mii_writereg(sc, 0, 17, T1FRAMER_FERR_LSB);

CHECK:CAMELCASE: Avoid CamelCase: <framingBitErrorCount>
#2090: FILE: drivers/net/wan/lmc/lmc_main.c:225:
+		    sc->extra_stats.framingBitErrorCount +=

CHECK:CAMELCASE: Avoid CamelCase: <lineCodeViolationCount>
#2096: FILE: drivers/net/wan/lmc/lmc_main.c:231:
+		    sc->extra_stats.lineCodeViolationCount +=

CHECK:CAMELCASE: Avoid CamelCase: <lossOfFrameCount>
#2104: FILE: drivers/net/wan/lmc/lmc_main.c:239:
+		    sc->extra_stats.lossOfFrameCount +=

CHECK:CAMELCASE: Avoid CamelCase: <changeOfFrameAlignmentCount>
#2106: FILE: drivers/net/wan/lmc/lmc_main.c:241:
+		    sc->extra_stats.changeOfFrameAlignmentCount +=

CHECK:CAMELCASE: Avoid CamelCase: <severelyErroredFrameCount>
#2108: FILE: drivers/net/wan/lmc/lmc_main.c:243:
+		    sc->extra_stats.severelyErroredFrameCount +=

WARNING:TABSTOP: Statements should start on a tabstop
#2110: FILE: drivers/net/wan/lmc/lmc_main.c:245:
+	    }

WARNING:TABSTOP: Statements should start on a tabstop
#2111: FILE: drivers/net/wan/lmc/lmc_main.c:246:
+	    if (copy_to_user(ifr->ifr_data, &sc->lmc_device->stats,

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 20)
#2111: FILE: drivers/net/wan/lmc/lmc_main.c:246:
+	    if (copy_to_user(ifr->ifr_data, &sc->lmc_device->stats,
[...]
+		    ret = -EFAULT;

WARNING:TABSTOP: Statements should start on a tabstop
#2116: FILE: drivers/net/wan/lmc/lmc_main.c:251:
+	    else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 20)
#2116: FILE: drivers/net/wan/lmc/lmc_main.c:251:
+	    else
+		    ret = 0;

WARNING:TABSTOP: Statements should start on a tabstop
#2118: FILE: drivers/net/wan/lmc/lmc_main.c:253:
+	    break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2125: FILE: drivers/net/wan/lmc/lmc_main.c:255:
+    case LMCIOCCLEARLMCSTATS:$

WARNING:TABSTOP: Statements should start on a tabstop
#2126: FILE: drivers/net/wan/lmc/lmc_main.c:256:
+	    if (!capable(CAP_NET_ADMIN)) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 20)
#2126: FILE: drivers/net/wan/lmc/lmc_main.c:256:
+	    if (!capable(CAP_NET_ADMIN)) {
+		    ret = -EPERM;

WARNING:TABSTOP: Statements should start on a tabstop
#2128: FILE: drivers/net/wan/lmc/lmc_main.c:258:
+		    break;

WARNING:TABSTOP: Statements should start on a tabstop
#2129: FILE: drivers/net/wan/lmc/lmc_main.c:259:
+	    }

WARNING:TABSTOP: Statements should start on a tabstop
#2145: FILE: drivers/net/wan/lmc/lmc_main.c:268:
+	    break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2165: FILE: drivers/net/wan/lmc/lmc_main.c:625:
+    struct net_device *dev = (struct net_device *)data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2166: FILE: drivers/net/wan/lmc/lmc_main.c:626:
+    lmc_softc_t *sc = dev_to_sc(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2169: FILE: drivers/net/wan/lmc/lmc_main.c:628:
+    u32 ticks;$

CHECK:CAMELCASE: Avoid CamelCase: <tx_TimeoutInd>
#2184: FILE: drivers/net/wan/lmc/lmc_main.c:660:
+	sc->tx_TimeoutInd == 0)

CHECK:CAMELCASE: Avoid CamelCase: <tx_TimeoutCnt>
#2201: FILE: drivers/net/wan/lmc/lmc_main.c:674:
+	sc->extra_stats.tx_TimeoutCnt++;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2214: FILE: drivers/net/wan/lmc/lmc_main.c:695:
+    } else {$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2268: FILE: drivers/net/wan/lmc/lmc_main.c:792:
 static int __devinit lmc_init_one(struct pci_dev *pdev,

CHECK:CAMELCASE: Avoid CamelCase: <AdapModelNum>
#2344: FILE: drivers/net/wan/lmc/lmc_main.c:798:
+	u16 AdapModelNum;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2352: FILE: drivers/net/wan/lmc/lmc_main.c:806:
+		printk(KERN_ERR "lmc: pci enable failed: %d\n", err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2362: FILE: drivers/net/wan/lmc/lmc_main.c:812:
+		printk(KERN_ERR "lmc: pci_request_region failed\n");

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2368: FILE: drivers/net/wan/lmc/lmc_main.c:817:
+	/*
+	 * Allocate our own device structure

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2380: FILE: drivers/net/wan/lmc/lmc_main.c:827:
+		printk(KERN_ERR "lmc:alloc_netdev for device failed\n");

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2411: FILE: drivers/net/wan/lmc/lmc_main.c:852:
+	/*
+	 * This will get the protocol layer ready and do any 1 time init's

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2421: FILE: drivers/net/wan/lmc/lmc_main.c:862:
+	printk(KERN_INFO "%s: detected at %lx, irq %d\n", dev->name,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2426: FILE: drivers/net/wan/lmc/lmc_main.c:867:
+		printk(KERN_ERR "%s: register_netdev failed.\n", dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2438: FILE: drivers/net/wan/lmc/lmc_main.c:886:
+	printk(KERN_INFO "%s: LMC HSSI\n", dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2444: FILE: drivers/net/wan/lmc/lmc_main.c:891:
+	printk(KERN_INFO "%s: LMC DS3\n", dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2450: FILE: drivers/net/wan/lmc/lmc_main.c:896:
+	printk(KERN_INFO "%s: LMC SSI\n", dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2456: FILE: drivers/net/wan/lmc/lmc_main.c:901:
+	printk(KERN_INFO "%s: LMC T1\n", dev->name);

WARNING:TYPO_SPELLING: 'UNKOWN' may be misspelled - perhaps 'UNKNOWN'?
#2462: FILE: drivers/net/wan/lmc/lmc_main.c:906:
+	printk(KERN_WARNING "%s: LMC UNKOWN CARD!\n", dev->name);
 	                             ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2462: FILE: drivers/net/wan/lmc/lmc_main.c:906:
+	printk(KERN_WARNING "%s: LMC UNKOWN CARD!\n", dev->name);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2479: FILE: drivers/net/wan/lmc/lmc_main.c:924:
+    if ((AdapModelNum != LMC_ADAP_T1 || /* detect LMC1200 */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#2479: FILE: drivers/net/wan/lmc/lmc_main.c:924:
+    if ((AdapModelNum != LMC_ADAP_T1 || /* detect LMC1200 */
[...]
+	    printk(KERN_WARNING "%s: Model number (%d) miscompare for PCI"

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2487: FILE: drivers/net/wan/lmc/lmc_main.c:932:
+	    printk(KERN_WARNING "%s: Model number (%d) miscompare for PCI"

WARNING:SPLIT_STRING: quoted string split across lines
#2488: FILE: drivers/net/wan/lmc/lmc_main.c:933:
+	    printk(KERN_WARNING "%s: Model number (%d) miscompare for PCI"
+		   " Subsystem ID = 0x%04x\n",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2507: FILE: drivers/net/wan/lmc/lmc_main.c:942:
+    sc->extra_stats.check = STATCHECK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2508: FILE: drivers/net/wan/lmc/lmc_main.c:943:
+    sc->extra_stats.version_size = (DRIVER_VERSION << 16) +$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2510: FILE: drivers/net/wan/lmc/lmc_main.c:945:
+    sc->extra_stats.lmc_cardtype = sc->lmc_cardtype;$

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#2543: FILE: drivers/net/wan/lmc/lmc_main.c:966:
+static void __devexit lmc_remove_one(struct pci_dev *pdev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2561: FILE: drivers/net/wan/lmc/lmc_main.c:971:
+		printk(KERN_DEBUG "%s: removing...\n", dev->name);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2577: FILE: drivers/net/wan/lmc/lmc_main.c:985:
+    lmc_softc_t *sc = dev_to_sc(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2578: FILE: drivers/net/wan/lmc/lmc_main.c:986:
+    int err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2591: FILE: drivers/net/wan/lmc/lmc_main.c:992:
+    lmc_dec_reset(sc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2592: FILE: drivers/net/wan/lmc/lmc_main.c:993:
+    lmc_reset(sc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2594: FILE: drivers/net/wan/lmc/lmc_main.c:995:
+    LMC_EVENT_LOG(LMC_EVENT_RESET1, LMC_CSR_READ(sc, csr_status), 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2595: FILE: drivers/net/wan/lmc/lmc_main.c:996:
+    LMC_EVENT_LOG(LMC_EVENT_RESET2, lmc_mii_readreg(sc, 0, 16),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2605: FILE: drivers/net/wan/lmc/lmc_main.c:1042:
+    if ((err = lmc_proto_open(sc)) != 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#2605: FILE: drivers/net/wan/lmc/lmc_main.c:1042:
+    if ((err = lmc_proto_open(sc)) != 0)
+	    return err;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2605: FILE: drivers/net/wan/lmc/lmc_main.c:1042:
+    if ((err = lmc_proto_open(sc)) != 0)

WARNING:TABSTOP: Statements should start on a tabstop
#2606: FILE: drivers/net/wan/lmc/lmc_main.c:1043:
+	    return err;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2614: FILE: drivers/net/wan/lmc/lmc_main.c:1049:
+    sc->extra_stats.tx_tbusy0++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2624: FILE: drivers/net/wan/lmc/lmc_main.c:1101:
+    lmc_softc_t *sc = dev_to_sc(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2633: FILE: drivers/net/wan/lmc/lmc_main.c:1119:
+    sc->extra_stats.tx_tbusy0++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2646: FILE: drivers/net/wan/lmc/lmc_main.c:1138:
+    lmc_softc_t *sc = dev_to_sc(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2669: FILE: drivers/net/wan/lmc/lmc_main.c:1157:
+    lmc_softc_t *sc = dev_to_sc(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2680: FILE: drivers/net/wan/lmc/lmc_main.c:1166:
+    sc->extra_stats.tx_tbusy1++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2690: FILE: drivers/net/wan/lmc/lmc_main.c:1178:
+    sc->lmc_device->stats.rx_missed_errors +=$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2700: FILE: drivers/net/wan/lmc/lmc_main.c:1210:
+    sc->extra_stats.tx_tbusy0++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2709: FILE: drivers/net/wan/lmc/lmc_main.c:1223:
+    lmc_softc_t *sc = dev_to_sc(dev);$

CHECK:CAMELCASE: Avoid CamelCase: <tx_NoCompleteCnt>
#2727: FILE: drivers/net/wan/lmc/lmc_main.c:1286:
+	    sc->extra_stats.tx_NoCompleteCnt = 0;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2755: FILE: drivers/net/wan/lmc/lmc_main.c:1311:
+		/*
+		 * Check the total error summary to look for any errors

CHECK:CAMELCASE: Avoid CamelCase: <dirtyTx>
#2789: FILE: drivers/net/wan/lmc/lmc_main.c:1349:
+	    sc->extra_stats.dirtyTx = badtx;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2803: FILE: drivers/net/wan/lmc/lmc_main.c:1408:
+    lmc_softc_t *sc = dev_to_sc(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2832: FILE: drivers/net/wan/lmc/lmc_main.c:1478:
+    sc->extra_stats.tx_NoCompleteCnt++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2844: FILE: drivers/net/wan/lmc/lmc_main.c:1499:
+    lmc_softc_t *sc = dev_to_sc(dev);$

CHECK:CAMELCASE: Avoid CamelCase: <localLengthErrCnt>
#2905: FILE: drivers/net/wan/lmc/lmc_main.c:1545:
+		localLengthErrCnt++;

CHECK:CAMELCASE: Avoid CamelCase: <lmc_crcSize>
#2915: FILE: drivers/net/wan/lmc/lmc_main.c:1549:
+	if (len < sc->lmc_crcSize + 2) {

CHECK:CAMELCASE: Avoid CamelCase: <rx_SmallPktCnt>
#2917: FILE: drivers/net/wan/lmc/lmc_main.c:1551:
+		sc->extra_stats.rx_SmallPktCnt++;

CHECK:CAMELCASE: Avoid CamelCase: <rx_BuffAllocErr>
#2948: FILE: drivers/net/wan/lmc/lmc_main.c:1628:
+		sc->extra_stats.rx_BuffAllocErr++;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2969: FILE: drivers/net/wan/lmc/lmc_main.c:1669:
+    if (rxIntLoopCnt > sc->extra_stats.rxIntLoopCnt)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#2969: FILE: drivers/net/wan/lmc/lmc_main.c:1669:
+    if (rxIntLoopCnt > sc->extra_stats.rxIntLoopCnt)
+	    sc->extra_stats.rxIntLoopCnt = rxIntLoopCnt; /* debug -baz */

CHECK:CAMELCASE: Avoid CamelCase: <rxIntLoopCnt>
#2969: FILE: drivers/net/wan/lmc/lmc_main.c:1669:
+    if (rxIntLoopCnt > sc->extra_stats.rxIntLoopCnt)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2982: FILE: drivers/net/wan/lmc/lmc_main.c:1699:
+    lmc_softc_t *sc = dev_to_sc(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2991: FILE: drivers/net/wan/lmc/lmc_main.c:1706:
+    sc->lmc_device->stats.rx_missed_errors += LMC_CSR_READ(sc, csr_missed_frames) & 0xffff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2998: FILE: drivers/net/wan/lmc/lmc_main.c:1712:
+    return &sc->lmc_device->stats;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3052: FILE: drivers/net/wan/lmc/lmc_main.c:1982:
+    sc->extra_stats.resetCount++;$

CHECK:CAMELCASE: Avoid CamelCase: <resetCount>
#3052: FILE: drivers/net/wan/lmc/lmc_main.c:1982:
+    sc->extra_stats.resetCount++;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3059: FILE: drivers/net/wan/lmc/lmc_main.c:1988:
+    u32 val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3071: FILE: drivers/net/wan/lmc/lmc_main.c:2074:
+    lmc_softc_t *sc = dev_to_sc(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3087: FILE: drivers/net/wan/lmc/lmc_main.c:2084:
+    sc->extra_stats.tx_tbusy_calls++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3088: FILE: drivers/net/wan/lmc/lmc_main.c:2085:
+    if (jiffies - dev->trans_start < TX_TIMEOUT)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#3088: FILE: drivers/net/wan/lmc/lmc_main.c:2085:
+    if (jiffies - dev->trans_start < TX_TIMEOUT)
+	    goto bug_out;

WARNING:TABSTOP: Statements should start on a tabstop
#3089: FILE: drivers/net/wan/lmc/lmc_main.c:2086:
+	    goto bug_out;

CHECK:CAMELCASE: Avoid CamelCase: <tx_ProcTimeout>
#3098: FILE: drivers/net/wan/lmc/lmc_main.c:2097:
+		  sc->extra_stats.tx_ProcTimeout);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3108: FILE: drivers/net/wan/lmc/lmc_main.c:2114:
+    sc->lmc_device->stats.tx_errors++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3109: FILE: drivers/net/wan/lmc/lmc_main.c:2115:
+    sc->extra_stats.tx_ProcTimeout++; /* -baz */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3141: FILE: drivers/net/wan/lmc/lmc_media.c:427:
+    u16 link_status, link_status_11;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#3148: FILE: drivers/net/wan/lmc/lmc_media.c:448:
         if(sc->last_led_err[3] != 1){
+	    u16 r1;

WARNING:TABSTOP: Statements should start on a tabstop
#3150: FILE: drivers/net/wan/lmc/lmc_media.c:449:
+	    u16 r1;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#3157: FILE: drivers/net/wan/lmc/lmc_media.c:461:
         if(sc->last_led_err[3] == 1){
+	    u16 r1;

WARNING:TABSTOP: Statements should start on a tabstop
#3159: FILE: drivers/net/wan/lmc/lmc_media.c:462:
+	    u16 r1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3198: FILE: drivers/net/wan/lmc/lmc_media.c:680:
+  u16 link_status;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3199: FILE: drivers/net/wan/lmc/lmc_media.c:681:
+  u32 ticks;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3214: FILE: drivers/net/wan/lmc/lmc_media.c:719:
+      if (sc->last_led_err[3] != 1) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 14)
#3214: FILE: drivers/net/wan/lmc/lmc_media.c:719:
+      if (sc->last_led_err[3] != 1) {
+	      sc->extra_stats.tx_lossOfClockCnt++;

CHECK:CAMELCASE: Avoid CamelCase: <tx_lossOfClockCnt>
#3215: FILE: drivers/net/wan/lmc/lmc_media.c:720:
+	      sc->extra_stats.tx_lossOfClockCnt++;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3216: FILE: drivers/net/wan/lmc/lmc_media.c:721:
+	      printk(KERN_WARNING "%s: Lost Clock, Link Down\n", sc->name);

WARNING:LINE_SPACING: Missing a blank line after declarations
#3250: FILE: drivers/net/wan/lmc/lmc_media.c:887:
+	u16 mii17 = lmc_mii_readreg(sc, 0, 17);
+	if (((mii17 >> 3) & 7) == 7)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3262: FILE: drivers/net/wan/lmc/lmc_media.c:920:
+  u16 mii16;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3271: FILE: drivers/net/wan/lmc/lmc_media.c:1019:
+    u16 link_status;$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lmc_proto_open', this function's name, in a string
#3397: FILE: drivers/net/wan/lmc/lmc_proto.c:93:
+	lmc_trace(sc->lmc_device, "lmc_proto_open in");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3415: FILE: drivers/net/wan/lmc/lmc_proto.c:98:
+			printk(KERN_WARNING "%s: HDLC open failed: %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lmc_proto_open', this function's name, in a string
#3419: FILE: drivers/net/wan/lmc/lmc_proto.c:102:
+	lmc_trace(sc->lmc_device, "lmc_proto_open out");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lmc_proto_close', this function's name, in a string
#3428: FILE: drivers/net/wan/lmc/lmc_proto.c:108:
+	lmc_trace(sc->lmc_device, "lmc_proto_close in");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lmc_proto_close', this function's name, in a string
#3462: FILE: drivers/net/wan/lmc/lmc_proto.c:113:
+	lmc_trace(sc->lmc_device, "lmc_proto_close out");

WARNING:TABSTOP: Statements should start on a tabstop
#3472: FILE: drivers/net/wan/lmc/lmc_proto.c:121:
+	    return hdlc_type_trans(skb, sc->lmc_device);

WARNING:TABSTOP: Statements should start on a tabstop
#3473: FILE: drivers/net/wan/lmc/lmc_proto.c:122:
+	    break;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#3505: FILE: drivers/net/wan/lmc/lmc_proto.h:13:
+static inline lmc_softc_t* dev_to_sc(struct net_device *dev)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3630: FILE: drivers/net/wan/lmc/lmc_var.h:141:
+#define LMC_RDES_ERROR_MASK ( (u32)( \
 	  LMC_RDES_OVERFLOW \
 	| LMC_RDES_DRIBBLING_BIT \
 	| LMC_RDES_REPORT_ON_MII_ERR \

CHECK:CAMELCASE: Avoid CamelCase: <tx_IntTimeout>
#3772: FILE: drivers/net/wan/lmc/lmc_var.h:231:
+	u32       tx_IntTimeout;

CHECK:CAMELCASE: Avoid CamelCase: <tx_MaxXmtsB4Int>
#3774: FILE: drivers/net/wan/lmc/lmc_var.h:233:
+	u32       tx_MaxXmtsB4Int;

CHECK:CAMELCASE: Avoid CamelCase: <tx_OutOfSyncPtr>
#3776: FILE: drivers/net/wan/lmc/lmc_var.h:235:
+	u32       tx_OutOfSyncPtr;

CHECK:CAMELCASE: Avoid CamelCase: <otherTypeCnt>
#3785: FILE: drivers/net/wan/lmc/lmc_var.h:244:
+	u32       otherTypeCnt;

CHECK:CAMELCASE: Avoid CamelCase: <lastType>
#3786: FILE: drivers/net/wan/lmc/lmc_var.h:245:
+	u32       lastType;

CHECK:CAMELCASE: Avoid CamelCase: <lastTypeOK>
#3787: FILE: drivers/net/wan/lmc/lmc_var.h:246:
+	u32       lastTypeOK;

CHECK:CAMELCASE: Avoid CamelCase: <txLoopCnt>
#3788: FILE: drivers/net/wan/lmc/lmc_var.h:247:
+	u32       txLoopCnt;

CHECK:CAMELCASE: Avoid CamelCase: <usedXmtDescripCnt>
#3789: FILE: drivers/net/wan/lmc/lmc_var.h:248:
+	u32       usedXmtDescripCnt;

CHECK:CAMELCASE: Avoid CamelCase: <txIndexCnt>
#3790: FILE: drivers/net/wan/lmc/lmc_var.h:249:
+	u32       txIndexCnt;

CHECK:CAMELCASE: Avoid CamelCase: <rx_BadPktSurgeCnt>
#3794: FILE: drivers/net/wan/lmc/lmc_var.h:253:
+	u32       rx_BadPktSurgeCnt;

CHECK:CAMELCASE: Avoid CamelCase: <Magic0>
#3812: FILE: drivers/net/wan/lmc/lmc_var.h:269:
+	u32       Magic0;                         /* BEEFCAFE */

CHECK:CAMELCASE: Avoid CamelCase: <PciCardType>
#3816: FILE: drivers/net/wan/lmc/lmc_var.h:271:
+	u32       PciCardType;

CHECK:CAMELCASE: Avoid CamelCase: <PciSlotNumber>
#3817: FILE: drivers/net/wan/lmc/lmc_var.h:272:
+	u32       PciSlotNumber;          /* PCI slot number       */

CHECK:CAMELCASE: Avoid CamelCase: <DriverMajorVersion>
#3822: FILE: drivers/net/wan/lmc/lmc_var.h:274:
+	u16	       DriverMajorVersion;

CHECK:CAMELCASE: Avoid CamelCase: <DriverMinorVersion>
#3823: FILE: drivers/net/wan/lmc/lmc_var.h:275:
+	u16	       DriverMinorVersion;

CHECK:CAMELCASE: Avoid CamelCase: <DriverSubVersion>
#3824: FILE: drivers/net/wan/lmc/lmc_var.h:276:
+	u16	       DriverSubVersion;

CHECK:CAMELCASE: Avoid CamelCase: <XilinxRevisionNumber>
#3828: FILE: drivers/net/wan/lmc/lmc_var.h:278:
+	u16	       XilinxRevisionNumber;

CHECK:CAMELCASE: Avoid CamelCase: <MaxFrameSize>
#3829: FILE: drivers/net/wan/lmc/lmc_var.h:279:
+	u16	       MaxFrameSize;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3833: FILE: drivers/net/wan/lmc/lmc_var.h:281:
+^Iu16     ^I  t1_alarm1_status;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3834: FILE: drivers/net/wan/lmc/lmc_var.h:282:
+^Iu16       ^It1_alarm2_status;$

CHECK:CAMELCASE: Avoid CamelCase: <Magic1>
#3842: FILE: drivers/net/wan/lmc/lmc_var.h:287:
+	u32       Magic1;                         /* DEADBEEF */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3860: FILE: drivers/net/wan/lmc/lmc_var.h:301:
+^Iu32  ^I         ^Itxgo;$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3870: FILE: drivers/net/wan/lmc/lmc_var.h:303:
+	volatile u32		lmc_txtick;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3871: FILE: drivers/net/wan/lmc/lmc_var.h:304:
+	volatile u32		lmc_rxtick;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3891: FILE: drivers/net/wan/lmc/lmc_var.h:326:
+^Iu32               ^Ilast_frameerr;$

CHECK:CAMELCASE: Avoid CamelCase: <TxDescriptControlInit>
#3896: FILE: drivers/net/wan/lmc/lmc_var.h:330:
+	u32			TxDescriptControlInit;

CHECK:CAMELCASE: Avoid CamelCase: <tx_clockState>
#3905: FILE: drivers/net/wan/lmc/lmc_var.h:336:
+	u32			tx_clockState;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4042: FILE: drivers/net/wan/pc300.h:146:
+#define cpc_writeb(port,val)	{writeb((u8)(val),(port)); mb();}
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4042: FILE: drivers/net/wan/pc300.h:146:
+#define cpc_writeb(port,val)	{writeb((u8)(val),(port)); mb();}
                             	                 ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#4042: FILE: drivers/net/wan/pc300.h:146:
+#define cpc_writeb(port,val)	{writeb((u8)(val),(port)); mb();}
                             	                               ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#4042: FILE: drivers/net/wan/pc300.h:146:
+#define cpc_writeb(port,val)	{writeb((u8)(val),(port)); mb();}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4045: FILE: drivers/net/wan/pc300.h:148:
+#define cpc_writel(port,val)	{writel((u32)(val),(port)); mb();}
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4045: FILE: drivers/net/wan/pc300.h:148:
+#define cpc_writel(port,val)	{writel((u32)(val),(port)); mb();}
                             	                  ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#4045: FILE: drivers/net/wan/pc300.h:148:
+#define cpc_writel(port,val)	{writel((u32)(val),(port)); mb();}
                             	                                ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#4045: FILE: drivers/net/wan/pc300.h:148:
+#define cpc_writel(port,val)	{writel((u32)(val),(port)); mb();}

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#4217: FILE: drivers/net/wan/pc300.h:297:
+	u32 line_on;		/* DCD(X.21, RSV) / sync(TE) change counters */
 	            		                         ^^

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#4248: FILE: drivers/net/wan/pc300.h:312:
+	u8 cpld_id;		/* CPLD ID (TE only) */
 	           		            ^^

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#4249: FILE: drivers/net/wan/pc300.h:313:
+	u16 cpld_reg1;		/* CPLD reg 1 (TE only) */
 	              		               ^^

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#4250: FILE: drivers/net/wan/pc300.h:314:
+	u16 cpld_reg2;		/* CPLD reg 2 (TE only) */
 	              		               ^^

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#4318: FILE: drivers/net/wan/pc300.h:359:
+	falc_t falc;	/* FALC structure (TE only) */
 	            	                   ^^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4444: FILE: drivers/net/wan/pc300_drv.c:443:
+	volatile u8 status;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4468: FILE: drivers/net/wan/pc300_drv.c:510:
+	volatile u8 status;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4562: FILE: drivers/net/wan/pc300_drv.c:1730:
+static u16 falc_pattern_test_error(pc300_t * card, int ch)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4602: FILE: drivers/net/wan/pc300_drv.c:1998:
+	volatile u32 status;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4678: FILE: drivers/net/wan/pc300_drv.c:2358:
+	volatile u8 plx_status;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4757: FILE: drivers/net/wan/pc300_drv.c:3196:
+static u32 detect_ram(pc300_t * card)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#4847: FILE: drivers/net/wan/sealevel.c:53:
+static inline struct slvl_device* dev_to_chan(struct net_device *dev)

WARNING:LINE_SPACING: Missing a blank line after declarations
#5034: FILE: drivers/net/wan/sealevel.c:176:
+	struct net_device *dev = alloc_hdlcdev(sv);
+	if (!dev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5046: FILE: drivers/net/wan/sealevel.c:188:
+		printk(KERN_ERR "sealevel: unable to register HDLC device\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5124: FILE: drivers/net/wan/sealevel.c:213:
+		printk(KERN_WARNING "sealevel: I/O 0x%X already in use.\n",

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*b)...) over kzalloc(sizeof(struct slvl_board)...)
#5135: FILE: drivers/net/wan/sealevel.c:218:
+	b = kzalloc(sizeof(struct slvl_board), GFP_KERNEL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#5337: FILE: drivers/net/wan/sealevel.c:342:
+		struct net_device *d = b->dev[u].chan->netdevice;
+		unregister_hdlc_device(d);

CHECK:CAMELCASE: Avoid CamelCase: <TxEOM>
#5435: FILE: drivers/net/wan/z85230.c:455:
+	if (status & TxEOM) {

CHECK:CAMELCASE: Avoid CamelCase: <RxENABLE>
#5459: FILE: drivers/net/wan/z85230.c:466:
+			write_zsreg(chan, R3, chan->regs[3] | RxENABLE);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#5473: FILE: drivers/net/wan/z85230.c:477:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c->tx_skb"
#5556: FILE: drivers/net/wan/z85230.c:1535:
+	if (c->tx_skb == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5586: FILE: drivers/net/wan/z85230.c:1629:
+			printk(KERN_WARNING "%s: DMA flip overrun!\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#5610: FILE: drivers/net/wan/z85230.c:1643:
+		if (skb == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5612: FILE: drivers/net/wan/z85230.c:1645:
+			printk(KERN_WARNING "%s: Memory squeeze.\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c->skb2"
#5667: FILE: drivers/net/wan/z85230.c:1685:
+		if (c->skb2 == NULL)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000250431.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 18 errors, 143 warnings, 55 checks, 5391 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000250431.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
