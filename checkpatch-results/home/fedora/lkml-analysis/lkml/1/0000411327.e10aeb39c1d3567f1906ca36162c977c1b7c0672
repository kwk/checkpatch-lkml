WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
master.kernel.org:/pub/scm/linux/kernel/git/jgarzik/netdev-2.6.git upstream-linus

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#189: FILE: drivers/net/netxen/netxen_nic.h:956:
+/*
+ * NetXen dma watchdog control structure

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#228: FILE: drivers/net/netxen/netxen_nic.h:1102:
+	uint32_t	mask = 0x7ff;

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#231: FILE: drivers/net/netxen/netxen_nic.h:1105:
+	DPRINTK(1, INFO, "Entered ISR Disable \n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#249: FILE: drivers/net/netxen/netxen_nic.h:1123:
+	if (adapter->intr_scheme != -1 &&
+		adapter->intr_scheme != INTR_SCHEME_PERPORT) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#251: FILE: drivers/net/netxen/netxen_nic.h:1125:
+		writel(mask,
+			(void *)(PCI_OFFSET_SECOND_RANGE(adapter, ISR_INT_MASK)));

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#263: FILE: drivers/net/netxen/netxen_nic.h:1137:
+			udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#267: FILE: drivers/net/netxen/netxen_nic.h:1141:
+			printk(KERN_NOTICE "%s: Failed to disable interrupt completely\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#268: FILE: drivers/net/netxen/netxen_nic.h:1142:
+			printk(KERN_NOTICE "%s: Failed to disable interrupt completely\n",
+					netxen_nic_driver_name);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#284: FILE: drivers/net/netxen/netxen_nic.h:1155:
+	DPRINTK(1, INFO, "Entered ISR Enable \n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#287: FILE: drivers/net/netxen/netxen_nic.h:1158:
+	if (adapter->intr_scheme != -1 &&
+		adapter->intr_scheme != INTR_SCHEME_PERPORT) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#301: FILE: drivers/net/netxen/netxen_nic.h:1172:
+		writel(mask,
+			(void *)(PCI_OFFSET_SECOND_RANGE(adapter, ISR_INT_MASK)));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#330: FILE: drivers/net/netxen/netxen_nic.h:1192:
+		if (adapter->intr_scheme != -1 &&
+			adapter->intr_scheme != INTR_SCHEME_PERPORT) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#334: FILE: drivers/net/netxen/netxen_nic.h:1196:
+		writel(mask,
+			(void *)(PCI_OFFSET_SECOND_RANGE(adapter, ISR_INT_TARGET_MASK)));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#354: FILE: drivers/net/netxen/netxen_nic.h:1262:
+	if (netxen_nic_hw_read_wx(adapter,
+	    NETXEN_CAM_RAM(NETXEN_CAM_RAM_DMA_WATCHDOG_CTRL), &ctrl, 4))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#355: FILE: drivers/net/netxen/netxen_nic.h:1263:
+		printk(KERN_ERR "failed to read dma watchdog status\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#363: FILE: drivers/net/netxen/netxen_nic.h:1271:
+	netxen_crb_writelit_adapter(adapter,
+		NETXEN_CAM_RAM(NETXEN_CAM_RAM_DMA_WATCHDOG_CTRL), ctrl);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#374: FILE: drivers/net/netxen/netxen_nic.h:1282:
+	if (netxen_nic_hw_read_wx(adapter,
+	    NETXEN_CAM_RAM(NETXEN_CAM_RAM_DMA_WATCHDOG_CTRL), &ctrl, 4))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#375: FILE: drivers/net/netxen/netxen_nic.h:1283:
+		printk(KERN_ERR "failed to read dma watchdog status\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#387: FILE: drivers/net/netxen/netxen_nic.h:1295:
+	if (netxen_nic_hw_read_wx(adapter,
+		NETXEN_CAM_RAM(NETXEN_CAM_RAM_DMA_WATCHDOG_CTRL), &ctrl, 4))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#388: FILE: drivers/net/netxen/netxen_nic.h:1296:
+		printk(KERN_ERR "failed to read dma watchdog status\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#397: FILE: drivers/net/netxen/netxen_nic.h:1305:
+	netxen_crb_writelit_adapter(adapter,
+		NETXEN_CAM_RAM(NETXEN_CAM_RAM_DMA_WATCHDOG_CTRL), ctrl);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#402: FILE: drivers/net/netxen/netxen_nic.h:1310:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#426: FILE: drivers/net/netxen/netxen_nic_hw.c:380:
+			msleep(1);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#435: FILE: drivers/net/netxen/netxen_nic_hw.c:395:
+	adapter->intr_scheme = readl(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#437: FILE: drivers/net/netxen/netxen_nic_hw.c:397:
+	printk(KERN_NOTICE "%s: FW capabilities:0x%x\n", netxen_nic_driver_name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#438: FILE: drivers/net/netxen/netxen_nic_hw.c:398:
+	printk(KERN_NOTICE "%s: FW capabilities:0x%x\n", netxen_nic_driver_name,
+			adapter->intr_scheme);

WARNING:LINE_SPACING: Missing a blank line after declarations
#463: FILE: drivers/net/netxen/netxen_nic_hw.c:717:
+		int retries = 10;
+		if (netxen_rom_fast_read(adapter, flashaddr, (int *)&data) != 0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#476: FILE: drivers/net/netxen/netxen_nic_hw.c:730:
+			printk(KERN_ERR "%s: firmware load aborted, write failed at 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#477: FILE: drivers/net/netxen/netxen_nic_hw.c:731:
+			printk(KERN_ERR "%s: firmware load aborted, write failed at 0x%x\n",
+					netxen_nic_driver_name, memaddr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#568: FILE: drivers/net/netxen/netxen_nic_init.c:956:
+			if (val == PHAN_INITIALIZE_COMPLETE ||
+				val == PHAN_INITIALIZE_ACK)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#574: FILE: drivers/net/netxen/netxen_nic_init.c:962:
+			printk(KERN_WARNING "netxen_phantom_init: init failed, "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'netxen_phantom_init', this function's name, in a string
#574: FILE: drivers/net/netxen/netxen_nic_init.c:962:
+			printk(KERN_WARNING "netxen_phantom_init: init failed, "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#575: FILE: drivers/net/netxen/netxen_nic_init.c:963:
+			printk(KERN_WARNING "netxen_phantom_init: init failed, "
+					"pegtune_val=%x\n", pegtune_val);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:MEMORY_BARRIER: memory barrier without comment
#598: FILE: drivers/net/netxen/netxen_nic_init.c:1230:
+		wmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#620: FILE: drivers/net/netxen/netxen_nic_init.c:1455:
+			wmb();

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#672: FILE: drivers/net/netxen/netxen_nic_main.c:507:
 		if (val == 0x55555555) {
[...]
+		    netxen_nic_read_w0(adapter, NETXEN_PCIE_REG(0x4), &val);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#680: FILE: drivers/net/netxen/netxen_nic_main.c:515:
+					printk(KERN_ERR "%s: failed to set MSI bit in PCI-e reg\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#681: FILE: drivers/net/netxen/netxen_nic_main.c:516:
+					printk(KERN_ERR "%s: failed to set MSI bit in PCI-e reg\n",
+							netxen_nic_driver_name);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (20, 32)
#686: FILE: drivers/net/netxen/netxen_nic_main.c:521:
 		    if (val != 0x80000f) {
[...]
+				writel(0, NETXEN_CRB_NORMALIZE(adapter,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#694: FILE: drivers/net/netxen/netxen_nic_main.c:524:
+				writel(0, NETXEN_CRB_NORMALIZE(adapter,
+							NETXEN_CAM_RAM(0x1fc)));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#695: FILE: drivers/net/netxen/netxen_nic_main.c:525:
+				printk(KERN_ERR "ERROR in NetXen HW init sequence.\n");

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#731: FILE: drivers/net/netxen/netxen_nic_main.c:641:
+	static int init_firmware_done = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#792: FILE: drivers/net/netxen/netxen_nic_main.c:695:
+				printk(KERN_INFO "dma_watchdog_shutdown_poll still in progress\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#798: FILE: drivers/net/netxen/netxen_nic_main.c:701:
+				printk(KERN_ERR "dma_watchdog_shutdown_request failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#804: FILE: drivers/net/netxen/netxen_nic_main.c:707:
+			printk(KERN_INFO "State: 0x%0x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#805: FILE: drivers/net/netxen/netxen_nic_main.c:708:
+			printk(KERN_INFO "State: 0x%0x\n",
+				readl(NETXEN_CRB_NORMALIZE(adapter, CRB_CMDPEG_STATE)));

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#811: FILE: drivers/net/netxen/netxen_nic_main.c:714:
+			msleep(1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#819: FILE: drivers/net/netxen/netxen_nic_main.c:722:
+		printk(KERN_INFO "State: 0x%0x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#820: FILE: drivers/net/netxen/netxen_nic_main.c:723:
+		printk(KERN_INFO "State: 0x%0x\n",
+			readl(NETXEN_CRB_NORMALIZE(adapter, CRB_CMDPEG_STATE)));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#826: FILE: drivers/net/netxen/netxen_nic_main.c:729:
+			printk(KERN_INFO "dma_watchdog_shutdown_poll still in progress\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#834: FILE: drivers/net/netxen/netxen_nic_main.c:737:
+			printk(KERN_ERR "failed to dma shutdown\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#838: FILE: drivers/net/netxen/netxen_nic_main.c:741:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#915: FILE: drivers/net/netxen/netxen_nic_main.c:1170:
+			writel(our_int & ~((u32)(0x80 << adapter->portnum)),
+			NETXEN_CRB_NORMALIZE(adapter, CRB_INT_VECTOR));

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#952: FILE: drivers/net/netxen/netxen_nic_phan_reg.h:124:
+/*
+ * capabilities register, can be used to selectively enable/disable features

WARNING:TYPO_SPELLING: 'compability' may be misspelled - perhaps 'compatibility'?
#953: FILE: drivers/net/netxen/netxen_nic_phan_reg.h:125:
+ * for backward compability
                 ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#956: FILE: drivers/net/netxen/netxen_nic_phan_reg.h:128:
+#define CRB_NIC_CAPABILITIES_FW^I  ^INETXEN_NIC_REG(0x1dc)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#958: FILE: drivers/net/netxen/netxen_nic_phan_reg.h:130:
+#define INTR_SCHEME_PERPORT^I      ^I0x1$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#992: FILE: drivers/net/pcmcia/3c589_cs.c:634:
+    dev_kfree_skb(skb);$

WARNING:LONG_LINE: line length of 228 exceeds 100 columns
#1005: FILE: drivers/net/starfire.c:155:
+#if (defined(__i386__) && defined(CONFIG_HIGHMEM64G)) || defined(__x86_64__) || defined (__ia64__) || defined(__alpha__) || defined(__mips64__) || (defined(__mips__) && defined(CONFIG_HIGHMEM) && defined(CONFIG_64BIT_PHYS_ADDR))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1005: FILE: drivers/net/starfire.c:155:
+#if (defined(__i386__) && defined(CONFIG_HIGHMEM64G)) || defined(__x86_64__) || defined (__ia64__) || defined(__alpha__) || defined(__mips64__) || (defined(__mips__) && defined(CONFIG_HIGHMEM) && defined(CONFIG_64BIT_PHYS_ADDR))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#1005: FILE: drivers/net/starfire.c:155:
+#if (defined(__i386__) && defined(CONFIG_HIGHMEM64G)) || defined(__x86_64__) || defined (__ia64__) || defined(__alpha__) || defined(__mips64__) || (defined(__mips__) && defined(CONFIG_HIGHMEM) && defined(CONFIG_64BIT_PHYS_ADDR))

Architecture specific defines should be avoided wherever
possible.

CHECK:SPACING: No space is necessary after a cast
#1022: FILE: drivers/net/usb/cdc_ether.c:149:
+				acm = (void *) buf;

CHECK:CAMELCASE: Avoid CamelCase: <bmCapabilities>
#1023: FILE: drivers/net/usb/cdc_ether.c:150:
+				if (acm->bmCapabilities) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <WPAenabled>
#1435: FILE: drivers/net/wireless/libertas/assoc.c:355:
+	do_wpa = (assoc_req->secinfo.WPAenabled || assoc_req->secinfo.WPA2enabled);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1442: FILE: drivers/net/wireless/libertas/assoc.c:362:
+	ret = libertas_prepare_and_send_command(priv,
+				    cmd_802_11_enable_rsn,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1458: FILE: drivers/net/wireless/libertas/cmd.c:231:
+	u32 * enable = pdata_buf;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <penableRSN>
#1472: FILE: drivers/net/wireless/libertas/cmd.c:241:
+			penableRSN->enable = cpu_to_le16(cmd_enable_rsn);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1486: FILE: drivers/net/wireless/libertas/cmdresp.c:540:
+static int libertas_ret_802_11_enable_rsn(wlan_private * priv,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1487: FILE: drivers/net/wireless/libertas/cmdresp.c:541:
+                                          struct cmd_ds_command *resp)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1487: FILE: drivers/net/wireless/libertas/cmdresp.c:541:
+                                          struct cmd_ds_command *resp)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1491: FILE: drivers/net/wireless/libertas/cmdresp.c:545:
+	u32 * pdata_buf = adapter->cur_cmd->pdata_buf;

CHECK:SPACING: No space is necessary after a cast
#1497: FILE: drivers/net/wireless/libertas/cmdresp.c:551:
+			*pdata_buf = (u32) le16_to_cpu(enable_rsn->enable);

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1527: FILE: drivers/net/wireless/libertas/hostcmd.h:506:
+} __attribute__ ((packed));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2627: FILE: drivers/net/wireless/libertas/main.c:184:
+		struct device_attribute *attr, char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2637: FILE: drivers/net/wireless/libertas/main.c:201:
+		struct device_attribute *attr, const char * buf, size_t count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2706: FILE: drivers/net/wireless/libertas/scan.c:763:
+	struct bss_descriptor * iter_bss;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2724: FILE: drivers/net/wireless/libertas/scan.c:810:
+	list_for_each_entry (iter_bss, &adapter->network_list, list) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2726: FILE: drivers/net/wireless/libertas/scan.c:812:
+		lbs_deb_scan("Scan:(%02d) " MAC_FMT ", RSSI[%03d], SSID[%s]\n",
+		       i++, MAC_ARG(iter_bss->bssid), (s32) iter_bss->rssi,

CHECK:SPACING: No space is necessary after a cast
#2726: FILE: drivers/net/wireless/libertas/scan.c:812:
+		       i++, MAC_ARG(iter_bss->bssid), (s32) iter_bss->rssi,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000411327.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 38 warnings, 34 checks, 1616 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000411327.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
