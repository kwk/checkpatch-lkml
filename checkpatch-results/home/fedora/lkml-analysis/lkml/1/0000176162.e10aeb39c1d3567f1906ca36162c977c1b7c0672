WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
Subject: [PATCH 1/7] [Target_Core_Mod]: Add SPC-3 PERSISTENT_RESERVE_* Infrastrcture

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#92: FILE: drivers/lio-core/target_core_base.h:274:
+	spinlock_t registration_lock;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#102: FILE: drivers/lio-core/target_core_base.h:285:
+typedef struct t10_pr_registration_s {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#113: FILE: drivers/lio-core/target_core_base.h:296:
+typedef struct t10_pr_reservation_s {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: drivers/lio-core/target_core_base.h:297:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#114: FILE: drivers/lio-core/target_core_base.h:297:
+typedef struct t10_pr_reservation_s {
+	

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#134: FILE: drivers/lio-core/target_core_base.h:631:
+	struct t10_pr_registration_s *dev_pr_res_holder; /* Used for SPC-3 Persistent Reservations */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#158: FILE: drivers/lio-core/target_core_base.h:702:
+	struct t10_pr_registration_s *lun_pr_res_holder; /* Used for SPC-3 Persistent Reservations */

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#170: FILE: drivers/lio-core/target_core_transport.c:209:
+struct kmem_cache *t10_pr_reg_cache = NULL;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#179: FILE: drivers/lio-core/target_core_transport.c:275:
+	if (!(t10_pr_reg_cache = kmem_cache_create("t10_pr_reg_cache",

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#180: FILE: drivers/lio-core/target_core_transport.c:276:
+	if (!(t10_pr_reg_cache = kmem_cache_create("t10_pr_reg_cache",
+			sizeof(t10_pr_registration_t), __alignof__(t10_pr_registration_t),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#182: FILE: drivers/lio-core/target_core_transport.c:278:
+		printk(KERN_ERR "kmem_cache_create() for t10_pr_registration_t failed\n");

WARNING:NEEDLESS_IF: kmem_cache_destroy(NULL) is safe and this check is probably not required
#193: FILE: drivers/lio-core/target_core_transport.c:319:
+	if (t10_pr_reg_cache)
+		kmem_cache_destroy(t10_pr_reg_cache);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#222: FILE: drivers/lio-core/target_core_transport.c:2988:
+^I^I * and queue the response to $FABRIC_MOD.  $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#241: FILE: drivers/lio-core/target_core_transport.c:3008:
+		transport_send_check_condition_and_sense(cmd,
+			cmd->scsi_sense_reason, 0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#296: FILE: drivers/lio-core/target_core_transport.c:6480:
+                transport_send_check_condition_and_sense(cmd, NON_EXISTENT_LUN, 0);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: drivers/lio-core/target_core_transport.c:6480:
+                transport_send_check_condition_and_sense(cmd, NON_EXISTENT_LUN, 0);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#305: FILE: drivers/lio-core/target_core_transport.c:6591:
+extern int transport_send_check_condition_and_sense (se_cmd_t *cmd, u8 reason, int from_transport)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#344: FILE: drivers/lio-core/target_core_transport.c:6705:
+EXPORT_SYMBOL(transport_send_check_condition_and_sense);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#353: FILE: drivers/lio-core/target_core_transport.c:7200:
+			transport_send_check_condition_and_sense(cmd, LOGICAL_UNIT_COMMUNICATION_FAILURE, 0);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#362: FILE: drivers/lio-core/target_core_transport.c:7444:
+				transport_send_check_condition_and_sense(cmd, LOGICAL_UNIT_COMMUNICATION_FAILURE, 0);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#371: FILE: drivers/lio-core/target_core_transport.c:7472:
+			transport_send_check_condition_and_sense(cmd, LOGICAL_UNIT_COMMUNICATION_FAILURE, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#381: FILE: drivers/lio-core/target_core_transport.c:7510:
+			transport_send_check_condition_and_sense(cmd,
+				LOGICAL_UNIT_COMMUNICATION_FAILURE, 0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#420: FILE: drivers/lio-core/target_core_transport.h:196:
+extern int transport_send_check_condition_and_sense (se_cmd_t *, __u8, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#420: FILE: drivers/lio-core/target_core_transport.h:196:
+extern int transport_send_check_condition_and_sense (se_cmd_t *, __u8, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_cmd_t *' should also have an identifier name
#420: FILE: drivers/lio-core/target_core_transport.h:196:
+extern int transport_send_check_condition_and_sense (se_cmd_t *, __u8, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u8' should also have an identifier name
#420: FILE: drivers/lio-core/target_core_transport.h:196:
+extern int transport_send_check_condition_and_sense (se_cmd_t *, __u8, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#420: FILE: drivers/lio-core/target_core_transport.h:196:
+extern int transport_send_check_condition_and_sense (se_cmd_t *, __u8, int);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000176162.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 17 warnings, 6 checks, 325 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000176162.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
