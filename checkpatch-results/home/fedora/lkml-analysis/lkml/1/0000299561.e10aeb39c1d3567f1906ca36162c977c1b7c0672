WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#27: FILE: fs/logfs/logfs.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#28: FILE: fs/logfs/logfs.h:2:
+ * fs/logfs/logfs.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#73: FILE: fs/logfs/logfs.h:47:
+#define LOGFS_LINK_MAX		(1<<30)
                       		  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#73: FILE: fs/logfs/logfs.h:47:
+#define LOGFS_LINK_MAX		(1<<30)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:TYPO_SPELLING: 'creat' may be misspelled - perhaps 'create'?
#282: FILE: fs/logfs/logfs.h:256:
+	struct mutex s_dirop_mutex;		/* for creat/unlink/rename */
 	                           		       ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#319: FILE: fs/logfs/logfs.h:293:
+	struct logfs_journal_entry s_retired[JE_LAST+1]; /* for journal scan */
 	                                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#320: FILE: fs/logfs/logfs.h:294:
+	struct logfs_journal_entry s_speculative[JE_LAST+1]; /* dito */
 	                                                ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse '__i' - possible side-effects?
#375: FILE: fs/logfs/logfs.h:349:
+#define journal_for_each(__i) for (__i = 0; __i < LOGFS_JOURNAL_SEGS; __i++)

CHECK:MACRO_ARG_REUSE: Macro argument reuse '__i' - possible side-effects?
#376: FILE: fs/logfs/logfs.h:350:
+#define for_each_area(__i) for (__i = 0; __i < LOGFS_NO_AREAS; __i++)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#387: FILE: fs/logfs/logfs.h:361:
+int logfs_get_sb_bdev(struct file_system_type *type, int flags,
+		const char *devname, struct vfsmount *mnt);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#396: FILE: fs/logfs/logfs.h:370:
+static inline int logfs_get_sb_bdev(struct file_system_type *type, int flags,
+		const char *devname, struct vfsmount *mnt)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#409: FILE: fs/logfs/logfs.h:383:
+int logfs_get_sb_mtd(struct file_system_type *type, int flags,
+		int mtdnr, struct vfsmount *mnt);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#413: FILE: fs/logfs/logfs.h:387:
+static inline int logfs_get_sb_mtd(struct file_system_type *type, int flags,
+		int mtdnr, struct vfsmount *mnt)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#442: FILE: fs/logfs/logfs.h:416:
+int add_free_segments_from_journal(struct super_block *sb,
+		struct logfs_je_free_segments *segs, int count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#473: FILE: fs/logfs/logfs.h:447:
+void btree_visitor(struct btree_head *head, long opaque,
+		void (*func)(void *elem, long opaque, u64 val));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#475: FILE: fs/logfs/logfs.h:449:
+void btree_grim_visitor(struct btree_head *head, long opaque,
+		void (*func)(void *elem, long opaque, u64 val));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#482: FILE: fs/logfs/logfs.h:456:
+int logfs_inode_write(struct inode *inode, const void *buf, size_t count,
+		loff_t bix, long flags, struct logfs_transaction *ta,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#486: FILE: fs/logfs/logfs.h:460:
+int logfs_write_buf(struct inode *inode, struct page *page,
+		struct logfs_transaction *ta, long flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#488: FILE: fs/logfs/logfs.h:462:
+int logfs_delete(struct inode *inode, pgoff_t index,
+		struct shadow_tree *shadow_tree, struct logfs_transaction *ta);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#490: FILE: fs/logfs/logfs.h:464:
+int logfs_rewrite_block(struct inode *inode, u64 bix, u64 ofs, int level,
+		long flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#492: FILE: fs/logfs/logfs.h:466:
+int logfs_is_valid_block(struct super_block *sb, u64 ofs, u64 ino, u64 pos,
+		u8 level);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#503: FILE: fs/logfs/logfs.h:477:
+int logfs_segment_read(struct inode *inode, struct page *page, u64 ofs, u64 bix,
+		u8 level);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#505: FILE: fs/logfs/logfs.h:479:
+int logfs_segment_write(struct inode *inode, struct page *page,
+		struct logfs_shadow *shadow);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#520: FILE: fs/logfs/logfs.h:494:
+int logfs_get_sb_device(struct file_system_type *type, int flags,
+		struct mtd_inode *mtd, struct block_device *bdev,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#542: FILE: fs/logfs/logfs.h:516:
+	BUG();							\

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#550: FILE: fs/logfs/logfs.h:524:
+	return cpu_to_be32(crc32(~0, data+skip, len-skip));
 	                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#550: FILE: fs/logfs/logfs.h:524:
+	return cpu_to_be32(crc32(~0, data+skip, len-skip));
 	                                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#569: FILE: fs/logfs/logfs.h:543:
+static inline int device_read(struct super_block *sb, u32 segno, u32 ofs,
+		size_t len, void *buf)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000299561.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 24 checks, 555 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000299561.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
