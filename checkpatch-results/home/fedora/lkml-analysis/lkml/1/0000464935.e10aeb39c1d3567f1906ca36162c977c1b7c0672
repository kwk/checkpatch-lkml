CHECK:SPACING: No space is necessary after a cast
#62: FILE: include/asm-x86_64/bitops.h:13:
+#define ADDR [addr] "=m" (*(volatile long *) addr)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#62: FILE: include/asm-x86_64/bitops.h:13:
+#define ADDR [addr] "=m" (*(volatile long *) addr)

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#62: FILE: include/asm-x86_64/bitops.h:13:
+#define ADDR [addr] "=m" (*(volatile long *) addr)

CHECK:SPACING: No space is necessary after a cast
#65: FILE: include/asm-x86_64/bitops.h:15:
+#define ADDR [addr] "+m" (*(volatile long *) addr)

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#65: FILE: include/asm-x86_64/bitops.h:15:
+#define ADDR [addr] "+m" (*(volatile long *) addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#65: FILE: include/asm-x86_64/bitops.h:15:
+#define ADDR [addr] "+m" (*(volatile long *) addr)

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#135: FILE: include/asm-x86_64/bitops.h:113:
+		:[nr] "dIr" (nr));
 		^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#242: FILE: include/asm-x86_64/bitops.h:262:
+		: [addr] "m" (*(volatile long *)addr),

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#252: FILE: include/asm-x86_64/bitops.h:282:
+	asm("bsfq %[val2],%[val] ; cmovz %[max],%[val]" : [val] "=&r" (val) : [val2] "r" (val), [max] "r" (max));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#329: FILE: include/asm-x86_64/processor.h:44:
+#define current_text_addr() ({ void *pc; asm volatile("leaq 1f(%%rip),%[pc]\n1:": [pc] "=r"(pc)); pc; })

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#329: FILE: include/asm-x86_64/processor.h:44:
+#define current_text_addr() ({ void *pc; asm volatile("leaq 1f(%%rip),%[pc]\n1:": [pc] "=r"(pc)); pc; })
                                                                                 ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#388: FILE: include/asm-x86_64/processor.h:491:
+	asm("andq %%rsp,%[ti]; ": [ti] "=r" (ti) : "0" (CURRENT_MASK));	\
 	                        ^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#406: FILE: include/asm-x86_64/semaphore.h:113:
+		:[count] "=m" (sem->count)
 		^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#467: FILE: include/asm-x86_64/signal.h:142:
+^I__asm__("btsq %[sig],%[set]" ^I: [set] "=m"(*set)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#468: FILE: include/asm-x86_64/signal.h:143:
+^I ^I^I^I^I: [sig] "Ir"(_sig - 1)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#468: FILE: include/asm-x86_64/signal.h:143:
+^I ^I^I^I^I: [sig] "Ir"(_sig - 1)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#475: FILE: include/asm-x86_64/signal.h:149:
+^I__asm__("btrq %[sig],%[set]" ^I: [set] "=m"(*set)$

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#487: FILE: include/asm-x86_64/signal.h:163:
+	__asm__("btq  %[sig],%[set]  \n\t"

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#491: FILE: include/asm-x86_64/signal.h:167:
+		  [sig] "Ir"(_sig-1)
 		                 ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#556: FILE: include/asm-x86_64/spinlock.h:64:
+		: [slock] "+m" (lock->slock) : [flags] "r" ((unsigned)flags) : "memory");

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#567: FILE: include/asm-x86_64/spinlock.h:74:
+		:[oldval] "=q" (oldval), [slock] "=m" (lock->slock)
 		^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000464935.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 10 warnings, 3 checks, 581 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000464935.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
