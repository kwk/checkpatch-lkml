WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#53: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#58: FILE: include/linux/netfilter/xt_ipvs.h:1:
+#ifndef _XT_IPVS_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'u_int16_t'
#82: FILE: include/linux/netfilter/xt_ipvs.h:25:
+	u_int16_t		l4proto;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'u_int16_t'
#83: FILE: include/linux/netfilter/xt_ipvs.h:26:
+	u_int16_t		fwd_method;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'u_int8_t'
#85: FILE: include/linux/netfilter/xt_ipvs.h:28:
+	u_int8_t invert;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'u_int8_t'
#86: FILE: include/linux/netfilter/xt_ipvs.h:29:
+	u_int8_t bitmask;

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#98: FILE: net/netfilter/Kconfig:681:
+config NETFILTER_XT_MATCH_IPVS
+	tristate '"ipvs" match support'
+	depends on NETFILTER_ADVANCED
+	help
+	  This option allows you to match against ipvs properties of a packet.
+
+          To compile it as a module, choos M here.  If unsure, say N.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:TYPO_SPELLING: 'choos' may be misspelled - perhaps 'choose'?
#104: FILE: net/netfilter/Kconfig:687:
+          To compile it as a module, choos M here.  If unsure, say N.
                                      ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#139: FILE: net/netfilter/xt_ipvs.c:1:
+/*

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'u_int8_t'
#184: FILE: net/netfilter/xt_ipvs.c:46:
+	const u_int8_t family = par->family;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iph.protocol == data->l4proto'
#220: FILE: net/netfilter/xt_ipvs.c:82:
+		if ((iph.protocol == data->l4proto)
+		    ^ !(data->invert & XT_IPVS_PROTO)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#233: FILE: net/netfilter/xt_ipvs.c:95:
+	/*
+	 * Check if the packet belongs to an existing entry

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#243: FILE: net/netfilter/xt_ipvs.c:105:
+	/*
+	 * We found a connection, i.e. ct != 0, make sure to call

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cp->vport == data->vport'
#248: FILE: net/netfilter/xt_ipvs.c:110:
+		if ((cp->vport == data->vport)
+		    ^ !(data->invert & XT_IPVS_VPORT)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#254: FILE: net/netfilter/xt_ipvs.c:116:
+	if (data->bitmask & XT_IPVS_DIR) {
+		/* TODO: implement */
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000092119.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 7 checks, 231 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000092119.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
