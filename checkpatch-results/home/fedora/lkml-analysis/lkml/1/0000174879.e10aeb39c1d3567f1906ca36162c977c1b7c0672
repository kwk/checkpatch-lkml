WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#66: FILE: arch/x86/include/asm/paravirt.h:391:
+unsigned paravirt_patch_ident_32(void *insnbuf, unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#66: FILE: arch/x86/include/asm/paravirt.h:391:
+unsigned paravirt_patch_ident_32(void *insnbuf, unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#67: FILE: arch/x86/include/asm/paravirt.h:392:
+unsigned paravirt_patch_ident_64(void *insnbuf, unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#67: FILE: arch/x86/include/asm/paravirt.h:392:
+unsigned paravirt_patch_ident_64(void *insnbuf, unsigned len);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#75: FILE: arch/x86/include/asm/paravirt.h:1376:
+u32 _paravirt_ident_32(u32);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#76: FILE: arch/x86/include/asm/paravirt.h:1377:
+u64 _paravirt_ident_64(u64);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#134: FILE: arch/x86/kernel/paravirt.c:404:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#137: FILE: arch/x86/kernel/paravirt.c:407:
+#define paravirt_native_make_pte	(make_pte_t *)_paravirt_ident_32

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#138: FILE: arch/x86/kernel/paravirt.c:408:
+#define paravirt_native_pte_val		(pte_val_t *)_paravirt_ident_32

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#140: FILE: arch/x86/kernel/paravirt.c:410:
+#define paravirt_native_make_pmd	(make_pmd_t *)_paravirt_ident_32

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#141: FILE: arch/x86/kernel/paravirt.c:411:
+#define paravirt_native_pmd_val		(pmd_val_t *)_paravirt_ident_32

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#143: FILE: arch/x86/kernel/paravirt.c:413:
+#define paravirt_native_make_pud	(make_pud_t *)_paravirt_ident_32

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#144: FILE: arch/x86/kernel/paravirt.c:414:
+#define paravirt_native_pud_val		(pud_val_t *)_paravirt_ident_32

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#146: FILE: arch/x86/kernel/paravirt.c:416:
+#define paravirt_native_make_pgd	(make_pgd_t *)_paravirt_ident_32

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#147: FILE: arch/x86/kernel/paravirt.c:417:
+#define paravirt_native_pgd_val		(pgd_val_t *)_paravirt_ident_32

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#150: FILE: arch/x86/kernel/paravirt.c:420:
+#define paravirt_native_make_pte	(make_pte_t *)_paravirt_ident_64

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#151: FILE: arch/x86/kernel/paravirt.c:421:
+#define paravirt_native_pte_val		(pte_val_t *)_paravirt_ident_64

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#153: FILE: arch/x86/kernel/paravirt.c:423:
+#define paravirt_native_make_pmd	(make_pmd_t *)_paravirt_ident_64

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#154: FILE: arch/x86/kernel/paravirt.c:424:
+#define paravirt_native_pmd_val		(pmd_val_t *)_paravirt_ident_64

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#156: FILE: arch/x86/kernel/paravirt.c:426:
+#define paravirt_native_make_pud	(make_pud_t *)_paravirt_ident_64

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#157: FILE: arch/x86/kernel/paravirt.c:427:
+#define paravirt_native_pud_val		(pud_val_t *)_paravirt_ident_64

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#159: FILE: arch/x86/kernel/paravirt.c:429:
+#define paravirt_native_make_pgd	(make_pgd_t *)_paravirt_ident_64

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#160: FILE: arch/x86/kernel/paravirt.c:430:
+#define paravirt_native_pgd_val		(pgd_val_t *)_paravirt_ident_64

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#203: FILE: arch/x86/kernel/paravirt_patch_32.c:15:
+unsigned paravirt_patch_ident_32(void *insnbuf, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#203: FILE: arch/x86/kernel/paravirt_patch_32.c:15:
+unsigned paravirt_patch_ident_32(void *insnbuf, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#209: FILE: arch/x86/kernel/paravirt_patch_32.c:21:
+unsigned paravirt_patch_ident_64(void *insnbuf, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#209: FILE: arch/x86/kernel/paravirt_patch_32.c:21:
+unsigned paravirt_patch_ident_64(void *insnbuf, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#228: FILE: arch/x86/kernel/paravirt_patch_64.c:25:
+unsigned paravirt_patch_ident_32(void *insnbuf, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#228: FILE: arch/x86/kernel/paravirt_patch_64.c:25:
+unsigned paravirt_patch_ident_32(void *insnbuf, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#234: FILE: arch/x86/kernel/paravirt_patch_64.c:31:
+unsigned paravirt_patch_ident_64(void *insnbuf, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#234: FILE: arch/x86/kernel/paravirt_patch_64.c:31:
+unsigned paravirt_patch_ident_64(void *insnbuf, unsigned len)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000174879.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 16 errors, 14 warnings, 1 checks, 164 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000174879.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
