WARNING:UNKNOWN_COMMIT_ID: Unknown commit id 'a19b89cad51b6f0da8f4bafdfdcfb10264cbcdea', maybe rebased or not pulled?
#82: 
commit a19b89cad51b6f0da8f4bafdfdcfb10264cbcdea

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#90: 
    Signed-off-by: Jason Uhlenkott <juhlenko@akamai.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#91: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#101: 
    Signed-off-by: J. Bruce Fields <bfields@citi.umich.edu>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#102: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#102: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#114: 
    Signed-off-by: J. Bruce Fields <bfields@citi.umich.edu>

WARNING:BAD_SIGN_OFF: Duplicate signature
#114: 
    Signed-off-by: J. Bruce Fields <bfields@citi.umich.edu>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#115: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#115: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#126: 
    Signed-off-by: J. Bruce Fields <bfields@citi.umich.edu>

WARNING:BAD_SIGN_OFF: Duplicate signature
#126: 
    Signed-off-by: J. Bruce Fields <bfields@citi.umich.edu>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#127: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#127: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#140: 
    Signed-off-by: "J. Bruce Fields" <bfields@citi.umich.edu>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#141: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#141: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#230: 
    Signed-off-by: Neil Brown <neilb@suse.de>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#231: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#231: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#262: 
    Signed-off-by: Neil Brown <neilb@suse.de>

WARNING:BAD_SIGN_OFF: Duplicate signature
#262: 
    Signed-off-by: Neil Brown <neilb@suse.de>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#263: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#263: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#278: 
    Signed-off-by: Steve Dickson <steved@redhat.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#279: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#279: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#287: 
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#288: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#288: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#298: 
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#298: 
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#299: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#299: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#310: 
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#310: 
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#311: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#311: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#323: 
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#323: 
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#324: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#324: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#336: 
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#336: 
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#337: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#337: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#354: 
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#354: 
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#355: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#355: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#372: 
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#372: 
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#373: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#373: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#395: 
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#395: 
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#396: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#396: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#412: 
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#412: 
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#413: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#413: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#421: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#421: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#431: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#431: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#439: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#439: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#457: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#457: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#468: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#468: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#476: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#476: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#484: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#484: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#495: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#495: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#507: 
    Signed-off-by: Amnon Aaronsohn <amnonaar@gmail.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Cc:
#508: 
    Cc: Trond Myklebust <trond.myklebust@fys.uio.no>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#509: 
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#510: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#510: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#521: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#521: 
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#599: FILE: fs/lockd/xdr.c:522:
+#define NLM_caller_sz		1+XDR_QUADLEN(NLMCLNT_OHSIZE)
                      		 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#599: FILE: fs/lockd/xdr.c:522:
+#define NLM_caller_sz		1+XDR_QUADLEN(NLMCLNT_OHSIZE)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#600: FILE: fs/lockd/xdr.c:523:
+#define NLM_owner_sz		1+XDR_QUADLEN(NLMCLNT_OHSIZE)
                     		 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#600: FILE: fs/lockd/xdr.c:523:
+#define NLM_owner_sz		1+XDR_QUADLEN(NLMCLNT_OHSIZE)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#604: FILE: fs/lockd/xdr.c:525:
+#define NLM_lock_sz		3+NLM_caller_sz+NLM_owner_sz+NLM_fhandle_sz
                    		 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#604: FILE: fs/lockd/xdr.c:525:
+#define NLM_lock_sz		3+NLM_caller_sz+NLM_owner_sz+NLM_fhandle_sz
                    		               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#604: FILE: fs/lockd/xdr.c:525:
+#define NLM_lock_sz		3+NLM_caller_sz+NLM_owner_sz+NLM_fhandle_sz
                    		                            ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#604: FILE: fs/lockd/xdr.c:525:
+#define NLM_lock_sz		3+NLM_caller_sz+NLM_owner_sz+NLM_fhandle_sz

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#605: FILE: fs/lockd/xdr.c:526:
+#define NLM_holder_sz		4+NLM_owner_sz
                      		 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#605: FILE: fs/lockd/xdr.c:526:
+#define NLM_holder_sz		4+NLM_owner_sz

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#654: FILE: fs/lockd/xdr4.c:532:
+#define NLM4_caller_sz		1+XDR_QUADLEN(NLMCLNT_OHSIZE)
                       		 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#654: FILE: fs/lockd/xdr4.c:532:
+#define NLM4_caller_sz		1+XDR_QUADLEN(NLMCLNT_OHSIZE)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#655: FILE: fs/lockd/xdr4.c:533:
+#define NLM4_owner_sz		1+XDR_QUADLEN(NLMCLNT_OHSIZE)
                      		 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#655: FILE: fs/lockd/xdr4.c:533:
+#define NLM4_owner_sz		1+XDR_QUADLEN(NLMCLNT_OHSIZE)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#659: FILE: fs/lockd/xdr4.c:535:
+#define NLM4_lock_sz		5+NLM4_caller_sz+NLM4_owner_sz+NLM4_fhandle_sz
                     		 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#659: FILE: fs/lockd/xdr4.c:535:
+#define NLM4_lock_sz		5+NLM4_caller_sz+NLM4_owner_sz+NLM4_fhandle_sz
                     		                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#659: FILE: fs/lockd/xdr4.c:535:
+#define NLM4_lock_sz		5+NLM4_caller_sz+NLM4_owner_sz+NLM4_fhandle_sz
                     		                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#659: FILE: fs/lockd/xdr4.c:535:
+#define NLM4_lock_sz		5+NLM4_caller_sz+NLM4_owner_sz+NLM4_fhandle_sz

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#660: FILE: fs/lockd/xdr4.c:536:
+#define NLM4_holder_sz		6+NLM4_owner_sz
                       		 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#660: FILE: fs/lockd/xdr4.c:536:
+#define NLM4_holder_sz		6+NLM4_owner_sz

CHECK:BRACES: braces {} should be used on all arms of this statement
#1164: FILE: fs/nfs/pagelist.c:287:
+	if (desc->pg_count != 0) {
[...]
+		prev = nfs_list_entry(desc->pg_list.prev);
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1185: FILE: fs/nfs/pagelist.c:305:
+	} else

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#1327: FILE: fs/nfs/read.c:236:
+static int nfs_pagein_multi(struct inode *inode, struct list_head *head, unsigned int npages, size_t count, int flags)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#1381: FILE: fs/nfs/read.c:293:
+static int nfs_pagein_one(struct inode *inode, struct list_head *head, unsigned int npages, size_t count, int flags)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1618: FILE: fs/nfs/write.c:294:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1621: FILE: fs/nfs/write.c:297:
+	radix_tree_tag_set(&nfsi->nfs_page_tree, req->wb_index,
+			NFS_PAGE_TAG_WRITEBACK);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1642: FILE: fs/nfs/write.c:318:
+	if (wbc->for_writepages)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1644: FILE: fs/nfs/write.c:320:
+	else {

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#1743: FILE: fs/nfs/write.c:587:
+static inline int nfs_scan_commit(struct inode *inode, struct list_head *dst, pgoff_t idx_start, unsigned int npages)

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#1799: FILE: fs/nfs/write.c:834:
+static int nfs_flush_multi(struct inode *inode, struct list_head *head, unsigned int npages, size_t count, int how)

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#1853: FILE: fs/nfs/write.c:899:
+static int nfs_flush_one(struct inode *inode, struct list_head *head, unsigned int npages, size_t count, int how)

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#2060: FILE: fs/nfs/write.c:1432:
+	spinlock_t *req_lock;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2100: FILE: fs/nfsd/nfs4callback.c:323:
+        .p_arglen = NFS4_##argtype##_sz,                                \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2100: FILE: fs/nfsd/nfs4callback.c:323:
+        .p_arglen = NFS4_##argtype##_sz,                                \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2101: FILE: fs/nfsd/nfs4callback.c:324:
+        .p_replen = NFS4_##restype##_sz,                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2101: FILE: fs/nfsd/nfs4callback.c:324:
+        .p_replen = NFS4_##restype##_sz,                                \$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2127: FILE: include/linux/nfs_fs.h:458:
+extern struct nfs_write_data *nfs_writedata_alloc(unsigned int npages);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2136: FILE: include/linux/nfs_fs.h:472:
+extern struct nfs_read_data *nfs_readdata_alloc(unsigned int npages);

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#2187: FILE: include/linux/nfs_page.h:58:
+	int			(*pg_doio)(struct inode *, struct list_head *, unsigned int, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#2187: FILE: include/linux/nfs_page.h:58:
+	int			(*pg_doio)(struct inode *, struct list_head *, unsigned int, size_t, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct list_head *' should also have an identifier name
#2187: FILE: include/linux/nfs_page.h:58:
+	int			(*pg_doio)(struct inode *, struct list_head *, unsigned int, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#2187: FILE: include/linux/nfs_page.h:58:
+	int			(*pg_doio)(struct inode *, struct list_head *, unsigned int, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#2187: FILE: include/linux/nfs_page.h:58:
+	int			(*pg_doio)(struct inode *, struct list_head *, unsigned int, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2187: FILE: include/linux/nfs_page.h:58:
+	int			(*pg_doio)(struct inode *, struct list_head *, unsigned int, size_t, int);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2188: FILE: include/linux/nfs_page.h:59:
+^Iint ^I^I^Ipg_ioflags;$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2207: FILE: include/linux/nfs_page.h:76:
+extern	void nfs_pageio_init(struct nfs_pageio_descriptor *desc,

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#2209: FILE: include/linux/nfs_page.h:78:
+			     int (*doio)(struct inode *, struct list_head *, unsigned int, size_t, int),

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#2209: FILE: include/linux/nfs_page.h:78:
+			     int (*doio)(struct inode *, struct list_head *, unsigned int, size_t, int),

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct list_head *' should also have an identifier name
#2209: FILE: include/linux/nfs_page.h:78:
+			     int (*doio)(struct inode *, struct list_head *, unsigned int, size_t, int),

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#2209: FILE: include/linux/nfs_page.h:78:
+			     int (*doio)(struct inode *, struct list_head *, unsigned int, size_t, int),

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#2209: FILE: include/linux/nfs_page.h:78:
+			     int (*doio)(struct inode *, struct list_head *, unsigned int, size_t, int),

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2209: FILE: include/linux/nfs_page.h:78:
+			     int (*doio)(struct inode *, struct list_head *, unsigned int, size_t, int),

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2212: FILE: include/linux/nfs_page.h:81:
+extern	int nfs_pageio_add_request(struct nfs_pageio_descriptor *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfs_pageio_descriptor *' should also have an identifier name
#2212: FILE: include/linux/nfs_page.h:81:
+extern	int nfs_pageio_add_request(struct nfs_pageio_descriptor *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nfs_page *' should also have an identifier name
#2212: FILE: include/linux/nfs_page.h:81:
+extern	int nfs_pageio_add_request(struct nfs_pageio_descriptor *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2214: FILE: include/linux/nfs_page.h:83:
+extern	void nfs_pageio_complete(struct nfs_pageio_descriptor *desc);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#2238: FILE: include/linux/sunrpc/clnt.h:125:
+int		rpcb_register(u32, u32, int, unsigned short, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#2238: FILE: include/linux/sunrpc/clnt.h:125:
+int		rpcb_register(u32, u32, int, unsigned short, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2238: FILE: include/linux/sunrpc/clnt.h:125:
+int		rpcb_register(u32, u32, int, unsigned short, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned short' should also have an identifier name
#2238: FILE: include/linux/sunrpc/clnt.h:125:
+int		rpcb_register(u32, u32, int, unsigned short, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#2238: FILE: include/linux/sunrpc/clnt.h:125:
+int		rpcb_register(u32, u32, int, unsigned short, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rpc_task *' should also have an identifier name
#2239: FILE: include/linux/sunrpc/clnt.h:126:
+void		rpcb_getport(struct rpc_task *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sockaddr_in *' should also have an identifier name
#2248: FILE: include/linux/sunrpc/clnt.h:148:
+int		rpcb_getport_external(struct sockaddr_in *, __u32, __u32, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u32' should also have an identifier name
#2248: FILE: include/linux/sunrpc/clnt.h:148:
+int		rpcb_getport_external(struct sockaddr_in *, __u32, __u32, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u32' should also have an identifier name
#2248: FILE: include/linux/sunrpc/clnt.h:148:
+int		rpcb_getport_external(struct sockaddr_in *, __u32, __u32, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2248: FILE: include/linux/sunrpc/clnt.h:148:
+int		rpcb_getport_external(struct sockaddr_in *, __u32, __u32, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#2289: FILE: include/linux/sunrpc/sched.h:267:
+void		rpc_free(void *);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2429: FILE: net/sunrpc/clnt.c:762:
+		BUG_ON(proc->p_arglen == 0);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "proc->p_decode"
#2430: FILE: net/sunrpc/clnt.c:763:
+		if (proc->p_decode != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2431: FILE: net/sunrpc/clnt.c:764:
+			BUG_ON(proc->p_replen == 0);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2436: FILE: net/sunrpc/clnt.c:768:
+	/*
+	 * Calculate the size (in quads) of the RPC call

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "req->rq_buffer"
#2447: FILE: net/sunrpc/clnt.c:779:
+	if (req->rq_buffer != NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2510: FILE: net/sunrpc/clnt.c:906:
+		dprintk("RPC: %5u remote rpcbind version unavailable, retrying\n",
 				task->tk_pid);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#2519: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2913: FILE: net/sunrpc/rpcb_clnt.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2965: FILE: net/sunrpc/rpcb_clnt.c:53:
+/*
+ * r_addr

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#3004: FILE: net/sunrpc/rpcb_clnt.c:92:
+/*
+ * r_netid

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#3024: FILE: net/sunrpc/rpcb_clnt.c:112:
+/*
+ * r_owner

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#3033: FILE: net/sunrpc/rpcb_clnt.c:121:
+extern struct rpc_program	rpcb_program;

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#3036: FILE: net/sunrpc/rpcb_clnt.c:124:
+	struct rpc_xprt *	r_xprt;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo *			bar" should be "foo *bar"
#3042: FILE: net/sunrpc/rpcb_clnt.c:130:
+	char *			r_netid;

ERROR:POINTER_LOCATION: "foo *			bar" should be "foo *bar"
#3044: FILE: net/sunrpc/rpcb_clnt.c:132:
+	char *			r_owner;

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#3052: FILE: net/sunrpc/rpcb_clnt.c:140:
+	struct rpc_procinfo *	rpc_proc;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3089: FILE: net/sunrpc/rpcb_clnt.c:177:
+static struct rpc_clnt *rpcb_create(char *hostname, struct sockaddr *srvaddr,
+					int proto, int version, int privileged)

WARNING:SPLIT_STRING: quoted string split across lines
#3143: FILE: net/sunrpc/rpcb_clnt.c:231:
+	dprintk("RPC:       %sregistering (%u, %u, %d, %u) with local "
+			"rpcbind\n", (port ? "" : "un"),

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#3146: FILE: net/sunrpc/rpcb_clnt.c:234:
+	rpcb_clnt = rpcb_create("localhost", (struct sockaddr *) &sin,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3147: FILE: net/sunrpc/rpcb_clnt.c:235:
+	rpcb_clnt = rpcb_create("localhost", (struct sockaddr *) &sin,
+					IPPROTO_UDP, 2, 1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3154: FILE: net/sunrpc/rpcb_clnt.c:242:
+		printk(KERN_WARNING "RPC: failed to contact local rpcbind "

WARNING:SPLIT_STRING: quoted string split across lines
#3155: FILE: net/sunrpc/rpcb_clnt.c:243:
+		printk(KERN_WARNING "RPC: failed to contact local rpcbind "
+				"server (errno %d).\n", -error);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3175: FILE: net/sunrpc/rpcb_clnt.c:263:
+int rpcb_getport_external(struct sockaddr_in *sin, __u32 prog,
+				__u32 vers, int prot)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rpcb_getport_external', this function's name, in a string
#3192: FILE: net/sunrpc/rpcb_clnt.c:280:
+	dprintk("RPC:       rpcb_getport_external(%u.%u.%u.%u, %u, %u, %d)\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3193: FILE: net/sunrpc/rpcb_clnt.c:281:
+	dprintk("RPC:       rpcb_getport_external(%u.%u.%u.%u, %u, %u, %d)\n",
+			NIPQUAD(sin->sin_addr.s_addr), prog, vers, prot);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rpcb_getport', this function's name, in a string
#3229: FILE: net/sunrpc/rpcb_clnt.c:317:
+	dprintk("RPC: %5u rpcb_getport(%s, %u, %u, %d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3230: FILE: net/sunrpc/rpcb_clnt.c:318:
+	dprintk("RPC: %5u rpcb_getport(%s, %u, %u, %d)\n",
+			task->tk_pid, clnt->cl_server,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3234: FILE: net/sunrpc/rpcb_clnt.c:322:
+	BUG_ON(clnt->cl_parent != clnt);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rpcb_getport', this function's name, in a string
#3238: FILE: net/sunrpc/rpcb_clnt.c:326:
+		dprintk("RPC: %5u rpcb_getport waiting for another binder\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3239: FILE: net/sunrpc/rpcb_clnt.c:327:
+		dprintk("RPC: %5u rpcb_getport waiting for another binder\n",
+				task->tk_pid);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3244: FILE: net/sunrpc/rpcb_clnt.c:332:
+	 * rpcb_getport_done completes before we return from rpc_run_task */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rpcb_getport', this function's name, in a string
#3250: FILE: net/sunrpc/rpcb_clnt.c:338:
+		dprintk("RPC: %5u rpcb_getport already bound\n", task->tk_pid);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rpcb_next_version[xprt->bind_index].rpc_proc"
#3254: FILE: net/sunrpc/rpcb_clnt.c:342:
+	if (rpcb_next_version[xprt->bind_index].rpc_proc == NULL) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rpcb_getport', this function's name, in a string
#3257: FILE: net/sunrpc/rpcb_clnt.c:345:
+		dprintk("RPC: %5u rpcb_getport no more getport versions "

WARNING:SPLIT_STRING: quoted string split across lines
#3258: FILE: net/sunrpc/rpcb_clnt.c:346:
+		dprintk("RPC: %5u rpcb_getport no more getport versions "
+				"available\n", task->tk_pid);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rpcb_getport', this function's name, in a string
#3263: FILE: net/sunrpc/rpcb_clnt.c:351:
+	dprintk("RPC: %5u rpcb_getport trying rpcbind version %u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3264: FILE: net/sunrpc/rpcb_clnt.c:352:
+	dprintk("RPC: %5u rpcb_getport trying rpcbind version %u\n",
+			task->tk_pid, bind_version);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*map)...) over kzalloc(sizeof(struct rpcbind_args)...)
#3266: FILE: net/sunrpc/rpcb_clnt.c:354:
+	map = kzalloc(sizeof(struct rpcbind_args), GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rpcb_getport', this function's name, in a string
#3269: FILE: net/sunrpc/rpcb_clnt.c:357:
+		dprintk("RPC: %5u rpcb_getport no memory available\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3270: FILE: net/sunrpc/rpcb_clnt.c:358:
+		dprintk("RPC: %5u rpcb_getport no memory available\n",
+				task->tk_pid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3281: FILE: net/sunrpc/rpcb_clnt.c:369:
+	memcpy(&map->r_addr, rpc_peeraddr2str(clnt, RPC_DISPLAY_ADDR),
+			sizeof(map->r_addr));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rpcb_getport', this function's name, in a string
#3288: FILE: net/sunrpc/rpcb_clnt.c:376:
+		dprintk("RPC: %5u rpcb_getport rpcb_create failed, error %ld\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3289: FILE: net/sunrpc/rpcb_clnt.c:377:
+		dprintk("RPC: %5u rpcb_getport rpcb_create failed, error %ld\n",
+				task->tk_pid, PTR_ERR(rpcb_clnt));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rpcb_getport', this function's name, in a string
#3296: FILE: net/sunrpc/rpcb_clnt.c:384:
+		dprintk("RPC: %5u rpcb_getport rpc_run_task failed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3297: FILE: net/sunrpc/rpcb_clnt.c:385:
+		dprintk("RPC: %5u rpcb_getport rpc_run_task failed\n",
+				task->tk_pid);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#3315: FILE: net/sunrpc/rpcb_clnt.c:403:
+/*
+ * Rpcbind child task calls this callback via tk_exit.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rpcb_getport_done', this function's name, in a string
#3341: FILE: net/sunrpc/rpcb_clnt.c:429:
+	dprintk("RPC: %5u rpcb_getport_done(status %d, port %u)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3342: FILE: net/sunrpc/rpcb_clnt.c:430:
+	dprintk("RPC: %5u rpcb_getport_done(status %d, port %u)\n",
+			child->tk_pid, status, map->r_port);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rpcb_encode_mapping', this function's name, in a string
#3350: FILE: net/sunrpc/rpcb_clnt.c:438:
+	dprintk("RPC:       rpcb_encode_mapping(%u, %u, %d, %u)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3351: FILE: net/sunrpc/rpcb_clnt.c:439:
+	dprintk("RPC:       rpcb_encode_mapping(%u, %u, %d, %u)\n",
+			rpcb->r_prog, rpcb->r_vers, rpcb->r_prot, rpcb->r_port);

CHECK:SPACING: No space is necessary after a cast
#3364: FILE: net/sunrpc/rpcb_clnt.c:452:
+	*portp = (unsigned short) ntohl(*p++);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rpcb_decode_getport', this function's name, in a string
#3365: FILE: net/sunrpc/rpcb_clnt.c:453:
+	dprintk("RPC:      rpcb_decode_getport result %u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3366: FILE: net/sunrpc/rpcb_clnt.c:454:
+	dprintk("RPC:      rpcb_decode_getport result %u\n",
+			*portp);

CHECK:SPACING: No space is necessary after a cast
#3373: FILE: net/sunrpc/rpcb_clnt.c:461:
+	*boolp = (unsigned int) ntohl(*p++);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rpcb_decode_set', this function's name, in a string
#3374: FILE: net/sunrpc/rpcb_clnt.c:462:
+	dprintk("RPC:      rpcb_decode_set result %u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3375: FILE: net/sunrpc/rpcb_clnt.c:463:
+	dprintk("RPC:      rpcb_decode_set result %u\n",
+			*boolp);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rpcb_encode_getaddr', this function's name, in a string
#3382: FILE: net/sunrpc/rpcb_clnt.c:470:
+	dprintk("RPC:       rpcb_encode_getaddr(%u, %u, %s)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3383: FILE: net/sunrpc/rpcb_clnt.c:471:
+	dprintk("RPC:       rpcb_encode_getaddr(%u, %u, %s)\n",
+			rpcb->r_prog, rpcb->r_vers, rpcb->r_addr);

CHECK:SPACING: No space is necessary after a cast
#3403: FILE: net/sunrpc/rpcb_clnt.c:491:
+	addr_len = (unsigned int) ntohl(*p++);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rpcb_decode_getaddr', this function's name, in a string
#3407: FILE: net/sunrpc/rpcb_clnt.c:495:
+	dprintk("RPC:       rpcb_decode_getaddr returned string: '%s'\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3408: FILE: net/sunrpc/rpcb_clnt.c:496:
+	dprintk("RPC:       rpcb_decode_getaddr returned string: '%s'\n",
+			(char *) p);

CHECK:SPACING: No space is necessary after a cast
#3408: FILE: net/sunrpc/rpcb_clnt.c:496:
+			(char *) p);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#3422: FILE: net/sunrpc/rpcb_clnt.c:510:
+				val = first = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rpcb_decode_getaddr', this function's name, in a string
#3431: FILE: net/sunrpc/rpcb_clnt.c:519:
+	dprintk("RPC:       rpcb_decode_getaddr port=%u\n", *portp);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3441: FILE: net/sunrpc/rpcb_clnt.c:529:
+#define RPCB_netid_sz		(1+XDR_QUADLEN(RPCB_MAXNETIDLEN))
                      		  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3442: FILE: net/sunrpc/rpcb_clnt.c:530:
+#define RPCB_addr_sz		(1+XDR_QUADLEN(RPCB_MAXADDRLEN))
                     		  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3443: FILE: net/sunrpc/rpcb_clnt.c:531:
+#define RPCB_ownerstring_sz	(1+XDR_QUADLEN(RPCB_MAXOWNERLEN))
                            	  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3445: FILE: net/sunrpc/rpcb_clnt.c:533:
+#define RPCB_mappingargs_sz	RPCB_program_sz+RPCB_version_sz+	\
                            	               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxE)
#3445: FILE: net/sunrpc/rpcb_clnt.c:533:
+#define RPCB_mappingargs_sz	RPCB_program_sz+RPCB_version_sz+	\
                            	                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3445: FILE: net/sunrpc/rpcb_clnt.c:533:
+#define RPCB_mappingargs_sz	RPCB_program_sz+RPCB_version_sz+	\
+				RPCB_protocol_sz+RPCB_port_sz

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3446: FILE: net/sunrpc/rpcb_clnt.c:534:
+				RPCB_protocol_sz+RPCB_port_sz
 				                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3447: FILE: net/sunrpc/rpcb_clnt.c:535:
+#define RPCB_getaddrargs_sz	RPCB_program_sz+RPCB_version_sz+	\
                            	               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxE)
#3447: FILE: net/sunrpc/rpcb_clnt.c:535:
+#define RPCB_getaddrargs_sz	RPCB_program_sz+RPCB_version_sz+	\
                            	                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3447: FILE: net/sunrpc/rpcb_clnt.c:535:
+#define RPCB_getaddrargs_sz	RPCB_program_sz+RPCB_version_sz+	\
+				RPCB_netid_sz+RPCB_addr_sz+		\
+				RPCB_ownerstring_sz

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3448: FILE: net/sunrpc/rpcb_clnt.c:536:
+				RPCB_netid_sz+RPCB_addr_sz+		\
 				             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxE)
#3448: FILE: net/sunrpc/rpcb_clnt.c:536:
+				RPCB_netid_sz+RPCB_addr_sz+		\
 				                          ^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#3455: FILE: net/sunrpc/rpcb_clnt.c:543:
+/*
+ * Note that RFC 1833 does not put any size restrictions on the

CHECK:SPACING: No space is necessary after a cast
#3463: FILE: net/sunrpc/rpcb_clnt.c:551:
+		.p_encode	= (kxdrproc_t) rpcb_encode_##argtype,	\

CHECK:SPACING: No space is necessary after a cast
#3464: FILE: net/sunrpc/rpcb_clnt.c:552:
+		.p_decode	= (kxdrproc_t) rpcb_decode_##restype,	\

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#3473: FILE: net/sunrpc/rpcb_clnt.c:561:
+/*
+ * Not all rpcbind procedures described in RFC 1833 are implemented

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3589: FILE: net/sunrpc/sched.c:767:
+	dprintk("RPC: %5u allocated buffer of size %u at %p\n",
+			task->tk_pid, size, buf);

CHECK:SPACING: No space is necessary after a cast
#3590: FILE: net/sunrpc/sched.c:768:
+	return (void *) ++buf;

CHECK:SPACING: No space is necessary after a cast
#3603: FILE: net/sunrpc/sched.c:778:
+	size_t size, *buf = (size_t *) buffer;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3619: FILE: net/sunrpc/sched.c:786:
+	dprintk("RPC:       freeing buffer of size %u at %p\n",
+			size, buf);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000437026.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 16 errors, 153 warnings, 67 checks, 2512 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000437026.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
