WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#49: FILE: drivers/ata/Kconfig:586:
+config PATA_BF54X
+	tristate "Blackfin 54x ATAPI support"
+	depends on BF542 || BF548 || BF549
+	help
+	  This option enables support for the built-in ATAPI controller on
+	  Blackfin 54x family chips.
+
+	  If unsure, say N.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#58: FILE: drivers/ata/Kconfig:595:
+choice
+	prompt "Blackfin 54x ATAPI mode"
+	depends on PATA_BF54X
+	default PATA_BF54X_DMA
+	help
+	  This option selects bf54x ATAPI controller working mode.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#65: FILE: drivers/ata/Kconfig:602:
+config PATA_BF54X_PIO
+	bool "PIO mode"
+	help
+	  Blackfin ATAPI controller works under PIO mode.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#70: FILE: drivers/ata/Kconfig:607:
+config PATA_BF54X_DMA
+	bool "DMA mode"
+	help
+	  Blackfin ATAPI controller works under DMA mode.
+

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#91: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#96: FILE: drivers/ata/pata_bf54x.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#97: FILE: drivers/ata/pata_bf54x.c:2:
+ * File:         drivers/ata/pata_bf54x.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#121: FILE: drivers/ata/pata_bf54x.c:26:
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:INCLUDE_LINUX: Use #include <linux/gpio.h> instead of <asm/gpio.h>
#135: FILE: drivers/ata/pata_bf54x.c:40:
+#include <asm/gpio.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#170: FILE: drivers/ata/pata_bf54x.c:75:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#171: FILE: drivers/ata/pata_bf54x.c:76:
+#define ATAPI_GET_CONTROL(base)\
+	bfin_read16(base + ATAPI_OFFSET_CONTROL)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#173: FILE: drivers/ata/pata_bf54x.c:78:
+#define ATAPI_SET_CONTROL(base, val)\
+	bfin_write16(base + ATAPI_OFFSET_CONTROL, val)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#175: FILE: drivers/ata/pata_bf54x.c:80:
+#define ATAPI_GET_STATUS(base)\
+	bfin_read16(base + ATAPI_OFFSET_STATUS)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#177: FILE: drivers/ata/pata_bf54x.c:82:
+#define ATAPI_GET_DEV_ADDR(base)\
+	bfin_read16(base + ATAPI_OFFSET_DEV_ADDR)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#179: FILE: drivers/ata/pata_bf54x.c:84:
+#define ATAPI_SET_DEV_ADDR(base, val)\
+	bfin_write16(base + ATAPI_OFFSET_DEV_ADDR, val)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#181: FILE: drivers/ata/pata_bf54x.c:86:
+#define ATAPI_GET_DEV_TXBUF(base)\
+	bfin_read16(base + ATAPI_OFFSET_DEV_TXBUF)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#183: FILE: drivers/ata/pata_bf54x.c:88:
+#define ATAPI_SET_DEV_TXBUF(base, val)\
+	bfin_write16(base + ATAPI_OFFSET_DEV_TXBUF, val)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#185: FILE: drivers/ata/pata_bf54x.c:90:
+#define ATAPI_GET_DEV_RXBUF(base)\
+	bfin_read16(base + ATAPI_OFFSET_DEV_RXBUF)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#187: FILE: drivers/ata/pata_bf54x.c:92:
+#define ATAPI_SET_DEV_RXBUF(base, val)\
+	bfin_write16(base + ATAPI_OFFSET_DEV_RXBUF, val)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#189: FILE: drivers/ata/pata_bf54x.c:94:
+#define ATAPI_GET_INT_MASK(base)\
+	bfin_read16(base + ATAPI_OFFSET_INT_MASK)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#191: FILE: drivers/ata/pata_bf54x.c:96:
+#define ATAPI_SET_INT_MASK(base, val)\
+	bfin_write16(base + ATAPI_OFFSET_INT_MASK, val)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#193: FILE: drivers/ata/pata_bf54x.c:98:
+#define ATAPI_GET_INT_STATUS(base)\
+	bfin_read16(base + ATAPI_OFFSET_INT_STATUS)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#195: FILE: drivers/ata/pata_bf54x.c:100:
+#define ATAPI_SET_INT_STATUS(base, val)\
+	bfin_write16(base + ATAPI_OFFSET_INT_STATUS, val)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#197: FILE: drivers/ata/pata_bf54x.c:102:
+#define ATAPI_GET_XFER_LEN(base)\
+	bfin_read16(base + ATAPI_OFFSET_XFER_LEN)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#199: FILE: drivers/ata/pata_bf54x.c:104:
+#define ATAPI_SET_XFER_LEN(base, val)\
+	bfin_write16(base + ATAPI_OFFSET_XFER_LEN, val)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#201: FILE: drivers/ata/pata_bf54x.c:106:
+#define ATAPI_GET_LINE_STATUS(base)\
+	bfin_read16(base + ATAPI_OFFSET_LINE_STATUS)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#203: FILE: drivers/ata/pata_bf54x.c:108:
+#define ATAPI_GET_SM_STATE(base)\
+	bfin_read16(base + ATAPI_OFFSET_SM_STATE)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#205: FILE: drivers/ata/pata_bf54x.c:110:
+#define ATAPI_GET_TERMINATE(base)\
+	bfin_read16(base + ATAPI_OFFSET_TERMINATE)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#207: FILE: drivers/ata/pata_bf54x.c:112:
+#define ATAPI_SET_TERMINATE(base, val)\
+	bfin_write16(base + ATAPI_OFFSET_TERMINATE, val)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#209: FILE: drivers/ata/pata_bf54x.c:114:
+#define ATAPI_GET_PIO_TFRCNT(base)\
+	bfin_read16(base + ATAPI_OFFSET_PIO_TFRCNT)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#211: FILE: drivers/ata/pata_bf54x.c:116:
+#define ATAPI_GET_DMA_TFRCNT(base)\
+	bfin_read16(base + ATAPI_OFFSET_DMA_TFRCNT)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#213: FILE: drivers/ata/pata_bf54x.c:118:
+#define ATAPI_GET_UMAIN_TFRCNT(base)\
+	bfin_read16(base + ATAPI_OFFSET_UMAIN_TFRCNT)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#215: FILE: drivers/ata/pata_bf54x.c:120:
+#define ATAPI_GET_UDMAOUT_TFRCNT(base)\
+	bfin_read16(base + ATAPI_OFFSET_UDMAOUT_TFRCNT)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#217: FILE: drivers/ata/pata_bf54x.c:122:
+#define ATAPI_GET_REG_TIM_0(base)\
+	bfin_read16(base + ATAPI_OFFSET_REG_TIM_0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#219: FILE: drivers/ata/pata_bf54x.c:124:
+#define ATAPI_SET_REG_TIM_0(base, val)\
+	bfin_write16(base + ATAPI_OFFSET_REG_TIM_0, val)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#221: FILE: drivers/ata/pata_bf54x.c:126:
+#define ATAPI_GET_PIO_TIM_0(base)\
+	bfin_read16(base + ATAPI_OFFSET_PIO_TIM_0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#223: FILE: drivers/ata/pata_bf54x.c:128:
+#define ATAPI_SET_PIO_TIM_0(base, val)\
+	bfin_write16(base + ATAPI_OFFSET_PIO_TIM_0, val)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#225: FILE: drivers/ata/pata_bf54x.c:130:
+#define ATAPI_GET_PIO_TIM_1(base)\
+	bfin_read16(base + ATAPI_OFFSET_PIO_TIM_1)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#227: FILE: drivers/ata/pata_bf54x.c:132:
+#define ATAPI_SET_PIO_TIM_1(base, val)\
+	bfin_write16(base + ATAPI_OFFSET_PIO_TIM_1, val)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#229: FILE: drivers/ata/pata_bf54x.c:134:
+#define ATAPI_GET_MULTI_TIM_0(base)\
+	bfin_read16(base + ATAPI_OFFSET_MULTI_TIM_0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#231: FILE: drivers/ata/pata_bf54x.c:136:
+#define ATAPI_SET_MULTI_TIM_0(base, val)\
+	bfin_write16(base + ATAPI_OFFSET_MULTI_TIM_0, val)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#233: FILE: drivers/ata/pata_bf54x.c:138:
+#define ATAPI_GET_MULTI_TIM_1(base)\
+	bfin_read16(base + ATAPI_OFFSET_MULTI_TIM_1)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#235: FILE: drivers/ata/pata_bf54x.c:140:
+#define ATAPI_SET_MULTI_TIM_1(base, val)\
+	bfin_write16(base + ATAPI_OFFSET_MULTI_TIM_1, val)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#237: FILE: drivers/ata/pata_bf54x.c:142:
+#define ATAPI_GET_MULTI_TIM_2(base)\
+	bfin_read16(base + ATAPI_OFFSET_MULTI_TIM_2)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#239: FILE: drivers/ata/pata_bf54x.c:144:
+#define ATAPI_SET_MULTI_TIM_2(base, val)\
+	bfin_write16(base + ATAPI_OFFSET_MULTI_TIM_2, val)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#241: FILE: drivers/ata/pata_bf54x.c:146:
+#define ATAPI_GET_ULTRA_TIM_0(base)\
+	bfin_read16(base + ATAPI_OFFSET_ULTRA_TIM_0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#243: FILE: drivers/ata/pata_bf54x.c:148:
+#define ATAPI_SET_ULTRA_TIM_0(base, val)\
+	bfin_write16(base + ATAPI_OFFSET_ULTRA_TIM_0, val)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#245: FILE: drivers/ata/pata_bf54x.c:150:
+#define ATAPI_GET_ULTRA_TIM_1(base)\
+	bfin_read16(base + ATAPI_OFFSET_ULTRA_TIM_1)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#247: FILE: drivers/ata/pata_bf54x.c:152:
+#define ATAPI_SET_ULTRA_TIM_1(base, val)\
+	bfin_write16(base + ATAPI_OFFSET_ULTRA_TIM_1, val)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#249: FILE: drivers/ata/pata_bf54x.c:154:
+#define ATAPI_GET_ULTRA_TIM_2(base)\
+	bfin_read16(base + ATAPI_OFFSET_ULTRA_TIM_2)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#251: FILE: drivers/ata/pata_bf54x.c:156:
+#define ATAPI_SET_ULTRA_TIM_2(base, val)\
+	bfin_write16(base + ATAPI_OFFSET_ULTRA_TIM_2, val)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#253: FILE: drivers/ata/pata_bf54x.c:158:
+#define ATAPI_GET_ULTRA_TIM_3(base)\
+	bfin_read16(base + ATAPI_OFFSET_ULTRA_TIM_3)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'base' may be better as '(base)' to avoid precedence issues
#255: FILE: drivers/ata/pata_bf54x.c:160:
+#define ATAPI_SET_ULTRA_TIM_3(base, val)\
+	bfin_write16(base + ATAPI_OFFSET_ULTRA_TIM_3, val)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#263: FILE: drivers/ata/pata_bf54x.c:168:
+static u32 pio_fsclk[] =
+{ 33333333, 33333333, 33333333, 33333333, 33333333 };

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#281: FILE: drivers/ata/pata_bf54x.c:186:
+static u32 udma_fsclk[] =
+{ 33333333, 33333333, 40000000, 50000000, 80000000, 133333333 };

CHECK:LINE_SPACING: Please don't use multiple blank lines
#341: FILE: drivers/ata/pata_bf54x.c:246:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#356: FILE: drivers/ata/pata_bf54x.c:261:
+static unsigned short num_clocks_min(unsigned long tmin,
+				unsigned long fsclk)

WARNING:SPACING: space prohibited before semicolon
#358: FILE: drivers/ata/pata_bf54x.c:263:
+	unsigned long tmp ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#361: FILE: drivers/ata/pata_bf54x.c:266:
+	tmp = tmin * (fsclk/1000/1000) / 1000;
 	                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#361: FILE: drivers/ata/pata_bf54x.c:266:
+	tmp = tmin * (fsclk/1000/1000) / 1000;
 	                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#363: FILE: drivers/ata/pata_bf54x.c:268:
+	if ((tmp*1000*1000) < (tmin*(fsclk/1000))) {
 	        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#363: FILE: drivers/ata/pata_bf54x.c:268:
+	if ((tmp*1000*1000) < (tmin*(fsclk/1000))) {
 	             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#363: FILE: drivers/ata/pata_bf54x.c:268:
+	if ((tmp*1000*1000) < (tmin*(fsclk/1000))) {
 	                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#363: FILE: drivers/ata/pata_bf54x.c:268:
+	if ((tmp*1000*1000) < (tmin*(fsclk/1000))) {
 	                                  ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#363: FILE: drivers/ata/pata_bf54x.c:268:
+	if ((tmp*1000*1000) < (tmin*(fsclk/1000))) {
+		result++;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#391: FILE: drivers/ata/pata_bf54x.c:296:
+	/* the most restrictive timing value is t6 and tc, the DIOW - data hold
+	* If one SCLK pulse is longer than this minimum value then register

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BRACES: braces {} are not necessary for single statement blocks
#398: FILE: drivers/ata/pata_bf54x.c:303:
+		while (mode > 0 && pio_fsclk[mode] > fsclk) {
+			mode--;
+		}

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#432: FILE: drivers/ata/pata_bf54x.c:337:
+		ATAPI_SET_REG_TIM_0(base, (teoc_reg<<8 | t2_reg));
 		                                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#433: FILE: drivers/ata/pata_bf54x.c:338:
+		ATAPI_SET_PIO_TIM_0(base, (t4_reg<<12 | t2_pio<<4 | t1_reg));
 		                                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#433: FILE: drivers/ata/pata_bf54x.c:338:
+		ATAPI_SET_PIO_TIM_0(base, (t4_reg<<12 | t2_pio<<4 | t1_reg));
 		                                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#437: FILE: drivers/ata/pata_bf54x.c:342:
+			ATAPI_SET_CONTROL(base,
+				ATAPI_GET_CONTROL(base) | IORDY_EN);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#440: FILE: drivers/ata/pata_bf54x.c:345:
+			ATAPI_SET_CONTROL(base,
+				ATAPI_GET_CONTROL(base) & ~IORDY_EN);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#462: FILE: drivers/ata/pata_bf54x.c:367:
+static void bfin_set_dmamode (struct ata_port *ap, struct ata_device *adev)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#480: FILE: drivers/ata/pata_bf54x.c:385:
+		while (mode > 0 && udma_fsclk[mode] > fsclk) {
+			mode--;
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#499: FILE: drivers/ata/pata_bf54x.c:404:
+			if (tcyc_tdvs < 2) {
+				tcyc_tdvs = 2;
+			}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#503: FILE: drivers/ata/pata_bf54x.c:408:
+			if (tdvs < 2) {
+				tdvs = 2;
+			}

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#513: FILE: drivers/ata/pata_bf54x.c:418:
+				ATAPI_SET_ULTRA_TIM_0(base, (tenv<<8 | tack));
 				                                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#515: FILE: drivers/ata/pata_bf54x.c:420:
+				ATAPI_SET_ULTRA_TIM_1(base,
+					(tcyc_tdvs<<8 | tdvs));

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#515: FILE: drivers/ata/pata_bf54x.c:420:
+					(tcyc_tdvs<<8 | tdvs));
 					          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#516: FILE: drivers/ata/pata_bf54x.c:421:
+				ATAPI_SET_ULTRA_TIM_2(base, (tmli<<8 | tss));
 				                                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#517: FILE: drivers/ata/pata_bf54x.c:422:
+				ATAPI_SET_ULTRA_TIM_3(base, (trp<<8 | tzah));
 				                                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#521: FILE: drivers/ata/pata_bf54x.c:426:
+				ATAPI_SET_INT_MASK(base,
+					ATAPI_GET_INT_MASK(base)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#538: FILE: drivers/ata/pata_bf54x.c:443:
+		while (mode > 0 && mdma_fsclk[mode] > fsclk) {
+			mode--;
+		}

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#567: FILE: drivers/ata/pata_bf54x.c:472:
+			ATAPI_SET_MULTI_TIM_0(base, (tm<<8 | td));
 			                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#568: FILE: drivers/ata/pata_bf54x.c:473:
+			ATAPI_SET_MULTI_TIM_1(base, (tkr<<8 | tkw));
 			                                ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#569: FILE: drivers/ata/pata_bf54x.c:474:
+			ATAPI_SET_MULTI_TIM_2(base, (teoc<<8 | th));
 			                                 ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#578: FILE: drivers/ata/pata_bf54x.c:483:
+	return;
+}

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#587: FILE: drivers/ata/pata_bf54x.c:492:
+static void inline wait_complete(unsigned long base, unsigned short mask)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

WARNING:TYPO_SPELLING: 'Resgister' may be misspelled - perhaps 'Register'?
#602: FILE: drivers/ata/pata_bf54x.c:507:
+ *    Description:    Writes to ATA Device Resgister
                                            ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#607: FILE: drivers/ata/pata_bf54x.c:512:
+static void write_atapi_register(unsigned long base,
+		unsigned long ata_reg, unsigned short value)

WARNING:TYPO_SPELLING: 'Resgister' may be misspelled - perhaps 'Register'?
#639: FILE: drivers/ata/pata_bf54x.c:544:
+ *Description:    Reads from ATA Device Resgister
                                         ^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#644: FILE: drivers/ata/pata_bf54x.c:549:
+static unsigned short read_atapi_register(unsigned long base,
+		unsigned long ata_reg)

WARNING:TYPO_SPELLING: 'Resgister' may be misspelled - perhaps 'Register'?
#677: FILE: drivers/ata/pata_bf54x.c:582:
+ *    Description:    Writes to ATA Device Resgister
                                            ^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#682: FILE: drivers/ata/pata_bf54x.c:587:
+static void write_atapi_data(unsigned long base,
+		int len, unsigned short *buf)

WARNING:TYPO_SPELLING: 'Resgister' may be misspelled - perhaps 'Register'?
#722: FILE: drivers/ata/pata_bf54x.c:627:
+ *	Description:    Reads from ATA Device Resgister
   	                                      ^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#727: FILE: drivers/ata/pata_bf54x.c:632:
+static void read_atapi_data(unsigned long base,
+		int len, unsigned short *buf)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#771: FILE: drivers/ata/pata_bf54x.c:676:
+static void bfin_tf_load (struct ata_port *ap, const struct ata_taskfile *tf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#785: FILE: drivers/ata/pata_bf54x.c:690:
+			write_atapi_register(base, ATA_REG_FEATURE,
+						tf->hob_feature);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#787: FILE: drivers/ata/pata_bf54x.c:692:
+			write_atapi_register(base, ATA_REG_NSECT,
+						tf->hob_nsect);

WARNING:SPLIT_STRING: quoted string split across lines
#792: FILE: drivers/ata/pata_bf54x.c:697:
+			pr_debug("hob: feat 0x%X nsect 0x%X, lba 0x%X "
+				 "0x%X 0x%X\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#806: FILE: drivers/ata/pata_bf54x.c:711:
+		pr_debug("feat 0x%X nsect 0x%X lba 0x%X 0x%X 0x%X\n",
+			tf->feature,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#828: FILE: drivers/ata/pata_bf54x.c:733:
+static u8 bfin_check_status (struct ata_port *ap)

WARNING:LINE_SPACING: Missing a blank line after declarations
#831: FILE: drivers/ata/pata_bf54x.c:736:
+	unsigned long base = (unsigned long)ap->ioaddr.ctl_addr;
+	return read_atapi_register(base, ATA_REG_STATUS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#842: FILE: drivers/ata/pata_bf54x.c:747:
+static void bfin_tf_read (struct ata_port *ap, struct ata_taskfile *tf)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#872: FILE: drivers/ata/pata_bf54x.c:777:
+static void bfin_exec_command (struct ata_port *ap,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#873: FILE: drivers/ata/pata_bf54x.c:778:
+static void bfin_exec_command (struct ata_port *ap,
+			      const struct ata_taskfile *tf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#876: FILE: drivers/ata/pata_bf54x.c:781:
+	unsigned long base = (unsigned long)ap->ioaddr.ctl_addr;
+	pr_debug("ata%u: cmd 0x%X\n", ap->print_id, tf->command);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#887: FILE: drivers/ata/pata_bf54x.c:792:
+static u8 bfin_check_altstatus (struct ata_port *ap)

WARNING:LINE_SPACING: Missing a blank line after declarations
#890: FILE: drivers/ata/pata_bf54x.c:795:
+	unsigned long base = (unsigned long)ap->ioaddr.ctl_addr;
+	return read_atapi_register(base, ATA_REG_ALTSTATUS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#901: FILE: drivers/ata/pata_bf54x.c:806:
+static void bfin_std_dev_select (struct ata_port *ap, unsigned int device)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#922: FILE: drivers/ata/pata_bf54x.c:827:
+static void bfin_bmdma_setup (struct ata_queued_cmd *qc)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#956: FILE: drivers/ata/pata_bf54x.c:861:
+static void bfin_bmdma_start (struct ata_queued_cmd *qc)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#968: FILE: drivers/ata/pata_bf54x.c:873:
+				flush_dcache_range(sg_dma_address(sg),
+					sg_dma_address(sg) + sg_dma_len(sg));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#993: FILE: drivers/ata/pata_bf54x.c:898:
+		ATAPI_SET_CONTROL(base,
+			ATAPI_GET_CONTROL(base) | TFRCNT_RST);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1016: FILE: drivers/ata/pata_bf54x.c:921:
+static void bfin_bmdma_stop (struct ata_queued_cmd *qc)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1030: FILE: drivers/ata/pata_bf54x.c:935:
+					invalidate_dcache_range(

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1048: FILE: drivers/ata/pata_bf54x.c:953:
+static unsigned int bfin_devchk (struct ata_port *ap,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1049: FILE: drivers/ata/pata_bf54x.c:954:
+static unsigned int bfin_devchk (struct ata_port *ap,
+				unsigned int device)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nsect == 0x55'
#1068: FILE: drivers/ata/pata_bf54x.c:973:
+	if ((nsect == 0x55) && (lbal == 0xaa))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lbal == 0xaa'
#1068: FILE: drivers/ata/pata_bf54x.c:973:
+	if ((nsect == 0x55) && (lbal == 0xaa))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1080: FILE: drivers/ata/pata_bf54x.c:985:
+static void bfin_bus_post_reset (struct ata_port *ap, unsigned int devmask)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nsect == 1'
#1103: FILE: drivers/ata/pata_bf54x.c:1008:
+		if ((nsect == 1) && (lbal == 1))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lbal == 1'
#1103: FILE: drivers/ata/pata_bf54x.c:1008:
+		if ((nsect == 1) && (lbal == 1))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1128: FILE: drivers/ata/pata_bf54x.c:1033:
+static unsigned int bfin_bus_softreset (struct ata_port *ap,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1129: FILE: drivers/ata/pata_bf54x.c:1034:
+static unsigned int bfin_bus_softreset (struct ata_port *ap,
+				       unsigned int devmask)

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1135: FILE: drivers/ata/pata_bf54x.c:1040:
+	udelay(20);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1137: FILE: drivers/ata/pata_bf54x.c:1042:
+	udelay(20);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1173: FILE: drivers/ata/pata_bf54x.c:1078:
+static int bfin_std_softreset(struct ata_port *ap, unsigned int *classes,
+		unsigned long deadline)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1215: FILE: drivers/ata/pata_bf54x.c:1120:
+static unsigned char bfin_bmdma_status (struct ata_port *ap)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1221: FILE: drivers/ata/pata_bf54x.c:1126:
+	if (ATAPI_GET_STATUS(base) & (MULTI_XFER_ON|ULTRA_XFER_ON)) {
 	                                           ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1221: FILE: drivers/ata/pata_bf54x.c:1126:
+	if (ATAPI_GET_STATUS(base) & (MULTI_XFER_ON|ULTRA_XFER_ON)) {
+		host_stat = ATA_DMA_ACTIVE;
+	}

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1224: FILE: drivers/ata/pata_bf54x.c:1129:
+	if (int_status & (MULTI_DONE_INT|UDMAIN_DONE_INT|UDMAOUT_DONE_INT)) {
 	                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1224: FILE: drivers/ata/pata_bf54x.c:1129:
+	if (int_status & (MULTI_DONE_INT|UDMAIN_DONE_INT|UDMAOUT_DONE_INT)) {
 	                                                ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1224: FILE: drivers/ata/pata_bf54x.c:1129:
+	if (int_status & (MULTI_DONE_INT|UDMAIN_DONE_INT|UDMAOUT_DONE_INT)) {
+		host_stat = ATA_DMA_INTR;
+	}

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1227: FILE: drivers/ata/pata_bf54x.c:1132:
+	if (int_status & (MULTI_TERM_INT|UDMAIN_TERM_INT|UDMAOUT_TERM_INT)) {
 	                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1227: FILE: drivers/ata/pata_bf54x.c:1132:
+	if (int_status & (MULTI_TERM_INT|UDMAIN_TERM_INT|UDMAOUT_TERM_INT)) {
 	                                                ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1227: FILE: drivers/ata/pata_bf54x.c:1132:
+	if (int_status & (MULTI_TERM_INT|UDMAIN_TERM_INT|UDMAOUT_TERM_INT)) {
+		host_stat = ATA_DMA_ERR;
+	}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1244: FILE: drivers/ata/pata_bf54x.c:1149:
+static void bfin_data_xfer (struct ata_device *adev, unsigned char *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1245: FILE: drivers/ata/pata_bf54x.c:1150:
+static void bfin_data_xfer (struct ata_device *adev, unsigned char *buf,
+			   unsigned int buflen, int write_data)

CHECK:SPACING: No space is necessary after a cast
#1249: FILE: drivers/ata/pata_bf54x.c:1154:
+	unsigned short *buf16 = (u16 *) buf;

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1253: FILE: drivers/ata/pata_bf54x.c:1158:
+	if (write_data) {
[...]
+	} else {
[...]

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1281: FILE: drivers/ata/pata_bf54x.c:1186:
+static unsigned char bfin_irq_on (struct ata_port *ap)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1305: FILE: drivers/ata/pata_bf54x.c:1210:
+static unsigned char bfin_irq_ack (struct ata_port *ap, unsigned int chk_drq)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1318: FILE: drivers/ata/pata_bf54x.c:1223:
+	ATAPI_SET_INT_STATUS(base, ATAPI_GET_INT_STATUS(base)|ATAPI_DEV_INT
 	                                                     ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1332: FILE: drivers/ata/pata_bf54x.c:1237:
+static void bfin_bmdma_freeze (struct ata_port *ap)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1359: FILE: drivers/ata/pata_bf54x.c:1264:
+static void bfin_std_postreset (struct ata_port *ap, unsigned int *classes)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1374: FILE: drivers/ata/pata_bf54x.c:1279:
+	if (classes[0] == ATA_DEV_NONE && classes[1] == ATA_DEV_NONE) {
+		return;
+	}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1400: FILE: drivers/ata/pata_bf54x.c:1305:
+static void bfin_bmdma_irq_clear (struct ata_port *ap)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1423: FILE: drivers/ata/pata_bf54x.c:1328:
+			if (request_dma(CH_ATAPI_TX,
+				"BFIN ATAPI TX DMA") >= 0) {

WARNING:SPLIT_STRING: quoted string split across lines
#1431: FILE: drivers/ata/pata_bf54x.c:1336:
+		dev_err(ap->dev, "Unable to request ATAPI DMA!"
+			" Continue in PIO mode.\n");

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1530: FILE: drivers/ata/pata_bf54x.c:1435:
+	udelay(30);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1534: FILE: drivers/ata/pata_bf54x.c:1439:
+	udelay(2100);

WARNING:LONG_UDELAY: long udelay - prefer mdelay; see arch/arm/include/asm/delay.h
#1534: FILE: drivers/ata/pata_bf54x.c:1439:
+	udelay(2100);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1578: FILE: drivers/ata/pata_bf54x.c:1483:
+static int __devinit bfin_atapi_probe(struct platform_device *pdev)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1584: FILE: drivers/ata/pata_bf54x.c:1489:
+	const struct ata_port_info *ppi[] =
+		{ &bfin_port_info[board_idx], NULL };

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!res"
#1598: FILE: drivers/ata/pata_bf54x.c:1503:
+	if (res == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'faild' may be misspelled - perhaps 'failed'?
#1611: FILE: drivers/ata/pata_bf54x.c:1516:
+		dev_err(&pdev->dev, "Requesting Peripherals faild\n");
 		                                            ^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1622: FILE: drivers/ata/pata_bf54x.c:1527:
+	if (ata_host_activate(host, platform_get_irq(pdev, 0),
+		ata_interrupt, IRQF_SHARED, &bfin_sht) != 0) {

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1638: FILE: drivers/ata/pata_bf54x.c:1543:
+static int __devexit bfin_atapi_remove(struct platform_device *pdev)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1659: FILE: drivers/ata/pata_bf54x.c:1564:
+static int __init bfin_atapi_init (void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1665: FILE: drivers/ata/pata_bf54x.c:1570:
+static void __exit bfin_atapi_exit (void)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000390732.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 57 warnings, 99 checks, 1620 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000390732.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
