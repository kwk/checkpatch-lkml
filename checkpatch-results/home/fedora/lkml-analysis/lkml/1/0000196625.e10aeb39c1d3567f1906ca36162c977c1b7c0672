WARNING:TYPO_SPELLING: 'controling' may be misspelled - perhaps 'controlling'?
#34: 
Add a driver for controling Dell-specific backlight and rfkill 
                 ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#55: FILE: MAINTAINERS:1365:
+P:	Matthew Garrett
+M:	mjg59@srcf.ucam.org

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#69: FILE: drivers/misc/Kconfig:501:
+config DELL_LAPTOP
+	tristate "Dell Laptop Extras (EXPERIMENTAL)"
+	depends on X86
+	depends on DCDBAS
+	depends on EXPERIMENTAL
+	depends on BACKLIGHT_CLASS_DEVICE
+	depends on RFKILL
+	default n
+	---help---
+	This driver adds support for rfkill and backlight control to Dell
+	laptops.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#95: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#100: FILE: drivers/misc/dell-laptop.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#129: FILE: drivers/misc/dell-laptop.c:30:
+ * system management mode, hence the volatiles */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#134: FILE: drivers/misc/dell-laptop.c:35:
+	volatile u32 input[4];

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#135: FILE: drivers/misc/dell-laptop.c:36:
+	volatile u32 output[4];

CHECK:CAMELCASE: Avoid CamelCase: <tokenID>
#139: FILE: drivers/misc/dell-laptop.c:40:
+	u16 tokenID;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <cmdIOAddress>
#149: FILE: drivers/misc/dell-laptop.c:50:
+	u16 cmdIOAddress;

CHECK:CAMELCASE: Avoid CamelCase: <cmdIOCode>
#150: FILE: drivers/misc/dell-laptop.c:51:
+	u8 cmdIOCode;

CHECK:CAMELCASE: Avoid CamelCase: <supportedCmds>
#151: FILE: drivers/misc/dell-laptop.c:52:
+	u32 supportedCmds;

WARNING:MISPLACED_INIT: __initdata should be placed after dell_device_table[]
#165: FILE: drivers/misc/dell-laptop.c:66:
+static const struct dmi_system_id __initdata dell_device_table[] = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __initconst
#165: FILE: drivers/misc/dell-laptop.c:66:
+static const struct dmi_system_id __initdata dell_device_table[] = {

Const init definitions should use __initconst instead of
__initdata.

Similarly init definitions without const require a separate
use of const.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#179: FILE: drivers/misc/dell-laptop.c:80:
+	int tokens = (dm->length-11)/sizeof(struct calling_interface_token)-1;
 	                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#179: FILE: drivers/misc/dell-laptop.c:80:
+	int tokens = (dm->length-11)/sizeof(struct calling_interface_token)-1;
 	                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#179: FILE: drivers/misc/dell-laptop.c:80:
+	int tokens = (dm->length-11)/sizeof(struct calling_interface_token)-1;
 	                                                                   ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#184: FILE: drivers/misc/dell-laptop.c:85:
+	/* 4 bytes of table header, plus 7 bytes of Dell header, plus at least
+	   6 bytes of entry */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#184: FILE: drivers/misc/dell-laptop.c:85:
+	   6 bytes of entry */

WARNING:KREALLOC_ARG_REUSE: Reusing the krealloc arg is almost always a bug
#192: FILE: drivers/misc/dell-laptop.c:93:
+	da_tokens = krealloc(da_tokens, (da_num_tokens + tokens) *

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#199: FILE: drivers/misc/dell-laptop.c:100:
+	memcpy(da_tokens+da_num_tokens, table->tokens,
 	                ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#223: FILE: drivers/misc/dell-laptop.c:124:
+	int i;
+	for (i = 0; i < da_num_tokens; i++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#252: FILE: drivers/misc/dell-laptop.c:153:
+/* Derived from information in DellWirelessCtl.cpp:
+   Class 17, select 11 is radio control. It returns an array of 32-bit values.

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#282: FILE: drivers/misc/dell-laptop.c:183:
+	buffer.input[0] = (1 | (radio<<8) | (disable << 16));
 	                             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#313: FILE: drivers/misc/dell-laptop.c:214:
+	if (status & (1<<16))
 	               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#316: FILE: drivers/misc/dell-laptop.c:217:
+	if (status & (1<<bit))
 	               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#349: FILE: drivers/misc/dell-laptop.c:250:
+	if ((status & (1<<2|1<<8)) == (1<<2|1<<8)) {
 	                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#349: FILE: drivers/misc/dell-laptop.c:250:
+	if ((status & (1<<2|1<<8)) == (1<<2|1<<8)) {
 	                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#349: FILE: drivers/misc/dell-laptop.c:250:
+	if ((status & (1<<2|1<<8)) == (1<<2|1<<8)) {
 	                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#349: FILE: drivers/misc/dell-laptop.c:250:
+	if ((status & (1<<2|1<<8)) == (1<<2|1<<8)) {
 	                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#349: FILE: drivers/misc/dell-laptop.c:250:
+	if ((status & (1<<2|1<<8)) == (1<<2|1<<8)) {
 	                                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#349: FILE: drivers/misc/dell-laptop.c:250:
+	if ((status & (1<<2|1<<8)) == (1<<2|1<<8)) {
 	                                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#361: FILE: drivers/misc/dell-laptop.c:262:
+	if ((status & (1<<3|1<<9)) == (1<<3|1<<9)) {
 	                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#361: FILE: drivers/misc/dell-laptop.c:262:
+	if ((status & (1<<3|1<<9)) == (1<<3|1<<9)) {
 	                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#361: FILE: drivers/misc/dell-laptop.c:262:
+	if ((status & (1<<3|1<<9)) == (1<<3|1<<9)) {
 	                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#361: FILE: drivers/misc/dell-laptop.c:262:
+	if ((status & (1<<3|1<<9)) == (1<<3|1<<9)) {
 	                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#361: FILE: drivers/misc/dell-laptop.c:262:
+	if ((status & (1<<3|1<<9)) == (1<<3|1<<9)) {
 	                                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#361: FILE: drivers/misc/dell-laptop.c:262:
+	if ((status & (1<<3|1<<9)) == (1<<3|1<<9)) {
 	                                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#373: FILE: drivers/misc/dell-laptop.c:274:
+	if ((status & (1<<4|1<<10)) == (1<<4|1<<10)) {
 	                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#373: FILE: drivers/misc/dell-laptop.c:274:
+	if ((status & (1<<4|1<<10)) == (1<<4|1<<10)) {
 	                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#373: FILE: drivers/misc/dell-laptop.c:274:
+	if ((status & (1<<4|1<<10)) == (1<<4|1<<10)) {
 	                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#373: FILE: drivers/misc/dell-laptop.c:274:
+	if ((status & (1<<4|1<<10)) == (1<<4|1<<10)) {
 	                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#373: FILE: drivers/misc/dell-laptop.c:274:
+	if ((status & (1<<4|1<<10)) == (1<<4|1<<10)) {
 	                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#373: FILE: drivers/misc/dell-laptop.c:274:
+	if ((status & (1<<4|1<<10)) == (1<<4|1<<10)) {
 	                                      ^

WARNING:CONST_STRUCT: struct backlight_ops should normally be const
#444: FILE: drivers/misc/dell-laptop.c:345:
+static struct backlight_ops dell_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#461: FILE: drivers/misc/dell-laptop.c:362:
+		printk(KERN_INFO "dell-laptop: Unable to find dmi tokens\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#468: FILE: drivers/misc/dell-laptop.c:369:
+		printk(KERN_WARNING "dell-laptop: Unable to setup rfkill\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#489: FILE: drivers/misc/dell-laptop.c:390:
+		dell_backlight_device = backlight_device_register(

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000196625.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 17 warnings, 30 checks, 470 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000196625.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
