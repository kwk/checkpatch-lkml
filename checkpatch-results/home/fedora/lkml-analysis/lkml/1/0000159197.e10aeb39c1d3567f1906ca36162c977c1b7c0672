WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#51: 
- changes some parts to use trace_seq_bprintk() to print TRACE_PRINT entries.

WARNING:TYPO_SPELLING: 'mispell' may be misspelled - perhaps 'misspell'?
#62: 
- Fix mispell on the changelog
      ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#129: FILE: include/linux/ftrace.h:346:
+extern int __ftrace_vprintk(unsigned long ip, const char *fmt, va_list args);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#130: FILE: include/linux/ftrace.h:347:
+extern int __ftrace_printk(unsigned long ip, const char *fmt, ...)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(2, 3) over __attribute__((format(printf, 2, 3)))
#131: FILE: include/linux/ftrace.h:348:
+		__attribute__ ((format (printf, 2, 3)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#134: FILE: include/linux/ftrace.h:351:
+		__attribute__ ((format (printf, 1, 2)));

WARNING:TRACE_PRINTK: Do not use ftrace_vprintk() in production code (this can be ignored if built only with a debug config option)
#142: FILE: include/linux/ftrace.h:359:
+#define ftrace_vprintk(fmt, vargs)					\

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section("__trace_bprintk_fmt") over __attribute__((section("__trace_bprintk_fmt")))
#145: FILE: include/linux/ftrace.h:362:
+	__attribute__((section("__trace_bprintk_fmt")));		\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'fmt' - possible side-effects?
#150: FILE: include/linux/ftrace.h:367:
+#define ftrace_printk(fmt, args...)					\
+do {									\
+	static const char *ftrace_printk_fmt				\
+	__attribute__((section("__trace_bprintk_fmt")));		\
+	ftrace_printk_fmt = fmt;					\
+	__ftrace_printk_check_format(fmt, ##args);			\
+	__ftrace_printk(_THIS_IP_, ftrace_printk_fmt, ##args);		\
+} while (0)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section("__trace_bprintk_fmt") over __attribute__((section("__trace_bprintk_fmt")))
#153: FILE: include/linux/ftrace.h:370:
+	__attribute__((section("__trace_bprintk_fmt")));		\

CHECK:LINE_SPACING: Please don't use multiple blank lines
#235: FILE: kernel/trace/trace.c:1166:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#481: FILE: kernel/trace/trace.h:122:
+^Iunsigned long ^I^Iip;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#492: FILE: kernel/trace/trace.h:125:
+^Iu32 ^I^I^Ibuf[];$

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#505: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#778: FILE: kernel/trace/trace_output.c:890:
 
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#803: FILE: kernel/trace/trace_output.c:911:
+^I.type^I ^I= TRACE_PRINT,$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#837: FILE: kernel/trace/trace_printk.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LINE_SPACING: Missing a blank line after declarations
#877: FILE: kernel/trace/trace_printk.c:41:
+	struct trace_bprintk_fmt *pos;
+	list_for_each_entry(pos, &trace_bprintk_fmt_list, list) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#892: FILE: kernel/trace/trace_printk.c:56:
+		struct trace_bprintk_fmt *tb_fmt = lookup_format(*iter);
+		if (tb_fmt) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#899: FILE: kernel/trace/trace_printk.c:63:
+		if (tb_fmt) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#903: FILE: kernel/trace/trace_printk.c:67:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#910: FILE: kernel/trace/trace_printk.c:74:
+static int module_trace_bprintk_format_notify(struct notifier_block *self,
+		unsigned long val, void *data)

WARNING:LINE_SPACING: Missing a blank line after declarations
#913: FILE: kernel/trace/trace_printk.c:77:
+	struct module *mod = data;
+	if (mod->num_trace_bprintk_fmt) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#926: FILE: kernel/trace/trace_printk.c:90:
+module_trace_bprintk_format_notify(struct notifier_block *self,
+		unsigned long val, void *data)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#932: FILE: kernel/trace/trace_printk.c:96:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#938: FILE: kernel/trace/trace_printk.c:102:
+int __ftrace_printk(unsigned long ip, const char *fmt, ...)
+ {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#939: FILE: kernel/trace/trace_printk.c:103:
+ {$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#956: FILE: kernel/trace/trace_printk.c:120:
+int __ftrace_vprintk(unsigned long ip, const char *fmt, va_list ap)
+ {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#957: FILE: kernel/trace/trace_printk.c:121:
+ {$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#968: FILE: kernel/trace/trace_printk.c:132:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000159197.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 17 warnings, 11 checks, 666 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000159197.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
