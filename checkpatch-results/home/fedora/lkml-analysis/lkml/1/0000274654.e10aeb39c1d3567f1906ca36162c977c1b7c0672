WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#117: FILE: arch/x86/kernel/genx2apic_uv_x.c:177:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:MISPLACED_INIT: __initdata should be placed after redir_addrs[]
#127: FILE: arch/x86/kernel/genx2apic_uv_x.c:187:
+static __initdata struct redir_addr redir_addrs[] = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#148: FILE: arch/x86/kernel/genx2apic_uv_x.c:208:
+	BUG();

ERROR:SPACING: space required before the open parenthesis '('
#177: FILE: arch/x86/kernel/genx2apic_uv_x.c:227:
+	for(i = 0; i < UVH_NODE_PRESENT_TABLE_DEPTH; i++)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#179: FILE: arch/x86/kernel/genx2apic_uv_x.c:229:
+		  hweight64(uv_read_local_mmr( UVH_NODE_PRESENT_TABLE + i * 8));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#256: FILE: arch/x86/kernel/genx2apic_uv_x.c:285:
+		printk(KERN_DEBUG "UV cpu %d, apicid 0x%x, pnode %d, nid %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#257: FILE: arch/x86/kernel/genx2apic_uv_x.c:286:
+		printk(KERN_DEBUG "UV cpu %d, apicid 0x%x, pnode %d, nid %d, "
+			"lcpu %d, blade %d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#265: FILE: arch/x86/kernel/genx2apic_uv_x.c:294:
+ * ^IZZZ hotplug not supported yet$

CHECK:BIT_MACRO: Prefer using the BIT macro
#287: FILE: include/asm-x86/uv/uv_mmrs.h:14:
+#define UV_MMR_ENABLE		(1UL << 63)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: include/asm-x86/uv/uv_mmrs.h:40:
+    unsigned long^Iv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: include/asm-x86/uv/uv_mmrs.h:41:
+    struct uvh_bau_data_config_s {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: include/asm-x86/uv/uv_mmrs.h:52:
+    } s;$

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#418: FILE: include/asm-x86/uv/uv_mmrs.h:355:
+#define UVH_LB_MCAST_AOERR0_RPT_ENABLE_COMPLETED_GB_ACTIVATION_HAD_ERROR_REPLY_MASK 0x0000000080000000UL

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: include/asm-x86/uv/uv_mmrs.h:378:
+    unsigned long^Iv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: include/asm-x86/uv/uv_mmrs.h:379:
+    struct uvh_lb_mcast_aoerr0_rpt_enable_s {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: include/asm-x86/uv/uv_mmrs.h:423:
+    } s;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: include/asm-x86/uv/uv_mmrs.h:449:
+    unsigned long^Iv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#513: FILE: include/asm-x86/uv/uv_mmrs.h:450:
+    struct uvh_local_int0_config_s {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#524: FILE: include/asm-x86/uv/uv_mmrs.h:461:
+    } s;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: include/asm-x86/uv/uv_mmrs.h:561:
+    unsigned long^Iv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: include/asm-x86/uv/uv_mmrs.h:562:
+    struct uvh_local_int0_enable_s {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#672: FILE: include/asm-x86/uv/uv_mmrs.h:609:
+    } s;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#692: FILE: include/asm-x86/uv/uv_mmrs.h:658:
+    unsigned long^Iv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#693: FILE: include/asm-x86/uv/uv_mmrs.h:659:
+    struct uvh_node_present_table_s {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#695: FILE: include/asm-x86/uv/uv_mmrs.h:661:
+    } s;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#707: FILE: include/asm-x86/uv/uv_mmrs.h:673:
+    unsigned long^Iv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#708: FILE: include/asm-x86/uv/uv_mmrs.h:674:
+    struct uvh_rh_gam_alias210_redirect_config_0_mmr_s {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#712: FILE: include/asm-x86/uv/uv_mmrs.h:678:
+    } s;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#724: FILE: include/asm-x86/uv/uv_mmrs.h:690:
+    unsigned long^Iv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#725: FILE: include/asm-x86/uv/uv_mmrs.h:691:
+    struct uvh_rh_gam_alias210_redirect_config_1_mmr_s {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#729: FILE: include/asm-x86/uv/uv_mmrs.h:695:
+    } s;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#741: FILE: include/asm-x86/uv/uv_mmrs.h:707:
+    unsigned long^Iv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#742: FILE: include/asm-x86/uv/uv_mmrs.h:708:
+    struct uvh_rh_gam_alias210_redirect_config_2_mmr_s {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#746: FILE: include/asm-x86/uv/uv_mmrs.h:712:
+    } s;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#770: FILE: include/asm-x86/uv/uv_mmrs.h:814:
+    unsigned long^Iv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#771: FILE: include/asm-x86/uv/uv_mmrs.h:815:
+    struct uvh_si_alias0_overlay_config_s {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#778: FILE: include/asm-x86/uv/uv_mmrs.h:822:
+    } s;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#794: FILE: include/asm-x86/uv/uv_mmrs.h:838:
+    unsigned long^Iv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#795: FILE: include/asm-x86/uv/uv_mmrs.h:839:
+    struct uvh_si_alias1_overlay_config_s {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#802: FILE: include/asm-x86/uv/uv_mmrs.h:846:
+    } s;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#818: FILE: include/asm-x86/uv/uv_mmrs.h:862:
+    unsigned long^Iv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#819: FILE: include/asm-x86/uv/uv_mmrs.h:863:
+    struct uvh_si_alias2_overlay_config_s {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#826: FILE: include/asm-x86/uv/uv_mmrs.h:870:
+    } s;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#857: FILE: include/asm-x86/uv/uv_hub.h:28:
+ * ^IN^I- Number of bits in the node portion of a socket physical$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#858: FILE: include/asm-x86/uv/uv_hub.h:29:
+ * ^I^I  address.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#860: FILE: include/asm-x86/uv/uv_hub.h:31:
+ * ^INASID   - network ID of a router, Mbrick or Cbrick. Nasid values of$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#861: FILE: include/asm-x86/uv/uv_hub.h:32:
+ * ^I ^I  routers always have low bit of 1, C/MBricks have low bit$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#862: FILE: include/asm-x86/uv/uv_hub.h:33:
+ * ^I^I  equal to 0. Most addressing macros that target UV hub chips$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#863: FILE: include/asm-x86/uv/uv_hub.h:34:
+ * ^I^I  right shift the NASID by 1 to exclude the always-zero bit.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#864: FILE: include/asm-x86/uv/uv_hub.h:35:
+ * ^I^I  NASIDs contain up to 15 bits.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#869: FILE: include/asm-x86/uv/uv_hub.h:40:
+ * ^IPNODE   - the low N bits of the GNODE. The PNODE is the most useful variant$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#870: FILE: include/asm-x86/uv/uv_hub.h:41:
+ * ^I^I  of the nasid for socket usage.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#952: FILE: include/asm-x86/uv/uv_hub.h:142:
+ * ^I^In -  NASID (full 15-bit global nasid)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#953: FILE: include/asm-x86/uv/uv_hub.h:143:
+ * ^I^Ig -  GNODE (full 15-bit global nasid, right shifted 1)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#954: FILE: include/asm-x86/uv/uv_hub.h:144:
+ * ^I^Ip -  PNODE (local part of nsids, right shifted 1)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#984: FILE: include/asm-x86/uv/uv_hub.h:166:
+ * ^INote: use the standard __pa() & __va() macros for converting$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#985: FILE: include/asm-x86/uv/uv_hub.h:167:
+ * ^I      between socket virtual and socket physical addresses.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#998: FILE: include/asm-x86/uv/uv_hub.h:178:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1042: FILE: include/asm-x86/uv/uv_hub.h:217:
+static inline unsigned long *uv_global_mmr32_address(int pnode,
 				unsigned long offset)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1051: FILE: include/asm-x86/uv/uv_hub.h:224:
+static inline void uv_write_global_mmr32(int pnode, unsigned long offset,
 				 unsigned long val)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1071: FILE: include/asm-x86/uv/uv_hub.h:240:
+static inline unsigned long *uv_global_mmr64_address(int pnode,
 				unsigned long offset)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1080: FILE: include/asm-x86/uv/uv_hub.h:247:
+static inline void uv_write_global_mmr64(int pnode, unsigned long offset,
 				unsigned long val)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1116: FILE: include/asm-x86/uv/uv_hub.h:286:
 };
+extern struct uv_blade_info *uv_blade_info;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000274654.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 54 warnings, 7 checks, 1094 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000274654.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
