WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
    malloc_and_touch 1M &                       # run malloc and touch program.

WARNING:TYPO_SPELLING: 'cant' may be misspelled - perhaps 'can't'?
#71: 
So, memcg itself cant reclaim it but swp_entry is freed until
                 ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#124: FILE: include/linux/swap.h:339:
+extern void memcg_mark_swapent_stale(swp_entry_t ent);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#125: FILE: include/linux/swap.h:340:
+extern void memcg_sanity_check_swapin(struct page *page, swp_entry_t ent);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#126: FILE: include/linux/swap.h:341:
+extern int memcg_stale_swap_congestion(void);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#152: FILE: include/linux/swap.h:455:
 }
+static inline int memcg_stale_swap_congestion(void)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#183: FILE: mm/memcontrol.c:1721:
+#define STALE_ENTS_MAP (STALE_ENTS/BITS_PER_LONG)
                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#186: FILE: mm/memcontrol.c:1724:
+	spinlock_t lock;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#197: FILE: mm/memcontrol.c:1735:
+	schedule_delayed_work(&ssc.gc_work, HZ/10);
 	                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#236: FILE: mm/memcontrol.c:1774:
+			if (ssc.num < STALE_ENTS/2)
 			                        ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#245: FILE: mm/memcontrol.c:1783:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#247: FILE: mm/memcontrol.c:1785:
+
+

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#260: FILE: mm/memcontrol.c:1798:
+		if (ssc.num > STALE_ENTS/2)
 		                        ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#270: FILE: mm/memcontrol.c:1808:
+	smp_mb();

CHECK:LINE_SPACING: Please don't use multiple blank lines
#300: FILE: mm/memcontrol.c:2593:
 
+

CHECK:BRACES: Unbalanced braces around else statement
#341: FILE: mm/swap_state.c:371:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000134032.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 12 checks, 243 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000134032.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
