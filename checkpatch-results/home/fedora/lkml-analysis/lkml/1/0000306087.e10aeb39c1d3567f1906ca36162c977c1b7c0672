WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#63: FILE: include/asm-x86/nmi.h:1:
+#ifndef _ASM_X86_NMI_H_

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#68: FILE: include/asm-x86/nmi.h:6:
+#include <asm/io.h>

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#103: FILE: include/asm-x86/nmi.h:40:
+extern void default_do_nmi(struct pt_regs *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#103: FILE: include/asm-x86/nmi.h:40:
+extern void default_do_nmi(struct pt_regs *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#104: FILE: include/asm-x86/nmi.h:41:
+extern void die_nmi(char *str, struct pt_regs *regs, int do_panic);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#107: FILE: include/asm-x86/nmi.h:44:
+extern int check_nmi_watchdog(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#110: FILE: include/asm-x86/nmi.h:47:
+extern int avail_to_resrv_perfctr_nmi_bit(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#110: FILE: include/asm-x86/nmi.h:47:
+extern int avail_to_resrv_perfctr_nmi_bit(unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#111: FILE: include/asm-x86/nmi.h:48:
+extern int avail_to_resrv_perfctr_nmi(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#111: FILE: include/asm-x86/nmi.h:48:
+extern int avail_to_resrv_perfctr_nmi(unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#112: FILE: include/asm-x86/nmi.h:49:
+extern int reserve_perfctr_nmi(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#112: FILE: include/asm-x86/nmi.h:49:
+extern int reserve_perfctr_nmi(unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#113: FILE: include/asm-x86/nmi.h:50:
+extern void release_perfctr_nmi(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#113: FILE: include/asm-x86/nmi.h:50:
+extern void release_perfctr_nmi(unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#114: FILE: include/asm-x86/nmi.h:51:
+extern int reserve_evntsel_nmi(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#114: FILE: include/asm-x86/nmi.h:51:
+extern int reserve_evntsel_nmi(unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#115: FILE: include/asm-x86/nmi.h:52:
+extern void release_evntsel_nmi(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#115: FILE: include/asm-x86/nmi.h:52:
+extern void release_evntsel_nmi(unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#116: FILE: include/asm-x86/nmi.h:53:
+extern void nmi_watchdog_default(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#118: FILE: include/asm-x86/nmi.h:55:
+extern void setup_apic_nmi_watchdog(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#118: FILE: include/asm-x86/nmi.h:55:
+extern void setup_apic_nmi_watchdog(void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#119: FILE: include/asm-x86/nmi.h:56:
+extern void stop_apic_nmi_watchdog(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#119: FILE: include/asm-x86/nmi.h:56:
+extern void stop_apic_nmi_watchdog(void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#120: FILE: include/asm-x86/nmi.h:57:
+extern void disable_timer_nmi_watchdog(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#121: FILE: include/asm-x86/nmi.h:58:
+extern void enable_timer_nmi_watchdog(void);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#122: FILE: include/asm-x86/nmi.h:59:
+extern int nmi_watchdog_tick(struct pt_regs *regs, unsigned reason);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#122: FILE: include/asm-x86/nmi.h:59:
+extern int nmi_watchdog_tick(struct pt_regs *regs, unsigned reason);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#135: FILE: include/asm-x86/nmi.h:72:
+extern int proc_nmi_enabled(struct ctl_table *, int , struct file *,
                                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#135: FILE: include/asm-x86/nmi.h:72:
+extern int proc_nmi_enabled(struct ctl_table *, int , struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ctl_table *' should also have an identifier name
#135: FILE: include/asm-x86/nmi.h:72:
+extern int proc_nmi_enabled(struct ctl_table *, int , struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#135: FILE: include/asm-x86/nmi.h:72:
+extern int proc_nmi_enabled(struct ctl_table *, int , struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#135: FILE: include/asm-x86/nmi.h:72:
+extern int proc_nmi_enabled(struct ctl_table *, int , struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#135: FILE: include/asm-x86/nmi.h:72:
+extern int proc_nmi_enabled(struct ctl_table *, int , struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#135: FILE: include/asm-x86/nmi.h:72:
+extern int proc_nmi_enabled(struct ctl_table *, int , struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#135: FILE: include/asm-x86/nmi.h:72:
+extern int proc_nmi_enabled(struct ctl_table *, int , struct file *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#136: FILE: include/asm-x86/nmi.h:73:
+extern int proc_nmi_enabled(struct ctl_table *, int , struct file *,
+			void __user *, size_t *, loff_t *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#145: FILE: include/asm-x86/nmi.h:82:
+int lapic_watchdog_init(unsigned nmi_hz);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#146: FILE: include/asm-x86/nmi.h:83:
+int lapic_wd_event(unsigned nmi_hz);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#147: FILE: include/asm-x86/nmi.h:84:
+unsigned lapic_adjust_nmi_hz(unsigned hz);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#147: FILE: include/asm-x86/nmi.h:84:
+unsigned lapic_adjust_nmi_hz(unsigned hz);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#156: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000306087.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 23 warnings, 17 checks, 102 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000306087.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
