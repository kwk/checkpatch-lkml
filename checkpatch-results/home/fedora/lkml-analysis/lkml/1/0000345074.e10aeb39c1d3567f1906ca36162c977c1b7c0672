WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#78: FILE: include/asm-x86/page.h:1:
+#ifndef _ASM_X86_PAGE_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:SPACING: space required after that ',' (ctx:VxV)
#86: FILE: include/asm-x86/page.h:9:
+#define PAGE_SIZE	(_AC(1,UL) << PAGE_SHIFT)
                  	      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#87: FILE: include/asm-x86/page.h:10:
+#define PAGE_MASK	(~(PAGE_SIZE-1))
                  	            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#88: FILE: include/asm-x86/page.h:11:
+#define PHYSICAL_PAGE_MASK	(~(PAGE_SIZE-1) & __PHYSICAL_MASK)
                           	            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#90: FILE: include/asm-x86/page.h:13:
+#define LARGE_PAGE_MASK (~(LARGE_PAGE_SIZE-1))
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#91: FILE: include/asm-x86/page.h:14:
+#define LARGE_PAGE_SIZE (_AC(1,UL) << PMD_SHIFT)
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#93: FILE: include/asm-x86/page.h:16:
+#define HPAGE_SIZE	(_AC(1,UL) << HPAGE_SHIFT)
                   	      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#132: FILE: include/asm-x86/page.h:50:
+#define copy_page(to,from)	memcpy((void *)(to), (void *)(from), PAGE_SIZE)
                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#138: FILE: include/asm-x86/page.h:56:
+#define __phys_addr(x)		((unsigned long)(x)-PAGE_OFFSET)
                       		                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#145: FILE: include/asm-x86/page.h:63:
+#define MAXMEM			(-__PAGE_OFFSET-__VMALLOC_RESERVE)
               			               ^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#167: FILE: include/asm-x86/page.h:85:
+typedef struct { unsigned long pte_low; } pte_t, boot_pte_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#196: FILE: include/asm-x86/page.h:114:
+typedef struct { unsigned long pte_low, pte_high; } pte_t;

WARNING:SPACING: space prohibited before semicolon
#205: FILE: include/asm-x86/page.h:123:
+	return (pte_t) { .pte_low = val, .pte_high = (val >> 32) } ;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#227: FILE: include/asm-x86/page.h:145:
+typedef struct { pteval_t pte; } pte_t;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#243: FILE: include/asm-x86/page.h:161:
+void clear_page(void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#244: FILE: include/asm-x86/page.h:162:
+void copy_page(void *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#244: FILE: include/asm-x86/page.h:162:
+void copy_page(void *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#245: FILE: include/asm-x86/page.h:163:
+unsigned long __phys_addr(unsigned long);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'movableflags' may be better as '(movableflags)' to avoid precedence issues
#260: FILE: include/asm-x86/page.h:178:
+#define __alloc_zeroed_user_highpage(movableflags, vma, vaddr) \
+	alloc_page_vma(GFP_HIGHUSER | __GFP_ZERO | movableflags, vma, vaddr)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#275: FILE: include/asm-x86/page.h:188:
+#define CURRENT_MASK (~(THREAD_SIZE-1))
                                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#296: FILE: include/asm-x86/page.h:209:
+#define KERNEL_TEXT_SIZE  (40*1024*1024)
                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#296: FILE: include/asm-x86/page.h:209:
+#define KERNEL_TEXT_SIZE  (40*1024*1024)
                                   ^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#317: FILE: include/asm-x86/page.h:230:
+typedef struct { pgprotval_t pgprot; } pgprot_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#318: FILE: include/asm-x86/page.h:231:
+typedef struct { pgdval_t pgd; } pgd_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#338: FILE: include/asm-x86/page.h:251:
+typedef struct { pmdval_t pmd; } pmd_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#352: FILE: include/asm-x86/page.h:265:
+typedef struct { pudval_t pud; } pud_t;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#391: FILE: include/asm-x86/page.h:304:
+#define __PHYSICAL_MASK		((_AC(1,ULL) << __PHYSICAL_MASK_SHIFT) - 1)
                        		       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#392: FILE: include/asm-x86/page.h:305:
+#define __VIRTUAL_MASK		((_AC(1,ULL) << __VIRTUAL_MASK_SHIFT) - 1)
                       		       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#397: FILE: include/asm-x86/page.h:310:
+#define PAGE_ALIGN(addr)	(((addr)+PAGE_SIZE-1)&PAGE_MASK)
                         	        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#397: FILE: include/asm-x86/page.h:310:
+#define PAGE_ALIGN(addr)	(((addr)+PAGE_SIZE-1)&PAGE_MASK)
                         	                  ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#397: FILE: include/asm-x86/page.h:310:
+#define PAGE_ALIGN(addr)	(((addr)+PAGE_SIZE-1)&PAGE_MASK)
                         	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#401: FILE: include/asm-x86/page.h:314:
+#define __va(x)		((void *)((unsigned long)(x)+PAGE_OFFSET))
                		                            ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#411: FILE: include/asm-x86/page.h:324:
+	(((current->personality & READ_IMPLIES_EXEC) ? VM_EXEC : 0 ) | \

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'movableflags' may be better as '(movableflags)' to avoid precedence issues
#417: FILE: include/asm-x86/page.h:330:
+#define __alloc_zeroed_user_highpage(movableflags, vma, vaddr) \
+	alloc_page_vma(GFP_HIGHUSER | __GFP_ZERO | movableflags, vma, vaddr)

ERROR:CODE_INDENT: code indent should use tabs where possible
#842: FILE: include/asm-x86/pgtable_64.h:82:
+        *dst = val;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#842: FILE: include/asm-x86/pgtable_64.h:82:
+        *dst = val;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#871: FILE: include/asm-x86/pgtable_64.h:262:
+	pteval_t pte;
+	pte = (page_nr << PAGE_SHIFT);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#902: FILE: include/asm-x86/pgtable_64.h:363:
+	pteval_t val = pte_val(pte);
+	val &= _PAGE_CHG_MASK;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000345074.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 16 warnings, 14 checks, 441 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000345074.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
