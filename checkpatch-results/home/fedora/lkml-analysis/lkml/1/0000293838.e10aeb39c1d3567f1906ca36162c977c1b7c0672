WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#201: FILE: drivers/char/cyclades.c:670:
+#define ISZLOADED(card)	(((ZO_V1 == readl(&((struct RUNTIME_9060 __iomem *) \

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'card' - possible side-effects?
#201: FILE: drivers/char/cyclades.c:670:
+#define ISZLOADED(card)	(((ZO_V1 == readl(&((struct RUNTIME_9060 __iomem *) \
 			((card).ctl_addr))->mail_box_0)) || \
 			Z_FPGA_CHECK(card)) && \
+			(ZFIRM_ID == readl(&((struct FIRM_ID __iomem *) \
 			((card).base_addr+ID_ADDRESS))->signature)))

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#205: FILE: drivers/char/cyclades.c:673:
+			(ZFIRM_ID == readl(&((struct FIRM_ID __iomem *) \

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#231: FILE: drivers/char/cyclades.c:842:
 static struct pci_device_id cy_pci_dev_id[] __devinitdata = {

CHECK:CAMELCASE: Avoid CamelCase: <PCI_DEVICE_ID_CYCLOM_4Y_Lo>
#245: FILE: drivers/char/cyclades.c:848:
+	{ PCI_DEVICE(PCI_VENDOR_ID_CYCLADES, PCI_DEVICE_ID_CYCLOM_4Y_Lo) },

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <PCI_DEVICE_ID_CYCLOM_4Y_Hi>
#247: FILE: drivers/char/cyclades.c:850:
+	{ PCI_DEVICE(PCI_VENDOR_ID_CYCLADES, PCI_DEVICE_ID_CYCLOM_4Y_Hi) },

CHECK:CAMELCASE: Avoid CamelCase: <PCI_DEVICE_ID_CYCLOM_8Y_Lo>
#249: FILE: drivers/char/cyclades.c:852:
+	{ PCI_DEVICE(PCI_VENDOR_ID_CYCLADES, PCI_DEVICE_ID_CYCLOM_8Y_Lo) },

CHECK:CAMELCASE: Avoid CamelCase: <PCI_DEVICE_ID_CYCLOM_8Y_Hi>
#251: FILE: drivers/char/cyclades.c:854:
+	{ PCI_DEVICE(PCI_VENDOR_ID_CYCLADES, PCI_DEVICE_ID_CYCLOM_8Y_Hi) },

CHECK:CAMELCASE: Avoid CamelCase: <CyCCR>
#271: FILE: drivers/char/cyclades.c:921:
+		if (readb(base_addr + (CyCCR << index)) == 0)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#282: FILE: drivers/char/cyclades.c:938:
+static unsigned detect_isa_irq(void __iomem *address)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#292: FILE: drivers/char/cyclades.c:1048:
+					tty_insert_flip_char(tty,
 						readb(base_addr + (CyRDSR <<

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#300: FILE: drivers/char/cyclades.c:1329:
+		printk(KERN_DEBUG "cyy_interrupt: spurious interrupt %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#301: FILE: drivers/char/cyclades.c:1330:
+		printk(KERN_DEBUG "cyy_interrupt: spurious interrupt %d\n",
+				irq);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tty"
#370: FILE: drivers/char/cyclades.c:1646:
+		if (tty == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#379: FILE: drivers/char/cyclades.c:1742:
+		printk(KERN_DEBUG "cyz_interrupt: spurious interrupt %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#380: FILE: drivers/char/cyclades.c:1743:
+		printk(KERN_DEBUG "cyz_interrupt: spurious interrupt %d\n",
+									irq);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#478: FILE: drivers/char/cyclades.c:2208:
+	if ((filp->f_flags & O_NONBLOCK) ||
+					(tty->flags & (1 << TTY_IO_ERROR))) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#568: FILE: drivers/char/cyclades.c:2697:
+			/* Waiting for on-board buffers to be empty before
+			   closing the port */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#568: FILE: drivers/char/cyclades.c:2697:
+			   closing the port */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#577: FILE: drivers/char/cyclades.c:2705:
+		/* Waiting for on-board buffers to be empty before closing
+		   the port */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#577: FILE: drivers/char/cyclades.c:2705:
+		   the port */

CHECK:BRACES: Unbalanced braces around else statement
#664: FILE: drivers/char/cyclades.c:3106:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#676: FILE: drivers/char/cyclades.c:3161:
+		cy_writeb(base_addr + (CyCAR << index), (u_char) channel);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <CyCAR>
#676: FILE: drivers/char/cyclades.c:3161:
+		cy_writeb(base_addr + (CyCAR << index), (u_char) channel);

CHECK:BRACES: Unbalanced braces around else statement
#714: FILE: drivers/char/cyclades.c:3308:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#784: FILE: drivers/char/cyclades.c:3764:
+static int get_mon_info(struct cyclades_port *info,
+				struct cyclades_monitor __user *mon)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#795: FILE: drivers/char/cyclades.c:3804:
+static int get_threshold(struct cyclades_port *info,
+						unsigned long __user *value)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#806: FILE: drivers/char/cyclades.c:3826:
+static int set_default_threshold(struct cyclades_port *info,
+							unsigned long value)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#815: FILE: drivers/char/cyclades.c:3833:
+static int get_default_threshold(struct cyclades_port *info,
+						unsigned long __user *value)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#825: FILE: drivers/char/cyclades.c:3861:
+static int get_timeout(struct cyclades_port *info,
+						unsigned long __user *value)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#836: FILE: drivers/char/cyclades.c:3889:
+static int get_default_timeout(struct cyclades_port *info,
+					unsigned long __user *value)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#881: FILE: drivers/char/cyclades.c:4306:
+		cy_writeb(base_addr + (CyCAR << index),
+			(u_char) (channel & 0x0003));	/* index channel */

CHECK:SPACING: No space is necessary after a cast
#881: FILE: drivers/char/cyclades.c:4306:
+			(u_char) (channel & 0x0003));	/* index channel */

CHECK:CAMELCASE: Avoid CamelCase: <CyGFRCR>
#895: FILE: drivers/char/cyclades.c:4411:
+				      (CyGFRCR << index));

CHECK:CAMELCASE: Avoid CamelCase: <CyMAX_CHIPS_PER_CARD>
#906: FILE: drivers/char/cyclades.c:4458:
+	for (chip_number = 0; chip_number < CyMAX_CHIPS_PER_CARD;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000293838.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 11 warnings, 25 checks, 842 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000293838.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
