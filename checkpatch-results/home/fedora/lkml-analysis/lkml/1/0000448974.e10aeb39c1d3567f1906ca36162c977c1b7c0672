WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#65: FILE: kernel/kprobes.c:49:
+#include <asm/uaccess.h>

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#85: FILE: kernel/kprobes.c:572:
+		if (atomic_add_return(1, &kprobe_count) == \

CHECK:BRACES: Unbalanced braces around else statement
#92: FILE: kernel/kprobes.c:577:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#93: FILE: kernel/kprobes.c:578:
+		printk("Kprobes are globally disabled. This kprobe [@ %p] "

WARNING:SPLIT_STRING: quoted string split across lines
#94: FILE: kernel/kprobes.c:579:
+		printk("Kprobes are globally disabled. This kprobe [@ %p] "
+			"will be enabled with all other probes\n", p->addr);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#129: FILE: kernel/kprobes.c:825:
+		const char *sym, int offset,char *modname)
 		                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: kernel/kprobes.c:837:
+		seq_printf(pi, "%p  %s  %s+0x%x  %s  %d\n",
+			p->addr, kprobe_type, sym, offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#145: FILE: kernel/kprobes.c:841:
+		seq_printf(pi, "%p  %s  %p  %d\n", p->addr, kprobe_type,
+			p->addr, kprobe_enabled);

WARNING:RETURN_VOID: void function return statements are not generally useful
#184: FILE: kernel/kprobes.c:937:
+	return;
+}

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#208: FILE: kernel/kprobes.c:961:
+	synchronize_sched();

Usage of a deprecated RCU API is detected.  It is recommended to replace
old flavourful RCU APIs by their new vanilla-RCU counterparts.

The full list of available RCU APIs can be viewed from the kernel docs.

See: https://www.kernel.org/doc/html/latest/RCU/whatisRCU.html#full-list-of-rcu-apis

WARNING:RETURN_VOID: void function return statements are not generally useful
#217: FILE: kernel/kprobes.c:970:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: kernel/kprobes.c:978:
+static ssize_t read_enabled_file_bool(struct file *file,
+	       char __user *user_buf, size_t count, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: kernel/kprobes.c:992:
+static ssize_t write_enabled_file_bool(struct file *file,
+	       const char __user *user_buf, size_t count, loff_t *ppos)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#244: FILE: kernel/kprobes.c:997:
+	buf_size = min(count, (sizeof(buf)-1));
 	                                  ^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#264: FILE: kernel/kprobes.c:1017:
+static struct file_operations fops_kp = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#281: FILE: kernel/kprobes.c:1039:
+	file = debugfs_create_file("enabled", 0600, dir,
+					&value, &fops_kp);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000448974.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 8 warnings, 7 checks, 270 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000448974.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
