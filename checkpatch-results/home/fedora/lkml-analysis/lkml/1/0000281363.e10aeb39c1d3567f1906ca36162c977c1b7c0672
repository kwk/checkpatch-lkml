WARNING:TYPO_SPELLING: 'accidently' may be misspelled - perhaps 'accidentally'?
#84: 
3) Clear the bit in trap return so we don't accidently try to set
                                            ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: arch/sparc64/kernel/signal32.c:298:
+ ^I/* Prevent syscall restart.  */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#181: FILE: arch/sparc64/kernel/signal32.c:298:
+ ^I/* Prevent syscall restart.  */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: arch/sparc64/kernel/signal32.c:298:
+ ^I/* Prevent syscall restart.  */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: arch/sparc64/kernel/signal32.c:299:
+ ^Ipt_regs_clear_syscall(regs);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#182: FILE: arch/sparc64/kernel/signal32.c:299:
+ ^Ipt_regs_clear_syscall(regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: arch/sparc64/kernel/signal32.c:299:
+ ^Ipt_regs_clear_syscall(regs);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: arch/sparc64/kernel/signal32.c:454:
+ ^I/* Prevent syscall restart.  */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#191: FILE: arch/sparc64/kernel/signal32.c:454:
+ ^I/* Prevent syscall restart.  */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: arch/sparc64/kernel/signal32.c:454:
+ ^I/* Prevent syscall restart.  */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: arch/sparc64/kernel/signal32.c:455:
+ ^Ipt_regs_clear_syscall(regs);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#192: FILE: arch/sparc64/kernel/signal32.c:455:
+ ^Ipt_regs_clear_syscall(regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: arch/sparc64/kernel/signal32.c:455:
+ ^Ipt_regs_clear_syscall(regs);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#289: FILE: arch/sparc64/kernel/signal.c:538:
+ ^Iif (pt_regs_is_syscall(regs) &&$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#289: FILE: arch/sparc64/kernel/signal.c:538:
+ ^Iif (pt_regs_is_syscall(regs) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: arch/sparc64/kernel/signal.c:538:
+ ^Iif (pt_regs_is_syscall(regs) &&$

CHECK:BRACES: braces {} should be used on all arms of this statement
#289: FILE: arch/sparc64/kernel/signal.c:538:
+ 	if (pt_regs_is_syscall(regs) &&
[...]
+ 	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#290: FILE: arch/sparc64/kernel/signal.c:539:
+ ^I    (regs->tstate & (TSTATE_XCARRY | TSTATE_ICARRY))) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#290: FILE: arch/sparc64/kernel/signal.c:539:
+ ^I    (regs->tstate & (TSTATE_XCARRY | TSTATE_ICARRY))) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#290: FILE: arch/sparc64/kernel/signal.c:539:
+ 	if (pt_regs_is_syscall(regs) &&
+ 	    (regs->tstate & (TSTATE_XCARRY | TSTATE_ICARRY))) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: arch/sparc64/kernel/signal.c:539:
+ ^I    (regs->tstate & (TSTATE_XCARRY | TSTATE_ICARRY))) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#291: FILE: arch/sparc64/kernel/signal.c:540:
+ ^I^Irestart_syscall = 1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#291: FILE: arch/sparc64/kernel/signal.c:540:
+ ^I^Irestart_syscall = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: arch/sparc64/kernel/signal.c:540:
+ ^I^Irestart_syscall = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#292: FILE: arch/sparc64/kernel/signal.c:541:
+ ^I} else$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#292: FILE: arch/sparc64/kernel/signal.c:541:
+ ^I} else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: arch/sparc64/kernel/signal.c:541:
+ ^I} else$

CHECK:BRACES: Unbalanced braces around else statement
#292: FILE: arch/sparc64/kernel/signal.c:541:
+ 	} else

ERROR:CODE_INDENT: code indent should use tabs where possible
#293: FILE: arch/sparc64/kernel/signal.c:542:
+ ^I^Irestart_syscall = 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#293: FILE: arch/sparc64/kernel/signal.c:542:
+ ^I^Irestart_syscall = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: arch/sparc64/kernel/signal.c:542:
+ ^I^Irestart_syscall = 0;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#476: FILE: arch/sparc/kernel/signal.c:1017:
+asmlinkage void do_signal(struct pt_regs * regs, unsigned long orig_i0)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#495: FILE: arch/sparc/kernel/signal.c:1036:
+ ^Iif (pt_regs_is_syscall(regs) && (regs->psr & PSR_C))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#495: FILE: arch/sparc/kernel/signal.c:1036:
+ ^Iif (pt_regs_is_syscall(regs) && (regs->psr & PSR_C))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#495: FILE: arch/sparc/kernel/signal.c:1036:
+ ^Iif (pt_regs_is_syscall(regs) && (regs->psr & PSR_C))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#496: FILE: arch/sparc/kernel/signal.c:1037:
+ ^I^Irestart_syscall = 1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#496: FILE: arch/sparc/kernel/signal.c:1037:
+ ^I^Irestart_syscall = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: arch/sparc/kernel/signal.c:1037:
+ ^I^Irestart_syscall = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#497: FILE: arch/sparc/kernel/signal.c:1038:
+ ^Ielse$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#497: FILE: arch/sparc/kernel/signal.c:1038:
+ ^Ielse$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: arch/sparc/kernel/signal.c:1038:
+ ^Ielse$

ERROR:CODE_INDENT: code indent should use tabs where possible
#498: FILE: arch/sparc/kernel/signal.c:1039:
+ ^I^Irestart_syscall = 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#498: FILE: arch/sparc/kernel/signal.c:1039:
+ ^I^Irestart_syscall = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: arch/sparc/kernel/signal.c:1039:
+ ^I^Irestart_syscall = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#506: FILE: arch/sparc/kernel/signal.c:1046:
+ ^Isignr = get_signal_to_deliver(&info, &ka, regs, NULL);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#506: FILE: arch/sparc/kernel/signal.c:1046:
+ ^Isignr = get_signal_to_deliver(&info, &ka, regs, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: arch/sparc/kernel/signal.c:1046:
+ ^Isignr = get_signal_to_deliver(&info, &ka, regs, NULL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#508: FILE: arch/sparc/kernel/signal.c:1048:
+ ^I/* If the debugger messes with the program counter, it clears$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#508: FILE: arch/sparc/kernel/signal.c:1048:
+ ^I/* If the debugger messes with the program counter, it clears$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#508: FILE: arch/sparc/kernel/signal.c:1048:
+ ^I/* If the debugger messes with the program counter, it clears$

ERROR:CODE_INDENT: code indent should use tabs where possible
#509: FILE: arch/sparc/kernel/signal.c:1049:
+ ^I * the software "in syscall" bit, directing us to not perform$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#509: FILE: arch/sparc/kernel/signal.c:1049:
+ ^I * the software "in syscall" bit, directing us to not perform$

ERROR:CODE_INDENT: code indent should use tabs where possible
#510: FILE: arch/sparc/kernel/signal.c:1050:
+ ^I * a syscall restart.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#510: FILE: arch/sparc/kernel/signal.c:1050:
+ ^I * a syscall restart.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#511: FILE: arch/sparc/kernel/signal.c:1051:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#511: FILE: arch/sparc/kernel/signal.c:1051:
+ ^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#512: FILE: arch/sparc/kernel/signal.c:1052:
+ ^Iif (restart_syscall && !pt_regs_is_syscall(regs))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#512: FILE: arch/sparc/kernel/signal.c:1052:
+ ^Iif (restart_syscall && !pt_regs_is_syscall(regs))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: arch/sparc/kernel/signal.c:1052:
+ ^Iif (restart_syscall && !pt_regs_is_syscall(regs))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#513: FILE: arch/sparc/kernel/signal.c:1053:
+ ^I^Irestart_syscall = 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#513: FILE: arch/sparc/kernel/signal.c:1053:
+ ^I^Irestart_syscall = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#513: FILE: arch/sparc/kernel/signal.c:1053:
+ ^I^Irestart_syscall = 0;$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#595: FILE: include/asm-sparc64/pstate.h:65:
+#define TSTATE_SYSCALL	_AC(0x0000000000000020,UL) /* in syscall trap   */
                       	                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#650: FILE: include/asm-sparc64/ttable.h:94:
+	rdpr	%pil, %g2;				\
 	    	^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#650: FILE: include/asm-sparc64/ttable.h:94:
+	rdpr	%pil, %g2;				\
 	    	      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#651: FILE: include/asm-sparc64/ttable.h:95:
+	mov	TSTATE_SYSCALL, %g3;			\
 	   	                ^

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#654: FILE: include/asm-sparc64/ttable.h:97:
+	ba,pt	%xcc, etrap_syscall;			\
 	^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#654: FILE: include/asm-sparc64/ttable.h:97:
+	ba,pt	%xcc, etrap_syscall;			\
 	  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#654: FILE: include/asm-sparc64/ttable.h:97:
+	ba,pt	%xcc, etrap_syscall;			\
 	     	^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#660: FILE: include/asm-sparc64/ttable.h:101:
+	 or	%l7, %lo(systbl), %l7;
 	   	^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#660: FILE: include/asm-sparc64/ttable.h:101:
+	 or	%l7, %lo(systbl), %l7;
 	   	     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#660: FILE: include/asm-sparc64/ttable.h:101:
+	 or	%l7, %lo(systbl), %l7;
 	   	                  ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000281363.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 23 errors, 39 warnings, 10 checks, 483 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000281363.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
