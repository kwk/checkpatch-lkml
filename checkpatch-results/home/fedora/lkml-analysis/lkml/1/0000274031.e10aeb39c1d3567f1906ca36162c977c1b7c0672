WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#61: 
Signed-off-by:  Lee Schermerhorn <lee.schermerhorn@hp.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#62: 
Signed-off-by:  Rik van Riel <riel@redhat.com>

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#63: 
Signed-off-by:  Kosaki Motohiro <kosaki.motohiro@jp.fujitsu.com>

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#158: FILE: mm/vmscan.c:2341:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#162: FILE: mm/vmscan.c:2345:
+		enum lru_list l = LRU_INACTIVE_ANON + page_file_cache(page);
+		__dec_zone_state(zone, NR_NORECLAIM);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#194: FILE: mm/vmscan.c:2377:
+	while (next < end &&
+		pagevec_lookup(&pvec, mapping, next, PAGEVEC_SIZE)) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#230: FILE: mm/vmscan.c:2413:
+
+		}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#236: FILE: mm/vmscan.c:2419:
+
+}

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#246: FILE: include/linux/swap.h:235:
+extern void scan_mapping_noreclaim_pages(struct address_space *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct address_space *' should also have an identifier name
#246: FILE: include/linux/swap.h:235:
+extern void scan_mapping_noreclaim_pages(struct address_space *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#253: FILE: include/linux/swap.h:242:
 }
+static inline void scan_mapping_noreclaim_pages(struct address_space *mapping)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#268: FILE: include/linux/mm.h:697:
+extern struct address_space *shmem_lock(struct file *file, int lock,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: include/linux/mm.h:701:
+static inline struct address_space *shmem_lock(struct file *file, int lock,
+					struct user_struct *user)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'shm_file' should also have an identifier name
#290: FILE: ipc/shm.c:740:
+		struct file *uninitialized_var(shm_file);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000274031.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 8 checks, 225 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000274031.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
