ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: drivers/video/backlight/corgi_bl.c:38:
+ ^Imutex_lock(&info->mutex);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#116: FILE: drivers/video/backlight/corgi_bl.c:38:
+ ^Imutex_lock(&info->mutex);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: drivers/video/backlight/corgi_bl.c:38:
+ ^Imutex_lock(&info->mutex);$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*info)...) over kmalloc(sizeof(struct corgibl_info)...)
#207: FILE: drivers/video/backlight/corgi_bl.c:112:
+	info = kmalloc(sizeof(struct corgibl_info), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#226: FILE: drivers/video/backlight/corgi_bl.c:127:
+	info->bd = backlight_device_register (name,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#227: FILE: drivers/video/backlight/corgi_bl.c:128:
+	info->bd = backlight_device_register (name,
+		&pdev->dev, info, &info->props);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#228: FILE: drivers/video/backlight/corgi_bl.c:129:
+	if (IS_ERR (info->bd)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->bd'
#228: FILE: drivers/video/backlight/corgi_bl.c:129:
+	if (IS_ERR (info->bd)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#243: FILE: drivers/video/backlight/corgi_bl.c:140:
+	printk("Corgi Backlight Driver Initialized (%s).\n", name);

WARNING:LINE_SPACING: Missing a blank line after declarations
#258: FILE: drivers/video/backlight/corgi_bl.c:151:
+	struct corgibl_info *info = platform_get_drvdata(pdev);
+	info->props.power = 0;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#286: FILE: include/linux/corgi_bl.h:12:
 };
+extern void corgibl_limit_intensity(struct backlight_device *bd, int limit);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#286: FILE: include/linux/corgi_bl.h:12:
+extern void corgibl_limit_intensity(struct backlight_device *bd, int limit);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#290: FILE: include/linux/corgi_bl.h:16:
+	struct mutex mutex;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#300: FILE: include/linux/corgi_bl.h:26:
+#define to_backlight_info(_p) container_of(_p, struct corgibl_info, props) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000464227.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 6 warnings, 6 checks, 216 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000464227.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
