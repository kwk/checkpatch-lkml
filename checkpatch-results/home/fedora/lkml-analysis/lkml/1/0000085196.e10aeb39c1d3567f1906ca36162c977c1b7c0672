WARNING:TYPO_SPELLING: 'curently' may be misspelled - perhaps 'currently'?
#38: 
replace the one curently in mmotm with this one.
                ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: mm/memcontrol.c:483:
+static void mem_cgroup_swap_statistics(struct mem_cgroup *mem,
+					 bool charge)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#229: FILE: mm/memcontrol.c:1439:
+				res_counter_uncharge(&mem->memsw, PAGE_SIZE,
+							NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: mm/memcontrol.c:1803:
+				res_counter_uncharge(&memcg->memsw, PAGE_SIZE,
+							NULL);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ctype != MEM_CGROUP_CHARGE_TYPE_SWAPOUT'
#304: FILE: mm/memcontrol.c:1888:
+		if (do_swap_account &&
+				(ctype != MEM_CGROUP_CHARGE_TYPE_SWAPOUT))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#305: FILE: mm/memcontrol.c:1889:
+		if (do_swap_account &&
+				(ctype != MEM_CGROUP_CHARGE_TYPE_SWAPOUT))

WARNING:LINE_SPACING: Missing a blank line after declarations
#337: FILE: mm/memcontrol.c:2498:
+	struct mem_cgroup_idx_data *d = data;
+	d->val += mem_cgroup_read_stat(&mem->stat, d->idx);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#343: FILE: mm/memcontrol.c:2504:
+mem_cgroup_get_recursive_idx_stat(struct mem_cgroup *mem,
+				enum mem_cgroup_stat_index idx, s64 *val)

WARNING:LINE_SPACING: Missing a blank line after declarations
#346: FILE: mm/memcontrol.c:2507:
+	struct mem_cgroup_idx_data d;
+	d.idx = idx;

CHECK:BRACES: braces {} should be used on all arms of this statement
#364: FILE: mm/memcontrol.c:2523:
+		if (name == RES_USAGE && mem_cgroup_is_root(mem)) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#366: FILE: mm/memcontrol.c:2525:
+			mem_cgroup_get_recursive_idx_stat(mem,
+				MEM_CGROUP_STAT_CACHE, &idx_val);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#369: FILE: mm/memcontrol.c:2528:
+			mem_cgroup_get_recursive_idx_stat(mem,
+				MEM_CGROUP_STAT_RSS, &idx_val);

CHECK:BRACES: Unbalanced braces around else statement
#372: FILE: mm/memcontrol.c:2531:
+		} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#377: FILE: mm/memcontrol.c:2535:
+		if (name == RES_USAGE && mem_cgroup_is_root(mem)) {
[...]
+		} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#379: FILE: mm/memcontrol.c:2537:
+			mem_cgroup_get_recursive_idx_stat(mem,
+				MEM_CGROUP_STAT_CACHE, &idx_val);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#382: FILE: mm/memcontrol.c:2540:
+			mem_cgroup_get_recursive_idx_stat(mem,
+				MEM_CGROUP_STAT_RSS, &idx_val);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#385: FILE: mm/memcontrol.c:2543:
+			mem_cgroup_get_recursive_idx_stat(mem,
+				MEM_CGROUP_STAT_SWAPOUT, &idx_val);

CHECK:BRACES: Unbalanced braces around else statement
#387: FILE: mm/memcontrol.c:2545:
+		} else

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000085196.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 15 checks, 210 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000085196.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
