WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#75: FILE: arch/powerpc/Kconfig:343:
+config PPC_SUBPAGE_PROT
+	bool "Support setting protections for 4k subpages"
+	depends on PPC_64K_PAGES
+	help
+	  This option adds support for a system call to allow user programs
+	  to set access permissions (read/write, readonly, or no access)
+	  on the 4k subpages of each 64k page.
+

Kconfig symbols should have a help text which fully describes
it.

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#135: FILE: arch/powerpc/kernel/syscalls.c:347:
+	spinlock_t *ptl;

CHECK:SPACING: No space is necessary after a cast
#153: FILE: arch/powerpc/kernel/syscalls.c:365:
+			spp = (u32 *) pmd_val(*spm);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#164: FILE: arch/powerpc/kernel/syscalls.c:376:
+			if (nw == PTRS_PER_PTE) {
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#169: FILE: arch/powerpc/kernel/syscalls.c:381:
+			} else

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#205: FILE: arch/powerpc/kernel/syscalls.c:417:
+	spinlock_t *ptl;

CHECK:SPACING: No space is necessary after a cast
#245: FILE: arch/powerpc/kernel/syscalls.c:457:
+			spp = (u32 *) pmd_val(*spm);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#247: FILE: arch/powerpc/kernel/syscalls.c:459:
+				spp = kzalloc(PTRS_PER_PTE * sizeof(u32),
+					      GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:BRACES: braces {} should be used on all arms of this statement
#253: FILE: arch/powerpc/kernel/syscalls.c:465:
+				if (!pmd_val(*spm))
[...]
+				else {
[...]

CHECK:SPACING: No space is necessary after a cast
#254: FILE: arch/powerpc/kernel/syscalls.c:466:
+					pmd_val(*spm) = (unsigned long) spp;

CHECK:BRACES: Unbalanced braces around else statement
#255: FILE: arch/powerpc/kernel/syscalls.c:467:
+				else {

CHECK:SPACING: No space is necessary after a cast
#257: FILE: arch/powerpc/kernel/syscalls.c:469:
+					spp = (u32 *) pmd_val(*spm);

WARNING:LINE_SPACING: Missing a blank line after declarations
#409: FILE: arch/powerpc/mm/hash_utils_64.c:862:
+		int spp = subpage_protection(pgdir, ea);
+		if (access & spp)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#452: FILE: arch/powerpc/mm/hash_utils_64.c:994:
+	} else

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#493: FILE: include/asm-powerpc/mmu-hash64.h:280:
+extern void demote_segment_4k(struct mm_struct *mm, unsigned long addr);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#526: FILE: include/asm-powerpc/pgtable-ppc64.h:198:
+extern void pmd_clear(pmd_t *pmdp);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000349963.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 13 checks, 428 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000349963.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
