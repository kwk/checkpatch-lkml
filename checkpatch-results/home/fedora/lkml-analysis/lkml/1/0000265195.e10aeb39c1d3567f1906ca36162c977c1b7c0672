CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#103: FILE: drivers/usb/serial/kobil_sct.c:74:
+static int  kobil_open(struct tty_struct *tty,
 			struct usb_serial_port *port, struct file *filp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#109: FILE: drivers/usb/serial/kobil_sct.c:78:
+static int  kobil_write(struct tty_struct *tty, struct usb_serial_port *port,
 			 const unsigned char *buf, int count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: drivers/usb/serial/kobil_sct.c:88:
+static void kobil_set_termios(struct tty_struct *tty,
 			struct usb_serial_port *port, struct ktermios *old);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#173: FILE: drivers/usb/serial/kobil_sct.c:167:
+		printk(KERN_DEBUG

CHECK:CAMELCASE: Avoid CamelCase: <bNumEndpoints>
#195: FILE: drivers/usb/serial/kobil_sct.c:186:
+	for (i = 0; i < altsetting->desc.bNumEndpoints; i++) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#202: FILE: drivers/usb/serial/kobil_sct.c:190:
+			dbg("%s Found interrupt out endpoint. Address: %d",
+				__func__, endpoint->desc.bEndpointAddress);

CHECK:CAMELCASE: Avoid CamelCase: <bEndpointAddress>
#202: FILE: drivers/usb/serial/kobil_sct.c:190:
+				__func__, endpoint->desc.bEndpointAddress);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: drivers/usb/serial/kobil_sct.c:196:
+			dbg("%s Found interrupt in  endpoint. Address: %d",
+				__func__, endpoint->desc.bEndpointAddress);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: drivers/usb/serial/kobil_sct.c:258:
+		dbg("%s - port %d  Allocating port->write_urb",
+						__func__, port->number);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#279: FILE: drivers/usb/serial/kobil_sct.c:262:
+			dbg("%s - port %d usb_alloc_urb failed",
+						__func__, port->number);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#312: FILE: drivers/usb/serial/kobil_sct.c:280:
+	result = usb_control_msg(port->serial->dev,
+			  usb_rcvctrlpipe(port->serial->dev, 0),

CHECK:CAMELCASE: Avoid CamelCase: <SUSBCRequest_GetMisc>
#313: FILE: drivers/usb/serial/kobil_sct.c:281:
+			  SUSBCRequest_GetMisc,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#322: FILE: drivers/usb/serial/kobil_sct.c:290:
+	dbg("%s - port %d Send get_HW_version URB returns: %i",
+		__func__, port->number, result);

WARNING:TYPO_SPELLING: 'Harware' may be misspelled - perhaps 'Hardware'?
#323: FILE: drivers/usb/serial/kobil_sct.c:291:
+	dbg("Harware version: %i.%i.%i",
 	     ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#324: FILE: drivers/usb/serial/kobil_sct.c:292:
+	dbg("Harware version: %i.%i.%i",
+		transfer_buffer[0], transfer_buffer[1], transfer_buffer[2]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#328: FILE: drivers/usb/serial/kobil_sct.c:296:
+	result = usb_control_msg(port->serial->dev,
+			  usb_rcvctrlpipe(port->serial->dev, 0),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#338: FILE: drivers/usb/serial/kobil_sct.c:306:
+	dbg("%s - port %d Send get_FW_version URB returns: %i",
+					__func__, port->number, result);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#340: FILE: drivers/usb/serial/kobil_sct.c:308:
+	dbg("Firmware version: %i.%i.%i",
+		transfer_buffer[0], transfer_buffer[1], transfer_buffer[2]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#343: FILE: drivers/usb/serial/kobil_sct.c:311:
+	if (priv->device_type == KOBIL_ADAPTER_B_PRODUCT_ID ||
+			priv->device_type == KOBIL_ADAPTER_K_PRODUCT_ID) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#346: FILE: drivers/usb/serial/kobil_sct.c:314:
+		result = usb_control_msg(port->serial->dev,
+			  usb_rcvctrlpipe(port->serial->dev, 0),

CHECK:CAMELCASE: Avoid CamelCase: <SUSBCRequest_SetBaudRateParityAndStopBits>
#347: FILE: drivers/usb/serial/kobil_sct.c:315:
+			  SUSBCRequest_SetBaudRateParityAndStopBits,

CHECK:CAMELCASE: Avoid CamelCase: <SUSBCR_SPASB_1StopBit>
#350: FILE: drivers/usb/serial/kobil_sct.c:318:
+							SUSBCR_SPASB_1StopBit,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#370: FILE: drivers/usb/serial/kobil_sct.c:325:
+		dbg("%s - port %d Send set_baudrate URB returns: %i",
+					__func__, port->number, result);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#374: FILE: drivers/usb/serial/kobil_sct.c:329:
+		result = usb_control_msg(port->serial->dev,
+			  usb_rcvctrlpipe(port->serial->dev, 0),

CHECK:CAMELCASE: Avoid CamelCase: <SUSBCRequest_Misc>
#375: FILE: drivers/usb/serial/kobil_sct.c:330:
+			  SUSBCRequest_Misc,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#413: FILE: drivers/usb/serial/kobil_sct.c:339:
+		dbg("%s - port %d Send reset_all_queues URB returns: %i",
+					__func__, port->number, result);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#425: FILE: drivers/usb/serial/kobil_sct.c:347:
+		dbg("%s - port %d Send read URB returns: %i",
+					__func__, port->number, result);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#485: FILE: drivers/usb/serial/kobil_sct.c:413:
+	dbg("%s - port %d Send read URB returns: %i",
+			__func__, port->number, result);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#497: FILE: drivers/usb/serial/kobil_sct.c:423:
+static int kobil_write(struct tty_struct *tty, struct usb_serial_port *port,
 			const unsigned char *buf, int count)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#508: FILE: drivers/usb/serial/kobil_sct.c:432:
+		dbg("%s - port %d write request of 0 bytes",
+						__func__, port->number);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#522: FILE: drivers/usb/serial/kobil_sct.c:446:
+	usb_serial_debug_data(debug, &port->dev, __func__, count,
+						priv->buf + priv->filled);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#532: FILE: drivers/usb/serial/kobil_sct.c:450:
+	/* only send complete block. TWIN, KAAN SIM and adapter K
+	   use the same protocol. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#532: FILE: drivers/usb/serial/kobil_sct.c:450:
+	   use the same protocol. */

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#533: FILE: drivers/usb/serial/kobil_sct.c:451:
+	if (((priv->device_type != KOBIL_ADAPTER_B_PRODUCT_ID) && (priv->filled > 2) && (priv->filled >= (priv->buf[1] + 3))) ||

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'priv->device_type != KOBIL_ADAPTER_B_PRODUCT_ID'
#533: FILE: drivers/usb/serial/kobil_sct.c:451:
+	if (((priv->device_type != KOBIL_ADAPTER_B_PRODUCT_ID) && (priv->filled > 2) && (priv->filled >= (priv->buf[1] + 3))) ||
+	     ((priv->device_type == KOBIL_ADAPTER_B_PRODUCT_ID) && (priv->filled > 3) && (priv->filled >= (priv->buf[2] + 4)))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'priv->filled > 2'
#533: FILE: drivers/usb/serial/kobil_sct.c:451:
+	if (((priv->device_type != KOBIL_ADAPTER_B_PRODUCT_ID) && (priv->filled > 2) && (priv->filled >= (priv->buf[1] + 3))) ||
+	     ((priv->device_type == KOBIL_ADAPTER_B_PRODUCT_ID) && (priv->filled > 3) && (priv->filled >= (priv->buf[2] + 4)))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'priv->device_type == KOBIL_ADAPTER_B_PRODUCT_ID'
#533: FILE: drivers/usb/serial/kobil_sct.c:451:
+	if (((priv->device_type != KOBIL_ADAPTER_B_PRODUCT_ID) && (priv->filled > 2) && (priv->filled >= (priv->buf[1] + 3))) ||
+	     ((priv->device_type == KOBIL_ADAPTER_B_PRODUCT_ID) && (priv->filled > 3) && (priv->filled >= (priv->buf[2] + 4)))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'priv->filled > 3'
#533: FILE: drivers/usb/serial/kobil_sct.c:451:
+	if (((priv->device_type != KOBIL_ADAPTER_B_PRODUCT_ID) && (priv->filled > 2) && (priv->filled >= (priv->buf[1] + 3))) ||
+	     ((priv->device_type == KOBIL_ADAPTER_B_PRODUCT_ID) && (priv->filled > 3) && (priv->filled >= (priv->buf[2] + 4)))) {

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#534: FILE: drivers/usb/serial/kobil_sct.c:452:
+	     ((priv->device_type == KOBIL_ADAPTER_B_PRODUCT_ID) && (priv->filled > 3) && (priv->filled >= (priv->buf[2] + 4)))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#534: FILE: drivers/usb/serial/kobil_sct.c:452:
+	if (((priv->device_type != KOBIL_ADAPTER_B_PRODUCT_ID) && (priv->filled > 2) && (priv->filled >= (priv->buf[1] + 3))) ||
+	     ((priv->device_type == KOBIL_ADAPTER_B_PRODUCT_ID) && (priv->filled > 3) && (priv->filled >= (priv->buf[2] + 4)))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'priv->device_type == KOBIL_ADAPTER_B_PRODUCT_ID'
#536: FILE: drivers/usb/serial/kobil_sct.c:454:
+		if ((priv->device_type == KOBIL_ADAPTER_B_PRODUCT_ID)
+			|| (priv->device_type == KOBIL_ADAPTER_K_PRODUCT_ID))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'priv->device_type == KOBIL_ADAPTER_K_PRODUCT_ID'
#536: FILE: drivers/usb/serial/kobil_sct.c:454:
+		if ((priv->device_type == KOBIL_ADAPTER_B_PRODUCT_ID)
+			|| (priv->device_type == KOBIL_ADAPTER_K_PRODUCT_ID))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#537: FILE: drivers/usb/serial/kobil_sct.c:455:
+		if ((priv->device_type == KOBIL_ADAPTER_B_PRODUCT_ID)
+			|| (priv->device_type == KOBIL_ADAPTER_K_PRODUCT_ID))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#560: FILE: drivers/usb/serial/kobil_sct.c:465:
+			memcpy(port->write_urb->transfer_buffer,
+					priv->buf + priv->cur_pos, length);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#562: FILE: drivers/usb/serial/kobil_sct.c:467:
+			usb_fill_int_urb(port->write_urb,
+				  port->serial->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#564: FILE: drivers/usb/serial/kobil_sct.c:469:
+				  usb_sndintpipe(port->serial->dev,
+					priv->write_int_endpoint_address),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#577: FILE: drivers/usb/serial/kobil_sct.c:480:
+			dbg("%s - port %d Send write URB returns: %i",
+					__func__, port->number, result);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#593: FILE: drivers/usb/serial/kobil_sct.c:491:
+		/* someone sets the dev to 0 if the close method
+		   has been called */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#593: FILE: drivers/usb/serial/kobil_sct.c:491:
+		   has been called */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#602: FILE: drivers/usb/serial/kobil_sct.c:496:
+		if (priv->device_type == KOBIL_ADAPTER_B_PRODUCT_ID ||
+			priv->device_type == KOBIL_ADAPTER_K_PRODUCT_ID) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#604: FILE: drivers/usb/serial/kobil_sct.c:498:
+			/* someone sets the dev to 0 if the close method has
+			   been called */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#604: FILE: drivers/usb/serial/kobil_sct.c:498:
+			   been called */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#611: FILE: drivers/usb/serial/kobil_sct.c:502:
+			result = usb_submit_urb(port->interrupt_in_urb,
+								GFP_NOIO);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#613: FILE: drivers/usb/serial/kobil_sct.c:504:
+			dbg("%s - port %d Send read URB returns: %i",
+					__func__, port->number, result);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#642: FILE: drivers/usb/serial/kobil_sct.c:529:
+	if (priv->device_type == KOBIL_USBTWIN_PRODUCT_ID
+			|| priv->device_type == KOBIL_KAAN_SIM_PRODUCT_ID) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#667: FILE: drivers/usb/serial/kobil_sct.c:540:
+	result = usb_control_msg(port->serial->dev,
+			  usb_rcvctrlpipe(port->serial->dev, 0),

CHECK:CAMELCASE: Avoid CamelCase: <SUSBCRequest_GetStatusLineState>
#668: FILE: drivers/usb/serial/kobil_sct.c:541:
+			  SUSBCRequest_GetStatusLineState,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#696: FILE: drivers/usb/serial/kobil_sct.c:573:
+	if (priv->device_type == KOBIL_USBTWIN_PRODUCT_ID
+		|| priv->device_type == KOBIL_KAAN_SIM_PRODUCT_ID) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#717: FILE: drivers/usb/serial/kobil_sct.c:595:
+			dbg("%s - port %d Setting DTR",
+						__func__, port->number);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#730: FILE: drivers/usb/serial/kobil_sct.c:598:
+			dbg("%s - port %d Clearing DTR",
+						__func__, port->number);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#732: FILE: drivers/usb/serial/kobil_sct.c:600:
+		result = usb_control_msg(port->serial->dev,
+			  usb_rcvctrlpipe(port->serial->dev, 0),

CHECK:CAMELCASE: Avoid CamelCase: <SUSBCRequest_SetStatusLinesOrQueues>
#733: FILE: drivers/usb/serial/kobil_sct.c:601:
+			  SUSBCRequest_SetStatusLinesOrQueues,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#744: FILE: drivers/usb/serial/kobil_sct.c:611:
+			dbg("%s - port %d Setting RTS",
+						__func__, port->number);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#757: FILE: drivers/usb/serial/kobil_sct.c:614:
+			dbg("%s - port %d Clearing RTS",
+						__func__, port->number);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#759: FILE: drivers/usb/serial/kobil_sct.c:616:
+		result = usb_control_msg(port->serial->dev,
+			usb_rcvctrlpipe(port->serial->dev, 0),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#770: FILE: drivers/usb/serial/kobil_sct.c:626:
+	dbg("%s - port %d Send set_status_line URB returns: %i",
+					__func__, port->number, result);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#791: FILE: drivers/usb/serial/kobil_sct.c:643:
+	if (priv->device_type == KOBIL_USBTWIN_PRODUCT_ID ||
+			priv->device_type == KOBIL_KAAN_SIM_PRODUCT_ID)

CHECK:CAMELCASE: Avoid CamelCase: <SUSBCR_SPASB_2StopBits>
#816: FILE: drivers/usb/serial/kobil_sct.c:658:
+	urb_val |= (c_cflag & CSTOPB) ? SUSBCR_SPASB_2StopBits :

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#839: FILE: drivers/usb/serial/kobil_sct.c:683:
+	result = usb_control_msg(port->serial->dev,
+		  usb_rcvctrlpipe(port->serial->dev, 0),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#853: FILE: drivers/usb/serial/kobil_sct.c:696:
+static int kobil_ioctl(struct tty_struct *tty, struct file *file,
+					unsigned int cmd, unsigned long arg)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#865: FILE: drivers/usb/serial/kobil_sct.c:705:
+	if (priv->device_type == KOBIL_USBTWIN_PRODUCT_ID ||
+			priv->device_type == KOBIL_KAAN_SIM_PRODUCT_ID)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#888: FILE: drivers/usb/serial/kobil_sct.c:716:
+		result = usb_control_msg(port->serial->dev,
+			  usb_rcvctrlpipe(port->serial->dev, 0),

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000265195.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 10 warnings, 62 checks, 871 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000265195.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
