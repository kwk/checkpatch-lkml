ERROR:TRAILING_WHITESPACE: trailing whitespace
#65: FILE: include/linux/hid.h:402:
+^I^I^I^I^I * hid-input processing. But it not $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#66: FILE: include/linux/hid.h:403:
+^I^I^I^I^I * necessary for accessing this input_dev $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#67: FILE: include/linux/hid.h:404:
+					 * instance from input subsystem. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#89: FILE: include/linux/hid.h:496:
+extern void hidinput_reconnect_core(struct hid_device *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_device *' should also have an identifier name
#89: FILE: include/linux/hid.h:496:
+extern void hidinput_reconnect_core(struct hid_device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#90: FILE: include/linux/hid.h:497:
+extern int hidinput_disconnect_core(struct hid_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_device *' should also have an identifier name
#90: FILE: include/linux/hid.h:497:
+extern int hidinput_disconnect_core(struct hid_device *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#98: FILE: include/linux/hid-simple.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: include/linux/hid-simple.h:3:
+ *^IFor use me , you must include hid.h in your source first. $

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#107: FILE: include/linux/hid-simple.h:10:
+#include <asm/bitops.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#129: FILE: include/linux/hid-simple.h:32:
+#define F_EVENT_BY_VALUE (0x1) /* submit input event by usage_block.value, $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#130: FILE: include/linux/hid-simple.h:33:
+#define F_EVENT_BY_VALUE (0x1) /* submit input event by usage_block.value, 
+				  not implement yet */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#130: FILE: include/linux/hid-simple.h:33:
+				  not implement yet */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#163: FILE: include/linux/hid-simple.h:66:
+	int (*match_device)(struct hidinput_simple_driver *drv,
+				struct matched_device *dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#167: FILE: include/linux/hid-simple.h:70:
+^Iint (*connect)(struct hid_device *, struct hid_input *);^I$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_device *' should also have an identifier name
#167: FILE: include/linux/hid-simple.h:70:
+	int (*connect)(struct hid_device *, struct hid_input *);	

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_input *' should also have an identifier name
#167: FILE: include/linux/hid-simple.h:70:
+	int (*connect)(struct hid_device *, struct hid_input *);	

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_device *' should also have an identifier name
#168: FILE: include/linux/hid-simple.h:71:
+	void (*disconnect)(struct hid_device *, struct hid_input *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_input *' should also have an identifier name
#168: FILE: include/linux/hid-simple.h:71:
+	void (*disconnect)(struct hid_device *, struct hid_input *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_field *' should also have an identifier name
#169: FILE: include/linux/hid-simple.h:72:
+	void (*setup_usage)(struct hid_field *,   struct hid_usage *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_usage *' should also have an identifier name
#169: FILE: include/linux/hid-simple.h:72:
+	void (*setup_usage)(struct hid_field *,   struct hid_usage *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_field *' should also have an identifier name
#170: FILE: include/linux/hid-simple.h:73:
+	void (*clear_usage)(struct hid_field *,   struct hid_usage *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_usage *' should also have an identifier name
#170: FILE: include/linux/hid-simple.h:73:
+	void (*clear_usage)(struct hid_field *,   struct hid_usage *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct hid_device *' should also have an identifier name
#171: FILE: include/linux/hid-simple.h:74:
+	int (*pre_event)(const struct hid_device *, const struct hid_field *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct hid_field *' should also have an identifier name
#171: FILE: include/linux/hid-simple.h:74:
+	int (*pre_event)(const struct hid_device *, const struct hid_field *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct hid_usage *' should also have an identifier name
#171: FILE: include/linux/hid-simple.h:74:
+	int (*pre_event)(const struct hid_device *, const struct hid_field *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const __s32' should also have an identifier name
#171: FILE: include/linux/hid-simple.h:74:
+	int (*pre_event)(const struct hid_device *, const struct hid_field *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#172: FILE: include/linux/hid-simple.h:75:
+	int (*pre_event)(const struct hid_device *, const struct hid_field *,
+					const struct hid_usage *, const __s32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct hid_device *' should also have an identifier name
#173: FILE: include/linux/hid-simple.h:76:
+	int (*post_event)(const struct hid_device *, const struct hid_field *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct hid_field *' should also have an identifier name
#173: FILE: include/linux/hid-simple.h:76:
+	int (*post_event)(const struct hid_device *, const struct hid_field *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct hid_usage *' should also have an identifier name
#173: FILE: include/linux/hid-simple.h:76:
+	int (*post_event)(const struct hid_device *, const struct hid_field *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const __s32' should also have an identifier name
#173: FILE: include/linux/hid-simple.h:76:
+	int (*post_event)(const struct hid_device *, const struct hid_field *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#174: FILE: include/linux/hid-simple.h:77:
+	int (*post_event)(const struct hid_device *, const struct hid_field *,
+					const struct hid_usage *, const __s32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct input_dev *' should also have an identifier name
#175: FILE: include/linux/hid-simple.h:78:
+	int (*open)(struct input_dev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct input_dev *' should also have an identifier name
#176: FILE: include/linux/hid-simple.h:79:
+	void (*close)(struct input_dev *);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#184: FILE: include/linux/hid-simple.h:87:
+struct hid_input* hidinput_simple_inputdev_to_hidinput(struct input_dev *dev);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: include/linux/hid-simple.h:112:
+^IHID_SIMPLE_BLUETOOTH,^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#213: FILE: include/linux/hid-simple.h:116:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#214: FILE: include/linux/hid-simple.h:117:
+ *  matched_device record one device which hid-subsystem will scan, it may $

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#220: FILE: include/linux/hid-simple.h:123:
+	struct hid_device *hid; /* if it's not zero, this device is matched with some simple driver. */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#226: FILE: include/linux/hid-simple.h:129:
+extern void hidinput_simple_driver_configure_usage(struct hidinput_simple_driver *simple, struct hid_device *hid);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#226: FILE: include/linux/hid-simple.h:129:
+extern void hidinput_simple_driver_configure_usage(struct hidinput_simple_driver *simple, struct hid_device *hid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#227: FILE: include/linux/hid-simple.h:130:
+extern int hidinput_simple_driver_init(struct hidinput_simple_driver *simple);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#228: FILE: include/linux/hid-simple.h:131:
+extern void hidinput_simple_driver_clear(struct hidinput_simple_driver *simple);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#229: FILE: include/linux/hid-simple.h:132:
+extern int hidinput_simple_driver_connect(struct hidinput_simple_driver *simple, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#229: FILE: include/linux/hid-simple.h:132:
+extern int hidinput_simple_driver_connect(struct hidinput_simple_driver *simple, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#230: FILE: include/linux/hid-simple.h:133:
+extern int hidinput_simple_driver_connect(struct hidinput_simple_driver *simple, 
+						struct matched_device *dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#231: FILE: include/linux/hid-simple.h:134:
+extern void hidinput_simple_driver_disconnect(struct hid_device *hid, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#231: FILE: include/linux/hid-simple.h:134:
+extern void hidinput_simple_driver_disconnect(struct hid_device *hid, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#232: FILE: include/linux/hid-simple.h:135:
+extern void hidinput_simple_driver_disconnect(struct hid_device *hid, 
+						struct matched_device *dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#251: FILE: include/linux/hid-simple.h:154:
+static inline int hidinput_simple_event_filter(struct hid_device *hid, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#252: FILE: include/linux/hid-simple.h:155:
+static inline int hidinput_simple_event_filter(struct hid_device *hid, 
+							struct hid_field *field,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#267: FILE: include/linux/hid-simple.h:170:
+static inline void hidinput_simple_event_post(struct hid_device *hid, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#268: FILE: include/linux/hid-simple.h:171:
+static inline void hidinput_simple_event_post(struct hid_device *hid, 
+							struct hid_field *field,

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#280: FILE: include/linux/hid-simple.h:183:
+static inline void hidinput_simple_driver_setup_usage(struct hidinput_simple_driver *simple, struct hid_device *hid)

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#288: FILE: include/linux/hid-simple.h:191:
+static inline void hidinput_simple_driver_clear_usage(struct hidinput_simple_driver *simple, struct hid_device *hid)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#295: FILE: include/linux/hid-simple.h:198:
+}
+extern void hidinput_simple_driver_bind_foreach(void);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#295: FILE: include/linux/hid-simple.h:198:
+extern void hidinput_simple_driver_bind_foreach(void);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#296: FILE: include/linux/hid-simple.h:199:
+extern void hidinput_simple_driver_bind_foreach_simple(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#296: FILE: include/linux/hid-simple.h:199:
+extern void hidinput_simple_driver_bind_foreach_simple(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#299: FILE: include/linux/hid-simple.h:202:
+extern void hidinput_simple_driver_bind_foreach_matched(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#299: FILE: include/linux/hid-simple.h:202:
+extern void hidinput_simple_driver_bind_foreach_matched(

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#301: FILE: include/linux/hid-simple.h:204:
+static inline struct matched_device* hidinput_simple_matched_device_new(void)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*matched)...) over kmalloc(sizeof(struct matched_device)...)
#305: FILE: include/linux/hid-simple.h:208:
+	matched = kmalloc(sizeof(struct matched_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#312: FILE: include/linux/hid-simple.h:215:
+}
+extern int hidinput_register_simple_usb_driver(struct hidinput_simple_driver *simple);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#312: FILE: include/linux/hid-simple.h:215:
+extern int hidinput_register_simple_usb_driver(struct hidinput_simple_driver *simple);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#313: FILE: include/linux/hid-simple.h:216:
+extern void hidinput_unregister_simple_usb_driver(struct hidinput_simple_driver *simple);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#315: FILE: include/linux/hid-simple.h:218:
+static inline void hidinput_simple_driver_bind_foreach_simple(

ERROR:SPACING: space required after that ';' (ctx:VxV)
#320: FILE: include/linux/hid-simple.h:223:
+		(struct hidinput_simple_driver *simple) {return 0;}
 		                                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#321: FILE: include/linux/hid-simple.h:224:
+static inline void hidinput_simple_driver_clear(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#323: FILE: include/linux/hid-simple.h:226:
+static inline int hidinput_simple_driver_connect(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#329: FILE: include/linux/hid-simple.h:232:
+static inline void hidinput_simple_driver_disconnect(struct hid_device *hid, $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#329: FILE: include/linux/hid-simple.h:232:
+}
+static inline void hidinput_simple_driver_disconnect(struct hid_device *hid, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#330: FILE: include/linux/hid-simple.h:233:
+static inline void hidinput_simple_driver_disconnect(struct hid_device *hid, 
+						struct matched_device *dev) {}

ERROR:SPACING: space required after that ';' (ctx:VxV)
#332: FILE: include/linux/hid-simple.h:235:
+static inline int hidinput_trylock_simple(struct hid_input *dev) {return 0;}
                                                                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#334: FILE: include/linux/hid-simple.h:237:
+static inline int hidinput_simple_event_filter(struct hid_device *hid, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#335: FILE: include/linux/hid-simple.h:238:
+static inline int hidinput_simple_event_filter(struct hid_device *hid, 
+							struct hid_field *field,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#338: FILE: include/linux/hid-simple.h:241:
+static inline void hidinput_simple_event_post(struct hid_device *hid, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#339: FILE: include/linux/hid-simple.h:242:
+static inline void hidinput_simple_event_post(struct hid_device *hid, 
+							struct hid_field *field,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#342: FILE: include/linux/hid-simple.h:245:
+static inline void hidinput_simple_driver_setup_usage(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#348: FILE: include/linux/hid-simple.h:251:
+static inline void hidinput_simple_driver_bind_foreach_matched(

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#350: FILE: include/linux/hid-simple.h:253:
+static inline struct matched_device* hidinput_simple_matched_device_new(void)

CHECK:UNCOMMENTED_DEFINITION: DEFINE_MUTEX definition without comment
#379: FILE: drivers/hid/hid-core.c:49:
+DEFINE_MUTEX(simple_drivers_lock);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#383: FILE: drivers/hid/hid-core.c:53:
+EXPORT_SYMBOL(matched_devices_lock);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#384: FILE: drivers/hid/hid-core.c:54:
+EXPORT_SYMBOL(simple_drivers_lock);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#385: FILE: drivers/hid/hid-core.c:55:
+EXPORT_SYMBOL(matched_devices_list);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#386: FILE: drivers/hid/hid-core.c:56:
+EXPORT_SYMBOL(simple_drivers_list);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#420: FILE: drivers/hid/hid-core.c:1016:
+static int hidinput_simple_driver_bind_one(struct hidinput_simple_driver *simple,
+						struct hid_device *hid,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#442: FILE: drivers/hid/hid-core.c:1038:
+		printk(KERN_INFO "The simple driver \'%s\' attach"

WARNING:SPLIT_STRING: quoted string split across lines
#443: FILE: drivers/hid/hid-core.c:1039:
+		printk(KERN_INFO "The simple driver \'%s\' attach"
+			" to the device \'%s\'\n", simple->name, hid->name);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#449: FILE: drivers/hid/hid-core.c:1045:
+void hidinput_simple_driver_bind_foreach_simple(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#455: FILE: drivers/hid/hid-core.c:1051:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#463: FILE: drivers/hid/hid-core.c:1059:
+			if (!hidinput_simple_driver_bind_one(simple, hid,
+								matched, 0))

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#471: FILE: drivers/hid/hid-core.c:1067:
+void hidinput_simple_driver_bind_foreach_matched(

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#474: FILE: drivers/hid/hid-core.c:1070:
+	struct list_head *node=NULL;
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#476: FILE: drivers/hid/hid-core.c:1072:
+	struct hid_device *hid=NULL;
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#511: FILE: drivers/hid/hid-core.c:1107:
+			if (!simple->match_device(simple,matched))
 			                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#513: FILE: drivers/hid/hid-core.c:1109:
+^I^I^Ihidinput_simple_driver_bind_one(simple, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#579: FILE: drivers/hid/hid-input.c:82:
+static inline void hidinput_send_event(struct hid_input *hidinput, int type,
+							int code, int value)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#596: FILE: drivers/hid/hid-input.c:161:
+static int hidinput_pb_event(struct hid_device *hid, struct hid_input *hidinput,
 		struct hid_usage *usage, __s32 value)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#655: FILE: drivers/hid/hid-input.c:250:
+static int hidinput_pb_event(struct hid_device *hid, struct hid_input *hidinput,
 		struct hid_usage *usage, __s32 value)

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#717: FILE: drivers/hid/hid-input.c:742:
+	if ((hid->quirks & HID_QUIRK_POWERBOOK_HAS_FN) && hidinput_pb_event(hid, hidinput, usage, value))

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#728: FILE: drivers/hid/hid-input.c:751:
+		hidinput_send_event(hidinput, usage->type, usage->code + 1, hid_hat_to_axis[hat_dir].y);

WARNING:LONG_LINE: line length of 132 exceeds 100 columns
#737: FILE: drivers/hid/hid-input.c:762:
+			hidinput_send_event(hidinput, usage->type, (*quirks & HID_QUIRK_INVERT) ? BTN_TOOL_RUBBER : usage->code, 1);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#848: FILE: drivers/hid/hid-input.c:915:
+^I^I^I^Ihidinput->input_lock = 0;^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#868: FILE: drivers/hid/hid-input.c:946:
+static void hidinput_setup_usage(struct hid_device *hid, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#869: FILE: drivers/hid/hid-input.c:947:
+static void hidinput_setup_usage(struct hid_device *hid, 
+					struct input_dev *input)

WARNING:RETURN_VOID: void function return statements are not generally useful
#893: FILE: drivers/hid/hid-input.c:971:
+	return;
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#896: FILE: drivers/hid/hid-input.c:974:
+ *  The caller must be call hidinput_reconnect() soon, $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#912: FILE: drivers/hid/hid-input.c:990:
+	while (!list_empty(&tmp_list)) {
+		list_del_init(tmp_list.next);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#922: FILE: drivers/hid/hid-input.c:1000:
+		if (!(hid->quirks&HID_QUIRK_MULTI_INPUT))
 		                 ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#947: FILE: drivers/hid/hid-simple.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#949: FILE: drivers/hid/hid-simple.c:3:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#965: FILE: drivers/hid/hid-simple.c:19:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#966: FILE: drivers/hid/hid-simple.c:20:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#981: FILE: drivers/hid/hid-simple.c:35:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#984: FILE: drivers/hid/hid-simple.c:38:
+ */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1003: FILE: drivers/hid/hid-simple.c:57:
+static void inline hidinput_simple_configure_one_usage(int op, $

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#1003: FILE: drivers/hid/hid-simple.c:57:
+static void inline hidinput_simple_configure_one_usage(int op, 

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1004: FILE: drivers/hid/hid-simple.c:58:
+static void inline hidinput_simple_configure_one_usage(int op, 
+						struct input_dev *input,

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1054: FILE: drivers/hid/hid-simple.c:108:
+	if (__OP_SET_BIT == op) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1063: FILE: drivers/hid/hid-simple.c:117:
+	else if (__OP_CLR_BIT == op) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1063: FILE: drivers/hid/hid-simple.c:117:
+	}
+	else if (__OP_CLR_BIT == op) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1074: FILE: drivers/hid/hid-simple.c:128:
+static do_usage_t hidinput_simple_driver_configure_usage_prep(

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1084: FILE: drivers/hid/hid-simple.c:138:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#1084: FILE: drivers/hid/hid-simple.c:138:
+	else {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1091: FILE: drivers/hid/hid-simple.c:145:
+static void __hidinput_simple_driver_configure_usage(

ERROR:SPACING: space required after that ';' (ctx:BxV)
#1106: FILE: drivers/hid/hid-simple.c:160:
+	for (;page_block && page_block->usage_blockes;page_block++) {
 	     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1106: FILE: drivers/hid/hid-simple.c:160:
+	for (;page_block && page_block->usage_blockes;page_block++) {
 	                                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1113: FILE: drivers/hid/hid-simple.c:167:
+^I^I^Ihidinput_simple_configure_one_usage(op, input, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1114: FILE: drivers/hid/hid-simple.c:168:
+			hidinput_simple_configure_one_usage(op, input, 
+						hid_usage, usage_block);

WARNING:LONG_LINE: line length of 159 exceeds 100 columns
#1123: FILE: drivers/hid/hid-simple.c:177:
+void hidinput_simple_driver_configure_usage(struct hidinput_simple_driver *simple, 							struct hid_device *hid)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1123: FILE: drivers/hid/hid-simple.c:177:
+void hidinput_simple_driver_configure_usage(struct hidinput_simple_driver *simple, ^I^I^I^I^I^I^Istruct hid_device *hid)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1136: FILE: drivers/hid/hid-simple.c:190:
+		if (hid->collection[i].type == HID_COLLECTION_APPLICATION ||
+			hid->collection[i].type==HID_COLLECTION_PHYSICAL)

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1136: FILE: drivers/hid/hid-simple.c:190:
+			hid->collection[i].type==HID_COLLECTION_PHYSICAL)
 			                       ^

WARNING:LONG_LINE: line length of 140 exceeds 100 columns
#1150: FILE: drivers/hid/hid-simple.c:204:
+					__hidinput_simple_driver_configure_usage(simple, op, report->field[i], report->field[i]->usage + j);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1153: FILE: drivers/hid/hid-simple.c:207:
+						do_usage(report->field[i],
+						report->field[i]->usage + j);

WARNING:RETURN_VOID: void function return statements are not generally useful
#1158: FILE: drivers/hid/hid-simple.c:212:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1161: FILE: drivers/hid/hid-simple.c:215:
+static int hidinput_simple_driver_push(struct hidinput_simple_driver *simple,
+					struct matched_device *matched)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*raw_simple)...) over kmalloc(sizeof(struct raw_simple_device)...)
#1165: FILE: drivers/hid/hid-simple.c:219:
+	raw_simple = kmalloc(sizeof(struct raw_simple_device), GFP_KERNEL);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1177: FILE: drivers/hid/hid-simple.c:231:
+	struct raw_simple_device *raw_simple=NULL;
 	                                    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1179: FILE: drivers/hid/hid-simple.c:233:
+	list_for_each (node, &hid->simple->raw_devices) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1197: FILE: drivers/hid/hid-simple.c:251:
+^I^Iraw_simple = list_entry(simple->raw_devices.next, $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1202: FILE: drivers/hid/hid-simple.c:256:
+				BUG_ON(hid->simple != simple);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1214: FILE: drivers/hid/hid-simple.c:268:
+int hidinput_simple_driver_connect(struct hidinput_simple_driver *simple, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1215: FILE: drivers/hid/hid-simple.c:269:
+int hidinput_simple_driver_connect(struct hidinput_simple_driver *simple, 
+						struct matched_device *matched)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1243: FILE: drivers/hid/hid-simple.c:297:
+void hidinput_simple_driver_disconnect(struct hid_device *hid, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1244: FILE: drivers/hid/hid-simple.c:298:
+void hidinput_simple_driver_disconnect(struct hid_device *hid, 
+						struct matched_device *matched)

WARNING:MEMORY_BARRIER: memory barrier without comment
#1254: FILE: drivers/hid/hid-simple.c:308:
+	wmb();

WARNING:RETURN_VOID: void function return statements are not generally useful
#1262: FILE: drivers/hid/hid-simple.c:316:
+	return;
+}

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1265: FILE: drivers/hid/hid-simple.c:319:
+struct hid_input* hidinput_simple_inputdev_to_hidinput(struct input_dev *dev)

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1288: FILE: drivers/hid/Kconfig:39:
+config HID_SIMPLE
+        bool "HID simple driver interface"
+        depends on HID
+        help
+          This simple interface let the writing HID driver more easier. Moreover,
+          this allow you write force-feedback driver without touch HID input
+          implementation code. Also, it can be used as input filter.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1349: FILE: drivers/usb/input/hid-core.c:1311:
+		if (matched)
+			kfree(matched);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1364: FILE: drivers/usb/input/hid-core.c:1345:
+		struct matched_device *matched;
+		matched = hidinput_simple_matched_device_new();

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1367: FILE: drivers/usb/input/hid-core.c:1348:
+			matched->id = (void*)id;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1384: FILE: drivers/usb/input/hid-core.c:1364:
+		printk (KERN_INFO"HID device not claimed by input or hiddev\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1384: FILE: drivers/usb/input/hid-core.c:1364:
+		printk (KERN_INFO"HID device not claimed by input or hiddev\n");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1384: FILE: drivers/usb/input/hid-core.c:1364:
+		printk (KERN_INFO"HID device not claimed by input or hiddev\n");

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:TYPO_SPELLING: 'paramenters' may be misspelled - perhaps 'parameters'?
#1396: FILE: drivers/usb/input/hid-core.c:1449:
+/* return non-zero mean these two paramenters can be buddy :) */
                                   ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1397: FILE: drivers/usb/input/hid-core.c:1450:
+static int hidinput_match_simple(

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1401: FILE: drivers/usb/input/hid-core.c:1454:
+	if (!dev || !drv || HID_SIMPLE_USB != dev->type || !dev->private) {
+		return 0;
+	}

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1436: FILE: drivers/usb/input/hid-core.c:1521:
+		if (HID_SIMPLE_USB == matched->type) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1440: FILE: drivers/usb/input/hid-core.c:1525:
+^I}^I$

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1451: FILE: drivers/usb/input/Kconfig:360:
+config HID_SIMPLE_MSNEK4K
+	tristate "Microsoft Natural Ergonomic Keyboard 4000 Driver"
+	depends on HID_SIMPLE
+	---help---
+	  Microsoft Natural Ergonomic Keyboard 4000 extended keys support. These
+	  may not work without change user space configration, e.g, XKB conf-
+	  iguration in X.
+
+

WARNING:TYPO_SPELLING: 'configration' may be misspelled - perhaps 'configuration'?
#1456: FILE: drivers/usb/input/Kconfig:365:
+	  may not work without change user space configration, e.g, XKB conf-
 	                                         ^^^^^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1478: FILE: drivers/usb/input/usbnek4k.c:1:
+/*

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1547: FILE: drivers/usb/input/usbnek4k.c:70:
+#define map_key(c) do { usage->code = c; usage->type = EV_KEY; set_bit(c,input->keybit); } while (0)
                                                                         ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'c' - possible side-effects?
#1547: FILE: drivers/usb/input/usbnek4k.c:70:
+#define map_key(c) do { usage->code = c; usage->type = EV_KEY; set_bit(c,input->keybit); } while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1548: FILE: drivers/usb/input/usbnek4k.c:71:
+#define clear_key(c) do { usage->code = 0; usage->type = 0; clear_bit(c,input->keybit); } while (0)
                                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1625: FILE: drivers/usb/input/usbnek4k.c:148:
+				set_bit(KEY_F18,input->keybit);
 				               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1626: FILE: drivers/usb/input/usbnek4k.c:149:
+				set_bit(KEY_F19,input->keybit);
 				               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1627: FILE: drivers/usb/input/usbnek4k.c:150:
+				set_bit(KEY_F20,input->keybit);
 				               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1628: FILE: drivers/usb/input/usbnek4k.c:151:
+				set_bit(KEY_F21,input->keybit);
 				               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1629: FILE: drivers/usb/input/usbnek4k.c:152:
+				set_bit(KEY_F22,input->keybit);
 				               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1631: FILE: drivers/usb/input/usbnek4k.c:154:
+				set_bit(KEY_FN_F1,input->keybit);
 				                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1632: FILE: drivers/usb/input/usbnek4k.c:155:
+				set_bit(KEY_FN_F2,input->keybit);
 				                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1633: FILE: drivers/usb/input/usbnek4k.c:156:
+				set_bit(KEY_FN_F3,input->keybit);
 				                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1634: FILE: drivers/usb/input/usbnek4k.c:157:
+				set_bit(KEY_FN_F4,input->keybit);
 				                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1635: FILE: drivers/usb/input/usbnek4k.c:158:
+				set_bit(KEY_FN_F5,input->keybit);
 				                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1656: FILE: drivers/usb/input/usbnek4k.c:179:
+				clear_bit(KEY_F18,input->keybit);
 				                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1657: FILE: drivers/usb/input/usbnek4k.c:180:
+				clear_bit(KEY_F19,input->keybit);
 				                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1658: FILE: drivers/usb/input/usbnek4k.c:181:
+				clear_bit(KEY_F20,input->keybit);
 				                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1659: FILE: drivers/usb/input/usbnek4k.c:182:
+				clear_bit(KEY_F21,input->keybit);
 				                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1660: FILE: drivers/usb/input/usbnek4k.c:183:
+				clear_bit(KEY_F22,input->keybit);
 				                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1662: FILE: drivers/usb/input/usbnek4k.c:185:
+				clear_bit(KEY_FN_F1,input->keybit);
 				                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1663: FILE: drivers/usb/input/usbnek4k.c:186:
+				clear_bit(KEY_FN_F2,input->keybit);
 				                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1664: FILE: drivers/usb/input/usbnek4k.c:187:
+				clear_bit(KEY_FN_F3,input->keybit);
 				                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1665: FILE: drivers/usb/input/usbnek4k.c:188:
+				clear_bit(KEY_FN_F4,input->keybit);
 				                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1666: FILE: drivers/usb/input/usbnek4k.c:189:
+				clear_bit(KEY_FN_F5,input->keybit);
 				                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1672: FILE: drivers/usb/input/usbnek4k.c:195:
+static int nek4k_pre_event(const struct hid_device *hid, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1673: FILE: drivers/usb/input/usbnek4k.c:196:
+static int nek4k_pre_event(const struct hid_device *hid, 
+					const struct hid_field *field,

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1681: FILE: drivers/usb/input/usbnek4k.c:204:
+	if (((usage->hid&HID_USAGE_PAGE) != HID_UP_MSVENDOR) ||
 	                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1682: FILE: drivers/usb/input/usbnek4k.c:205:
+	if (((usage->hid&HID_USAGE_PAGE) != HID_UP_MSVENDOR) ||
+				(usage->hid&HID_USAGE) != USAGE_CUSTOM)

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1682: FILE: drivers/usb/input/usbnek4k.c:205:
+				(usage->hid&HID_USAGE) != USAGE_CUSTOM)
 				           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1685: FILE: drivers/usb/input/usbnek4k.c:208:
+	code = ascii_keycode ? KEY_F18-1 : KEY_FN_F1-1;
 	                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1685: FILE: drivers/usb/input/usbnek4k.c:208:
+	code = ascii_keycode ? KEY_F18-1 : KEY_FN_F1-1;
 	                                            ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1698: FILE: drivers/usb/input/usbnek4k.c:221:
+		hidinput->private = (void*)code;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1702: FILE: drivers/usb/input/usbnek4k.c:225:
+^Ireturn 0; $

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000460704.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 73 errors, 62 warnings, 63 checks, 1608 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000460704.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
