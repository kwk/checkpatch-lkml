WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
Subject: [PATCH] [LIO-Target/ConfigFS]: Convert to use generic target_core_mod v3.0 logic

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#105: FILE: drivers/lio-core/iscsi_target_configfs.c:523:
+	if (!(lun_p = core_dev_add_lun(tpg->tpg_se_tpg, dev->se_hba, dev,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#106: FILE: drivers/lio-core/iscsi_target_configfs.c:524:
+	if (!(lun_p = core_dev_add_lun(tpg->tpg_se_tpg, dev->se_hba, dev,
+			lun->unpacked_lun, &ret))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#107: FILE: drivers/lio-core/iscsi_target_configfs.c:525:
+		printk(KERN_ERR "core_dev_add_lun() failed: %d\n", ret);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#125: FILE: drivers/lio-core/iscsi_target_configfs.c:643:
+	if (!(lun_p = core_get_lun_from_tpg(tpg->tpg_se_tpg, lun)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#153: FILE: drivers/lio-core/iscsi_target_configfs.c:825:
+	if (!(se_sess = se_nacl->nacl_sess)) {				\

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#201: FILE: drivers/lio-core/iscsi_target_configfs.c:995:
+	if ((ret = core_dev_add_initiator_node_lun_acl(tpg->tpg_se_tpg, lacl,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#202: FILE: drivers/lio-core/iscsi_target_configfs.c:996:
+	if ((ret = core_dev_add_initiator_node_lun_acl(tpg->tpg_se_tpg, lacl,
+				lun->unpacked_lun, lun_access)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#218: FILE: drivers/lio-core/iscsi_target_configfs.c:1050:
+	if ((ret = core_dev_del_initiator_node_lun_acl(tpg->tpg_se_tpg, lun, lacl)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#255: FILE: drivers/lio-core/iscsi_target_configfs.c:1193:
+	if (!(lacl = core_dev_init_initiator_node_lun_acl(tpg->tpg_se_tpg,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#256: FILE: drivers/lio-core/iscsi_target_configfs.c:1194:
+	if (!(lacl = core_dev_init_initiator_node_lun_acl(tpg->tpg_se_tpg,
+			mapped_lun, config_item_name(acl_ci), &ret)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#284: FILE: drivers/lio-core/iscsi_target_configfs.c:1269:
+	if (!(se_sess = se_nacl->nacl_sess))

WARNING:SPLIT_STRING: quoted string split across lines
#287: FILE: drivers/lio-core/iscsi_target_configfs.c:1271:
 		rb += sprintf(page+rb, "No active iSCSI Session for Initiator"
+			" Endpoint: %s\n", se_nacl->initiatorname);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#320: FILE: drivers/lio-core/iscsi_target_configfs.c:1380:
+	return(sprintf(page, "%u\n", se_nacl->queue_depth));

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#337: FILE: drivers/lio-core/iscsi_target_configfs.c:1401:
+	if (!(acl_ci = &se_nacl->acl_group.cg_item)) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#359: FILE: drivers/lio-core/iscsi_target_configfs.c:1447:
+	se_node_acl_t *se_nacl = container_of(

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#368: FILE: drivers/lio-core/iscsi_target_configfs.c:1455:
+	return(lt_attr->show((void *)se_nacl, page));

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#377: FILE: drivers/lio-core/iscsi_target_configfs.c:1462:
+	se_node_acl_t *se_nacl = container_of(

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#386: FILE: drivers/lio-core/iscsi_target_configfs.c:1470:
+	return(lt_attr->store((void *)se_nacl, page, count));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#419: FILE: drivers/lio-core/iscsi_target_configfs.c:1558:
+	config_group_init_type_name(&se_nacl->acl_group, name,
+			&lio_target_initiator_cit);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#421: FILE: drivers/lio-core/iscsi_target_configfs.c:1560:
+	config_group_init_type_name(&se_nacl->acl_param_group, "param",
+			&lio_target_nacl_param_cit);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#423: FILE: drivers/lio-core/iscsi_target_configfs.c:1562:
+	config_group_init_type_name(&nattr->acl_attrib_group, "attrib",
+			&lio_target_nacl_attrib_cit);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#430: FILE: drivers/lio-core/iscsi_target_configfs.c:1567:
+	printk("LIO_Target_ConfigFS: REGISTER -> %s TPGT: %hu Initiator: %s"

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#430: FILE: drivers/lio-core/iscsi_target_configfs.c:1567:
+	printk("LIO_Target_ConfigFS: REGISTER -> %s TPGT: %hu Initiator: %s"
+		" CmdSN Depth: %u\n", config_item_name(tiqn_ci), tpgt, name,
+		se_nacl->queue_depth);

WARNING:SPLIT_STRING: quoted string split across lines
#431: FILE: drivers/lio-core/iscsi_target_configfs.c:1568:
+	printk("LIO_Target_ConfigFS: REGISTER -> %s TPGT: %hu Initiator: %s"
+		" CmdSN Depth: %u\n", config_item_name(tiqn_ci), tpgt, name,

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#436: FILE: drivers/lio-core/iscsi_target_configfs.c:1572:
+	return(&se_nacl->acl_group);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000191289.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 12 errors, 6 warnings, 8 checks, 406 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000191289.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
