WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
Driver issue the get ld list to fw to get the logic drive list.  Driver will keep the logic drive list for the internal use after driver load.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#61: FILE: drivers/scsi/megaraid/megaraid_sas.c:879:
+		printk(KERN_ERR "megasas: DCDB two many SGE NUM=%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#62: FILE: drivers/scsi/megaraid/megaraid_sas.c:880:
+		printk(KERN_ERR "megasas: DCDB two many SGE NUM=%x\n",
+			pthru->sge_count);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#74: FILE: drivers/scsi/megaraid/megaraid_sas.c:1011:
+		printk(KERN_ERR "megasas: build_ld_io: sge_count = %x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#75: FILE: drivers/scsi/megaraid/megaraid_sas.c:1012:
+		printk(KERN_ERR "megasas: build_ld_io: sge_count = %x\n",
+			ldio->sge_count);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#107: FILE: drivers/scsi/megaraid/megaraid_sas.c:2332:
+		printk(KERN_DEBUG "megasas_get_ld_list: Failed to get cmd\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'megasas_get_ld_list', this function's name, in a string
#107: FILE: drivers/scsi/megaraid/megaraid_sas.c:2332:
+		printk(KERN_DEBUG "megasas_get_ld_list: Failed to get cmd\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: drivers/scsi/megaraid/megaraid_sas.c:2339:
+	ci = pci_alloc_consistent(instance->pdev,
+				sizeof(struct MR_LD_LIST),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#118: FILE: drivers/scsi/megaraid/megaraid_sas.c:2343:
+		printk(KERN_DEBUG "Failed to alloc mem in get_ld_list\n");

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#137: FILE: drivers/scsi/megaraid/megaraid_sas.c:2362:
+	if (!megasas_issue_polled(instance, cmd)) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret == 0'
#145: FILE: drivers/scsi/megaraid/megaraid_sas.c:2370:
+	if ((ret == 0) && (ci->ldCount < MAX_LOGICAL_DRIVES)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ci->ldCount < MAX_LOGICAL_DRIVES'
#145: FILE: drivers/scsi/megaraid/megaraid_sas.c:2370:
+	if ((ret == 0) && (ci->ldCount < MAX_LOGICAL_DRIVES)) {

CHECK:CAMELCASE: Avoid CamelCase: <ldCount>
#145: FILE: drivers/scsi/megaraid/megaraid_sas.c:2370:
+	if ((ret == 0) && (ci->ldCount < MAX_LOGICAL_DRIVES)) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <ldList>
#149: FILE: drivers/scsi/megaraid/megaraid_sas.c:2374:
+			if (ci->ldList[ld_index].state != 0) {

CHECK:CAMELCASE: Avoid CamelCase: <targetId>
#150: FILE: drivers/scsi/megaraid/megaraid_sas.c:2375:
+				ids = ci->ldList[ld_index].ref.targetId;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#158: FILE: drivers/scsi/megaraid/megaraid_sas.c:2383:
+	pci_free_consistent(instance->pdev,
+				sizeof(struct MR_LD_LIST),

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#195: FILE: drivers/scsi/megaraid/megaraid_sas.h:354:
+ /*
+ * defines the logical drive reference structure

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:CAMELCASE: Avoid CamelCase: <seqNum>
#201: FILE: drivers/scsi/megaraid/megaraid_sas.h:360:
+		u16     seqNum;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000038757.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 10 checks, 173 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000038757.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
