CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#184: FILE: include/asm-generic/gpio.h:67:
+extern const char *gpiochip_is_requested(struct gpio_chip *chip,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: include/asm-generic/gpio.h:68:
+extern const char *gpiochip_is_requested(struct gpio_chip *chip,
+			unsigned offset);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#185: FILE: include/asm-generic/gpio.h:68:
+			unsigned offset);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#215: FILE: lib/gpiolib.c:48:
+};
+static struct gpio_desc gpio_desc[ARCH_NR_GPIOS];

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "gpio_desc[id].chip"
#276: FILE: lib/gpiolib.c:96:
+		if (gpio_desc[id].chip != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#296: FILE: lib/gpiolib.c:123:
+	unsigned	id;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!desc->chip"
#337: FILE: lib/gpiolib.c:159:
+	if (desc->chip == NULL)

CHECK:BRACES: braces {} should be used on all arms of this statement
#345: FILE: lib/gpiolib.c:166:
+	if (test_and_set_bit(FLAG_REQUESTED, &desc->flags) == 0) {
[...]
-		status = -EBUSY;
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!label"
#356: FILE: lib/gpiolib.c:168:
+		desc->label = (label == NULL) ? "?" : label;

CHECK:BRACES: Unbalanced braces around else statement
#359: FILE: lib/gpiolib.c:171:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#386: FILE: lib/gpiolib.c:193:
+	if (desc->chip && test_and_clear_bit(FLAG_REQUESTED, &desc->flags)) {
[...]
-	else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#399: FILE: lib/gpiolib.c:197:
+	} else

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#420: FILE: lib/gpiolib.c:218:
+const char *gpiochip_is_requested(struct gpio_chip *chip, unsigned offset)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#422: FILE: lib/gpiolib.c:220:
+	unsigned gpio = chip->base + offset;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#437: FILE: lib/gpiolib.c:234:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#522: FILE: lib/gpiolib.c:402:
+	unsigned		i;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#523: FILE: lib/gpiolib.c:403:
+	unsigned		gpio = chip->base;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#549: FILE: lib/gpiolib.c:470:
+	unsigned		gpio;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000349125.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 11 checks, 470 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000349125.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
