WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
The interface could have been made more versatile by not depending on a clock source,

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#54: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#59: FILE: include/linux/clocksync.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#107: FILE: include/linux/clocksync.h:49:
+#define CLOCKSYNC_SKEW_RESOLUTION (((s64)1)<<30)
                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#116: FILE: include/linux/clocksync.h:58:
+static inline ktime_t clocksync_hw2sys(struct clocksync *sync,
+					u64 hwtstamp)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#138: FILE: include/linux/clocksync.h:80:
+int clocksync_offset(struct clocksync *sync,
+		s64 *offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: include/linux/clocksync.h:92:
+static inline void clocksync_update(struct clocksync *sync,
+			u64 hwtstamp)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#156: FILE: include/linux/clocksync.h:98:
+	if (hwtstamp &&
+		(s64)(hwtstamp - sync->last_update) < NSEC_PER_SEC)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#162: FILE: include/linux/clocksync.h:104:
+	printk(KERN_DEBUG

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#214: FILE: kernel/time/clocksync.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#231: FILE: kernel/time/clocksync.c:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#232: FILE: kernel/time/clocksync.c:19:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: kernel/time/clocksync.c:26:
+int clocksync_offset(struct clocksync *sync,
+		s64 *offset,

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(buffer)
#252: FILE: kernel/time/clocksync.c:39:
+	if (num_samples > sizeof(buffer)/sizeof(buffer[0])) {

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#252: FILE: kernel/time/clocksync.c:39:
+	if (num_samples > sizeof(buffer)/sizeof(buffer[0])) {
 	                                ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#253: FILE: kernel/time/clocksync.c:40:
+		samples = kmalloc(sizeof(*samples) * num_samples, GFP_ATOMIC);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(buffer)
#256: FILE: kernel/time/clocksync.c:43:
+			num_samples = sizeof(buffer)/sizeof(buffer[0]);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#256: FILE: kernel/time/clocksync.c:43:
+			num_samples = sizeof(buffer)/sizeof(buffer[0]);
 			                            ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#273: FILE: kernel/time/clocksync.c:60:
+		if (!i) {
+			starthw = ts;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'symetric' may be misspelled - perhaps 'symmetric'?
#281: FILE: kernel/time/clocksync.c:68:
+			 * assume symetric delay to and from HW: average system time
 			          ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space required before the open parenthesis '('
#290: FILE: kernel/time/clocksync.c:77:
+				if(samples[index].duration_sys < sample.duration_sys) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#290: FILE: kernel/time/clocksync.c:77:
+				if(samples[index].duration_sys < sample.duration_sys) {
+					break;
+				}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#311: FILE: kernel/time/clocksync.c:98:
+	if (!used) {
+		used = counter;
+	}

WARNING:LINE_SPACING: Missing a blank line after declarations
#317: FILE: kernel/time/clocksync.c:104:
+		s64 off = 0;
+		for (index = 0; index < used; index++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#317: FILE: kernel/time/clocksync.c:104:
+		for (index = 0; index < used; index++) {
+			off += samples[index].offset;
+		}

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#330: FILE: kernel/time/clocksync.c:117:
+EXPORT_SYMBOL_GPL(clocksync_offset);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000202181.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 15 warnings, 8 checks, 261 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000202181.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
