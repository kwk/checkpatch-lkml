WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
master.kernel.org:/pub/scm/linux/kernel/git/cooloney/blackfin-2.6.git for-linus

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#113: FILE: arch/blackfin/Kconfig:688:
+config DMA_UNCACHED_4M
+	bool "Enable 4M DMA region"

Kconfig symbols should have a help text which fully describes
it.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1935: FILE: arch/blackfin/kernel/bfin_dma_5xx.c:97:
+			printk(KERN_WARNING

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1953: FILE: arch/blackfin/kernel/bfin_gpio.c:1133:
+int gpio_get_value(unsigned gpio)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1958: FILE: arch/blackfin/kernel/bfin_gpio.c:1138:
+	if (unlikely(get_gpio_edge(gpio))) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1966: FILE: arch/blackfin/kernel/bfin_gpio.c:1146:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1971: FILE: arch/blackfin/kernel/bfin_gpio.c:1151:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#2006: FILE: arch/blackfin/kernel/traps.c:370:
+			printk(KERN_NOTICE "NULL pointer access\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#2009: FILE: arch/blackfin/kernel/traps.c:373:
+			printk(KERN_NOTICE EXC_0x27(KERN_NOTICE));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#2025: FILE: arch/blackfin/kernel/traps.c:425:
+			printk(KERN_NOTICE "Jump to NULL address\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#2028: FILE: arch/blackfin/kernel/traps.c:428:
+			printk(KERN_NOTICE EXC_0x2D(KERN_NOTICE));

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#2037: FILE: arch/blackfin/lib/checksum.c:71:
*buff, int len)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#2189: FILE: arch/blackfin/mach-bf533/boards/stamp.c:114:
+#if defined(CONFIG_MTD_BFIN_ASYNC) || defined(CONFIG_MTD_BFIN_ASYNC_MODULE)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#2219: FILE: arch/blackfin/mach-bf533/boards/stamp.c:602:
+#if defined(CONFIG_MTD_BFIN_ASYNC) || defined(CONFIG_MTD_BFIN_ASYNC_MODULE)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2343: FILE: include/asm-blackfin/checksum.h:29:
+__wsum csum_partial_copy(const void *src, void *dst,
+			       int len, __wsum sum);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2355: FILE: include/asm-blackfin/checksum.h:38:
+extern __wsum csum_partial_copy_from_user(const void __user *src, void *dst,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2407: FILE: include/asm-blackfin/checksum.h:98:
+extern __sum16 ip_compute_csum(const void *buff, int len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2431: FILE: include/asm-blackfin/io.h:120:
+extern void outsw_8(unsigned long port, const void *addr, unsigned long count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2436: FILE: include/asm-blackfin/io.h:125:
+extern void insw_8(unsigned long port, void *addr, unsigned long count);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#2462: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2467: FILE: include/asm-blackfin/serial.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#2468: FILE: include/asm-blackfin/serial.h:2:
+ * include/asm-blackfin/serial.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000279559.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 13 warnings, 8 checks, 2164 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000279559.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
