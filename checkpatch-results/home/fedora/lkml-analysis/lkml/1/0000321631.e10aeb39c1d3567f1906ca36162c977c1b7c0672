CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#84: FILE: include/linux/lmb.h:43:
+extern long __init lmb_add(u64 base, u64 size);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#85: FILE: include/linux/lmb.h:44:
+extern long __init lmb_reserve(u64 base, u64 size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#86: FILE: include/linux/lmb.h:45:
+extern u64 __init lmb_alloc(u64 size, u64 align);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#87: FILE: include/linux/lmb.h:46:
+extern u64 __init lmb_alloc_base(u64 size,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#87: FILE: include/linux/lmb.h:46:
+extern u64 __init lmb_alloc_base(u64 size,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#88: FILE: include/linux/lmb.h:47:
+extern u64 __init lmb_alloc_base(u64 size,
+		u64, u64 max_addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#89: FILE: include/linux/lmb.h:48:
+extern u64 __init __lmb_alloc_base(u64 size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#90: FILE: include/linux/lmb.h:49:
+extern u64 __init __lmb_alloc_base(u64 size,
+		u64 align, u64 max_addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#91: FILE: include/linux/lmb.h:50:
+extern u64 __init lmb_phys_mem_size(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#92: FILE: include/linux/lmb.h:51:
+extern u64 __init lmb_end_of_DRAM(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#93: FILE: include/linux/lmb.h:52:
+extern void __init lmb_enforce_memory_limit(u64 memory_limit);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#94: FILE: include/linux/lmb.h:53:
+extern int __init lmb_is_reserved(u64 addr);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#105: FILE: include/linux/lmb.h:62:
 }
+static inline u64

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#111: FILE: include/linux/lmb.h:67:
 }
+static inline u64

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#117: FILE: include/linux/lmb.h:72:
 }
+static inline u64

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: lib/lmb.c:58:
+static unsigned long __init lmb_addrs_overlap(u64 base1,
+		u64 size1, u64 base2, u64 size2)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#169: FILE: lib/lmb.c:64:
+static long __init lmb_addrs_adjacent(u64 base1, u64 size1,
+		u64 base2, u64 size2)

CHECK:SPACING: No space is necessary after a cast
#269: FILE: lib/lmb.c:243:
+		      (unsigned long long) size, (unsigned long long) max_addr);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000321631.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 1 warnings, 17 checks, 289 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000321631.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
