CHECK:SPACING: No space is necessary after a cast
#86: FILE: fs/fs-writeback.c:60:
+	return (struct super_block *) (work->sb_data & ~1UL);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#99: FILE: fs/fs-writeback.c:73:
+	work->sb_data = (unsigned long) sb;

CHECK:BRACES: braces {} should be used on all arms of this statement
#140: FILE: fs/fs-writeback.c:105:
+	if (!bdi_work_on_stack(work))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#142: FILE: fs/fs-writeback.c:107:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#229: FILE: fs/fs-writeback.c:174:
+	if (!bdi_wblist_needs_lock(bdi))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#231: FILE: fs/fs-writeback.c:176:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#256: FILE: fs/fs-writeback.c:201:
+int bdi_start_writeback(struct backing_dev_info *bdi, struct super_block *sb,
+			 long nr_pages, enum writeback_sync_modes sync_mode)

CHECK:BRACES: braces {} should be used on all arms of this statement
#262: FILE: fs/fs-writeback.c:207:
+	if (work)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#264: FILE: fs/fs-writeback.c:209:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#452: FILE: fs/fs-writeback.c:422:
+		if (!bdi_wblist_needs_lock(bdi))
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#454: FILE: fs/fs-writeback.c:424:
+		else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#498: FILE: fs/fs-writeback.c:912:
+	if (!bdi_wblist_needs_lock(bdi))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#500: FILE: fs/fs-writeback.c:914:
+	else {

WARNING:SPACING: Unnecessary space before function pointer arguments
#620: FILE: include/linux/fs.h:1560:
+	struct bdi_writeback *(*inode_get_wb) (struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#620: FILE: include/linux/fs.h:1560:
+	struct bdi_writeback *(*inode_get_wb) (struct inode *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:BRACES: braces {} should be used on all arms of this statement
#687: FILE: mm/backing-dev.c:257:
+	if (!test_and_set_bit(BDI_wb_alloc, &bdi->state))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#689: FILE: mm/backing-dev.c:259:
+	else {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*wb)...) over kmalloc(sizeof(struct bdi_writeback)...)
#690: FILE: mm/backing-dev.c:260:
+		wb = kmalloc(sizeof(struct bdi_writeback), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:BRACES: braces {} should be used on all arms of this statement
#806: FILE: mm/backing-dev.c:360:
+	if (!bdi_wblist_needs_lock(bdi))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#808: FILE: mm/backing-dev.c:362:
+	else {

WARNING:SPACING: missing space after return type
#845: FILE: mm/backing-dev.c:465:
+				     int(*func)(struct backing_dev_info *))

WARNING:TYPO_SPELLING: 'simultanous' may be misspelled - perhaps 'simultaneous'?
#853: FILE: mm/backing-dev.c:472:
+	 * abort if we two or more simultanous calls to
 	                           ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#854: FILE: mm/backing-dev.c:473:
+	 * bdi_add_default_flusher_task() occured, further additions will block
 	                                  ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#876: FILE: mm/backing-dev.c:491:
+	wait_on_bit_lock(&bdi->state, BDI_pending, bdi_sched_wait,
+				TASK_UNINTERRUPTIBLE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#940: FILE: mm/backing-dev.c:604:
+	wait_on_bit(&bdi->state, BDI_pending, bdi_sched_wait,
+			TASK_UNINTERRUPTIBLE);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000121038.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 20 checks, 927 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000121038.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
