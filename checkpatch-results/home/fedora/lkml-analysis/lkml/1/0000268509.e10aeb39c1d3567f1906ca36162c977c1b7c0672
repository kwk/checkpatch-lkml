ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#88: FILE: include/linux/mmzone.h:113:
+	LRU_INACTIVE=LRU_BASE,	/* must match order of NR_[IN]ACTIVE */
 	            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'l' - possible side-effects?
#92: FILE: include/linux/mmzone.h:117:
+#define for_each_lru(l) for (l = 0; l < NR_LRU_LISTS; l++)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#303: FILE: mm/vmscan.c:1214:
+static unsigned long shrink_list(enum lru_list l, unsigned long nr_to_scan,
+	struct zone *zone, struct scan_control *sc, int priority)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#363: FILE: mm/vmscan.c:1255:
+		nr[LRU_ACTIVE] = mem_cgroup_calc_reclaim(sc->mem_cgroup,
+					zone, priority, LRU_ACTIVE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#368: FILE: mm/vmscan.c:1258:
+		nr[LRU_INACTIVE] = mem_cgroup_calc_reclaim(sc->mem_cgroup,
+					zone, priority, LRU_INACTIVE);

WARNING:MINMAX: min() should probably be min_t(unsigned long, nr[l], sc->swap_cluster_max)
#378: FILE: mm/vmscan.c:1264:
+				nr_to_scan = min(nr[l],
 					(unsigned long)sc->swap_cluster_max);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#379: FILE: mm/vmscan.c:1265:
+				nr_to_scan = min(nr[l],
 					(unsigned long)sc->swap_cluster_max);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#476: FILE: include/linux/memcontrol.h:72:
+extern long mem_cgroup_calc_reclaim(struct mem_cgroup *mem, struct zone *zone,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#477: FILE: include/linux/memcontrol.h:73:
+extern long mem_cgroup_calc_reclaim(struct mem_cgroup *mem, struct zone *zone,
+					int priority, enum lru_list lru);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#494: FILE: include/linux/memcontrol.h:161:
+static inline long mem_cgroup_calc_reclaim(struct mem_cgroup *mem,
+					struct zone *zone, int priority,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#633: FILE: mm/memcontrol.c:425:
+long mem_cgroup_calc_reclaim(struct mem_cgroup *mem, struct zone *zone,
+					int priority, enum lru_list lru)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000268509.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 1 warnings, 9 checks, 615 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000268509.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
