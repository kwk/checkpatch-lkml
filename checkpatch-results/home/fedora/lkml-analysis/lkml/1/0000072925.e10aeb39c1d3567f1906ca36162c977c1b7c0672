CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#65: FILE: include/linux/biotrack.h:52:
+extern int blkio_cgroup_register_ioband(const struct ioband_cgroup_ops *ops);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#92: FILE: mm/biotrack.c:52:
 };
+static DEFINE_MUTEX(ioband_ops_lock);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#93: FILE: mm/biotrack.c:53:
+static const struct ioband_cgroup_ops *ioband_ops = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#146: FILE: mm/biotrack.c:306:
+static int blkio_devs_read(struct cgroup *cgrp, struct cftype *cft,
+							struct seq_file *m)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#157: FILE: mm/biotrack.c:317:
+static int blkio_devs_write(struct cgroup *cgrp, struct cftype *cft,
+							const char *buffer)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#180: FILE: mm/biotrack.c:340:
+static int blkio_group_read(struct cgroup *cgrp, struct cftype *cft,
+							struct seq_file *m)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: mm/biotrack.c:357:
+static int blkio_group_config_write(struct cgroup *cgrp, struct cftype *cft,
+							const char *buffer)

CHECK:BRACES: braces {} should be used on all arms of this statement
#209: FILE: mm/biotrack.c:369:
+		if (cgrp == cgrp->top_cgroup)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#211: FILE: mm/biotrack.c:371:
+		else {

WARNING:TYPO_SPELLING: 'statictics' may be misspelled - perhaps 'statistics'?
#224: FILE: mm/biotrack.c:384:
+/* Reset the statictics counter of the specified blkio cgroup. */
              ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#226: FILE: mm/biotrack.c:386:
+static int blkio_group_stats_write(struct cgroup *cgrp, struct cftype *cft,
+							const char *buffer)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#310: FILE: drivers/md/dm-ioband-policy.c:433:
+	seq_printf(m, " token=%d carryover=%d",
+				dp->g_token_bucket, dp->g_carryover);

WARNING:TYPO_SPELLING: 'spacified' may be misspelled - perhaps 'specified'?
#327: FILE: drivers/md/dm-ioband-policy.c:471:
+ * g_show_group   : Show the configuration of the spacified ioband group.
                                                   ^^^^^^^^^

WARNING:TYPO_SPELLING: 'spacified' may be misspelled - perhaps 'specified'?
#379: FILE: drivers/md/dm-ioband-rangebw.c:640:
+ * g_show_group   : Show the configuration of the spacified ioband group.
                                                   ^^^^^^^^^

CHECK:BRACES: Unbalanced braces around else statement
#426: FILE: drivers/md/dm-ioband-ctl.c:289:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#497: FILE: drivers/md/dm-ioband-ctl.c:1397:
+			head = list_first_entry(&dp->g_heads,
+					      struct ioband_group, c_heads);

WARNING:SPLIT_STRING: quoted string split across lines
#552: FILE: drivers/md/dm-ioband-ctl.c:1452:
+				seq_printf(m, " %lu %lu %lu %lu"
+					   " %lu %lu %lu %lu %d %lu %lu",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#569: FILE: drivers/md/dm-ioband-ctl.c:1469:
+static int ioband_cgroup_config_group(int argc, char **argv,int parent, int id)
                                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#667: FILE: drivers/md/dm-ioband-ctl.c:1567:
+^I.reset_group_stats ^I= ioband_cgroup_reset_group_stats,$

WARNING:SPACING: Unnecessary space before function pointer arguments
#710: FILE: drivers/md/dm-ioband.h:64:
+	void (*g_show_device) (struct seq_file *, struct ioband_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct seq_file *' should also have an identifier name
#710: FILE: drivers/md/dm-ioband.h:64:
+	void (*g_show_device) (struct seq_file *, struct ioband_device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ioband_device *' should also have an identifier name
#710: FILE: drivers/md/dm-ioband.h:64:
+	void (*g_show_device) (struct seq_file *, struct ioband_device *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#711: FILE: drivers/md/dm-ioband.h:65:
+	void (*g_show_group) (struct seq_file *, struct ioband_group *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct seq_file *' should also have an identifier name
#711: FILE: drivers/md/dm-ioband.h:65:
+	void (*g_show_group) (struct seq_file *, struct ioband_group *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ioband_group *' should also have an identifier name
#711: FILE: drivers/md/dm-ioband.h:65:
+	void (*g_show_group) (struct seq_file *, struct ioband_group *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct seq_file *' should also have an identifier name
#730: FILE: drivers/md/dm-ioband.h:160:
+	void (*show_device)(struct seq_file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#731: FILE: drivers/md/dm-ioband.h:161:
+	int (*config_device)(int, char **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char **' should also have an identifier name
#731: FILE: drivers/md/dm-ioband.h:161:
+	int (*config_device)(int, char **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct seq_file *' should also have an identifier name
#732: FILE: drivers/md/dm-ioband.h:162:
+	void (*show_group)(struct seq_file *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#732: FILE: drivers/md/dm-ioband.h:162:
+	void (*show_group)(struct seq_file *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#732: FILE: drivers/md/dm-ioband.h:162:
+	void (*show_group)(struct seq_file *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#733: FILE: drivers/md/dm-ioband.h:163:
+	int (*config_group)(int, char **, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char **' should also have an identifier name
#733: FILE: drivers/md/dm-ioband.h:163:
+	int (*config_group)(int, char **, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#733: FILE: drivers/md/dm-ioband.h:163:
+	int (*config_group)(int, char **, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#733: FILE: drivers/md/dm-ioband.h:163:
+	int (*config_group)(int, char **, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#734: FILE: drivers/md/dm-ioband.h:164:
+	int (*reset_group_stats)(int, char **, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char **' should also have an identifier name
#734: FILE: drivers/md/dm-ioband.h:164:
+	int (*reset_group_stats)(int, char **, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#734: FILE: drivers/md/dm-ioband.h:164:
+	int (*reset_group_stats)(int, char **, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#735: FILE: drivers/md/dm-ioband.h:165:
+	void (*remove_group)(int);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000072925.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 25 warnings, 12 checks, 660 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000072925.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
