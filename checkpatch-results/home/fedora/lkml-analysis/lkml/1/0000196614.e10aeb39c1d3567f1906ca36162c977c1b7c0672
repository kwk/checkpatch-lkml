WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
2.6.27-stable review patch.  If anyone has any objections, please let us know.

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id 'edf1ae403896cb7750800508b14996ba6be39a53', maybe rebased or not pulled?
#47: 
Backport of upstream commit edf1ae403896cb7750800508b14996ba6be39a53

WARNING:TYPO_SPELLING: 'definately' may be misspelled - perhaps 'definitely'?
#70: 
been run in various scenarios, but it definately removes
                                      ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#103: FILE: fs/cifs/cifsproto.h:39:
+			unsigned int /* length */ , struct sockaddr *, bool);
 			                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#220: FILE: fs/cifs/connect.c:1663:
+ipv6_connect(struct sockaddr_in6 *psin_server, struct socket **csocket,
+		bool noblocksnd)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: fs/cifs/connect.c:1988:
+			rc = ipv6_connect(&sin_server6, &csocket,
+					volume_info.noblocksnd);

CHECK:CAMELCASE: Avoid CamelCase: <srvTcp>
#255: FILE: fs/cifs/connect.c:2009:
+			srvTcp->noblocksnd = volume_info.noblocksnd;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'total_len > 0'
#318: FILE: fs/cifs/transport.c:323:
+	if ((total_len > 0) && (total_len != smb_buf_length + 4)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:CAMELCASE: Avoid CamelCase: <cFYI>
#319: FILE: fs/cifs/transport.c:324:
+		cFYI(1, ("partial send (%d remaining), terminating session",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#320: FILE: fs/cifs/transport.c:325:
+		cFYI(1, ("partial send (%d remaining), terminating session",
+				total_len));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#322: FILE: fs/cifs/transport.c:327:
+		/* If we have only sent part of an SMB then the next SMB
+		   could be taken as the remainder of this one.  We need

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#324: FILE: fs/cifs/transport.c:329:
+		   SMB */

CHECK:CAMELCASE: Avoid CamelCase: <tcpStatus>
#325: FILE: fs/cifs/transport.c:330:
+		server->tcpStatus = CifsNeedReconnect;

CHECK:CAMELCASE: Avoid CamelCase: <CifsNeedReconnect>
#325: FILE: fs/cifs/transport.c:330:
+		server->tcpStatus = CifsNeedReconnect;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#338: FILE: fs/cifs/transport.c:540:
+	rc = smb_send2(ses->server, iov, n_vec,
+			(struct sockaddr *) &(ses->server->addr.sockAddr),

CHECK:SPACING: No space is necessary after a cast
#338: FILE: fs/cifs/transport.c:540:
+			(struct sockaddr *) &(ses->server->addr.sockAddr),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ses->server->addr.sockAddr
#338: FILE: fs/cifs/transport.c:540:
+			(struct sockaddr *) &(ses->server->addr.sockAddr),

CHECK:CAMELCASE: Avoid CamelCase: <sockAddr>
#338: FILE: fs/cifs/transport.c:540:
+			(struct sockaddr *) &(ses->server->addr.sockAddr),

CHECK:SPACING: No space is necessary after a cast
#348: FILE: fs/cifs/transport.c:733:
+			(struct sockaddr *) &(ses->server->addr.sockAddr),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ses->server->addr.sockAddr
#348: FILE: fs/cifs/transport.c:733:
+			(struct sockaddr *) &(ses->server->addr.sockAddr),

CHECK:SPACING: No space is necessary after a cast
#358: FILE: fs/cifs/transport.c:874:
+		(struct sockaddr *) &(ses->server->addr.sockAddr),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ses->server->addr.sockAddr
#358: FILE: fs/cifs/transport.c:874:
+		(struct sockaddr *) &(ses->server->addr.sockAddr),

CHECK:SPACING: No space is necessary after a cast
#368: FILE: fs/cifs/transport.c:965:
+			(struct sockaddr *) &(ses->server->addr.sockAddr),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ses->server->addr.sockAddr
#368: FILE: fs/cifs/transport.c:965:
+			(struct sockaddr *) &(ses->server->addr.sockAddr),

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000196614.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 5 warnings, 18 checks, 256 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000196614.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
