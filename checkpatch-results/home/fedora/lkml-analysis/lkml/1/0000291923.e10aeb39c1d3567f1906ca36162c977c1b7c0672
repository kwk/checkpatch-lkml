WARNING:BRACES: braces {} are not necessary for single statement blocks
#74: FILE: drivers/misc/sgi-xp/xpc_channel.c:39:
+	if ((u64)*base == L1_CACHE_ALIGN((u64)*base)) {
 		return *base;
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <local_GPs_base>
#150: FILE: drivers/misc/sgi-xp/xpc_channel.c:126:
+							&part->local_GPs_base);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'part->remote_GPs_base'
#161: FILE: drivers/misc/sgi-xp/xpc_channel.c:138:
+							 &part->
+							 remote_GPs_base);

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

CHECK:CAMELCASE: Avoid CamelCase: <remote_GPs_base>
#161: FILE: drivers/misc/sgi-xp/xpc_channel.c:138:
+							 remote_GPs_base);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'part->remote_openclose_args_pa'
#390: FILE: drivers/misc/sgi-xp/xpc_channel.c:402:
+						 (void *)part->
+						 remote_openclose_args_pa,

CHECK:CAMELCASE: Avoid CamelCase: <remote_GPs_pa>
#401: FILE: drivers/misc/sgi-xp/xpc_channel.c:418:
+						 (void *)part->remote_GPs_pa,

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'ch->local_msgqueue_base'
#430: FILE: drivers/misc/sgi-xp/xpc_channel.c:454:
+								   &ch->
+								   local_msgqueue_base);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'ch->remote_msgqueue_base'
#458: FILE: drivers/misc/sgi-xp/xpc_channel.c:506:
+								    &ch->
+								    remote_msgqueue_base);

WARNING:SPLIT_STRING: quoted string split across lines
#547: FILE: drivers/misc/sgi-xp/xpc_channel.c:658:
 				"notify=0x%p, msg_number=%ld, partid=%d, "
+				"channel=%d\n", (void *)notify, get,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#592: FILE: drivers/misc/sgi-xp/xpc_channel.c:785:
 		dev_info(xpc_chan, "channel %d to partition %d disconnected, "
+			 "reason=%d\n", ch->number, ch->partid, ch->reason);

WARNING:INDENTED_LABEL: labels should not be indented
#629: FILE: drivers/misc/sgi-xp/xpc_channel.c:818:
+      again:

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#818: FILE: drivers/misc/sgi-xp/xpc_channel.c:1162:
+	} while (++get < (volatile s64)ch->remote_GP.get);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#839: FILE: drivers/misc/sgi-xp/xpc_channel.c:1180:
+	} while (++put < (volatile s64)ch->remote_GP.put);

CHECK:CAMELCASE: Avoid CamelCase: <xpcInterrupted>
#1113: FILE: drivers/misc/sgi-xp/xpc_channel.c:1635:
+		DBUG_ON(ch->reason == xpcInterrupted);	// >>> Is this true?

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1163: FILE: drivers/misc/sgi-xp/xpc_channel.c:1688:
+		put = (volatile s64)ch->w_local_GP.put;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1164: FILE: drivers/misc/sgi-xp/xpc_channel.c:1689:
+		if (put - (volatile s64)ch->w_remote_GP.get <

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1241: FILE: drivers/misc/sgi-xp/xpc_channel.c:1798:
+			if (put == (volatile s64)ch->w_local_GP.put) {
 				break;
 			}

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1241: FILE: drivers/misc/sgi-xp/xpc_channel.c:1798:
+			if (put == (volatile s64)ch->w_local_GP.put) {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1261: FILE: drivers/misc/sgi-xp/xpc_channel.c:1821:
+			DBUG_ON((volatile s64)ch->local_GP->put < initial_put);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1373: FILE: drivers/misc/sgi-xp/xpc_channel.c:2036:
+			(volatile s64)ch->w_remote_GP.put);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1374: FILE: drivers/misc/sgi-xp/xpc_channel.c:2037:
+		nmsgs = (volatile s64)ch->w_remote_GP.put -

CHECK:CAMELCASE: Avoid CamelCase: <xpcSuccess>
#1393: FILE: drivers/misc/sgi-xp/xpc_channel.c:2051:
+		    xpcSuccess) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1427: FILE: drivers/misc/sgi-xp/xpc_channel.c:2088:
+		if ((volatile u32)ch->flags & XPC_C_DISCONNECTING) {
 			break;
 		}

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1427: FILE: drivers/misc/sgi-xp/xpc_channel.c:2088:
+		if ((volatile u32)ch->flags & XPC_C_DISCONNECTING) {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1433: FILE: drivers/misc/sgi-xp/xpc_channel.c:2092:
+		get = (volatile s64)ch->w_local_GP.get;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1434: FILE: drivers/misc/sgi-xp/xpc_channel.c:2093:
+		if (get == (volatile s64)ch->w_remote_GP.put) {
 			break;
 		}

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1434: FILE: drivers/misc/sgi-xp/xpc_channel.c:2093:
+		if (get == (volatile s64)ch->w_remote_GP.put) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1500: FILE: drivers/misc/sgi-xp/xpc_channel.c:2181:
+			if (get == (volatile s64)ch->w_local_GP.get) {
 				break;
 			}

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1500: FILE: drivers/misc/sgi-xp/xpc_channel.c:2181:
+			if (get == (volatile s64)ch->w_local_GP.get) {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1521: FILE: drivers/misc/sgi-xp/xpc_channel.c:2205:
+			DBUG_ON((volatile s64)ch->local_GP->get <= initial_get);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1763: FILE: drivers/misc/sgi-xp/xpc_main.c:245:
+	while (!(volatile int)xpc_exiting) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1805: FILE: drivers/misc/sgi-xp/xpc_main.c:288:
+						atomic_read(&xpc_act_IRQ_rcvd)
+						|| time_after_eq(jiffies,

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1807: FILE: drivers/misc/sgi-xp/xpc_main.c:290:
+						(volatile int)xpc_exiting));

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1885: FILE: drivers/misc/sgi-xp/xpc_main.c:388:
+						(volatile u64)part->

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'part->local_IPI_amo'
#1886: FILE: drivers/misc/sgi-xp/xpc_main.c:389:
+						(volatile u64)part->
+						local_IPI_amo != 0 ||

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1887: FILE: drivers/misc/sgi-xp/xpc_main.c:390:
+						((volatile u8)part->act_state ==

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'part->nchannels_active'
#1890: FILE: drivers/misc/sgi-xp/xpc_main.c:393:
+						 atomic_read(&part->
+							     nchannels_active)

WARNING:SPLIT_STRING: quoted string split across lines
#1939: FILE: drivers/misc/sgi-xp/xpc_main.c:486:
 		dev_warn(xpc_part, "unable to set pid %d to a realtime "
+			 "priority, ret=%d\n", current->pid, ret);

WARNING:SPLIT_STRING: quoted string split across lines
#1951: FILE: drivers/misc/sgi-xp/xpc_main.c:505:
 		dev_warn(xpc_part, "xpc_partition_up(%d) failed to register "
+			 "xp_addr region\n", partid);

CHECK:SPACING: No space is necessary after a cast
#2007: FILE: drivers/misc/sgi-xp/xpc_main.c:580:
+	partid_t partid = (partid_t) (u64)dev_id;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#2061: FILE: drivers/misc/sgi-xp/xpc_main.c:658:
+		while ((volatile s64)ch->w_local_GP.get <

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#2062: FILE: drivers/misc/sgi-xp/xpc_main.c:659:
+		       (volatile s64)ch->w_remote_GP.put &&

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#2063: FILE: drivers/misc/sgi-xp/xpc_main.c:660:
+		       !((volatile u32)ch->flags & XPC_C_DISCONNECTING)) {

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#2083: FILE: drivers/misc/sgi-xp/xpc_main.c:675:
+							 ((volatile s64)ch->

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'ch->w_local_GP.get'
#2084: FILE: drivers/misc/sgi-xp/xpc_main.c:676:
+							 ((volatile s64)ch->
+							  w_local_GP.get <

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#2085: FILE: drivers/misc/sgi-xp/xpc_main.c:677:
+							  (volatile s64)ch->

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'ch->w_remote_GP.put'
#2086: FILE: drivers/misc/sgi-xp/xpc_main.c:678:
+							  (volatile s64)ch->
+							  w_remote_GP.put ||

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#2087: FILE: drivers/misc/sgi-xp/xpc_main.c:679:
+							  ((volatile u32)ch->

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'ch->flags'
#2088: FILE: drivers/misc/sgi-xp/xpc_main.c:680:
+							  ((volatile u32)ch->
+							   flags &

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#2094: FILE: drivers/misc/sgi-xp/xpc_main.c:685:
+	} while (!((volatile u32)ch->flags & XPC_C_DISCONNECTING));

WARNING:SPLIT_STRING: quoted string split across lines
#2274: FILE: drivers/misc/sgi-xp/xpc_main.c:970:
 				dev_info(xpc_part, "waiting for remote "
+					 "partitions to disengage, timeout in "

WARNING:SPLIT_STRING: quoted string split across lines
#2275: FILE: drivers/misc/sgi-xp/xpc_main.c:971:
+					 "partitions to disengage, timeout in "
+					 "%ld seconds\n",

WARNING:SPLIT_STRING: quoted string split across lines
#2288: FILE: drivers/misc/sgi-xp/xpc_main.c:982:
 				dev_info(xpc_part, "waiting for local partition"
+					 " to disengage\n");

WARNING:SPLIT_STRING: quoted string split across lines
#2296: FILE: drivers/misc/sgi-xp/xpc_main.c:989:
 				dev_info(xpc_part, "all partitions have "
+					 "disengaged\n");

WARNING:SPLIT_STRING: quoted string split across lines
#2403: FILE: drivers/misc/sgi-xp/xpc_main.c:1109:
 					dev_info(xpc_part, "disengage from "
+						 "remote partition %d timed "

WARNING:SPLIT_STRING: quoted string split across lines
#2404: FILE: drivers/misc/sgi-xp/xpc_main.c:1110:
+						 "remote partition %d timed "
+						 "out\n", partid);

WARNING:SPLIT_STRING: quoted string split across lines
#2415: FILE: drivers/misc/sgi-xp/xpc_main.c:1118:
 			dev_info(xpc_part, "waiting for remote partitions to "
+				 "disengage, timeout in %ld seconds\n",

WARNING:SPLIT_STRING: quoted string split across lines
#2549: FILE: drivers/misc/sgi-xp/xpc_main.c:1366:
 MODULE_PARM_DESC(xpc_hb_interval, "Number of seconds between "
+		 "heartbeat increments.");

WARNING:SPLIT_STRING: quoted string split across lines
#2554: FILE: drivers/misc/sgi-xp/xpc_main.c:1370:
 MODULE_PARM_DESC(xpc_hb_check_interval, "Number of seconds between "
+		 "heartbeat checks.");

WARNING:SPLIT_STRING: quoted string split across lines
#2559: FILE: drivers/misc/sgi-xp/xpc_main.c:1374:
 MODULE_PARM_DESC(xpc_disengage_request_timelimit, "Number of seconds to wait "
+		 "for disengage request to complete.");

WARNING:SPLIT_STRING: quoted string split across lines
#2565: FILE: drivers/misc/sgi-xp/xpc_main.c:1378:
 MODULE_PARM_DESC(xpc_kdebug_ignore, "Should lack of heartbeat be ignored by "
+		 "other partitions when dropping into kdebug.");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2609: FILE: drivers/misc/sgi-xp/xpnet.c:90:
+#define	XPNET_VERSION _XPNET_VERSION(1,0)	/* version 1.0 */
        	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2610: FILE: drivers/misc/sgi-xp/xpnet.c:91:
+#define	XPNET_VERSION_EMBED _XPNET_VERSION(1,1)	/* version 1.1 */
        	                                    ^

WARNING:SPLIT_STRING: quoted string split across lines
#2716: FILE: drivers/misc/sgi-xp/xpnet.c:257:
 	dev_dbg(xpnet, "<skb->head=0x%p skb->data=0x%p skb->tail=0x%p "
+		"skb->end=0x%p skb->len=%d\n", (void *)skb->head,

WARNING:SPLIT_STRING: quoted string split across lines
#2873: FILE: drivers/misc/sgi-xp/xpnet.c:453:
 	dev_dbg(xpnet, ">skb->head=0x%p skb->data=0x%p skb->tail=0x%p "
+		"skb->end=0x%p skb->len=%d\n", (void *)skb->head,

WARNING:SPLIT_STRING: quoted string split across lines
#2886: FILE: drivers/misc/sgi-xp/xpnet.c:465:
 		dev_warn(xpnet, "failed to kmalloc %ld bytes; dropping "
+			 "packet\n", sizeof(struct xpnet_pending_msg));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000291923.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 57 warnings, 7 checks, 2751 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000291923.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
