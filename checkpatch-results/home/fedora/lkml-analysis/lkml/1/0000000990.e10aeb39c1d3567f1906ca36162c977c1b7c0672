WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
> > > > Add support for the I2C controller used on Freescale/Motorola Coldfire

WARNING:REPEATED_WORD: Possible repeated word: 'be'
#51: 
> I like to work with mainline sources to be be able to contribute to and benefit

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#76: FILE: arch/m68k/include/asm/m527xsim.h:252:
+/*********************************************************************
+*

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#82: FILE: arch/m68k/include/asm/m527xsim.h:258:
+#define MCF_I2C_I2ADR           (volatile unsigned char *)(MCF_MBAR + 0x300)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#82: FILE: arch/m68k/include/asm/m527xsim.h:258:
+#define MCF_I2C_I2ADR           (volatile unsigned char *)(MCF_MBAR + 0x300)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#83: FILE: arch/m68k/include/asm/m527xsim.h:259:
+#define MCF_I2C_I2FDR           (volatile unsigned char *)(MCF_MBAR + 0x304)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#83: FILE: arch/m68k/include/asm/m527xsim.h:259:
+#define MCF_I2C_I2FDR           (volatile unsigned char *)(MCF_MBAR + 0x304)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#84: FILE: arch/m68k/include/asm/m527xsim.h:260:
+#define MCF_I2C_I2CR            (volatile unsigned char *)(MCF_MBAR + 0x308)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#84: FILE: arch/m68k/include/asm/m527xsim.h:260:
+#define MCF_I2C_I2CR            (volatile unsigned char *)(MCF_MBAR + 0x308)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#85: FILE: arch/m68k/include/asm/m527xsim.h:261:
+#define MCF_I2C_I2SR            (volatile unsigned char *)(MCF_MBAR + 0x30C)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#85: FILE: arch/m68k/include/asm/m527xsim.h:261:
+#define MCF_I2C_I2SR            (volatile unsigned char *)(MCF_MBAR + 0x30C)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#86: FILE: arch/m68k/include/asm/m527xsim.h:262:
+#define MCF_I2C_I2DR            (volatile unsigned char *)(MCF_MBAR + 0x310)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#86: FILE: arch/m68k/include/asm/m527xsim.h:262:
+#define MCF_I2C_I2DR            (volatile unsigned char *)(MCF_MBAR + 0x310)

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#89: FILE: arch/m68k/include/asm/m527xsim.h:265:
+#define MCF_I2C_I2AR_ADR(x)     (((x)&0x7F)<<1)
                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#89: FILE: arch/m68k/include/asm/m527xsim.h:265:
+#define MCF_I2C_I2AR_ADR(x)     (((x)&0x7F)<<1)
                                            ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#92: FILE: arch/m68k/include/asm/m527xsim.h:268:
+#define MCF_I2C_I2FDR_IC(x)     (((x)&0x3F))
                                      ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#151: FILE: drivers/i2c/busses/i2c-mcf.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#152: FILE: drivers/i2c/busses/i2c-mcf.c:2:
+/*
+    i2c-mcf.c - Part of lm_sensors, Linux kernel modules for hardware monitoring

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#173: FILE: drivers/i2c/busses/i2c-mcf.c:23:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#174: FILE: drivers/i2c/busses/i2c-mcf.c:24:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: drivers/i2c/busses/i2c-mcf.c:44:
+                static int __init i2c_coldfire_init(void)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: drivers/i2c/busses/i2c-mcf.c:45:
+                {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#196: FILE: drivers/i2c/busses/i2c-mcf.c:46:
+                                .........$

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: drivers/i2c/busses/i2c-mcf.c:47:
+                        // Set transmission frequency 0x15 = ~100kHz$

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: drivers/i2c/busses/i2c-mcf.c:48:
+                        *MCF_I2C_I2FDR = 0x15;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: drivers/i2c/busses/i2c-mcf.c:49:
+                                ........$

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: drivers/i2c/busses/i2c-mcf.c:50:
+                }$

CHECK:CAMELCASE: Avoid CamelCase: <rxData>
#263: FILE: drivers/i2c/busses/i2c-mcf.c:113:
+static int coldfire_read_data(u8 * const rxData,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <ackType>
#264: FILE: drivers/i2c/busses/i2c-mcf.c:114:
+			      const enum I2C_ACK_TYPE ackType)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#266: FILE: drivers/i2c/busses/i2c-mcf.c:116:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#279: FILE: drivers/i2c/busses/i2c-mcf.c:129:
+	/* printk(">>> %s I2DR data is %.2x \n", __FUNCTION__, *rxData); */

WARNING:TYPO_SPELLING: 'IIF' may be misspelled - perhaps 'IF'?
#286: FILE: drivers/i2c/busses/i2c-mcf.c:136:
+		printk("%s - I2C IIF never set. Timeout is %d \n", __FUNCTION__,
 		                 ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#286: FILE: drivers/i2c/busses/i2c-mcf.c:136:
+		printk("%s - I2C IIF never set. Timeout is %d \n", __FUNCTION__,

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#286: FILE: drivers/i2c/busses/i2c-mcf.c:136:
+		printk("%s - I2C IIF never set. Timeout is %d \n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#286: FILE: drivers/i2c/busses/i2c-mcf.c:136:
+		printk("%s - I2C IIF never set. Timeout is %d \n", __FUNCTION__,

CHECK:CAMELCASE: Avoid CamelCase: <txData>
#302: FILE: drivers/i2c/busses/i2c-mcf.c:152:
+static int coldfire_write_data(const u8 txData)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#304: FILE: drivers/i2c/busses/i2c-mcf.c:154:
+{
+

WARNING:TYPO_SPELLING: 'IIF' may be misspelled - perhaps 'IF'?
#318: FILE: drivers/i2c/busses/i2c-mcf.c:168:
+		printk("%s - I2C IIF never set. Timeout is %d \n", __FUNCTION__,
 		                 ^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#318: FILE: drivers/i2c/busses/i2c-mcf.c:168:
+		printk("%s - I2C IIF never set. Timeout is %d \n", __FUNCTION__,

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#318: FILE: drivers/i2c/busses/i2c-mcf.c:168:
+		printk("%s - I2C IIF never set. Timeout is %d \n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#318: FILE: drivers/i2c/busses/i2c-mcf.c:168:
+		printk("%s - I2C IIF never set. Timeout is %d \n", __FUNCTION__,

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#341: FILE: drivers/i2c/busses/i2c-mcf.c:191:
+{
+

WARNING:LONG_LINE_COMMENT: line length of 122 exceeds 100 columns
#344: FILE: drivers/i2c/busses/i2c-mcf.c:194:
+	/* printk(">>> %s START TYPE %s \n", __FUNCTION__, start_type == FIRST_START ? "FIRST_START" : "REPEAT_START"); */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#344: FILE: drivers/i2c/busses/i2c-mcf.c:194:
+	/* printk(">>> %s START TYPE %s \n", __FUNCTION__, start_type == FIRST_START ? "FIRST_START" : "REPEAT_START"); */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#355: FILE: drivers/i2c/busses/i2c-mcf.c:205:
+			    ("%s - I2C bus always busy in the past 500us timeout is %d \n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#356: FILE: drivers/i2c/busses/i2c-mcf.c:206:
+			     __FUNCTION__, timeout);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#368: FILE: drivers/i2c/busses/i2c-mcf.c:218:
+			    ("%s - I2C bus is never busy after START. Timeout is %d \n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#369: FILE: drivers/i2c/busses/i2c-mcf.c:219:
+			     __FUNCTION__, timeout);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#375: FILE: drivers/i2c/busses/i2c-mcf.c:225:
+		udelay(500);	/* need some delay before repeat start */

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:TYPO_SPELLING: 'IIF' may be misspelled - perhaps 'IF'?
#385: FILE: drivers/i2c/busses/i2c-mcf.c:235:
+	/* when one byte transfer is completed, IIF set at the faling edge of the 9th clock */
 	                                        ^^^

WARNING:TYPO_SPELLING: 'IIF' may be misspelled - perhaps 'IF'?
#390: FILE: drivers/i2c/busses/i2c-mcf.c:240:
+		printk("%s - I2C IIF never set. Timeout is %d \n", __FUNCTION__,
 		                 ^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#390: FILE: drivers/i2c/busses/i2c-mcf.c:240:
+		printk("%s - I2C IIF never set. Timeout is %d \n", __FUNCTION__,

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#390: FILE: drivers/i2c/busses/i2c-mcf.c:240:
+		printk("%s - I2C IIF never set. Timeout is %d \n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#390: FILE: drivers/i2c/busses/i2c-mcf.c:240:
+		printk("%s - I2C IIF never set. Timeout is %d \n", __FUNCTION__,

WARNING:INDENTED_LABEL: labels should not be indented
#393: FILE: drivers/i2c/busses/i2c-mcf.c:243:
+      check_rc:

CHECK:CAMELCASE: Avoid CamelCase: <tempRxData>
#416: FILE: drivers/i2c/busses/i2c-mcf.c:266:
+	u8 rxData, tempRxData[2];

CHECK:BRACES: braces {} should be used on all arms of this statement
#425: FILE: drivers/i2c/busses/i2c-mcf.c:275:
+		if (read_write == I2C_SMBUS_WRITE)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#427: FILE: drivers/i2c/busses/i2c-mcf.c:277:
+		else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#437: FILE: drivers/i2c/busses/i2c-mcf.c:287:
+		if (read_write == I2C_SMBUS_WRITE)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#439: FILE: drivers/i2c/busses/i2c-mcf.c:289:
+		else {

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#453: FILE: drivers/i2c/busses/i2c-mcf.c:303:
+		dev_info(&adap->dev, "size = I2C_SMBUS_WORD_DATA \n");

WARNING:TYPO_SPELLING: 'Peform' may be misspelled - perhaps 'Perform'?
#460: FILE: drivers/i2c/busses/i2c-mcf.c:310:
+			/* This is SMBUS READ WORD request. Peform REPEAT START */
 			                                    ^^^^^^

WARNING:TYPO_SPELLING: 'Peform' may be misspelled - perhaps 'Perform'?
#486: FILE: drivers/i2c/busses/i2c-mcf.c:336:
+				/* This is SMBUS READ BLOCK request. Peform REPEAT START */
 				                                     ^^^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#509: FILE: drivers/i2c/busses/i2c-mcf.c:359:
+		printk("Unsupported I2C size \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#509: FILE: drivers/i2c/busses/i2c-mcf.c:359:
+		printk("Unsupported I2C size \n");

CHECK:CAMELCASE: Avoid CamelCase: <dummyRead>
#543: FILE: drivers/i2c/busses/i2c-mcf.c:393:
+	u8 dummyRead;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#581: FILE: drivers/i2c/busses/i2c-mcf.c:431:
+				__FUNCTION__, lastop, p->flags & I2C_M_RD);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#587: FILE: drivers/i2c/busses/i2c-mcf.c:437:
+					__FUNCTION__);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#588: FILE: drivers/i2c/busses/i2c-mcf.c:438:
+				if ((err =

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#595: FILE: drivers/i2c/busses/i2c-mcf.c:445:
+					__FUNCTION__);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#596: FILE: drivers/i2c/busses/i2c-mcf.c:446:
+				if ((err =

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'p->flags'
#598: FILE: drivers/i2c/busses/i2c-mcf.c:448:
+				     coldfire_i2c_start((p->
+							 flags & I2C_M_RD) ?

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:TYPO_SPELLING: 'Initalize' may be misspelled - perhaps 'Initialize'?
#664: FILE: drivers/i2c/busses/i2c-mcf.c:514:
+ *  Initalize the 5282 I2C module
     ^^^^^^^^^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#681: FILE: drivers/i2c/busses/i2c-mcf.c:531:
+		volatile u32 *reg;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#683: FILE: drivers/i2c/busses/i2c-mcf.c:533:
+		reg = (volatile u32 *)(MCF_MBAR2 + MCFSIM2_GPIO1FUNC);

WARNING:TYPO_SPELLING: 'initialzation' may be misspelled - perhaps 'initialization'?
#709: FILE: drivers/i2c/busses/i2c-mcf.c:559:
+	/* Enable I2C module and if IBB is set, do the special initialzation */
 	                                                       ^^^^^^^^^^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#713: FILE: drivers/i2c/busses/i2c-mcf.c:563:
+		printk("%s - do special 5282 I2C init procedures \n",

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#713: FILE: drivers/i2c/busses/i2c-mcf.c:563:
+		printk("%s - do special 5282 I2C init procedures \n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#714: FILE: drivers/i2c/busses/i2c-mcf.c:564:
+		       __FUNCTION__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#729: FILE: drivers/i2c/busses/i2c-mcf.c:579:
+		printk("%s - return code is: %d \n", __FUNCTION__, retval);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#729: FILE: drivers/i2c/busses/i2c-mcf.c:579:
+		printk("%s - return code is: %d \n", __FUNCTION__, retval);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#729: FILE: drivers/i2c/busses/i2c-mcf.c:579:
+		printk("%s - return code is: %d \n", __FUNCTION__, retval);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#756: FILE: drivers/i2c/busses/i2c-mcf.h:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#757: FILE: drivers/i2c/busses/i2c-mcf.h:2:
+/*
+    i2c-mcf5282.h - header file for i2c-mcf5282.c

ERROR:CODE_INDENT: code indent should use tabs where possible
#760: FILE: drivers/i2c/busses/i2c-mcf.h:5:
+                                        <http://www3.sympatico.ca/derek.cheung>$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#777: FILE: drivers/i2c/busses/i2c-mcf.h:22:
+    along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#778: FILE: drivers/i2c/busses/i2c-mcf.h:23:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#782: FILE: drivers/i2c/busses/i2c-mcf.h:27:
+        ^IInitial Release - developed on uClinux with 2.6.9 kernel$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#782: FILE: drivers/i2c/busses/i2c-mcf.h:27:
+        ^IInitial Release - developed on uClinux with 2.6.9 kernel$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#788: FILE: drivers/i2c/busses/i2c-mcf.h:33:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#798: FILE: drivers/i2c/busses/i2c-mcf.h:43:
+                              unsigned short flags, char read_write,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#798: FILE: drivers/i2c/busses/i2c-mcf.h:43:
+static s32 coldfire_i2c_access(struct i2c_adapter *adap, u16 address,
+                              unsigned short flags, char read_write,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#798: FILE: drivers/i2c/busses/i2c-mcf.h:43:
+                              unsigned short flags, char read_write,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#799: FILE: drivers/i2c/busses/i2c-mcf.h:44:
+                              u8 command, int size, union i2c_smbus_data *data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#799: FILE: drivers/i2c/busses/i2c-mcf.h:44:
+                              u8 command, int size, union i2c_smbus_data *data);$

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#801: FILE: drivers/i2c/busses/i2c-mcf.h:46:
+static int coldfire_i2c_start(const char read_write, const u16 target_address, const enum I2C_START_TYPE i2c_start);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#803: FILE: drivers/i2c/busses/i2c-mcf.h:48:
+static int coldfire_i2c_master(struct i2c_adapter *adap,struct i2c_msg *msgs, int num);
                                                        ^

CHECK:CAMELCASE: Avoid CamelCase: <dumpReg>
#804: FILE: drivers/i2c/busses/i2c-mcf.h:49:
+void dumpReg(char *, u16 addr, u8 data);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#804: FILE: drivers/i2c/busses/i2c-mcf.h:49:
+void dumpReg(char *, u16 addr, u8 data);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000000990.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 23 errors, 57 warnings, 19 checks, 720 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000000990.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
