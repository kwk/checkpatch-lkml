WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
Emulates the cmpxchg_local by disabling interrupts around variable modification.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#52: FILE: include/asm-generic/cmpxchg.h:1:
+#ifndef __ASM_GENERIC_CMPXCHG_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:SPACING: space required after that ',' (ctx:VxV)
#69: FILE: include/asm-generic/cmpxchg.h:18:
+#define cmpxchg(ptr,o,n)	cmpxchg_local((ptr), (o), (n))
                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#69: FILE: include/asm-generic/cmpxchg.h:18:
+#define cmpxchg(ptr,o,n)	cmpxchg_local((ptr), (o), (n))
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#70: FILE: include/asm-generic/cmpxchg.h:19:
+#define cmpxchg64(ptr,o,n)	cmpxchg64_local((ptr), (o), (n))
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#70: FILE: include/asm-generic/cmpxchg.h:19:
+#define cmpxchg64(ptr,o,n)	cmpxchg64_local((ptr), (o), (n))
                        ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#78: FILE: include/asm-generic/cmpxchg-local.h:1:
+#ifndef __ASM_GENERIC_CMPXCHG_LOCAL_H

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#83: FILE: include/asm-generic/cmpxchg-local.h:6:
+extern unsigned long wrong_size_cmpxchg(volatile void *ptr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#83: FILE: include/asm-generic/cmpxchg-local.h:6:
+extern unsigned long wrong_size_cmpxchg(volatile void *ptr);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#89: FILE: include/asm-generic/cmpxchg-local.h:12:
+static inline unsigned long __cmpxchg_local_generic(volatile void *ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#90: FILE: include/asm-generic/cmpxchg-local.h:13:
+static inline unsigned long __cmpxchg_local_generic(volatile void *ptr,
+				    unsigned long old,

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#103: FILE: include/asm-generic/cmpxchg-local.h:26:
+	case 1: if ((prev = *(u8*)ptr) == old)
+			*(u8*)ptr = (u8)new;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#103: FILE: include/asm-generic/cmpxchg-local.h:26:
+	case 1: if ((prev = *(u8*)ptr) == old)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#103: FILE: include/asm-generic/cmpxchg-local.h:26:
+	case 1: if ((prev = *(u8*)ptr) == old)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#103: FILE: include/asm-generic/cmpxchg-local.h:26:
+	case 1: if ((prev = *(u8*)ptr) == old)

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#104: FILE: include/asm-generic/cmpxchg-local.h:27:
+			*(u8*)ptr = (u8)new;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#106: FILE: include/asm-generic/cmpxchg-local.h:29:
+	case 2: if ((prev = *(u16*)ptr) == old)
+			*(u16*)ptr = (u16)new;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#106: FILE: include/asm-generic/cmpxchg-local.h:29:
+	case 2: if ((prev = *(u16*)ptr) == old)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#106: FILE: include/asm-generic/cmpxchg-local.h:29:
+	case 2: if ((prev = *(u16*)ptr) == old)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#106: FILE: include/asm-generic/cmpxchg-local.h:29:
+	case 2: if ((prev = *(u16*)ptr) == old)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#107: FILE: include/asm-generic/cmpxchg-local.h:30:
+			*(u16*)ptr = (u16)new;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#109: FILE: include/asm-generic/cmpxchg-local.h:32:
+	case 4: if ((prev = *(u32*)ptr) == old)
+			*(u32*)ptr = (u32)new;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#109: FILE: include/asm-generic/cmpxchg-local.h:32:
+	case 4: if ((prev = *(u32*)ptr) == old)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#109: FILE: include/asm-generic/cmpxchg-local.h:32:
+	case 4: if ((prev = *(u32*)ptr) == old)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#109: FILE: include/asm-generic/cmpxchg-local.h:32:
+	case 4: if ((prev = *(u32*)ptr) == old)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#110: FILE: include/asm-generic/cmpxchg-local.h:33:
+			*(u32*)ptr = (u32)new;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#112: FILE: include/asm-generic/cmpxchg-local.h:35:
+	case 8: if ((prev = *(u64*)ptr) == old)
+			*(u64*)ptr = (u64)new;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#112: FILE: include/asm-generic/cmpxchg-local.h:35:
+	case 8: if ((prev = *(u64*)ptr) == old)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#112: FILE: include/asm-generic/cmpxchg-local.h:35:
+	case 8: if ((prev = *(u64*)ptr) == old)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#112: FILE: include/asm-generic/cmpxchg-local.h:35:
+	case 8: if ((prev = *(u64*)ptr) == old)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#113: FILE: include/asm-generic/cmpxchg-local.h:36:
+			*(u64*)ptr = (u64)new;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#125: FILE: include/asm-generic/cmpxchg-local.h:48:
+static inline u64 __cmpxchg64_local_generic(volatile void *ptr, u64 old, u64 new)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#131: FILE: include/asm-generic/cmpxchg-local.h:54:
+	if ((prev = *(u64*)ptr) == old)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#131: FILE: include/asm-generic/cmpxchg-local.h:54:
+	if ((prev = *(u64*)ptr) == old)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#132: FILE: include/asm-generic/cmpxchg-local.h:55:
+		*(u64*)ptr = new;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000389009.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 23 errors, 10 warnings, 2 checks, 81 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000389009.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
