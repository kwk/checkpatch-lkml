WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
    allowing AND'ing with any cpumask_t variable, not just the cpu_online_map.

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cpu' - possible side-effects?
#66: FILE: include/linux/cpumask.h:408:
+#define for_each_cpu_mask(cpu, mask)		\
 	for ((cpu) = 0; (cpu) < 1; (cpu)++, (void)mask)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cpu' - possible side-effects?
#87: FILE: include/linux/cpumask.h:429:
+#define for_each_online_cpu_mask(cpu, mask)				   \
+	for ((cpu) = -1;						   \
+		(cpu) = __next_cpu_and((cpu), &(mask), &(cpu_online_map)), \
+		(cpu) < NR_CPUS; )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#90: FILE: include/linux/cpumask.h:432:
+		(cpu) < NR_CPUS; )

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#90: FILE: include/linux/cpumask.h:432:
+		(cpu) < NR_CPUS; )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cpu' - possible side-effects?
#117: FILE: include/linux/cpumask.h:457:
+#define for_each_online_cpu_mask_nr(cpu, mask)				  \
+	for ((cpu) = -1;						  \
+		(cpu) = next_cpu_and_nr((cpu), (mask), (cpu_online_map)), \
+		(cpu) < nr_cpu_ids; )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#120: FILE: include/linux/cpumask.h:460:
+		(cpu) < nr_cpu_ids; )

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#135: FILE: lib/cpumask.c:21:
+	for (cpu = n + 1; cpu < NR_CPUS; cpu++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#136: FILE: lib/cpumask.c:22:
+		cpu = find_next_bit(srcp->bits, NR_CPUS, cpu);

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#138: FILE: lib/cpumask.c:24:
+		if (cpu < NR_CPUS && cpu_isset(cpu, *andp))

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#141: FILE: lib/cpumask.c:27:
+	return NR_CPUS;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000230718.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 6 warnings, 3 checks, 101 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000230718.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
