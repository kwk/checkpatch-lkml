WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#46: FILE: fs/tomoyo_domain.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#47: FILE: fs/tomoyo_domain.c:2:
+ * fs/tomoyo_domain.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:LINE_SPACING: Missing a blank line after declarations
#147: FILE: fs/tomoyo_domain.c:102:
+	const char *cp0 = domain->domainname->name, *cp1 = strrchr(cp0, ' ');
+	if (cp1)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#203: FILE: fs/tomoyo_domain.c:158:
+	u8 mode;
+	if (ccs_can_save_audit_log(true) < 0)

WARNING:LINE_SPACING: Missing a blank line after declarations
#234: FILE: fs/tomoyo_domain.c:189:
+	int len2;
+	if (ccs_can_save_audit_log(false) < 0)

WARNING:LINE_SPACING: Missing a blank line after declarations
#277: FILE: fs/tomoyo_domain.c:232:
+	bool is_last_name = false;
+	if (!ccs_is_correct_path(program, 1, -1, -1, __func__))

WARNING:LINE_SPACING: Missing a blank line after declarations
#331: FILE: fs/tomoyo_domain.c:286:
+	struct list1_head *pos;
+	list1_for_each_cookie(pos, head->read_var2, &domain_initializer_list) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#336: FILE: fs/tomoyo_domain.c:291:
+		struct domain_initializer_entry *ptr;
+		ptr = list1_entry(pos, struct domain_initializer_entry, list);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#344: FILE: fs/tomoyo_domain.c:299:
+		if (!ccs_io_printf(head,
[...]
+				goto out;

WARNING:LINE_SPACING: Missing a blank line after declarations
#367: FILE: fs/tomoyo_domain.c:322:
+	char *cp = strstr(data, " from ");
+	if (cp) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#391: FILE: fs/tomoyo_domain.c:346:
+	bool flag = false;
+	list1_for_each_entry(ptr,  &domain_initializer_list, list) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#436: FILE: fs/tomoyo_domain.c:391:
+	bool is_last_name = false;
+	if (!ccs_is_domain_def(domainname) &&

WARNING:LINE_SPACING: Missing a blank line after declarations
#492: FILE: fs/tomoyo_domain.c:447:
+	char *cp = strstr(data, " from ");
+	if (cp) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#510: FILE: fs/tomoyo_domain.c:465:
+	struct list1_head *pos;
+	list1_for_each_cookie(pos, head->read_var2, &domain_keeper_list) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#515: FILE: fs/tomoyo_domain.c:470:
+		const char *program = "";
+		ptr = list1_entry(pos, struct domain_keeper_entry, list);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#523: FILE: fs/tomoyo_domain.c:478:
+		if (!ccs_io_printf(head,
[...]
+				goto out;

WARNING:TYPO_SPELLING: 'supresses' may be misspelled - perhaps 'suppresses'?
#540: FILE: fs/tomoyo_domain.c:495:
+ * Returns true if executing @program supresses domain transition,
                                       ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#549: FILE: fs/tomoyo_domain.c:504:
+	bool flag = false;
+	list1_for_each_entry(ptr, &domain_keeper_list, list) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#590: FILE: fs/tomoyo_domain.c:545:
+	int error = -ENOMEM;
+	if (!ccs_is_correct_path(original_name, 1, -1, -1, __func__) ||

WARNING:LINE_SPACING: Missing a blank line after declarations
#633: FILE: fs/tomoyo_domain.c:588:
+	struct list1_head *pos;
+	list1_for_each_cookie(pos, head->read_var2, &alias_list) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#635: FILE: fs/tomoyo_domain.c:590:
+		struct alias_entry *ptr;
+		ptr = list1_entry(pos, struct alias_entry, list);

WARNING:LINE_SPACING: Missing a blank line after declarations
#659: FILE: fs/tomoyo_domain.c:614:
+	char *cp = strchr(data, ' ');
+	if (!cp)

WARNING:LINE_SPACING: Missing a blank line after declarations
#687: FILE: fs/tomoyo_domain.c:642:
+	int error = -ENOMEM;
+	if (!ccs_is_correct_path(original_name, 1, 0, -1, __func__) ||

WARNING:LINE_SPACING: Missing a blank line after declarations
#730: FILE: fs/tomoyo_domain.c:685:
+	struct list1_head *pos;
+	list1_for_each_cookie(pos, head->read_var2, &aggregator_list) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#732: FILE: fs/tomoyo_domain.c:687:
+		struct aggregator_entry *ptr;
+		ptr = list1_entry(pos, struct aggregator_entry, list);

WARNING:LINE_SPACING: Missing a blank line after declarations
#756: FILE: fs/tomoyo_domain.c:711:
+	char *cp = strchr(data, ' ');
+	if (!cp)

WARNING:LINE_SPACING: Missing a blank line after declarations
#777: FILE: fs/tomoyo_domain.c:732:
+	struct path_info name;
+	name.name = domainname;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#781: FILE: fs/tomoyo_domain.c:736:
+	printk(KERN_DEBUG "ccs_delete_domain %s\n", domainname);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ccs_delete_domain', this function's name, in a string
#781: FILE: fs/tomoyo_domain.c:736:
+	printk(KERN_DEBUG "ccs_delete_domain %s\n", domainname);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#785: FILE: fs/tomoyo_domain.c:740:
+		printk(KERN_DEBUG "List: %p %u\n", domain, domain->is_deleted);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#804: FILE: fs/tomoyo_domain.c:759:
+				printk(KERN_DEBUG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#813: FILE: fs/tomoyo_domain.c:768:
+		printk(KERN_DEBUG "Marked %p as undeletable\n", domain);

WARNING:LINE_SPACING: Missing a blank line after declarations
#833: FILE: fs/tomoyo_domain.c:788:
+	struct path_info name;
+	name.name = domainname;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#837: FILE: fs/tomoyo_domain.c:792:
+	printk(KERN_DEBUG "ccs_undelete_domain %s\n", domainname);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ccs_undelete_domain', this function's name, in a string
#837: FILE: fs/tomoyo_domain.c:792:
+	printk(KERN_DEBUG "ccs_undelete_domain %s\n", domainname);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#841: FILE: fs/tomoyo_domain.c:796:
+		printk(KERN_DEBUG "List: %p %u\n", domain, domain->is_deleted);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#851: FILE: fs/tomoyo_domain.c:806:
+			printk(KERN_DEBUG "%p is active. I can't undelete.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#863: FILE: fs/tomoyo_domain.c:818:
+		printk(KERN_DEBUG "%p was undeleted.\n", candidate_domain);

WARNING:LINE_SPACING: Missing a blank line after declarations
#883: FILE: fs/tomoyo_domain.c:838:
+	const struct path_info *saved_domainname;
+	mutex_lock(&new_domain_assign_lock);

WARNING:LINE_SPACING: Missing a blank line after declarations
#897: FILE: fs/tomoyo_domain.c:852:
+		bool flag;
+		if (!domain->is_deleted ||

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#914: FILE: fs/tomoyo_domain.c:869:
+		printk(KERN_DEBUG "Reusing %p %s\n", domain,

WARNING:LINE_SPACING: Missing a blank line after declarations
#960: FILE: fs/tomoyo_domain.c:915:
+	bool done = false;
+	if (!bprm->argc)

WARNING:LINE_SPACING: Missing a blank line after declarations
#984: FILE: fs/tomoyo_domain.c:939:
+			const unsigned char c = kaddr[offset++];
+			if (c && arg_len < CCS_MAX_PATHNAME_LEN - 10) {

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#996: FILE: fs/tomoyo_domain.c:951:
+					arg_ptr[arg_len++]
+						= ((c >> 3) & 7) + '0';

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:LINE_SPACING: Missing a blank line after declarations
#1059: FILE: fs/tomoyo_domain.c:1014:
+		static bool first = true;
+		if (first) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1089: FILE: fs/tomoyo_domain.c:1044:
+			static u8 counter = 20;
+			if (counter) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1091: FILE: fs/tomoyo_domain.c:1046:
+				printk(KERN_WARNING "Failed to verify: %s\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#1120: FILE: fs/tomoyo_domain.c:1075:
+		const char *base_filename;
+		retval = -ENOMEM;

WARNING:STRING_FRAGMENTS: Consecutive strings are generally better as a single string
#1161: FILE: fs/tomoyo_domain.c:1116:
+			 ROOT_NAME " " "%s", real_program_name);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#1182: FILE: fs/tomoyo_domain.c:1137:
+	if (is_enforce && ccs_check_supervisor("#Need to create domain\n%s\n",
[...]
+			goto done;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1192: FILE: fs/tomoyo_domain.c:1147:
+		printk(KERN_WARNING "TOMOYO-ERROR: Domain '%s' not defined.\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#1227: FILE: fs/tomoyo_domain.c:1182:
+	int error = -ENOMEM;
+	if (!mode || !envp_count)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1257: FILE: fs/tomoyo_domain.c:1212:
+			const unsigned char c = kaddr[offset++];
+			if (c && arg_len < CCS_MAX_PATHNAME_LEN - 10) {

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1269: FILE: fs/tomoyo_domain.c:1224:
+					arg_ptr[arg_len++]
+						= ((c >> 3) & 7) + '0';

WARNING:LINE_SPACING: Missing a blank line after declarations
#1315: FILE: fs/tomoyo_domain.c:1270:
+	unsigned char e;
+	while ((c = *src++) != '\0') {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1446: FILE: fs/tomoyo_domain.c:1401:
+	struct file *filp;
 	             ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1469: FILE: fs/tomoyo_domain.c:1424:
+		char *cp = execute_handler;
+		if (!*cp || *cp != '/')

WARNING:LINE_SPACING: Missing a blank line after declarations
#1515: FILE: fs/tomoyo_domain.c:1470:
+		const u32 tomoyo_flags = task->tomoyo_flags;
+		snprintf(buffer, sizeof(struct ccs_page_buffer) - 1,

WARNING:SPLIT_STRING: quoted string split across lines
#1517: FILE: fs/tomoyo_domain.c:1472:
+			 "pid=%d uid=%d gid=%d euid=%d egid=%d suid=%d "
+			 "sgid=%d fsuid=%d fsgid=%d state[0]=%u "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#1518: FILE: fs/tomoyo_domain.c:1473:
+			 "sgid=%d fsuid=%d fsgid=%d state[0]=%u "
+			 "state[1]=%u state[2]=%u",

CHECK:SPACING: No space is necessary after a cast
#1521: FILE: fs/tomoyo_domain.c:1476:
+			 task->fsgid, (u8) (tomoyo_flags >> 24),

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#1522: FILE: fs/tomoyo_domain.c:1477:
+			 (u8) (tomoyo_flags >> 16), (u8) (tomoyo_flags >> 8));

CHECK:SPACING: No space is necessary after a cast
#1531: FILE: fs/tomoyo_domain.c:1486:
+		char *exe = (char *) ccs_get_exe();

WARNING:LINE_SPACING: Missing a blank line after declarations
#1532: FILE: fs/tomoyo_domain.c:1487:
+		char *exe = (char *) ccs_get_exe();
+		if (exe) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1564: FILE: fs/tomoyo_domain.c:1519:
+	filp = open_exec(execute_handler);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1565: FILE: fs/tomoyo_domain.c:1520:
+	if (IS_ERR(filp)) {
 	           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1566: FILE: fs/tomoyo_domain.c:1521:
+		retval = PTR_ERR(filp);
 		                 ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1569: FILE: fs/tomoyo_domain.c:1524:
+	bprm->file = filp;
 	             ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1602: FILE: fs/tomoyo_domain.c:1557:
+		struct execute_handler_record *acl;
+		if (ptr->type != type)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1633: FILE: fs/tomoyo_domain.c:1588:
+	struct ccs_page_buffer *buf = ccs_alloc(sizeof(struct ccs_page_buffer));
+	ccs_load_policy(bprm->filename);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000299125.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 65 warnings, 5 checks, 1652 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000299125.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
