WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#56: FILE: arch/x86/ia32/ia32entry.S:128:
+	testl  $(_TIF_SYSCALL_TRACE|_TIF_SYSCALL_AUDIT|_TIF_KERNEL_TRACE|_TIF_SECCOMP),threadinfo_flags(%r10)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#65: FILE: arch/x86/ia32/ia32entry.S:233:
+	testl $(_TIF_SYSCALL_TRACE|_TIF_SYSCALL_AUDIT|_TIF_KERNEL_TRACE|_TIF_SECCOMP),threadinfo_flags(%r10)

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#74: FILE: arch/x86/ia32/ia32entry.S:325:
+	testl $(_TIF_SYSCALL_TRACE|_TIF_SYSCALL_AUDIT|_TIF_KERNEL_TRACE|_TIF_SECCOMP),threadinfo_flags(%r10)

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#109: FILE: arch/x86/kernel/entry_64.S:232:
+	testl $(_TIF_SYSCALL_TRACE|_TIF_SYSCALL_AUDIT|_TIF_KERNEL_TRACE|_TIF_SECCOMP),threadinfo_flags(%rcx)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#157: FILE: arch/x86/kernel/process_64.c:57:
+asmlinkage long kernel_thread_asm(int (*fn)(void *), void * arg,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#158: FILE: arch/x86/kernel/process_64.c:58:
+asmlinkage long kernel_thread_asm(int (*fn)(void *), void * arg,
+	 unsigned long flags);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#168: FILE: arch/x86/kernel/process_64.c:910:
+asmlinkage long kernel_thread(int (*fn)(void *), void * arg,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#169: FILE: arch/x86/kernel/process_64.c:911:
+asmlinkage long kernel_thread(int (*fn)(void *), void * arg,
+	 unsigned long flags)

WARNING:LINE_SPACING: Missing a blank line after declarations
#172: FILE: arch/x86/kernel/process_64.c:914:
+	long pid = kernel_thread_asm(fn, arg, flags);
+	trace_mark(kernel_arch_kthread_create, "pid %ld fn %p", pid, fn);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#184: FILE: arch/x86/kernel/ptrace_64.c:591:
+	trace_mark(kernel_arch_syscall_entry, "syscall_id %d ip #p%ld",
+		(int)regs->orig_rax, instruction_pointer(regs));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#207: FILE: arch/x86/kernel/traps_64.c:577:
+	trace_mark(kernel_arch_trap_entry, "trap_id %d ip #p%ld", trapnr,
+		instruction_pointer(regs));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#236: FILE: arch/x86/kernel/traps_64.c:709:
+		trace_mark(kernel_arch_trap_entry, "trap_id %d ip #p%ld", 13,
+			instruction_pointer(regs));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#247: FILE: arch/x86/kernel/traps_64.c:792:
+	trace_mark(kernel_arch_trap_entry, "trap_id %d ip #p%ld",
+		2, instruction_pointer(regs));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#291: FILE: arch/x86/kernel/traps_64.c:920:
+	trace_mark(kernel_arch_trap_entry, "trap_id %d ip #p%ld",
+		1, instruction_pointer(regs));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#302: FILE: arch/x86/kernel/traps_64.c:1081:
+	trace_mark(kernel_arch_trap_entry, "trap_id %d ip #p%ld",
+		16, instruction_pointer(regs));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#317: FILE: arch/x86/mm/fault_64.c:445:
+	trace_mark(kernel_arch_trap_entry, "trap_id %d ip #p%ld",
+		14, instruction_pointer(regs));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#328: FILE: arch/x86/mm/fault_64.c:479:
+		trace_mark(kernel_arch_trap_entry, "trap_id %d ip #p%ld",
+		    14, instruction_pointer(regs));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#363: FILE: arch/x86/kernel/apic_64.c:1090:
+	trace_mark(kernel_irq_entry, "irq_id %u kernel_mode %u",
+		LOCAL_TIMER_VECTOR, (regs)?(!user_mode(regs)):(1));

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#363: FILE: arch/x86/kernel/apic_64.c:1090:
+		LOCAL_TIMER_VECTOR, (regs)?(!user_mode(regs)):(1));
 		                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#363: FILE: arch/x86/kernel/apic_64.c:1090:
+		LOCAL_TIMER_VECTOR, (regs)?(!user_mode(regs)):(1));
 		                                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#378: FILE: arch/x86/kernel/apic_64.c:1157:
+	trace_mark(kernel_irq_entry, "irq_id %u kernel_mode %u",
+		SPURIOUS_APIC_VECTOR, -1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#399: FILE: arch/x86/kernel/apic_64.c:1187:
+	trace_mark(kernel_irq_entry, "irq_id %u kernel_mode %u",
+		ERROR_APIC_VECTOR, -1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#423: FILE: arch/x86/kernel/cpu/mcheck/mce_intel_64.c:26:
+	trace_mark(kernel_irq_entry, "irq_id %u kernel_mode %u",
+		THERMAL_APIC_VECTOR, -1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#445: FILE: arch/x86/kernel/smp_64.c:155:
+	trace_mark(kernel_irq_entry, "irq_id %u kernel_mode %u",
+		sender, (regs)?(!user_mode(regs)):(1));

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#445: FILE: arch/x86/kernel/smp_64.c:155:
+		sender, (regs)?(!user_mode(regs)):(1));
 		              ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#445: FILE: arch/x86/kernel/smp_64.c:155:
+		sender, (regs)?(!user_mode(regs)):(1));
 		                                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#465: FILE: arch/x86/kernel/smp_64.c:511:
+	trace_mark(kernel_irq_entry, "irq_id %u kernel_mode %u",
+		RESCHEDULE_VECTOR, -1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#479: FILE: arch/x86/kernel/smp_64.c:538:
+	trace_mark(kernel_irq_entry, "irq_id %u kernel_mode %u",
+		CALL_FUNCTION_VECTOR, -1);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000350377.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 6 warnings, 21 checks, 361 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000350377.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
