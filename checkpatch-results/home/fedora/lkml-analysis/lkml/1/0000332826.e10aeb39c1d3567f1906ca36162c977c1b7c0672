WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
As part of this I had to fix a not-quite-right alignment in the vmlinux.lds.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#116: FILE: arch/x86/kernel/test_nx.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#129: FILE: arch/x86/kernel/test_nx.c:14:
+#include <asm/uaccess.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#131: FILE: arch/x86/kernel/test_nx.c:16:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#144: FILE: arch/x86/kernel/test_nx.c:29:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#146: FILE: arch/x86/kernel/test_nx.c:31:
+
+

WARNING:TYPO_SPELLING: 'exeption' may be misspelled - perhaps 'exception'?
#147: FILE: arch/x86/kernel/test_nx.c:32:
+/* exeption table sorting blatantly stolen from lib/extable.c */
    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: arch/x86/kernel/test_nx.c:70:
+	sort(extable, mod->num_exentries, sizeof(struct exception_table_entry),
+		cmp_ex, NULL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#188: FILE: arch/x86/kernel/test_nx.c:73:
+
+

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#194: FILE: arch/x86/kernel/test_nx.c:79:
+void foo_label2(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#204: FILE: arch/x86/kernel/test_nx.c:89:
+	printk(KERN_INFO "Testing NX protection\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#218: FILE: arch/x86/kernel/test_nx.c:103:
+	asm volatile(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#238: FILE: arch/x86/kernel/test_nx.c:123:
+		printk(KERN_ERR "test_nx: stack was executable\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#259: FILE: arch/x86/kernel/test_nx.c:144:
+	asm volatile(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#279: FILE: arch/x86/kernel/test_nx.c:164:
+		printk(KERN_ERR "test_nx: kmalloc data was executable\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#300: FILE: arch/x86/kernel/test_rodata.c:1:
+/*

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#322: FILE: arch/x86/kernel/test_rodata.c:23:
+		printk(KERN_ERR "rodata_test: test 1 fails (start data)\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rodata_test', this function's name, in a string
#322: FILE: arch/x86/kernel/test_rodata.c:23:
+		printk(KERN_ERR "rodata_test: test 1 fails (start data)\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#336: FILE: arch/x86/kernel/test_rodata.c:37:
+	asm volatile(

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rodata_test', this function's name, in a string
#337: FILE: arch/x86/kernel/test_rodata.c:38:
+		"0:	mov %[zero],(%[rodata_test])\n"

CHECK:LINE_SPACING: Please don't use multiple blank lines
#351: FILE: arch/x86/kernel/test_rodata.c:52:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#353: FILE: arch/x86/kernel/test_rodata.c:54:
+		printk(KERN_ERR "rodata_test: test data was not read only\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rodata_test', this function's name, in a string
#353: FILE: arch/x86/kernel/test_rodata.c:54:
+		printk(KERN_ERR "rodata_test: test data was not read only\n");

WARNING:TYPO_SPELLING: 'failes' may be misspelled - perhaps 'fails'?
#360: FILE: arch/x86/kernel/test_rodata.c:61:
+		printk(KERN_ERR "rodata_test: Test 3 failes (end data)\n");
 		                                     ^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#360: FILE: arch/x86/kernel/test_rodata.c:61:
+		printk(KERN_ERR "rodata_test: Test 3 failes (end data)\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rodata_test', this function's name, in a string
#360: FILE: arch/x86/kernel/test_rodata.c:61:
+		printk(KERN_ERR "rodata_test: Test 3 failes (end data)\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#367: FILE: arch/x86/kernel/test_rodata.c:68:
+		printk(KERN_ERR "rodata_test: .rodata is not 4k aligned\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rodata_test', this function's name, in a string
#367: FILE: arch/x86/kernel/test_rodata.c:68:
+		printk(KERN_ERR "rodata_test: .rodata is not 4k aligned\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#371: FILE: arch/x86/kernel/test_rodata.c:72:
+		printk(KERN_ERR "rodata_test: .rodata end is not 4k aligned\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rodata_test', this function's name, in a string
#371: FILE: arch/x86/kernel/test_rodata.c:72:
+		printk(KERN_ERR "rodata_test: .rodata end is not 4k aligned\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000332826.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 20 warnings, 10 checks, 348 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000332826.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
