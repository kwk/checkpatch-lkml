WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#52: FILE: drivers/haptic/Kconfig:23:
+config HAPTIC_ISA1200
+	tristate "ISA1200 haptic support"
+	depends on HAPTIC_CLASS && I2C
+	help
+	  The ISA1200 is a high performance enhanced haptic driver.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#69: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#74: FILE: drivers/haptic/isa1200.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#117: FILE: drivers/haptic/isa1200.c:44:
+static inline struct isa1200_chip *cdev_to_isa1200_chip(

WARNING:LINE_SPACING: Missing a blank line after declarations
#126: FILE: drivers/haptic/isa1200.c:53:
+	int duty = PWM_HAPTIC_PERIOD * haptic->level / 100;
+	return pwm_config(haptic->pwm, duty, PWM_HAPTIC_PERIOD);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#196: FILE: drivers/haptic/isa1200.c:123:
+static void isa1200_chip_set(struct haptic_classdev *haptic_cdev,
+				enum haptic_value value)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'name' may be better as '(name)' to avoid precedence issues
#226: FILE: drivers/haptic/isa1200.c:153:
+#define ATTR_DEF_SHOW(name) \
+static ssize_t isa1200_chip_show_##name(struct device *dev, \
+		struct device_attribute *attr, char *buf) \
+{ \
+	struct haptic_classdev *haptic_cdev = dev_get_drvdata(dev); \
+	struct isa1200_chip *haptic = cdev_to_isa1200_chip(haptic_cdev); \
+ \
+	return sprintf(buf, "%u\n", haptic->name) + 1; \
+}

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: drivers/haptic/isa1200.c:159:
+ \$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'name' may be better as '(name)' to avoid precedence issues
#236: FILE: drivers/haptic/isa1200.c:163:
+#define ATTR_DEF_STORE(name) \
+static ssize_t isa1200_chip_store_##name(struct device *dev, \
+		struct device_attribute *attr, \
+		const char *buf, size_t size) \
+{ \
+	struct haptic_classdev *haptic_cdev = dev_get_drvdata(dev); \
+	struct isa1200_chip *haptic = cdev_to_isa1200_chip(haptic_cdev); \
+	ssize_t ret = -EINVAL; \
+	unsigned long val; \
+ \
+	ret = strict_strtoul(buf, 10, &val); \
+	if (ret == 0) { \
+		ret = size; \
+		haptic->name = val; \
+		schedule_work(&haptic->work); \
+	} \
+ \
+	return ret; \
+}

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: drivers/haptic/isa1200.c:172:
+ \$

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#246: FILE: drivers/haptic/isa1200.c:173:
+	ret = strict_strtoul(buf, 10, &val); \

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: drivers/haptic/isa1200.c:179:
+ \$

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'isa1200_chip_show_enable' to 'enable_show' 'isa1200_chip_store_enable' to 'enable_store'
#258: FILE: drivers/haptic/isa1200.c:185:
+static DEVICE_ATTR(enable, 0644, isa1200_chip_show_enable,

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#262: FILE: drivers/haptic/isa1200.c:189:
+static ssize_t isa1200_chip_store_level(struct device *dev,
+		struct device_attribute *attr,

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#270: FILE: drivers/haptic/isa1200.c:197:
+	ret = strict_strtoul(buf, 10, &val);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'isa1200_chip_show_level' to 'level_show' 'isa1200_chip_store_level' to 'level_store'
#282: FILE: drivers/haptic/isa1200.c:209:
+static DEVICE_ATTR(level, 0644, isa1200_chip_show_level,

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'isa1200_chip_show_level_max' to 'level_max_show'
#286: FILE: drivers/haptic/isa1200.c:213:
+static DEVICE_ATTR(level_max, 0444, isa1200_chip_show_level_max, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#289: FILE: drivers/haptic/isa1200.c:216:
+static ssize_t isa1200_chip_store_oneshot(struct device *dev,
+		struct device_attribute *attr,

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#297: FILE: drivers/haptic/isa1200.c:224:
+	ret = strict_strtoul(buf, 10, &val);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'isa1200_chip_store_oneshot' to 'oneshot_store'
#306: FILE: drivers/haptic/isa1200.c:233:
+}

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#327: FILE: drivers/haptic/isa1200.c:254:
+	udelay(250);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#352: FILE: drivers/haptic/isa1200.c:279:
+static int __devinit isa1200_probe(struct i2c_client *client,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#353: FILE: drivers/haptic/isa1200.c:280:
+static int __devinit isa1200_probe(struct i2c_client *client,
+			const struct i2c_device_id *id)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*chip)...) over kzalloc(sizeof(struct isa1200_chip)...)
#365: FILE: drivers/haptic/isa1200.c:292:
+	chip = kzalloc(sizeof(struct isa1200_chip), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#423: FILE: drivers/haptic/isa1200.c:350:
+	printk(KERN_INFO "isa1200 %s registered\n", pdata->name);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#438: FILE: drivers/haptic/isa1200.c:365:
+static int __devexit isa1200_remove(struct i2c_client *client)

WARNING:LINE_SPACING: Missing a blank line after declarations
#456: FILE: drivers/haptic/isa1200.c:383:
+	struct isa1200_chip *chip = i2c_get_clientdata(client);
+	isa1200_chip_power_off(chip);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#509: FILE: include/linux/i2c/isa1200.h:1:
+/*

CHECK:BIT_MACRO: Prefer using the BIT macro
#524: FILE: include/linux/i2c/isa1200.h:16:
+#define ISA1200_THSWRST		(1 << 7)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#525: FILE: include/linux/i2c/isa1200.h:17:
+#define ISA1200_EXT2DIV		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#541: FILE: include/linux/i2c/isa1200.h:33:
+#define ISA1200_HAPDREN		(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#542: FILE: include/linux/i2c/isa1200.h:34:
+#define ISA1200_OVEREN		(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#543: FILE: include/linux/i2c/isa1200.h:35:
+#define ISA1200_OVERHL		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#544: FILE: include/linux/i2c/isa1200.h:36:
+#define ISA1200_HAPDIGMOD_PWM_IN	(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#546: FILE: include/linux/i2c/isa1200.h:38:
+#define ISA1200_PLLMOD		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#548: FILE: include/linux/i2c/isa1200.h:40:
+#define ISA1200_PWMMOD_DIVIDER_256	(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#552: FILE: include/linux/i2c/isa1200.h:44:
+#define ISA1200_EXTCLKSEL	(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#553: FILE: include/linux/i2c/isa1200.h:45:
+#define ISA1200_BIT6_ON		(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#554: FILE: include/linux/i2c/isa1200.h:46:
+#define ISA1200_MOTTYP_ERM	(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#556: FILE: include/linux/i2c/isa1200.h:48:
+#define ISA1200_PLLEN		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#557: FILE: include/linux/i2c/isa1200.h:49:
+#define ISA1200_SMARTEN		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#558: FILE: include/linux/i2c/isa1200.h:50:
+#define ISA1200_SMARTONT	(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#560: FILE: include/linux/i2c/isa1200.h:52:
+#define ISA1200_SMARTOFFT_32	(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#564: FILE: include/linux/i2c/isa1200.h:56:
+#define ISA1200_HSWRST		(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#565: FILE: include/linux/i2c/isa1200.h:57:
+#define ISA1200_SESTMOD		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#566: FILE: include/linux/i2c/isa1200.h:58:
+#define ISA1200_SEEN		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#567: FILE: include/linux/i2c/isa1200.h:59:
+#define ISA1200_SEEVENT		(1 << 0)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000062946.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 19 warnings, 28 checks, 546 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000062946.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
