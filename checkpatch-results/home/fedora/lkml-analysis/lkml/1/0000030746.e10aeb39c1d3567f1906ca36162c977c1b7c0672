ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: ntfs-3g/include/fuse-lite/fuse.h:74:
+ ^Iunsigned int flag_nullpath_ok : 1;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#94: FILE: ntfs-3g/include/fuse-lite/fuse.h:74:
+ ^Iunsigned int flag_nullpath_ok : 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: ntfs-3g/include/fuse-lite/fuse.h:74:
+ ^Iunsigned int flag_nullpath_ok : 1;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#95: FILE: ntfs-3g/include/fuse-lite/fuse.h:75:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: ntfs-3g/include/fuse-lite/fuse.h:75:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#96: FILE: ntfs-3g/include/fuse-lite/fuse.h:76:
+ ^I/**$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#96: FILE: ntfs-3g/include/fuse-lite/fuse.h:76:
+ ^I/**$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: ntfs-3g/include/fuse-lite/fuse.h:76:
+ ^I/**$

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: ntfs-3g/include/fuse-lite/fuse.h:83:
+ ^I * Reserved flags, don't set$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#103: FILE: ntfs-3g/include/fuse-lite/fuse.h:83:
+ ^I * Reserved flags, don't set$

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: ntfs-3g/include/fuse-lite/fuse.h:84:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#104: FILE: ntfs-3g/include/fuse-lite/fuse.h:84:
+ ^I */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#106: FILE: ntfs-3g/include/fuse-lite/fuse.h:86:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: ntfs-3g/include/fuse-lite/fuse.h:86:
+ $

CHECK:BIT_MACRO: Prefer using the BIT macro
#116: FILE: ntfs-3g/include/fuse-lite/fuse_lowlevel.h:117:
+#define FUSE_SET_ATTR_ATIME_NOW	(1 << 7)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#117: FILE: ntfs-3g/include/fuse-lite/fuse_lowlevel.h:118:
+#define FUSE_SET_ATTR_MTIME_NOW	(1 << 8)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: ntfs-3g/libfuse-lite/fuse.c:78:
+    int utime_omit_ok;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: ntfs-3g/libfuse-lite/fuse.c:1192:
+        if (!err && f->utime_omit_ok &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: ntfs-3g/libfuse-lite/fuse.c:1192:
+        if (!err && f->utime_omit_ok &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#136: FILE: ntfs-3g/libfuse-lite/fuse.c:1192:
+        if (!err && f->utime_omit_ok &&
[...]
+            struct timespec tv[2];

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: ntfs-3g/libfuse-lite/fuse.c:1193:
+            (valid & (FUSE_SET_ATTR_ATIME | FUSE_SET_ATTR_MTIME))) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: ntfs-3g/libfuse-lite/fuse.c:1193:
+            (valid & (FUSE_SET_ATTR_ATIME | FUSE_SET_ATTR_MTIME))) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: ntfs-3g/libfuse-lite/fuse.c:1194:
+            struct timespec tv[2];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: ntfs-3g/libfuse-lite/fuse.c:1194:
+            struct timespec tv[2];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: ntfs-3g/libfuse-lite/fuse.c:1196:
+            tv[0].tv_sec = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: ntfs-3g/libfuse-lite/fuse.c:1196:
+            tv[0].tv_sec = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: ntfs-3g/libfuse-lite/fuse.c:1197:
+            tv[1].tv_sec = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: ntfs-3g/libfuse-lite/fuse.c:1197:
+            tv[1].tv_sec = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: ntfs-3g/libfuse-lite/fuse.c:1198:
+            tv[0].tv_nsec = UTIME_OMIT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: ntfs-3g/libfuse-lite/fuse.c:1198:
+            tv[0].tv_nsec = UTIME_OMIT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: ntfs-3g/libfuse-lite/fuse.c:1199:
+            tv[1].tv_nsec = UTIME_OMIT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: ntfs-3g/libfuse-lite/fuse.c:1199:
+            tv[1].tv_nsec = UTIME_OMIT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: ntfs-3g/libfuse-lite/fuse.c:1201:
+            if (valid & FUSE_SET_ATTR_ATIME_NOW)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: ntfs-3g/libfuse-lite/fuse.c:1201:
+            if (valid & FUSE_SET_ATTR_ATIME_NOW)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: ntfs-3g/libfuse-lite/fuse.c:1202:
+                tv[0].tv_nsec = UTIME_NOW;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: ntfs-3g/libfuse-lite/fuse.c:1202:
+                tv[0].tv_nsec = UTIME_NOW;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: ntfs-3g/libfuse-lite/fuse.c:1203:
+            else if (valid & FUSE_SET_ATTR_ATIME)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: ntfs-3g/libfuse-lite/fuse.c:1203:
+            else if (valid & FUSE_SET_ATTR_ATIME)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: ntfs-3g/libfuse-lite/fuse.c:1204:
+                tv[0] = attr->st_atim;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: ntfs-3g/libfuse-lite/fuse.c:1204:
+                tv[0] = attr->st_atim;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: ntfs-3g/libfuse-lite/fuse.c:1206:
+            if (valid & FUSE_SET_ATTR_MTIME_NOW)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: ntfs-3g/libfuse-lite/fuse.c:1206:
+            if (valid & FUSE_SET_ATTR_MTIME_NOW)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: ntfs-3g/libfuse-lite/fuse.c:1207:
+                tv[1].tv_nsec = UTIME_NOW;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: ntfs-3g/libfuse-lite/fuse.c:1207:
+                tv[1].tv_nsec = UTIME_NOW;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: ntfs-3g/libfuse-lite/fuse.c:1208:
+            else if (valid & FUSE_SET_ATTR_MTIME)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: ntfs-3g/libfuse-lite/fuse.c:1208:
+            else if (valid & FUSE_SET_ATTR_MTIME)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: ntfs-3g/libfuse-lite/fuse.c:1209:
+                tv[1] = attr->st_mtim;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: ntfs-3g/libfuse-lite/fuse.c:1209:
+                tv[1] = attr->st_mtim;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: ntfs-3g/libfuse-lite/fuse.c:1211:
+            err = fuse_fs_utimens(f->fs, path, tv);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: ntfs-3g/libfuse-lite/fuse.c:1211:
+            err = fuse_fs_utimens(f->fs, path, tv);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: ntfs-3g/libfuse-lite/fuse.c:1212:
+        } else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: ntfs-3g/libfuse-lite/fuse.c:1212:
+        } else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#156: FILE: ntfs-3g/libfuse-lite/fuse.c:1212:
+        } else
[...]
         if (!err && (valid & (FUSE_SET_ATTR_ATIME | FUSE_SET_ATTR_MTIME)) ==

CHECK:BRACES: Unbalanced braces around else statement
#156: FILE: ntfs-3g/libfuse-lite/fuse.c:1212:
+        } else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: ntfs-3g/libfuse-lite/fuse.c:2633:
+    f->utime_omit_ok = fs->op.flag_utime_omit_ok;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: ntfs-3g/libfuse-lite/fuse.c:2667:
+    if (f->conf.debug)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: ntfs-3g/libfuse-lite/fuse.c:2668:
+        fprintf(stderr, "utime_omit_ok: %i\n", f->utime_omit_ok);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: ntfs-3g/libfuse-lite/fuse.c:2668:
+        fprintf(stderr, "utime_omit_ok: %i\n", f->utime_omit_ok);$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#199: FILE: ntfs-3g/src/ntfs-3g.c:2189:
+	if (ntfs_fuse_fill_security_context(&security)
+	    && !ntfs_allowed_dir_access(&security,path,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#199: FILE: ntfs-3g/src/ntfs-3g.c:2189:
+	    && !ntfs_allowed_dir_access(&security,path,
 	                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#200: FILE: ntfs-3g/src/ntfs-3g.c:2190:
+			(ntfs_inode*)NULL,(ntfs_inode*)NULL,S_IEXEC)) {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#200: FILE: ntfs-3g/src/ntfs-3g.c:2190:
+			(ntfs_inode*)NULL,(ntfs_inode*)NULL,S_IEXEC)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#200: FILE: ntfs-3g/src/ntfs-3g.c:2190:
+			(ntfs_inode*)NULL,(ntfs_inode*)NULL,S_IEXEC)) {
 			                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#200: FILE: ntfs-3g/src/ntfs-3g.c:2190:
+			(ntfs_inode*)NULL,(ntfs_inode*)NULL,S_IEXEC)) {
 			                                   ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tv[0].tv_nsec != UTIME_OMIT'
#209: FILE: ntfs-3g/src/ntfs-3g.c:2199:
+	if ((tv[0].tv_nsec != UTIME_OMIT) || (tv[1].tv_nsec != UTIME_OMIT)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tv[1].tv_nsec != UTIME_OMIT'
#209: FILE: ntfs-3g/src/ntfs-3g.c:2199:
+	if ((tv[0].tv_nsec != UTIME_OMIT) || (tv[1].tv_nsec != UTIME_OMIT)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#209: FILE: ntfs-3g/src/ntfs-3g.c:2199:
+	if ((tv[0].tv_nsec != UTIME_OMIT) || (tv[1].tv_nsec != UTIME_OMIT)) {
[...]
+		} else
[...]

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tv[0].tv_nsec == UTIME_NOW'
#211: FILE: ntfs-3g/src/ntfs-3g.c:2201:
+		if (ntfs_allowed_access(&security, ni, S_IWRITE)
+		    || ((tv[0].tv_nsec == UTIME_NOW)
+			&& (tv[0].tv_nsec == UTIME_NOW)
+			&& ntfs_allowed_as_owner(&security, ni))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tv[0].tv_nsec == UTIME_NOW'
#211: FILE: ntfs-3g/src/ntfs-3g.c:2201:
+		if (ntfs_allowed_access(&security, ni, S_IWRITE)
+		    || ((tv[0].tv_nsec == UTIME_NOW)
+			&& (tv[0].tv_nsec == UTIME_NOW)
+			&& ntfs_allowed_as_owner(&security, ni))) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#212: FILE: ntfs-3g/src/ntfs-3g.c:2202:
+		if (ntfs_allowed_access(&security, ni, S_IWRITE)
+		    || ((tv[0].tv_nsec == UTIME_NOW)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#213: FILE: ntfs-3g/src/ntfs-3g.c:2203:
+		    || ((tv[0].tv_nsec == UTIME_NOW)
+			&& (tv[0].tv_nsec == UTIME_NOW)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#214: FILE: ntfs-3g/src/ntfs-3g.c:2204:
+			&& (tv[0].tv_nsec == UTIME_NOW)
+			&& ntfs_allowed_as_owner(&security, ni))) {

CHECK:BRACES: Unbalanced braces around else statement
#230: FILE: ntfs-3g/src/ntfs-3g.c:2220:
+		} else

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000030746.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 29 errors, 31 warnings, 13 checks, 181 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000030746.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
