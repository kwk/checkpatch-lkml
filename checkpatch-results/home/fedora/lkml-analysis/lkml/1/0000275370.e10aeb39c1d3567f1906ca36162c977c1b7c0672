WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
* acpi_get_pm_msrs_delta() will give delta values after reading the current values

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#61: FILE: arch/x86/kernel/cpu/cpufreq/acpi-cpufreq.c:66:
+extern void acpi_get_pm_msrs_delta(u64 *aperf_delta, u64 *mperf_delta,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: arch/x86/kernel/cpu/cpufreq/acpi-cpufreq.c:297:
+^Iacpi_get_pm_msrs_delta(&aperf_cur.whole, &mperf_cur.whole, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#92: FILE: arch/x86/kernel/cpu/cpufreq/acpi-cpufreq.c:298:
+	acpi_get_pm_msrs_delta(&aperf_cur.whole, &mperf_cur.whole, 
+				aperf_old, mperf_old, 1);

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#109: FILE: arch/x86/kernel/time_32.c:40:
+#include <asm/processor.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#127: FILE: arch/x86/kernel/time_32.c:151:
+void acpi_get_pm_msrs_delta(u64 *aperf_delta, u64 *mperf_delta, u64 *aperf_old,
+				u64 *mperf_old, int reset)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#151: FILE: arch/x86/kernel/time_32.c:175:
+	if (unlikely((mperf_cur.whole <= *mperf_old) ||
+			(aperf_cur.whole <= *aperf_old)))
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mperf_cur.whole <= *mperf_old'
#151: FILE: arch/x86/kernel/time_32.c:175:
+	if (unlikely((mperf_cur.whole <= *mperf_old) ||
+			(aperf_cur.whole <= *aperf_old)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'aperf_cur.whole <= *aperf_old'
#151: FILE: arch/x86/kernel/time_32.c:175:
+	if (unlikely((mperf_cur.whole <= *mperf_old) ||
+			(aperf_cur.whole <= *aperf_old)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: arch/x86/kernel/time_32.c:176:
+	if (unlikely((mperf_cur.whole <= *mperf_old) ||
+			(aperf_cur.whole <= *aperf_old)))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#170: FILE: arch/x86/kernel/time_32.c:194:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#177: FILE: arch/x86/kernel/time_32.c:201:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#190: FILE: arch/x86/kernel/time_32.c:214:
+		unsigned int ecx;
+		ecx = cpuid_ecx(6);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#197: FILE: arch/x86/kernel/time_32.c:221:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#210: FILE: arch/x86/kernel/time_32.c:234:
+	if(!cpu_supports_freq_scaling) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#212: FILE: arch/x86/kernel/time_32.c:236:
+		if(cpu_supports_freq_scaling < 0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: arch/x86/kernel/time_32.c:243:
+	acpi_get_pm_msrs_delta(&aperf_delta, &mperf_delta, aperf_old,
+				mperf_old, 1);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#225: FILE: arch/x86/kernel/time_32.c:249:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#235: FILE: arch/x86/kernel/time_32.c:259:
+	if(!cpu_supports_freq_scaling)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#249: FILE: arch/x86/kernel/time_32.c:273:
+		acpi_get_pm_msrs_delta(&aperf_delta, &mperf_delta, aperf_old,
+					mperf_old, 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#252: FILE: arch/x86/kernel/time_32.c:276:
+		time = cputime_sub(tsk->utime, per_cpu(task_utime_old,
+							smp_processor_id()));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#268: FILE: arch/x86/kernel/time_32.c:292:
+			acpi_get_pm_msrs_delta(&aperf_delta, &mperf_delta,
+						aperf_old, mperf_old, 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#270: FILE: arch/x86/kernel/time_32.c:294:
+		time = cputime_sub(tsk->stime, per_cpu(task_stime_old,
+							smp_processor_id()));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#280: FILE: arch/x86/kernel/time_32.c:304:
+^I^Iper_cpu(task_stime_old, smp_processor_id()) = tsk->stime; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#283: FILE: arch/x86/kernel/time_32.c:307:
+}^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#283: FILE: arch/x86/kernel/time_32.c:307:
+
+}	

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000275370.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 3 warnings, 15 checks, 224 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000275370.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
