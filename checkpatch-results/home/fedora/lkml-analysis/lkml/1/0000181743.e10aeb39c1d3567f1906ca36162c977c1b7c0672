ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#147: FILE: arch/x86/include/asm/percpu.h:27:
+#define PER_CPU(var, reg)						\
+	__percpu_mov_op %__percpu_seg:per_cpu__this_cpu_off, reg;	\
 	lea per_cpu__##var(reg), reg

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'reg' - possible side-effects?
#147: FILE: arch/x86/include/asm/percpu.h:27:
+#define PER_CPU(var, reg)						\
+	__percpu_mov_op %__percpu_seg:per_cpu__this_cpu_off, reg;	\
 	lea per_cpu__##var(reg), reg

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#148: FILE: arch/x86/include/asm/percpu.h:28:
+	__percpu_mov_op %__percpu_seg:per_cpu__this_cpu_off, reg;	\
 	                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#151: FILE: arch/x86/include/asm/percpu.h:30:
+#define PER_CPU_VAR(var)	%__percpu_seg:per_cpu__##var
                         	^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#151: FILE: arch/x86/include/asm/percpu.h:30:
+#define PER_CPU_VAR(var)	%__percpu_seg:per_cpu__##var

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#155: FILE: arch/x86/include/asm/percpu.h:32:
+#define PER_CPU(var, reg)						\
+	__percpu_mov_op $per_cpu__##var, reg

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#188: FILE: arch/x86/include/asm/percpu.h:42:
+#define __percpu_seg_str	"%%"__stringify(__percpu_seg)":"

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#201: FILE: arch/x86/include/asm/percpu.h:66:
+		asm(op "b %1,"__percpu_seg_str"%0"	\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#207: FILE: arch/x86/include/asm/percpu.h:71:
+		asm(op "w %1,"__percpu_seg_str"%0"	\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#213: FILE: arch/x86/include/asm/percpu.h:76:
+		asm(op "l %1,"__percpu_seg_str"%0"	\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#218: FILE: arch/x86/include/asm/percpu.h:81:
+		asm(op "q %1,"__percpu_seg_str"%0"	\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#230: FILE: arch/x86/include/asm/percpu.h:94:
+		asm(op "b "__percpu_seg_str"%1,%0"	\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#236: FILE: arch/x86/include/asm/percpu.h:99:
+		asm(op "w "__percpu_seg_str"%1,%0"	\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#242: FILE: arch/x86/include/asm/percpu.h:104:
+		asm(op "l "__percpu_seg_str"%1,%0"	\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#247: FILE: arch/x86/include/asm/percpu.h:109:
+		asm(op "q "__percpu_seg_str"%1,%0"	\

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#257: FILE: arch/x86/include/asm/percpu.h:125:
+extern void load_pda_offset(int cpu);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#298: FILE: arch/x86/kernel/entry_64.S:1077:
+	subq $EXCEPTION_STKSZ, TSS_ist + (\ist - 1) * 8(%rbp)
 	                                   ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#301: FILE: arch/x86/kernel/entry_64.S:1079:
+	addq $EXCEPTION_STKSZ, TSS_ist + (\ist - 1) * 8(%rbp)
 	                                   ^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000181743.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 2 warnings, 13 checks, 299 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000181743.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
