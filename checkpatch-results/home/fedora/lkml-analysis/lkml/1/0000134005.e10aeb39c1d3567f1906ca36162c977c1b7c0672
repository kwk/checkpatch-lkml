WARNING:NEW_TYPEDEFS: do not add new typedefs
#68: FILE: arch/microblaze/include/asm/mmu.h:26:
+typedef unsigned long mm_context_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#71: FILE: arch/microblaze/include/asm/mmu.h:29:
+typedef struct _PTE {

CHECK:CAMELCASE: Avoid CamelCase: <Hash>
#88: FILE: arch/microblaze/include/asm/mmu.h:46:
+extern PTE *Hash, *Hash_end;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Hash_end>
#88: FILE: arch/microblaze/include/asm/mmu.h:46:
+extern PTE *Hash, *Hash_end;

CHECK:CAMELCASE: Avoid CamelCase: <Hash_size>
#89: FILE: arch/microblaze/include/asm/mmu.h:47:
+extern unsigned long Hash_size, Hash_mask;

CHECK:CAMELCASE: Avoid CamelCase: <Hash_mask>
#89: FILE: arch/microblaze/include/asm/mmu.h:47:
+extern unsigned long Hash_size, Hash_mask;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#98: FILE: arch/microblaze/include/asm/mmu.h:56:
+typedef struct _SEGREG {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#107: FILE: arch/microblaze/include/asm/mmu.h:65:
+extern void _tlbie(unsigned long va);	/* invalidate a TLB entry */

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#108: FILE: arch/microblaze/include/asm/mmu.h:66:
+extern void _tlbia(void);		/* invalidate all TLB entries */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000134005.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 6 checks, 120 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000134005.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
