WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#35: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#40: FILE: fs/unionfs/debug.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#87: FILE: fs/unionfs/debug.c:48:
+	BUG_ON(!inode);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPLIT_STRING: quoted string split across lines
#130: FILE: fs/unionfs/debug.c:91:
+				pr_debug(" Ci5: inode/linode=%p:%p bindex=%d "
+					 "istart/end=%d:%d\n", inode,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#136: FILE: fs/unionfs/debug.c:97:
+				pr_debug(" Ci6: inode/linode=%p:%p bindex=%d "
+					 "istart/end=%d:%d\n", inode,

WARNING:SPLIT_STRING: quoted string split across lines
#153: FILE: fs/unionfs/debug.c:114:
+		pr_debug(" Ci7: inode/linode=%p:%p "
+			 "bindex=%d istart/end=%d:%d\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#170: FILE: fs/unionfs/debug.c:131:
+	BUG_ON(!dentry);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#178: FILE: fs/unionfs/debug.c:139:
+	BUG_ON(dstart > dend);

WARNING:SPLIT_STRING: quoted string split across lines
#196: FILE: fs/unionfs/debug.c:157:
+				pr_debug(" CD1: dentry/lower=%p:%p(%p) "
+					 "bindex=%d dstart/end=%d:%d\n",

CHECK:SPACING: No space is necessary after a cast
#199: FILE: fs/unionfs/debug.c:160:
+					  (void *) -1L),

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#211: FILE: fs/unionfs/debug.c:172:
+			if (unlikely(!d_deleted((struct dentry *) dentry) &&

WARNING:SPLIT_STRING: quoted string split across lines
#217: FILE: fs/unionfs/debug.c:178:
+				pr_debug(" CD2: dentry/lower=%p:%p(%p) "
+					 "bindex=%d dstart/end=%d:%d\n",

CHECK:SPACING: No space is necessary after a cast
#221: FILE: fs/unionfs/debug.c:182:
+					  (void *) -1L),

WARNING:SPLIT_STRING: quoted string split across lines
#234: FILE: fs/unionfs/debug.c:195:
+				pr_debug(" CM0: dentry/lmnt=%p:%p bindex=%d "
+					 "dstart/end=%d:%d\n", dentry,

WARNING:SPLIT_STRING: quoted string split across lines
#251: FILE: fs/unionfs/debug.c:212:
+				pr_debug(" CM1: dentry/lmnt=%p:%p "
+					 "bindex=%d dstart/end=%d:%d\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#267: FILE: fs/unionfs/debug.c:228:
+	BUG_ON(istart > iend);

WARNING:SPLIT_STRING: quoted string split across lines
#305: FILE: fs/unionfs/debug.c:266:
+				pr_debug(" CI5: dentry/linode=%p:%p bindex=%d "
+					 "istart/end=%d:%d\n", dentry,

WARNING:SPLIT_STRING: quoted string split across lines
#311: FILE: fs/unionfs/debug.c:272:
+				pr_debug(" CI6: dentry/linode=%p:%p bindex=%d "
+					 "istart/end=%d:%d\n", dentry,

WARNING:SPLIT_STRING: quoted string split across lines
#328: FILE: fs/unionfs/debug.c:289:
+		pr_debug(" CI7: dentry/linode=%p:%p "
+			 "bindex=%d istart/end=%d:%d\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#338: FILE: fs/unionfs/debug.c:299:
+		for (bindex = dstart+1; bindex < dend; bindex++) {
 		                    ^

WARNING:SPLIT_STRING: quoted string split across lines
#349: FILE: fs/unionfs/debug.c:310:
+				pr_debug(" Cx: lmnt/ldentry/linode=%p:%p:%p "
+					 "bindex=%d dstart/end=%d:%d\n",

WARNING:SPLIT_STRING: quoted string split across lines
#363: FILE: fs/unionfs/debug.c:324:
+			pr_debug(" CI8: bindex=%d mtime/lmtime=%lu.%lu/%lu.%lu "
+				 "ctime/lctime=%lu.%lu/%lu.%lu\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#388: FILE: fs/unionfs/debug.c:349:
+	BUG_ON(!file);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#393: FILE: fs/unionfs/debug.c:354:
+	BUG_ON(dstart > dend);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#396: FILE: fs/unionfs/debug.c:357:
+	BUG_ON(fstart > fend);

WARNING:SPLIT_STRING: quoted string split across lines
#438: FILE: fs/unionfs/debug.c:399:
+				pr_debug(" CF5: file/lower=%p:%p bindex=%d "
+					 "fstart/end=%d:%d\n", file,

WARNING:SPLIT_STRING: quoted string split across lines
#453: FILE: fs/unionfs/debug.c:414:
+					pr_debug(" CF6: file/lower=%p:%p "
+						 "bindex=%d fstart/end=%d:%d\n",

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#464: FILE: fs/unionfs/debug.c:425:
+void __unionfs_check_nd(const struct nameidata *nd,
                                                 ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#470: FILE: fs/unionfs/debug.c:431:
+	if (unlikely(!nd))
 	              ^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#480: FILE: fs/unionfs/debug.c:441:
+			BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#527: FILE: fs/unionfs/debug.c:488:
+void __show_dinode_times(const struct dentry *dentry,
+			const char *file, const char *fxn, int line)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#552: FILE: fs/unionfs/debug.c:513:
+void __show_inode_counts(const struct inode *inode,
+			const char *file, const char *fxn, int line)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000349153.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 27 warnings, 6 checks, 532 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000349153.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
