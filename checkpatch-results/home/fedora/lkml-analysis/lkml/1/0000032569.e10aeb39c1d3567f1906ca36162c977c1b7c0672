WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
Currently, certain HP ProLiant platforms implement the PCC interface. However,

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#67: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#91: FILE: Documentation/cpu-freq/pcc-cpufreq.txt:20:
+ *  with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#92: FILE: Documentation/cpu-freq/pcc-cpufreq.txt:21:
+ *  675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#323: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#342: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:20:
+ *  with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#343: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:21:
+ *  675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#363: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:41:
+#define PCC_VERSION ^I"1.00.00"$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#364: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:42:
+#define POLL_LOOPS ^I300$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#366: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:44:
+#define CMD_COMPLETE ^I0x1$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#367: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:45:
+#define CMD_GET_FREQ ^I0x0$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#368: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:46:
+#define CMD_SET_FREQ ^I0x1$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#383: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:61:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#396: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:74:
+} __attribute__ ((packed));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#481: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:159:
+	iowrite32(input_buffer,
+			(pcch_virt_addr + pcc_cpu_data->input_offset));

WARNING:SPLIT_STRING: quoted string split across lines
#503: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:181:
+	dprintk("get: SUCCESS: (virtual) output_offset for cpu %d is "
+		"0x%x, contains a value of: 0x%x. Speed is: %d MHz\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#510: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:188:
+		dprintk("get: frequency for cpu %d is being temporarily"
+			" capped at %d\n", cpu, curr_freq);

WARNING:SPLIT_STRING: quoted string split across lines
#537: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:215:
+	dprintk("target: CPU %d should go to target freq: %d "
+		"(virtual) input_offset is 0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#548: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:226:
+	iowrite32(input_buffer,
+			(pcch_virt_addr + pcc_cpu_data->input_offset));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pccp->package.elements[0]
#598: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:276:
+	offset = &(pccp->package.elements[0]);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pccp->package.elements[1]
#606: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:284:
+	offset = &(pccp->package.elements[1]);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcc_get_offset', this function's name, in a string
#617: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:295:
+	dprintk("pcc_get_offset: for CPU %d: pcc_cpu_data "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#618: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:296:
+	dprintk("pcc_get_offset: for CPU %d: pcc_cpu_data "
+		"input_offset: 0x%x, pcc_cpu_data output_offset: 0x%x\n",

WARNING:SPLIT_STRING: quoted string split across lines
#756: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:434:
+	dprintk("probe: mem_resource descriptor: 0x%x,"
+		" length: %d, space_id: %d, resource_usage: %d,"

WARNING:SPLIT_STRING: quoted string split across lines
#757: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:435:
+		" length: %d, space_id: %d, resource_usage: %d,"
+		" type_specific: %d, granularity: 0x%llx,"

WARNING:SPLIT_STRING: quoted string split across lines
#758: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:436:
+		" type_specific: %d, granularity: 0x%llx,"
+		" minimum: 0x%llx, maximum: 0x%llx,"

WARNING:SPLIT_STRING: quoted string split across lines
#759: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:437:
+		" minimum: 0x%llx, maximum: 0x%llx,"
+		" translation_offset: 0x%llx, address_length: 0x%llx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#773: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:451:
+	pcch_virt_addr = ioremap_nocache(mem_resource->minimum,
+					mem_resource->address_length);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pcch_virt_addr"
#774: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:452:
+	if (pcch_virt_addr == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPLIT_STRING: quoted string split across lines
#783: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:461:
+	dprintk("probe: PCCH header is at physical address: 0x%llx,"
+		" signature: 0x%x, length: %d bytes, major: %d, minor: %d,"

WARNING:SPLIT_STRING: quoted string split across lines
#784: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:462:
+		" signature: 0x%x, length: %d bytes, major: %d, minor: %d,"
+		" supported features: 0x%x, command field: 0x%x,"

WARNING:SPLIT_STRING: quoted string split across lines
#785: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:463:
+		" supported features: 0x%x, command field: 0x%x,"
+		" status field: 0x%x, nominal latency: %d us\n",

WARNING:SPLIT_STRING: quoted string split across lines
#793: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:471:
+	dprintk("probe: min time between commands: %d us,"
+		" max time between commands: %d us,"

WARNING:SPLIT_STRING: quoted string split across lines
#794: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:472:
+		" max time between commands: %d us,"
+		" nominal CPU frequency: %d MHz,"

WARNING:SPLIT_STRING: quoted string split across lines
#795: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:473:
+		" nominal CPU frequency: %d MHz,"
+		" minimum CPU frequency: %d MHz,"

WARNING:SPLIT_STRING: quoted string split across lines
#796: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:474:
+		" minimum CPU frequency: %d MHz,"
+		" minimum CPU frequency without throttling: %d MHz\n",

WARNING:SPLIT_STRING: quoted string split across lines
#818: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:496:
+	dprintk("probe: doorbell: space_id is %d, bit_width is %d, "
+		"bit_offset is %d, access_width is %d, address is 0x%llx\n",

WARNING:SPLIT_STRING: quoted string split across lines
#839: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:517:
+	dprintk("probe: doorbell_preserve: 0x%llx,"
+		" doorbell_write: 0x%llx\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#848: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:526:
+	printk(KERN_DEBUG "pcc-cpufreq: (v%s) driver loaded with frequency"

WARNING:SPLIT_STRING: quoted string split across lines
#849: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:527:
+	printk(KERN_DEBUG "pcc-cpufreq: (v%s) driver loaded with frequency"
+	       " limits: %d MHz, %d MHz\n", PCC_VERSION,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#877: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:555:
+	policy->max = policy->cpuinfo.max_freq =

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#879: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:557:
+	policy->min = policy->cpuinfo.min_freq =

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pcc_cpufreq_init', this function's name, in a string
#919: FILE: arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.c:597:
+		dprintk("pcc_cpufreq_init: PCCH evaluation failed\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000032569.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 31 warnings, 8 checks, 864 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000032569.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
