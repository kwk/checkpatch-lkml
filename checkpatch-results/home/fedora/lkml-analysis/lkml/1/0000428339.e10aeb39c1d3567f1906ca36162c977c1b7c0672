CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's64' over 'int64_t'
#51: FILE: include/asm-arm/div64.h:228:
+extern int64_t do_div_signed(int64_t *n, int32_t base);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#51: FILE: include/asm-arm/div64.h:228:
+extern int64_t do_div_signed(int64_t *n, int32_t base);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's64' over 'int64_t'
#62: FILE: include/asm-generic/div64.h:65:
+extern int64_t do_div_signed(int64_t *n, int32_t base);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#62: FILE: include/asm-generic/div64.h:65:
+extern int64_t do_div_signed(int64_t *n, int32_t base);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's64' over 'int64_t'
#72: FILE: include/asm-i386/div64.h:52:
+extern int64_t do_div_signed(int64_t *n, int32_t base);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#72: FILE: include/asm-i386/div64.h:52:
+extern int64_t do_div_signed(int64_t *n, int32_t base);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's64' over 'int64_t'
#82: FILE: include/asm-m68k/div64.h:29:
+extern int64_t do_div_signed(int64_t *n, int32_t base);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#82: FILE: include/asm-m68k/div64.h:29:
+extern int64_t do_div_signed(int64_t *n, int32_t base);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's64' over 'int64_t'
#92: FILE: include/asm-mips/div64.h:114:
+extern int64_t do_div_signed(int64_t *n, int32_t base);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#92: FILE: include/asm-mips/div64.h:114:
+extern int64_t do_div_signed(int64_t *n, int32_t base);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's64' over 'int64_t'
#103: FILE: include/asm-um/div64.h:7:
+extern int64_t do_div_signed(int64_t *n, int32_t base);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#103: FILE: include/asm-um/div64.h:7:
+extern int64_t do_div_signed(int64_t *n, int32_t base);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: kernel/time/ntp.c:305:
+^I^I    if (mtemp >= MINSEC && $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TABSTOP: Statements should start on a tabstop
#114: FILE: kernel/time/ntp.c:305:
+		    if (mtemp >= MINSEC && 

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: kernel/time/ntp.c:306:
+^I^I    ^I^I(time_status & STA_FLL || mtemp > MAXSEC)) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#115: FILE: kernel/time/ntp.c:306:
+^I^I    ^I^I(time_status & STA_FLL || mtemp > MAXSEC)) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#115: FILE: kernel/time/ntp.c:306:
+		    if (mtemp >= MINSEC && 
+		    		(time_status & STA_FLL || mtemp > MAXSEC)) {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's64' over 'int64_t'
#140: FILE: lib/div64.c:84:
+int64_t do_div_signed(int64_t *n, int32_t base)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#142: FILE: lib/div64.c:86:
+	uint64_t num, den;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's64' over 'int64_t'
#143: FILE: lib/div64.c:87:
+	int64_t rem;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#151: FILE: lib/div64.c:95:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#152: FILE: lib/div64.c:96:
+^I/* XXX this is sort of obnoxious,but seems necessary $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#157: FILE: lib/div64.c:101:
+	else
+	den = (uint32_t)base;

ERROR:SPACING: space required before the open parenthesis '('
#163: FILE: lib/div64.c:107:
+	if(num_sign ^ den_sign)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#165: FILE: lib/div64.c:109:
+	if(num_sign)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#171: FILE: lib/div64.c:115:
+EXPORT_SYMBOL(do_div_signed);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000428339.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 4 warnings, 16 checks, 89 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000428339.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
