WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
This should help catch races between the VFS and the branch-management code.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#49: FILE: fs/unionfs/inode.c:252:
+	BUG_ON(!is_valid_dentry(new_dentry));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#50: FILE: fs/unionfs/inode.c:253:
+	BUG_ON(!is_valid_dentry(old_dentry));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#59: FILE: fs/unionfs/inode.c:379:
+	BUG_ON(!is_valid_dentry(dentry));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#68: FILE: fs/unionfs/inode.c:503:
+	BUG_ON(!is_valid_dentry(dentry));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#77: FILE: fs/unionfs/inode.c:632:
+	BUG_ON(!is_valid_dentry(dentry));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#86: FILE: fs/unionfs/inode.c:736:
+	BUG_ON(!is_valid_dentry(dentry));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#95: FILE: fs/unionfs/inode.c:763:
+	BUG_ON(!is_valid_dentry(dentry));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#104: FILE: fs/unionfs/inode.c:924:
+	BUG_ON(!is_valid_dentry(dentry));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#117: FILE: fs/unionfs/rename.c:382:
+	BUG_ON(!is_valid_dentry(old_dentry));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#118: FILE: fs/unionfs/rename.c:383:
+	BUG_ON(!is_valid_dentry(new_dentry));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#131: FILE: fs/unionfs/super.c:132:
+	BUG_ON(!is_valid_dentry(dentry));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#151: FILE: fs/unionfs/union.h:409:
+	BUG_ON(!UNIONFS_D(dentry));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#152: FILE: fs/unionfs/union.h:410:
+	BUG_ON(!UNIONFS_SB(dentry->d_sb));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#168: FILE: fs/unionfs/unlink.c:77:
+	BUG_ON(!is_valid_dentry(dentry));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#177: FILE: fs/unionfs/unlink.c:127:
+	BUG_ON(!is_valid_dentry(dentry));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#190: FILE: fs/unionfs/xattr.c:59:
+	BUG_ON(!is_valid_dentry(dentry));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#199: FILE: fs/unionfs/xattr.c:80:
+	BUG_ON(!is_valid_dentry(dentry));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#208: FILE: fs/unionfs/xattr.c:99:
+	BUG_ON(!is_valid_dentry(dentry));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#217: FILE: fs/unionfs/xattr.c:119:
+	BUG_ON(!is_valid_dentry(dentry));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000447317.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 20 warnings, 0 checks, 141 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000447317.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
