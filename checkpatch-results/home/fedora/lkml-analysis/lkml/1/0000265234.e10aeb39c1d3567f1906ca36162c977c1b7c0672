WARNING:SPLIT_STRING: quoted string split across lines
#52: FILE: drivers/char/rocket.c:439:
 		printk(KERN_WARNING "rp: WARNING %s called with "
+				"info->port.tty==NULL\n", __func__);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#71: FILE: drivers/char/rocket.c:507:
 		printk(KERN_WARNING "rp: WARNING: rp_handle_port called with "
+				"info->port.tty==NULL\n");

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#133: FILE: drivers/char/rocket.c:798:
+		if (I_IXANY(info->port.tty)) {
[...]
 		} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <sSetTxXONChar>
#140: FILE: drivers/char/rocket.c:803:
+		sSetTxXONChar(cp, START_CHAR(info->port.tty));

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <sSetTxXOFFChar>
#141: FILE: drivers/char/rocket.c:804:
+		sSetTxXOFFChar(cp, STOP_CHAR(info->port.tty));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#189: FILE: drivers/char/rocket.c:900:
+^I * this loop, info->port.count is dropped by one, so that rp_close() knows when to free things.  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#189: FILE: drivers/char/rocket.c:900:
+	 * this loop, info->port.count is dropped by one, so that rp_close() knows when to free things.  

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#197: FILE: drivers/char/rocket.c:906:
+	printk(KERN_INFO "block_til_ready before block: ttyR%d, count = %d\n", info->line, info->port.count);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#197: FILE: drivers/char/rocket.c:906:
+	printk(KERN_INFO "block_til_ready before block: ttyR%d, count = %d\n", info->line, info->port.count);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'block_til_ready', this function's name, in a string
#197: FILE: drivers/char/rocket.c:906:
+	printk(KERN_INFO "block_til_ready before block: ttyR%d, count = %d\n", info->line, info->port.count);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#261: FILE: drivers/char/rocket.c:1015:
+	printk(KERN_INFO "rp_open ttyR%d, count=%d\n", info->line, info->port.count);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rp_open', this function's name, in a string
#261: FILE: drivers/char/rocket.c:1015:
+	printk(KERN_INFO "rp_open ttyR%d, count=%d\n", info->line, info->port.count);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#288: FILE: drivers/char/rocket.c:1079:
+ *  Exception handler that closes a serial port. info->port.count is considered critical. $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#297: FILE: drivers/char/rocket.c:1092:
+	printk(KERN_INFO "rp_close ttyR%d, count = %d\n", info->line, info->port.count);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rp_close', this function's name, in a string
#297: FILE: drivers/char/rocket.c:1092:
+	printk(KERN_INFO "rp_close ttyR%d, count = %d\n", info->line, info->port.count);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tty->count == 1'
#305: FILE: drivers/char/rocket.c:1099:
+	if ((tty->count == 1) && (info->port.count != 1)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->port.count != 1'
#305: FILE: drivers/char/rocket.c:1099:
+	if ((tty->count == 1) && (info->port.count != 1)) {

WARNING:SPLIT_STRING: quoted string split across lines
#323: FILE: drivers/char/rocket.c:1113:
 		printk(KERN_WARNING "rp_close: bad serial port count for "
+				"ttyR%d: %d\n", info->line, info->port.count);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#368: FILE: drivers/char/rocket.c:1639:
+^Iif (info->port.count) $

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000265234.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 12 warnings, 4 checks, 352 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000265234.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
