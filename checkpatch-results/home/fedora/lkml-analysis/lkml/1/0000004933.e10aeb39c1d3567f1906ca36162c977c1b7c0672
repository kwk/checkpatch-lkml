WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
> > > I'll test this patch all through this night, and check whether it doesn't trigger

WARNING:TYPO_SPELLING: 'pactch' may be misspelled - perhaps 'patch'?
#92: 
Something more sophisticated can be added but this pactch does
                                                   ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#177: FILE: mm/memcontrol.c:1258:
 }
+/*

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#225: FILE: mm/memcontrol.c:1302:
+	if (locked)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#227: FILE: mm/memcontrol.c:1304:
+	else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: mm/memcontrol.c:1311:
+ ^I * Here, we use global waitq .....more fine grained waitq ?$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#234: FILE: mm/memcontrol.c:1311:
+ ^I * Here, we use global waitq .....more fine grained waitq ?$

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: mm/memcontrol.c:1312:
+ ^I * Assume following hierarchy.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#235: FILE: mm/memcontrol.c:1312:
+ ^I * Assume following hierarchy.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: mm/memcontrol.c:1313:
+ ^I * A/$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#236: FILE: mm/memcontrol.c:1313:
+ ^I * A/$

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: mm/memcontrol.c:1314:
+ ^I *   01$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#237: FILE: mm/memcontrol.c:1314:
+ ^I *   01$

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: mm/memcontrol.c:1315:
+ ^I *   02$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#238: FILE: mm/memcontrol.c:1315:
+ ^I *   02$

ERROR:CODE_INDENT: code indent should use tabs where possible
#239: FILE: mm/memcontrol.c:1316:
+ ^I * assume OOM happens both in A and 01 at the same time. Tthey are$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#239: FILE: mm/memcontrol.c:1316:
+ ^I * assume OOM happens both in A and 01 at the same time. Tthey are$

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: mm/memcontrol.c:1317:
+ ^I * mutually exclusive by lock. (kill in 01 helps A.)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#240: FILE: mm/memcontrol.c:1317:
+ ^I * mutually exclusive by lock. (kill in 01 helps A.)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#241: FILE: mm/memcontrol.c:1318:
+ ^I * When we use per memcg waitq, we have to wake up waiters on A and 02$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#241: FILE: mm/memcontrol.c:1318:
+ ^I * When we use per memcg waitq, we have to wake up waiters on A and 02$

WARNING:TYPO_SPELLING: 'addtion' may be misspelled - perhaps 'addition'?
#242: FILE: mm/memcontrol.c:1319:
+ 	 * in addtion to waiters on 01. We use global waitq for avoiding mess.
  	      ^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#242: FILE: mm/memcontrol.c:1319:
+ ^I * in addtion to waiters on 01. We use global waitq for avoiding mess.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#242: FILE: mm/memcontrol.c:1319:
+ ^I * in addtion to waiters on 01. We use global waitq for avoiding mess.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: mm/memcontrol.c:1320:
+ ^I * It will not be a big problem.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#243: FILE: mm/memcontrol.c:1320:
+ ^I * It will not be a big problem.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: mm/memcontrol.c:1321:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#244: FILE: mm/memcontrol.c:1321:
+ ^I */$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#271: FILE: mm/memcontrol.c:1507:
+	if (unlikely(test_thread_flag(TIF_MEMDIE)
+		     || fatal_signal_pending(current)))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000004933.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 11 errors, 14 warnings, 4 checks, 197 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000004933.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
