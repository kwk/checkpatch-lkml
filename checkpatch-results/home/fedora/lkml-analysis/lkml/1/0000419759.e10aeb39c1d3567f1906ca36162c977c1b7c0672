WARNING:TYPO_SPELLING: 'intialized' may be misspelled - perhaps 'initialized'?
#38: 
all disks have been enumerated and intialized.
                                   ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#56: 
Signed-off-by:  Kristen Carlson Accardi <kristen.c.accardi@intel.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#65: FILE: drivers/ata/libata-scsi.c:2893:
+int ata_scsi_set_link_pm_policy(struct Scsi_Host *shost,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#66: FILE: drivers/ata/libata-scsi.c:2894:
+int ata_scsi_set_link_pm_policy(struct Scsi_Host *shost,
+		enum scsi_host_link_pm policy)

ERROR:CODE_INDENT: code indent should use tabs where possible
#73: FILE: drivers/ata/libata-scsi.c:2901:
+ ^I * make sure no broken devices are on this port,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#73: FILE: drivers/ata/libata-scsi.c:2901:
+ ^I * make sure no broken devices are on this port,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#74: FILE: drivers/ata/libata-scsi.c:2902:
+ ^I * and that all devices support interface power$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#74: FILE: drivers/ata/libata-scsi.c:2902:
+ ^I * and that all devices support interface power$

ERROR:CODE_INDENT: code indent should use tabs where possible
#75: FILE: drivers/ata/libata-scsi.c:2903:
+ ^I * management$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#75: FILE: drivers/ata/libata-scsi.c:2903:
+ ^I * management$

ERROR:CODE_INDENT: code indent should use tabs where possible
#76: FILE: drivers/ata/libata-scsi.c:2904:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#76: FILE: drivers/ata/libata-scsi.c:2904:
+ ^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: drivers/ata/libata-scsi.c:2913:
+ ^I^I * do we need to handle the case where we've hotplugged$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#85: FILE: drivers/ata/libata-scsi.c:2913:
+ ^I^I * do we need to handle the case where we've hotplugged$

ERROR:CODE_INDENT: code indent should use tabs where possible
#86: FILE: drivers/ata/libata-scsi.c:2914:
+ ^I^I * a broken drive (since hotplug and ALPM are mutually$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#86: FILE: drivers/ata/libata-scsi.c:2914:
+ ^I^I * a broken drive (since hotplug and ALPM are mutually$

ERROR:CODE_INDENT: code indent should use tabs where possible
#87: FILE: drivers/ata/libata-scsi.c:2915:
+ ^I^I * exclusive) ?$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#87: FILE: drivers/ata/libata-scsi.c:2915:
+ ^I^I * exclusive) ?$

ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: drivers/ata/libata-scsi.c:2916:
+ ^I^I *$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#88: FILE: drivers/ata/libata-scsi.c:2916:
+ ^I^I *$

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: drivers/ata/libata-scsi.c:2917:
+ ^I^I * If so, if we detect a broken drive on a port with$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#89: FILE: drivers/ata/libata-scsi.c:2917:
+ ^I^I * If so, if we detect a broken drive on a port with$

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: drivers/ata/libata-scsi.c:2918:
+ ^I^I * alpm already enabled, then we should reset the policy$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#90: FILE: drivers/ata/libata-scsi.c:2918:
+ ^I^I * alpm already enabled, then we should reset the policy$

ERROR:CODE_INDENT: code indent should use tabs where possible
#91: FILE: drivers/ata/libata-scsi.c:2919:
+ ^I^I * to off for the entire port.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#91: FILE: drivers/ata/libata-scsi.c:2919:
+ ^I^I * to off for the entire port.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#92: FILE: drivers/ata/libata-scsi.c:2920:
+ ^I^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#92: FILE: drivers/ata/libata-scsi.c:2920:
+ ^I^I */$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#94: FILE: drivers/ata/libata-scsi.c:2922:
+		if ((dev->horkage & ATA_HORKAGE_ALPM) ||
+			!(dev->flags & ATA_DFLAG_IPM)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#96: FILE: drivers/ata/libata-scsi.c:2924:
+			ata_dev_printk(dev, KERN_ERR,
+				"Unable to set Link PM policy\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#138: FILE: drivers/scsi/hosts.c:65:
+int scsi_host_set_link_pm(struct Scsi_Host *shost,
+		enum scsi_host_link_pm policy)

WARNING:LINE_SPACING: Missing a blank line after declarations
#141: FILE: drivers/scsi/hosts.c:68:
+	struct scsi_host_template *sht = shost->hostt;
+	if (sht->set_link_pm_policy)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: drivers/scsi/scsi_sysfs.c:217:
+static ssize_t store_link_pm_policy(struct class_device *class_dev,
+	const char *buf, size_t count)

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: drivers/scsi/scsi_sysfs.c:224:
+ ^I * we are skipping array location 0 on purpose - this$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#192: FILE: drivers/scsi/scsi_sysfs.c:224:
+ ^I * we are skipping array location 0 on purpose - this$

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: drivers/scsi/scsi_sysfs.c:225:
+ ^I * is because a value of SHOST_NOT_AVAILABLE is displayed$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#193: FILE: drivers/scsi/scsi_sysfs.c:225:
+ ^I * is because a value of SHOST_NOT_AVAILABLE is displayed$

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: drivers/scsi/scsi_sysfs.c:226:
+ ^I * to the user as max_performance, but when the user$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#194: FILE: drivers/scsi/scsi_sysfs.c:226:
+ ^I * to the user as max_performance, but when the user$

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: drivers/scsi/scsi_sysfs.c:227:
+ ^I * writes "max_performance", they actually want the$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#195: FILE: drivers/scsi/scsi_sysfs.c:227:
+ ^I * writes "max_performance", they actually want the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#196: FILE: drivers/scsi/scsi_sysfs.c:228:
+ ^I * value to match SHOST_MAX_PERFORMANCE.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#196: FILE: drivers/scsi/scsi_sysfs.c:228:
+ ^I * value to match SHOST_MAX_PERFORMANCE.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: drivers/scsi/scsi_sysfs.c:229:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#197: FILE: drivers/scsi/scsi_sysfs.c:229:
+ ^I */$

WARNING:LINE_SPACING: Missing a blank line after declarations
#200: FILE: drivers/scsi/scsi_sysfs.c:232:
+		const int len = strlen(shost_link_pm_policy[i].name);
+		if (strncmp(shost_link_pm_policy[i].name, buf, len) == 0 &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#201: FILE: drivers/scsi/scsi_sysfs.c:233:
+		if (strncmp(shost_link_pm_policy[i].name, buf, len) == 0 &&
+		   buf[len] == '\n') {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#213: FILE: drivers/scsi/scsi_sysfs.c:245:
+}
+static ssize_t

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#225: FILE: drivers/scsi/scsi_sysfs.c:257:
+static CLASS_DEVICE_ATTR(link_power_management_policy, S_IRUGO | S_IWUSR,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:CODE_INDENT: code indent should use tabs where possible
#264: FILE: include/scsi/scsi_host.h:358:
+ ^I * link power management support$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#264: FILE: include/scsi/scsi_host.h:358:
+ ^I * link power management support$

ERROR:CODE_INDENT: code indent should use tabs where possible
#265: FILE: include/scsi/scsi_host.h:359:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#265: FILE: include/scsi/scsi_host.h:359:
+ ^I */$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct Scsi_Host *' should also have an identifier name
#266: FILE: include/scsi/scsi_host.h:360:
+	int (*set_link_pm_policy)(struct Scsi_Host *, enum scsi_host_link_pm);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#285: FILE: include/scsi/scsi_host.h:769:
+extern int scsi_host_set_link_pm(struct Scsi_Host *, enum scsi_host_link_pm);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct Scsi_Host *' should also have an identifier name
#285: FILE: include/scsi/scsi_host.h:769:
+extern int scsi_host_set_link_pm(struct Scsi_Host *, enum scsi_host_link_pm);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#303: FILE: include/linux/libata.h:303:
+^IATA_HORKAGE_ALPM^I= (1 << 5), ^I/* ALPM problems */$

WARNING:SPACING: Unnecessary space before function pointer arguments
#320: FILE: include/linux/libata.h:612:
+	int (*enable_pm) (struct ata_port *ap, enum scsi_host_link_pm policy);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#329: FILE: include/linux/libata.h:817:
+extern int ata_scsi_set_link_pm_policy(struct Scsi_Host *shost, enum scsi_host_link_pm);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#366: FILE: drivers/ata/libata-core.c:6403:
+		ata_scsi_set_link_pm_policy(ap->scsi_host,
+				ap->pm_policy);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000419759.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 20 errors, 29 warnings, 11 checks, 299 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000419759.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
