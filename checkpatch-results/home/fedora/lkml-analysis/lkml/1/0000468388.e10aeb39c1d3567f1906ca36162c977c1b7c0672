CHECK:CAMELCASE: Avoid CamelCase: <Xgt_desc_struct>
#216: FILE: arch/i386/kernel/paravirt.c:310:
+static void native_load_gdt(const struct Xgt_desc_struct *dtr)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#276: FILE: arch/i386/kernel/paravirt.c:367:
+static void native_load_esp0(struct tss_struct *tss,
 				      struct thread_struct *thread)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#394: FILE: arch/i386/kernel/paravirt.c:476:
+extern void native_irq_enable_sysexit(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#421: FILE: include/asm-i386/paravirt.h:71:
+	void (*write_cr0)(unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#441: FILE: include/asm-i386/paravirt.h:74:
+	void (*write_cr2)(unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#444: FILE: include/asm-i386/paravirt.h:77:
+	void (*write_cr3)(unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#448: FILE: include/asm-i386/paravirt.h:81:
+	void (*write_cr4)(unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#451: FILE: include/asm-i386/paravirt.h:84:
+	void (*restore_fl)(unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct Xgt_desc_struct *' should also have an identifier name
#479: FILE: include/asm-i386/paravirt.h:99:
+	void (*load_gdt)(const struct Xgt_desc_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct Xgt_desc_struct *' should also have an identifier name
#480: FILE: include/asm-i386/paravirt.h:100:
+	void (*load_idt)(const struct Xgt_desc_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct Xgt_desc_struct *' should also have an identifier name
#481: FILE: include/asm-i386/paravirt.h:101:
+	void (*store_gdt)(struct Xgt_desc_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct Xgt_desc_struct *' should also have an identifier name
#482: FILE: include/asm-i386/paravirt.h:102:
+	void (*store_idt)(struct Xgt_desc_struct *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#483: FILE: include/asm-i386/paravirt.h:103:
+	void (*set_ldt)(const void *desc, unsigned entries);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#487: FILE: include/asm-i386/paravirt.h:107:
+	void (*write_ldt_entry)(void *dt, int entrynum,
 					 u32 low, u32 high);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#490: FILE: include/asm-i386/paravirt.h:109:
+	void (*write_gdt_entry)(void *dt, int entrynum,
 					 u32 low, u32 high);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#493: FILE: include/asm-i386/paravirt.h:111:
+	void (*write_idt_entry)(void *dt, int entrynum,
 					 u32 low, u32 high);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#496: FILE: include/asm-i386/paravirt.h:113:
+	void (*load_esp0)(struct tss_struct *tss,
 				   struct thread_struct *thread);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#499: FILE: include/asm-i386/paravirt.h:115:
+	void (*set_iopl_mask)(unsigned mask);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000468388.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 12 warnings, 6 checks, 521 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000468388.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
