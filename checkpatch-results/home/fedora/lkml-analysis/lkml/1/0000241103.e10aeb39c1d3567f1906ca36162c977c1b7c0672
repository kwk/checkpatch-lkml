WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
    master.kernel.org:/pub/scm/linux/kernel/git/roland/infiniband.git for-linus

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#123: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:724:
+		if (!my_qp->sq_map) {
+			ehca_err(pd->device, "Couldn't allocate squeue "

WARNING:SPLIT_STRING: quoted string split across lines
#124: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:725:
+			ehca_err(pd->device, "Couldn't allocate squeue "
+				 "map ret=%i", ret);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret == 0'
#229: FILE: drivers/infiniband/hw/ehca/ehca_qp.c:1622:
+	if ((ret == 0) && (attr_mask & IB_QP_STATE))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: Unbalanced braces around else statement
#356: FILE: drivers/infiniband/hw/ehca/ehca_reqs.c:695:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SIZEOF_PARENTHESIS: sizeof *rx->rx_ring should be sizeof(*rx->rx_ring)
#402: FILE: drivers/infiniband/ulp/ipoib/ipoib_cm.c:355:
+	rx->rx_ring = vmalloc(ipoib_recvq_size * sizeof *rx->rx_ring);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#404: FILE: drivers/infiniband/ulp/ipoib/ipoib_cm.c:357:
+		printk(KERN_WARNING "%s: failed to allocate CM non-SRQ ring (%d entries)\n",

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#404: FILE: drivers/infiniband/ulp/ipoib/ipoib_cm.c:357:
+	if (!rx->rx_ring) {
+		printk(KERN_WARNING "%s: failed to allocate CM non-SRQ ring (%d entries)\n",

WARNING:SIZEOF_PARENTHESIS: sizeof *rx->rx_ring should be sizeof(*rx->rx_ring)
#409: FILE: drivers/infiniband/ulp/ipoib/ipoib_cm.c:362:
+	memset(rx->rx_ring, 0, ipoib_recvq_size * sizeof *rx->rx_ring);

WARNING:SIZEOF_PARENTHESIS: sizeof *priv->cm.srq_ring should be sizeof(*priv->cm.srq_ring)
#419: FILE: drivers/infiniband/ulp/ipoib/ipoib_cm.c:1502:
+	priv->cm.srq_ring = vmalloc(ipoib_recvq_size * sizeof *priv->cm.srq_ring);

WARNING:SIZEOF_PARENTHESIS: sizeof *priv->cm.srq_ring should be sizeof(*priv->cm.srq_ring)
#428: FILE: drivers/infiniband/ulp/ipoib/ipoib_cm.c:1511:
+	memset(priv->cm.srq_ring, 0, ipoib_recvq_size * sizeof *priv->cm.srq_ring);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000241103.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 2 checks, 322 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000241103.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
