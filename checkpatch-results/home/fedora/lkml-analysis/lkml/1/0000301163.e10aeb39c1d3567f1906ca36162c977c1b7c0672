WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
Create a simple macro to always return a pointer to the node_to_cpumask(node)

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
# alpha

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
# fujitsu

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
# ia64

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
# powerpc

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
# sparc

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#73: 
# x86

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#135: FILE: include/asm-generic/topology.h:62:
+#define^Inode_to_cpumask_ptr(v, node) ^I^I^I^I^I\$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'v' may be better as '(v)' to avoid precedence issues
#135: FILE: include/asm-generic/topology.h:62:
+#define	node_to_cpumask_ptr(v, node) 					\
+		cpumask_t _##v = node_to_cpumask(node), *v = &_##v

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#138: FILE: include/asm-generic/topology.h:65:
+#define node_to_cpumask_ptr_next(v, node)				\
+			  _##v = node_to_cpumask(node)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'bus' - possible side-effects?
#149: FILE: include/asm-ia64/topology.h:119:
+#define pcibus_to_cpumask(bus)	(pcibus_to_node(bus) == -1 ? \
+					CPU_MASK_ALL : \
+					node_to_cpumask(pcibus_to_node(bus)) \
+				)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'v' may be better as '(v)' to avoid precedence issues
#182: FILE: include/asm-x86/topology.h:88:
+#define node_to_cpumask_ptr(v, node)		\
+		cpumask_t *v = &(node_to_cpumask_map[node])

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around node_to_cpumask_map[node]
#183: FILE: include/asm-x86/topology.h:89:
+		cpumask_t *v = &(node_to_cpumask_map[node])

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#185: FILE: include/asm-x86/topology.h:91:
+#define node_to_cpumask_ptr_next(v, node)	\
+			   v = &(node_to_cpumask_map[node])

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around node_to_cpumask_map[node]
#186: FILE: include/asm-x86/topology.h:92:
+			   v = &(node_to_cpumask_map[node])

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000301163.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 8 warnings, 5 checks, 96 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000301163.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
