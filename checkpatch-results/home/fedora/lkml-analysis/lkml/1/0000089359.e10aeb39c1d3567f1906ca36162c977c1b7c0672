WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#124: FILE: fs/fcntl.c:228:
+	f_modown(filp, pid, type, flags);
 	         ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#130: FILE: fs/fcntl.c:233:
+int f_setown(struct file *filp, unsigned long arg, int flags)
                           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#139: FILE: fs/fcntl.c:246:
+	result = __f_setown(filp, pid, type, flags);
 	                    ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#147: FILE: fs/fcntl.c:268:
+static int f_setown_tid(struct file *filp, unsigned long arg)
                                      ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#161: FILE: fs/fcntl.c:282:
+	ret = __f_setown(filp, pid, PIDTYPE_PID, flags);
 	                 ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#167: FILE: fs/fcntl.c:288:
+static pid_t f_getown_tid(struct file *filp)
                                        ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#189: FILE: fs/fcntl.c:350:
+		err = f_setown(filp, arg, FF_SETOWN_FORCE);
 		               ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#192: FILE: fs/fcntl.c:353:
+		err = f_getown_tid(filp);
 		                   ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#196: FILE: fs/fcntl.c:357:
+		err = f_setown_tid(filp, arg);
 		                   ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#261: FILE: include/linux/fs.h:1301:
+extern int __f_setown(struct file *filp, struct pid *, enum pid_type, int flags);
                                    ^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#261: FILE: include/linux/fs.h:1301:
+extern int __f_setown(struct file *filp, struct pid *, enum pid_type, int flags);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pid *' should also have an identifier name
#261: FILE: include/linux/fs.h:1301:
+extern int __f_setown(struct file *filp, struct pid *, enum pid_type, int flags);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#262: FILE: include/linux/fs.h:1302:
+extern int f_setown(struct file *filp, unsigned long arg, int flags);
                                  ^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#262: FILE: include/linux/fs.h:1302:
+extern int f_setown(struct file *filp, unsigned long arg, int flags);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000089359.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 12 warnings, 2 checks, 179 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000089359.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
