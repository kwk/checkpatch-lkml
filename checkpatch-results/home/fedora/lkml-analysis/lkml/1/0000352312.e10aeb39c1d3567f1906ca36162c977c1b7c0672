CHECK:LINE_SPACING: Please don't use multiple blank lines
#74: FILE: arch/x86/kernel/process_32.c:638:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#117: FILE: arch/x86/kernel/ptrace_32.c:630:
+			 (struct ptrace_bts_record __user *) addr);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#145: FILE: include/asm-x86/ptrace-abi.h:87:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#147: FILE: include/asm-x86/ptrace-abi.h:89:
+/* Allocate new bts buffer (free old one, if exists) of size DATA bts records;
+   parameter ADDR is ignored.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#151: FILE: include/asm-x86/ptrace-abi.h:93:
+   ENOMEM...out of memory */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#155: FILE: include/asm-x86/ptrace-abi.h:97:
+/* Return the size of the bts buffer in number of bts records,
+   if successful; -1, otherwise.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#156: FILE: include/asm-x86/ptrace-abi.h:98:
+   ENXIO....ptrace bts not initialized or no buffer allocated */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#160: FILE: include/asm-x86/ptrace-abi.h:102:
+/* Return the index of the next bts record to be written,
+   if successful; -1, otherwise.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#162: FILE: include/asm-x86/ptrace-abi.h:104:
+   ENXIO....ptrace bts not initialized or no buffer allocated */

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#166: FILE: include/asm-x86/ptrace-abi.h:107:
provided in ADDR.

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#167: FILE: include/asm-x86/ptrace-abi.h:108:
+/* Read the DATA'th bts record into a ptrace_bts_record buffer
+   Return 0, if successful; -1, otherwise

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#169: FILE: include/asm-x86/ptrace-abi.h:110:
+   EINVAL...invalid index */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#173: FILE: include/asm-x86/ptrace-abi.h:114:
+/* Configure last branch trace; the configuration is given as a bit-mask of
+   PTRACE_BTS_O_* options in DATA; parameter ADDR is ignored. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#173: FILE: include/asm-x86/ptrace-abi.h:114:
+   PTRACE_BTS_O_* options in DATA; parameter ADDR is ignored. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#218: FILE: include/asm-x86/ptrace.h:31:
+		/* PTRACE_BTS_TASK_ARRIVES or
+		   PTRACE_BTS_TASK_DEPARTS */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#218: FILE: include/asm-x86/ptrace.h:31:
+		   PTRACE_BTS_TASK_DEPARTS */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#230: FILE: include/asm-x86/ptrace.h:43:
+extern __cpuinit void ptrace_bts_init_intel(struct cpuinfo_x86 *c);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#231: FILE: include/asm-x86/ptrace.h:44:
+extern void ptrace_bts_task_arrives(struct task_struct *tsk);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#232: FILE: include/asm-x86/ptrace.h:45:
+extern void ptrace_bts_task_departs(struct task_struct *tsk);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#252: FILE: arch/x86/kernel/ptrace_bts.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#266: FILE: arch/x86/kernel/ptrace_bts.c:15:
+#include <asm/uaccess.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#268: FILE: arch/x86/kernel/ptrace_bts.c:17:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#322: FILE: arch/x86/kernel/ptrace_bts.c:71:
+		int err = ptrace_bts_allocate_ds(child);
+		if (err < 0)

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#348: FILE: arch/x86/kernel/ptrace_bts.c:97:
+ * Return -Eerrno, if an error occured
                                ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#370: FILE: arch/x86/kernel/ptrace_bts.c:119:
+ * Returns -Eerrno, if an error occured.
                                 ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#491: FILE: arch/x86/kernel/ptrace_bts.c:240:
+int ptrace_bts_config(struct task_struct *child,
+		       unsigned long options)

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#605: FILE: arch/x86/kernel/ptrace_bts.c:354:
+#ifdef __i386__

Architecture specific defines should be avoided wherever
possible.

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#617: FILE: arch/x86/kernel/ptrace_bts.c:366:
+	.debugctrl_mask = (1<<2)|(1<<3)
 	                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#617: FILE: arch/x86/kernel/ptrace_bts.c:366:
+	.debugctrl_mask = (1<<2)|(1<<3)
 	                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#617: FILE: arch/x86/kernel/ptrace_bts.c:366:
+	.debugctrl_mask = (1<<2)|(1<<3)
 	                           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#631: FILE: arch/x86/kernel/ptrace_bts.c:380:
+	.debugctrl_mask = (1<<6)|(1<<7)
 	                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#631: FILE: arch/x86/kernel/ptrace_bts.c:380:
+	.debugctrl_mask = (1<<6)|(1<<7)
 	                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#631: FILE: arch/x86/kernel/ptrace_bts.c:380:
+	.debugctrl_mask = (1<<6)|(1<<7)
 	                           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#646: FILE: arch/x86/kernel/ptrace_bts.c:395:
+	.debugctrl_mask = (1<<6)|(1<<7)|(1<<9)
 	                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#646: FILE: arch/x86/kernel/ptrace_bts.c:395:
+	.debugctrl_mask = (1<<6)|(1<<7)|(1<<9)
 	                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#646: FILE: arch/x86/kernel/ptrace_bts.c:395:
+	.debugctrl_mask = (1<<6)|(1<<7)|(1<<9)
 	                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#646: FILE: arch/x86/kernel/ptrace_bts.c:395:
+	.debugctrl_mask = (1<<6)|(1<<7)|(1<<9)
 	                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#646: FILE: arch/x86/kernel/ptrace_bts.c:395:
+	.debugctrl_mask = (1<<6)|(1<<7)|(1<<9)
 	                                  ^

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#672: FILE: arch/x86/kernel/ptrace_bts.c:421:
+#ifdef __i386__

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#688: FILE: arch/x86/kernel/ptrace_bts.c:437:
+#ifdef __i386__

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#710: FILE: include/asm-x86/ptrace_bts.h:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#724: FILE: include/asm-x86/ptrace_bts.h:15:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#790: FILE: include/asm-x86/ptrace_bts.h:81:
+	/* BTS variants used to store additional information like
+	   timestamps */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#790: FILE: include/asm-x86/ptrace_bts.h:81:
+	   timestamps */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#801: FILE: include/asm-x86/ptrace_bts.h:92:
+
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#808: FILE: include/asm-x86/ptrace_bts.h:99:
+}
+static inline void ptrace_bts_set_bts_buffer_base(char *base, void *value)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#812: FILE: include/asm-x86/ptrace_bts.h:103:
+}
+static inline void *ptrace_bts_get_bts_index(char *base)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#816: FILE: include/asm-x86/ptrace_bts.h:107:
+}
+static inline void ptrace_bts_set_bts_index(char *base, void *value)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#820: FILE: include/asm-x86/ptrace_bts.h:111:
+}
+static inline void *ptrace_bts_get_bts_absolute_maximum(char *base)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#824: FILE: include/asm-x86/ptrace_bts.h:115:
+}
+static inline void ptrace_bts_set_bts_absolute_maximum(char *base, void *value)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#828: FILE: include/asm-x86/ptrace_bts.h:119:
+}
+static inline void *ptrace_bts_get_bts_interrupt_threshold(char *base)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#832: FILE: include/asm-x86/ptrace_bts.h:123:
+}
+static inline void ptrace_bts_set_bts_interrupt_threshold(char *base,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#834: FILE: include/asm-x86/ptrace_bts.h:124:
+static inline void ptrace_bts_set_bts_interrupt_threshold(char *base,
+{

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#837: FILE: include/asm-x86/ptrace_bts.h:127:
+}
+static inline void *ptrace_bts_get_from_ip(char *base)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#841: FILE: include/asm-x86/ptrace_bts.h:131:
+}
+static inline void ptrace_bts_set_from_ip(char *base, void *value)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#845: FILE: include/asm-x86/ptrace_bts.h:135:
+}
+static inline void *ptrace_bts_get_to_ip(char *base)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#849: FILE: include/asm-x86/ptrace_bts.h:139:
+}
+static inline void ptrace_bts_set_to_ip(char *base, void *value)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#853: FILE: include/asm-x86/ptrace_bts.h:143:
+}
+static inline unsigned char ptrace_bts_get_info_type(char *base)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#857: FILE: include/asm-x86/ptrace_bts.h:147:
+}
+static inline void ptrace_bts_set_info_type(char *base, unsigned char value)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#861: FILE: include/asm-x86/ptrace_bts.h:151:
+}
+/*

WARNING:LINE_SPACING: Missing a blank line after declarations
#868: FILE: include/asm-x86/ptrace_bts.h:158:
+	unsigned long long value = 0;
+	memcpy(&value,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#873: FILE: include/asm-x86/ptrace_bts.h:163:
+}
+static inline void ptrace_bts_set_info_data(char *base, unsigned long

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#881: FILE: include/asm-x86/ptrace_bts.h:170:
+extern int ptrace_bts_allocate_bts(struct task_struct *child,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#883: FILE: include/asm-x86/ptrace_bts.h:172:
+extern int ptrace_bts_get_buffer_size(struct task_struct *child);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#884: FILE: include/asm-x86/ptrace_bts.h:173:
+extern int ptrace_bts_get_index(struct task_struct *child);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#885: FILE: include/asm-x86/ptrace_bts.h:174:
+extern int ptrace_bts_read_record(struct task_struct *child,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#888: FILE: include/asm-x86/ptrace_bts.h:177:
+extern int ptrace_bts_config(struct task_struct *child,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#890: FILE: include/asm-x86/ptrace_bts.h:179:
+extern int ptrace_bts_status(struct task_struct *child);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#891: FILE: include/asm-x86/ptrace_bts.h:180:
+extern void ptrace_bts_task_detached(struct task_struct *tsk);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#928: FILE: include/asm-x86/thread_info_32.h:157:
+#define _TIF_BTS_TRACE		(1<<TIF_BTS_TRACE)
                       		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#928: FILE: include/asm-x86/thread_info_32.h:157:
+#define _TIF_BTS_TRACE		(1<<TIF_BTS_TRACE)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#929: FILE: include/asm-x86/thread_info_32.h:158:
+#define _TIF_BTS_TRACE_TS	(1<<TIF_BTS_TRACE_TS)
                          	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#929: FILE: include/asm-x86/thread_info_32.h:158:
+#define _TIF_BTS_TRACE_TS	(1<<TIF_BTS_TRACE_TS)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#940: FILE: include/asm-x86/thread_info_32.h:169:
+  (_TIF_IO_BITMAP | _TIF_NOTSC | _TIF_DEBUG | \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#941: FILE: include/asm-x86/thread_info_32.h:170:
+   _TIF_BTS_TRACE | _TIF_BTS_TRACE_TS)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#943: FILE: include/asm-x86/thread_info_32.h:172:
+  (_TIF_IO_BITMAP | _TIF_NOTSC | _TIF_BTS_TRACE | _TIF_BTS_TRACE_TS)$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#956: FILE: include/asm-x86/processor_32.h:357:
+ *               goes into MSR_IA32_DS_AREA */

CHECK:SPACING: No space is necessary after a cast
#1047: FILE: arch/x86/kernel/ptrace_64.c:575:
+			 (struct ptrace_bts_record __user *) addr);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1070: FILE: include/asm-x86/processor_64.h:227:
+ *               goes into MSR_IA32_DS_AREA */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1093: FILE: include/asm-x86/thread_info_64.h:144:
+#define _TIF_BTS_TRACE		(1<<TIF_BTS_TRACE)
                       		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1093: FILE: include/asm-x86/thread_info_64.h:144:
+#define _TIF_BTS_TRACE		(1<<TIF_BTS_TRACE)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1094: FILE: include/asm-x86/thread_info_64.h:145:
+#define _TIF_BTS_TRACE_TS	(1<<TIF_BTS_TRACE_TS)
                          	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1094: FILE: include/asm-x86/thread_info_64.h:145:
+#define _TIF_BTS_TRACE_TS	(1<<TIF_BTS_TRACE_TS)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1104: FILE: include/asm-x86/thread_info_64.h:155:
+  (_TIF_DEBUG|_TIF_IO_BITMAP|_TIF_BTS_TRACE|_TIF_BTS_TRACE_TS)$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1104: FILE: include/asm-x86/thread_info_64.h:155:
+  (_TIF_DEBUG|_TIF_IO_BITMAP|_TIF_BTS_TRACE|_TIF_BTS_TRACE_TS)
              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1104: FILE: include/asm-x86/thread_info_64.h:155:
+  (_TIF_DEBUG|_TIF_IO_BITMAP|_TIF_BTS_TRACE|_TIF_BTS_TRACE_TS)
                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1104: FILE: include/asm-x86/thread_info_64.h:155:
+  (_TIF_DEBUG|_TIF_IO_BITMAP|_TIF_BTS_TRACE|_TIF_BTS_TRACE_TS)
                                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1106: FILE: include/asm-x86/thread_info_64.h:157:
+  (_TIF_IO_BITMAP|_TIF_BTS_TRACE|_TIF_BTS_TRACE_TS)$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1106: FILE: include/asm-x86/thread_info_64.h:157:
+  (_TIF_IO_BITMAP|_TIF_BTS_TRACE|_TIF_BTS_TRACE_TS)
                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1106: FILE: include/asm-x86/thread_info_64.h:157:
+  (_TIF_IO_BITMAP|_TIF_BTS_TRACE|_TIF_BTS_TRACE_TS)
                                 ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000352312.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 27 warnings, 62 checks, 1009 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000352312.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
