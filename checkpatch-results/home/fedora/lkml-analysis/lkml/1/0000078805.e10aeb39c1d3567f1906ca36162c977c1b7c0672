WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
    under hierarchy (which shares usage) will just adds noise and unnecessary

WARNING:TYPO_SPELLING: 'maintainance' may be misspelled - perhaps 'maintenance'?
#41: 
    This will make softlimit-tree maintainance better. 
                                  ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'enviroment' may be misspelled - perhaps 'environment'?
#44: 
    massively parallel enviroment. We need to reduce jobs under spinlock.
                       ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'chages' may be misspelled - perhaps 'changes'?
#47: 
    But by chages in "1", only hierarchy root has soft_limit. We can omit
           ^^^^^^

WARNING:TYPO_SPELLING: 'avaliable' may be misspelled - perhaps 'available'?
#50: 
After this patch, soft limit is avaliable only for root of sub-hierarchy.
                                ^^^^^^^^^

WARNING:TYPO_SPELLING: 'modifes' may be misspelled - perhaps 'modifies'?
#53: 
This modifes
     ^^^^^^^

WARNING:TYPO_SPELLING: 'unneccesary' may be misspelled - perhaps 'unnecessary'?
#54: 
  - drop unneccesary checks from res_coutner_charge().uncharge()
         ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'retrun' may be misspelled - perhaps 'return'?
#164: FILE: mm/memcontrol.c:379:
+ * retrun root. (and the caller will trigger status-check event)
    ^^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#166: FILE: mm/memcontrol.c:381:
+static struct mem_cgroup * mem_cgroup_soft_limit_check(struct mem_cgroup *mem)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#362: FILE: mm/memcontrol.c:2482:
+		if (list_empty(&cont->children)) {
[...]
+				mem->sub_hierarchy_root = NULL;
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#369: FILE: mm/memcontrol.c:2488:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#387: FILE: mm/memcontrol.c:2604:
+		if (!memcg->sub_hierarchy_root ||
+			memcg->sub_hierarchy_root != memcg)

CHECK:BRACES: Unbalanced braces around else statement
#389: FILE: mm/memcontrol.c:2606:
+		else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#392: FILE: mm/memcontrol.c:2609:
+				ret = res_counter_set_soft_limit(&memcg->res,
+								val);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078805.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 8 warnings, 5 checks, 319 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078805.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
