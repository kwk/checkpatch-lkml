WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#37: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#42: FILE: drivers/block/dst/alg_linear.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#79: FILE: drivers/block/dst/alg_linear.c:38:
+	dprintk("%s: disk_size: %llu, node_size: %llu.\n",
+			__func__, st->disk_size, n->size);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#121: FILE: drivers/block/dst/alg_linear.c:80:
+^I.add_node ^I= dst_linear_add_node,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#122: FILE: drivers/block/dst/alg_linear.c:81:
+^I.del_node ^I= dst_linear_del_node,$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#127: FILE: drivers/block/dst/alg_linear.c:86:
+static int __devinit alg_linear_init(void)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#136: FILE: drivers/block/dst/alg_linear.c:95:
+static void __devexit alg_linear_exit(void)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#153: FILE: drivers/block/dst/alg_mirror.c:1:
+/*

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#175: FILE: drivers/block/dst/alg_mirror.c:23:
+struct dst_mirror_node_data
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#180: FILE: drivers/block/dst/alg_mirror.c:28:
+struct dst_mirror_priv
+{

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#185: FILE: drivers/block/dst/alg_mirror.c:33:
+	spinlock_t		backlog_lock;

WARNING:SPLIT_STRING: quoted string split across lines
#205: FILE: drivers/block/dst/alg_mirror.c:53:
+		dprintk("%s: node: %p, %llu:%llu synchronization "
+				"has been completed.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#223: FILE: drivers/block/dst/alg_mirror.c:71:
+	memset(p->chunk, 0xff, DIV_ROUND_UP(p->chunk_num, BITS_PER_LONG)*sizeof(long));
 	                                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#232: FILE: drivers/block/dst/alg_mirror.c:80:
+	memset(p->chunk, 0x0, DIV_ROUND_UP(p->chunk_num, BITS_PER_LONG)*sizeof(long));
 	                                                               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: drivers/block/dst/alg_mirror.c:85:
+static ssize_t dst_mirror_mark_dirty(struct device *dev, struct device_attribute *attr,
+			 const char *buf, size_t count)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: drivers/block/dst/alg_mirror.c:94:
+static ssize_t dst_mirror_mark_clean(struct device *dev, struct device_attribute *attr,
+			 const char *buf, size_t count)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#255: FILE: drivers/block/dst/alg_mirror.c:103:
+static ssize_t dst_mirror_chunk_mask_show(struct device *dev,
+		struct device_attribute *attr, char *buf)

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#267: FILE: drivers/block/dst/alg_mirror.c:115:
+			sprintf(buf, "%c", (bit)?'+':'-');
 			                        ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#267: FILE: drivers/block/dst/alg_mirror.c:115:
+			sprintf(buf, "%c", (bit)?'+':'-');
 			                            ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#282: FILE: drivers/block/dst/alg_mirror.c:130:
+	__ATTR(chunks, S_IRUGO, dst_mirror_chunk_mask_show, NULL),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#283: FILE: drivers/block/dst/alg_mirror.c:131:
+	__ATTR(dirty, S_IWUSR, NULL, dst_mirror_mark_dirty),

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#284: FILE: drivers/block/dst/alg_mirror.c:132:
+	__ATTR(clean, S_IWUSR, NULL, dst_mirror_mark_clean),

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#309: FILE: drivers/block/dst/alg_mirror.c:157:
+		for (i=0; i<ARRAY_SIZE(dst_mirror_attrs); ++i)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#309: FILE: drivers/block/dst/alg_mirror.c:157:
+		for (i=0; i<ARRAY_SIZE(dst_mirror_attrs); ++i)
 		           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#319: FILE: drivers/block/dst/alg_mirror.c:167:
+		for (i=0; i<ARRAY_SIZE(dst_mirror_attrs); ++i)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#319: FILE: drivers/block/dst/alg_mirror.c:167:
+		for (i=0; i<ARRAY_SIZE(dst_mirror_attrs); ++i)
 		           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#321: FILE: drivers/block/dst/alg_mirror.c:169:
+			err = device_create_file(&n->device,
+					&dst_mirror_attrs[i]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#336: FILE: drivers/block/dst/alg_mirror.c:184:
+static int dst_mirror_get_node_data(struct dst_node *n,
+		struct dst_mirror_node_data *ndata, int old)

ERROR:SPACING: spaces required around that '?' (ctx:VxO)
#350: FILE: drivers/block/dst/alg_mirror.c:198:
+	memcpy(ndata, (old)?&p->old_data:&p->new_data, sizeof(struct dst_mirror_node_data));
 	                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#350: FILE: drivers/block/dst/alg_mirror.c:198:
+	memcpy(ndata, (old)?&p->old_data:&p->new_data, sizeof(struct dst_mirror_node_data));
 	                    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxO)
#350: FILE: drivers/block/dst/alg_mirror.c:198:
+	memcpy(ndata, (old)?&p->old_data:&p->new_data, sizeof(struct dst_mirror_node_data));
 	                                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#350: FILE: drivers/block/dst/alg_mirror.c:198:
+	memcpy(ndata, (old)?&p->old_data:&p->new_data, sizeof(struct dst_mirror_node_data));
 	                                 ^

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#357: FILE: drivers/block/dst/alg_mirror.c:205:
+struct dst_mirror_ndp
+{

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#367: FILE: drivers/block/dst/alg_mirror.c:215:
+	dprintk("%s: completing request: cmp: %p, err: %d.\n",
+			__func__, cmp, err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#393: FILE: drivers/block/dst/alg_mirror.c:241:
+static int dst_mirror_process_node_data(struct dst_node *n,
+		struct dst_mirror_node_data *ndata, int op)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*cmp)...) over kzalloc(sizeof(struct dst_mirror_ndp)...)
#400: FILE: drivers/block/dst/alg_mirror.c:248:
+	cmp = kzalloc(sizeof(struct dst_mirror_ndp), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#440: FILE: drivers/block/dst/alg_mirror.c:288:
+		req.size = req.orig_size = bio->bi_size;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#455: FILE: drivers/block/dst/alg_mirror.c:303:
+	dprintk("%s: waiting for completion: bio: %p, cmp: %p.\n",
+			__func__, bio, cmp);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'op != WRITE'
#461: FILE: drivers/block/dst/alg_mirror.c:309:
+	if (!err && (op != WRITE))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#482: FILE: drivers/block/dst/alg_mirror.c:330:
+static int dst_mirror_read_node_data(struct dst_node *n,
+		struct dst_mirror_node_data *ndata)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#491: FILE: drivers/block/dst/alg_mirror.c:339:
+static int dst_mirror_write_node_data(struct dst_node *n,
+		struct dst_mirror_node_data *ndata)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#494: FILE: drivers/block/dst/alg_mirror.c:342:
+	dprintk("%s: writing new age: %llx, node: %p %llu-%llu.\n",
+			__func__, ndata->age, n, n->start, n->size);

WARNING:SPLIT_STRING: quoted string split across lines
#511: FILE: drivers/block/dst/alg_mirror.c:359:
+		dprintk("%s: first age: %llx -> %llx. "
+			"Old will be set to new for the first node.\n",

WARNING:SPLIT_STRING: quoted string split across lines
#526: FILE: drivers/block/dst/alg_mirror.c:374:
+			dprintk("%s: node %llu:%llu is not synced with the first "
+					"node (old != new): %llx != %llx.\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#527: FILE: drivers/block/dst/alg_mirror.c:375:
+					__func__, n->start, n->start+n->size,
 					                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#542: FILE: drivers/block/dst/alg_mirror.c:390:
+			dprintk("%s: node %llu:%llu is in sync with the first node.\n",
+					__func__, n->start, n->start+n->size);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#542: FILE: drivers/block/dst/alg_mirror.c:390:
+					__func__, n->start, n->start+n->size);
 					                            ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*priv)...) over kzalloc(sizeof(struct dst_mirror_priv)...)
#578: FILE: drivers/block/dst/alg_mirror.c:426:
+	priv = kzalloc(sizeof(struct dst_mirror_priv), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#592: FILE: drivers/block/dst/alg_mirror.c:440:
+	dprintk("%s: %llu:%llu, chunk_num: %u, disk_size: %llu.\n\n",
+			__func__, n->start, n->size,

WARNING:SPLIT_STRING: quoted string split across lines
#646: FILE: drivers/block/dst/alg_mirror.c:494:
+	dprintk("%s: %llu:%llu start: %llu, size: %llu, "
+		"chunk_num: %u, idx: %d, num: %d, err: %d, node: %p.\n",

WARNING:SPLIT_STRING: quoted string split across lines
#653: FILE: drivers/block/dst/alg_mirror.c:501:
+		dprintk("%s: %llu:%llu req: %p, start: %llu, orig_size: %llu, "
+			"req_start: %llu, req_size: %llu, "

WARNING:SPLIT_STRING: quoted string split across lines
#654: FILE: drivers/block/dst/alg_mirror.c:502:
+			"req_start: %llu, req_size: %llu, "
+			"chunk_num: %u, idx: %d, num: %d, err: %d.\n",

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#663: FILE: drivers/block/dst/alg_mirror.c:511:
+		for (i=0; i<num; ++i)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#663: FILE: drivers/block/dst/alg_mirror.c:511:
+		for (i=0; i<num; ++i)
 		           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#664: FILE: drivers/block/dst/alg_mirror.c:512:
+			__set_bit(idx+i, priv->chunk);
 			             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#666: FILE: drivers/block/dst/alg_mirror.c:514:
+		for (i=0; i<num; ++i)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#666: FILE: drivers/block/dst/alg_mirror.c:514:
+		for (i=0; i<num; ++i)
 		           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#667: FILE: drivers/block/dst/alg_mirror.c:515:
+			__clear_bit(idx+i, priv->chunk);
 			               ^

WARNING:SPLIT_STRING: quoted string split across lines
#681: FILE: drivers/block/dst/alg_mirror.c:529:
+	dprintk("%s: freeing bio: %p, bi_size: %u, "
+			"orig_size: %llu, req: %p, node: %p.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#698: FILE: drivers/block/dst/alg_mirror.c:546:
+		dprintk("%s: %d/%d sync: %lx, ffs: %lu, chunk_num (modulo %u): %d.\n",
+				__func__, i, DIV_ROUND_UP(p->chunk_num, BITS_PER_LONG),

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#700: FILE: drivers/block/dst/alg_mirror.c:548:
+				p->chunk_num%BITS_PER_LONG);
 				            ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#704: FILE: drivers/block/dst/alg_mirror.c:552:
+		if (__ffs(notsync) != (p->chunk_num%BITS_PER_LONG))
 		                                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#719: FILE: drivers/block/dst/alg_mirror.c:567:
+	dprintk("%s: bio: %p, err: %d, size: %u, req: %p.\n",
+			__func__, bio, err, bio->bi_size, req);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#741: FILE: drivers/block/dst/alg_mirror.c:589:
+static int dst_mirror_sync_block(struct dst_node *n,
+		int bit_start, int bit_num)

WARNING:SPLIT_STRING: quoted string split across lines
#752: FILE: drivers/block/dst/alg_mirror.c:600:
+	dprintk("%s: bit_start: %d, bit_num: %d, start: %llu, nr_pages: %u, "
+			"disk_size: %llu.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#780: FILE: drivers/block/dst/alg_mirror.c:628:
+			err = bio_add_pc_page(n->st->queue, bio, page,
+					min_t(u32, PAGE_SIZE, size), 0);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#793: FILE: drivers/block/dst/alg_mirror.c:641:
+		req->size = req->orig_size = bio->bi_size;

WARNING:SPLIT_STRING: quoted string split across lines
#803: FILE: drivers/block/dst/alg_mirror.c:651:
+		dprintk("%s: start: %llu, size: %llu/%u, bio: %p, req: %p, "
+				"node: %p.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#842: FILE: drivers/block/dst/alg_mirror.c:690:
+	dprintk("%s: node: %p, %llu:%llu synchronization has been started.\n",
+			__func__, n, n->start, n->size);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#864: FILE: drivers/block/dst/alg_mirror.c:712:
+			word >>= (bit+1);
 			             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#871: FILE: drivers/block/dst/alg_mirror.c:719:
+			err = dst_mirror_sync_block(n, start + i*BITS_PER_LONG,
 			                                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#872: FILE: drivers/block/dst/alg_mirror.c:720:
+			err = dst_mirror_sync_block(n, start + i*BITS_PER_LONG,
+					num);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#893: FILE: drivers/block/dst/alg_mirror.c:741:
+	dprintk("%s: req: %p, bio: %p, req->bio: %p, err: %d.\n",
+			__func__, req, bio, req->bio, err);

WARNING:SPLIT_STRING: quoted string split across lines
#920: FILE: drivers/block/dst/alg_mirror.c:768:
+	dprintk("%s: req: %p, priv: %p err: %d, bio: %p, "
+			"cnt: %d, orig_size: %llu.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#931: FILE: drivers/block/dst/alg_mirror.c:779:
+static int dst_mirror_process_request_nosync(struct dst_request *req,
+		struct dst_node *n)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#950: FILE: drivers/block/dst/alg_mirror.c:798:
+		dprintk("%s: clone: %p, bio: %p, req: %p.\n",
+				__func__, clone, req->bio, req);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#972: FILE: drivers/block/dst/alg_mirror.c:820:
+	dprintk("%s: req: %p, n: %p, bdev: %p, err: %d.\n",
+			__func__, req, n, n->bdev, err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#991: FILE: drivers/block/dst/alg_mirror.c:839:
+			req = list_entry(p->backlog_list.next,
+					struct dst_request,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1005: FILE: drivers/block/dst/alg_mirror.c:853:
+		for (i=0; i<num; ++i)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1005: FILE: drivers/block/dst/alg_mirror.c:853:
+		for (i=0; i<num; ++i)
 		           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1006: FILE: drivers/block/dst/alg_mirror.c:854:
+			if (test_bit(idx+i, p->chunk))
 			                ^

WARNING:SPLIT_STRING: quoted string split across lines
#1010: FILE: drivers/block/dst/alg_mirror.c:858:
+		dprintk("%s: idx: %u, num: %u, i: %u, req: %p, "
+				"start: %llu, size: %llu.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1026: FILE: drivers/block/dst/alg_mirror.c:874:
+	if (!test_bit(DST_NODE_NOTSYNC, &n->flags) &&
+			p->old_data.age != p->new_data.age) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1033: FILE: drivers/block/dst/alg_mirror.c:881:
+static int dst_mirror_process_request(struct dst_request *req,
+		struct dst_node *n)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1059: FILE: drivers/block/dst/alg_mirror.c:907:
+	orig_num = num = atomic_read(&req->node->shared_num) + 1;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1065: FILE: drivers/block/dst/alg_mirror.c:913:
+	dprintk("\n%s: req: %p, mirror to %d nodes.\n",
+			__func__, req, num);

WARNING:SPLIT_STRING: quoted string split across lines
#1074: FILE: drivers/block/dst/alg_mirror.c:922:
+			dprintk("\n%s: req: %p, start: %llu, size: %llu, "
+					"num: %d, n: %p, state: %p.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1089: FILE: drivers/block/dst/alg_mirror.c:937:
+		dprintk("%s: req: %p, num: %d, err: %d.\n",
+				__func__, req, num, err);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1183: FILE: drivers/block/dst/alg_mirror.c:1031:
+	int (*remap[])(struct dst_request *) =
+		{&dst_mirror_read, &dst_mirror_write};

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1194: FILE: drivers/block/dst/alg_mirror.c:1042:
+	dprintk("%s: err: %d, revents: %x, notsync: %d.\n",
+			__func__, err, revents,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1201: FILE: drivers/block/dst/alg_mirror.c:1049:
+^I^I   ^I(err == -EPIPE || err == -ECONNRESET)) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1201: FILE: drivers/block/dst/alg_mirror.c:1049:
+^I^I   ^I(err == -EPIPE || err == -ECONNRESET)) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1201: FILE: drivers/block/dst/alg_mirror.c:1049:
+	if (!(revents & (POLLERR | POLLHUP)) &&
+		   	(err == -EPIPE || err == -ECONNRESET)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1202: FILE: drivers/block/dst/alg_mirror.c:1050:
+		if (test_bit(DST_NODE_NOTSYNC, &st->node->flags)) {
+			return dst_mirror_resync(st->node, 1);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1209: FILE: drivers/block/dst/alg_mirror.c:1057:
+	if (atomic_read(&st->node->shared_num) == 0 &&
+			!st->node->shared_head) {

WARNING:SPLIT_STRING: quoted string split across lines
#1211: FILE: drivers/block/dst/alg_mirror.c:1059:
+		dprintk("%s: this node is the only one in the mirror, "
+				"can not mark it notsync.\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1219: FILE: drivers/block/dst/alg_mirror.c:1067:
+	list_for_each_entry_safe(req, tmp, &st->request_list,
+					request_list_entry) {

WARNING:SPLIT_STRING: quoted string split across lines
#1222: FILE: drivers/block/dst/alg_mirror.c:1070:
+		dprintk("%s: requeue [%c], start: %llu, idx: %d,"
+				" num: %d, size: %llu, offset: %u, err: %d.\n",

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1223: FILE: drivers/block/dst/alg_mirror.c:1071:
+			__func__, (bio_rw(req->bio) == WRITE)?'W':'R',
 			                                     ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1223: FILE: drivers/block/dst/alg_mirror.c:1071:
+			__func__, (bio_rw(req->bio) == WRITE)?'W':'R',
 			                                         ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1250: FILE: drivers/block/dst/alg_mirror.c:1098:
+static int __devinit alg_mirror_init(void)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1269: FILE: drivers/block/dst/alg_mirror.c:1117:
+static void __devexit alg_mirror_exit(void)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000349045.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 19 errors, 28 warnings, 55 checks, 1233 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000349045.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
