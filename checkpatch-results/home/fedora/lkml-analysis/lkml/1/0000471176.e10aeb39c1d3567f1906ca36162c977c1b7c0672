CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#54: 
  Sébastien.
   ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#57: 
From: Sébastien Dugué <sebastien.dugue@bull.net>
       ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#73: 
Signed-off-by: Sébastien Dugué <sebastien.dugue@bull.net>
                ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#84: FILE: include/linux/signal.h:243:
+extern struct task_struct * sigevent_find_task(sigevent_t *);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#84: FILE: include/linux/signal.h:243:
+extern struct task_struct * sigevent_find_task(sigevent_t *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'sigevent_t *' should also have an identifier name
#84: FILE: include/linux/signal.h:243:
+extern struct task_struct * sigevent_find_task(sigevent_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#121: FILE: kernel/posix-timers.c:482:
+		if ((process = sigevent_find_task(&event))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#139: FILE: kernel/signal.c:1222:
+struct task_struct * sigevent_find_task(sigevent_t * event)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#139: FILE: kernel/signal.c:1222:
+struct task_struct * sigevent_find_task(sigevent_t * event)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000471176.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 1 warnings, 4 checks, 72 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000471176.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
