WARNING:TYPO_SPELLING: 'wil' may be misspelled - perhaps 'will'?
#50: 
Cc: Matthew Wilcox <matthew@wil.cx>
                            ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: drivers/pci/pci-sysfs.c:699:
+       .size = PCI_CFG_SPACE_SIZE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: drivers/pci/pci-sysfs.c:709:
+       .size = PCI_CFG_SPACE_EXP_SIZE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: drivers/pci/pci-sysfs.c:727:
+       if (pdev->cfg_size < PCI_CFG_SPACE_EXP_SIZE)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#92: FILE: drivers/pci/pci-sysfs.c:727:
+       if (pdev->cfg_size < PCI_CFG_SPACE_EXP_SIZE)
                retval = sysfs_create_bin_file(&pdev->dev.kobj, &pci_config_attr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: drivers/pci/pci-sysfs.c:798:
+       if (pdev->cfg_size < PCI_CFG_SPACE_EXP_SIZE)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#101: FILE: drivers/pci/pci-sysfs.c:798:
+       if (pdev->cfg_size < PCI_CFG_SPACE_EXP_SIZE)
                sysfs_remove_bin_file(&pdev->dev.kobj, &pci_config_attr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: drivers/pci/pci-sysfs.c:823:
+       if (pdev->cfg_size < PCI_CFG_SPACE_EXP_SIZE)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#110: FILE: drivers/pci/pci-sysfs.c:823:
+       if (pdev->cfg_size < PCI_CFG_SPACE_EXP_SIZE)
                sysfs_remove_bin_file(&pdev->dev.kobj, &pci_config_attr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: drivers/pci/pci.c:219:
+       if (dev->cfg_size <= PCI_CFG_SPACE_SIZE)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#123: FILE: drivers/pci/pci.c:219:
+       if (dev->cfg_size <= PCI_CFG_SPACE_SIZE)
                return 0;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#132: FILE: drivers/pci/pci.h:1:
+#ifndef DRIVERS_PCI_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: drivers/pci/pci.h:154:
+       pci_bar_unknown,        /* Standard PCI BAR probe */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: drivers/pci/pci.h:155:
+       pci_bar_io,             /* An io port BAR */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: drivers/pci/pci.h:156:
+       pci_bar_mem32,          /* A 32-bit memory BAR */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: drivers/pci/pci.h:157:
+       pci_bar_mem64,          /* A 64-bit memory BAR */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: drivers/pci/pci.h:158:
+       pci_bar_rom,            /* A ROM BAR */$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#153: FILE: drivers/pci/pci.h:161:
+extern int pci_read_base(struct pci_dev *dev, enum pci_bar_type type,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: drivers/pci/pci.h:162:
+                               struct resource *res, unsigned int reg);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#154: FILE: drivers/pci/pci.h:162:
+extern int pci_read_base(struct pci_dev *dev, enum pci_bar_type type,
+                               struct resource *res, unsigned int reg);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: drivers/pci/pci.h:162:
+                               struct resource *res, unsigned int reg);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#155: FILE: drivers/pci/pci.h:163:
+extern struct pci_bus *pci_alloc_child_bus(struct pci_bus *parent,

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: drivers/pci/pci.h:164:
+                               struct pci_dev *bridge, int busnr);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#156: FILE: drivers/pci/pci.h:164:
+extern struct pci_bus *pci_alloc_child_bus(struct pci_bus *parent,
+                               struct pci_dev *bridge, int busnr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: drivers/pci/pci.h:164:
+                               struct pci_dev *bridge, int busnr);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#204: FILE: drivers/pci/probe.c:228:
+int pci_read_base(struct pci_dev *dev, enum pci_bar_type type,
                        struct resource *res, unsigned int pos)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: drivers/pci/probe.c:232:
+       mask = (type == pci_bar_rom) ? ~PCI_ROM_ADDRESS_ENABLE : ~0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: drivers/pci/probe.c:257:
+       if (type == pci_bar_rom) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#218: FILE: drivers/pci/probe.c:257:
+       if (type == pci_bar_rom) {
+               res->flags |= (l & IORESOURCE_ROM_ENABLE);

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: drivers/pci/probe.c:258:
+               res->flags |= (l & IORESOURCE_ROM_ENABLE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: drivers/pci/probe.c:258:
+               res->flags |= (l & IORESOURCE_ROM_ENABLE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: drivers/pci/probe.c:259:
+               l &= PCI_ROM_ADDRESS_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: drivers/pci/probe.c:259:
+               l &= PCI_ROM_ADDRESS_MASK;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: drivers/pci/probe.c:260:
+               mask = (u32)PCI_ROM_ADDRESS_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: drivers/pci/probe.c:260:
+               mask = (u32)PCI_ROM_ADDRESS_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: drivers/pci/probe.c:261:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#222: FILE: drivers/pci/probe.c:261:
+       } else {
                type = decode_bar(res, l);

ERROR:CODE_INDENT: code indent should use tabs where possible
#242: FILE: drivers/pci/probe.c:334:
+               pos += pci_read_base(dev, pci_bar_unknown, res, reg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: drivers/pci/probe.c:334:
+               pos += pci_read_base(dev, pci_bar_unknown, res, reg);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#251: FILE: drivers/pci/probe.c:343:
+               pci_read_base(dev, pci_bar_mem32, res, rom);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: drivers/pci/probe.c:343:
+               pci_read_base(dev, pci_bar_mem32, res, rom);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#271: FILE: drivers/pci/probe.c:458:
+struct pci_bus *pci_alloc_child_bus(struct pci_bus *parent,
                                           struct pci_dev *bridge, int busnr)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: drivers/pci/probe.c:490:
+       if (!bridge)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#291: FILE: drivers/pci/probe.c:490:
+       if (!bridge)
+               return child;

ERROR:CODE_INDENT: code indent should use tabs where possible
#292: FILE: drivers/pci/probe.c:491:
+               return child;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: drivers/pci/probe.c:491:
+               return child;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: drivers/pci/probe.c:493:
+       child->self = bridge;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: drivers/pci/probe.c:494:
+       child->bridge = get_device(&bridge->dev);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#308: FILE: drivers/pci/setup-bus.c:302:
+                       r_size = resource_size(r);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: drivers/pci/setup-bus.c:302:
+                       r_size = resource_size(r);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#317: FILE: drivers/pci/setup-bus.c:353:
+                       r_size = resource_size(r);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: drivers/pci/setup-bus.c:353:
+                       r_size = resource_size(r);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: drivers/pci/setup-res.c:136:
+       size = resource_size(res);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000223557.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 37 warnings, 6 checks, 233 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000223557.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
