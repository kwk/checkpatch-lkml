WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#196: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#201: FILE: drivers/isdn/gigaset/capi.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:CAMELCASE: Avoid CamelCase: <CapiNcpiNotSupportedByProtocol>
#221: FILE: drivers/isdn/gigaset/capi.c:21:
+#define CapiNcpiNotSupportedByProtocol	0x0001

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <CapiFlagsNotSupportedByProtocol>
#222: FILE: drivers/isdn/gigaset/capi.c:22:
+#define CapiFlagsNotSupportedByProtocol	0x0002

CHECK:CAMELCASE: Avoid CamelCase: <CapiAlertAlreadySent>
#223: FILE: drivers/isdn/gigaset/capi.c:23:
+#define CapiAlertAlreadySent		0x0003

CHECK:CAMELCASE: Avoid CamelCase: <CapiFacilitySpecificFunctionNotSupported>
#224: FILE: drivers/isdn/gigaset/capi.c:24:
+#define CapiFacilitySpecificFunctionNotSupported	0x3011

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#227: FILE: drivers/isdn/gigaset/capi.c:27:
+#define CAPI_CONNECT_IND_BASELEN	(CAPI_MSG_BASELEN+4+2+8*1)
                                 	                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#227: FILE: drivers/isdn/gigaset/capi.c:27:
+#define CAPI_CONNECT_IND_BASELEN	(CAPI_MSG_BASELEN+4+2+8*1)
                                 	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#227: FILE: drivers/isdn/gigaset/capi.c:27:
+#define CAPI_CONNECT_IND_BASELEN	(CAPI_MSG_BASELEN+4+2+8*1)
                                 	                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#227: FILE: drivers/isdn/gigaset/capi.c:27:
+#define CAPI_CONNECT_IND_BASELEN	(CAPI_MSG_BASELEN+4+2+8*1)
                                 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#228: FILE: drivers/isdn/gigaset/capi.c:28:
+#define CAPI_CONNECT_ACTIVE_IND_BASELEN	(CAPI_MSG_BASELEN+4+3*1)
                                        	                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#228: FILE: drivers/isdn/gigaset/capi.c:28:
+#define CAPI_CONNECT_ACTIVE_IND_BASELEN	(CAPI_MSG_BASELEN+4+3*1)
                                        	                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#228: FILE: drivers/isdn/gigaset/capi.c:28:
+#define CAPI_CONNECT_ACTIVE_IND_BASELEN	(CAPI_MSG_BASELEN+4+3*1)
                                        	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#229: FILE: drivers/isdn/gigaset/capi.c:29:
+#define CAPI_CONNECT_B3_IND_BASELEN	(CAPI_MSG_BASELEN+4+1)
                                    	                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#229: FILE: drivers/isdn/gigaset/capi.c:29:
+#define CAPI_CONNECT_B3_IND_BASELEN	(CAPI_MSG_BASELEN+4+1)
                                    	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#230: FILE: drivers/isdn/gigaset/capi.c:30:
+#define CAPI_CONNECT_B3_ACTIVE_IND_BASELEN	(CAPI_MSG_BASELEN+4+1)
                                           	                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#230: FILE: drivers/isdn/gigaset/capi.c:30:
+#define CAPI_CONNECT_B3_ACTIVE_IND_BASELEN	(CAPI_MSG_BASELEN+4+1)
                                           	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#231: FILE: drivers/isdn/gigaset/capi.c:31:
+#define CAPI_DATA_B3_REQ_LEN64		(CAPI_MSG_BASELEN+4+4+2+2+2+8)
                               		                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#231: FILE: drivers/isdn/gigaset/capi.c:31:
+#define CAPI_DATA_B3_REQ_LEN64		(CAPI_MSG_BASELEN+4+4+2+2+2+8)
                               		                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#231: FILE: drivers/isdn/gigaset/capi.c:31:
+#define CAPI_DATA_B3_REQ_LEN64		(CAPI_MSG_BASELEN+4+4+2+2+2+8)
                               		                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#231: FILE: drivers/isdn/gigaset/capi.c:31:
+#define CAPI_DATA_B3_REQ_LEN64		(CAPI_MSG_BASELEN+4+4+2+2+2+8)
                               		                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#231: FILE: drivers/isdn/gigaset/capi.c:31:
+#define CAPI_DATA_B3_REQ_LEN64		(CAPI_MSG_BASELEN+4+4+2+2+2+8)
                               		                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#231: FILE: drivers/isdn/gigaset/capi.c:31:
+#define CAPI_DATA_B3_REQ_LEN64		(CAPI_MSG_BASELEN+4+4+2+2+2+8)
                               		                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#232: FILE: drivers/isdn/gigaset/capi.c:32:
+#define CAPI_DATA_B3_CONF_LEN		(CAPI_MSG_BASELEN+4+2+2)
                              		                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#232: FILE: drivers/isdn/gigaset/capi.c:32:
+#define CAPI_DATA_B3_CONF_LEN		(CAPI_MSG_BASELEN+4+2+2)
                              		                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#232: FILE: drivers/isdn/gigaset/capi.c:32:
+#define CAPI_DATA_B3_CONF_LEN		(CAPI_MSG_BASELEN+4+2+2)
                              		                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#233: FILE: drivers/isdn/gigaset/capi.c:33:
+#define CAPI_DISCONNECT_IND_LEN		(CAPI_MSG_BASELEN+4+2)
                                		                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#233: FILE: drivers/isdn/gigaset/capi.c:33:
+#define CAPI_DISCONNECT_IND_LEN		(CAPI_MSG_BASELEN+4+2)
                                		                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#234: FILE: drivers/isdn/gigaset/capi.c:34:
+#define CAPI_DISCONNECT_B3_IND_BASELEN	(CAPI_MSG_BASELEN+4+2+1)
                                       	                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#234: FILE: drivers/isdn/gigaset/capi.c:34:
+#define CAPI_DISCONNECT_B3_IND_BASELEN	(CAPI_MSG_BASELEN+4+2+1)
                                       	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#234: FILE: drivers/isdn/gigaset/capi.c:34:
+#define CAPI_DISCONNECT_B3_IND_BASELEN	(CAPI_MSG_BASELEN+4+2+1)
                                       	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#235: FILE: drivers/isdn/gigaset/capi.c:35:
+#define CAPI_FACILITY_CONF_BASELEN	(CAPI_MSG_BASELEN+4+2+2+1)
                                   	                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#235: FILE: drivers/isdn/gigaset/capi.c:35:
+#define CAPI_FACILITY_CONF_BASELEN	(CAPI_MSG_BASELEN+4+2+2+1)
                                   	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#235: FILE: drivers/isdn/gigaset/capi.c:35:
+#define CAPI_FACILITY_CONF_BASELEN	(CAPI_MSG_BASELEN+4+2+2+1)
                                   	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#235: FILE: drivers/isdn/gigaset/capi.c:35:
+#define CAPI_FACILITY_CONF_BASELEN	(CAPI_MSG_BASELEN+4+2+2+1)
                                   	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#237: FILE: drivers/isdn/gigaset/capi.c:37:
+#define CAPI_STDCONF_LEN		(CAPI_MSG_BASELEN+4+2)
                         		                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#237: FILE: drivers/isdn/gigaset/capi.c:37:
+#define CAPI_STDCONF_LEN		(CAPI_MSG_BASELEN+4+2)
                         		                   ^

CHECK:CAMELCASE: Avoid CamelCase: <nextMessageNumber>
#282: FILE: drivers/isdn/gigaset/capi.c:82:
+	u16 nextMessageNumber;

CHECK:CAMELCASE: Avoid CamelCase: <listenInfoMask>
#283: FILE: drivers/isdn/gigaset/capi.c:83:
+	u32 listenInfoMask;

CHECK:CAMELCASE: Avoid CamelCase: <listenCIPmask>
#284: FILE: drivers/isdn/gigaset/capi.c:84:
+	u32 listenCIPmask;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#297: FILE: drivers/isdn/gigaset/capi.c:97:
+	u8 bc_buf[MAX_BC_OCTETS+1];
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#298: FILE: drivers/isdn/gigaset/capi.c:98:
+	u8 hlc_buf[MAX_HLC_OCTETS+1];
 	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#299: FILE: drivers/isdn/gigaset/capi.c:99:
+	u8 cgpty_buf[MAX_NUMBER_DIGITS+3];
 	                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#300: FILE: drivers/isdn/gigaset/capi.c:100:
+	u8 cdpty_buf[MAX_NUMBER_DIGITS+2];
 	                              ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#334: FILE: drivers/isdn/gigaset/capi.c:134:
+		/* Teletex service basic and mixed mode
+		   and Group 4 facsimile service Classes II and III */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#334: FILE: drivers/isdn/gigaset/capi.c:134:
+		   and Group 4 facsimile service Classes II and III */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#364: FILE: drivers/isdn/gigaset/capi.c:164:
+static inline void ignore_cstruct_param(struct cardstate *cs, _cstruct param,
+				       char *msgname, char *paramname)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#372: FILE: drivers/isdn/gigaset/capi.c:172:
+static inline void ignore_cmstruct_param(struct cardstate *cs, _cmstruct param,
+				       char *msgname, char *paramname)

WARNING:LINE_SPACING: Missing a blank line after declarations
#399: FILE: drivers/isdn/gigaset/capi.c:199:
+	int result = c & 0x0f;
+	if (c & 0x40)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#412: FILE: drivers/isdn/gigaset/capi.c:212:
+	int l = 0;
+	while (*in) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#429: FILE: drivers/isdn/gigaset/capi.c:229:
+	int i = *in;
+	while (i-- > 0) {

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#440: FILE: drivers/isdn/gigaset/capi.c:240:
+get_appl(struct gigaset_capi_ctr *iif, u16 appl)
                                   ^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#456: FILE: drivers/isdn/gigaset/capi.c:256:
+	_cdebbuf *cdb;
 	         ^

CHECK:CAMELCASE: Avoid CamelCase: <ApplId>
#463: FILE: drivers/isdn/gigaset/capi.c:263:
+		gig_dbg(level, "%s: [%d] %s", tag, p->ApplId, cdb->buf);

CHECK:CAMELCASE: Avoid CamelCase: <Command>
#467: FILE: drivers/isdn/gigaset/capi.c:267:
+			capi_cmd2str(p->Command, p->Subcommand));

CHECK:CAMELCASE: Avoid CamelCase: <Subcommand>
#467: FILE: drivers/isdn/gigaset/capi.c:267:
+			capi_cmd2str(p->Command, p->Subcommand));

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#492: FILE: drivers/isdn/gigaset/capi.c:292:
+	dbgline = kmalloc(3*l, GFP_ATOMIC);
 	                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#496: FILE: drivers/isdn/gigaset/capi.c:296:
+		dbgline[3*i] = hex_asc_hi(data[12+i]);
 		         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#496: FILE: drivers/isdn/gigaset/capi.c:296:
+		dbgline[3*i] = hex_asc_hi(data[12+i]);
 		                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#497: FILE: drivers/isdn/gigaset/capi.c:297:
+		dbgline[3*i+1] = hex_asc_lo(data[12+i]);
 		         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#497: FILE: drivers/isdn/gigaset/capi.c:297:
+		dbgline[3*i+1] = hex_asc_lo(data[12+i]);
 		           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#497: FILE: drivers/isdn/gigaset/capi.c:297:
+		dbgline[3*i+1] = hex_asc_lo(data[12+i]);
 		                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#498: FILE: drivers/isdn/gigaset/capi.c:298:
+		dbgline[3*i+2] = ' ';
 		         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#498: FILE: drivers/isdn/gigaset/capi.c:298:
+		dbgline[3*i+2] = ' ';
 		           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#500: FILE: drivers/isdn/gigaset/capi.c:300:
+	dbgline[3*l-1] = '\0';
 	         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#500: FILE: drivers/isdn/gigaset/capi.c:300:
+	dbgline[3*l-1] = '\0';
 	           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#508: FILE: drivers/isdn/gigaset/capi.c:308:
+		dbgline = kmalloc(3*l, GFP_ATOMIC);
 		                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#513: FILE: drivers/isdn/gigaset/capi.c:313:
+			dbgline[3*i] = hex_asc_hi(data[i]);
 			         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#514: FILE: drivers/isdn/gigaset/capi.c:314:
+			dbgline[3*i+1] = hex_asc_lo(data[i]);
 			         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#514: FILE: drivers/isdn/gigaset/capi.c:314:
+			dbgline[3*i+1] = hex_asc_lo(data[i]);
 			           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#515: FILE: drivers/isdn/gigaset/capi.c:315:
+			dbgline[3*i+2] = ' ';
 			         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#515: FILE: drivers/isdn/gigaset/capi.c:315:
+			dbgline[3*i+2] = ' ';
 			           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#517: FILE: drivers/isdn/gigaset/capi.c:317:
+		dbgline[3*l-1] = '\0';
 		         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#517: FILE: drivers/isdn/gigaset/capi.c:317:
+		dbgline[3*l-1] = '\0';
 		           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#530: FILE: drivers/isdn/gigaset/capi.c:330:
+	static char result[3*MAX_FMT_IE_LEN];
 	                    ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#537: FILE: drivers/isdn/gigaset/capi.c:337:
+	count = len = ie[0];

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#539: FILE: drivers/isdn/gigaset/capi.c:339:
+		count = MAX_FMT_IE_LEN-1;
 		                      ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#554: FILE: drivers/isdn/gigaset/capi.c:354:
+
+

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#565: FILE: drivers/isdn/gigaset/capi.c:365:
+ * Called by hardware module {bas,ser,usb}_gigaset when the data in a
                                   ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#571: FILE: drivers/isdn/gigaset/capi.c:371:
+	struct gigaset_capi_ctr *iif = cs->iif;
 	                         ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#571: FILE: drivers/isdn/gigaset/capi.c:371:
+	struct gigaset_capi_ctr *iif = cs->iif;
 	                                   ^^^

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#596: FILE: drivers/isdn/gigaset/capi.c:396:
+	if (!cskb) {
+		dev_err(cs->dev, "%s: out of memory\n", __func__);

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#626: FILE: drivers/isdn/gigaset/capi.c:426:
+ * Called by hardware module {bas,ser,usb}_gigaset when user data has
                                   ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#633: FILE: drivers/isdn/gigaset/capi.c:433:
+	struct gigaset_capi_ctr *iif = cs->iif;
 	                         ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#633: FILE: drivers/isdn/gigaset/capi.c:433:
+	struct gigaset_capi_ctr *iif = cs->iif;
 	                                   ^^^

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#682: FILE: drivers/isdn/gigaset/capi.c:482:
+ * Called by hardware module {bas,ser,usb}_gigaset when a receive error
                                   ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#713: FILE: drivers/isdn/gigaset/capi.c:513:
+	struct gigaset_capi_ctr *iif = cs->iif;
 	                         ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#713: FILE: drivers/isdn/gigaset/capi.c:513:
+	struct gigaset_capi_ctr *iif = cs->iif;
 	                                   ^^^

CHECK:CAMELCASE: Avoid CamelCase: <actCIPmask>
#715: FILE: drivers/isdn/gigaset/capi.c:515:
+	u32 actCIPmask;

CHECK:CAMELCASE: Avoid CamelCase: <CIPValue>
#747: FILE: drivers/isdn/gigaset/capi.c:547:
+		iif->hcmsg.CIPValue = 0;	/* default if nothing found */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cip2bchlc[i].bc"
#749: FILE: drivers/isdn/gigaset/capi.c:549:
+			if (cip2bchlc[i].bc != NULL &&

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cip2bchlc[i].hlc"
#750: FILE: drivers/isdn/gigaset/capi.c:550:
+			    cip2bchlc[i].hlc == NULL &&

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cip2bchlc[i].hlc"
#780: FILE: drivers/isdn/gigaset/capi.c:580:
+				if (cip2bchlc[i].hlc != NULL &&

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#800: FILE: drivers/isdn/gigaset/capi.c:600:
+		memcpy(iif->cdpty_buf+2, at_state->str_var[STR_ZCPN], i);
 		                     ^

CHECK:CAMELCASE: Avoid CamelCase: <CalledPartyNumber>
#801: FILE: drivers/isdn/gigaset/capi.c:601:
+		iif->hcmsg.CalledPartyNumber = iif->cdpty_buf;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#816: FILE: drivers/isdn/gigaset/capi.c:616:
+		memcpy(iif->cgpty_buf+3, at_state->str_var[STR_NMBR], i);
 		                     ^

CHECK:CAMELCASE: Avoid CamelCase: <CallingPartyNumber>
#817: FILE: drivers/isdn/gigaset/capi.c:617:
+		iif->hcmsg.CallingPartyNumber = iif->cgpty_buf;

CHECK:CAMELCASE: Avoid CamelCase: <adrPLCI>
#832: FILE: drivers/isdn/gigaset/capi.c:632:
+		iif->hcmsg.adr.adrPLCI, iif->hcmsg.CIPValue,

CHECK:CAMELCASE: Avoid CamelCase: <Messagenumber>
#848: FILE: drivers/isdn/gigaset/capi.c:648:
+			iif->hcmsg.Messagenumber = ap->nextMessageNumber++;

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#852: FILE: drivers/isdn/gigaset/capi.c:652:
+			if (!skb) {
+				dev_err(cs->dev, "%s: out of memory\n",

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#885: FILE: drivers/isdn/gigaset/capi.c:685:
+	struct gigaset_capi_ctr *iif = cs->iif;
 	                         ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#885: FILE: drivers/isdn/gigaset/capi.c:685:
+	struct gigaset_capi_ctr *iif = cs->iif;
 	                                   ^^^

CHECK:CAMELCASE: Avoid CamelCase: <Reason>
#894: FILE: drivers/isdn/gigaset/capi.c:694:
+	iif->hcmsg.Reason = reason;

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#915: FILE: drivers/isdn/gigaset/capi.c:715:
+	struct gigaset_capi_ctr *iif = cs->iif;
 	                         ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#915: FILE: drivers/isdn/gigaset/capi.c:715:
+	struct gigaset_capi_ctr *iif = cs->iif;
 	                                   ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#947: FILE: drivers/isdn/gigaset/capi.c:747:
+	struct gigaset_capi_ctr *iif = cs->iif;
 	                         ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#947: FILE: drivers/isdn/gigaset/capi.c:747:
+	struct gigaset_capi_ctr *iif = cs->iif;
 	                                   ^^^

CHECK:CAMELCASE: Avoid CamelCase: <CapiCallGivenToOtherApplication>
#961: FILE: drivers/isdn/gigaset/capi.c:761:
+				    CapiCallGivenToOtherApplication);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#988: FILE: drivers/isdn/gigaset/capi.c:788:
+	if (!skb) {
+		dev_err(cs->dev, "%s: out of memory\n", __func__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ap"
#1012: FILE: drivers/isdn/gigaset/capi.c:812:
+	for (ap = bcs->ap; ap != NULL; ap = ap->bcnext) {

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1029: FILE: drivers/isdn/gigaset/capi.c:829:
+	struct gigaset_capi_ctr *iif = cs->iif;
 	                         ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1029: FILE: drivers/isdn/gigaset/capi.c:829:
+	struct gigaset_capi_ctr *iif = cs->iif;
 	                                   ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1111: FILE: drivers/isdn/gigaset/capi.c:911:
+	struct gigaset_capi_ctr *iif = cs->iif;
 	                         ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1111: FILE: drivers/isdn/gigaset/capi.c:911:
+	struct gigaset_capi_ctr *iif = cs->iif;
 	                                   ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1146: FILE: drivers/isdn/gigaset/capi.c:946:
+	struct gigaset_capi_ctr *iif = cs->iif;
 	                         ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1146: FILE: drivers/isdn/gigaset/capi.c:946:
+	struct gigaset_capi_ctr *iif = cs->iif;
 	                                   ^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1147: FILE: drivers/isdn/gigaset/capi.c:947:
+	struct gigaset_capi_ctr *iif = cs->iif;
+	capi_ctr_down(&iif->ctr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1183: FILE: drivers/isdn/gigaset/capi.c:983:
+static void gigaset_register_appl(struct capi_ctr *ctr, u16 appl,
+			   capi_register_params *rp)

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1185: FILE: drivers/isdn/gigaset/capi.c:985:
+	struct gigaset_capi_ctr *iif
 	                         ^^^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1186: FILE: drivers/isdn/gigaset/capi.c:986:
+	struct gigaset_capi_ctr *iif
+		= container_of(ctr, struct gigaset_capi_ctr, ctr);

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1199: FILE: drivers/isdn/gigaset/capi.c:999:
+	if (!ap) {
+		dev_err(cs->dev, "%s: out of memory\n", __func__);

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1212: FILE: drivers/isdn/gigaset/capi.c:1012:
+	struct gigaset_capi_ctr *iif
 	                         ^^^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1213: FILE: drivers/isdn/gigaset/capi.c:1013:
+	struct gigaset_capi_ctr *iif
+		= container_of(ctr, struct gigaset_capi_ctr, ctr);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1229: FILE: drivers/isdn/gigaset/capi.c:1029:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1240: FILE: drivers/isdn/gigaset/capi.c:1040:
+static void send_conf(struct gigaset_capi_ctr *iif,
                                                ^^^

CHECK:CAMELCASE: Avoid CamelCase: <Info>
#1250: FILE: drivers/isdn/gigaset/capi.c:1050:
+	iif->acmsg.Info = info;

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1260: FILE: drivers/isdn/gigaset/capi.c:1060:
+static void do_facility_req(struct gigaset_capi_ctr *iif,
                                                      ^^^

CHECK:CAMELCASE: Avoid CamelCase: <FacilitySelector>
#1279: FILE: drivers/isdn/gigaset/capi.c:1079:
+	switch (iif->acmsg.FacilitySelector) {

CHECK:CAMELCASE: Avoid CamelCase: <CapiFacilityNotSupported>
#1281: FILE: drivers/isdn/gigaset/capi.c:1081:
+		info = CapiFacilityNotSupported;

CHECK:CAMELCASE: Avoid CamelCase: <FacilityRequestParameter>
#1296: FILE: drivers/isdn/gigaset/capi.c:1096:
+		pparam = iif->acmsg.FacilityRequestParameter;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pparam"
#1297: FILE: drivers/isdn/gigaset/capi.c:1097:
+		if (pparam == NULL || *pparam < 2) {

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1300: FILE: drivers/isdn/gigaset/capi.c:1100:
+			send_conf(iif, ap, skb, CapiIllMessageParmCoding);
 			          ^^^

CHECK:CAMELCASE: Avoid CamelCase: <CapiIllMessageParmCoding>
#1300: FILE: drivers/isdn/gigaset/capi.c:1100:
+			send_conf(iif, ap, skb, CapiIllMessageParmCoding);

CHECK:CAMELCASE: Avoid CamelCase: <CapiSuccess>
#1306: FILE: drivers/isdn/gigaset/capi.c:1106:
+			info = CapiSuccess;

CHECK:CAMELCASE: Avoid CamelCase: <CapiSupplementaryServiceNotSupported>
#1321: FILE: drivers/isdn/gigaset/capi.c:1121:
+				       CapiSupplementaryServiceNotSupported);

CHECK:CAMELCASE: Avoid CamelCase: <FacilityConfirmationParameter>
#1346: FILE: drivers/isdn/gigaset/capi.c:1146:
+	iif->acmsg.FacilityConfirmationParameter = confparam;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1358: FILE: drivers/isdn/gigaset/capi.c:1158:
+
+

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1363: FILE: drivers/isdn/gigaset/capi.c:1163:
+static void do_listen_req(struct gigaset_capi_ctr *iif,
                                                    ^^^

CHECK:CAMELCASE: Avoid CamelCase: <InfoMask>
#1372: FILE: drivers/isdn/gigaset/capi.c:1172:
+	ap->listenInfoMask = iif->acmsg.InfoMask;

CHECK:CAMELCASE: Avoid CamelCase: <CIPmask>
#1373: FILE: drivers/isdn/gigaset/capi.c:1173:
+	ap->listenCIPmask = iif->acmsg.CIPmask;

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1374: FILE: drivers/isdn/gigaset/capi.c:1174:
+	send_conf(iif, ap, skb, CapiSuccess);
 	          ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1381: FILE: drivers/isdn/gigaset/capi.c:1181:
+static void do_alert_req(struct gigaset_capi_ctr *iif,
                                                   ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1388: FILE: drivers/isdn/gigaset/capi.c:1188:
+	send_conf(iif, ap, skb, CapiAlertAlreadySent);
 	          ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1396: FILE: drivers/isdn/gigaset/capi.c:1196:
+static void do_connect_req(struct gigaset_capi_ctr *iif,
                                                     ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1418: FILE: drivers/isdn/gigaset/capi.c:1218:
+		send_conf(iif, ap, skb, CapiNoPlciAvailable);
 		          ^^^

CHECK:CAMELCASE: Avoid CamelCase: <CapiNoPlciAvailable>
#1418: FILE: drivers/isdn/gigaset/capi.c:1218:
+		send_conf(iif, ap, skb, CapiNoPlciAvailable);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1426: FILE: drivers/isdn/gigaset/capi.c:1226:
+	commands = kzalloc(AT_NUM*(sizeof *commands), GFP_KERNEL);
 	                         ^

WARNING:SIZEOF_PARENTHESIS: sizeof *commands should be sizeof(*commands)
#1426: FILE: drivers/isdn/gigaset/capi.c:1226:
+	commands = kzalloc(AT_NUM*(sizeof *commands), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pp"
#1432: FILE: drivers/isdn/gigaset/capi.c:1232:
+	if (pp == NULL || *pp == 0) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1461: FILE: drivers/isdn/gigaset/capi.c:1261:
+	commands[AT_DIAL] = kmalloc(l+3, GFP_KERNEL);
 	                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1464: FILE: drivers/isdn/gigaset/capi.c:1264:
+	snprintf(commands[AT_DIAL], l+3, "D%*s\r", l, pp);
 	                             ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pp"
#1468: FILE: drivers/isdn/gigaset/capi.c:1268:
+	if (pp != NULL && *pp > 0) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1514: FILE: drivers/isdn/gigaset/capi.c:1314:
+			commands[AT_MSN] = kmalloc(l+8, GFP_KERNEL);
 			                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1517: FILE: drivers/isdn/gigaset/capi.c:1317:
+			snprintf(commands[AT_MSN], l+8, "^SMSN=%*s\r", l, pp);
 			                            ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cip2bchlc[cmsg->CIPValue].bc"
#1523: FILE: drivers/isdn/gigaset/capi.c:1323:
+	    (cmsg->CIPValue > 0 && cip2bchlc[cmsg->CIPValue].bc == NULL)) {

CHECK:CAMELCASE: Avoid CamelCase: <CapiCipValueUnknown>
#1526: FILE: drivers/isdn/gigaset/capi.c:1326:
+		info = CapiCipValueUnknown;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1533: FILE: drivers/isdn/gigaset/capi.c:1333:
+		l = 2*cmsg->BC[0] + 7;
 		     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1538: FILE: drivers/isdn/gigaset/capi.c:1338:
+		decode_ie(cmsg->BC, commands[AT_BC]+5);
 		                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1552: FILE: drivers/isdn/gigaset/capi.c:1352:
+		l = 2*cmsg->HLC[0] + 7;
 		     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1557: FILE: drivers/isdn/gigaset/capi.c:1357:
+		decode_ie(cmsg->HLC, commands[AT_HLC]+5);
 		                                     ^

CHECK:CAMELCASE: Avoid CamelCase: <BProtocol>
#1569: FILE: drivers/isdn/gigaset/capi.c:1369:
+	if (cmsg->BProtocol == CAPI_DEFAULT) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1572: FILE: drivers/isdn/gigaset/capi.c:1372:
+		dev_warn(cs->dev,
+		    "B2 Protocol X.75 SLP unsupported, using Transparent\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1583: FILE: drivers/isdn/gigaset/capi.c:1383:
+			dev_warn(cs->dev,
+			    "B1 Protocol %u unsupported, using Transparent\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1589: FILE: drivers/isdn/gigaset/capi.c:1389:
+			dev_warn(cs->dev,
+			    "B2 Protocol %u unsupported, using Transparent\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1593: FILE: drivers/isdn/gigaset/capi.c:1393:
+			dev_warn(cs->dev,
+			    "B3 Protocol %u unsupported, using Transparent\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1596: FILE: drivers/isdn/gigaset/capi.c:1396:
+		ignore_cstruct_param(cs, cmsg->B1configuration,
+					"CONNECT_REQ", "B1 Configuration");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1598: FILE: drivers/isdn/gigaset/capi.c:1398:
+		ignore_cstruct_param(cs, cmsg->B2configuration,
+					"CONNECT_REQ", "B2 Configuration");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1600: FILE: drivers/isdn/gigaset/capi.c:1400:
+		ignore_cstruct_param(cs, cmsg->B3configuration,
+					"CONNECT_REQ", "B3 Configuration");

CHECK:CAMELCASE: Avoid CamelCase: <CalledPartySubaddress>
#1608: FILE: drivers/isdn/gigaset/capi.c:1408:
+	ignore_cstruct_param(cs, cmsg->CalledPartySubaddress,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1609: FILE: drivers/isdn/gigaset/capi.c:1409:
+	ignore_cstruct_param(cs, cmsg->CalledPartySubaddress,
+					"CONNECT_REQ", "Called pty subaddr");

CHECK:CAMELCASE: Avoid CamelCase: <CallingPartySubaddress>
#1610: FILE: drivers/isdn/gigaset/capi.c:1410:
+	ignore_cstruct_param(cs, cmsg->CallingPartySubaddress,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1611: FILE: drivers/isdn/gigaset/capi.c:1411:
+	ignore_cstruct_param(cs, cmsg->CallingPartySubaddress,
+					"CONNECT_REQ", "Calling pty subaddr");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1613: FILE: drivers/isdn/gigaset/capi.c:1413:
+	ignore_cstruct_param(cs, cmsg->LLC,
+					"CONNECT_REQ", "LLC");

CHECK:CAMELCASE: Avoid CamelCase: <AdditionalInfo>
#1614: FILE: drivers/isdn/gigaset/capi.c:1414:
+	ignore_cmstruct_param(cs, cmsg->AdditionalInfo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1615: FILE: drivers/isdn/gigaset/capi.c:1415:
+	ignore_cmstruct_param(cs, cmsg->AdditionalInfo,
+					"CONNECT_REQ", "Additional Info");

CHECK:SPACING: No space is necessary after a cast
#1622: FILE: drivers/isdn/gigaset/capi.c:1422:
+		 (unsigned) bcs->channel + 1);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1622: FILE: drivers/isdn/gigaset/capi.c:1422:
+		 (unsigned) bcs->channel + 1);

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1631: FILE: drivers/isdn/gigaset/capi.c:1431:
+	send_conf(iif, ap, skb, CapiSuccess);
 	          ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1643: FILE: drivers/isdn/gigaset/capi.c:1443:
+	send_conf(iif, ap, skb, info);
 	          ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1650: FILE: drivers/isdn/gigaset/capi.c:1450:
+static void do_connect_resp(struct gigaset_capi_ctr *iif,
                                                      ^^^

CHECK:CAMELCASE: Avoid CamelCase: <Reject>
#1674: FILE: drivers/isdn/gigaset/capi.c:1474:
+	switch (cmsg->Reject) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "oap"
#1677: FILE: drivers/isdn/gigaset/capi.c:1477:
+		for (oap = bcs->ap; oap != NULL; oap = oap->bcnext)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1680: FILE: drivers/isdn/gigaset/capi.c:1480:
+				send_disconnect_ind(bcs, oap,
+					CapiCallGivenToOtherApplication);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1689: FILE: drivers/isdn/gigaset/capi.c:1489:
+			dev_warn(cs->dev,
+		"B2 Protocol X.75 SLP unsupported, using Transparent\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1700: FILE: drivers/isdn/gigaset/capi.c:1500:
+				dev_warn(cs->dev,
+			"B1 Protocol %u unsupported, using Transparent\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1706: FILE: drivers/isdn/gigaset/capi.c:1506:
+				dev_warn(cs->dev,
+			"B2 Protocol %u unsupported, using Transparent\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1710: FILE: drivers/isdn/gigaset/capi.c:1510:
+				dev_warn(cs->dev,
+			"B3 Protocol %u unsupported, using Transparent\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1713: FILE: drivers/isdn/gigaset/capi.c:1513:
+			ignore_cstruct_param(cs, cmsg->B1configuration,
+					"CONNECT_RESP", "B1 Configuration");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1715: FILE: drivers/isdn/gigaset/capi.c:1515:
+			ignore_cstruct_param(cs, cmsg->B2configuration,
+					"CONNECT_RESP", "B2 Configuration");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1717: FILE: drivers/isdn/gigaset/capi.c:1517:
+			ignore_cstruct_param(cs, cmsg->B3configuration,
+					"CONNECT_RESP", "B3 Configuration");

CHECK:CAMELCASE: Avoid CamelCase: <ConnectedNumber>
#1721: FILE: drivers/isdn/gigaset/capi.c:1521:
+		ignore_cstruct_param(cs, cmsg->ConnectedNumber,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1722: FILE: drivers/isdn/gigaset/capi.c:1522:
+		ignore_cstruct_param(cs, cmsg->ConnectedNumber,
+					"CONNECT_RESP", "Connected Number");

CHECK:CAMELCASE: Avoid CamelCase: <ConnectedSubaddress>
#1723: FILE: drivers/isdn/gigaset/capi.c:1523:
+		ignore_cstruct_param(cs, cmsg->ConnectedSubaddress,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1724: FILE: drivers/isdn/gigaset/capi.c:1524:
+		ignore_cstruct_param(cs, cmsg->ConnectedSubaddress,
+					"CONNECT_RESP", "Connected Subaddress");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1726: FILE: drivers/isdn/gigaset/capi.c:1526:
+		ignore_cstruct_param(cs, cmsg->LLC,
+					"CONNECT_RESP", "LLC");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1728: FILE: drivers/isdn/gigaset/capi.c:1528:
+		ignore_cmstruct_param(cs, cmsg->AdditionalInfo,
+					"CONNECT_RESP", "Additional Info");

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1731: FILE: drivers/isdn/gigaset/capi.c:1531:
+		if (!gigaset_add_event(cs, &cs->bcs[channel-1].at_state,
 		                                           ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bcs->ap"
#1745: FILE: drivers/isdn/gigaset/capi.c:1545:
+			if (bcs->ap == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "oap"
#1750: FILE: drivers/isdn/gigaset/capi.c:1550:
+		for (oap = bcs->ap; oap != NULL; oap = oap->bcnext) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "oap"
#1762: FILE: drivers/isdn/gigaset/capi.c:1562:
+		for (oap = bcs->ap; oap != NULL; oap = oap->bcnext)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1765: FILE: drivers/isdn/gigaset/capi.c:1565:
+				send_disconnect_ind(bcs, oap,
+					CapiCallGivenToOtherApplication);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1772: FILE: drivers/isdn/gigaset/capi.c:1572:
+		if (!gigaset_add_event(cs, &cs->bcs[channel-1].at_state,
 		                                           ^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1785: FILE: drivers/isdn/gigaset/capi.c:1585:
+static void do_connect_b3_req(struct gigaset_capi_ctr *iif,
                                                        ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1801: FILE: drivers/isdn/gigaset/capi.c:1601:
+		send_conf(iif, ap, skb, CapiIllContrPlciNcci);
 		          ^^^

CHECK:CAMELCASE: Avoid CamelCase: <CapiIllContrPlciNcci>
#1801: FILE: drivers/isdn/gigaset/capi.c:1601:
+		send_conf(iif, ap, skb, CapiIllContrPlciNcci);

CHECK:CAMELCASE: Avoid CamelCase: <adrNCCI>
#1809: FILE: drivers/isdn/gigaset/capi.c:1609:
+	iif->acmsg.adr.adrNCCI |= 1 << 16;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1813: FILE: drivers/isdn/gigaset/capi.c:1613:
+	ignore_cstruct_param(cs, iif->acmsg.NCPI,
+				"CONNECT_B3_REQ", "NCPI");

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1814: FILE: drivers/isdn/gigaset/capi.c:1614:
+	send_conf(iif, ap, skb,
 	          ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1826: FILE: drivers/isdn/gigaset/capi.c:1626:
+static void do_connect_b3_resp(struct gigaset_capi_ctr *iif,
                                                         ^^^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1849: FILE: drivers/isdn/gigaset/capi.c:1649:
+	bcs = &cs->bcs[channel-1];
 	                      ^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1889: FILE: drivers/isdn/gigaset/capi.c:1689:
+static void do_disconnect_req(struct gigaset_capi_ctr *iif,
                                                        ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1908: FILE: drivers/isdn/gigaset/capi.c:1708:
+		send_conf(iif, ap, skb, CapiIllContrPlciNcci);
 		          ^^^

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1930: FILE: drivers/isdn/gigaset/capi.c:1730:
+		if (!b3cmsg) {
+			dev_err(cs->dev, "%s: out of memory\n", __func__);

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1931: FILE: drivers/isdn/gigaset/capi.c:1731:
+			send_conf(iif, ap, skb, CAPI_MSGOSRESOURCEERR);
 			          ^^^

CHECK:CAMELCASE: Avoid CamelCase: <Reason_B3>
#1937: FILE: drivers/isdn/gigaset/capi.c:1737:
+		b3cmsg->Reason_B3 = CapiProtocolErrorLayer1;

CHECK:CAMELCASE: Avoid CamelCase: <CapiProtocolErrorLayer1>
#1937: FILE: drivers/isdn/gigaset/capi.c:1737:
+		b3cmsg->Reason_B3 = CapiProtocolErrorLayer1;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!b3skb"
#1939: FILE: drivers/isdn/gigaset/capi.c:1739:
+		if (b3skb == NULL) {

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1941: FILE: drivers/isdn/gigaset/capi.c:1741:
+			send_conf(iif, ap, skb, CAPI_MSGOSRESOURCEERR);
 			          ^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1945: FILE: drivers/isdn/gigaset/capi.c:1745:
+		capi_cmsg2message(b3cmsg,
+			__skb_put(b3skb, CAPI_DISCONNECT_B3_IND_BASELEN));

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1953: FILE: drivers/isdn/gigaset/capi.c:1753:
+		send_conf(iif, ap, skb, CAPI_MSGOSRESOURCEERR);
 		          ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1960: FILE: drivers/isdn/gigaset/capi.c:1760:
+	send_conf(iif, ap, skb, CapiSuccess);
 	          ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1967: FILE: drivers/isdn/gigaset/capi.c:1767:
+static void do_disconnect_b3_req(struct gigaset_capi_ctr *iif,
                                                           ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1984: FILE: drivers/isdn/gigaset/capi.c:1784:
+		send_conf(iif, ap, skb, CapiIllContrPlciNcci);
 		          ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1990: FILE: drivers/isdn/gigaset/capi.c:1790:
+		send_conf(iif, ap, skb,
 		          ^^^

CHECK:CAMELCASE: Avoid CamelCase: <CapiMessageNotSupportedInCurrentState>
#1991: FILE: drivers/isdn/gigaset/capi.c:1791:
+			  CapiMessageNotSupportedInCurrentState);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1996: FILE: drivers/isdn/gigaset/capi.c:1796:
+	if (!gigaset_add_event(cs, &cs->bcs[channel-1].at_state,
 	                                           ^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1999: FILE: drivers/isdn/gigaset/capi.c:1799:
+		send_conf(iif, ap, skb, CAPI_MSGOSRESOURCEERR);
 		          ^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2007: FILE: drivers/isdn/gigaset/capi.c:1807:
+	ignore_cstruct_param(cs, iif->acmsg.NCPI,
+				"DISCONNECT_B3_REQ", "NCPI");

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#2008: FILE: drivers/isdn/gigaset/capi.c:1808:
+	send_conf(iif, ap, skb,
 	          ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#2016: FILE: drivers/isdn/gigaset/capi.c:1816:
+static void do_data_b3_req(struct gigaset_capi_ctr *iif,
                                                     ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#2038: FILE: drivers/isdn/gigaset/capi.c:1838:
+		send_conf(iif, ap, skb, CapiIllContrPlciNcci);
 		          ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#2049: FILE: drivers/isdn/gigaset/capi.c:1849:
+		send_conf(iif, ap, skb, CapiIllMessageParmCoding); /* ? */
 		          ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#2055: FILE: drivers/isdn/gigaset/capi.c:1855:
+		send_conf(iif, ap, skb, CapiIllMessageParmCoding);
 		          ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#2061: FILE: drivers/isdn/gigaset/capi.c:1861:
+		send_conf(iif, ap, skb, CapiMessageNotSupportedInCurrentState);
 		          ^^^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2071: FILE: drivers/isdn/gigaset/capi.c:1871:
+	if (cs->ops->send_skb(&cs->bcs[channel-1], skb) < 0) {
 	                                      ^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#2072: FILE: drivers/isdn/gigaset/capi.c:1872:
+		send_conf(iif, ap, skb, CAPI_MSGOSRESOURCEERR);
 		          ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#2088: FILE: drivers/isdn/gigaset/capi.c:1888:
+static void do_reset_b3_req(struct gigaset_capi_ctr *iif,
                                                      ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#2095: FILE: drivers/isdn/gigaset/capi.c:1895:
+	send_conf(iif, ap, skb,
 	          ^^^

CHECK:CAMELCASE: Avoid CamelCase: <CapiResetProcedureNotSupportedByCurrentProtocol>
#2096: FILE: drivers/isdn/gigaset/capi.c:1896:
+		  CapiResetProcedureNotSupportedByCurrentProtocol);

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#2108: FILE: drivers/isdn/gigaset/capi.c:1908:
+static void do_unsupported(struct gigaset_capi_ctr *iif,
                                                     ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#2116: FILE: drivers/isdn/gigaset/capi.c:1916:
+	send_conf(iif, ap, skb, CapiMessageNotSupportedInCurrentState);
 	          ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#2122: FILE: drivers/isdn/gigaset/capi.c:1922:
+static void do_nothing(struct gigaset_capi_ctr *iif,
                                                 ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#2134: FILE: drivers/isdn/gigaset/capi.c:1934:
+static void do_data_b3_resp(struct gigaset_capi_ctr *iif,
                                                      ^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2199: FILE: drivers/isdn/gigaset/capi.c:1999:
+
+

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#2211: FILE: drivers/isdn/gigaset/capi.c:2011:
+	struct gigaset_capi_ctr *iif
 	                         ^^^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#2212: FILE: drivers/isdn/gigaset/capi.c:2012:
+	struct gigaset_capi_ctr *iif
+		= container_of(ctr, struct gigaset_capi_ctr, ctr);

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#2224: FILE: drivers/isdn/gigaset/capi.c:2024:
+	ap = get_appl(iif, CAPIMSG_APPID(skb->data));
 	              ^^^

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#2235: FILE: drivers/isdn/gigaset/capi.c:2035:
+		if (printk_ratelimit())

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#2249: FILE: drivers/isdn/gigaset/capi.c:2049:
+	handler(iif, ap, skb);
 	        ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#2259: FILE: drivers/isdn/gigaset/capi.c:2059:
+		ap = get_appl(iif, CAPIMSG_APPID(skb->data));
 		              ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#2273: FILE: drivers/isdn/gigaset/capi.c:2073:
+		handler(iif, ap, skb);
 		        ^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2302: FILE: drivers/isdn/gigaset/capi.c:2102:
+static int gigaset_ctr_read_proc(char *page, char **start, off_t off,
+			  int count, int *eof, struct capi_ctr *ctr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2308: FILE: drivers/isdn/gigaset/capi.c:2108:
+	int len = 0;
+	len += sprintf(page+len, "%-16s %s\n", "name", ctr->name);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2308: FILE: drivers/isdn/gigaset/capi.c:2108:
+	len += sprintf(page+len, "%-16s %s\n", "name", ctr->name);
 	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2309: FILE: drivers/isdn/gigaset/capi.c:2109:
+	len += sprintf(page+len, "%-16s %s %s\n", "dev",
 	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2311: FILE: drivers/isdn/gigaset/capi.c:2111:
+	len += sprintf(page+len, "%-16s %d\n", "id", cs->myid);
 	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2313: FILE: drivers/isdn/gigaset/capi.c:2113:
+		len += sprintf(page+len, "%-16s %d.%d.%d.%d\n", "firmware",
 		                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2315: FILE: drivers/isdn/gigaset/capi.c:2115:
+	len += sprintf(page+len, "%-16s %d\n", "channels",
 	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2317: FILE: drivers/isdn/gigaset/capi.c:2117:
+	len += sprintf(page+len, "%-16s %s\n", "onechannel",
 	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2336: FILE: drivers/isdn/gigaset/capi.c:2136:
+	len += sprintf(page+len, "%-16s %s\n", "mode", s);
 	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2360: FILE: drivers/isdn/gigaset/capi.c:2160:
+	len += sprintf(page+len, "%-16s %s\n", "mstate", s);
 	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2362: FILE: drivers/isdn/gigaset/capi.c:2162:
+	len += sprintf(page+len, "%-16s %s\n", "running",
 	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2364: FILE: drivers/isdn/gigaset/capi.c:2164:
+	len += sprintf(page+len, "%-16s %s\n", "connected",
 	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2366: FILE: drivers/isdn/gigaset/capi.c:2166:
+	len += sprintf(page+len, "%-16s %s\n", "isdn_up",
 	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2368: FILE: drivers/isdn/gigaset/capi.c:2168:
+	len += sprintf(page+len, "%-16s %s\n", "cidmode",
 	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2372: FILE: drivers/isdn/gigaset/capi.c:2172:
+		len += sprintf(page+len, "[%d]%-13s %d\n", i, "corrupted",
 		                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2374: FILE: drivers/isdn/gigaset/capi.c:2174:
+		len += sprintf(page+len, "[%d]%-13s %d\n", i, "trans_down",
 		                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2376: FILE: drivers/isdn/gigaset/capi.c:2176:
+		len += sprintf(page+len, "[%d]%-13s %d\n", i, "trans_up",
 		                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2378: FILE: drivers/isdn/gigaset/capi.c:2178:
+		len += sprintf(page+len, "[%d]%-13s %d\n", i, "chstate",
 		                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2393: FILE: drivers/isdn/gigaset/capi.c:2193:
+		len += sprintf(page+len, "[%d]%-13s %s\n", i, "proto2", s);
 		                   ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2398: FILE: drivers/isdn/gigaset/capi.c:2198:
+
+

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#2415: FILE: drivers/isdn/gigaset/capi.c:2215:
+	struct gigaset_capi_ctr *iif;
 	                         ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#2420: FILE: drivers/isdn/gigaset/capi.c:2220:
+	iif = kmalloc(sizeof(*iif), GFP_KERNEL);
 	^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#2420: FILE: drivers/isdn/gigaset/capi.c:2220:
+	iif = kmalloc(sizeof(*iif), GFP_KERNEL);
 	                      ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#2421: FILE: drivers/isdn/gigaset/capi.c:2221:
+	if (!iif) {
 	     ^^^

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#2422: FILE: drivers/isdn/gigaset/capi.c:2222:
+	if (!iif) {
+		pr_err("%s: out of memory\n", __func__);

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#2450: FILE: drivers/isdn/gigaset/capi.c:2250:
+		kfree(iif);
 		      ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#2454: FILE: drivers/isdn/gigaset/capi.c:2254:
+	cs->iif = iif;
 	    ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#2454: FILE: drivers/isdn/gigaset/capi.c:2254:
+	cs->iif = iif;
 	          ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#2467: FILE: drivers/isdn/gigaset/capi.c:2267:
+	struct gigaset_capi_ctr *iif = cs->iif;
 	                         ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#2467: FILE: drivers/isdn/gigaset/capi.c:2267:
+	struct gigaset_capi_ctr *iif = cs->iif;
 	                                   ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#2470: FILE: drivers/isdn/gigaset/capi.c:2270:
+	kfree(iif);
 	      ^^^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#2471: FILE: drivers/isdn/gigaset/capi.c:2271:
+	cs->iif = NULL;
 	    ^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2528: FILE: drivers/isdn/gigaset/ev-layer.c:294:
+	{RSP_NULL,    605, 605, -1,               606, 5, {ACT_CMD+AT_CLIP} },
 	                                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2529: FILE: drivers/isdn/gigaset/ev-layer.c:295:
+	{RSP_OK,      605, 605, -1,               606, 5, {ACT_CMD+AT_CLIP} },
 	                                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2530: FILE: drivers/isdn/gigaset/ev-layer.c:296:
+	{RSP_NULL,    606, 606, -1,               607, 5, {ACT_CMD+AT_ISO} },
 	                                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2531: FILE: drivers/isdn/gigaset/ev-layer.c:297:
+	{RSP_OK,      606, 606, -1,               607, 5, {ACT_CMD+AT_ISO} },
 	                                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2534: FILE: drivers/isdn/gigaset/ev-layer.c:300:
+	{RSP_ZSAU,    609, 609, ZSAU_PROCEEDING,  610, 5, {ACT_CMD+AT_DIAL} },
 	                                                          ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000063094.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 97 warnings, 191 checks, 2495 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000063094.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
