WARNING:LEADING_SPACE: please, no spaces at the start of a line
#64: FILE: drivers/char/nozomi.c:801:
+       size = kfifo_get(&port->fifo_ul, dc->send_buf,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#65: FILE: drivers/char/nozomi.c:802:
+       size = kfifo_get(&port->fifo_ul, dc->send_buf,
                           ul_size < SEND_BUF_MAX ? ul_size : SEND_BUF_MAX);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#70: FILE: drivers/char/nozomi.c:989:
        } else if (old_ctrl.CTS == 0 && ctrl_dl.CTS == 1) {
[...]
+               if (kfifo_len(&dc->port[port].fifo_ul)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#73: FILE: drivers/char/nozomi.c:991:
+               if (kfifo_len(&dc->port[port].fifo_ul)) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: drivers/char/nozomi.c:991:
+               if (kfifo_len(&dc->port[port].fifo_ul)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#73: FILE: drivers/char/nozomi.c:991:
+               if (kfifo_len(&dc->port[port].fifo_ul)) {
                        DBG1("Enable interrupt (0x%04X) on port: %d",

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: drivers/char/nozomi.c:995:
+                               kfifo_len(&dc->port[port].fifo_ul));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: drivers/char/nozomi.c:995:
+                               kfifo_len(&dc->port[port].fifo_ul));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: drivers/char/nozomi.c:1675:
+       rval = kfifo_put(&port->fifo_ul, (unsigned char *)buffer, count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: drivers/char/nozomi.c:1723:
+       room = port->fifo_ul.size - kfifo_len(&port->fifo_ul);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: drivers/char/nozomi.c:1880:
+       rval = kfifo_len(&port->fifo_ul);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#115: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:61:
        for (i = 0; i < skip_low + skip_high; i++)
+               kfifo_put(fifo, (unsigned char *) &entry, sizeof(u32));

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:62:
+               kfifo_put(fifo, (unsigned char *) &entry, sizeof(u32));$

CHECK:SPACING: No space is necessary after a cast
#117: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:62:
+               kfifo_put(fifo, (unsigned char *) &entry, sizeof(u32));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:62:
+               kfifo_put(fifo, (unsigned char *) &entry, sizeof(u32));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:74:
+                       kfifo_put(fifo,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:74:
+                       kfifo_put(fifo,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#127: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:75:
+                       kfifo_put(fifo,
                                (unsigned char *) &rarray[idx],

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#132: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:80:
                for (i = 0; i < RANDOM_SIZE; i++)
+                       kfifo_put(fifo,

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:81:
+                       kfifo_put(fifo,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:81:
+                       kfifo_put(fifo,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#135: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:82:
+                       kfifo_put(fifo,
                                (unsigned char *) &rarray[i],

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#138: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:85:
                for (i = skip_low; i < nr - skip_high; i++)
+                       kfifo_put(fifo, (unsigned char *) &i, sizeof(u32));

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:86:
+                       kfifo_put(fifo, (unsigned char *) &i, sizeof(u32));$

CHECK:SPACING: No space is necessary after a cast
#140: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:86:
+                       kfifo_put(fifo, (unsigned char *) &i, sizeof(u32));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:86:
+                       kfifo_put(fifo, (unsigned char *) &i, sizeof(u32));$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#147: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:121:
                if (!(i & rdev_p->qpmask))
+                       kfifo_put(&rdev_p->rscp->qpid_fifo,

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:122:
+                       kfifo_put(&rdev_p->rscp->qpid_fifo,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:122:
+                       kfifo_put(&rdev_p->rscp->qpid_fifo,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:123:
+                       kfifo_put(&rdev_p->rscp->qpid_fifo,
                                    (unsigned char *) &i, sizeof(u32));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: drivers/net/wireless/libertas/cmd.c:1872:
+       if (!kfifo_len(&priv->event_fifo) && !priv->resp_len[priv->resp_idx])$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#161: FILE: drivers/net/wireless/libertas/cmd.c:1872:
+       if (!kfifo_len(&priv->event_fifo) && !priv->resp_len[priv->resp_idx])
                priv->psstate = PS_STATE_SLEEP;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: drivers/net/wireless/libertas/cmd.c:1946:
+       if (kfifo_len(&priv->event_fifo) || priv->resp_len[priv->resp_idx]) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#170: FILE: drivers/net/wireless/libertas/cmd.c:1946:
+       if (kfifo_len(&priv->event_fifo) || priv->resp_len[priv->resp_idx]) {
                allowed = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: drivers/net/wireless/libertas/main.c:775:
+               else if (kfifo_len(&priv->event_fifo))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: drivers/net/wireless/libertas/main.c:775:
+               else if (kfifo_len(&priv->event_fifo))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#182: FILE: drivers/net/wireless/libertas/main.c:775:
+               else if (kfifo_len(&priv->event_fifo))
                        shouldsleep = 0;        /* We have an event to process */

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: drivers/net/wireless/libertas/main.c:854:
+               while (kfifo_len(&priv->event_fifo)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: drivers/net/wireless/libertas/main.c:854:
+               while (kfifo_len(&priv->event_fifo)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#191: FILE: drivers/net/wireless/libertas/main.c:854:
+               while (kfifo_len(&priv->event_fifo)) {
                        u32 event;

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: drivers/net/wireless/libertas/main.c:857:
+                       kfifo_get(&priv->event_fifo, (unsigned char *) &event,$

CHECK:SPACING: No space is necessary after a cast
#195: FILE: drivers/net/wireless/libertas/main.c:857:
+                       kfifo_get(&priv->event_fifo, (unsigned char *) &event,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: drivers/net/wireless/libertas/main.c:857:
+                       kfifo_get(&priv->event_fifo, (unsigned char *) &event,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#196: FILE: drivers/net/wireless/libertas/main.c:858:
+                       kfifo_get(&priv->event_fifo, (unsigned char *) &event,
                                sizeof(event));

CHECK:SPACING: No space is necessary after a cast
#204: FILE: drivers/net/wireless/libertas/main.c:1582:
+       kfifo_put(&priv->event_fifo, (unsigned char *) &event, sizeof(u32));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: drivers/net/wireless/libertas/main.c:1582:
+       kfifo_put(&priv->event_fifo, (unsigned char *) &event, sizeof(u32));$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#214: FILE: drivers/platform/x86/sony-laptop.c:2109:
        if (atomic_inc_return(&sonypi_compat.open_count) == 1)
+               kfifo_reset(&sonypi_compat.fifo);

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: drivers/platform/x86/sony-laptop.c:2110:
+               kfifo_reset(&sonypi_compat.fifo);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: drivers/platform/x86/sony-laptop.c:2110:
+               kfifo_reset(&sonypi_compat.fifo);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: drivers/scsi/libiscsi.c:434:
+       kfifo_put(&session->cmdpool.queue, (void*)&task, sizeof(void*));$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#228: FILE: drivers/scsi/libiscsi.c:434:
+       kfifo_put(&session->cmdpool.queue, (void*)&task, sizeof(void*));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#228: FILE: drivers/scsi/libiscsi.c:434:
+       kfifo_put(&session->cmdpool.queue, (void*)&task, sizeof(void*));

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: drivers/scsi/libiscsi.c:645:
+               if (!kfifo_get(&session->cmdpool.queue,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: drivers/scsi/libiscsi.c:645:
+               if (!kfifo_get(&session->cmdpool.queue,$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#237: FILE: drivers/scsi/libiscsi.c:645:
+               if (!kfifo_get(&session->cmdpool.queue,
[...]
                        return NULL;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#238: FILE: drivers/scsi/libiscsi.c:646:
+               if (!kfifo_get(&session->cmdpool.queue,
                                 (void*)&task, sizeof(void*)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: drivers/scsi/libiscsi.c:1476:
+       if (!kfifo_get(&conn->session->cmdpool.queue,$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#246: FILE: drivers/scsi/libiscsi.c:1476:
+       if (!kfifo_get(&conn->session->cmdpool.queue,
[...]
                return NULL;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#247: FILE: drivers/scsi/libiscsi.c:1477:
+       if (!kfifo_get(&conn->session->cmdpool.queue,
                         (void *) &task, sizeof(void *)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#255: FILE: drivers/scsi/libiscsi.c:2263:
+               kfifo_put(&q->queue, (void*)&q->pool[i], sizeof(void*));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: drivers/scsi/libiscsi.c:2263:
+               kfifo_put(&q->queue, (void*)&q->pool[i], sizeof(void*));$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#255: FILE: drivers/scsi/libiscsi.c:2263:
+               kfifo_put(&q->queue, (void*)&q->pool[i], sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#255: FILE: drivers/scsi/libiscsi.c:2263:
+               kfifo_put(&q->queue, (void*)&q->pool[i], sizeof(void*));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: drivers/scsi/libiscsi.c:2612:
+       if (!kfifo_get(&session->cmdpool.queue,$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#264: FILE: drivers/scsi/libiscsi.c:2612:
+       if (!kfifo_get(&session->cmdpool.queue,
[...]
                spin_unlock_bh(&session->lock);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#265: FILE: drivers/scsi/libiscsi.c:2613:
+       if (!kfifo_get(&session->cmdpool.queue,
                          (void*)&conn->login_task,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: drivers/scsi/libiscsi.c:2632:
+       kfifo_put(&session->cmdpool.queue, (void*)&conn->login_task,$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#273: FILE: drivers/scsi/libiscsi.c:2632:
+       kfifo_put(&session->cmdpool.queue, (void*)&conn->login_task,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: drivers/scsi/libiscsi.c:2633:
+       kfifo_put(&session->cmdpool.queue, (void*)&conn->login_task,
                    sizeof(void*));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: drivers/scsi/libiscsi.c:2695:
+       kfifo_put(&session->cmdpool.queue, (void*)&conn->login_task,$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#282: FILE: drivers/scsi/libiscsi.c:2695:
+       kfifo_put(&session->cmdpool.queue, (void*)&conn->login_task,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#283: FILE: drivers/scsi/libiscsi.c:2696:
+       kfifo_put(&session->cmdpool.queue, (void*)&conn->login_task,
                    sizeof(void*));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: drivers/scsi/libiscsi_tcp.c:448:
+       while (kfifo_get(&tcp_task->r2tqueue, (void*)&r2t, sizeof(void*))) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#295: FILE: drivers/scsi/libiscsi_tcp.c:448:
+       while (kfifo_get(&tcp_task->r2tqueue, (void*)&r2t, sizeof(void*))) {
+               kfifo_put(&tcp_task->r2tpool.queue, (void*)&r2t,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#295: FILE: drivers/scsi/libiscsi_tcp.c:448:
+       while (kfifo_get(&tcp_task->r2tqueue, (void*)&r2t, sizeof(void*))) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#295: FILE: drivers/scsi/libiscsi_tcp.c:448:
+       while (kfifo_get(&tcp_task->r2tqueue, (void*)&r2t, sizeof(void*))) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#296: FILE: drivers/scsi/libiscsi_tcp.c:449:
+               kfifo_put(&tcp_task->r2tpool.queue, (void*)&r2t,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: drivers/scsi/libiscsi_tcp.c:449:
+               kfifo_put(&tcp_task->r2tpool.queue, (void*)&r2t,$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#296: FILE: drivers/scsi/libiscsi_tcp.c:449:
+               kfifo_put(&tcp_task->r2tpool.queue, (void*)&r2t,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#297: FILE: drivers/scsi/libiscsi_tcp.c:450:
+               kfifo_put(&tcp_task->r2tpool.queue, (void*)&r2t,
                            sizeof(void*));

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#302: FILE: drivers/scsi/libiscsi_tcp.c:455:
        if (r2t != NULL) {
+               kfifo_put(&tcp_task->r2tpool.queue, (void*)&r2t,

ERROR:CODE_INDENT: code indent should use tabs where possible
#304: FILE: drivers/scsi/libiscsi_tcp.c:456:
+               kfifo_put(&tcp_task->r2tpool.queue, (void*)&r2t,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: drivers/scsi/libiscsi_tcp.c:456:
+               kfifo_put(&tcp_task->r2tpool.queue, (void*)&r2t,$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#304: FILE: drivers/scsi/libiscsi_tcp.c:456:
+               kfifo_put(&tcp_task->r2tpool.queue, (void*)&r2t,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#305: FILE: drivers/scsi/libiscsi_tcp.c:457:
+               kfifo_put(&tcp_task->r2tpool.queue, (void*)&r2t,
                            sizeof(void*));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: drivers/scsi/libiscsi_tcp.c:544:
+       rc = kfifo_get(&tcp_task->r2tpool.queue, (void*)&r2t, sizeof(void*));$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#313: FILE: drivers/scsi/libiscsi_tcp.c:544:
+       rc = kfifo_get(&tcp_task->r2tpool.queue, (void*)&r2t, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#313: FILE: drivers/scsi/libiscsi_tcp.c:544:
+       rc = kfifo_get(&tcp_task->r2tpool.queue, (void*)&r2t, sizeof(void*));

ERROR:CODE_INDENT: code indent should use tabs where possible
#322: FILE: drivers/scsi/libiscsi_tcp.c:557:
+               kfifo_put(&tcp_task->r2tpool.queue, (void*)&r2t,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: drivers/scsi/libiscsi_tcp.c:557:
+               kfifo_put(&tcp_task->r2tpool.queue, (void*)&r2t,$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#322: FILE: drivers/scsi/libiscsi_tcp.c:557:
+               kfifo_put(&tcp_task->r2tpool.queue, (void*)&r2t,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#323: FILE: drivers/scsi/libiscsi_tcp.c:558:
+               kfifo_put(&tcp_task->r2tpool.queue, (void*)&r2t,
                            sizeof(void*));

ERROR:CODE_INDENT: code indent should use tabs where possible
#331: FILE: drivers/scsi/libiscsi_tcp.c:573:
+               kfifo_put(&tcp_task->r2tpool.queue, (void*)&r2t,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: drivers/scsi/libiscsi_tcp.c:573:
+               kfifo_put(&tcp_task->r2tpool.queue, (void*)&r2t,$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#331: FILE: drivers/scsi/libiscsi_tcp.c:573:
+               kfifo_put(&tcp_task->r2tpool.queue, (void*)&r2t,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#332: FILE: drivers/scsi/libiscsi_tcp.c:574:
+               kfifo_put(&tcp_task->r2tpool.queue, (void*)&r2t,
                            sizeof(void*));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: drivers/scsi/libiscsi_tcp.c:583:
+       kfifo_put(&tcp_task->r2tqueue, (void*)&r2t, sizeof(void*));$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#340: FILE: drivers/scsi/libiscsi_tcp.c:583:
+       kfifo_put(&tcp_task->r2tqueue, (void*)&r2t, sizeof(void*));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#340: FILE: drivers/scsi/libiscsi_tcp.c:583:
+       kfifo_put(&tcp_task->r2tqueue, (void*)&r2t, sizeof(void*));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: drivers/scsi/libiscsi_tcp.c:954:
+       BUG_ON(kfifo_len(&tcp_task->r2tqueue));$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#349: FILE: drivers/scsi/libiscsi_tcp.c:954:
+       BUG_ON(kfifo_len(&tcp_task->r2tqueue));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:CODE_INDENT: code indent should use tabs where possible
#358: FILE: drivers/scsi/libiscsi_tcp.c:985:
+                               kfifo_put(&tcp_task->r2tpool.queue,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: drivers/scsi/libiscsi_tcp.c:985:
+                               kfifo_put(&tcp_task->r2tpool.queue,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#359: FILE: drivers/scsi/libiscsi_tcp.c:986:
+                               kfifo_put(&tcp_task->r2tpool.queue,
                                            (void *)&tcp_task->r2t,

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#365: FILE: drivers/scsi/libiscsi_tcp.c:992:
                if (r2t == NULL) {
+                       kfifo_get(&tcp_task->r2tqueue,

ERROR:CODE_INDENT: code indent should use tabs where possible
#367: FILE: drivers/scsi/libiscsi_tcp.c:993:
+                       kfifo_get(&tcp_task->r2tqueue,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: drivers/scsi/libiscsi_tcp.c:993:
+                       kfifo_get(&tcp_task->r2tqueue,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#368: FILE: drivers/scsi/libiscsi_tcp.c:994:
+                       kfifo_get(&tcp_task->r2tqueue,
                                    (void *)&tcp_task->r2t, sizeof(void *));

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#377: FILE: drivers/scsi/libsrp.c:63:
        for (i = 0, iue = q->items; i < max; i++) {
+               kfifo_put(&q->queue, (void *) &iue, sizeof(void *));

ERROR:CODE_INDENT: code indent should use tabs where possible
#379: FILE: drivers/scsi/libsrp.c:64:
+               kfifo_put(&q->queue, (void *) &iue, sizeof(void *));$

CHECK:SPACING: No space is necessary after a cast
#379: FILE: drivers/scsi/libsrp.c:64:
+               kfifo_put(&q->queue, (void *) &iue, sizeof(void *));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: drivers/scsi/libsrp.c:64:
+               kfifo_put(&q->queue, (void *) &iue, sizeof(void *));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: drivers/usb/host/fhci.h:508:
+       return kfifo_len(kfifo) / sizeof(void *);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: drivers/usb/host/fhci.h:513:
+       return kfifo_put(kfifo, (void *)&p, sizeof(p));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#405: FILE: drivers/usb/host/fhci.h:520:
+       kfifo_get(kfifo, (void *)&p, sizeof(p));$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#415: FILE: drivers/usb/serial/generic.c:278:
        else {
+               start_io = (kfifo_len(port->write_fifo) != 0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#417: FILE: drivers/usb/serial/generic.c:279:
+               start_io = (kfifo_len(port->write_fifo) != 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: drivers/usb/serial/generic.c:279:
+               start_io = (kfifo_len(port->write_fifo) != 0);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#424: FILE: drivers/usb/serial/generic.c:372:
        } else if (serial->num_bulk_out)
+               room = port->write_fifo->size - kfifo_len(port->write_fifo);

ERROR:CODE_INDENT: code indent should use tabs where possible
#426: FILE: drivers/usb/serial/generic.c:373:
+               room = port->write_fifo->size - kfifo_len(port->write_fifo);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: drivers/usb/serial/generic.c:373:
+               room = port->write_fifo->size - kfifo_len(port->write_fifo);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#438: FILE: include/linux/kfifo.h:40:
+extern unsigned int kfifo_put(struct kfifo *fifo,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#439: FILE: include/linux/kfifo.h:41:
+extern unsigned int kfifo_put(struct kfifo *fifo,
                                const unsigned char *buffer, unsigned int len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#441: FILE: include/linux/kfifo.h:42:
+extern unsigned int kfifo_get(struct kfifo *fifo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#442: FILE: include/linux/kfifo.h:43:
+extern unsigned int kfifo_get(struct kfifo *fifo,
                                unsigned char *buffer, unsigned int len);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: include/linux/kfifo.h:51:
+       fifo->in = fifo->out = 0;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#460: FILE: include/linux/kfifo.h:51:
+       fifo->in = fifo->out = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: include/linux/kfifo.h:86:
+       ret = kfifo_put(fifo, from, n);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: include/linux/kfifo.h:111:
+       ret = kfifo_get(fifo, to, n);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#545: FILE: kernel/kfifo.c:162:
+unsigned int kfifo_get(struct kfifo *fifo,
                         unsigned char *buffer, unsigned int len)

ERROR:CODE_INDENT: code indent should use tabs where possible
#562: FILE: net/dccp/probe.c:135:
+                                        kfifo_len(&dccpw.fifo) != 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#562: FILE: net/dccp/probe.c:135:
+                                        kfifo_len(&dccpw.fifo) != 0);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000047563.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 39 errors, 66 warnings, 27 checks, 428 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000047563.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
