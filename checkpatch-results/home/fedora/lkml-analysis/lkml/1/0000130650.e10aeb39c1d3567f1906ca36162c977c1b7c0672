WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#38: FILE: Makefile:4:
+EXTRAVERSION = .10
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: arch/powerpc/kernel/signal.c:34:
+        oldsp = get_clean_sp(regs, is_32);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: arch/powerpc/kernel/signal.c:34:
+        oldsp = get_clean_sp(regs, is_32);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#188: FILE: arch/x86/boot/memory.c:31:
+		/* Important: %edx and %esi are clobbered by some BIOSes,
+		   so they must be either used for the error output

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'initalization' may be misspelled - perhaps 'initialization'?
#240: FILE: arch/x86/kernel/cpu/mtrr/generic.c:53:
+ * to 1 during BIOS initalization of the fixed MTRRs, then cleared to
                     ^^^^^^^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'boot_cpu_data.x86_vendor == X86_VENDOR_AMD'
#247: FILE: arch/x86/kernel/cpu/mtrr/generic.c:60:
+	if (!((boot_cpu_data.x86_vendor == X86_VENDOR_AMD) &&
+	      (boot_cpu_data.x86 >= 0x0f)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'boot_cpu_data.x86 >= 0x0f'
#247: FILE: arch/x86/kernel/cpu/mtrr/generic.c:60:
+	if (!((boot_cpu_data.x86_vendor == X86_VENDOR_AMD) &&
+	      (boot_cpu_data.x86 >= 0x0f)))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#253: FILE: arch/x86/kernel/cpu/mtrr/generic.c:66:
+		printk(KERN_ERR FW_WARN "MTRR: CPU %u: SYSCFG[MtrrFixDramModEn]"

WARNING:SPLIT_STRING: quoted string split across lines
#254: FILE: arch/x86/kernel/cpu/mtrr/generic.c:67:
+		printk(KERN_ERR FW_WARN "MTRR: CPU %u: SYSCFG[MtrrFixDramModEn]"
+		       " not cleared by BIOS, clearing this bit\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#373: FILE: arch/x86/kvm/lapic.c:39:
+#define mod_64(x, y) ((x) - (y) * div64_u64(x, y))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'y' - possible side-effects?
#373: FILE: arch/x86/kvm/lapic.c:39:
+#define mod_64(x, y) ((x) - (y) * div64_u64(x, y))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'level == PT_DIRECTORY_LEVEL'
#592: FILE: arch/x86/kvm/paging_tmpl.h:470:
+	if (level == PT_PAGE_TABLE_LEVEL ||
+	    ((level == PT_DIRECTORY_LEVEL) && is_large_pte(*sptep))) {

CHECK:CAMELCASE: Avoid CamelCase: <SrcNone>
#762: FILE: arch/x86/kvm/x86_emulate.c:302:
+	SrcNone | ModRM, 0, 0, SrcNone | ModRM,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <ModRM>
#762: FILE: arch/x86/kvm/x86_emulate.c:302:
+	SrcNone | ModRM, 0, 0, SrcNone | ModRM,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#774: FILE: arch/x86/pci/i386.c:332:
+		vma->vm_page_prot = __pgprot(

WARNING:TYPO_SPELLING: 'sibiling' may be misspelled - perhaps 'sibling'?
#836: FILE: drivers/acpi/dock.c:1152:
+	list_for_each_entry_safe(dock_station, tmp, &dock_stations, sibiling)
 	                                                            ^^^^^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#960: FILE: drivers/crypto/ixp4xx_crypto.c:312:
+static void free_buf_chain(struct device *dev, struct buffer_desc *buf,u32 phys)
                                                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1021: FILE: drivers/crypto/ixp4xx_crypto.c:739:
+static struct buffer_desc *chainup_buffers(struct device *dev,
+		struct scatterlist *sg,	unsigned nbytes,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1021: FILE: drivers/crypto/ixp4xx_crypto.c:739:
+		struct scatterlist *sg,	unsigned nbytes,

ERROR:SPACING: space required after that ';' (ctx:BxV)
#1037: FILE: drivers/crypto/ixp4xx_crypto.c:743:
+	for (;nbytes > 0; sg = scatterwalk_sg_next(sg)) {
 	     ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1038: FILE: drivers/crypto/ixp4xx_crypto.c:744:
+		unsigned len = min(nbytes, sg->length);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1130: FILE: drivers/crypto/ixp4xx_crypto.c:862:
+		BUG_ON(req->dst->length < nbytes);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1133: FILE: drivers/crypto/ixp4xx_crypto.c:865:
+		if (!chainup_buffers(dev, req->dst, nbytes, &dst_hook,
+					flags, DMA_FROM_DEVICE))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1153: FILE: drivers/crypto/ixp4xx_crypto.c:875:
+	if (!chainup_buffers(dev, req->src, nbytes, &src_hook,
+				flags, src_direction))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1228: FILE: drivers/crypto/ixp4xx_crypto.c:997:
+	buf = chainup_buffers(dev, req->assoc, req->assoclen, &src_hook,
+		flags, DMA_TO_DEVICE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1240: FILE: drivers/crypto/ixp4xx_crypto.c:1006:
+	buf = chainup_buffers(dev, &req_ctx->ivlist, ivsize, buf, flags,
+			DMA_BIDIRECTIONAL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1264: FILE: drivers/crypto/ixp4xx_crypto.c:1026:
+	buf = chainup_buffers(dev, req->src, cryptlen + authsize, buf, flags,
+			DMA_BIDIRECTIONAL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1452: FILE: drivers/md/md.c:3831:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#1663: FILE: drivers/net/bonding/bonding.h:253:
+        return bond->params.mode == BOND_MODE_TLB$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1663: FILE: drivers/net/bonding/bonding.h:253:
+        return bond->params.mode == BOND_MODE_TLB$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1664: FILE: drivers/net/bonding/bonding.h:254:
+                || bond->params.mode == BOND_MODE_ALB;$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1664: FILE: drivers/net/bonding/bonding.h:254:
+        return bond->params.mode == BOND_MODE_TLB
+                || bond->params.mode == BOND_MODE_ALB;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1664: FILE: drivers/net/bonding/bonding.h:254:
+                || bond->params.mode == BOND_MODE_ALB;$

CHECK:CAMELCASE: Avoid CamelCase: <IntrMask>
#1680: FILE: drivers/net/r8169.c:2029:
+	RTL_W16(IntrMask, 0x0000);

CHECK:CAMELCASE: Avoid CamelCase: <IntrStatus>
#1688: FILE: drivers/net/r8169.c:2041:
+	RTL_W16(IntrStatus, 0xffff);

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1728: FILE: drivers/net/wireless/ath9k/core.h:1043:
+	spinlock_t sc_serial_rw;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1737: FILE: drivers/net/wireless/ath9k/core.h:1086:
+/*
+ * Read and write, they both share the same lock. We do this to serialize

CHECK:BRACES: braces {} should be used on all arms of this statement
#1746: FILE: drivers/net/wireless/ath9k/core.h:1095:
+	if (ah->ah_config.serialize_regmode == SER_REG_MODE_ON) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#1748: FILE: drivers/net/wireless/ath9k/core.h:1097:
+		unsigned long flags;
+		spin_lock_irqsave(&ah->ah_sc->sc_serial_rw, flags);

CHECK:BRACES: Unbalanced braces around else statement
#1751: FILE: drivers/net/wireless/ath9k/core.h:1100:
+	} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#1758: FILE: drivers/net/wireless/ath9k/core.h:1107:
+	u32 val;
+	if (ah->ah_config.serialize_regmode == SER_REG_MODE_ON) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1758: FILE: drivers/net/wireless/ath9k/core.h:1107:
+	if (ah->ah_config.serialize_regmode == SER_REG_MODE_ON) {
[...]
+	} else
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#1760: FILE: drivers/net/wireless/ath9k/core.h:1109:
+		unsigned long flags;
+		spin_lock_irqsave(&ah->ah_sc->sc_serial_rw, flags);

CHECK:BRACES: Unbalanced braces around else statement
#1763: FILE: drivers/net/wireless/ath9k/core.h:1112:
+	} else

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1779: FILE: drivers/net/wireless/ath9k/hw.c:351:
+	/*
+	 * We need this for PCI devices only (Cardbus, PCI, miniPCI)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1794: FILE: drivers/net/wireless/ath9k/hw.c:366:
+       if (num_possible_cpus() > 1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1794: FILE: drivers/net/wireless/ath9k/hw.c:366:
+       if (num_possible_cpus() > 1)
+               ah->ah_config.serialize_regmode = SER_REG_MODE_AUTO;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1795: FILE: drivers/net/wireless/ath9k/hw.c:367:
+               ah->ah_config.serialize_regmode = SER_REG_MODE_AUTO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1795: FILE: drivers/net/wireless/ath9k/hw.c:367:
+               ah->ah_config.serialize_regmode = SER_REG_MODE_AUTO;$

CHECK:CAMELCASE: Avoid CamelCase: <ah_macVersion>
#1804: FILE: drivers/net/wireless/ath9k/hw.c:3314:
+		if (ah->ah_macVersion == AR_SREV_VERSION_5416_PCI ||

CHECK:CAMELCASE: Avoid CamelCase: <ah_isPciExpress>
#1805: FILE: drivers/net/wireless/ath9k/hw.c:3315:
+		    (AR_SREV_9280(ah) && !ah->ah_isPciExpress)) {

CHECK:CAMELCASE: Avoid CamelCase: <Sg_request>
#1895: FILE: drivers/scsi/sg.c:193:
+			int read_only, int sg_io_owned, Sg_request **o_srp);

CHECK:CAMELCASE: Avoid CamelCase: <Sg_device>
#1910: FILE: drivers/scsi/sg.c:207:
+static Sg_device *sg_lookup_dev(int dev);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1998: FILE: drivers/scsi/sg.c:565:
+		return sg_new_write(sfp, filp, buf, count,
 		                         ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sfp"
#2123: FILE: drivers/scsi/sg.c:1265:
+	if (WARN_ON(sfp == NULL))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2129: FILE: drivers/scsi/sg.c:1270:
+		printk(KERN_INFO "sg_rq_end_io: device detached\n");

CHECK:BRACES: Unbalanced braces around else statement
#2177: FILE: drivers/scsi/sg.c:1326:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2244: FILE: drivers/scsi/sg.c:1507:
+	SCSI_LOG_TIMEOUT(3,
+		printk("sg_device_destroy: %s\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2244: FILE: drivers/scsi/sg.c:1507:
+		printk("sg_device_destroy: %s\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sg_device_destroy', this function's name, in a string
#2244: FILE: drivers/scsi/sg.c:1507:
+		printk("sg_device_destroy: %s\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2245: FILE: drivers/scsi/sg.c:1508:
+		printk("sg_device_destroy: %s\n",
+			sdp->disk->disk_name));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2267: FILE: drivers/scsi/sg.c:1524:
+	SCSI_LOG_TIMEOUT(3, printk("sg_remove: %s\n", sdp->disk->disk_name));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sg_remove', this function's name, in a string
#2267: FILE: drivers/scsi/sg.c:1524:
+	SCSI_LOG_TIMEOUT(3, printk("sg_remove: %s\n", sdp->disk->disk_name));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2396: FILE: drivers/scsi/sg.c:2069:
+		SCSI_LOG_TIMEOUT(6,
+			printk("sg_remove_sfp:    bufflen=%d, k_use_sg=%d\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2396: FILE: drivers/scsi/sg.c:2069:
+			printk("sg_remove_sfp:    bufflen=%d, k_use_sg=%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2397: FILE: drivers/scsi/sg.c:2070:
+			printk("sg_remove_sfp:    bufflen=%d, k_use_sg=%d\n",
+				(int) sfp->reserve.bufflen,

CHECK:SPACING: No space is necessary after a cast
#2397: FILE: drivers/scsi/sg.c:2070:
+				(int) sfp->reserve.bufflen,

CHECK:SPACING: No space is necessary after a cast
#2398: FILE: drivers/scsi/sg.c:2071:
+				(int) sfp->reserve.k_use_sg));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2403: FILE: drivers/scsi/sg.c:2076:
+	SCSI_LOG_TIMEOUT(6,
+		printk("sg_remove_sfp: %s, sfp=0x%p\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2403: FILE: drivers/scsi/sg.c:2076:
+		printk("sg_remove_sfp: %s, sfp=0x%p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2404: FILE: drivers/scsi/sg.c:2077:
+		printk("sg_remove_sfp: %s, sfp=0x%p\n",
+			sdp->disk->disk_name,

CHECK:BRACES: braces {} should be used on all arms of this statement
#2512: FILE: drivers/scsi/sg.c:2170:
+	if (!sdp)
[...]
+	else if (sdp->detached) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2519: FILE: drivers/scsi/sg.c:2177:
+	} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "fp"
#2581: FILE: drivers/scsi/sg.c:2496:
+	for (k = 0, fp = sdp->headfp; fp != NULL; ++k, fp = fp->nextfp) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "srp"
#2592: FILE: drivers/scsi/sg.c:2508:
+				srp != NULL;

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#2647: FILE: drivers/scsi/sg.c:2574:
+			seq_printf(s, "detached pending close ");

WARNING:SIZEOF_PARENTHESIS: sizeof x should be sizeof(x)
#2683: FILE: drivers/spi/spi.c:674:
+	memset(x, 0, sizeof x);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cp->string"
#2737: FILE: drivers/usb/core/message.c:1640:
+	if (cp->string == NULL &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2738: FILE: drivers/usb/core/message.c:1641:
+	if (cp->string == NULL &&
+			!(dev->quirks & USB_QUIRK_CONFIG_INTF_STRINGS))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!alt->string"
#2774: FILE: drivers/usb/core/sysfs.c:851:
+	if (alt->string == NULL &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2775: FILE: drivers/usb/core/sysfs.c:852:
+	if (alt->string == NULL &&
+			!(udev->quirks & USB_QUIRK_CONFIG_INTF_STRINGS))

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2833: FILE: drivers/usb/host/ehci-q.c:343:
 			if ((token & QTD_STS_HALT) != 0) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2838: FILE: drivers/usb/host/ehci-q.c:348:
+				if ((token & QTD_STS_XACT) &&
+						QTD_CERR(token) == 0 &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2842: FILE: drivers/usb/host/ehci-q.c:352:
+					ehci_dbg(ehci,
+	"detected XactErr len %d/%d retry %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2855: FILE: drivers/usb/host/ehci-q.c:365:
+					qtd->hw_token = cpu_to_hc32(ehci,
+							token);

WARNING:MEMORY_BARRIER: memory barrier without comment
#2856: FILE: drivers/usb/host/ehci-q.c:366:
+					wmb();

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2999: FILE: drivers/usb/storage/unusual_devs.h:1174:
+		US_FL_IGNORE_RESIDUE | US_FL_MAX_SECTORS_64 ),

CHECK:CAMELCASE: Avoid CamelCase: <pSMB>
#3067: FILE: fs/cifs/cifssmb.c:2355:
+		pSMB->OldFileName[name_len] = 0x04;

CHECK:CAMELCASE: Avoid CamelCase: <OldFileName>
#3067: FILE: fs/cifs/cifssmb.c:2355:
+		pSMB->OldFileName[name_len] = 0x04;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3081: FILE: fs/cifs/connect.c:3568:
+				    kzalloc(2*(length + 1), GFP_KERNEL);
 				             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3136: FILE: fs/dquot.c:727:
+		if (inode->i_state & (I_FREEING|I_CLEAR|I_WILL_FREE))
 		                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3136: FILE: fs/dquot.c:727:
+		if (inode->i_state & (I_FREEING|I_CLEAR|I_WILL_FREE))
 		                                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3149: FILE: fs/drop_caches.c:21:
+		if (inode->i_state & (I_FREEING|I_CLEAR|I_WILL_FREE))
 		                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3149: FILE: fs/drop_caches.c:21:
+		if (inode->i_state & (I_FREEING|I_CLEAR|I_WILL_FREE))
 		                                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3178: FILE: fs/fs-writeback.c:542:
+					(I_FREEING|I_CLEAR|I_WILL_FREE|I_NEW))
 					          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3178: FILE: fs/fs-writeback.c:542:
+					(I_FREEING|I_CLEAR|I_WILL_FREE|I_NEW))
 					                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#3178: FILE: fs/fs-writeback.c:542:
+					(I_FREEING|I_CLEAR|I_WILL_FREE|I_NEW))
 					                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#3199: FILE: fs/hugetlbfs/inode.c:840:
+ ^Ireturn -EINVAL;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3199: FILE: fs/hugetlbfs/inode.c:840:
+ ^Ireturn -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3199: FILE: fs/hugetlbfs/inode.c:840:
+ ^Ireturn -EINVAL;$

CHECK:BIT_MACRO: Prefer using the BIT macro
#3442: FILE: include/linux/genhd.h:216:
+#define DISK_PITER_INCL_EMPTY_PART0 (1 << 3) /* include empty partition 0 */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

ERROR:CODE_INDENT: code indent should use tabs where possible
#3779: FILE: net/ipv4/netfilter/ip_tables.c:504:
+^I^I^I    ^I^I    IPT_STANDARD_TARGET) == 0) &&$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3779: FILE: net/ipv4/netfilter/ip_tables.c:504:
+^I^I^I    ^I^I    IPT_STANDARD_TARGET) == 0) &&$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3779: FILE: net/ipv4/netfilter/ip_tables.c:504:
+				if ((strcmp(t->target.u.user.name,
+			    		    IPT_STANDARD_TARGET) == 0) &&

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3856: FILE: net/netfilter/nf_conntrack_proto_tcp.c:470:
+					tmp = get_unaligned_be32((__be32 *)(ptr+i)+1);
 					                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3856: FILE: net/netfilter/nf_conntrack_proto_tcp.c:470:
+					tmp = get_unaligned_be32((__be32 *)(ptr+i)+1);
 					                                          ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3870: FILE: net/netrom/af_netrom.c:1086:
+	/* Build a packet - the conventional user limit is 236 bytes. We can
+	   do ludicrously large NetROM frames but must not overflow */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3870: FILE: net/netrom/af_netrom.c:1086:
+	   do ludicrously large NetROM frames but must not overflow */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!value"
#3968: FILE: security/smack/smack_lsm.c:1365:
+	if (value == NULL || size > SMK_LABELLEN || size == 0)

WARNING:LINE_SPACING: Missing a blank line after declarations
#3997: FILE: virt/kvm/kvm_main.c:560:
+	struct kvm *kvm = mmu_notifier_to_kvm(mn);
+	kvm_arch_flush_shadow(kvm);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#4067: FILE: virt/kvm/kvm_main.c:1310:
+static struct file_operations kvm_vcpu_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct file_operations should normally be const
#4076: FILE: virt/kvm/kvm_main.c:1704:
+static struct file_operations kvm_vm_fops = {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000130650.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 40 warnings, 64 checks, 3435 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000130650.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
