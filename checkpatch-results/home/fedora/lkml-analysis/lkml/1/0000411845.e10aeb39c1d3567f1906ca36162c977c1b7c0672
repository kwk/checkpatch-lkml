WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#86: FILE: kernel/sys_indirect.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#87: FILE: kernel/sys_indirect.c:2:
+ *  kernel/sys_indirect.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#103: FILE: kernel/sys_indirect.c:18:
+#include <asm/uaccess.h>

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fsa_context *' should also have an identifier name
#107: FILE: kernel/sys_indirect.c:22:
+	int (*set)(struct fsa_context *, const struct indirect_ctx __user *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct indirect_ctx __user *' should also have an identifier name
#107: FILE: kernel/sys_indirect.c:22:
+	int (*set)(struct fsa_context *, const struct indirect_ctx __user *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct indirect_op **' should also have an identifier name
#107: FILE: kernel/sys_indirect.c:22:
+	int (*set)(struct fsa_context *, const struct indirect_ctx __user *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct indirect_op *' should also have an identifier name
#109: FILE: kernel/sys_indirect.c:24:
+	void (*unset)(struct indirect_op *);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#113: FILE: kernel/sys_indirect.c:28:
+static const struct indirect_procs inprocs[] =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#121: FILE: kernel/sys_indirect.c:36:
+ * @ator:   [in]  Pointer the the allocator to be used to allocate context

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#200: FILE: include/linux/indirect.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#201: FILE: include/linux/indirect.h:2:
+ *  include/linux/indirect.h

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct indirect_ctx __user * __user' should also have an identifier name
#223: FILE: include/linux/indirect.h:24:
+int indirect_set_context(struct fsa_context *ator,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000411845.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 11 warnings, 0 checks, 166 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000411845.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
