WARNING:TYPO_SPELLING: 'noticable' may be misspelled - perhaps 'noticeable'?
#53: 
	* gives a noticable power savings
	          ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '218f3d30e60f32394738372c594d063f8e43ee6d', maybe rebased or not pulled?
#70: 
commit 218f3d30e60f32394738372c594d063f8e43ee6d

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#76: 
    Signed-off-by: Jeff Garzik <jgarzik@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#117: FILE: drivers/ata/libata-core.c:2074:
+			err_mask = ata_dev_set_feature(dev,
+					SETFEATURES_SATA_ENABLE, SATA_AN);

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#190: 
    Signed-off-by:  Kristen Carlson Accardi <kristen.c.accardi@intel.com>

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#190: 
    Signed-off-by:  Kristen Carlson Accardi <kristen.c.accardi@intel.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#191: 
    Signed-off-by: Jeff Garzik <jgarzik@redhat.com>

WARNING:BAD_SIGN_OFF: Duplicate signature
#191: 
    Signed-off-by: Jeff Garzik <jgarzik@redhat.com>

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#204: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#282: FILE: drivers/ata/libata-core.c:669:
+			err_mask = ata_dev_set_feature(dev,
+					SETFEATURES_SATA_ENABLE, SATA_DIPM);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#295: FILE: drivers/ata/libata-core.c:682:
+			err_mask = ata_dev_set_feature(dev,
+					SETFEATURES_SATA_DISABLE, SATA_DIPM);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#308: FILE: drivers/ata/libata-core.c:695:
+			err_mask = ata_dev_set_feature(dev,
+					SETFEATURES_SATA_DISABLE, SATA_DIPM);

CHECK:SPACING: No space is necessary after a cast
#313: FILE: drivers/ata/libata-core.c:700:
+	(void) err_mask;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#325: FILE: drivers/ata/libata-core.c:712:
+ * ^Ipolicy, and then call driver specific callbacks for$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#357: FILE: drivers/ata/libata-core.c:744:
+ * ^Ipolicy,  call driver specific callbacks for disabling Host$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#358: FILE: drivers/ata/libata-core.c:745:
+ * ^IInitiated Power management.$

WARNING:LINE_SPACING: Missing a blank line after declarations
#402: FILE: drivers/ata/libata-core.c:789:
+		struct ata_port *ap = host->ports[i];
+		ata_lpm_schedule(ap, ap->pm_policy);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#406: FILE: drivers/ata/libata-core.c:793:
+
+

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#456: FILE: drivers/ata/libata-core.c:6509:
+	/* reenable link pm */
 	   ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#522: FILE: drivers/ata/libata-scsi.c:135:
+static ssize_t ata_scsi_lpm_put(struct class_device *class_dev,
+	const char *buf, size_t count)

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#524: FILE: drivers/ata/libata-scsi.c:137:
+	struct Scsi_Host *shost = class_to_shost(class_dev);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LINE_SPACING: Missing a blank line after declarations
#538: FILE: drivers/ata/libata-scsi.c:151:
+		const int len = strlen(link_pm_policy[i].name);
+		if (strncmp(link_pm_policy[i].name, buf, len) == 0 &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#539: FILE: drivers/ata/libata-scsi.c:152:
+		if (strncmp(link_pm_policy[i].name, buf, len) == 0 &&
+		   buf[len] == '\n') {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#564: FILE: drivers/ata/libata-scsi.c:177:
+CLASS_DEVICE_ATTR(link_power_management_policy, S_IRUGO | S_IWUSR,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#565: FILE: drivers/ata/libata-scsi.c:178:
+CLASS_DEVICE_ATTR(link_power_management_policy, S_IRUGO | S_IWUSR,
+		ata_scsi_lpm_show, ata_scsi_lpm_put);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#579: FILE: drivers/ata/libata.h:104:
+extern void ata_dev_enable_pm(struct ata_device *dev, enum link_pm policy);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#580: FILE: drivers/ata/libata.h:105:
+extern void ata_lpm_schedule(struct ata_port *ap, enum link_pm);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#674: FILE: include/linux/libata.h:388:
+};
+extern struct class_device_attribute class_device_attr_link_power_management_policy;

WARNING:SPACING: Unnecessary space before function pointer arguments
#692: FILE: include/linux/libata.h:704:
+	int (*enable_pm) (struct ata_port *ap, enum link_pm policy);

WARNING:SPACING: Unnecessary space before function pointer arguments
#693: FILE: include/linux/libata.h:705:
+	void (*disable_pm) (struct ata_port *ap);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000365642.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 17 warnings, 13 checks, 512 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000365642.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
