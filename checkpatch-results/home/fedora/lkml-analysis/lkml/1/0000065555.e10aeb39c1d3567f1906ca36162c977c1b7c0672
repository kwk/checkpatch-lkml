WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#53: 
> vm_flags          242 arch/mips/mm/c-r3k.c 	int exec = vma->vm_flags & VM_EXEC;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#188: FILE: arch/arm/kernel/asm-offsets.c:93:
+  DEFINE(VM_EXEC,^I       ^I0x00000004);^I/* mm.h now appends ULL */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: arch/arm/kernel/asm-offsets.c:93:
+  DEFINE(VM_EXEC,^I       ^I0x00000004);^I/* mm.h now appends ULL */$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#256: FILE: arch/sh/mm/tlbflush_64.c:51:
+	printk("vm_flags 0x%08llx\n", vma->vm_flags);

WARNING:SPLIT_STRING: quoted string split across lines
#302: FILE: drivers/infiniband/hw/ipath/ipath_file_ops.c:1115:
 		dev_info(&dd->pcidev->dev, "Can't map eager buffers as "
+			 "writable (flags=%llx)\n", vma->vm_flags);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:CODE_INDENT: code indent should use tabs where possible
#311: FILE: drivers/infiniband/hw/ipath/ipath_file_ops.c:1204:
+                                 "writable (flags=%llx)\n", vma->vm_flags);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: drivers/infiniband/hw/ipath/ipath_file_ops.c:1204:
+                                 "writable (flags=%llx)\n", vma->vm_flags);$

WARNING:SPLIT_STRING: quoted string split across lines
#311: FILE: drivers/infiniband/hw/ipath/ipath_file_ops.c:1204:
                                  "Can't map eager buffers as "
+                                 "writable (flags=%llx)\n", vma->vm_flags);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'binder_mmap', this function's name, in a string
#340: FILE: drivers/staging/android/binder.c:2776:
+		     "binder_mmap: %d %lx-%lx (%ld K) vma %llx pagep %lx\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#485: FILE: include/linux/mm.h:81:
+#define VM_PFNMAP	0x00000400ULL	/* Page-ranges managed without "struct page", just pure PFN */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#490: FILE: include/linux/mm.h:86:
+#define VM_IO   ^I0x00004000ULL^I/* Memory mapped I/O or similar */$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#604: FILE: include/linux/mm.h:1117:
+extern int install_special_mapping(struct mm_struct *mm, unsigned long addr,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#605: FILE: include/linux/mm.h:1118:
+extern int install_special_mapping(struct mm_struct *mm, unsigned long addr,
+	unsigned long len, unsigned long long vm_flags, struct page **pages);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#633: FILE: include/linux/mm.h:1238:
+void vm_stat_account(struct mm_struct *mm,
+		unsigned long long vm_flags, struct file *file, long pages);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#724: FILE: mm/filemap.c:1436:
+	if ((vma->vm_flags & VM_SEQ_READ) ||
 			offset - 1 == (ra->prev_pos >> PAGE_CACHE_SHIFT)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#828: FILE: mm/mlock.c:270:
+	if (!((vma->vm_flags & (VM_DONTEXPAND | VM_RESERVED | VM_HUGETLB)) ||
 			vma == get_gate_vma(current))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#852: FILE: mm/mlock.c:369:
+	if ((vma->vm_flags & (VM_DONTEXPAND | VM_RESERVED | VM_HUGETLB)) ||
 			vma == get_gate_vma(current)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#908: FILE: mm/mmap.c:695:
+can_vma_merge_before(struct vm_area_struct *vma, unsigned long long vm_flags,
 	struct anon_vma *anon_vma, struct file *file, pgoff_t vm_pgoff)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#917: FILE: mm/mmap.c:714:
+can_vma_merge_after(struct vm_area_struct *vma, unsigned long long vm_flags,
 	struct anon_vma *anon_vma, struct file *file, pgoff_t vm_pgoff)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#944: FILE: mm/mmap.c:889:
+void vm_stat_account(struct mm_struct *mm, unsigned long long vm_flags,
 						struct file *file, long pages)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#953: FILE: mm/mmap.c:896:
+		if ((vm_flags & (VM_EXEC|VM_WRITE)) == VM_EXEC)
 		                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#959: FILE: mm/mmap.c:900:
+	if (vm_flags & (VM_RESERVED|VM_IO))
 	                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1038: FILE: mm/mmap.c:2065:
+	vma = vma_merge(mm, prev, addr, addr + len, vm_flags,
 					NULL, NULL, pgoff, NULL);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000065555.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 10 warnings, 12 checks, 935 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000065555.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
