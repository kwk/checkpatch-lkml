WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
We also need to update these from the cpufreq notifiers. Because a frequency

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#49: FILE: arch/x86_64/kernel/apic.c:66:
+extern void time_update_mt_guess(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#51: FILE: arch/x86_64/kernel/apic.c:68:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#90: FILE: arch/x86_64/kernel/time.c:242:
+	/* if a frequency change is in progress, don't recalculate anything
+	   as this would destroy the fine-tuned slope. We don't rely on the TSC

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#91: FILE: arch/x86_64/kernel/time.c:243:
+	   during this time, so we don't care about the accuracy at all */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#128: FILE: arch/x86_64/kernel/time.c:280:
+		printk(KERN_DEBUG "Master Timer guess on cpu %d off by %lld.%.6ld seconds\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#129: FILE: arch/x86_64/kernel/time.c:281:
+		printk(KERN_DEBUG "Master Timer guess on cpu %d off by %lld.%.6ld seconds\n",
+			cpu, guess_mt_err_nsec / NSEC_PER_SEC,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#134: FILE: arch/x86_64/kernel/time.c:286:
+	/* if the guess is off by more than a second, something has gone very
+	   wrong; we'll break monotonicity and re-sync the guess with the MT */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#134: FILE: arch/x86_64/kernel/time.c:286:
+	   wrong; we'll break monotonicity and re-sync the guess with the MT */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#138: FILE: arch/x86_64/kernel/time.c:290:
+			printk(KERN_ERR "time not monotonic on cpu %d\n", cpu);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#141: FILE: arch/x86_64/kernel/time.c:293:
+	/* else if the guess is off by more than a jiffie, only synchronize the
+	   guess with the MT if the guess is behind (won't break monotonicity);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#142: FILE: arch/x86_64/kernel/time.c:294:
+	   if the guess is ahead, stop the timer by setting slope to zero */

CHECK:BRACES: braces {} should be used on all arms of this statement
#144: FILE: arch/x86_64/kernel/time.c:296:
+		if (guess_mt_err > 0)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#146: FILE: arch/x86_64/kernel/time.c:298:
+		else {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#152: FILE: arch/x86_64/kernel/time.c:304:
+	else if (vxtime.cpu[cpu].tsc_invalid &&
[...]
+			vxtime.cpu[cpu].tsc_invalid = 0;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: arch/x86_64/kernel/time.c:305:
+	else if (vxtime.cpu[cpu].tsc_invalid &&
+		    abs(guess_mt_err) < mt_per_tick / USEC_PER_TICK &&

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#164: FILE: arch/x86_64/kernel/time.c:316:
+		vxtime.cpu[cpu].tsc_slope = vxtime.cpu[cpu].tsc_slope_avg = current_slope;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#166: FILE: arch/x86_64/kernel/time.c:318:
+		printk(KERN_INFO "Master Timer re-syncing on cpu %d (mt=%lld, slope=%lld)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#167: FILE: arch/x86_64/kernel/time.c:319:
+		printk(KERN_INFO "Master Timer re-syncing on cpu %d (mt=%lld, slope=%lld)\n",
+			cpu, mt, vxtime.cpu[cpu].tsc_slope);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#171: FILE: arch/x86_64/kernel/time.c:323:
+		printk(KERN_INFO "timer on cpu %d frozen, waiting for time to catch up\n", cpu);

WARNING:LINE_SPACING: Missing a blank line after declarations
#183: FILE: arch/x86_64/kernel/time.c:335:
+	u64 ret;
+	ret  = ((mt & 0xffffff) * vxtime.mt_q) >> 32;

ERROR:SPACING: space prohibited after that open parenthesis '('
#187: FILE: arch/x86_64/kernel/time.c:339:
+	ret += ( mt             * vxtime.mt_q) << 16;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#218: FILE: arch/x86_64/kernel/time.c:807:
+	switch (cnd->val) {
[...]
+		case CPUFREQ_PRECHANGE:
+		case CPUFREQ_SUSPENDCHANGE:
[...]
+		case CPUFREQ_POSTCHANGE:
+		case CPUFREQ_RESUMECHANGE:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#219: FILE: arch/x86_64/kernel/time.c:808:
+	switch (cnd->val) {
+

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#229: FILE: arch/x86_64/kernel/time.c:818:
+			vxtime.cpu[cpu].tsc_slope = ((vxtime.cpu[cpu].tsc_slope >> 4) * cnd->freq->old / cnd->freq->new) << 4;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 134 exceeds 100 columns
#230: FILE: arch/x86_64/kernel/time.c:819:
+			vxtime.cpu[cpu].tsc_slope_avg = ((vxtime.cpu[cpu].tsc_slope_avg >> 4) * cnd->freq->old / cnd->freq->new) << 4;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#232: FILE: arch/x86_64/kernel/time.c:821:
+			vxtime.cpu[cpu].mt_base = vxtime.cpu[cpu].mt_last = get_master_timer64();

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val == CPUFREQ_RESUMECHANGE'
#273: FILE: arch/x86_64/kernel/time.c:847:
+	if ((val == CPUFREQ_PRECHANGE  && cnd.freq->old < cnd.freq->new) ||
+	    (val == CPUFREQ_POSTCHANGE && cnd.freq->old > cnd.freq->new) ||
 	    (val == CPUFREQ_RESUMECHANGE)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#291: FILE: arch/x86_64/kernel/time.c:858:
+	else smp_call_function_single(cnd.freq->cpu, time_cpufreq_notifier_on_cpu, &cnd, 0, 1);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000472302.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 16 warnings, 10 checks, 251 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000472302.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
