WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
snet_netlink is using genetlink for sending/receiving messages to/from userspace.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#48: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#53: FILE: security/snet/snet_netlink.c:1:
+#include <linux/sched.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#64: FILE: security/snet/snet_netlink.c:12:
+uint32_t snet_nl_pid;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb_rsp"
#87: FILE: security/snet/snet_netlink.c:35:
+	if (skb_rsp == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!msg_head"
#93: FILE: security/snet/snet_netlink.c:41:
+	if (msg_head == NULL)

WARNING:SPLIT_STRING: quoted string split across lines
#97: FILE: security/snet/snet_netlink.c:45:
+	pr_debug("verdict_id=0x%x syscall=%s protocol=%u "
+		 "family=%u uid=%u pid=%u\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb_rsp"
#181: FILE: security/snet/snet_netlink.c:129:
+	if (skb_rsp == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!msg_head"
#185: FILE: security/snet/snet_netlink.c:133:
+	if (msg_head == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hdr"
#351: FILE: security/snet/snet_netlink.c:299:
+	if (hdr == NULL)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#363: FILE: security/snet/snet_netlink.c:311:
+}
+/**

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#387: FILE: security/snet/snet_netlink.c:335:
+ * Provides userspace with a VERDICT message, ie we are sending informations
                                                                 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'snet_nl_config', this function's name, in a string
#424: FILE: security/snet/snet_netlink.c:372:
+		pr_debug("snet_nl_config: verdict_delay=%u\n", snet_verdict_delay);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'snet_nl_config', this function's name, in a string
#429: FILE: security/snet/snet_netlink.c:377:
+		pr_debug("snet_nl_config: ticket_delay=%u\n", snet_ticket_delay);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'snet_nl_config', this function's name, in a string
#434: FILE: security/snet/snet_netlink.c:382:
+		pr_debug("snet_nl_config: ticket_mode=%u\n", snet_ticket_mode);

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#483: FILE: security/snet/snet_netlink.c:431:
+__initcall(snet_netlink_init);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#490: FILE: security/snet/snet_netlink.h:1:
+#ifndef _SNET_NETLINK_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#513: FILE: security/snet/snet_netlink_helper.c:1:
+#include <net/netlink.h>

WARNING:LINE_SPACING: Missing a blank line after declarations
#521: FILE: security/snet/snet_netlink_helper.c:9:
+	int ret;
+	switch (info->family) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around info->src.u3.ip
#524: FILE: security/snet/snet_netlink_helper.c:12:
+			      sizeof(struct in_addr), &(info->src.u3.ip));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around info->src.u3.ip6
#530: FILE: security/snet/snet_netlink_helper.c:18:
+			      sizeof(struct in6_addr), &(info->src.u3.ip6));

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#541: FILE: security/snet/snet_netlink_helper.c:29:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#546: FILE: security/snet/snet_netlink_helper.c:34:
+	int ret;
+	switch (info->family) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around info->dst.u3.ip
#549: FILE: security/snet/snet_netlink_helper.c:37:
+			      sizeof(struct in_addr), &(info->dst.u3.ip));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around info->dst.u3.ip6
#555: FILE: security/snet/snet_netlink_helper.c:43:
+			      sizeof(struct in6_addr), &(info->dst.u3.ip6));

WARNING:LINE_SPACING: Missing a blank line after declarations
#570: FILE: security/snet/snet_netlink_helper.c:58:
+	int ret;
+	ret = nla_put_u8(skb_rsp, SNET_A_TYPE, info->type);

CHECK:BRACES: braces {} should be used on all arms of this statement
#727: FILE: security/snet/snet_netlink_helper.c:215:
+	if (info->syscall >= SNET_NR_SOCKET_TYPES)
[...]
+	else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#729: FILE: security/snet/snet_netlink_helper.c:217:
+		return -EINVAL;
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#729: FILE: security/snet/snet_netlink_helper.c:217:
+	else {

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#733: FILE: security/snet/snet_netlink_helper.c:221:
+			return sbs4[info->syscall];
+			break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#736: FILE: security/snet/snet_netlink_helper.c:224:
+			return sbs6[info->syscall];
+			break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#739: FILE: security/snet/snet_netlink_helper.c:227:
+			return -EINVAL;
+			break;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#749: FILE: security/snet/snet_netlink_helper.h:1:
+#ifndef _SNET_NETLINK_HELPER_H

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000005323.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 19 warnings, 14 checks, 685 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000005323.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
