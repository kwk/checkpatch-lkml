WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#44: FILE: drivers/block/Kconfig:456:
+config XILINX_SYSACE
+	tristate "Xilinx SystemACE support"
+	depends on 4xx
+	help
+	  Include support for the Xilinx SystemACE CompactFlash interface
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#64: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#69: FILE: drivers/block/xsysace.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#249: FILE: drivers/block/xsysace.c:181:
+	uint16_t* data_ptr;		/* pointer to I/O buffer */

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#249: FILE: drivers/block/xsysace.c:181:
+	uint16_t* data_ptr;		/* pointer to I/O buffer */

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#260: FILE: drivers/block/xsysace.c:192:
+	void* baseaddr;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#277: FILE: drivers/block/xsysace.c:209:
+static int ace_major = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#294: FILE: drivers/block/xsysace.c:226:
+	void* r = ace->baseaddr + reg;

WARNING:LINE_SPACING: Missing a blank line after declarations
#295: FILE: drivers/block/xsysace.c:227:
+	void* r = ace->baseaddr + reg;
+	return in_8(r) | (in_8(r+1) << 8);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#295: FILE: drivers/block/xsysace.c:227:
+	return in_8(r) | (in_8(r+1) << 8);
 	                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#300: FILE: drivers/block/xsysace.c:232:
+	void* r = ace->baseaddr + reg;

WARNING:LINE_SPACING: Missing a blank line after declarations
#301: FILE: drivers/block/xsysace.c:233:
+	void* r = ace->baseaddr + reg;
+	out_8(r, val);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#302: FILE: drivers/block/xsysace.c:234:
+	out_8(r+1, val >> 8);
 	       ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#307: FILE: drivers/block/xsysace.c:239:
+	void* r = ace->baseaddr + 0x40;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#308: FILE: drivers/block/xsysace.c:240:
+	int i = ACE_FIFO_SIZE/2;
 	                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#309: FILE: drivers/block/xsysace.c:241:
+	int i = ACE_FIFO_SIZE/2;
+	while (i--)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#311: FILE: drivers/block/xsysace.c:243:
+		*ace->data_ptr++ = (in_8(r)) | (in_8(r+1)<<8);
 		                                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#311: FILE: drivers/block/xsysace.c:243:
+		*ace->data_ptr++ = (in_8(r)) | (in_8(r+1)<<8);
 		                                         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#313: FILE: drivers/block/xsysace.c:245:
+		*ace->data_ptr++ = (in_8(r)<<8) | (in_8(r+1));
 		                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#313: FILE: drivers/block/xsysace.c:245:
+		*ace->data_ptr++ = (in_8(r)<<8) | (in_8(r+1));
 		                                         ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#319: FILE: drivers/block/xsysace.c:251:
+	void* r = ace->baseaddr + 0x40;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#320: FILE: drivers/block/xsysace.c:252:
+	int i = ACE_FIFO_SIZE/2;
 	                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#321: FILE: drivers/block/xsysace.c:253:
+	int i = ACE_FIFO_SIZE/2;
+	while (i--)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#323: FILE: drivers/block/xsysace.c:255:
+		*ace->data_ptr++ = (in_8(r)<<8) | (in_8(r+1));
 		                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#323: FILE: drivers/block/xsysace.c:255:
+		*ace->data_ptr++ = (in_8(r)<<8) | (in_8(r+1));
 		                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#325: FILE: drivers/block/xsysace.c:257:
+		*ace->data_ptr++ = (in_8(r)) | (in_8(r+1)<<8);
 		                                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#325: FILE: drivers/block/xsysace.c:257:
+		*ace->data_ptr++ = (in_8(r)) | (in_8(r+1)<<8);
 		                                         ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#331: FILE: drivers/block/xsysace.c:263:
+	void* r = ace->baseaddr + 0x40;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#332: FILE: drivers/block/xsysace.c:264:
+	int i = ACE_FIFO_SIZE/2;
 	                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#333: FILE: drivers/block/xsysace.c:265:
+	int i = ACE_FIFO_SIZE/2;
+	while (i--) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#336: FILE: drivers/block/xsysace.c:268:
+		out_8(r+1, *ace->data_ptr);
 		       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#339: FILE: drivers/block/xsysace.c:271:
+		out_8(r+1, *ace->data_ptr >> 8);
 		       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#356: FILE: drivers/block/xsysace.c:288:
+	return in_be16(ace->baseaddr+reg);
 	                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#361: FILE: drivers/block/xsysace.c:293:
+	out_be16(ace->baseaddr+reg, val);
 	                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#366: FILE: drivers/block/xsysace.c:298:
+	int i = ACE_FIFO_SIZE/2;
 	                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#367: FILE: drivers/block/xsysace.c:299:
+	int i = ACE_FIFO_SIZE/2;
+	while (i--)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#373: FILE: drivers/block/xsysace.c:305:
+	int i = ACE_FIFO_SIZE/2;
 	                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#374: FILE: drivers/block/xsysace.c:306:
+	int i = ACE_FIFO_SIZE/2;
+	while (i--)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#381: FILE: drivers/block/xsysace.c:313:
+	return in_le16(ace->baseaddr+reg);
 	                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#386: FILE: drivers/block/xsysace.c:318:
+	out_le16(ace->baseaddr+reg, val);
 	                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#391: FILE: drivers/block/xsysace.c:323:
+	int i = ACE_FIFO_SIZE/2;
 	                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#392: FILE: drivers/block/xsysace.c:324:
+	int i = ACE_FIFO_SIZE/2;
+	while (i--)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#398: FILE: drivers/block/xsysace.c:330:
+	int i = ACE_FIFO_SIZE/2;
 	                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#399: FILE: drivers/block/xsysace.c:331:
+	int i = ACE_FIFO_SIZE/2;
+	while (i--)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ace' - possible side-effects?
#419: FILE: drivers/block/xsysace.c:351:
+#define ace_in(ace, reg)		ace->reg_ops->in(ace, reg)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ace' may be better as '(ace)' to avoid precedence issues
#419: FILE: drivers/block/xsysace.c:351:
+#define ace_in(ace, reg)		ace->reg_ops->in(ace, reg)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#422: FILE: drivers/block/xsysace.c:354:
+	return ace_in(ace, reg) | (ace_in(ace, reg+2) << 16);
 	                                          ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#424: FILE: drivers/block/xsysace.c:356:
+}
+#define ace_out(ace, reg, val)		ace->reg_ops->out(ace, reg, val)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ace' - possible side-effects?
#424: FILE: drivers/block/xsysace.c:356:
+#define ace_out(ace, reg, val)		ace->reg_ops->out(ace, reg, val)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ace' may be better as '(ace)' to avoid precedence issues
#424: FILE: drivers/block/xsysace.c:356:
+#define ace_out(ace, reg, val)		ace->reg_ops->out(ace, reg, val)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#428: FILE: drivers/block/xsysace.c:360:
+	ace_out(ace, reg+2, val >> 16);
 	                ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#430: FILE: drivers/block/xsysace.c:362:
+}
+#define ace_identin(ace)		ace->reg_ops->identin(ace)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ace' - possible side-effects?
#430: FILE: drivers/block/xsysace.c:362:
+#define ace_identin(ace)		ace->reg_ops->identin(ace)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ace' may be better as '(ace)' to avoid precedence issues
#430: FILE: drivers/block/xsysace.c:362:
+#define ace_identin(ace)		ace->reg_ops->identin(ace)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ace' - possible side-effects?
#431: FILE: drivers/block/xsysace.c:363:
+#define ace_datain(ace)			ace->reg_ops->datain(ace)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ace' may be better as '(ace)' to avoid precedence issues
#431: FILE: drivers/block/xsysace.c:363:
+#define ace_datain(ace)			ace->reg_ops->datain(ace)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ace' - possible side-effects?
#432: FILE: drivers/block/xsysace.c:364:
+#define ace_dataout(ace)		ace->reg_ops->dataout(ace)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ace' may be better as '(ace)' to avoid precedence issues
#432: FILE: drivers/block/xsysace.c:364:
+#define ace_dataout(ace)		ace->reg_ops->dataout(ace)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ace' may be better as '(ace)' to avoid precedence issues
#444: FILE: drivers/block/xsysace.c:376:
+#define ace_dbg(ace, format, arg...) dev_dbg(ace->dev, format, ## arg)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ace' may be better as '(ace)' to avoid precedence issues
#445: FILE: drivers/block/xsysace.c:377:
+#define ace_err(ace, format, arg...) dev_err(ace->dev, format, ## arg)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ace' may be better as '(ace)' to avoid precedence issues
#446: FILE: drivers/block/xsysace.c:378:
+#define ace_info(ace, format, arg...) dev_info(ace->dev, format, ## arg)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ace' may be better as '(ace)' to avoid precedence issues
#447: FILE: drivers/block/xsysace.c:379:
+#define ace_warn(ace, format, arg...) dev_warn(ace->dev, format, ## arg)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ace' may be better as '(ace)' to avoid precedence issues
#448: FILE: drivers/block/xsysace.c:380:
+#define ace_notice(ace, format, arg...) dev_notice(ace->dev, format, ## arg)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#451: FILE: drivers/block/xsysace.c:383:
+static void ace_dump_mem(void* base, int len)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#453: FILE: drivers/block/xsysace.c:385:
+	const char* ptr = base;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#457: FILE: drivers/block/xsysace.c:389:
+		printk(KERN_INFO "%.8x:", i);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#460: FILE: drivers/block/xsysace.c:392:
+				printk(" ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#461: FILE: drivers/block/xsysace.c:393:
+			printk("%.2x", ptr[i+j]);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#461: FILE: drivers/block/xsysace.c:393:
+			printk("%.2x", ptr[i+j]);
 			                    ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#463: FILE: drivers/block/xsysace.c:395:
+		printk(" ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#465: FILE: drivers/block/xsysace.c:397:
+			printk("%c", isprint(ptr[i+j]) ? ptr[i+j] : '.');

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#465: FILE: drivers/block/xsysace.c:397:
+			printk("%c", isprint(ptr[i+j]) ? ptr[i+j] : '.');
 			                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#465: FILE: drivers/block/xsysace.c:397:
+			printk("%c", isprint(ptr[i+j]) ? ptr[i+j] : '.');
 			                                      ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#466: FILE: drivers/block/xsysace.c:398:
+		printk("\n");

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#470: FILE: drivers/block/xsysace.c:402:
+static inline void ace_dump_mem(void* base, int len) {}

ERROR:CODE_INDENT: code indent should use tabs where possible
#476: FILE: drivers/block/xsysace.c:408:
+^I              "    status:%.8x  mpu_lba:%.8x  busmode:%4x\n"$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#477: FILE: drivers/block/xsysace.c:409:
+^I              "    error: %.8x  cfg_lba:%.8x  fatstat:%.4x\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#478: FILE: drivers/block/xsysace.c:410:
+^I         ace_reg_read32(ace, ACE_CTRL),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#479: FILE: drivers/block/xsysace.c:411:
+^I         ace_reg_read16(ace, ACE_SECCNTCMD),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#480: FILE: drivers/block/xsysace.c:412:
+^I         ace_reg_read16(ace, ACE_VERSION),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#481: FILE: drivers/block/xsysace.c:413:
+^I         ace_reg_read32(ace, ACE_STATUS),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#482: FILE: drivers/block/xsysace.c:414:
+^I         ace_reg_read32(ace, ACE_MPULBA),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#483: FILE: drivers/block/xsysace.c:415:
+^I         ace_reg_read16(ace, ACE_BUSMODE),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#484: FILE: drivers/block/xsysace.c:416:
+^I         ace_reg_read32(ace, ACE_ERROR),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#485: FILE: drivers/block/xsysace.c:417:
+^I         ace_reg_read32(ace, ACE_CFGLBA),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#486: FILE: drivers/block/xsysace.c:418:
+^I         ace_reg_read16(ace, ACE_FATSTAT));$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#489: FILE: drivers/block/xsysace.c:421:
+void ace_fix_driveid (struct hd_driveid *id)

ERROR:CODE_INDENT: code indent should use tabs where possible
#497: FILE: drivers/block/xsysace.c:429:
+^I                     ((id->lba_capacity << 16) & 0xFFFF0000);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#499: FILE: drivers/block/xsysace.c:431:
+^I                     ((id->spg << 16) & 0xFFFF0000);$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#532: FILE: drivers/block/xsysace.c:464:
+const char* ace_statenames[ACE_FSM_NUM_STATES] = {

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#547: FILE: drivers/block/xsysace.c:479:
+static void inline ace_fsm_yield(struct ace_device *ace)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ace_fsm_yield', this function's name, in a string
#549: FILE: drivers/block/xsysace.c:481:
+	ace_dbg(ace, "ace_fsm_yield()\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#555: FILE: drivers/block/xsysace.c:487:
+static void inline ace_fsm_yieldirq(struct ace_device *ace)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ace_fsm_yieldirq', this function's name, in a string
#557: FILE: drivers/block/xsysace.c:489:
+	ace_dbg(ace, "ace_fsm_yieldirq()\n");

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#562: FILE: drivers/block/xsysace.c:494:
+struct request* ace_get_next_request(request_queue_t *q)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#577: FILE: drivers/block/xsysace.c:509:
+	uint32_t status;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#578: FILE: drivers/block/xsysace.c:510:
+	uint16_t val;

WARNING:LINE_SPACING: Missing a blank line after declarations
#584: FILE: drivers/block/xsysace.c:516:
+	const char *name = "invalid";
+	if (ace->fsm_state < ACE_FSM_NUM_STATES)

ERROR:CODE_INDENT: code indent should use tabs where possible
#587: FILE: drivers/block/xsysace.c:519:
+^I         ace->fsm_state, name, ace->id_req_count);$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#590: FILE: drivers/block/xsysace.c:522:
+	switch (ace->fsm_state) {
+	    case ACE_FSM_STATE_IDLE:
[...]
+	    case ACE_FSM_STATE_REQ_LOCK:
[...]
+	    case ACE_FSM_STATE_WAIT_LOCK:
[...]
+	    case ACE_FSM_STATE_WAIT_CFREADY:
[...]
+	    case ACE_FSM_STATE_IDENTIFY_PREPARE:
[...]
+	    case ACE_FSM_STATE_IDENTIFY_TRANSFER:
[...]
+	    case ACE_FSM_STATE_IDENTIFY_COMPLETE:
[...]
+	    case ACE_FSM_STATE_REQ_PREPARE:
[...]
+	    case ACE_FSM_STATE_REQ_TRANSFER:
[...]
+	    case ACE_FSM_STATE_REQ_COMPLETE:
[...]
+	    default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:TABSTOP: Statements should start on a tabstop
#591: FILE: drivers/block/xsysace.c:523:
+	    case ACE_FSM_STATE_IDLE:

WARNING:TABSTOP: Statements should start on a tabstop
#605: FILE: drivers/block/xsysace.c:537:
+	    case ACE_FSM_STATE_REQ_LOCK:

WARNING:TABSTOP: Statements should start on a tabstop
#618: FILE: drivers/block/xsysace.c:550:
+	    case ACE_FSM_STATE_WAIT_LOCK:

WARNING:TABSTOP: Statements should start on a tabstop
#629: FILE: drivers/block/xsysace.c:561:
+	    case ACE_FSM_STATE_WAIT_CFREADY:

WARNING:TABSTOP: Statements should start on a tabstop
#645: FILE: drivers/block/xsysace.c:577:
+	    case ACE_FSM_STATE_IDENTIFY_PREPARE:

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#648: FILE: drivers/block/xsysace.c:580:
+		ace->data_ptr = (void*)&ace->cf_id;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#657: FILE: drivers/block/xsysace.c:589:
+		 * transfer to complete */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TABSTOP: Statements should start on a tabstop
#662: FILE: drivers/block/xsysace.c:594:
+	    case ACE_FSM_STATE_IDENTIFY_TRANSFER:

ERROR:CODE_INDENT: code indent should use tabs where possible
#667: FILE: drivers/block/xsysace.c:599:
+^I^I^I        ace->fsm_task, ace->fsm_iter_num,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#668: FILE: drivers/block/xsysace.c:600:
+^I^I^I        ace->data_count);$

WARNING:TABSTOP: Statements should start on a tabstop
#692: FILE: drivers/block/xsysace.c:624:
+	    case ACE_FSM_STATE_IDENTIFY_COMPLETE:

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#697: FILE: drivers/block/xsysace.c:629:
+			/* Error occured, disable the disk */
 			         ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#701: FILE: drivers/block/xsysace.c:633:
+^I^I^I        ace->data_result);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#708: FILE: drivers/block/xsysace.c:640:
+^I^I^I         ace->cf_id.lba_capacity);$

WARNING:TABSTOP: Statements should start on a tabstop
#720: FILE: drivers/block/xsysace.c:652:
+	    case ACE_FSM_STATE_REQ_PREPARE:

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#733: FILE: drivers/block/xsysace.c:665:
+		ace->data_ptr = (void*)req->buffer;

WARNING:TABSTOP: Statements should start on a tabstop
#764: FILE: drivers/block/xsysace.c:696:
+	    case ACE_FSM_STATE_REQ_TRANSFER:

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#770: FILE: drivers/block/xsysace.c:702:
+				ace->req->current_nr_sectors*16,
 				                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#778: FILE: drivers/block/xsysace.c:710:
+				ace->req->current_nr_sectors*16,
 				                            ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#802: FILE: drivers/block/xsysace.c:734:
+^I^I^I * ^Iace->req->hard_nr_sectors,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#803: FILE: drivers/block/xsysace.c:735:
+^I^I^I * ^Iace->req->current_nr_sectors);$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#805: FILE: drivers/block/xsysace.c:737:
+			ace->data_ptr = (void*)ace->req->buffer;

WARNING:TABSTOP: Statements should start on a tabstop
#814: FILE: drivers/block/xsysace.c:746:
+	    case ACE_FSM_STATE_REQ_COMPLETE:

WARNING:TABSTOP: Statements should start on a tabstop
#824: FILE: drivers/block/xsysace.c:756:
+	    default:

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#832: FILE: drivers/block/xsysace.c:764:
+	struct ace_device *ace = (void*)data;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#847: FILE: drivers/block/xsysace.c:779:
+	struct ace_device *ace = (void*)data;

ERROR:CODE_INDENT: code indent should use tabs where possible
#851: FILE: drivers/block/xsysace.c:783:
+^I         ace->fsm_state, ace->fsm_task, ace->fsm_iter_num,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#852: FILE: drivers/block/xsysace.c:784:
+^I         ace->data_count);$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#872: FILE: drivers/block/xsysace.c:804:
+	uint32_t sreg = ace_reg_read32(ace, ACE_STATUS);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#873: FILE: drivers/block/xsysace.c:805:
+	uint16_t creg = ace_reg_read16(ace, ACE_CTRL);

WARNING:TYPO_SPELLING: 'occurance' may be misspelled - perhaps 'occurrence'?
#875: FILE: drivers/block/xsysace.c:807:
+	/* Check for error occurance */
 	                   ^^^^^^^^^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#888: FILE: drivers/block/xsysace.c:820:
+	uint16_t creg;

ERROR:CODE_INDENT: code indent should use tabs where possible
#907: FILE: drivers/block/xsysace.c:839:
+^I^I        ace_reg_read32(ace, ACE_STATUS),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#908: FILE: drivers/block/xsysace.c:840:
+^I^I        ace_reg_read32(ace, ACE_CTRL),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#909: FILE: drivers/block/xsysace.c:841:
+^I^I        ace_reg_read16(ace, ACE_SECCNTCMD));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#911: FILE: drivers/block/xsysace.c:843:
+^I^I        ace->fsm_task, ace->fsm_state, ace->data_count);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#945: FILE: drivers/block/xsysace.c:877:
+	struct ace_device *ace = gd->private_data;
+	ace_dbg(ace, "ace_media_changed(): %i\n", ace->media_change);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ace_media_changed', this function's name, in a string
#945: FILE: drivers/block/xsysace.c:877:
+	ace_dbg(ace, "ace_media_changed(): %i\n", ace->media_change);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ace_revalidate_disk', this function's name, in a string
#955: FILE: drivers/block/xsysace.c:887:
+	ace_dbg(ace, "ace_revalidate_disk()\n");

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#972: FILE: drivers/block/xsysace.c:904:
+static int ace_open(struct inode *inode, struct file *filp)
                                                       ^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#977: FILE: drivers/block/xsysace.c:909:
+	ace_dbg(ace, "ace_open() users=%i\n", ace->users+1);
 	                                                ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ace_open', this function's name, in a string
#977: FILE: drivers/block/xsysace.c:909:
+	ace_dbg(ace, "ace_open() users=%i\n", ace->users+1);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#988: FILE: drivers/block/xsysace.c:920:
+static int ace_release(struct inode *inode, struct file *filp)
                                                          ^^^^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#992: FILE: drivers/block/xsysace.c:924:
+	uint16_t val;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#994: FILE: drivers/block/xsysace.c:926:
+	ace_dbg(ace, "ace_release() users=%i\n", ace->users-1);
 	                                                   ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ace_release', this function's name, in a string
#994: FILE: drivers/block/xsysace.c:926:
+	ace_dbg(ace, "ace_release() users=%i\n", ace->users-1);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1006: FILE: drivers/block/xsysace.c:938:
+static int ace_ioctl(struct inode *inode, struct file *filp,
                                                        ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1007: FILE: drivers/block/xsysace.c:939:
+                         unsigned int cmd, unsigned long arg)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1007: FILE: drivers/block/xsysace.c:939:
+static int ace_ioctl(struct inode *inode, struct file *filp,
+                         unsigned int cmd, unsigned long arg)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1007: FILE: drivers/block/xsysace.c:939:
+                         unsigned int cmd, unsigned long arg)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1010: FILE: drivers/block/xsysace.c:942:
+	struct ace_device *ace = inode->i_bdev->bd_disk->private_data;
+	ace_dbg(ace, "ace_ioctl()\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ace_ioctl', this function's name, in a string
#1010: FILE: drivers/block/xsysace.c:942:
+	ace_dbg(ace, "ace_ioctl()\n");

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#1015: FILE: drivers/block/xsysace.c:947:
+static struct block_device_operations ace_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1029: FILE: drivers/block/xsysace.c:961:
+	uint16_t version;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1030: FILE: drivers/block/xsysace.c:962:
+	uint16_t val;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ace->queue"
#1064: FILE: drivers/block/xsysace.c:996:
+	if (ace->queue == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'endianess' may be misspelled - perhaps 'endianness'?
#1085: FILE: drivers/block/xsysace.c:1017:
+		/* 0x0101 should work regardless of endianess */
 		                                    ^^^^^^^^^

WARNING:TYPO_SPELLING: 'endianess' may be misspelled - perhaps 'endianness'?
#1088: FILE: drivers/block/xsysace.c:1020:
+		/* read it back to determine endianess */
 		                             ^^^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'version == 0'
#1100: FILE: drivers/block/xsysace.c:1032:
+	if ((version == 0) || (version == 0xFFFF))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'version == 0xFFFF'
#1100: FILE: drivers/block/xsysace.c:1032:
+	if ((version == 0) || (version == 0xFFFF))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1105: FILE: drivers/block/xsysace.c:1037:
+^I                               ACE_CTRL_DATABUFRDYIRQ |$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1106: FILE: drivers/block/xsysace.c:1038:
+^I                               ACE_CTRL_ERRORIRQ);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1115: FILE: drivers/block/xsysace.c:1047:
+^I         (version>>12)&0xf, (version>>8)&0x0f, version&0xff);$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1115: FILE: drivers/block/xsysace.c:1047:
+	         (version>>12)&0xf, (version>>8)&0x0f, version&0xff);
 	                 ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1115: FILE: drivers/block/xsysace.c:1047:
+	         (version>>12)&0xf, (version>>8)&0x0f, version&0xff);
 	                      ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1115: FILE: drivers/block/xsysace.c:1047:
+	         (version>>12)&0xf, (version>>8)&0x0f, version&0xff);
 	                                    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1115: FILE: drivers/block/xsysace.c:1047:
+	         (version>>12)&0xf, (version>>8)&0x0f, version&0xff);
 	                                        ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1115: FILE: drivers/block/xsysace.c:1047:
+	         (version>>12)&0xf, (version>>8)&0x0f, version&0xff);
 	                                                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1117: FILE: drivers/block/xsysace.c:1049:
+^I        ace->physaddr, ace->baseaddr, ace->irq);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1137: FILE: drivers/block/xsysace.c:1069:
+	printk(KERN_INFO "xsysace: error initializing device at 0x%lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1138: FILE: drivers/block/xsysace.c:1070:
+	printk(KERN_INFO "xsysace: error initializing device at 0x%lx\n",
+	      ace->physaddr);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ace_probe', this function's name, in a string
#1170: FILE: drivers/block/xsysace.c:1102:
+	dev_dbg(device, "ace_probe(%p)\n", device);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ace)...) over kmalloc(sizeof(struct ace_device)...)
#1175: FILE: drivers/block/xsysace.c:1107:
+	ace = kmalloc(sizeof(struct ace_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1190: FILE: drivers/block/xsysace.c:1122:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1206: FILE: drivers/block/xsysace.c:1138:
+	printk(KERN_ERR "xsysace: could not initialize device\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ace_remove', this function's name, in a string
#1217: FILE: drivers/block/xsysace.c:1149:
+	dev_dbg(device, "ace_remove(%p)\n", device);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1241: FILE: drivers/block/xsysace.c:1173:
+		printk(KERN_WARNING "xsysace: register_blkdev() failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1254: FILE: drivers/block/xsysace.c:1186:
+		printk(KERN_WARNING "systemace unregister_blkdev(%i) failed\n",

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000437189.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 51 errors, 58 warnings, 69 checks, 1208 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000437189.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
