CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pages"
#130: FILE: arch/um/kernel/skas/mmu.c:116:
+	if (pages == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#131: FILE: arch/um/kernel/skas/mmu.c:117:
+		printk(KERN_ERR "arch_dup_mmap failed to allocate 2 page "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'arch_dup_mmap', this function's name, in a string
#131: FILE: arch/um/kernel/skas/mmu.c:117:
+		printk(KERN_ERR "arch_dup_mmap failed to allocate 2 page "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#131: FILE: arch/um/kernel/skas/mmu.c:117:
+	if (pages == NULL) {
+		printk(KERN_ERR "arch_dup_mmap failed to allocate 2 page "

WARNING:SPLIT_STRING: quoted string split across lines
#132: FILE: arch/um/kernel/skas/mmu.c:118:
+		printk(KERN_ERR "arch_dup_mmap failed to allocate 2 page "
+		       "pointers\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#144: FILE: arch/um/kernel/skas/mmu.c:130:
+		printk(KERN_ERR "install_special_mapping returned %d\n", err);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pte"
#160: FILE: arch/um/kernel/skas/mmu.c:146:
+	if (pte != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pte"
#164: FILE: arch/um/kernel/skas/mmu.c:150:
+	if (pte == NULL)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#203: FILE: include/asm-um/mmu_context.h:12:
+extern void arch_dup_mmap(struct mm_struct *oldmm, struct mm_struct *mm);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#204: FILE: include/asm-um/mmu_context.h:13:
+extern void arch_exit_mmap(struct mm_struct *mm);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr >= STUB_START'
#276: FILE: arch/um/kernel/tlb.c:187:
+		if ((addr >= STUB_START) && (addr < STUB_END))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'addr < STUB_END'
#276: FILE: arch/um/kernel/tlb.c:187:
+		if ((addr >= STUB_START) && (addr < STUB_END))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000356723.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 7 checks, 217 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000356723.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
