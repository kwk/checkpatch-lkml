CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#83: FILE: include/net/sock.h:1361:
+	if (sock_flag(sk, SOCK_RCVTSTAMP) ||
+		sock_flag(sk, SOCK_TIMESTAMPING_RX_SOFTWARE) ||

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#102: FILE: include/net/sock.h:1380:
+extern int sock_tx_timestamp(struct msghdr *msg,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#103: FILE: include/net/sock.h:1381:
+extern int sock_tx_timestamp(struct msghdr *msg,
+			struct sock *sk,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#106: FILE: include/net/sock.h:1384:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#116: FILE: include/net/sock.h:1453:
+extern void sock_enable_timestamp(struct sock *sk, int flag);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#139: FILE: net/compat.c:237:
+	if (level == SOL_SOCKET &&
+		(type == SCM_TIMESTAMPNS || type == SCM_TIMESTAMPING)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#198: FILE: net/core/sock.c:264:
+		if (!sock_flag(sk, SOCK_TIMESTAMP) &&
+			!sock_flag(sk, SOCK_TIMESTAMPING_RX_SOFTWARE)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#222: FILE: net/core/sock.c:634:
+		sock_valbool_flag(sk, SOCK_TIMESTAMPING_TX_HARDWARE,
+				val & SOF_TIMESTAMPING_TX_HARDWARE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#224: FILE: net/core/sock.c:636:
+		sock_valbool_flag(sk, SOCK_TIMESTAMPING_TX_SOFTWARE,
+				val & SOF_TIMESTAMPING_TX_SOFTWARE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#226: FILE: net/core/sock.c:638:
+		sock_valbool_flag(sk, SOCK_TIMESTAMPING_RX_HARDWARE,
+				val & SOF_TIMESTAMPING_RX_HARDWARE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#232: FILE: net/core/sock.c:644:
+		sock_valbool_flag(sk, SOCK_TIMESTAMPING_SOFTWARE,
+				val & SOF_TIMESTAMPING_SOFTWARE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#234: FILE: net/core/sock.c:646:
+		sock_valbool_flag(sk, SOCK_TIMESTAMPING_SYS_HARDWARE,
+				val & SOF_TIMESTAMPING_SYS_HARDWARE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#236: FILE: net/core/sock.c:648:
+		sock_valbool_flag(sk, SOCK_TIMESTAMPING_RAW_HARDWARE,
+				val & SOF_TIMESTAMPING_RAW_HARDWARE);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#308: FILE: net/core/sock.c:1867:
+		/*
+		 * we just set one of the two flags which require net

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#313: FILE: net/core/sock.c:1872:
+		if (!sock_flag(sk,
+				flag == SOCK_TIMESTAMP ?

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#329: FILE: net/socket.c:549:
+int sock_tx_timestamp(struct msghdr *msg, struct sock *sk,
+		union skb_shared_tx *shtx)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#332: FILE: net/socket.c:552:
+	if (sock_flag(sk, SOCK_TIMESTAMPING_TX_HARDWARE)) {
+		shtx->hardware = 1;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#335: FILE: net/socket.c:555:
+	if (sock_flag(sk, SOCK_TIMESTAMPING_TX_SOFTWARE)) {
+		shtx->software = 1;
+	}

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#392: FILE: net/socket.c:635:
+	/* Race occurred between timestamp enabling and packet
+	   receiving.  Fill in the current time for now. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#392: FILE: net/socket.c:635:
+	   receiving.  Fill in the current time for now. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#399: FILE: net/socket.c:642:
+			struct timeval tv;
+			skb_get_timestamp(skb, &tv);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#401: FILE: net/socket.c:644:
+			put_cmsg(msg, SOL_SOCKET, SCM_TIMESTAMP,
+				sizeof(tv), &tv);

WARNING:LINE_SPACING: Missing a blank line after declarations
#404: FILE: net/socket.c:647:
+			struct timespec ts;
+			skb_get_timestampns(skb, &ts);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#406: FILE: net/socket.c:649:
+			put_cmsg(msg, SOL_SOCKET, SCM_TIMESTAMPNS,
+				sizeof(ts), &ts);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#410: FILE: net/socket.c:653:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#413: FILE: net/socket.c:656:
+	if (skb->tstamp.tv64 &&
+		sock_flag(sk, SOCK_TIMESTAMPING_SOFTWARE)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#419: FILE: net/socket.c:662:
+		if (sock_flag(sk, SOCK_TIMESTAMPING_SYS_HARDWARE) &&
+			ktime2ts(shhwtstamps->syststamp, ts + 1))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#422: FILE: net/socket.c:665:
+		if (sock_flag(sk, SOCK_TIMESTAMPING_RAW_HARDWARE) &&
+			ktime2ts(shhwtstamps->hwtstamp, ts + 2))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#427: FILE: net/socket.c:670:
+		put_cmsg(msg, SOL_SOCKET,
+			SCM_TIMESTAMPING, sizeof(ts), &ts);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000177658.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 22 checks, 355 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000177658.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
