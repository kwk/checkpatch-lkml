WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#103: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#189: FILE: drivers/hid/hid-g13.c:1:
+/***************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#224: FILE: drivers/hid/hid-g13.c:36:
+#define G13_KEYMAP_SIZE (G13_KEYS*3)
                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#266: FILE: drivers/hid/hid-g13.c:78:
+#define G13FB_LINE_LENGTH (160/8)
                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#273: FILE: drivers/hid/hid-g13.c:85:
+#define G13FB_SIZE (160*48/8)
                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#273: FILE: drivers/hid/hid-g13.c:85:
+#define G13FB_SIZE (160*48/8)
                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'hdev' - possible side-effects?
#316: FILE: drivers/hid/hid-g13.c:128:
+#define hid_get_g13data(hdev) \
+	((hdev == NULL) ? NULL : (struct g13_data *)(hid_get_drvdata(hdev)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'hdev' may be better as '(hdev)' to avoid precedence issues
#316: FILE: drivers/hid/hid-g13.c:128:
+#define hid_get_g13data(hdev) \
+	((hdev == NULL) ? NULL : (struct g13_data *)(hid_get_drvdata(hdev)))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hdev"
#317: FILE: drivers/hid/hid-g13.c:129:
+	((hdev == NULL) ? NULL : (struct g13_data *)(hid_get_drvdata(hdev)))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'idev' - possible side-effects?
#319: FILE: drivers/hid/hid-g13.c:131:
+#define input_get_hdev(idev) \
+	((idev == NULL) ? NULL : (struct hid_device *)(input_get_drvdata(idev)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'idev' may be better as '(idev)' to avoid precedence issues
#319: FILE: drivers/hid/hid-g13.c:131:
+#define input_get_hdev(idev) \
+	((idev == NULL) ? NULL : (struct hid_device *)(input_get_drvdata(idev)))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!idev"
#320: FILE: drivers/hid/hid-g13.c:132:
+	((idev == NULL) ? NULL : (struct hid_device *)(input_get_drvdata(idev)))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#324: FILE: drivers/hid/hid-g13.c:136:
+static ssize_t g13_set_mled(struct hid_device *hdev, unsigned mled);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: drivers/hid/hid-g13.c:140:
+  KEY_F1, KEY_F2, KEY_F3, KEY_F4, KEY_F5, KEY_F6, KEY_F7,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: drivers/hid/hid-g13.c:142:
+  KEY_UNKNOWN, KEY_UNKNOWN, KEY_BACK, KEY_UP,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: drivers/hid/hid-g13.c:144:
+  KEY_FORWARD, KEY_UNKNOWN, KEY_UNKNOWN,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: drivers/hid/hid-g13.c:146:
+  KEY_UNKNOWN, KEY_LEFT, KEY_DOWN, KEY_RIGHT, KEY_UNKNOWN,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: drivers/hid/hid-g13.c:148:
+  KEY_BACKSPACE, KEY_ENTER, KEY_SPACE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: drivers/hid/hid-g13.c:150:
+  BTN_0, BTN_1, BTN_2, BTN_3, BTN_4,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: drivers/hid/hid-g13.c:152:
+  KEY_RESERVED, KEY_RESERVED, KEY_RESERVED, KEY_RESERVED,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: drivers/hid/hid-g13.c:154:
+  BTN_LEFT, BTN_RIGHT, BTN_MIDDLE, KEY_RESERVED,$

WARNING:TYPO_SPELLING: 'Frambuffer' may be misspelled - perhaps 'Framebuffer'?
#345: FILE: drivers/hid/hid-g13.c:157:
+/* Frambuffer visual structures */
    ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#379: FILE: drivers/hid/hid-g13.c:191:
+				 NULL, USB_CTRL_SET_TIMEOUT*2);
 				                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#410: FILE: drivers/hid/hid-g13.c:222:
+	for (row = G13FB_HEIGHT-1; row >= 0; row--) {
 	                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#411: FILE: drivers/hid/hid-g13.c:223:
+		offset = 32 + row/8 * G13FB_WIDTH;
 		                 ^

WARNING:REPEATED_WORD: Possible repeated word: 'by'
#427: FILE: drivers/hid/hid-g13.c:239:
+			 * the appropriate by by shift the g13 byte up by 1 and

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#456: FILE: drivers/hid/hid-g13.c:268:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:CONST_STRUCT: struct fb_ops should normally be const
#542: FILE: drivers/hid/hid-g13.c:354:
+static struct fb_ops g13fb_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#558: FILE: drivers/hid/hid-g13.c:370:
+	unsigned fb_node;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#561: FILE: drivers/hid/hid-g13.c:373:
+	if (data == NULL)

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'g13_fb_node_show' to 'fb_node_show'
#567: FILE: drivers/hid/hid-g13.c:379:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

CHECK:LINE_SPACING: Please don't use multiple blank lines
#571: FILE: drivers/hid/hid-g13.c:383:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#579: FILE: drivers/hid/hid-g13.c:391:
+	unsigned fb_update_rate;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#582: FILE: drivers/hid/hid-g13.c:394:
+	if (data == NULL)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#591: FILE: drivers/hid/hid-g13.c:403:
+				      unsigned fb_update_rate)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#595: FILE: drivers/hid/hid-g13.c:407:
+	if (data == NULL)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#616: FILE: drivers/hid/hid-g13.c:428:
+	unsigned u;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hdev->dev
#623: FILE: drivers/hid/hid-g13.c:435:
+	if (hdev == NULL || &(hdev->dev) != dev)

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hdev"
#623: FILE: drivers/hid/hid-g13.c:435:
+	if (hdev == NULL || &(hdev->dev) != dev)

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#626: FILE: drivers/hid/hid-g13.c:438:
+	i = sscanf(buf, "%u", &u);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#628: FILE: drivers/hid/hid-g13.c:440:
+		printk(KERN_ERR "unrecognized input: %s", buf);

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions '0666' used
#638: FILE: drivers/hid/hid-g13.c:450:
+}

The permissions used in DEVICE_ATTR are unusual.
Typically only three permissions are used - 0644 (RW), 0444 (RO)
and 0200 (WO).

See: https://www.kernel.org/doc/html/latest/filesystems/sysfs.html#attributes

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#640: FILE: drivers/hid/hid-g13.c:452:
+static DEVICE_ATTR(fb_update_rate, 0666,

Exporting world writable sysfs/debugfs files is usually a bad thing.
When done arbitrarily they can introduce serious security bugs.
In the past, some of the debugfs vulnerabilities would seemingly allow
any local user to write arbitrary values into device registers - a
situation from which little good can be expected to emerge.

See: https://lore.kernel.org/linux-arm-kernel/cover.1296818921.git.segoon@openwall.com/

WARNING:LINE_SPACING: Missing a blank line after declarations
#657: FILE: drivers/hid/hid-g13.c:469:
+	struct g13_data *g13data;
+	g13data = dev_get_drvdata(&hdev->dev);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!g13data"
#659: FILE: drivers/hid/hid-g13.c:471:
+	if (g13data == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!g13data->input_dev"
#669: FILE: drivers/hid/hid-g13.c:481:
+		if (g13data->input_dev == NULL)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#681: FILE: drivers/hid/hid-g13.c:493:
+						 g13data->keycode[i+offset],
 						                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#686: FILE: drivers/hid/hid-g13.c:498:
+			if (g13data->keycode[i+8] != KEY_RESERVED)
 			                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#688: FILE: drivers/hid/hid-g13.c:500:
+						 g13data->keycode[i+8+offset],
 						                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#688: FILE: drivers/hid/hid-g13.c:500:
+						 g13data->keycode[i+8+offset],
 						                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#690: FILE: drivers/hid/hid-g13.c:502:
+			input_event(g13data->input_dev, EV_MSC, MSC_SCAN, i+8);
 			                                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#693: FILE: drivers/hid/hid-g13.c:505:
+			if (i <= 5 && g13data->keycode[i+16] != KEY_RESERVED)
 			                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#695: FILE: drivers/hid/hid-g13.c:507:
+						 g13data->keycode[i+16+offset],
 						                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#695: FILE: drivers/hid/hid-g13.c:507:
+						 g13data->keycode[i+16+offset],
 						                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#697: FILE: drivers/hid/hid-g13.c:509:
+			input_event(g13data->input_dev, EV_MSC, MSC_SCAN, i+16);
 			                                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#700: FILE: drivers/hid/hid-g13.c:512:
+			if (g13data->keycode[i+22] != KEY_RESERVED)
 			                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#702: FILE: drivers/hid/hid-g13.c:514:
+						 g13data->keycode[i+22+offset],
 						                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#702: FILE: drivers/hid/hid-g13.c:514:
+						 g13data->keycode[i+22+offset],
 						                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#704: FILE: drivers/hid/hid-g13.c:516:
+			input_event(g13data->input_dev, EV_MSC, MSC_SCAN, i+22);
 			                                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#707: FILE: drivers/hid/hid-g13.c:519:
+			if (i <= 4 && g13data->keycode[i+30] != KEY_RESERVED)
 			                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#709: FILE: drivers/hid/hid-g13.c:521:
+						 g13data->keycode[i+30+offset],
 						                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#709: FILE: drivers/hid/hid-g13.c:521:
+						 g13data->keycode[i+30+offset],
 						                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#711: FILE: drivers/hid/hid-g13.c:523:
+			input_event(g13data->input_dev, EV_MSC, MSC_SCAN, i+30);
 			                                                   ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#764: FILE: drivers/hid/hid-g13.c:576:
+
+}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#774: FILE: drivers/hid/hid-g13.c:586:
+	if (data == NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#828: FILE: drivers/hid/hid-g13.c:640:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#838: FILE: drivers/hid/hid-g13.c:650:
+	if (data == NULL)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#844: FILE: drivers/hid/hid-g13.c:656:
+static ssize_t g13_set_keymap_index(struct hid_device *hdev, unsigned k)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#848: FILE: drivers/hid/hid-g13.c:660:
+	if (data == NULL)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#857: FILE: drivers/hid/hid-g13.c:669:
+		g13_set_mled(hdev, 1<<k);
 		                    ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#868: FILE: drivers/hid/hid-g13.c:680:
+	unsigned k;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hdev->dev
#875: FILE: drivers/hid/hid-g13.c:687:
+	if (hdev == NULL || &(hdev->dev) != dev)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hdev"
#875: FILE: drivers/hid/hid-g13.c:687:
+	if (hdev == NULL || &(hdev->dev) != dev)

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#878: FILE: drivers/hid/hid-g13.c:690:
+	i = sscanf(buf, "%u", &k);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#880: FILE: drivers/hid/hid-g13.c:692:
+		printk(KERN_ERR "unrecognized input: %s", buf);

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions '0666' used
#890: FILE: drivers/hid/hid-g13.c:702:
+}

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#892: FILE: drivers/hid/hid-g13.c:704:
+static DEVICE_ATTR(keymap_index, 0666,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#909: FILE: drivers/hid/hid-g13.c:721:
+	if (data == NULL)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#913: FILE: drivers/hid/hid-g13.c:725:
+		result = sprintf(buf+offset,
 		                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#921: FILE: drivers/hid/hid-g13.c:733:
+	return offset+1;
 	             ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hdev->dev
#944: FILE: drivers/hid/hid-g13.c:756:
+	if (hdev == NULL || &(hdev->dev) != dev)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hdev"
#944: FILE: drivers/hid/hid-g13.c:756:
+	if (hdev == NULL || &(hdev->dev) != dev)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#949: FILE: drivers/hid/hid-g13.c:761:
+	if (data == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1016: FILE: drivers/hid/hid-g13.c:828:
+		printk(KERN_ERR "unrecognized keycode input: %s", buf);

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions '0666' used
#1021: FILE: drivers/hid/hid-g13.c:833:
+}

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#1023: FILE: drivers/hid/hid-g13.c:835:
+static DEVICE_ATTR(keymap, 0666, g13_keymap_show, g13_keymap_store);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#1034: FILE: drivers/hid/hid-g13.c:846:
+	if (data == NULL)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1040: FILE: drivers/hid/hid-g13.c:852:
+static ssize_t g13_set_emit_msc_raw(struct hid_device *hdev, unsigned k)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#1044: FILE: drivers/hid/hid-g13.c:856:
+	if (data == NULL)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1058: FILE: drivers/hid/hid-g13.c:870:
+	unsigned k;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hdev->dev
#1065: FILE: drivers/hid/hid-g13.c:877:
+	if (hdev == NULL || &(hdev->dev) != dev)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hdev"
#1065: FILE: drivers/hid/hid-g13.c:877:
+	if (hdev == NULL || &(hdev->dev) != dev)

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#1068: FILE: drivers/hid/hid-g13.c:880:
+	i = sscanf(buf, "%u", &k);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1070: FILE: drivers/hid/hid-g13.c:882:
+		printk(KERN_ERR "unrecognized input: %s", buf);

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions '0666' used
#1080: FILE: drivers/hid/hid-g13.c:892:
+}

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#1082: FILE: drivers/hid/hid-g13.c:894:
+static DEVICE_ATTR(emit_msc_raw, 0666,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1086: FILE: drivers/hid/hid-g13.c:898:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#1096: FILE: drivers/hid/hid-g13.c:908:
+	if (data == NULL)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1102: FILE: drivers/hid/hid-g13.c:914:
+static ssize_t g13_set_keymap_switching(struct hid_device *hdev, unsigned k)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#1106: FILE: drivers/hid/hid-g13.c:918:
+	if (data == NULL)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1112: FILE: drivers/hid/hid-g13.c:924:
+		g13_set_mled(hdev, 1<<(data->curkeymap));
 		                    ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1123: FILE: drivers/hid/hid-g13.c:935:
+	unsigned k;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hdev->dev
#1130: FILE: drivers/hid/hid-g13.c:942:
+	if (hdev == NULL || &(hdev->dev) != dev)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hdev"
#1130: FILE: drivers/hid/hid-g13.c:942:
+	if (hdev == NULL || &(hdev->dev) != dev)

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#1133: FILE: drivers/hid/hid-g13.c:945:
+	i = sscanf(buf, "%u", &k);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1135: FILE: drivers/hid/hid-g13.c:947:
+		printk(KERN_ERR "unrecognized input: %s", buf);

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions '0666' used
#1145: FILE: drivers/hid/hid-g13.c:957:
+}

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#1147: FILE: drivers/hid/hid-g13.c:959:
+static DEVICE_ATTR(keymap_switching, 0666,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1151: FILE: drivers/hid/hid-g13.c:963:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#1159: FILE: drivers/hid/hid-g13.c:971:
+	if (data == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data->name"
#1162: FILE: drivers/hid/hid-g13.c:974:
+	if (data->name == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#1182: FILE: drivers/hid/hid-g13.c:994:
+	if (data == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "data->name"
#1187: FILE: drivers/hid/hid-g13.c:999:
+	if (data->name != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "end"
#1193: FILE: drivers/hid/hid-g13.c:1005:
+	if (end != NULL)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1197: FILE: drivers/hid/hid-g13.c:1009:
+	if (end != buf) {
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1201: FILE: drivers/hid/hid-g13.c:1013:
+		data->name = kzalloc(limit+1, GFP_KERNEL);
 		                          ^

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions '0666' used
#1209: FILE: drivers/hid/hid-g13.c:1021:
+}

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#1211: FILE: drivers/hid/hid-g13.c:1023:
+static DEVICE_ATTR(name, 0666, g13_name_show, g13_name_store);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1222: FILE: drivers/hid/hid-g13.c:1034:
+	unsigned r, g, b;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#1225: FILE: drivers/hid/hid-g13.c:1037:
+	if (data == NULL)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1236: FILE: drivers/hid/hid-g13.c:1048:
+			   unsigned r, unsigned g, unsigned b)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1236: FILE: drivers/hid/hid-g13.c:1048:
+			   unsigned r, unsigned g, unsigned b)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1236: FILE: drivers/hid/hid-g13.c:1048:
+			   unsigned r, unsigned g, unsigned b)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#1240: FILE: drivers/hid/hid-g13.c:1052:
+	if (data == NULL || data->backlight_report == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data->backlight_report"
#1240: FILE: drivers/hid/hid-g13.c:1052:
+	if (data == NULL || data->backlight_report == NULL)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1263: FILE: drivers/hid/hid-g13.c:1075:
+	unsigned r;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1264: FILE: drivers/hid/hid-g13.c:1076:
+	unsigned g;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1265: FILE: drivers/hid/hid-g13.c:1077:
+	unsigned b;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hdev->dev
#1272: FILE: drivers/hid/hid-g13.c:1084:
+	if (hdev == NULL || &(hdev->dev) != dev)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hdev"
#1272: FILE: drivers/hid/hid-g13.c:1084:
+	if (hdev == NULL || &(hdev->dev) != dev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1277: FILE: drivers/hid/hid-g13.c:1089:
+		printk(KERN_ERR "unrecognized input: %s", buf);

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions '0666' used
#1287: FILE: drivers/hid/hid-g13.c:1099:
+}

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#1289: FILE: drivers/hid/hid-g13.c:1101:
+static DEVICE_ATTR(rgb, 0666, g13_rgb_show, g13_rgb_store);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1299: FILE: drivers/hid/hid-g13.c:1111:
+	unsigned mled;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#1302: FILE: drivers/hid/hid-g13.c:1114:
+	if (data == NULL)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1310: FILE: drivers/hid/hid-g13.c:1122:
+static ssize_t g13_set_mled(struct hid_device *hdev, unsigned mled)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#1314: FILE: drivers/hid/hid-g13.c:1126:
+	if (data == NULL || data->mled_report == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data->mled_report"
#1314: FILE: drivers/hid/hid-g13.c:1126:
+	if (data == NULL || data->mled_report == NULL)

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1317: FILE: drivers/hid/hid-g13.c:1129:
+	data->mled_report->field[0]->value[0] = mled&0x0F;
 	                                            ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1335: FILE: drivers/hid/hid-g13.c:1147:
+	unsigned m[4];

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1336: FILE: drivers/hid/hid-g13.c:1148:
+	unsigned mled;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hdev->dev
#1343: FILE: drivers/hid/hid-g13.c:1155:
+	if (hdev == NULL || &(hdev->dev) != dev)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hdev"
#1343: FILE: drivers/hid/hid-g13.c:1155:
+	if (hdev == NULL || &(hdev->dev) != dev)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1346: FILE: drivers/hid/hid-g13.c:1158:
+	i = sscanf(buf, "%u %u %u %u", m, m+1, m+2, m+3);
 	                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1346: FILE: drivers/hid/hid-g13.c:1158:
+	i = sscanf(buf, "%u %u %u %u", m, m+1, m+2, m+3);
 	                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1346: FILE: drivers/hid/hid-g13.c:1158:
+	i = sscanf(buf, "%u %u %u %u", m, m+1, m+2, m+3);
 	                                             ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1348: FILE: drivers/hid/hid-g13.c:1160:
+		printk(KERN_ERR "unrecognized input: %s", buf);

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions '0666' used
#1364: FILE: drivers/hid/hid-g13.c:1176:
+}

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#1366: FILE: drivers/hid/hid-g13.c:1178:
+static DEVICE_ATTR(mled, 0666, g13_mled_show, g13_mled_store);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*data)...) over kzalloc(sizeof(struct g13_data)...)
#1416: FILE: drivers/hid/hid-g13.c:1228:
+	data = kzalloc(sizeof(struct g13_data), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#1417: FILE: drivers/hid/hid-g13.c:1229:
+	if (data == NULL) {

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1418: FILE: drivers/hid/hid-g13.c:1230:
+	if (data == NULL) {
+		dev_err(&hdev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1419: FILE: drivers/hid/hid-g13.c:1231:
+		dev_err(&hdev->dev,
+		  "can't allocate space for Logitech G13 device attributes\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data->fb_bitmap"
#1429: FILE: drivers/hid/hid-g13.c:1241:
+	if (data->fb_bitmap == NULL) {

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1430: FILE: drivers/hid/hid-g13.c:1242:
+	if (data->fb_bitmap == NULL) {
+		dev_err(&hdev->dev,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data->fb_vbitmap"
#1439: FILE: drivers/hid/hid-g13.c:1251:
+	if (data->fb_vbitmap == NULL) {

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1440: FILE: drivers/hid/hid-g13.c:1252:
+	if (data->fb_vbitmap == NULL) {
+		dev_err(&hdev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1441: FILE: drivers/hid/hid-g13.c:1253:
+		dev_err(&hdev->dev,
+		  G13_NAME

WARNING:SPLIT_STRING: quoted string split across lines
#1477: FILE: drivers/hid/hid-g13.c:1289:
+			" failed to open input interrupt pipe for key and "
+			"joystick events\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data->input_dev"
#1484: FILE: drivers/hid/hid-g13.c:1296:
+	if (data->input_dev == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data->fb_info"
#1530: FILE: drivers/hid/hid-g13.c:1342:
+	if (data->fb_info == NULL) {

CHECK:SPACING: No space is necessary after a cast
#1543: FILE: drivers/hid/hid-g13.c:1355:
+	data->fb_info->screen_base = (char __force __iomem *) data->fb_bitmap;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hdev->dev.kobj
#1557: FILE: drivers/hid/hid-g13.c:1369:
+	error = sysfs_create_group(&(hdev->dev.kobj), &g13_attr_group);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1560: FILE: drivers/hid/hid-g13.c:1372:
+		dev_err(&hdev->dev,
+		  "Logitech G13 failed to create sysfs group attributes\n");

WARNING:SPLIT_STRING: quoted string split across lines
#1591: FILE: drivers/hid/hid-g13.c:1403:
+		dbg_hid("G13 Feature report: id=%u type=%u size=%u maxfield=%u"
+			" report_count=%u\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1605: FILE: drivers/hid/hid-g13.c:1417:
+		printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#1607: FILE: drivers/hid/hid-g13.c:1419:
+		       "G13 hasn't responded yet, "
+		       "forging ahead with initialization\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "data"
#1668: FILE: drivers/hid/hid-g13.c:1480:
+	if (data != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "data->fb_info"
#1673: FILE: drivers/hid/hid-g13.c:1485:
+		if (data->fb_info != NULL) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1683: FILE: drivers/hid/hid-g13.c:1495:
+
+}

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000034615.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 71 warnings, 99 checks, 1644 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000034615.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
