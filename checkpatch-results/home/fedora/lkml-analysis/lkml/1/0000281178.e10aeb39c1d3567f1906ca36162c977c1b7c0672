WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
> git://git.kernel.org/pub/scm/linux/kernel/git/airlied/drm-2.6.git drm-patches

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id 'af6061af0d9f84a4665f88186dc1ff9e4fb78330', maybe rebased or not pulled?
#52: 
commit af6061af0d9f84a4665f88186dc1ff9e4fb78330

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id 'ac741ab71bb39e6977694ac0cc26678d8673cda4', maybe rebased or not pulled?
#58: 
    This reverts commit ac741ab71bb39e6977694ac0cc26678d8673cda4.

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#64: 
    Signed-off-by: Dave Airlie <airlied@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:SPACING: Unnecessary space before function pointer arguments
#173: FILE: drivers/char/drm/drmP.h:582:
+	void (*kernel_context_switch_unlock) (struct drm_device *dev);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#174: FILE: drivers/char/drm/drmP.h:583:
+	int (*vblank_wait) (struct drm_device *dev, unsigned int *sequence);

WARNING:SPACING: Unnecessary space before function pointer arguments
#175: FILE: drivers/char/drm/drmP.h:584:
+	int (*vblank_wait2) (struct drm_device *dev, unsigned int *sequence);

WARNING:SPACING: Unnecessary space before function pointer arguments
#176: FILE: drivers/char/drm/drmP.h:585:
+	int (*dri_library_name) (struct drm_device *dev, char *buf);

WARNING:SPACING: Unnecessary space before function pointer arguments
#185: FILE: drivers/char/drm/drmP.h:604:
+	void (*irq_postinstall) (struct drm_device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#241: FILE: drivers/char/drm/drmP.h:993:
+extern int drm_wait_vblank(struct drm_device *dev, void *data,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#243: FILE: drivers/char/drm/drmP.h:995:
+extern int drm_vblank_wait(struct drm_device *dev, unsigned int *vbl_seq);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#244: FILE: drivers/char/drm/drmP.h:996:
+extern void drm_vbl_send_signals(struct drm_device *dev);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#245: FILE: drivers/char/drm/drmP.h:997:
+extern void drm_locked_tasklet(struct drm_device *dev, void(*func)(struct drm_device*));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#245: FILE: drivers/char/drm/drmP.h:997:
+extern void drm_locked_tasklet(struct drm_device *dev, void(*func)(struct drm_device*));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#625: FILE: drivers/char/drm/drm_irq.c:310:
+		if (!

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#682: FILE: drivers/char/drm/drm_irq.c:356:
+void drm_vbl_send_signals(struct drm_device * dev)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#745: FILE: drivers/char/drm/drm_irq.c:388:
+EXPORT_SYMBOL(drm_vbl_send_signals);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#766: FILE: drivers/char/drm/i915_dma.c:421:
+		dev_priv->sarea_priv->last_enqueue = dev_priv->counter = 1;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#802: FILE: drivers/char/drm/i915_dma.c:514:
+static int i915_dispatch_flip(struct drm_device * dev)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#814: FILE: drivers/char/drm/i915_dma.c:520:
+		  __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#966: FILE: drivers/char/drm/i915_dma.c:645:
+	DRM_DEBUG("%s\n", __FUNCTION__);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1040: FILE: drivers/char/drm/i915_drm.h:149:
+#define DRM_IOCTL_I915_FLIP		DRM_IO ( DRM_COMMAND_BASE + DRM_I915_FLIP)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1040: FILE: drivers/char/drm/i915_drm.h:149:
+#define DRM_IOCTL_I915_FLIP		DRM_IO ( DRM_COMMAND_BASE + DRM_I915_FLIP)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1040: FILE: drivers/char/drm/i915_drm.h:149:
+#define DRM_IOCTL_I915_FLIP		DRM_IO ( DRM_COMMAND_BASE + DRM_I915_FLIP)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1147: FILE: drivers/char/drm/i915_drv.h:230:
+extern void i915_driver_irq_postinstall(struct drm_device * dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1147: FILE: drivers/char/drm/i915_drv.h:230:
+extern void i915_driver_irq_postinstall(struct drm_device * dev);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1182: FILE: drivers/char/drm/i915_drv.h:382:
+#define USER_INT_FLAG    (1<<1)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1182: FILE: drivers/char/drm/i915_drv.h:382:
+#define USER_INT_FLAG    (1<<1)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1183: FILE: drivers/char/drm/i915_drv.h:383:
+#define VSYNC_PIPEB_FLAG (1<<5)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1183: FILE: drivers/char/drm/i915_drv.h:383:
+#define VSYNC_PIPEB_FLAG (1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1184: FILE: drivers/char/drm/i915_drv.h:384:
+#define VSYNC_PIPEA_FLAG (1<<7)
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1184: FILE: drivers/char/drm/i915_drv.h:384:
+#define VSYNC_PIPEA_FLAG (1<<7)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1185: FILE: drivers/char/drm/i915_drv.h:385:
+#define HWB_OOM_FLAG     (1<<13) /* binner out of memory */
                            ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1185: FILE: drivers/char/drm/i915_drv.h:385:
+#define HWB_OOM_FLAG     (1<<13) /* binner out of memory */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1254: FILE: drivers/char/drm/i915_drv.h:395:
+#define I915_VBLANK_INTERRUPT_ENABLE	(1UL<<17)
                                     	    ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1254: FILE: drivers/char/drm/i915_drv.h:395:
+#define I915_VBLANK_INTERRUPT_ENABLE	(1UL<<17)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1255: FILE: drivers/char/drm/i915_drv.h:396:
+#define I915_VBLANK_CLEAR		(1UL<<1)
                          		    ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1255: FILE: drivers/char/drm/i915_drv.h:396:
+#define I915_VBLANK_CLEAR		(1UL<<1)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1382: FILE: drivers/char/drm/i915_irq.c:51:
+	unsigned counter[2] = { atomic_read(&dev->vbl_received),

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1426: FILE: drivers/char/drm/i915_irq.c:87:
+		if ((counter[vbl_swap->pipe] - vbl_swap->sequence) > (1<<23))
 		                                                       ^

CHECK:CAMELCASE: Avoid CamelCase: <ctxOwner>
#1481: FILE: drivers/char/drm/i915_irq.c:159:
+	sarea_priv->ctxOwner = DRM_KERNEL_CONTEXT;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1483: FILE: drivers/char/drm/i915_irq.c:161:
+	upper[0] = upper[1] = 0;

CHECK:CAMELCASE: Avoid CamelCase: <pipeA_h>
#1484: FILE: drivers/char/drm/i915_irq.c:162:
+	slice[0] = max(sarea_priv->pipeA_h / nhits, 1);

CHECK:CAMELCASE: Avoid CamelCase: <pipeB_h>
#1485: FILE: drivers/char/drm/i915_irq.c:163:
+	slice[1] = max(sarea_priv->pipeB_h / nhits, 1);

CHECK:CAMELCASE: Avoid CamelCase: <pipeA_y>
#1486: FILE: drivers/char/drm/i915_irq.c:164:
+	lower[0] = sarea_priv->pipeA_y + slice[0];

CHECK:CAMELCASE: Avoid CamelCase: <pipeB_y>
#1487: FILE: drivers/char/drm/i915_irq.c:165:
+	lower[1] = sarea_priv->pipeB_y + slice[0];

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1688: FILE: drivers/char/drm/i915_irq.c:246:
+	DRM_DEBUG("%s flag=%08x\n", __FUNCTION__, temp);

CHECK:SPACING: No space is necessary after a cast
#1694: FILE: drivers/char/drm/i915_irq.c:252:
+	(void) I915_READ16(I915REG_INT_IDENTITY_R);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1726: FILE: drivers/char/drm/i915_irq.c:282:
+		I915_WRITE(I915REG_PIPEASTAT,
+			pipea_stats|I915_VBLANK_INTERRUPT_ENABLE|

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1726: FILE: drivers/char/drm/i915_irq.c:282:
+			pipea_stats|I915_VBLANK_INTERRUPT_ENABLE|
 			           ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#1726: FILE: drivers/char/drm/i915_irq.c:282:
+			pipea_stats|I915_VBLANK_INTERRUPT_ENABLE|
 			                                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1729: FILE: drivers/char/drm/i915_irq.c:285:
+		I915_WRITE(I915REG_PIPEBSTAT,
+			pipeb_stats|I915_VBLANK_INTERRUPT_ENABLE|

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1729: FILE: drivers/char/drm/i915_irq.c:285:
+			pipeb_stats|I915_VBLANK_INTERRUPT_ENABLE|
 			           ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#1729: FILE: drivers/char/drm/i915_irq.c:285:
+			pipeb_stats|I915_VBLANK_INTERRUPT_ENABLE|
 			                                        ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1737: FILE: drivers/char/drm/i915_irq.c:292:
+static int i915_emit_irq(struct drm_device * dev)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1766: FILE: drivers/char/drm/i915_irq.c:357:
+			- *sequence) <= (1<<23)));
 			                  ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1773: FILE: drivers/char/drm/i915_irq.c:364:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1895: FILE: drivers/char/drm/i915_irq.c:451:
+	i915_enable_interrupt (dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2046: FILE: drivers/char/drm/i915_irq.c:595:
+void i915_driver_irq_postinstall(struct drm_device * dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2152: FILE: drivers/char/drm/mga_drv.h:188:
+extern void mga_driver_irq_postinstall(struct drm_device * dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2152: FILE: drivers/char/drm/mga_drv.h:188:
+extern void mga_driver_irq_postinstall(struct drm_device * dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2198: FILE: drivers/char/drm/mga_irq.c:81:
+int mga_driver_vblank_wait(struct drm_device * dev, unsigned int *sequence)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2245: FILE: drivers/char/drm/mga_irq.c:128:
+void mga_driver_irq_postinstall(struct drm_device * dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2307: FILE: drivers/char/drm/r128_drv.h:152:
+extern int r128_driver_vblank_wait(struct drm_device * dev, unsigned int *sequence);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2307: FILE: drivers/char/drm/r128_drv.h:152:
+extern int r128_driver_vblank_wait(struct drm_device * dev, unsigned int *sequence);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2312: FILE: drivers/char/drm/r128_drv.h:156:
+extern void r128_driver_irq_postinstall(struct drm_device * dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2312: FILE: drivers/char/drm/r128_drv.h:156:
+extern void r128_driver_irq_postinstall(struct drm_device * dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2352: FILE: drivers/char/drm/r128_irq.c:57:
+int r128_driver_vblank_wait(struct drm_device * dev, unsigned int *sequence)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2396: FILE: drivers/char/drm/r128_irq.c:85:
+void r128_driver_irq_postinstall(struct drm_device * dev)

CHECK:SPACING: No space is necessary after a cast
#2399: FILE: drivers/char/drm/r128_irq.c:87:
+	drm_r128_private_t *dev_priv = (drm_r128_private_t *) dev->dev_private;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2454: FILE: drivers/char/drm/radeon_drv.h:377:
+extern int radeon_driver_vblank_wait(struct drm_device * dev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2454: FILE: drivers/char/drm/radeon_drv.h:377:
+extern int radeon_driver_vblank_wait(struct drm_device * dev,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2456: FILE: drivers/char/drm/radeon_drv.h:379:
+extern int radeon_driver_vblank_wait2(struct drm_device * dev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2456: FILE: drivers/char/drm/radeon_drv.h:379:
+extern int radeon_driver_vblank_wait2(struct drm_device * dev,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2461: FILE: drivers/char/drm/radeon_drv.h:383:
+extern void radeon_driver_irq_postinstall(struct drm_device * dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2461: FILE: drivers/char/drm/radeon_drv.h:383:
+extern void radeon_driver_irq_postinstall(struct drm_device * dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2487: FILE: drivers/char/drm/radeon_irq.c:38:
+static __inline__ u32 radeon_acknowledge_irqs(drm_radeon_private_t * dev_priv,

WARNING:INLINE: plain inline is preferred over __inline__
#2487: FILE: drivers/char/drm/radeon_irq.c:38:
+static __inline__ u32 radeon_acknowledge_irqs(drm_radeon_private_t * dev_priv,

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2562: FILE: drivers/char/drm/radeon_irq.c:84:
+	if (stat & RADEON_SW_INT_TEST) {
 		DRM_WAKEUP(&dev_priv->swi_queue);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2571: FILE: drivers/char/drm/radeon_irq.c:89:
+	if (stat & (RADEON_CRTC_VBLANK_STAT|RADEON_CRTC2_VBLANK_STAT)) {
 	                                   ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2598: FILE: drivers/char/drm/radeon_irq.c:147:
+static int radeon_driver_vblank_do_wait(struct drm_device * dev,

CHECK:SPACING: No space is necessary after a cast
#2605: FILE: drivers/char/drm/radeon_irq.c:151:
+	    (drm_radeon_private_t *) dev->dev_private;

CHECK:BRACES: braces {} should be used on all arms of this statement
#2622: FILE: drivers/char/drm/radeon_irq.c:161:
+	if (crtc == DRM_RADEON_VBLANK_CRTC1) {
[...]
+	} else if (crtc == DRM_RADEON_VBLANK_CRTC2) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2628: FILE: drivers/char/drm/radeon_irq.c:167:
+	} else

CHECK:SPACING: No space is necessary after a cast
#2667: FILE: drivers/char/drm/radeon_irq.c:239:
+	drm_radeon_private_t *dev_priv = (drm_radeon_private_t *) dev->dev_private;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2694: FILE: drivers/char/drm/radeon_irq.c:268:
+void radeon_driver_irq_postinstall(struct drm_device * dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2762: FILE: drivers/char/drm/via_drv.h:133:
+extern int via_driver_vblank_wait(struct drm_device * dev, unsigned int *sequence);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2762: FILE: drivers/char/drm/via_drv.h:133:
+extern int via_driver_vblank_wait(struct drm_device * dev, unsigned int *sequence);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2767: FILE: drivers/char/drm/via_drv.h:137:
+extern void via_driver_irq_postinstall(struct drm_device * dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2767: FILE: drivers/char/drm/via_drv.h:137:
+extern void via_driver_irq_postinstall(struct drm_device * dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2826: FILE: drivers/char/drm/via_irq.c:166:
+int via_driver_vblank_wait(struct drm_device * dev, unsigned int *sequence)

CHECK:SPACING: No space is necessary after a cast
#2830: FILE: drivers/char/drm/via_irq.c:168:
+	drm_via_private_t *dev_priv = (drm_via_private_t *) dev->dev_private;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2878: FILE: drivers/char/drm/via_irq.c:295:
+void via_driver_irq_postinstall(struct drm_device * dev)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2905: FILE: drivers/char/drm/via_irq.c:311:
 
+	}

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000281178.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 26 errors, 18 warnings, 50 checks, 2672 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000281178.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
