WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#37: FILE: drivers/mtd/ubi/wl.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#51: FILE: drivers/mtd/ubi/wl.c:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#52: FILE: drivers/mtd/ubi/wl.c:16:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#106: FILE: drivers/mtd/ubi/wl.c:70:
+#define WL_FREE_MAX_DIFF (2*UBI_WL_THRESHOLD)
                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!root->rb_node"
#125: FILE: drivers/mtd/ubi/wl.c:89:
+	return root->rb_node == NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#137: FILE: drivers/mtd/ubi/wl.c:101:
+}
+static inline void used_tree_add(struct ubi_wl_info *wl,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#142: FILE: drivers/mtd/ubi/wl.c:106:
+}
+static inline void scrub_tree_add(struct ubi_wl_info *wl,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#154: FILE: drivers/mtd/ubi/wl.c:118:
+}
+static inline void used_tree_del(struct ubi_wl_info *wl,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#160: FILE: drivers/mtd/ubi/wl.c:124:
+}
+static inline void scrub_tree_del(struct ubi_wl_info *wl,

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#210: FILE: drivers/mtd/ubi/wl.c:174:
+	switch (dtype) {
+		case UBI_DATA_LONGTERM:
[...]
+		case UBI_DATA_UNKNOWN:
[...]
+		case UBI_DATA_SHORTTERM:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#226: FILE: drivers/mtd/ubi/wl.c:190:
+			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#373: FILE: drivers/mtd/ubi/wl.c:337:
+	wl->used = wl->free = wl->scrub = RB_ROOT;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#374: FILE: drivers/mtd/ubi/wl.c:338:
+	wl->prot.pnum = wl->prot.aec = RB_ROOT;

CHECK:BRACES: braces {} should be used on all arms of this statement
#529: FILE: drivers/mtd/ubi/wl.c:493:
+		if (e1->ec >= max)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#531: FILE: drivers/mtd/ubi/wl.c:495:
+		else {

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#555: FILE: drivers/mtd/ubi/wl.c:519:
+	 * the the lowest erase counter plus %WL_FREE_MAX_DIFF.

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#578: FILE: drivers/mtd/ubi/wl.c:542:
+	 * eraseblock with erase counter greater or equivalent then the the

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#588: FILE: drivers/mtd/ubi/wl.c:552:
+	medium_ec = (first->ec + WL_FREE_MAX_DIFF)/2;
 	                                          ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#596: FILE: drivers/mtd/ubi/wl.c:560:
+		if (e1->ec >= medium_ec)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#598: FILE: drivers/mtd/ubi/wl.c:562:
+		else {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#734: FILE: drivers/mtd/ubi/wl.c:698:
+	while (p) {
+

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#778: FILE: drivers/mtd/ubi/wl.c:742:
+	 * If the wl->scrub tree is not empty, scrubbing is needed, and the the

CHECK:BRACES: braces {} should be used on all arms of this statement
#781: FILE: drivers/mtd/ubi/wl.c:745:
+	if (tree_empty(&wl->scrub)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#798: FILE: drivers/mtd/ubi/wl.c:762:
+	} else

WARNING:TYPO_SPELLING: 'severly' may be misspelled - perhaps 'severely'?
#963: FILE: drivers/mtd/ubi/wl.c:927:
+		ubi_err("flash device may be severly bad");
 		                             ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#992: FILE: drivers/mtd/ubi/wl.c:956:
+	uint32_t crc;

CHECK:BRACES: Unbalanced braces around else statement
#1087: FILE: drivers/mtd/ubi/wl.c:1051:
+	} else

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1088: FILE: drivers/mtd/ubi/wl.c:1052:
+		data_size = aldata_size =

WARNING:REPEATED_WORD: Possible repeated word: 'to'
#1129: FILE: drivers/mtd/ubi/wl.c:1093:
+	 * Now we have got to calculate how much data we have to to copy. In

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1139: FILE: drivers/mtd/ubi/wl.c:1103:
+		aldata_size = data_size =

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!wl->move"
#1271: FILE: drivers/mtd/ubi/wl.c:1235:
+	ubi_assert(wl->move == NULL);

WARNING:TYPO_SPELLING: 'severly' may be misspelled - perhaps 'severely'?
#1377: FILE: drivers/mtd/ubi/wl.c:1341:
+		ubi_err("flash device may be severly bad");
 		                             ^^^^^^^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1418: FILE: drivers/mtd/ubi/wl.c:1382:
+
+}

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#1424: FILE: drivers/mtd/ubi/wl.c:1388:
+ * @e: the the physical eraseblock to erase

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#1436: FILE: drivers/mtd/ubi/wl.c:1400:
+	uint64_t ec = e->ec;

WARNING:TYPO_SPELLING: 'neede' may be misspelled - perhaps 'needed'?
#1487: FILE: drivers/mtd/ubi/wl.c:1451:
+ * pending works. This may be neede if, for example the background thread is
                               ^^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1532: FILE: drivers/mtd/ubi/wl.c:1496:
+		if (e->ec < e1->ec)
[...]
+		else if (e->ec > e1->ec)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1536: FILE: drivers/mtd/ubi/wl.c:1500:
+		else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1573: FILE: drivers/mtd/ubi/wl.c:1537:
+		if (e->ec < e1->ec)
[...]
+		else if (e->ec > e1->ec)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1577: FILE: drivers/mtd/ubi/wl.c:1541:
+		else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1601: FILE: drivers/mtd/ubi/wl.c:1565:
+		if (rb->rb_left)
[...]
+		else if (rb->rb_right)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1605: FILE: drivers/mtd/ubi/wl.c:1569:
+		else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1633: FILE: drivers/mtd/ubi/wl.c:1597:
+		if (rb->rb_left)
[...]
+		else if (rb->rb_right)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1637: FILE: drivers/mtd/ubi/wl.c:1601:
+		else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1686: FILE: drivers/mtd/ubi/wl.c:1650:
+	if (unlikely(ec != read_ec)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1691: FILE: drivers/mtd/ubi/wl.c:1655:
+	} else

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000466238.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 10 warnings, 33 checks, 1684 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000466238.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
