WARNING:EMAIL_SUBJECT: A patch subject line should describe the change not the tool that found it
#20: 
Subject: [patch v2 02/16] MMC: S3C24XX: Fix the checkpatch.pl errors in the s3cmci driver

Naming the tool that found the issue is not very useful in the
subject line.  A good subject line summarizes the change that
the patch brings.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'host' - possible side-effects?
#59: FILE: drivers/mmc/host/s3cmci.c:45:
+#define dbg(host, channels, args...)		  \
+	do {					  \
+	if (dbgmap_err & channels) 		  \
+		dev_err(&host->pdev->dev, args);  \
+	else if (dbgmap_info & channels)	  \
+		dev_info(&host->pdev->dev, args); \
+	else if (dbgmap_debug & channels)	  \
+		dev_dbg(&host->pdev->dev, args);  \
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'host' may be better as '(host)' to avoid precedence issues
#59: FILE: drivers/mmc/host/s3cmci.c:45:
+#define dbg(host, channels, args...)		  \
+	do {					  \
+	if (dbgmap_err & channels) 		  \
+		dev_err(&host->pdev->dev, args);  \
+	else if (dbgmap_info & channels)	  \
+		dev_info(&host->pdev->dev, args); \
+	else if (dbgmap_debug & channels)	  \
+		dev_dbg(&host->pdev->dev, args);  \
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'channels' - possible side-effects?
#59: FILE: drivers/mmc/host/s3cmci.c:45:
+#define dbg(host, channels, args...)		  \
+	do {					  \
+	if (dbgmap_err & channels) 		  \
+		dev_err(&host->pdev->dev, args);  \
+	else if (dbgmap_info & channels)	  \
+		dev_info(&host->pdev->dev, args); \
+	else if (dbgmap_debug & channels)	  \
+		dev_dbg(&host->pdev->dev, args);  \
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'channels' may be better as '(channels)' to avoid precedence issues
#59: FILE: drivers/mmc/host/s3cmci.c:45:
+#define dbg(host, channels, args...)		  \
+	do {					  \
+	if (dbgmap_err & channels) 		  \
+		dev_err(&host->pdev->dev, args);  \
+	else if (dbgmap_info & channels)	  \
+		dev_info(&host->pdev->dev, args); \
+	else if (dbgmap_debug & channels)	  \
+		dev_dbg(&host->pdev->dev, args);  \
+	} while (0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#60: FILE: drivers/mmc/host/s3cmci.c:46:
+	do {					  \
+	if (dbgmap_err & channels) 		  \

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#61: FILE: drivers/mmc/host/s3cmci.c:47:
+^Iif (dbgmap_err & channels) ^I^I  \$

WARNING:SPLIT_STRING: quoted string split across lines
#194: FILE: drivers/mmc/host/s3cmci.c:246:
 				dbg(host, dbg_pio, "pio_read(): "
+				    "complete (no more data).\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#302: FILE: drivers/mmc/host/s3cmci.c:341:
 			dbg(host, dbg_err, "unfinished %s "
+			    "- pio_count:[%u] pio_words:[%u]\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#417: FILE: drivers/mmc/host/s3cmci.c:582:
+	BUG_ON(!host->mrq);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#418: FILE: drivers/mmc/host/s3cmci.c:583:
+	BUG_ON(!host->mrq->data);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#419: FILE: drivers/mmc/host/s3cmci.c:584:
+	BUG_ON(!host->dmatogo);

WARNING:TYPO_SPELLING: 'Calulate' may be misspelled - perhaps 'Calculate'?
#481: FILE: drivers/mmc/host/s3cmci.c:681:
+	/* Calulate the amout of bytes transfer if there was no error */
 	   ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'amout' may be misspelled - perhaps 'amount'?
#481: FILE: drivers/mmc/host/s3cmci.c:681:
+	/* Calulate the amout of bytes transfer if there was no error */
 	                ^^^^^

WARNING:TYPO_SPELLING: 'transfering' may be misspelled - perhaps 'transferring'?
#491: FILE: drivers/mmc/host/s3cmci.c:689:
+	/* If we had an error while transfering data we flush the
 	                            ^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#492: FILE: drivers/mmc/host/s3cmci.c:690:
+	 * DMA channel and the fifo to clear out any garbage. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#652: FILE: drivers/mmc/host/s3cmci.c:861:
+	BUG_ON((data->flags & BOTH_DIR) == BOTH_DIR);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#680: FILE: drivers/mmc/host/s3cmci.c:884:
+	BUG_ON((data->flags & BOTH_DIR) == BOTH_DIR);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#725: FILE: drivers/mmc/host/s3cmci.c:931:
+	/* Clear command, data and fifo status registers
+	   Fifo clear only necessary on 2440, but doesn't hurt on 2410

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ios->power_mode == MMC_POWER_ON'
#865: FILE: drivers/mmc/host/s3cmci.c:1043:
+	if ((ios->power_mode == MMC_POWER_ON) ||
+	    (ios->power_mode == MMC_POWER_UP)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ios->power_mode == MMC_POWER_UP'
#865: FILE: drivers/mmc/host/s3cmci.c:1043:
+	if ((ios->power_mode == MMC_POWER_ON) ||
+	    (ios->power_mode == MMC_POWER_UP)) {

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#937: FILE: drivers/mmc/host/s3cmci.c:1193:
+	    (host->is2440?"2440":""),
 	                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#937: FILE: drivers/mmc/host/s3cmci.c:1193:
+	    (host->is2440?"2440":""),
 	                        ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000266877.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 15 warnings, 8 checks, 993 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000266877.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
