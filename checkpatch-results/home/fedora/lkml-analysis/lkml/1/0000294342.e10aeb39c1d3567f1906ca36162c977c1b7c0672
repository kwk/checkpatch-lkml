WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#185: FILE: fs/gfs2/bmap.c:250:
+						unsigned height)

WARNING:LINE_SPACING: Missing a blank line after declarations
#188: FILE: fs/gfs2/bmap.c:253:
+	unsigned int i;
+	for (i = 0; i < height - 1; i++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#297: FILE: fs/gfs2/bmap.c:309:
+		ret = gfs2_meta_indirect_buffer(ip, x+1, dblock, 0, &mp->mp_bh[x+1]);
 		                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#297: FILE: fs/gfs2/bmap.c:309:
+		ret = gfs2_meta_indirect_buffer(ip, x+1, dblock, 0, &mp->mp_bh[x+1]);
 		                                                                ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mp->mp_bh[i]"
#315: FILE: fs/gfs2/bmap.c:322:
+		if (mp->mp_bh[i] == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#348: FILE: fs/gfs2/bmap.c:382:
+					 unsigned offset, u64 bn)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#353: FILE: fs/gfs2/bmap.c:387:
+	BUG_ON(i < 1);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#354: FILE: fs/gfs2/bmap.c:388:
+	BUG_ON(mp->mp_bh[i] != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "mp->mp_bh[i]"
#354: FILE: fs/gfs2/bmap.c:388:
+	BUG_ON(mp->mp_bh[i] != NULL);

WARNING:TYPO_SPELLING: 'alloced' may be misspelled - perhaps 'allocated'?
#405: FILE: fs/gfs2/bmap.c:439:
+	unsigned n, i, blks, alloced = 0, iblks = 0, zmpl = 0;
 	                     ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#405: FILE: fs/gfs2/bmap.c:439:
+	unsigned n, i, blks, alloced = 0, iblks = 0, zmpl = 0;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#406: FILE: fs/gfs2/bmap.c:440:
+	unsigned dblks = 0;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#407: FILE: fs/gfs2/bmap.c:441:
+	unsigned ptrs_per_blk;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#408: FILE: fs/gfs2/bmap.c:442:
+	const unsigned end_of_metadata = height - 1;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#414: FILE: fs/gfs2/bmap.c:448:
+	BUG_ON(sheight < 1);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#415: FILE: fs/gfs2/bmap.c:449:
+	BUG_ON(dibh == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dibh"
#415: FILE: fs/gfs2/bmap.c:449:
+	BUG_ON(dibh == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#426: FILE: fs/gfs2/bmap.c:460:
+		BUG_ON(dblks < 1);

WARNING:TYPO_SPELLING: 'alloced' may be misspelled - perhaps 'allocated'?
#451: FILE: fs/gfs2/bmap.c:485:
+		n = blks - alloced;
 		           ^^^^^^^

WARNING:TYPO_SPELLING: 'alloced' may be misspelled - perhaps 'allocated'?
#453: FILE: fs/gfs2/bmap.c:487:
+		alloced += n;
 		^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#469: FILE: fs/gfs2/bmap.c:503:
+				gfs2_buffer_copy_tail(mp->mp_bh[i],
+						sizeof(struct gfs2_meta_header),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#472: FILE: fs/gfs2/bmap.c:506:
+				gfs2_buffer_clear_tail(dibh,
+						sizeof(struct gfs2_dinode) +

ERROR:SPACING: space required before the open parenthesis '('
#478: FILE: fs/gfs2/bmap.c:512:
+				for(i = zmpl; i < height; i++) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mp->mp_bh[i]"
#479: FILE: fs/gfs2/bmap.c:513:
+					if (mp->mp_bh[i] == NULL)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#491: FILE: fs/gfs2/bmap.c:525:
+				gfs2_trans_add_bh(ip->i_gl, mp->mp_bh[i-1], 1);
 				                                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#494: FILE: fs/gfs2/bmap.c:528:
+						   mp->mp_list[i-1], bn++);
 						                ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#501: FILE: fs/gfs2/bmap.c:535:
+			BUG_ON(n > dblks);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#502: FILE: fs/gfs2/bmap.c:536:
+			BUG_ON(mp->mp_bh[end_of_metadata] == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mp->mp_bh[end_of_metadata]"
#502: FILE: fs/gfs2/bmap.c:536:
+			BUG_ON(mp->mp_bh[end_of_metadata] == NULL);

WARNING:TYPO_SPELLING: 'alloced' may be misspelled - perhaps 'allocated'?
#514: FILE: fs/gfs2/bmap.c:548:
+	gfs2_add_inode_blocks(&ip->i_inode, alloced);
 	                                    ^^^^^^^

WARNING:TYPO_SPELLING: 'satify' may be misspelled - perhaps 'satisfy'?
#527: FILE: fs/gfs2/bmap.c:561:
+ * @create: True if its ok to alloc blocks to satify the request
                                               ^^^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#562: FILE: fs/gfs2/bmap.c:587:
+	BUG_ON(maxlen == 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#650: FILE: fs/gfs2/bmap.c:634:
+		BUG_ON(gfs2_is_stuffed(ip));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000294342.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 21 warnings, 11 checks, 679 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000294342.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
