WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#50: 
This patch implements a callbacks for device drivers that establish external

WARNING:TYPO_SPELLING: 'proces' may be misspelled - perhaps 'process'?
#79: 
remove all pages still mapped to the proces.
                                     ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#510: FILE: include/linux/rmap.h:140:
+	void (*invalidate_range)(struct mm_notifier *mn, struct mm_struct *mm,
+					unsigned long start, unsigned long end);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#512: FILE: include/linux/rmap.h:142:
+	void (*invalidate_range_sync)(struct mm_notifier *mn, struct mm_struct *mm,
+					unsigned long start, unsigned long end);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#514: FILE: include/linux/rmap.h:144:
+	void (*invalidate_page)(struct mm_notifier *mn, struct mm_struct *mm,
+					struct page *page, unsigned long addr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#516: FILE: include/linux/rmap.h:146:
+	void (*invalidate_page_sync)(struct mm_notifier *mn, struct mm_struct *mm,
+								struct page *page);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#535: FILE: include/linux/rmap.h:165:
+static inline void mm_notifier_register(struct mm_notifier *mn,
+						struct mm_struct *mm)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#552: FILE: include/linux/rmap.h:182:
+static inline void mm_notifier_invalidate_range(struct mm_struct *mm,
+			unsigned long start, unsigned long end)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#566: FILE: include/linux/rmap.h:196:
+static inline void mm_notifier_invalidate_range_sync(struct mm_struct *mm,
+			unsigned long start, unsigned long end)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#580: FILE: include/linux/rmap.h:210:
+static inline void mm_notifier_invalidate_page(struct mm_struct *mm,
+					struct page *page, unsigned long addr)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#608: FILE: include/linux/rmap.h:238:
+		if (mn->ops->invalidate_page_sync)
+				mn->ops->invalidate_page_sync(mn, mn->mm, page);

CHECK:BRACES: braces {} should be used on all arms of this statement
#641: FILE: include/linux/rmap.h:271:
+			if (mm_notifier_page_sync != mn) {
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#647: FILE: include/linux/rmap.h:277:
+			} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#657: FILE: include/linux/rmap.h:287:
+static inline void mm_notifier_invalidate_range(struct mm_struct *mm,
+			unsigned long start, unsigned long end) {}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#659: FILE: include/linux/rmap.h:289:
+static inline void mm_notifier_invalidate_range_sync(struct mm_struct *mm,
+			unsigned long start, unsigned long end) {}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#661: FILE: include/linux/rmap.h:291:
+static inline void mm_notifier_invalidate_page(struct mm_struct *mm,
+			struct page *page, unsigned long address) {}

CHECK:CAMELCASE: Avoid CamelCase: <Notifier>
#710: FILE: include/linux/page-flags.h:177:
+PAGEFLAG(Notifier, notifier);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#724: FILE: fs/hugetlbfs/inode.c:446:
+		mm_notifier_invalidate_range_sync(vma->vm_mm,
+				vma->vm_start + v_offset, vma->vm_end);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000279604.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 15 checks, 479 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000279604.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
