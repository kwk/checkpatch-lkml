WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
Promise TX4 support bugfix, DMA modes reporting and validity checking fixes,

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#98: FILE: drivers/ide/Kconfig:394:
BLK_DEV_HPT366 || BLK_DEV_PDC202XX_NEW || BLK_DEV_PDC202XX_OLD || BLK_DEV_TC86C001)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#168: FILE: drivers/ide/ide-cd.c:3024:
+	printk(KERN_CONT ", %dkB Cache\n", be16_to_cpu(cap.buffer_size));

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#168: FILE: drivers/ide/ide-cd.c:3024:
+	printk(KERN_CONT ", %dkB Cache\n", be16_to_cpu(cap.buffer_size));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#218: FILE: drivers/ide/ide-disk.c:938:
+	printk(KERN_CONT ", CHS=%d/%d/%d\n",

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#218: FILE: drivers/ide/ide-disk.c:938:
+	printk(KERN_CONT ", CHS=%d/%d/%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: drivers/ide/ide-disk.c:939:
+	printk(KERN_CONT ", CHS=%d/%d/%d\n",
+			 drive->bios_cyl, drive->bios_head, drive->bios_sect);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#247: FILE: drivers/ide/ide-dma.c:752:
+	printk(KERN_INFO "%s: %s mode selected\n", drive->name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#248: FILE: drivers/ide/ide-dma.c:753:
+	printk(KERN_INFO "%s: %s mode selected\n", drive->name,
 			  mode ? ide_xfer_verbose(mode) : "no DMA");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#323: FILE: drivers/ide/ide-dma.c:821:
+	printk(KERN_ERR "%s: bad DMA info in identify block\n", drive->name);

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#370: FILE: drivers/ide/ide-lib.c:33:
+static const char *udma_str[] =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#371: FILE: drivers/ide/ide-lib.c:34:
+static const char *udma_str[] =
+	 { "UDMA/16", "UDMA/25",  "UDMA/33",  "UDMA/44",

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#373: FILE: drivers/ide/ide-lib.c:36:
+static const char *mwdma_str[] =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#374: FILE: drivers/ide/ide-lib.c:37:
+static const char *mwdma_str[] =
+	{ "MWDMA0", "MWDMA1", "MWDMA2" };

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#375: FILE: drivers/ide/ide-lib.c:38:
+static const char *swdma_str[] =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#376: FILE: drivers/ide/ide-lib.c:39:
+static const char *swdma_str[] =
+	{ "SWDMA0", "SWDMA1", "SWDMA2" };

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#377: FILE: drivers/ide/ide-lib.c:40:
+static const char *pio_str[] =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#378: FILE: drivers/ide/ide-lib.c:41:
+static const char *pio_str[] =
+	{ "PIO0", "PIO1", "PIO2", "PIO3", "PIO4", "PIO5" };

WARNING:LINE_SPACING: Missing a blank line after declarations
#504: FILE: drivers/ide/ide.c:1683:
+	ide_drive_t *drive = to_ide_device(dev);
+	return sprintf(buf, "%s\n", drive->id->model);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#511: FILE: drivers/ide/ide.c:1690:
+	ide_drive_t *drive = to_ide_device(dev);
+	return sprintf(buf, "%s\n", drive->id->fw_rev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#518: FILE: drivers/ide/ide.c:1697:
+	ide_drive_t *drive = to_ide_device(dev);
+	return sprintf(buf, "%s\n", drive->id->serial_no);

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#538: FILE: drivers/ide/pci/hpt366.c:2:
+ * linux/drivers/ide/pci/hpt366.c		Version 1.22	Dec 4, 2007

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#546: FILE: drivers/ide/pci/hpt366.c:313:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#727: FILE: drivers/ide/setup-pci.c:799:
+			printk(KERN_ERR "%s: failed to register %s driver\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#728: FILE: drivers/ide/setup-pci.c:800:
+			printk(KERN_ERR "%s: failed to register %s driver\n",
+					__FUNCTION__, d->driver.mod_name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#728: FILE: drivers/ide/setup-pci.c:800:
+					__FUNCTION__, d->driver.mod_name);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#792: FILE: include/linux/ide.h:1258:
+int ide_id_dma_bug(ide_drive_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000347960.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 19 warnings, 3 checks, 643 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000347960.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
