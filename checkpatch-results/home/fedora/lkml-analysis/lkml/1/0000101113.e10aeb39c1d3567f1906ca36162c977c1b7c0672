WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
> On Sun, Jun 28, 2009 at 05:59:45PM +0200, Bartlomiej Zolnierkiewicz wrote:

WARNING:BAD_SIGN_OFF: Duplicate signature
#148: 
Cc: Forest Bond <forest@alittletooquiet.net>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Duplicate signature
#149: 
Signed-off-by: Bartlomiej Zolnierkiewicz <bzolnier@gmail.com>

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: drivers/staging/vt6655/hostap.c:103:
+    PSDevice apdev_priv;$

CHECK:CAMELCASE: Avoid CamelCase: <PSDevice>
#191: FILE: drivers/staging/vt6655/hostap.c:103:
+    PSDevice apdev_priv;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: drivers/staging/vt6655/hostap.c:128:
+    pDevice->apdev = (struct net_device *)kmalloc(sizeof(struct net_device), GFP_KERNEL);$

CHECK:CAMELCASE: Avoid CamelCase: <pDevice>
#200: FILE: drivers/staging/vt6655/hostap.c:128:
+    pDevice->apdev = (struct net_device *)kmalloc(sizeof(struct net_device), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#200: FILE: drivers/staging/vt6655/hostap.c:128:
+    pDevice->apdev = (struct net_device *)kmalloc(sizeof(struct net_device), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*pDevice->apdev)...) over kmalloc(sizeof(struct net_device)...)
#200: FILE: drivers/staging/vt6655/hostap.c:128:
+    pDevice->apdev = (struct net_device *)kmalloc(sizeof(struct net_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: drivers/staging/vt6655/hostap.c:133:
+    apdev_priv = netdev_priv(pDevice->apdev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: drivers/staging/vt6655/hostap.c:134:
+    *apdev_priv = *pDevice;$

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#209: FILE: drivers/staging/vt6655/hostap.c:135:
We don't use alloc_netdev() for apdev allocation so by using netdev_priv()

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: drivers/staging/vt6655/wpactl.c:115:
+    PSDevice wpadev_priv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: drivers/staging/vt6655/wpactl.c:123:
+    wpadev_priv = netdev_priv(pDevice->wpadev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: drivers/staging/vt6655/wpactl.c:124:
+    *wpadev_priv = *pDevice;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000101113.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 11 warnings, 3 checks, 84 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000101113.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
