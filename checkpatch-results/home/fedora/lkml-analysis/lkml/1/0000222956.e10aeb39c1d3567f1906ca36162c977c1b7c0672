WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#51: 
> > is also needed to selinux_capset_check() too, but this doesn't look like

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#90: FILE: include/linux/security.h:52:
+extern int cap_capset_check(kernel_cap_t *effective, kernel_cap_t *inheritable, kernel_cap_t *permitted);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#90: FILE: include/linux/security.h:52:
+extern int cap_capset_check(kernel_cap_t *effective, kernel_cap_t *inheritable, kernel_cap_t *permitted);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#91: FILE: include/linux/security.h:53:
+extern void cap_capset_set(kernel_cap_t *effective, kernel_cap_t *inheritable, kernel_cap_t *permitted);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#91: FILE: include/linux/security.h:53:
+extern void cap_capset_set(kernel_cap_t *effective, kernel_cap_t *inheritable, kernel_cap_t *permitted);

WARNING:SPACING: Unnecessary space before function pointer arguments
#129: FILE: include/linux/security.h:1293:
+	int (*capset_check) (kernel_cap_t *effective,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#134: FILE: include/linux/security.h:1296:
+	void (*capset_set) (kernel_cap_t *effective,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#214: FILE: security/commoncap.c:106:
+int cap_capset_check (kernel_cap_t *effective, kernel_cap_t *inheritable,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#241: FILE: security/commoncap.c:127:
+			   cap_combine (t->cap_permitted,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#252: FILE: security/commoncap.c:140:
+void cap_capset_set (kernel_cap_t *effective, kernel_cap_t *inheritable,

WARNING:LINE_SPACING: Missing a blank line after declarations
#259: FILE: security/commoncap.c:144:
+	struct task_struct *t = current;
+	t->cap_effective = *effective;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000222956.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 2 checks, 223 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000222956.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
