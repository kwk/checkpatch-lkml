WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
master.kernel.org:/pub/scm/linux/kernel/git/jgarzik/libata-dev.git upstream-linus

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#74: FILE: drivers/ata/Kconfig:541:
+config PATA_RB500
+	tristate "RouterBoard 500 PATA CompactFlash support"
+	depends on MIKROTIK_RB500
+	help
+	  This option enables support for the RouterBoard 500
+	  PATA CompactFlash controller.
+
+	  If unsure, say N.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#189: FILE: drivers/ata/libata-core.c:1723:
+		ata_port_printk(ap, KERN_DEBUG, "%s: EXIT\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#198: FILE: drivers/ata/libata-core.c:2060:
+		ata_dev_printk(dev, KERN_DEBUG, "%s: ENTER\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#213: FILE: drivers/ata/libata-core.c:2262:
+		ata_dev_printk(dev, KERN_DEBUG, "%s: ENTER\n", __func__);

WARNING:SPLIT_STRING: quoted string split across lines
#253: FILE: drivers/ata/libata-eh.c:2156:
+			ata_link_printk(link, KERN_INFO, "no reset method "
+					"available, skipping reset\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:BRACES: braces {} should be used on all arms of this statement
#312: FILE: drivers/ata/libata-sff.c:173:
+		if (likely(ioaddr->ctl_addr)) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#321: FILE: drivers/ata/libata-sff.c:182:
+		} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#363: FILE: drivers/ata/pata_pdc2027x.c:42:
+#define PDPRINTK(fmt, args...) printk(KERN_ERR "%s: " fmt, __func__, ## args)

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#368: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#373: FILE: drivers/ata/pata_rb500_cf.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/gpio.h> instead of <asm/gpio.h>
#405: FILE: drivers/ata/pata_rb500_cf.c:33:
+#include <asm/gpio.h>

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#439: FILE: drivers/ata/pata_rb500_cf.c:67:
+static void rb500_pata_exec_command(struct ata_port *ap,
+				const struct ata_taskfile *tf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#446: FILE: drivers/ata/pata_rb500_cf.c:74:
+static void rb500_pata_data_xfer(struct ata_device *adev, unsigned char *buf,
+				unsigned int buflen, int write_data)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#506: FILE: drivers/ata/pata_rb500_cf.c:134:
+^I.check_status ^I^I= ata_check_status,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#507: FILE: drivers/ata/pata_rb500_cf.c:135:
+^I.dev_select ^I^I= ata_std_dev_select,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#511: FILE: drivers/ata/pata_rb500_cf.c:139:
+^I.qc_prep ^I^I= ata_qc_prep,$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#568: FILE: drivers/ata/pata_rb500_cf.c:196:
+static __devinit int rb500_pata_driver_probe(struct platform_device *pdev)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#617: FILE: drivers/ata/pata_rb500_cf.c:245:
+	info->iobase = devm_ioremap_nocache(&pdev->dev, res->start,
+				res->end - res->start + 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#624: FILE: drivers/ata/pata_rb500_cf.c:252:
+		dev_err(&pdev->dev, "unable to set GPIO direction, err=%d\n",
+				ret);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#643: FILE: drivers/ata/pata_rb500_cf.c:271:
+static __devexit int rb500_pata_driver_remove(struct platform_device *pdev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#669: FILE: drivers/ata/pata_rb500_cf.c:297:
+	printk(KERN_INFO DRV_INFO "\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000308995.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 16 warnings, 6 checks, 561 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000308995.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
