WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
  cfq where all the reuquests are queued in queue and common data and tunables

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#272: FILE: block/as-iosched.c:971:
 	return time_after(jiffies, ad->current_batch_expires)
+		|| asq->current_write_count == 0;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#376: FILE: block/as-iosched.c:1115:
+		BUG_ON(RB_EMPTY_ROOT(&asq->sort_list[BLK_RW_SYNC]));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#396: FILE: block/as-iosched.c:1139:
+		BUG_ON(RB_EMPTY_ROOT(&asq->sort_list[BLK_RW_ASYNC]));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#487: FILE: block/as-iosched.c:1341:
+static void *as_alloc_as_queue(struct request_queue *q,
+				struct elevator_queue *eq, gfp_t gfp_mask)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!asq"
#493: FILE: block/as-iosched.c:1347:
+	if (asq == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#515: FILE: block/as-iosched.c:1369:
+	BUG_ON(!list_empty(&asq->fifo_list[BLK_RW_SYNC]));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#516: FILE: block/as-iosched.c:1370:
+	BUG_ON(!list_empty(&asq->fifo_list[BLK_RW_ASYNC]));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#734: FILE: block/deadline-iosched.c:285:
+		BUG_ON(RB_EMPTY_ROOT(&dq->sort_list[READ]));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#746: FILE: block/deadline-iosched.c:301:
+		BUG_ON(RB_EMPTY_ROOT(&dq->sort_list[WRITE]));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#791: FILE: block/deadline-iosched.c:344:
+static void *deadline_alloc_deadline_queue(struct request_queue *q,
+				struct elevator_queue *eq, gfp_t gfp_mask)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dq"
#799: FILE: block/deadline-iosched.c:349:
+	if (dq == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#811: FILE: block/deadline-iosched.c:361:
+static void deadline_free_deadline_queue(struct elevator_queue *e,
+						void *sched_queue)

WARNING:TYPO_SPELLING: 'instanciate' may be misspelled - perhaps 'instantiate'?
#880: FILE: block/elevator.c:213:
+	/* IO scheduler does not instanciate data (noop), it is not an error */
 	                         ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'strore' may be misspelled - perhaps 'store'?
#887: FILE: block/elevator.c:220:
+	/* Not all io schedulers (cfq) strore sched_queue */
 	                               ^^^^^^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#904: FILE: block/elevator.c:237:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1021: FILE: block/elevator.c:1239:
+	 * there. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1122: FILE: block/noop-iosched.c:65:
+static void *noop_alloc_noop_queue(struct request_queue *q,
+				struct elevator_queue *eq, gfp_t gfp_mask)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!nq"
#1133: FILE: block/noop-iosched.c:70:
+	if (nq == NULL)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1206: FILE: include/linux/elevator.h:262:
+extern void *elv_get_sched_queue_current(struct request_queue *q);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000067760.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 10 warnings, 10 checks, 1065 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000067760.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
