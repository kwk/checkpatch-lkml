ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#30: 
--- a/debug/mdb.c	1969-12-31 17:00:00.000000000 -0700

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#33: FILE: debug/mdb.c:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#35: FILE: debug/mdb.c:3:
+/***************************************************************************
+*

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:CAMELCASE: Avoid CamelCase: <MDBInitializeDebugger>
#78: FILE: debug/mdb.c:46:
+extern void MDBInitializeDebugger(void);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <MDBClearDebuggerState>
#79: FILE: debug/mdb.c:47:
+extern void MDBClearDebuggerState(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#79: FILE: debug/mdb.c:47:
+extern void MDBClearDebuggerState(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#81: FILE: debug/mdb.c:49:
+ULONG TotalSystemMemory = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

CHECK:CAMELCASE: Avoid CamelCase: <TotalSystemMemory>
#81: FILE: debug/mdb.c:49:
+ULONG TotalSystemMemory = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#82: FILE: debug/mdb.c:50:
+ULONG HistoryPointer = 0;

CHECK:CAMELCASE: Avoid CamelCase: <HistoryPointer>
#82: FILE: debug/mdb.c:50:
+ULONG HistoryPointer = 0;

CHECK:CAMELCASE: Avoid CamelCase: <HistoryBuffer>
#83: FILE: debug/mdb.c:51:
+BYTE HistoryBuffer[16][256]; // remember last 32 non-repeating commands

CHECK:CAMELCASE: Avoid CamelCase: <xFF>
#85: FILE: debug/mdb.c:53:
+void set_delimiter(BYTE c) {  delim_table[c & 0xFF] = TRUE;  }

CHECK:CAMELCASE: Avoid CamelCase: <SaveLastCommandInfo>
#87: FILE: debug/mdb.c:55:
+void SaveLastCommandInfo(ULONG processor)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: debug/mdb.c:57:
+    register int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: debug/mdb.c:59:
+    repeatCommand = 0;$

CHECK:CAMELCASE: Avoid CamelCase: <repeatCommand>
#91: FILE: debug/mdb.c:59:
+    repeatCommand = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: debug/mdb.c:60:
+    lastCommand = toupper(debugCommand[0]);$

CHECK:CAMELCASE: Avoid CamelCase: <lastCommand>
#92: FILE: debug/mdb.c:60:
+    lastCommand = toupper(debugCommand[0]);

CHECK:CAMELCASE: Avoid CamelCase: <debugCommand>
#92: FILE: debug/mdb.c:60:
+    lastCommand = toupper(debugCommand[0]);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: debug/mdb.c:61:
+    lastDisplayLength = displayLength;$

CHECK:CAMELCASE: Avoid CamelCase: <lastDisplayLength>
#93: FILE: debug/mdb.c:61:
+    lastDisplayLength = displayLength;

CHECK:CAMELCASE: Avoid CamelCase: <displayLength>
#93: FILE: debug/mdb.c:61:
+    lastDisplayLength = displayLength;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: debug/mdb.c:62:
+    ProcessorMode[processor] = 0;$

CHECK:CAMELCASE: Avoid CamelCase: <ProcessorMode>
#94: FILE: debug/mdb.c:62:
+    ProcessorMode[processor] = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: debug/mdb.c:64:
+    for (i=0; (i < 80) && (debugCommand[i]); i++)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#96: FILE: debug/mdb.c:64:
+    for (i=0; (i < 80) && (debugCommand[i]); i++)
+    {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#96: FILE: debug/mdb.c:64:
+    for (i=0; (i < 80) && (debugCommand[i]); i++)
+    {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#96: FILE: debug/mdb.c:64:
+    for (i=0; (i < 80) && (debugCommand[i]); i++)
           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: debug/mdb.c:65:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: debug/mdb.c:66:
+       if ((debugCommand[i] == '\n') || (debugCommand[i] == '\r'))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#98: FILE: debug/mdb.c:66:
+       if ((debugCommand[i] == '\n') || (debugCommand[i] == '\r'))
+          lastDebugCommand[i] = '\0';

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: debug/mdb.c:67:
+          lastDebugCommand[i] = '\0';$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: debug/mdb.c:67:
+          lastDebugCommand[i] = '\0';$

CHECK:CAMELCASE: Avoid CamelCase: <lastDebugCommand>
#99: FILE: debug/mdb.c:67:
+          lastDebugCommand[i] = '\0';

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: debug/mdb.c:68:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#100: FILE: debug/mdb.c:68:
+       else
+          lastDebugCommand[i] = debugCommand[i];

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: debug/mdb.c:69:
+          lastDebugCommand[i] = debugCommand[i];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: debug/mdb.c:69:
+          lastDebugCommand[i] = debugCommand[i];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: debug/mdb.c:70:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: debug/mdb.c:71:
+    lastDebugCommand[i] = '\0';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: debug/mdb.c:73:
+    return;$

CHECK:CAMELCASE: Avoid CamelCase: <StackFrame>
#108: FILE: debug/mdb.c:76:
+StackFrame CurrentStackFrame[MAX_PROCESSORS];

CHECK:CAMELCASE: Avoid CamelCase: <CurrentStackFrame>
#108: FILE: debug/mdb.c:76:
+StackFrame CurrentStackFrame[MAX_PROCESSORS];

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#111: FILE: debug/mdb.c:79:
+BYTE *mdb_oops = NULL;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#112: FILE: debug/mdb.c:80:
+BYTE *last_mdb_oops = NULL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: debug/mdb.c:84:
+    register ULONG retCode = 0, processor = get_processor_id();$

CHECK:CAMELCASE: Avoid CamelCase: <retCode>
#116: FILE: debug/mdb.c:84:
+    register ULONG retCode = 0, processor = get_processor_id();

WARNING:LINE_SPACING: Missing a blank line after declarations
#117: FILE: debug/mdb.c:85:
+    register ULONG retCode = 0, processor = get_processor_id();
+    extern void ReadStackFrame(void *, StackFrame *, ULONG);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: debug/mdb.c:85:
+    extern void ReadStackFrame(void *, StackFrame *, ULONG);$

CHECK:CAMELCASE: Avoid CamelCase: <ReadStackFrame>
#117: FILE: debug/mdb.c:85:
+    extern void ReadStackFrame(void *, StackFrame *, ULONG);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#117: FILE: debug/mdb.c:85:
+    extern void ReadStackFrame(void *, StackFrame *, ULONG);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#117: FILE: debug/mdb.c:85:
+    extern void ReadStackFrame(void *, StackFrame *, ULONG);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ULONG' should also have an identifier name
#117: FILE: debug/mdb.c:85:
+    extern void ReadStackFrame(void *, StackFrame *, ULONG);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: debug/mdb.c:86:
+    extern void WriteStackFrame(void *, StackFrame *, ULONG);$

CHECK:CAMELCASE: Avoid CamelCase: <WriteStackFrame>
#118: FILE: debug/mdb.c:86:
+    extern void WriteStackFrame(void *, StackFrame *, ULONG);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#118: FILE: debug/mdb.c:86:
+    extern void WriteStackFrame(void *, StackFrame *, ULONG);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#118: FILE: debug/mdb.c:86:
+    extern void WriteStackFrame(void *, StackFrame *, ULONG);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ULONG' should also have an identifier name
#118: FILE: debug/mdb.c:86:
+    extern void WriteStackFrame(void *, StackFrame *, ULONG);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: debug/mdb.c:87:
+    unsigned long state;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: debug/mdb.c:89:
+    extern int kmsg_redirect;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: debug/mdb.c:90:
+    int kmsg_redirect_save;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: debug/mdb.c:93:
+    preempt_disable();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: debug/mdb.c:95:
+    kmsg_redirect_save = kmsg_redirect;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: debug/mdb.c:96:
+    kmsg_redirect = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: debug/mdb.c:99:
+    last_mdb_oops = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: debug/mdb.c:100:
+    if (mdb_oops)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#132: FILE: debug/mdb.c:100:
+    if (mdb_oops)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#132: FILE: debug/mdb.c:100:
+    if (mdb_oops)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: debug/mdb.c:101:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: debug/mdb.c:102:
+       last_mdb_oops = mdb_oops;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: debug/mdb.c:103:
+       mdb_oops = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: debug/mdb.c:104:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: debug/mdb.c:105:
+    atomic_inc(&inmdb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: debug/mdb.c:106:
+    state = save_flags();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: debug/mdb.c:107:
+    memset(&CurrentStackFrame[processor], 0, sizeof(StackFrame));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: debug/mdb.c:108:
+    ReadStackFrame(frame, &CurrentStackFrame[processor], processor);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: debug/mdb.c:109:
+    CurrentStackFrame[processor].tReserved[2] = (ULONG)frame;$

CHECK:CAMELCASE: Avoid CamelCase: <tReserved>
#141: FILE: debug/mdb.c:109:
+    CurrentStackFrame[processor].tReserved[2] = (ULONG)frame;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: debug/mdb.c:110:
+    retCode = debugger_entry(reason, &CurrentStackFrame[processor],$

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: debug/mdb.c:111:
+                             processor);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: debug/mdb.c:111:
+                             processor);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: debug/mdb.c:112:
+    WriteStackFrame(frame, &CurrentStackFrame[processor], processor);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: debug/mdb.c:114:
+    restore_flags(state);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: debug/mdb.c:115:
+    atomic_dec(&inmdb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: debug/mdb.c:118:
+    kmsg_redirect = kmsg_redirect_save;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: debug/mdb.c:120:
+    preempt_enable();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: debug/mdb.c:122:
+    return retCode;$

CHECK:CAMELCASE: Avoid CamelCase: <MDBDebugger>
#159: FILE: debug/mdb.c:127:
+ALT_DEBUGGER MDBDebugger = { NULL, NULL, NULL };

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: debug/mdb.c:131:
+   register int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: debug/mdb.c:133:
+   MDBInitializeDebugger();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: debug/mdb.c:134:
+   MDBDebugger.AlternateDebugger = mdb;$

CHECK:CAMELCASE: Avoid CamelCase: <AlternateDebugger>
#166: FILE: debug/mdb.c:134:
+   MDBDebugger.AlternateDebugger = mdb;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: debug/mdb.c:135:
+   AddAlternateDebugger(&MDBDebugger);$

CHECK:CAMELCASE: Avoid CamelCase: <AddAlternateDebugger>
#167: FILE: debug/mdb.c:135:
+   AddAlternateDebugger(&MDBDebugger);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: debug/mdb.c:138:
+   for (i=0; i < 256; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 6)
#170: FILE: debug/mdb.c:138:
+   for (i=0; i < 256; i++)
+      delim_table[i] = '\0';

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#170: FILE: debug/mdb.c:138:
+   for (i=0; i < 256; i++)
          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: debug/mdb.c:139:
+      delim_table[i] = '\0';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: debug/mdb.c:141:
+   set_delimiter('\0');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: debug/mdb.c:142:
+   set_delimiter('\n');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: debug/mdb.c:143:
+   set_delimiter('\r');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: debug/mdb.c:144:
+   set_delimiter('[');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: debug/mdb.c:145:
+   set_delimiter(']');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: debug/mdb.c:146:
+   set_delimiter('<');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: debug/mdb.c:147:
+   set_delimiter('>');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: debug/mdb.c:148:
+   set_delimiter('(');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: debug/mdb.c:149:
+   set_delimiter(')');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: debug/mdb.c:150:
+   set_delimiter('|');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: debug/mdb.c:151:
+   set_delimiter('&');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: debug/mdb.c:152:
+   set_delimiter('=');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: debug/mdb.c:153:
+   set_delimiter('*');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: debug/mdb.c:154:
+   set_delimiter('+');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: debug/mdb.c:155:
+   set_delimiter('-');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: debug/mdb.c:156:
+   set_delimiter('/');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: debug/mdb.c:157:
+   set_delimiter('%');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: debug/mdb.c:158:
+   set_delimiter('~');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: debug/mdb.c:159:
+   set_delimiter('^');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: debug/mdb.c:160:
+   set_delimiter('!');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: debug/mdb.c:161:
+   set_delimiter(' ');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: debug/mdb.c:163:
+   return 0;$

CHECK:CAMELCASE: Avoid CamelCase: <ScreenInputFromKeyboard>
#198: FILE: debug/mdb.c:166:
+ULONG ScreenInputFromKeyboard(BYTE *buf, ULONG buf_index, ULONG max_index)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: debug/mdb.c:168:
+    register ULONG key;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: debug/mdb.c:169:
+    register BYTE *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: debug/mdb.c:170:
+    register int i, r, temp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: debug/mdb.c:171:
+    register ULONG orig_index, HistoryIndex;$

CHECK:CAMELCASE: Avoid CamelCase: <HistoryIndex>
#203: FILE: debug/mdb.c:171:
+    register ULONG orig_index, HistoryIndex;

WARNING:LINE_SPACING: Missing a blank line after declarations
#204: FILE: debug/mdb.c:172:
+    register ULONG orig_index, HistoryIndex;
+    extern ULONG IsAccelerator(ULONG);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: debug/mdb.c:172:
+    extern ULONG IsAccelerator(ULONG);$

CHECK:CAMELCASE: Avoid CamelCase: <IsAccelerator>
#204: FILE: debug/mdb.c:172:
+    extern ULONG IsAccelerator(ULONG);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#204: FILE: debug/mdb.c:172:
+    extern ULONG IsAccelerator(ULONG);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ULONG' should also have an identifier name
#204: FILE: debug/mdb.c:172:
+    extern ULONG IsAccelerator(ULONG);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: debug/mdb.c:174:
+    if (buf_index > max_index)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#206: FILE: debug/mdb.c:174:
+    if (buf_index > max_index)
+       return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: debug/mdb.c:175:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: debug/mdb.c:177:
+    if (!max_index)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#209: FILE: debug/mdb.c:177:
+    if (!max_index)
+       return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: debug/mdb.c:178:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: debug/mdb.c:180:
+    orig_index = buf_index;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: debug/mdb.c:182:
+    p = (BYTE *)((ULONG)buf + (ULONG)buf_index);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: debug/mdb.c:183:
+    for (i=0; i < (max_index - buf_index); i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#215: FILE: debug/mdb.c:183:
+    for (i=0; i < (max_index - buf_index); i++)
+       *p++ = '\0';

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#215: FILE: debug/mdb.c:183:
+    for (i=0; i < (max_index - buf_index); i++)
           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: debug/mdb.c:184:
+       *p++ = '\0';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: debug/mdb.c:186:
+    HistoryIndex = HistoryPointer;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: debug/mdb.c:187:
+    while (1)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#219: FILE: debug/mdb.c:187:
+    while (1)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#219: FILE: debug/mdb.c:187:
+    while (1)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: debug/mdb.c:188:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: debug/mdb.c:189:
+       key = mdb_getkey();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: debug/mdb.c:191:
+       if ((IsAccelerator(key)) && (key != 13))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#223: FILE: debug/mdb.c:191:
+       if ((IsAccelerator(key)) && (key != 13))
+	  return key;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'key != 13'
#223: FILE: debug/mdb.c:191:
+       if ((IsAccelerator(key)) && (key != 13))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TABSTOP: Statements should start on a tabstop
#224: FILE: debug/mdb.c:192:
+	  return key;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: debug/mdb.c:194:
+       switch (key)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#226: FILE: debug/mdb.c:194:
+       switch (key)
+       {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: debug/mdb.c:195:
+       {$

WARNING:TABSTOP: Statements should start on a tabstop
#228: FILE: debug/mdb.c:196:
+	  case 8: // backspace

WARNING:TABSTOP: Statements should start on a tabstop
#229: FILE: debug/mdb.c:197:
+	     if (buf_index)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#229: FILE: debug/mdb.c:197:
+	     if (buf_index)
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#230: FILE: debug/mdb.c:198:
+	     {

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: debug/mdb.c:199:
+                register int delta;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: debug/mdb.c:199:
+                register int delta;$

CHECK:CAMELCASE: Avoid CamelCase: <DBGPrint>
#234: FILE: debug/mdb.c:202:
+		DBGPrint("\b \b");

ERROR:CODE_INDENT: code indent should use tabs where possible
#241: FILE: debug/mdb.c:209:
+                delta = strlen(buf) - buf_index;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: debug/mdb.c:209:
+                delta = strlen(buf) - buf_index;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: debug/mdb.c:211:
+                for (i=0; i < delta; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: debug/mdb.c:211:
+                for (i=0; i < delta; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 18)
#243: FILE: debug/mdb.c:211:
+                for (i=0; i < delta; i++)
+                  DBGPrint(" ");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#243: FILE: debug/mdb.c:211:
+                for (i=0; i < delta; i++)
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: debug/mdb.c:212:
+                  DBGPrint(" ");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: debug/mdb.c:212:
+                  DBGPrint(" ");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: debug/mdb.c:214:
+                for (i=0; i < delta; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: debug/mdb.c:214:
+                for (i=0; i < delta; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#246: FILE: debug/mdb.c:214:
+                for (i=0; i < delta; i++)
+                   DBGPrint("\b");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#246: FILE: debug/mdb.c:214:
+                for (i=0; i < delta; i++)
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: debug/mdb.c:215:
+                   DBGPrint("\b");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: debug/mdb.c:215:
+                   DBGPrint("\b");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: debug/mdb.c:217:
+^I        p = (BYTE *) &buf[buf_index];$

CHECK:SPACING: No space is necessary after a cast
#249: FILE: debug/mdb.c:217:
+	        p = (BYTE *) &buf[buf_index];

ERROR:CODE_INDENT: code indent should use tabs where possible
#250: FILE: debug/mdb.c:218:
+^I        temp = buf_index;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#251: FILE: debug/mdb.c:219:
+^I        p++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#252: FILE: debug/mdb.c:220:
+^I        while ((*p) && (temp < max_index))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#252: FILE: debug/mdb.c:220:
+	        while ((*p) && (temp < max_index))
+		   buf[temp++] = *p++;

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: debug/mdb.c:222:
+^I        buf[temp] = '\0';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#256: FILE: debug/mdb.c:224:
+                delta = strlen(buf) - buf_index;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: debug/mdb.c:224:
+                delta = strlen(buf) - buf_index;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#258: FILE: debug/mdb.c:226:
+                for (i=0; (i < delta) && (buf[i]); i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: debug/mdb.c:226:
+                for (i=0; (i < delta) && (buf[i]); i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 18)
#258: FILE: debug/mdb.c:226:
+                for (i=0; (i < delta) && (buf[i]); i++)
+                  DBGPrint("%c", buf[buf_index + i]);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#258: FILE: debug/mdb.c:226:
+                for (i=0; (i < delta) && (buf[i]); i++)
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: debug/mdb.c:227:
+                  DBGPrint("%c", buf[buf_index + i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: debug/mdb.c:227:
+                  DBGPrint("%c", buf[buf_index + i]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#261: FILE: debug/mdb.c:229:
+                for (i=0; i < delta; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: debug/mdb.c:229:
+                for (i=0; i < delta; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#261: FILE: debug/mdb.c:229:
+                for (i=0; i < delta; i++)
+                   DBGPrint("\b");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#261: FILE: debug/mdb.c:229:
+                for (i=0; i < delta; i++)
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#262: FILE: debug/mdb.c:230:
+                   DBGPrint("\b");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: debug/mdb.c:230:
+                   DBGPrint("\b");$

WARNING:TABSTOP: Statements should start on a tabstop
#263: FILE: debug/mdb.c:231:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#264: FILE: debug/mdb.c:232:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#266: FILE: debug/mdb.c:234:
+	  case K_P7: // home

ERROR:CODE_INDENT: code indent should use tabs where possible
#267: FILE: debug/mdb.c:235:
+             {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: debug/mdb.c:235:
+             {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: debug/mdb.c:236:
+                BYTE s[256];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: debug/mdb.c:236:
+                BYTE s[256];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: debug/mdb.c:238:
+                for (i=0; (i < buf_index) && (i < 255); i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: debug/mdb.c:238:
+                for (i=0; (i < buf_index) && (i < 255); i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#270: FILE: debug/mdb.c:238:
+                for (i=0; (i < buf_index) && (i < 255); i++)
+                   s[i] = '\b';

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#270: FILE: debug/mdb.c:238:
+                for (i=0; (i < buf_index) && (i < 255); i++)
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#271: FILE: debug/mdb.c:239:
+                   s[i] = '\b';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: debug/mdb.c:239:
+                   s[i] = '\b';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#272: FILE: debug/mdb.c:240:
+                s[i] = '\0';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: debug/mdb.c:240:
+                s[i] = '\0';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: debug/mdb.c:241:
+                DBGPrint("%s", s);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: debug/mdb.c:241:
+                DBGPrint("%s", s);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#275: FILE: debug/mdb.c:243:
+^I        buf_index = orig_index;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#276: FILE: debug/mdb.c:244:
+             }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: debug/mdb.c:244:
+             }$

WARNING:TABSTOP: Statements should start on a tabstop
#277: FILE: debug/mdb.c:245:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#279: FILE: debug/mdb.c:247:
+	  case K_P1: // end

ERROR:CODE_INDENT: code indent should use tabs where possible
#280: FILE: debug/mdb.c:248:
+             {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: debug/mdb.c:248:
+             {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#281: FILE: debug/mdb.c:249:
+                BYTE s[256];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: debug/mdb.c:249:
+                BYTE s[256];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#283: FILE: debug/mdb.c:251:
+                for (i=0; (i < buf_index) && (i < 255); i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: debug/mdb.c:251:
+                for (i=0; (i < buf_index) && (i < 255); i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#283: FILE: debug/mdb.c:251:
+                for (i=0; (i < buf_index) && (i < 255); i++)
+                   s[i] = '\b';

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#283: FILE: debug/mdb.c:251:
+                for (i=0; (i < buf_index) && (i < 255); i++)
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#284: FILE: debug/mdb.c:252:
+                   s[i] = '\b';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: debug/mdb.c:252:
+                   s[i] = '\b';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#285: FILE: debug/mdb.c:253:
+                s[i] = '\0';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: debug/mdb.c:253:
+                s[i] = '\0';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#286: FILE: debug/mdb.c:254:
+                DBGPrint("%s", s);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: debug/mdb.c:254:
+                DBGPrint("%s", s);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#288: FILE: debug/mdb.c:256:
+                for (i=0; (i < strlen(buf)) && (i < 255); i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: debug/mdb.c:256:
+                for (i=0; (i < strlen(buf)) && (i < 255); i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#288: FILE: debug/mdb.c:256:
+                for (i=0; (i < strlen(buf)) && (i < 255); i++)
+                   DBGPrint("%c", buf[i]);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#288: FILE: debug/mdb.c:256:
+                for (i=0; (i < strlen(buf)) && (i < 255); i++)
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#289: FILE: debug/mdb.c:257:
+                   DBGPrint("%c", buf[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: debug/mdb.c:257:
+                   DBGPrint("%c", buf[i]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#291: FILE: debug/mdb.c:259:
+^I        buf_index = strlen(buf);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#293: FILE: debug/mdb.c:261:
+             }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: debug/mdb.c:261:
+             }$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#293: FILE: debug/mdb.c:261:
+
+             }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TABSTOP: Statements should start on a tabstop
#294: FILE: debug/mdb.c:262:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#296: FILE: debug/mdb.c:264:
+	  case K_P4: // left arrow

WARNING:TABSTOP: Statements should start on a tabstop
#297: FILE: debug/mdb.c:265:
+	     if (buf_index)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#297: FILE: debug/mdb.c:265:
+	     if (buf_index)
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#298: FILE: debug/mdb.c:266:
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#301: FILE: debug/mdb.c:269:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#302: FILE: debug/mdb.c:270:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#304: FILE: debug/mdb.c:272:
+	  case K_P6: // right arrow

WARNING:TABSTOP: Statements should start on a tabstop
#305: FILE: debug/mdb.c:273:
+	     if (buf_index < strlen(buf))

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#305: FILE: debug/mdb.c:273:
+	     if (buf_index < strlen(buf))
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#306: FILE: debug/mdb.c:274:
+	     {

ERROR:CODE_INDENT: code indent should use tabs where possible
#307: FILE: debug/mdb.c:275:
+                DBGPrint("%c", buf[buf_index]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: debug/mdb.c:275:
+                DBGPrint("%c", buf[buf_index]);$

WARNING:TABSTOP: Statements should start on a tabstop
#309: FILE: debug/mdb.c:277:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#310: FILE: debug/mdb.c:278:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#312: FILE: debug/mdb.c:280:
+	  case K_PDOT:

ERROR:CODE_INDENT: code indent should use tabs where possible
#313: FILE: debug/mdb.c:281:
+             {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: debug/mdb.c:281:
+             {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#314: FILE: debug/mdb.c:282:
+                register int delta;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: debug/mdb.c:282:
+                register int delta;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#316: FILE: debug/mdb.c:284:
+                delta = strlen(buf) - buf_index;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: debug/mdb.c:284:
+                delta = strlen(buf) - buf_index;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#318: FILE: debug/mdb.c:286:
+                for (i=0; i < delta; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: debug/mdb.c:286:
+                for (i=0; i < delta; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 18)
#318: FILE: debug/mdb.c:286:
+                for (i=0; i < delta; i++)
+                  DBGPrint(" ");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#318: FILE: debug/mdb.c:286:
+                for (i=0; i < delta; i++)
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: debug/mdb.c:287:
+                  DBGPrint(" ");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: debug/mdb.c:287:
+                  DBGPrint(" ");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#321: FILE: debug/mdb.c:289:
+                for (i=0; i < delta; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: debug/mdb.c:289:
+                for (i=0; i < delta; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#321: FILE: debug/mdb.c:289:
+                for (i=0; i < delta; i++)
+                   DBGPrint("\b");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#321: FILE: debug/mdb.c:289:
+                for (i=0; i < delta; i++)
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#322: FILE: debug/mdb.c:290:
+                   DBGPrint("\b");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: debug/mdb.c:290:
+                   DBGPrint("\b");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#324: FILE: debug/mdb.c:292:
+^I        p = (BYTE *) &buf[buf_index];$

CHECK:SPACING: No space is necessary after a cast
#324: FILE: debug/mdb.c:292:
+	        p = (BYTE *) &buf[buf_index];

ERROR:CODE_INDENT: code indent should use tabs where possible
#325: FILE: debug/mdb.c:293:
+^I        temp = buf_index;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#326: FILE: debug/mdb.c:294:
+^I        p++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#327: FILE: debug/mdb.c:295:
+^I        while ((*p) && (temp < max_index))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#327: FILE: debug/mdb.c:295:
+	        while ((*p) && (temp < max_index))
+		   buf[temp++] = *p++;

ERROR:CODE_INDENT: code indent should use tabs where possible
#329: FILE: debug/mdb.c:297:
+^I        buf[temp] = '\0';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#331: FILE: debug/mdb.c:299:
+                delta = strlen(buf) - buf_index;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: debug/mdb.c:299:
+                delta = strlen(buf) - buf_index;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#333: FILE: debug/mdb.c:301:
+                for (i=0; (i < delta) && (buf[i]); i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: debug/mdb.c:301:
+                for (i=0; (i < delta) && (buf[i]); i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 18)
#333: FILE: debug/mdb.c:301:
+                for (i=0; (i < delta) && (buf[i]); i++)
+                  DBGPrint("%c", buf[buf_index + i]);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#333: FILE: debug/mdb.c:301:
+                for (i=0; (i < delta) && (buf[i]); i++)
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#334: FILE: debug/mdb.c:302:
+                  DBGPrint("%c", buf[buf_index + i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: debug/mdb.c:302:
+                  DBGPrint("%c", buf[buf_index + i]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#336: FILE: debug/mdb.c:304:
+                for (i=0; i < delta; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: debug/mdb.c:304:
+                for (i=0; i < delta; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#336: FILE: debug/mdb.c:304:
+                for (i=0; i < delta; i++)
+                   DBGPrint("\b");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#336: FILE: debug/mdb.c:304:
+                for (i=0; i < delta; i++)
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#337: FILE: debug/mdb.c:305:
+                   DBGPrint("\b");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: debug/mdb.c:305:
+                   DBGPrint("\b");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#338: FILE: debug/mdb.c:306:
+             }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: debug/mdb.c:306:
+             }$

WARNING:TABSTOP: Statements should start on a tabstop
#339: FILE: debug/mdb.c:307:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#341: FILE: debug/mdb.c:309:
+	  case 13:  // enter

WARNING:TABSTOP: Statements should start on a tabstop
#342: FILE: debug/mdb.c:310:
+	     if (strncmp(HistoryBuffer[(HistoryPointer - 1) & 0xF], buf,

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#342: FILE: debug/mdb.c:310:
+	     if (strncmp(HistoryBuffer[(HistoryPointer - 1) & 0xF], buf,
+                         strlen(buf)) || (strlen(buf) !=
+                         strlen(HistoryBuffer[(HistoryPointer - 1) & 0xF])))
+	     {

CHECK:CAMELCASE: Avoid CamelCase: <xF>
#342: FILE: debug/mdb.c:310:
+	     if (strncmp(HistoryBuffer[(HistoryPointer - 1) & 0xF], buf,

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: debug/mdb.c:311:
+                         strlen(buf)) || (strlen(buf) !=$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#343: FILE: debug/mdb.c:311:
+	     if (strncmp(HistoryBuffer[(HistoryPointer - 1) & 0xF], buf,
+                         strlen(buf)) || (strlen(buf) !=

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: debug/mdb.c:311:
+                         strlen(buf)) || (strlen(buf) !=$

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: debug/mdb.c:312:
+                         strlen(HistoryBuffer[(HistoryPointer - 1) & 0xF])))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: debug/mdb.c:312:
+                         strlen(HistoryBuffer[(HistoryPointer - 1) & 0xF])))$

WARNING:TABSTOP: Statements should start on a tabstop
#345: FILE: debug/mdb.c:313:
+	     {

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#346: FILE: debug/mdb.c:314:
+		for (r=0; r < max_index; r++)
+		{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#346: FILE: debug/mdb.c:314:
+		for (r=0; r < max_index; r++)
+		{

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#346: FILE: debug/mdb.c:314:
+		for (r=0; r < max_index; r++)
 		      ^

WARNING:TABSTOP: Statements should start on a tabstop
#348: FILE: debug/mdb.c:316:
+		   if (buf[0])

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (19, 22)
#348: FILE: debug/mdb.c:316:
+		   if (buf[0])
+		      HistoryBuffer[HistoryPointer & 0xF][r] = buf[r];

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#351: FILE: debug/mdb.c:319:
+		if (buf[0])
+		   HistoryPointer++;

WARNING:TABSTOP: Statements should start on a tabstop
#353: FILE: debug/mdb.c:321:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#354: FILE: debug/mdb.c:322:
+	     return 13;

WARNING:TABSTOP: Statements should start on a tabstop
#356: FILE: debug/mdb.c:324:
+	  case K_P8: // up arrow

WARNING:TABSTOP: Statements should start on a tabstop
#357: FILE: debug/mdb.c:325:
+	     if (HistoryBuffer[(HistoryIndex - 1) & 0xF][0])

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#357: FILE: debug/mdb.c:325:
+	     if (HistoryBuffer[(HistoryIndex - 1) & 0xF][0])
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#358: FILE: debug/mdb.c:326:
+	     {

ERROR:CODE_INDENT: code indent should use tabs where possible
#359: FILE: debug/mdb.c:327:
+                BYTE s[256];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: debug/mdb.c:327:
+                BYTE s[256];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#361: FILE: debug/mdb.c:329:
+                for (i=0; (i < buf_index) && (i < 255); i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: debug/mdb.c:329:
+                for (i=0; (i < buf_index) && (i < 255); i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#361: FILE: debug/mdb.c:329:
+                for (i=0; (i < buf_index) && (i < 255); i++)
+                   s[i] = '\b';

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#361: FILE: debug/mdb.c:329:
+                for (i=0; (i < buf_index) && (i < 255); i++)
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#362: FILE: debug/mdb.c:330:
+                   s[i] = '\b';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: debug/mdb.c:330:
+                   s[i] = '\b';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#363: FILE: debug/mdb.c:331:
+                s[i] = '\0';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: debug/mdb.c:331:
+                s[i] = '\0';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#364: FILE: debug/mdb.c:332:
+                DBGPrint("%s", s);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: debug/mdb.c:332:
+                DBGPrint("%s", s);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#366: FILE: debug/mdb.c:334:
+                for (i=0; (i < strlen(buf)) && (i < 255); i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: debug/mdb.c:334:
+                for (i=0; (i < strlen(buf)) && (i < 255); i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#366: FILE: debug/mdb.c:334:
+                for (i=0; (i < strlen(buf)) && (i < 255); i++)
+                   s[i] = ' ';

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#366: FILE: debug/mdb.c:334:
+                for (i=0; (i < strlen(buf)) && (i < 255); i++)
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#367: FILE: debug/mdb.c:335:
+                   s[i] = ' ';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: debug/mdb.c:335:
+                   s[i] = ' ';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#368: FILE: debug/mdb.c:336:
+                s[i] = '\0';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: debug/mdb.c:336:
+                s[i] = '\0';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#369: FILE: debug/mdb.c:337:
+                DBGPrint("%s", s);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: debug/mdb.c:337:
+                DBGPrint("%s", s);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#371: FILE: debug/mdb.c:339:
+                for (i=0; (i < strlen(buf)) && (i < 255); i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: debug/mdb.c:339:
+                for (i=0; (i < strlen(buf)) && (i < 255); i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#371: FILE: debug/mdb.c:339:
+                for (i=0; (i < strlen(buf)) && (i < 255); i++)
+                   s[i] = '\b';

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#371: FILE: debug/mdb.c:339:
+                for (i=0; (i < strlen(buf)) && (i < 255); i++)
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#372: FILE: debug/mdb.c:340:
+                   s[i] = '\b';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: debug/mdb.c:340:
+                   s[i] = '\b';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#373: FILE: debug/mdb.c:341:
+                s[i] = '\0';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: debug/mdb.c:341:
+                s[i] = '\0';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#374: FILE: debug/mdb.c:342:
+                DBGPrint("%s", s);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: debug/mdb.c:342:
+                DBGPrint("%s", s);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#378: FILE: debug/mdb.c:346:
+		for (r=0; r < max_index; r++)
+		   buf[r] = HistoryBuffer[HistoryIndex & 0xF][r];

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#378: FILE: debug/mdb.c:346:
+		for (r=0; r < max_index; r++)
 		      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#382: FILE: debug/mdb.c:350:
+                DBGPrint("%s", buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: debug/mdb.c:350:
+                DBGPrint("%s", buf);$

WARNING:TABSTOP: Statements should start on a tabstop
#383: FILE: debug/mdb.c:351:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#384: FILE: debug/mdb.c:352:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#386: FILE: debug/mdb.c:354:
+	  case K_P2: // down arrow

WARNING:TABSTOP: Statements should start on a tabstop
#387: FILE: debug/mdb.c:355:
+	     if (HistoryBuffer[HistoryIndex & 0xF][0])

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#387: FILE: debug/mdb.c:355:
+	     if (HistoryBuffer[HistoryIndex & 0xF][0])
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#388: FILE: debug/mdb.c:356:
+	     {

ERROR:CODE_INDENT: code indent should use tabs where possible
#389: FILE: debug/mdb.c:357:
+                BYTE s[256];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: debug/mdb.c:357:
+                BYTE s[256];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#391: FILE: debug/mdb.c:359:
+                for (i=0; (i < buf_index) && (i < 255); i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: debug/mdb.c:359:
+                for (i=0; (i < buf_index) && (i < 255); i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#391: FILE: debug/mdb.c:359:
+                for (i=0; (i < buf_index) && (i < 255); i++)
+                   s[i] = '\b';

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#391: FILE: debug/mdb.c:359:
+                for (i=0; (i < buf_index) && (i < 255); i++)
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#392: FILE: debug/mdb.c:360:
+                   s[i] = '\b';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: debug/mdb.c:360:
+                   s[i] = '\b';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: debug/mdb.c:361:
+                s[i] = '\0';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: debug/mdb.c:361:
+                s[i] = '\0';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#394: FILE: debug/mdb.c:362:
+                DBGPrint("%s", s);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: debug/mdb.c:362:
+                DBGPrint("%s", s);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#396: FILE: debug/mdb.c:364:
+                for (i=0; (i < strlen(buf)) && (i < 255); i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: debug/mdb.c:364:
+                for (i=0; (i < strlen(buf)) && (i < 255); i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#396: FILE: debug/mdb.c:364:
+                for (i=0; (i < strlen(buf)) && (i < 255); i++)
+                   s[i] = ' ';

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#396: FILE: debug/mdb.c:364:
+                for (i=0; (i < strlen(buf)) && (i < 255); i++)
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#397: FILE: debug/mdb.c:365:
+                   s[i] = ' ';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: debug/mdb.c:365:
+                   s[i] = ' ';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#398: FILE: debug/mdb.c:366:
+                s[i] = '\0';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: debug/mdb.c:366:
+                s[i] = '\0';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#399: FILE: debug/mdb.c:367:
+                DBGPrint("%s", s);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: debug/mdb.c:367:
+                DBGPrint("%s", s);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#401: FILE: debug/mdb.c:369:
+                for (i=0; (i < strlen(buf)) && (i < 255); i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: debug/mdb.c:369:
+                for (i=0; (i < strlen(buf)) && (i < 255); i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#401: FILE: debug/mdb.c:369:
+                for (i=0; (i < strlen(buf)) && (i < 255); i++)
+                   s[i] = '\b';

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#401: FILE: debug/mdb.c:369:
+                for (i=0; (i < strlen(buf)) && (i < 255); i++)
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#402: FILE: debug/mdb.c:370:
+                   s[i] = '\b';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: debug/mdb.c:370:
+                   s[i] = '\b';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#403: FILE: debug/mdb.c:371:
+                s[i] = '\0';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: debug/mdb.c:371:
+                s[i] = '\0';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#404: FILE: debug/mdb.c:372:
+                DBGPrint("%s", s);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: debug/mdb.c:372:
+                DBGPrint("%s", s);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#408: FILE: debug/mdb.c:376:
+		for (r=0; r < max_index; r++)
+		   buf[r] = HistoryBuffer[HistoryIndex & 0xF][r];

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#408: FILE: debug/mdb.c:376:
+		for (r=0; r < max_index; r++)
 		      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#412: FILE: debug/mdb.c:380:
+                DBGPrint("%s", buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: debug/mdb.c:380:
+                DBGPrint("%s", buf);$

WARNING:TABSTOP: Statements should start on a tabstop
#413: FILE: debug/mdb.c:381:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#414: FILE: debug/mdb.c:382:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#416: FILE: debug/mdb.c:384:
+	  default:

WARNING:TABSTOP: Statements should start on a tabstop
#417: FILE: debug/mdb.c:385:
+	     if ((key > 0x7E) || (key < ' '))  // if above or below text

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'key > 0x7E'
#417: FILE: debug/mdb.c:385:
+	     if ((key > 0x7E) || (key < ' '))  // if above or below text

WARNING:TABSTOP: Statements should start on a tabstop
#419: FILE: debug/mdb.c:387:
+	     else

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#419: FILE: debug/mdb.c:387:
+	     else
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#420: FILE: debug/mdb.c:388:
+	     {

ERROR:CODE_INDENT: code indent should use tabs where possible
#421: FILE: debug/mdb.c:389:
+^I        if (strlen(buf) < max_index)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#421: FILE: debug/mdb.c:389:
+	        if (strlen(buf) < max_index)
+		{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#421: FILE: debug/mdb.c:389:
+	        if (strlen(buf) < max_index)
+		{

ERROR:CODE_INDENT: code indent should use tabs where possible
#423: FILE: debug/mdb.c:391:
+                   register int delta;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: debug/mdb.c:391:
+                   register int delta;$

WARNING:TABSTOP: Statements should start on a tabstop
#425: FILE: debug/mdb.c:393:
+		   for (i=max_index; i > buf_index; i--)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (19, 22)
#425: FILE: debug/mdb.c:393:
+		   for (i=max_index; i > buf_index; i--)
+		      buf[i] = buf[i-1];

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#425: FILE: debug/mdb.c:393:
+		   for (i=max_index; i > buf_index; i--)
 		         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#426: FILE: debug/mdb.c:394:
+		      buf[i] = buf[i-1];
 		                    ^

WARNING:TABSTOP: Statements should start on a tabstop
#428: FILE: debug/mdb.c:396:
+		   if (buf_index < max_index)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (19, 22)
#428: FILE: debug/mdb.c:396:
+		   if (buf_index < max_index)
+		      buf_index++;

ERROR:CODE_INDENT: code indent should use tabs where possible
#431: FILE: debug/mdb.c:399:
+                   delta = strlen(buf) - buf_index;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: debug/mdb.c:399:
+                   delta = strlen(buf) - buf_index;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#433: FILE: debug/mdb.c:401:
+                   for (i=0; (i < delta) && (buf[i]); i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: debug/mdb.c:401:
+                   for (i=0; (i < delta) && (buf[i]); i++)$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#433: FILE: debug/mdb.c:401:
+                   for (i=0; (i < delta) && (buf[i]); i++)
                          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#434: FILE: debug/mdb.c:402:
+                        DBGPrint("%c", buf[buf_index + i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: debug/mdb.c:402:
+                        DBGPrint("%c", buf[buf_index + i]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#436: FILE: debug/mdb.c:404:
+                   for (i=0; i < delta; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: debug/mdb.c:404:
+                   for (i=0; i < delta; i++)$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#436: FILE: debug/mdb.c:404:
+                   for (i=0; i < delta; i++)
                          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#437: FILE: debug/mdb.c:405:
+                        DBGPrint("\b");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#437: FILE: debug/mdb.c:405:
+                        DBGPrint("\b");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#439: FILE: debug/mdb.c:407:
+             }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#439: FILE: debug/mdb.c:407:
+             }$

WARNING:TABSTOP: Statements should start on a tabstop
#440: FILE: debug/mdb.c:408:
+	     break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: debug/mdb.c:409:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: debug/mdb.c:410:
+    }$

CHECK:CAMELCASE: Avoid CamelCase: <Exception>
#445: FILE: debug/mdb.c:413:
+ULONG debugger_command_entry(ULONG processor, ULONG Exception,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#446: FILE: debug/mdb.c:414:
+ULONG debugger_command_entry(ULONG processor, ULONG Exception,
+			    StackFrame *stackFrame)

CHECK:CAMELCASE: Avoid CamelCase: <stackFrame>
#446: FILE: debug/mdb.c:414:
+			    StackFrame *stackFrame)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: debug/mdb.c:416:
+    BYTE verbBuffer[100];$

CHECK:CAMELCASE: Avoid CamelCase: <verbBuffer>
#448: FILE: debug/mdb.c:416:
+    BYTE verbBuffer[100];

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: debug/mdb.c:417:
+    register BYTE *verb, *pp, *vp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: debug/mdb.c:418:
+    register ULONG count, retCode, key;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#451: FILE: debug/mdb.c:419:
+    extern ULONG reason_toggle;$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#451: FILE: debug/mdb.c:419:
+    extern ULONG reason_toggle;

WARNING:LINE_SPACING: Missing a blank line after declarations
#452: FILE: debug/mdb.c:420:
+    extern ULONG reason_toggle;
+    extern void displayRegisters(StackFrame *, ULONG);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: debug/mdb.c:420:
+    extern void displayRegisters(StackFrame *, ULONG);$

CHECK:CAMELCASE: Avoid CamelCase: <displayRegisters>
#452: FILE: debug/mdb.c:420:
+    extern void displayRegisters(StackFrame *, ULONG);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#452: FILE: debug/mdb.c:420:
+    extern void displayRegisters(StackFrame *, ULONG);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'StackFrame *' should also have an identifier name
#452: FILE: debug/mdb.c:420:
+    extern void displayRegisters(StackFrame *, ULONG);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ULONG' should also have an identifier name
#452: FILE: debug/mdb.c:420:
+    extern void displayRegisters(StackFrame *, ULONG);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#454: FILE: debug/mdb.c:422:
+    if (Exception > 22)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#454: FILE: debug/mdb.c:422:
+    if (Exception > 22)
+       Exception = 20;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#455: FILE: debug/mdb.c:423:
+       Exception = 20;$

CHECK:SPACING: No space is necessary after a cast
#457: FILE: debug/mdb.c:425:
+    lastUnasmAddress = (ULONG) GetIP(stackFrame);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#457: FILE: debug/mdb.c:425:
+    lastUnasmAddress = (ULONG) GetIP(stackFrame);$

CHECK:CAMELCASE: Avoid CamelCase: <lastUnasmAddress>
#457: FILE: debug/mdb.c:425:
+    lastUnasmAddress = (ULONG) GetIP(stackFrame);

CHECK:CAMELCASE: Avoid CamelCase: <GetIP>
#457: FILE: debug/mdb.c:425:
+    lastUnasmAddress = (ULONG) GetIP(stackFrame);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#458: FILE: debug/mdb.c:426:
+    lastLinkAddress = lastDumpAddress = (BYTE *)$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#458: FILE: debug/mdb.c:426:
+    lastLinkAddress = lastDumpAddress = (BYTE *)

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:CAMELCASE: Avoid CamelCase: <lastLinkAddress>
#458: FILE: debug/mdb.c:426:
+    lastLinkAddress = lastDumpAddress = (BYTE *)

CHECK:CAMELCASE: Avoid CamelCase: <lastDumpAddress>
#458: FILE: debug/mdb.c:426:
+    lastLinkAddress = lastDumpAddress = (BYTE *)

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#459: FILE: debug/mdb.c:426:
GetStackAddress(stackFrame);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: debug/mdb.c:427:
+    lastDisplayLength = displayLength = 20;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#460: FILE: debug/mdb.c:427:
+    lastDisplayLength = displayLength = 20;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: debug/mdb.c:428:
+    lastCommandEntry = lastCommand;$

CHECK:CAMELCASE: Avoid CamelCase: <lastCommandEntry>
#461: FILE: debug/mdb.c:428:
+    lastCommandEntry = lastCommand;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: debug/mdb.c:430:
+    if (reason_toggle)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#463: FILE: debug/mdb.c:430:
+    if (reason_toggle)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#463: FILE: debug/mdb.c:430:
+    if (reason_toggle)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: debug/mdb.c:431:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: debug/mdb.c:432:
+       if (!ConsoleDisplayBreakReason(stackFrame, Exception, processor,$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#465: FILE: debug/mdb.c:432:
+       if (!ConsoleDisplayBreakReason(stackFrame, Exception, processor,
[...]
+          return 0;

CHECK:CAMELCASE: Avoid CamelCase: <ConsoleDisplayBreakReason>
#465: FILE: debug/mdb.c:432:
+       if (!ConsoleDisplayBreakReason(stackFrame, Exception, processor,

ERROR:CODE_INDENT: code indent should use tabs where possible
#466: FILE: debug/mdb.c:433:
+                                      lastCommand))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#466: FILE: debug/mdb.c:433:
+                                      lastCommand))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#467: FILE: debug/mdb.c:434:
+          return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: debug/mdb.c:434:
+          return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: debug/mdb.c:435:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#469: FILE: debug/mdb.c:436:
+    displayRegisters(stackFrame, processor);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: debug/mdb.c:437:
+    nextUnasmAddress = disassemble(stackFrame, lastUnasmAddress, 1, 1);$

CHECK:CAMELCASE: Avoid CamelCase: <nextUnasmAddress>
#470: FILE: debug/mdb.c:437:
+    nextUnasmAddress = disassemble(stackFrame, lastUnasmAddress, 1, 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: debug/mdb.c:438:
+    ClearTempBreakpoints();$

CHECK:CAMELCASE: Avoid CamelCase: <ClearTempBreakpoints>
#471: FILE: debug/mdb.c:438:
+    ClearTempBreakpoints();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#473: FILE: debug/mdb.c:440:
+    while (1)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#473: FILE: debug/mdb.c:440:
+    while (1)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#473: FILE: debug/mdb.c:440:
+    while (1)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: debug/mdb.c:441:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#475: FILE: debug/mdb.c:442:
+       extern int nextline;$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#475: FILE: debug/mdb.c:442:
+       extern int nextline;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: debug/mdb.c:444:
+       nextline = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: debug/mdb.c:446:
+       DBGPrint("(%i)> ", (int)processor);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: debug/mdb.c:448:
+       SaveLastCommandInfo(processor);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: debug/mdb.c:450:
+       key = ScreenInputFromKeyboard((BYTE *)&debugCommand[0], 0, 80);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: debug/mdb.c:451:
+       if (key)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#484: FILE: debug/mdb.c:451:
+       if (key)
+       {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#484: FILE: debug/mdb.c:451:
+       if (key)
+       {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#485: FILE: debug/mdb.c:452:
+       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#486: FILE: debug/mdb.c:453:
+          extern ULONG AccelRoutine(ULONG key, void *p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: debug/mdb.c:453:
+          extern ULONG AccelRoutine(ULONG key, void *p);$

CHECK:CAMELCASE: Avoid CamelCase: <AccelRoutine>
#486: FILE: debug/mdb.c:453:
+          extern ULONG AccelRoutine(ULONG key, void *p);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#486: FILE: debug/mdb.c:453:
+          extern ULONG AccelRoutine(ULONG key, void *p);

ERROR:CODE_INDENT: code indent should use tabs where possible
#488: FILE: debug/mdb.c:455:
+          retCode = AccelRoutine(key, stackFrame);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: debug/mdb.c:455:
+          retCode = AccelRoutine(key, stackFrame);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#489: FILE: debug/mdb.c:456:
+          switch (retCode)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: debug/mdb.c:456:
+          switch (retCode)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#489: FILE: debug/mdb.c:456:
+          switch (retCode)
+          {

ERROR:CODE_INDENT: code indent should use tabs where possible
#490: FILE: debug/mdb.c:457:
+          {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: debug/mdb.c:457:
+          {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#491: FILE: debug/mdb.c:458:
+             case 0:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: debug/mdb.c:458:
+             case 0:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#492: FILE: debug/mdb.c:459:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: debug/mdb.c:459:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#494: FILE: debug/mdb.c:461:
+             case -1:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: debug/mdb.c:461:
+             case -1:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#495: FILE: debug/mdb.c:462:
+   ^I        return retCode;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#495: FILE: debug/mdb.c:462:
+   ^I        return retCode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#495: FILE: debug/mdb.c:462:
+   ^I        return retCode;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#497: FILE: debug/mdb.c:464:
+             default:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#498: FILE: debug/mdb.c:465:
+                DBGPrint("\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: debug/mdb.c:465:
+                DBGPrint("\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#499: FILE: debug/mdb.c:466:
+                continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#499: FILE: debug/mdb.c:466:
+                continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#500: FILE: debug/mdb.c:467:
+          }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#500: FILE: debug/mdb.c:467:
+          }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#501: FILE: debug/mdb.c:468:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#503: FILE: debug/mdb.c:470:
+       if (*debugCommand)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#503: FILE: debug/mdb.c:470:
+       if (*debugCommand)
+       {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#503: FILE: debug/mdb.c:470:
+       if (*debugCommand)
+       {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#504: FILE: debug/mdb.c:471:
+       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#505: FILE: debug/mdb.c:472:
+          count = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#505: FILE: debug/mdb.c:472:
+          count = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#506: FILE: debug/mdb.c:473:
+          pp = (BYTE *)debugCommand;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: debug/mdb.c:473:
+          pp = (BYTE *)debugCommand;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#507: FILE: debug/mdb.c:474:
+          vp = verb = &verbBuffer[0];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#507: FILE: debug/mdb.c:474:
+          vp = verb = &verbBuffer[0];$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#507: FILE: debug/mdb.c:474:
+          vp = verb = &verbBuffer[0];

ERROR:CODE_INDENT: code indent should use tabs where possible
#508: FILE: debug/mdb.c:475:
+          while (*pp && *pp == ' ' && count++ < 80)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#508: FILE: debug/mdb.c:475:
+          while (*pp && *pp == ' ' && count++ < 80)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 13)
#508: FILE: debug/mdb.c:475:
+          while (*pp && *pp == ' ' && count++ < 80)
+    	     pp++;

ERROR:CODE_INDENT: code indent should use tabs where possible
#509: FILE: debug/mdb.c:476:
+    ^I     pp++;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#509: FILE: debug/mdb.c:476:
+    ^I     pp++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#509: FILE: debug/mdb.c:476:
+    ^I     pp++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#511: FILE: debug/mdb.c:478:
+          while (*pp && *pp != ' ' && *pp != '=' && count++ < 80)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#511: FILE: debug/mdb.c:478:
+          while (*pp && *pp != ' ' && *pp != '=' && count++ < 80)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 13)
#511: FILE: debug/mdb.c:478:
+          while (*pp && *pp != ' ' && *pp != '=' && count++ < 80)
+  	     *vp++ = *pp++;

ERROR:CODE_INDENT: code indent should use tabs where possible
#512: FILE: debug/mdb.c:479:
+  ^I     *vp++ = *pp++;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#512: FILE: debug/mdb.c:479:
+  ^I     *vp++ = *pp++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: debug/mdb.c:479:
+  ^I     *vp++ = *pp++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#513: FILE: debug/mdb.c:480:
+          *vp = '\0';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#513: FILE: debug/mdb.c:480:
+          *vp = '\0';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#515: FILE: debug/mdb.c:482:
+          while (*pp && *pp == ' ' && count++ < 80)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#515: FILE: debug/mdb.c:482:
+          while (*pp && *pp == ' ' && count++ < 80)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 13)
#515: FILE: debug/mdb.c:482:
+          while (*pp && *pp == ' ' && count++ < 80)
+  	     pp++;

ERROR:CODE_INDENT: code indent should use tabs where possible
#516: FILE: debug/mdb.c:483:
+  ^I     pp++;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#516: FILE: debug/mdb.c:483:
+  ^I     pp++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#516: FILE: debug/mdb.c:483:
+  ^I     pp++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#518: FILE: debug/mdb.c:485:
+          retCode = DebuggerParserRoutine(verb, (BYTE *)debugCommand,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#518: FILE: debug/mdb.c:485:
+          retCode = DebuggerParserRoutine(verb, (BYTE *)debugCommand,$

CHECK:CAMELCASE: Avoid CamelCase: <DebuggerParserRoutine>
#518: FILE: debug/mdb.c:485:
+          retCode = DebuggerParserRoutine(verb, (BYTE *)debugCommand,

ERROR:CODE_INDENT: code indent should use tabs where possible
#519: FILE: debug/mdb.c:486:
+                                          stackFrame, Exception);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#519: FILE: debug/mdb.c:486:
+                                          stackFrame, Exception);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#520: FILE: debug/mdb.c:487:
+          switch (retCode)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#520: FILE: debug/mdb.c:487:
+          switch (retCode)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#520: FILE: debug/mdb.c:487:
+          switch (retCode)
+          {

ERROR:CODE_INDENT: code indent should use tabs where possible
#521: FILE: debug/mdb.c:488:
+          {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#521: FILE: debug/mdb.c:488:
+          {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#522: FILE: debug/mdb.c:489:
+             case -1:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: debug/mdb.c:489:
+             case -1:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#523: FILE: debug/mdb.c:490:
+  ^I       return retCode;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#523: FILE: debug/mdb.c:490:
+  ^I       return retCode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#523: FILE: debug/mdb.c:490:
+  ^I       return retCode;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#524: FILE: debug/mdb.c:491:
+          }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#524: FILE: debug/mdb.c:491:
+          }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: debug/mdb.c:492:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: debug/mdb.c:493:
+    }$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000245257.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 176 errors, 348 warnings, 54 checks, 497 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000245257.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
