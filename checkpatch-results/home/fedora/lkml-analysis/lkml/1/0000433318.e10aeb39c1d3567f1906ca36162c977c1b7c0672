WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
On Wed, 2 May 2007 21:33:15 +0200 Rodolfo Giometti <giometti@enneenne.com> wrote:

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#363: FILE: drivers/pps/kapi.c:47:
+static int __pps_register_source(struct pps_source_info_s *info,
+				int default_params, int try_id)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#387: FILE: drivers/pps/kapi.c:72:
+	if ((info->mode & (PPS_ECHOASSERT|PPS_ECHOCLEAR)) != 0 &&
 	                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#388: FILE: drivers/pps/kapi.c:73:
+	if ((info->mode & (PPS_ECHOASSERT|PPS_ECHOCLEAR)) != 0 &&
+			info->echo == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info->echo"
#388: FILE: drivers/pps/kapi.c:73:
+			info->echo == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#393: FILE: drivers/pps/kapi.c:77:
+	if ((info->mode & (PPS_TSFMT_TSPEC|PPS_TSFMT_NTPFP)) == 0) {
 	                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#431: FILE: drivers/pps/kapi.c:159:
+	if ((event & (PPS_CAPTUREASSERT|PPS_CAPTURECLEAR)) == 0 ) {
 	                               ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#431: FILE: drivers/pps/kapi.c:159:
+	if ((event & (PPS_CAPTUREASSERT|PPS_CAPTURECLEAR)) == 0 ) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#438: FILE: drivers/pps/kapi.c:165:
+	if ((pps_source[source].params.mode & (PPS_ECHOASSERT|PPS_ECHOCLEAR)) != 0)
 	                                                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#449: FILE: drivers/pps/kapi.c:174:
+			pps_add_offset(&ts,
+				&pps_source[source].params.assert_off_tu.tspec);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#463: FILE: drivers/pps/kapi.c:186:
+			pps_add_offset(&ts,
+				&pps_source[source].params.clear_off_tu.tspec);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#562: FILE: drivers/pps/pps.c:150:
+			if ((nlpps->params.mode & (PPS_CAPTUREASSERT|PPS_CAPTURECLEAR)) == 0) {
 			                                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#568: FILE: drivers/pps/pps.c:155:
+			if ((nlpps->params.mode & (PPS_TSFMT_TSPEC|PPS_TSFMT_NTPFP)) == 0) {
 			                                          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#594: FILE: drivers/pps/pps.c:186:
+^I ^Icase PPS_GETCAP:$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#594: FILE: drivers/pps/pps.c:186:
+^I ^Icase PPS_GETCAP:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#607: FILE: drivers/pps/pps.c:200:
+^I ^Icase PPS_FETCH:$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#607: FILE: drivers/pps/pps.c:200:
+^I ^Icase PPS_FETCH:$

CHECK:SPACING: space preferred before that '/' (ctx:VxE)
#627: FILE: drivers/pps/pps.c:219:
+				timeout += nlpps->timeout.tv_nsec/
 				                                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#628: FILE: drivers/pps/pps.c:220:
+						(NSEC_PER_SEC/HZ);
 						             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#638: FILE: drivers/pps/pps.c:230:
+^I^I ^I} else$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#638: FILE: drivers/pps/pps.c:230:
+^I^I ^I} else$

CHECK:BRACES: Unbalanced braces around else statement
#638: FILE: drivers/pps/pps.c:230:
+		 	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#651: FILE: drivers/pps/pps.c:243:
+^I ^Icase PPS_KC_BIND:$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#651: FILE: drivers/pps/pps.c:243:
+^I ^Icase PPS_KC_BIND:$

WARNING:SPLIT_STRING: quoted string split across lines
#720: FILE: drivers/pps/pps.c:334:
+	info("Software ver. %s - Copyright 2005-2007 Rodolfo Giometti "
+		"<giometti@linux.it>", PPS_VERSION);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#817: FILE: include/linux/pps.h:197:
+extern int pps_register_source(struct pps_source_info_s *info,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#818: FILE: include/linux/pps.h:198:
+extern int pps_register_source(struct pps_source_info_s *info,
+				int default_params, int try_id);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#823: FILE: include/linux/pps.h:202:
+extern int pps_sysfs_create_source_entry(struct pps_source_info_s *info,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#824: FILE: include/linux/pps.h:203:
+extern int pps_sysfs_create_source_entry(struct pps_source_info_s *info,
+				int id);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000433318.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 6 warnings, 18 checks, 533 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000433318.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
