WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#48: FILE: drivers/scsi/bfa/bfa_fcxp_priv.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#73: FILE: drivers/scsi/bfa/bfa_fcxp_priv.h:26:
+#define BFA_FCXP_MIN     ^I(1)$

WARNING:TYPO_SPELLING: 'continous' may be misspelled - perhaps 'continuous'?
#111: FILE: drivers/scsi/bfa/bfa_fcxp_priv.h:64:
+	u8 cts;		/*  continous sequence */
 	       		    ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#121: FILE: drivers/scsi/bfa/bfa_fcxp_priv.h:74:
+					 * be *sent back in this field */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#123: FILE: drivers/scsi/bfa/bfa_fcxp_priv.h:76:
+	u8         rsp_timeout;	/*  timeout in seconds, 0-no response
+					 */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#129: FILE: drivers/scsi/bfa/bfa_fcxp_priv.h:82:
+^Istruct list_head ^Iqe;^I^I/*  fcxp queue element */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#131: FILE: drivers/scsi/bfa/bfa_fcxp_priv.h:84:
+^Ivoid           ^I*caller;^I/*  driver or fcs */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#139: FILE: drivers/scsi/bfa/bfa_fcxp_priv.h:92:
+^Iu8 ^Iuse_ireqbuf;^I/*  use internal req buf */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#171: FILE: drivers/scsi/bfa/bfa_fcxp_priv.h:124:
+#define BFA_FCXP_REQ_PLD(_fcxp) ^I(bfa_fcxp_get_reqbuf(_fcxp))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#173: FILE: drivers/scsi/bfa/bfa_fcxp_priv.h:126:
+#define BFA_FCXP_RSP_FCHS(_fcxp) ^I(&((_fcxp)->rsp_info.fchs))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#174: FILE: drivers/scsi/bfa/bfa_fcxp_priv.h:127:
+#define BFA_FCXP_RSP_PLD(_fcxp) ^I(bfa_fcxp_get_rspbuf(_fcxp))$

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_fcxp' - possible side-effects?
#176: FILE: drivers/scsi/bfa/bfa_fcxp_priv.h:129:
+#define BFA_FCXP_REQ_PLD_PA(_fcxp)					\
+	((_fcxp)->fcxp_mod->req_pld_list_pa +				\
+		((_fcxp)->fcxp_mod->req_pld_sz  * (_fcxp)->fcxp_tag))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#180: FILE: drivers/scsi/bfa/bfa_fcxp_priv.h:133:
+#define BFA_FCXP_RSP_PLD_PA(_fcxp) ^I^I^I^I^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_fcxp' - possible side-effects?
#180: FILE: drivers/scsi/bfa/bfa_fcxp_priv.h:133:
+#define BFA_FCXP_RSP_PLD_PA(_fcxp) 					\
+	((_fcxp)->fcxp_mod->rsp_pld_list_pa +				\
+		((_fcxp)->fcxp_mod->rsp_pld_sz * (_fcxp)->fcxp_tag))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#190: FILE: drivers/scsi/bfa/bfa_fwimg_priv.h:1:
+/*

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#211: FILE: drivers/scsi/bfa/bfa_fwimg_priv.h:22:
+#define	BFI_FLASH_CHUNK_SZ_WORDS	(BFI_FLASH_CHUNK_SZ/sizeof(u32))
        	                        	                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#213: FILE: drivers/scsi/bfa/bfa_fwimg_priv.h:24:
+extern u32 *bfi_image_ct_get_chunk(u32 off);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#215: FILE: drivers/scsi/bfa/bfa_fwimg_priv.h:26:
+extern u32 *bfi_image_cb_get_chunk(u32 off);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#225: FILE: drivers/scsi/bfa/bfa_hw_cb.c:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#250: FILE: drivers/scsi/bfa/bfa_hw_cb.c:26:
+^Iint             ^Ii, q, fn = bfa_ioc_pcifn(&bfa->ioc);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#288: FILE: drivers/scsi/bfa/bfa_hw_cb.c:64:
+	bfa_reg_write(bfa->iocfc.bfa_regs.intr_status,
+		__HFN_INT_RME_Q0 << RME_Q_NUM(bfa_ioc_pcifn(&bfa->ioc), rspq));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#293: FILE: drivers/scsi/bfa/bfa_hw_cb.c:69:
+bfa_hwcb_msix_getvecs(struct bfa_s *bfa, u32 *msix_vecs_bmap,
+		 u32 *num_vecs, u32 *max_vec_bit)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#366: FILE: drivers/scsi/bfa/bfa_hw_cb.c:142:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#371: FILE: drivers/scsi/bfa/bfa_hw_ct.c:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#426: FILE: drivers/scsi/bfa/bfa_hw_ct.c:56:
+^Iint             ^Ii, q, fn = bfa_ioc_pcifn(&bfa->ioc);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#468: FILE: drivers/scsi/bfa/bfa_hw_ct.c:98:
+bfa_hwct_msix_getvecs(struct bfa_s *bfa, u32 *msix_vecs_bmap,
+		 u32 *num_vecs, u32 *max_vec_bit)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#532: FILE: drivers/scsi/bfa/bfa_hw_ct.c:162:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#537: FILE: drivers/scsi/bfa/bfa_intr.c:1:
+/*

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#598: FILE: drivers/scsi/bfa/bfa_intr.c:62:
+	for (queue = 0; queue < BFI_IOC_MAX_CQS_ASIC; queue ++) {
 	                                                    ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#666: FILE: drivers/scsi/bfa/bfa_intr.c:130:
+^Istruct list_head ^I^I*waitq, *qe, *qen;$

CHECK:SPACING: No space is necessary after a cast
#680: FILE: drivers/scsi/bfa/bfa_intr.c:144:
+		wqe = (struct bfa_reqq_wait_s *) qe;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#754: FILE: drivers/scsi/bfa/bfa_intr.c:218:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#759: FILE: drivers/scsi/bfa/bfa_intr_priv.h:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#786: FILE: drivers/scsi/bfa/bfa_intr_priv.h:28:
+
+

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#787: FILE: drivers/scsi/bfa/bfa_intr_priv.h:29:
+#define bfa_reqq_pi(__bfa, __reqq)	(__bfa)->iocfc.req_cq_pi[__reqq]

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#788: FILE: drivers/scsi/bfa/bfa_intr_priv.h:30:
+#define bfa_reqq_ci(__bfa, __reqq)					\
+	*(u32 *)((__bfa)->iocfc.req_cq_shadow_ci[__reqq].kva)

CHECK:MACRO_ARG_REUSE: Macro argument reuse '__bfa' - possible side-effects?
#791: FILE: drivers/scsi/bfa/bfa_intr_priv.h:33:
+#define bfa_reqq_full(__bfa, __reqq)				\
+	(((bfa_reqq_pi(__bfa, __reqq) + 1) &			\
+	  ((__bfa)->iocfc.cfg.drvcfg.num_reqq_elems - 1)) ==	\
+	 bfa_reqq_ci(__bfa, __reqq))

CHECK:MACRO_ARG_REUSE: Macro argument reuse '__reqq' - possible side-effects?
#791: FILE: drivers/scsi/bfa/bfa_intr_priv.h:33:
+#define bfa_reqq_full(__bfa, __reqq)				\
+	(((bfa_reqq_pi(__bfa, __reqq) + 1) &			\
+	  ((__bfa)->iocfc.cfg.drvcfg.num_reqq_elems - 1)) ==	\
+	 bfa_reqq_ci(__bfa, __reqq))

CHECK:MACRO_ARG_REUSE: Macro argument reuse '__bfa' - possible side-effects?
#796: FILE: drivers/scsi/bfa/bfa_intr_priv.h:38:
+#define bfa_reqq_next(__bfa, __reqq)				\
+	(bfa_reqq_full(__bfa, __reqq) ? NULL :			\
+	 ((void *)((struct bfi_msg_s *)((__bfa)->iocfc.req_cq_ba[__reqq].kva) \
+			  + bfa_reqq_pi((__bfa), (__reqq)))))

CHECK:MACRO_ARG_REUSE: Macro argument reuse '__reqq' - possible side-effects?
#796: FILE: drivers/scsi/bfa/bfa_intr_priv.h:38:
+#define bfa_reqq_next(__bfa, __reqq)				\
+	(bfa_reqq_full(__bfa, __reqq) ? NULL :			\
+	 ((void *)((struct bfi_msg_s *)((__bfa)->iocfc.req_cq_ba[__reqq].kva) \
+			  + bfa_reqq_pi((__bfa), (__reqq)))))

CHECK:MACRO_ARG_REUSE: Macro argument reuse '__bfa' - possible side-effects?
#801: FILE: drivers/scsi/bfa/bfa_intr_priv.h:43:
+#define bfa_reqq_produce(__bfa, __reqq)	do {				\
+	(__bfa)->iocfc.req_cq_pi[__reqq]++;				\
+	(__bfa)->iocfc.req_cq_pi[__reqq] &=				\
+		((__bfa)->iocfc.cfg.drvcfg.num_reqq_elems - 1);      \
+	bfa_reg_write((__bfa)->iocfc.bfa_regs.cpe_q_pi[__reqq],		\
+				(__bfa)->iocfc.req_cq_pi[__reqq]);      \
+	bfa_os_mmiowb();      \
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse '__reqq' - possible side-effects?
#801: FILE: drivers/scsi/bfa/bfa_intr_priv.h:43:
+#define bfa_reqq_produce(__bfa, __reqq)	do {				\
+	(__bfa)->iocfc.req_cq_pi[__reqq]++;				\
+	(__bfa)->iocfc.req_cq_pi[__reqq] &=				\
+		((__bfa)->iocfc.cfg.drvcfg.num_reqq_elems - 1);      \
+	bfa_reg_write((__bfa)->iocfc.bfa_regs.cpe_q_pi[__reqq],		\
+				(__bfa)->iocfc.req_cq_pi[__reqq]);      \
+	bfa_os_mmiowb();      \
+} while (0)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#810: FILE: drivers/scsi/bfa/bfa_intr_priv.h:52:
+#define bfa_rspq_pi(__bfa, __rspq)					\
+	*(u32 *)((__bfa)->iocfc.rsp_cq_shadow_pi[__rspq].kva)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#813: FILE: drivers/scsi/bfa/bfa_intr_priv.h:55:
+#define bfa_rspq_ci(__bfa, __rspq)	(__bfa)->iocfc.rsp_cq_ci[__rspq]

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#814: FILE: drivers/scsi/bfa/bfa_intr_priv.h:56:
+#define bfa_rspq_elem(__bfa, __rspq, __ci)				\
+	&((struct bfi_msg_s *)((__bfa)->iocfc.rsp_cq_ba[__rspq].kva))[__ci]

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#817: FILE: drivers/scsi/bfa/bfa_intr_priv.h:59:
+#define CQ_INCR(__index, __size)					\
+			(__index)++; (__index) &= ((__size) - 1)

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse '__index' - possible side-effects?
#817: FILE: drivers/scsi/bfa/bfa_intr_priv.h:59:
+#define CQ_INCR(__index, __size)					\
+			(__index)++; (__index) &= ((__size) - 1)

WARNING:TYPO_SPELLING: 'fullfilling' may be misspelled - perhaps 'fulfilling'?
#822: FILE: drivers/scsi/bfa/bfa_intr_priv.h:64:
+ * maintained when fullfilling requests.
                    ^^^^^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#825: FILE: drivers/scsi/bfa/bfa_intr_priv.h:67:
+^Istruct list_head ^Iqe;$

WARNING:SPACING: Unnecessary space before function pointer arguments
#826: FILE: drivers/scsi/bfa/bfa_intr_priv.h:68:
+	void		(*qresume) (void *cbarg);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#849: FILE: drivers/scsi/bfa/bfa_intr_priv.h:91:
+bfa_reqq_winit(struct bfa_reqq_wait_s *wqe, void (*qresume) (void *cbarg),
+			void *cbarg)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#855: FILE: drivers/scsi/bfa/bfa_intr_priv.h:97:
+#define bfa_reqq(__bfa, __reqq)	&(__bfa)->reqq_waitq[__reqq]

CHECK:MACRO_ARG_REUSE: Macro argument reuse '__reqq' - possible side-effects?
#861: FILE: drivers/scsi/bfa/bfa_intr_priv.h:103:
+#define bfa_reqq_wait(__bfa, __reqq, __wqe) do {			\
+									\
+		struct list_head *waitq = bfa_reqq(__bfa, __reqq);      \
+									\
+		bfa_assert(((__reqq) < BFI_IOC_MAX_CQS));      \
+		bfa_assert((__wqe)->qresume && (__wqe)->cbarg);      \
+									\
+		list_add_tail(&(__wqe)->qe, waitq);      \
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse '__wqe' - possible side-effects?
#861: FILE: drivers/scsi/bfa/bfa_intr_priv.h:103:
+#define bfa_reqq_wait(__bfa, __reqq, __wqe) do {			\
+									\
+		struct list_head *waitq = bfa_reqq(__bfa, __reqq);      \
+									\
+		bfa_assert(((__reqq) < BFI_IOC_MAX_CQS));      \
+		bfa_assert((__wqe)->qresume && (__wqe)->cbarg);      \
+									\
+		list_add_tail(&(__wqe)->qe, waitq);      \
+} while (0)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#878: FILE: drivers/scsi/bfa/bfa_ioc.c:1:
+/*

CHECK:MACRO_ARG_REUSE: Macro argument reuse '__ioc' - possible side-effects?
#920: FILE: drivers/scsi/bfa/bfa_ioc.c:43:
+#define bfa_ioc_timer_start(__ioc)					\
+	bfa_timer_begin((__ioc)->timer_mod, &(__ioc)->ioc_timer,	\
+			bfa_ioc_timeout, (__ioc), BFA_IOC_TOV)

ERROR:SPACING: space prohibited before that '++' (ctx:WxE)
#931: FILE: drivers/scsi/bfa/bfa_ioc.c:54:
+#define bfa_ioc_stats(_ioc, _stats)	(_ioc)->stats._stats ++
                                    	                     ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#931: FILE: drivers/scsi/bfa/bfa_ioc.c:54:
+#define bfa_ioc_stats(_ioc, _stats)	(_ioc)->stats._stats ++

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '_stats' may be better as '(_stats)' to avoid precedence issues
#931: FILE: drivers/scsi/bfa/bfa_ioc.c:54:
+#define bfa_ioc_stats(_ioc, _stats)	(_ioc)->stats._stats ++

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'off' may be better as '(off)' to avoid precedence issues
#933: FILE: drivers/scsi/bfa/bfa_ioc.c:56:
+#define BFA_FLASH_CHUNK_NO(off)         (off / BFI_FLASH_CHUNK_SZ_WORDS)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'off' may be better as '(off)' to avoid precedence issues
#934: FILE: drivers/scsi/bfa/bfa_ioc.c:57:
+#define BFA_FLASH_OFFSET_IN_CHUNK(off)  (off % BFI_FLASH_CHUNK_SZ_WORDS)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chunkno' may be better as '(chunkno)' to avoid precedence issues
#935: FILE: drivers/scsi/bfa/bfa_ioc.c:58:
+#define BFA_FLASH_CHUNK_ADDR(chunkno)   (chunkno * BFI_FLASH_CHUNK_SZ_WORDS)

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1077: FILE: drivers/scsi/bfa/bfa_ioc.c:200:
+		 * fall through

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1126: FILE: drivers/scsi/bfa/bfa_ioc.c:249:
+		 * fall through

WARNING:TYPO_SPELLING: 'initialzation' may be misspelled - perhaps 'initialization'?
#1152: FILE: drivers/scsi/bfa/bfa_ioc.c:275:
+ * Awaiting semaphore for h/w initialzation.
                               ^^^^^^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1175: FILE: drivers/scsi/bfa/bfa_ioc.c:298:
+
+

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1201: FILE: drivers/scsi/bfa/bfa_ioc.c:324:
+		 * fall through

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1227: FILE: drivers/scsi/bfa/bfa_ioc.c:350:
+
+

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1254: FILE: drivers/scsi/bfa/bfa_ioc.c:377:
+		 * fall through

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1285: FILE: drivers/scsi/bfa/bfa_ioc.c:408:
+
+

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1310: FILE: drivers/scsi/bfa/bfa_ioc.c:433:
+		 * fall through

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1327: FILE: drivers/scsi/bfa/bfa_ioc.c:450:
+
+

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1358: FILE: drivers/scsi/bfa/bfa_ioc.c:481:
+		 * !!! fall through !!!

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1370: FILE: drivers/scsi/bfa/bfa_ioc.c:493:
+
+

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1392: FILE: drivers/scsi/bfa/bfa_ioc.c:515:
+		 * !!! fall through !!!

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1440: FILE: drivers/scsi/bfa/bfa_ioc.c:563:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1477: FILE: drivers/scsi/bfa/bfa_ioc.c:600:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1531: FILE: drivers/scsi/bfa/bfa_ioc.c:654:
+	switch (event) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1557: FILE: drivers/scsi/bfa/bfa_ioc.c:680:
+
+

CHECK:SPACING: No space is necessary after a cast
#1714: FILE: drivers/scsi/bfa/bfa_ioc.c:837:
+	u32       *fwsig = (u32 *) fwhdr;

WARNING:TYPO_SPELLING: 'CNA' may be misspelled - perhaps 'CAN'?
#1811: FILE: drivers/scsi/bfa/bfa_ioc.c:934:
+	 * Firmware match check is relevant only for CNA.
 	                                             ^^^

WARNING:TYPO_SPELLING: 'cna' may be misspelled - perhaps 'can'?
#1813: FILE: drivers/scsi/bfa/bfa_ioc.c:936:
+	if (!ioc->cna)
 	          ^^^

WARNING:TYPO_SPELLING: 'CNA' may be misspelled - perhaps 'CAN'?
#1869: FILE: drivers/scsi/bfa/bfa_ioc.c:992:
+	 * Firmware lock is relevant only for CNA.
 	                                      ^^^

WARNING:TYPO_SPELLING: 'cna' may be misspelled - perhaps 'can'?
#1872: FILE: drivers/scsi/bfa/bfa_ioc.c:995:
+	if (!ioc->cna || (bfa_ioc_fwimg_get_size(ioc) < BFA_IOC_FWIMG_MINSZ))
 	          ^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1902: FILE: drivers/scsi/bfa/bfa_ioc.c:1025:
+
+

CHECK:SPACING: No space is necessary after a cast
#1972: FILE: drivers/scsi/bfa/bfa_ioc.c:1095:
+	u32       *msgp = (u32 *) ioc_msg;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2211: FILE: drivers/scsi/bfa/bfa_ioc.c:1334:
+	for (i = 0; i < bfa_ioc_fwimg_get_size(ioc); i++) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2215: FILE: drivers/scsi/bfa/bfa_ioc.c:1338:
+			fwimg = bfa_ioc_fwimg_get_chunk(ioc,
+					BFA_FLASH_CHUNK_ADDR(chunkno));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2349: FILE: drivers/scsi/bfa/bfa_ioc.c:1472:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2356: FILE: drivers/scsi/bfa/bfa_ioc.c:1479:
+/**
+* Set interrupt mode for a function: INTX or MSIX

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2357: FILE: drivers/scsi/bfa/bfa_ioc.c:1480:
+* Set interrupt mode for a function: INTX or MSIX
+ */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2407: FILE: drivers/scsi/bfa/bfa_ioc.c:1530:
+^I^I * ^IFor catapult, choose operational mode FC/FCoE$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2525: FILE: drivers/scsi/bfa/bfa_ioc.c:1648:
+
+

WARNING:TYPO_SPELLING: 'cna' may be misspelled - perhaps 'can'?
#2642: FILE: drivers/scsi/bfa/bfa_ioc.c:1765:
+	ioc->cna = ioc->ctdev && !ioc->fcmode;
 	     ^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mc > BFI_MC_MAX'
#2813: FILE: drivers/scsi/bfa/bfa_ioc.c:1936:
+	if ((mc > BFI_MC_MAX) || (mod->mbhdlr[mc].cbfn == NULL))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mod->mbhdlr[mc].cbfn == NULL'
#2813: FILE: drivers/scsi/bfa/bfa_ioc.c:1936:
+	if ((mc > BFI_MC_MAX) || (mod->mbhdlr[mc].cbfn == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mod->mbhdlr[mc].cbfn"
#2813: FILE: drivers/scsi/bfa/bfa_ioc.c:1936:
+	if ((mc > BFI_MC_MAX) || (mod->mbhdlr[mc].cbfn == NULL))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2834: FILE: drivers/scsi/bfa/bfa_ioc.c:1957:
+	return (bfa_fsm_cmp_state(ioc, bfa_ioc_sm_disabling)
+		|| bfa_fsm_cmp_state(ioc, bfa_ioc_sm_disabled));

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2844: FILE: drivers/scsi/bfa/bfa_ioc.c:1967:
+	return (bfa_fsm_cmp_state(ioc, bfa_ioc_sm_reset)
+		|| bfa_fsm_cmp_state(ioc, bfa_ioc_sm_fwcheck)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2845: FILE: drivers/scsi/bfa/bfa_ioc.c:1968:
+		|| bfa_fsm_cmp_state(ioc, bfa_ioc_sm_fwcheck)
+		|| bfa_fsm_cmp_state(ioc, bfa_ioc_sm_mismatch));

CHECK:MACRO_ARG_REUSE: Macro argument reuse '__sm' - possible side-effects?
#2848: FILE: drivers/scsi/bfa/bfa_ioc.c:1971:
+#define bfa_ioc_state_disabled(__sm)		\
+	(((__sm) == BFI_IOC_UNINIT) ||		\
+	 ((__sm) == BFI_IOC_INITING) ||		\
+	 ((__sm) == BFI_IOC_HWINIT) ||		\
+	 ((__sm) == BFI_IOC_DISABLED) ||	\
+	 ((__sm) == BFI_IOC_HBFAIL) ||		\
+	 ((__sm) == BFI_IOC_CFG_DISABLED))

WARNING:TYPO_SPELLING: 'cna' may be misspelled - perhaps 'can'?
#2951: FILE: drivers/scsi/bfa/bfa_ioc.c:2074:
+	ad_attr->cna_capable = ioc->cna;
 	                            ^^^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#3027: FILE: drivers/scsi/bfa/bfa_ioc.c:2150:
+	w              , w5;
 	               ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3259: FILE: drivers/scsi/bfa/bfa_ioc.c:2382:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3264: FILE: drivers/scsi/bfa/bfa_ioc.h:1:
+/*

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_s' - possible side-effects?
#3310: FILE: drivers/scsi/bfa/bfa_ioc.h:47:
+#define BFA_ROUNDUP(_l, _s)	(((_l) + ((_s) - 1)) & ~((_s) - 1))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3312: FILE: drivers/scsi/bfa/bfa_ioc.h:49:
+
+

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dma_addr' may be better as '(dma_addr)' to avoid precedence issues
#3314: FILE: drivers/scsi/bfa/bfa_ioc.h:51:
+#define bfa_dma_addr_set(dma_addr, pa)	\
+		__bfa_dma_addr_set(&dma_addr, (u64)pa)

CHECK:SPACING: No space is necessary after a cast
#3320: FILE: drivers/scsi/bfa/bfa_ioc.h:57:
+	dma_addr->a32.addr_lo = (u32) pa;

CHECK:SPACING: No space is necessary after a cast
#3321: FILE: drivers/scsi/bfa/bfa_ioc.h:58:
+	dma_addr->a32.addr_hi = (u32) (bfa_os_u32(pa));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3324: FILE: drivers/scsi/bfa/bfa_ioc.h:61:
+
+

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dma_addr' may be better as '(dma_addr)' to avoid precedence issues
#3325: FILE: drivers/scsi/bfa/bfa_ioc.h:62:
+#define bfa_dma_be_addr_set(dma_addr, pa)	\
+		__bfa_dma_be_addr_set(&dma_addr, (u64)pa)

CHECK:SPACING: No space is necessary after a cast
#3330: FILE: drivers/scsi/bfa/bfa_ioc.h:67:
+	dma_addr->a32.addr_lo = (u32) bfa_os_htonl(pa);

CHECK:SPACING: No space is necessary after a cast
#3331: FILE: drivers/scsi/bfa/bfa_ioc.h:68:
+	dma_addr->a32.addr_hi = (u32) bfa_os_htonl(bfa_os_u32(pa));

CHECK:MACRO_ARG_REUSE: Macro argument reuse '__notify' - possible side-effects?
#3407: FILE: drivers/scsi/bfa/bfa_ioc.h:144:
+#define bfa_ioc_hbfail_init(__notify, __cbfn, __cbarg) do {	\
+	(__notify)->cbfn = (__cbfn);      \
+	(__notify)->cbarg = (__cbarg);      \
+} while (0)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3416: FILE: drivers/scsi/bfa/bfa_ioc.h:153:
+^Istruct bfa_timer_mod_s ^I*timer_mod;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3417: FILE: drivers/scsi/bfa/bfa_ioc.h:154:
+^Istruct bfa_timer_s ^Iioc_timer;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3418: FILE: drivers/scsi/bfa/bfa_ioc.h:155:
+^Istruct bfa_timer_s ^Isem_timer;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3427: FILE: drivers/scsi/bfa/bfa_ioc.h:164:
+^Istruct bfa_ioc_regs_s ^Iioc_regs;$

WARNING:TYPO_SPELLING: 'cna' may be misspelled - perhaps 'can'?
#3435: FILE: drivers/scsi/bfa/bfa_ioc.h:172:
+	bfa_boolean_t		cna;
 	             		^^^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3445: FILE: drivers/scsi/bfa/bfa_ioc.h:182:
+#define bfa_ioc_pcifn(__ioc)		(__ioc)->pcidev.pci_func

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3446: FILE: drivers/scsi/bfa/bfa_ioc.h:183:
+#define bfa_ioc_devid(__ioc)		(__ioc)->pcidev.device_id

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3447: FILE: drivers/scsi/bfa/bfa_ioc.h:184:
+#define bfa_ioc_bar0(__ioc)		(__ioc)->pcidev.pci_bar_kva

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3449: FILE: drivers/scsi/bfa/bfa_ioc.h:186:
+#define bfa_ioc_fetch_stats(__ioc, __stats) \
+		((__stats)->drv_stats) = (__ioc)->stats

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3453: FILE: drivers/scsi/bfa/bfa_ioc.h:190:
+#define bfa_ioc_maxfrsize(__ioc)	(__ioc)->attr->maxfrsize

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3454: FILE: drivers/scsi/bfa/bfa_ioc.h:191:
+#define bfa_ioc_rx_bbcredit(__ioc)	(__ioc)->attr->rx_bbcredit

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3463: FILE: drivers/scsi/bfa/bfa_ioc.h:200:
+void bfa_ioc_mbox_register(struct bfa_ioc_s *ioc,
+		bfa_ioc_mbox_mcfunc_t *mcfuncs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3468: FILE: drivers/scsi/bfa/bfa_ioc.h:205:
+void bfa_ioc_mbox_regisr(struct bfa_ioc_s *ioc, enum bfi_mclass mc,
+		bfa_ioc_mbox_mcfunc_t cbfn, void *cbarg);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3474: FILE: drivers/scsi/bfa/bfa_ioc.h:211:
+void bfa_ioc_attach(struct bfa_ioc_s *ioc, void *bfa,
+		struct bfa_ioc_cbfn_s *cbfn, struct bfa_timer_mod_s *timer_mod,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3479: FILE: drivers/scsi/bfa/bfa_ioc.h:216:
+void bfa_ioc_pci_init(struct bfa_ioc_s *ioc, struct bfa_pcidev_s *pcidev,
+		enum bfi_mclass mc);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3498: FILE: drivers/scsi/bfa/bfa_ioc.h:235:
+void bfa_ioc_get_adapter_attr(struct bfa_ioc_s *ioc,
+		struct bfa_adapter_attr_s *ad_attr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3502: FILE: drivers/scsi/bfa/bfa_ioc.h:239:
+bfa_status_t bfa_ioc_debug_fwsave(struct bfa_ioc_s *ioc, void *trcdata,
+		int *trclen);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3510: FILE: drivers/scsi/bfa/bfa_ioc.h:247:
+void bfa_ioc_hbfail_register(struct bfa_ioc_s *ioc,
+	struct bfa_ioc_hbfail_notify_s *notify);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3527: FILE: drivers/scsi/bfa/bfa_iocfc.c:1:
+/*

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3577: FILE: drivers/scsi/bfa/bfa_iocfc.c:51:
+static void bfa_iocfc_stats_swap(struct bfa_fw_stats_s *d,
+			struct bfa_fw_stats_s *s);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3595: FILE: drivers/scsi/bfa/bfa_iocfc.c:69:
+	per_reqq_sz = BFA_ROUNDUP((cfg->drvcfg.num_reqq_elems * BFI_LMSG_SZ),
+							BFA_DMA_ALIGN_SZ);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3597: FILE: drivers/scsi/bfa/bfa_iocfc.c:71:
+	per_rspq_sz = BFA_ROUNDUP((cfg->drvcfg.num_rspq_elems * BFI_LMSG_SZ),
+							BFA_DMA_ALIGN_SZ);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3658: FILE: drivers/scsi/bfa/bfa_iocfc.c:132:
+		bfa_dma_be_addr_set(cfg_info->req_cq_ba[i],
+				       iocfc->req_cq_ba[i].pa);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3660: FILE: drivers/scsi/bfa/bfa_iocfc.c:134:
+		bfa_dma_be_addr_set(cfg_info->req_shadow_ci[i],
+				       iocfc->req_cq_shadow_ci[i].pa);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3665: FILE: drivers/scsi/bfa/bfa_iocfc.c:139:
+		bfa_dma_be_addr_set(cfg_info->rsp_cq_ba[i],
+				       iocfc->rsp_cq_ba[i].pa);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3667: FILE: drivers/scsi/bfa/bfa_iocfc.c:141:
+		bfa_dma_be_addr_set(cfg_info->rsp_shadow_pi[i],
+				       iocfc->rsp_cq_shadow_pi[i].pa);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3676: FILE: drivers/scsi/bfa/bfa_iocfc.c:150:
+	bfi_h2i_set(cfg_req.mh, BFI_MC_IOCFC, BFI_IOCFC_H2I_CFG_REQ,
+			bfa_lpuid(bfa));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3680: FILE: drivers/scsi/bfa/bfa_iocfc.c:154:
+	bfa_ioc_mbox_send(&bfa->ioc, &cfg_req,
+			sizeof(struct bfi_iocfc_cfg_req_s));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3685: FILE: drivers/scsi/bfa/bfa_iocfc.c:159:
+bfa_iocfc_init_mem(struct bfa_s *bfa, void *bfad, struct bfa_iocfc_cfg_s *cfg,
+		    struct bfa_pcidev_s *pcidev)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3722: FILE: drivers/scsi/bfa/bfa_iocfc.c:196:
+bfa_iocfc_mem_claim(struct bfa_s *bfa, struct bfa_iocfc_cfg_s *cfg,
+		      struct bfa_meminfo_s *meminfo)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3745: FILE: drivers/scsi/bfa/bfa_iocfc.c:219:
+	per_reqq_sz = BFA_ROUNDUP((cfg->drvcfg.num_reqq_elems * BFI_LMSG_SZ),
+							BFA_DMA_ALIGN_SZ);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3747: FILE: drivers/scsi/bfa/bfa_iocfc.c:221:
+	per_rspq_sz = BFA_ROUNDUP((cfg->drvcfg.num_rspq_elems * BFI_LMSG_SZ),
+							BFA_DMA_ALIGN_SZ);

CHECK:SPACING: No space is necessary after a cast
#3780: FILE: drivers/scsi/bfa/bfa_iocfc.c:254:
+	bfa->iocfc.cfginfo = (struct bfi_iocfc_cfg_s *) dm_kva;

CHECK:SPACING: No space is necessary after a cast
#3789: FILE: drivers/scsi/bfa/bfa_iocfc.c:263:
+	bfa->iocfc.cfgrsp = (struct bfi_iocfc_cfgrsp_s *) dm_kva;

CHECK:SPACING: No space is necessary after a cast
#3802: FILE: drivers/scsi/bfa/bfa_iocfc.c:276:
+	bfa->iocfc.fw_stats = (struct bfa_fw_stats_s *) dm_kva;

CHECK:BRACES: braces {} should be used on all arms of this statement
#3859: FILE: drivers/scsi/bfa/bfa_iocfc.c:333:
+	if (complete) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3864: FILE: drivers/scsi/bfa/bfa_iocfc.c:338:
+	} else

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3897: FILE: drivers/scsi/bfa/bfa_iocfc.c:371:
+^Istruct bfi_iocfc_cfg_s ^I^I*cfginfo = iocfc->cfginfo;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3929: FILE: drivers/scsi/bfa/bfa_iocfc.c:403:
+	bfa_timer_start(bfa, &iocfc->stats_timer,
+			    bfa_iocfc_stats_clr_timeout, bfa,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3933: FILE: drivers/scsi/bfa/bfa_iocfc.c:407:
+	bfi_h2i_set(stats_req.mh, BFI_MC_IOCFC, BFI_IOCFC_H2I_CLEAR_STATS_REQ,
+		bfa_lpuid(bfa));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3935: FILE: drivers/scsi/bfa/bfa_iocfc.c:409:
+	bfa_ioc_mbox_send(&bfa->ioc, &stats_req,
+		sizeof(struct bfi_iocfc_stats_req_s));

CHECK:SPACING: No space is necessary after a cast
#3941: FILE: drivers/scsi/bfa/bfa_iocfc.c:415:
+	u32       *dip = (u32 *) d;

CHECK:SPACING: No space is necessary after a cast
#3942: FILE: drivers/scsi/bfa/bfa_iocfc.c:416:
+	u32       *sip = (u32 *) s;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3985: FILE: drivers/scsi/bfa/bfa_iocfc.c:459:
+			bfa_os_memset(iocfc->stats_ret, 0,
+				sizeof(*iocfc->stats_ret));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3987: FILE: drivers/scsi/bfa/bfa_iocfc.c:461:
+			bfa_iocfc_stats_swap(&iocfc->stats_ret->fw_stats,
+				iocfc->fw_stats);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4015: FILE: drivers/scsi/bfa/bfa_iocfc.c:489:
+	bfa_timer_start(bfa, &iocfc->stats_timer,
+			    bfa_iocfc_stats_timeout, bfa, BFA_IOCFC_TOV);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4018: FILE: drivers/scsi/bfa/bfa_iocfc.c:492:
+	bfi_h2i_set(stats_req.mh, BFI_MC_IOCFC, BFI_IOCFC_H2I_GET_STATS_REQ,
+			bfa_lpuid(bfa));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4020: FILE: drivers/scsi/bfa/bfa_iocfc.c:494:
+	bfa_ioc_mbox_send(&bfa->ioc, &stats_req,
+		sizeof(struct bfi_iocfc_stats_req_s));

CHECK:BRACES: Unbalanced braces around else statement
#4070: FILE: drivers/scsi/bfa/bfa_iocfc.c:544:
+	else {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4107: FILE: drivers/scsi/bfa/bfa_iocfc.c:581:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4118: FILE: drivers/scsi/bfa/bfa_iocfc.c:592:
+bfa_iocfc_meminfo(struct bfa_iocfc_cfg_s *cfg, u32 *km_len,
+		u32 *dm_len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4133: FILE: drivers/scsi/bfa/bfa_iocfc.c:607:
+bfa_iocfc_attach(struct bfa_s *bfa, void *bfad, struct bfa_iocfc_cfg_s *cfg,
+		   struct bfa_meminfo_s *meminfo, struct bfa_pcidev_s *pcidev)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4143: FILE: drivers/scsi/bfa/bfa_iocfc.c:617:
+	bfa_ioc_attach(&bfa->ioc, bfa, &bfa_iocfc_cbfn, &bfa->timer_mod,
+		bfa->trcmod, bfa->aen, bfa->logm);

CHECK:SPACING: No space is necessary after a cast
#4213: FILE: drivers/scsi/bfa/bfa_iocfc.c:687:
+	msg = (union bfi_iocfc_i2h_msg_u *) m;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#4224: FILE: drivers/scsi/bfa/bfa_iocfc.c:698:
+		if (iocfc->stats_busy == BFA_FALSE
+		    || iocfc->stats_status == BFA_STATUS_ETIMER)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4230: FILE: drivers/scsi/bfa/bfa_iocfc.c:704:
+		bfa_cb_queue(bfa, &iocfc->stats_hcb_qe, bfa_iocfc_stats_cb,
+			      bfa);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#4237: FILE: drivers/scsi/bfa/bfa_iocfc.c:711:
+		if (iocfc->stats_busy == BFA_FALSE
+		    || iocfc->stats_status == BFA_STATUS_ETIMER)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4243: FILE: drivers/scsi/bfa/bfa_iocfc.c:717:
+		bfa_cb_queue(bfa, &iocfc->stats_hcb_qe,
+			      bfa_iocfc_stats_clr_cb, bfa);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4290: FILE: drivers/scsi/bfa/bfa_iocfc.c:764:
+	bfi_h2i_set(m->mh, BFI_MC_IOCFC, BFI_IOCFC_H2I_SET_INTR_REQ,
+			bfa_lpuid(bfa));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4313: FILE: drivers/scsi/bfa/bfa_iocfc.c:787:
+bfa_iocfc_get_stats(struct bfa_s *bfa, struct bfa_iocfc_stats_s *stats,
+		      bfa_cb_ioc_t cbfn, void *cbarg)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#4319: FILE: drivers/scsi/bfa/bfa_iocfc.c:793:
+		return (BFA_STATUS_DEVBUSY);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#4329: FILE: drivers/scsi/bfa/bfa_iocfc.c:803:
+	return (BFA_STATUS_OK);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#4339: FILE: drivers/scsi/bfa/bfa_iocfc.c:813:
+		return (BFA_STATUS_DEVBUSY);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#4347: FILE: drivers/scsi/bfa/bfa_iocfc.c:821:
+	return (BFA_STATUS_OK);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4372: FILE: drivers/scsi/bfa/bfa_iocfc.c:846:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4394: FILE: drivers/scsi/bfa/bfa_iocfc.c:868:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078741.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 21 errors, 49 warnings, 111 checks, 4315 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078741.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
