ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: include/linux/sched.h:1145:
+  ^Icputime_t it_prof_expires, it_virt_expires;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#237: FILE: include/linux/sched.h:1145:
+  ^Icputime_t it_prof_expires, it_virt_expires;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: include/linux/sched.h:1145:
+  ^Icputime_t it_prof_expires, it_virt_expires;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#417: FILE: kernel/exit.c:1329:
+			cputime_add(p->utime,
+			cputime_add(sig->utime,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#424: FILE: kernel/exit.c:1334:
+			cputime_add(p->stime,
+			cputime_add(sig->stime,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#495: FILE: kernel/fork.c:813:
+	sig->utime = sig->stime = sig->cutime = sig->cstime = cputime_zero;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LINE_SPACING: Missing a blank line after declarations
#608: FILE: kernel/itimer.c:65:
+			cputime_t utime = tsk->signal->utime;
+			do {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#788: FILE: kernel/posix-cpu-timers.c:161:
 }
+static inline unsigned long long sched_ns(struct task_struct *p)

ERROR:CODE_INDENT: code indent should use tabs where possible
#822: FILE: kernel/posix-cpu-timers.c:230:
+ ^Iswitch (clock_idx) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#822: FILE: kernel/posix-cpu-timers.c:230:
+ ^Iswitch (clock_idx) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#822: FILE: kernel/posix-cpu-timers.c:230:
+ ^Iswitch (clock_idx) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#845: FILE: kernel/posix-cpu-timers.c:250:
+		while ((t = next_thread(t)) != p) {
+			cpu->sched += t->se.sum_exec_runtime;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#864: FILE: kernel/posix-cpu-timers.c:269:
+	unsigned long flags;
+	spin_lock_irqsave(&p->sighand->siglock, flags);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#888: FILE: kernel/posix-cpu-timers.c:480:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#900: FILE: kernel/posix-cpu-timers.c:492:
+ ^Istruct task_struct *t = p;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#900: FILE: kernel/posix-cpu-timers.c:492:
+ ^Istruct task_struct *t = p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#900: FILE: kernel/posix-cpu-timers.c:492:
+ ^Istruct task_struct *t = p;$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#908: FILE: kernel/posix-cpu-timers.c:500:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#912: FILE: kernel/posix-cpu-timers.c:504:
+		left = cputime_div_non_zero(cputime_sub(expires.cpu, val.cpu),
+				       nthreads);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#927: FILE: kernel/posix-cpu-timers.c:519:
+		left = cputime_div_non_zero(cputime_sub(expires.cpu, val.cpu),
+				       nthreads);

WARNING:INDENTED_LABEL: labels should not be indented
#1025: FILE: kernel/posix-cpu-timers.c:657:
+			rebalance:

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1026: FILE: kernel/posix-cpu-timers.c:658:
+				process_timer_rebalance(

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tsk->signal"
#1316: FILE: kernel/posix-cpu-timers.c:1344:
+	if (likely(tsk->signal != NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#1380: FILE: kernel/posix-cpu-timers.c:1443:
+		union cpu_time_count expires = { .sched = 0 };
+		expires.cpu = *newval;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000207465.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 12 warnings, 9 checks, 1491 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000207465.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
