WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
Here's the new ptrace BTS API that supports two different overflow handling mechanisms (wrap-around and buffer-full-signal) to support two different use cases (debugging and profiling).

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#297: FILE: arch/x86/kernel/ptrace.c:602:
+		if (cfg.flags & PTRACE_BTS_O_SIGNAL) {
[...]
+		} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#436: FILE: arch/x86/kernel/ptrace.c:864:
+			(child, data, (struct bts_struct __user *) addr);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#449: FILE: arch/x86/kernel/ptrace.c:873:
+			(child, (struct bts_struct __user *) addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#485: FILE: include/asm-x86/ds.h:62:
+extern int ds_get_bts_end(void *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#485: FILE: include/asm-x86/ds.h:62:
+extern int ds_get_bts_end(void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#487: FILE: include/asm-x86/ds.h:64:
+extern int ds_set_overflow(void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#487: FILE: include/asm-x86/ds.h:64:
+extern int ds_set_overflow(void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#487: FILE: include/asm-x86/ds.h:64:
+extern int ds_set_overflow(void *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#488: FILE: include/asm-x86/ds.h:65:
+extern int ds_get_overflow(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#488: FILE: include/asm-x86/ds.h:65:
+extern int ds_get_overflow(void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#489: FILE: include/asm-x86/ds.h:66:
+extern int ds_clear(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#489: FILE: include/asm-x86/ds.h:66:
+extern int ds_clear(void *);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#548: FILE: include/asm-x86/ptrace-abi.h:84:
+/* configuration/status structure used in PTRACE_BTS_CONFIG and
+   PTRACE_BTS_STATUS commands.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#560: FILE: include/asm-x86/ptrace-abi.h:96:
+#define PTRACE_BTS_O_SIGNAL     0x4 /* send SIG? on buffer overflow
+				       instead of wrapping around */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#560: FILE: include/asm-x86/ptrace-abi.h:96:
+				       instead of wrapping around */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#562: FILE: include/asm-x86/ptrace-abi.h:98:
+#define PTRACE_BTS_O_CUT_SIZE	0x8 /* cut requested size to max available
+				       instead of failing */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#562: FILE: include/asm-x86/ptrace-abi.h:98:
+				       instead of failing */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#566: FILE: include/asm-x86/ptrace-abi.h:102:
+/* Configure branch trace recording.
+   DATA is ignored, ADDR points to a struct ptrace_bts_config.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#571: FILE: include/asm-x86/ptrace-abi.h:107:
+/* Return the current configuration.
+   DATA is ignored, ADDR points to a struct ptrace_bts_config

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#576: FILE: include/asm-x86/ptrace-abi.h:112:
+/* Return the number of available BTS records.
+   DATA and ADDR are ignored.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#580: FILE: include/asm-x86/ptrace-abi.h:116:
+/* Get a single BTS record.
+   DATA defines the index into the BTS array, where 0 is the newest

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#586: FILE: include/asm-x86/ptrace-abi.h:122:
+/* Clear the BTS buffer.
+   DATA and ADDR are ignored.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#590: FILE: include/asm-x86/ptrace-abi.h:126:
+/* Read all available BTS records and clear the buffer.
+   DATA is ignored. ADDR points to an array of struct bts_struct of

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000347048.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 18 warnings, 6 checks, 525 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000347048.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
