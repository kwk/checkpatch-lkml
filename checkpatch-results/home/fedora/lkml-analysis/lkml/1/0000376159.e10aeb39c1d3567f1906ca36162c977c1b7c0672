WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#85: FILE: Makefile:4:
+EXTRAVERSION = .9
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#182: FILE: block/ll_rw_blk.c:1095:
+		printk(KERN_ERR "%s: attempt to clear non-busy tag (%d)\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#183: FILE: block/ll_rw_blk.c:1096:
+		       __FUNCTION__, tag);

WARNING:LINE_SPACING: Missing a blank line after declarations
#207: FILE: crypto/blkcipher.c:68:
+	u8 *end_page = (u8 *)(((unsigned long)(start + len - 1)) & PAGE_MASK);
+	return start > end_page ? start : end_page;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#242: FILE: drivers/acpi/tables/tbutils.c:67:
+ * DESCRIPTION: validate XSDT
+******************************************************************************/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: No space is necessary after a cast
#269: FILE: drivers/acpi/tables/tbutils.c:94:
+		(u32) ((table->length -

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#318: FILE: drivers/acpi/tables/tbutils.c:453:
+			ACPI_WARNING((AE_INFO, "BIOS XSDT has NULL entry,"
+					"using RSDT"));

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_DriverVersion>
#334: FILE: drivers/block/DAC960.c:20:
+#define DAC960_DriverVersion			"2.5.49"

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_DriverDate>
#335: FILE: drivers/block/DAC960.c:21:
+#define DAC960_DriverDate			"21 Aug 2007"

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: drivers/block/DAC960.c:1169:
+  if (pci_set_dma_mask(Controller->PCIDevice, DMA_32BIT_MASK))$

CHECK:CAMELCASE: Avoid CamelCase: <Controller>
#352: FILE: drivers/block/DAC960.c:1169:
+  if (pci_set_dma_mask(Controller->PCIDevice, DMA_32BIT_MASK))

CHECK:CAMELCASE: Avoid CamelCase: <PCIDevice>
#352: FILE: drivers/block/DAC960.c:1169:
+  if (pci_set_dma_mask(Controller->PCIDevice, DMA_32BIT_MASK))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: drivers/block/DAC960.c:1171:
+  Controller->BounceBufferLimit = DMA_32BIT_MASK;$

CHECK:CAMELCASE: Avoid CamelCase: <BounceBufferLimit>
#355: FILE: drivers/block/DAC960.c:1171:
+  Controller->BounceBufferLimit = DMA_32BIT_MASK;

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_Failure>
#371: FILE: drivers/block/DAC960.c:1377:
+		return DAC960_Failure(Controller, "DMA mask out of range");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#487: FILE: drivers/media/dvb/b2c2/flexcop-i2c.c:141:
+	 * course be better to actually do the read.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#622: FILE: drivers/net/wireless/bcm43xx/bcm43xx_main.c:3290:
+	 * If not, the next 2 steps may deadlock */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#699: FILE: drivers/scsi/3w-9xxx.c:7:
+   Copyright (C) 2004-2007 Applied Micro Circuits Corporation.$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#699: FILE: drivers/scsi/3w-9xxx.c:7:
+   Copyright (C) 2004-2007 Applied Micro Circuits Corporation.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#699: FILE: drivers/scsi/3w-9xxx.c:7:
+   Copyright (C) 2004-2007 Applied Micro Circuits Corporation.
                      ^

CHECK:CAMELCASE: Avoid CamelCase: <Copyright>
#699: FILE: drivers/scsi/3w-9xxx.c:7:
+   Copyright (C) 2004-2007 Applied Micro Circuits Corporation.

CHECK:CAMELCASE: Avoid CamelCase: <Applied>
#699: FILE: drivers/scsi/3w-9xxx.c:7:
+   Copyright (C) 2004-2007 Applied Micro Circuits Corporation.

CHECK:CAMELCASE: Avoid CamelCase: <Micro>
#699: FILE: drivers/scsi/3w-9xxx.c:7:
+   Copyright (C) 2004-2007 Applied Micro Circuits Corporation.

CHECK:CAMELCASE: Avoid CamelCase: <Circuits>
#699: FILE: drivers/scsi/3w-9xxx.c:7:
+   Copyright (C) 2004-2007 Applied Micro Circuits Corporation.

CHECK:CAMELCASE: Avoid CamelCase: <Corporation>
#699: FILE: drivers/scsi/3w-9xxx.c:7:
+   Copyright (C) 2004-2007 Applied Micro Circuits Corporation.

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#730: FILE: drivers/scsi/3w-9xxx.c:2068:
+	if (pci_set_dma_mask(pdev, DMA_64BIT_MASK)
+	    || pci_set_consistent_dma_mask(pdev, DMA_64BIT_MASK))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#732: FILE: drivers/scsi/3w-9xxx.c:2070:
+		if (pci_set_dma_mask(pdev, DMA_32BIT_MASK)
+		    || pci_set_consistent_dma_mask(pdev, DMA_32BIT_MASK)) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#790: FILE: fs/ext3/namei.c:386:
+		ext3_warning(dir->i_sb, __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#803: FILE: fs/ext3/namei.c:398:
+			ext3_warning(dir->i_sb, __FUNCTION__,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#818: FILE: fs/ext3/namei.c:442:
+		if (dx_get_limit(entries) != dx_node_limit (dir)) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#819: FILE: fs/ext3/namei.c:443:
+			ext3_warning(dir->i_sb, __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#835: FILE: fs/ext3/namei.c:459:
+		ext3_warning(dir->i_sb, __FUNCTION__,

WARNING:SPLIT_STRING: quoted string split across lines
#837: FILE: fs/ext3/namei.c:461:
+			     "Corrupt dir inode %ld, running e2fsck is "
+			     "recommended.", dir->i_ino);

CHECK:SPACING: No space is necessary after a cast
#857: FILE: fs/ext3/namei.c:718:
+			map_tail->offs = (u16) ((char *) de - base);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#909: FILE: fs/ext3/namei.c:1181:
+	unsigned split, move, size, i;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#922: FILE: fs/ext3/namei.c:1213:
+	for (i = count-1; i >= 0; i--) {
 	              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#924: FILE: fs/ext3/namei.c:1215:
+		if (size + map[i].size/2 > blocksize/2)
 		                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#924: FILE: fs/ext3/namei.c:1215:
+		if (size + map[i].size/2 > blocksize/2)
 		                                    ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#957: FILE: fs/ext4/namei.c:386:
+		ext4_warning(dir->i_sb, __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#970: FILE: fs/ext4/namei.c:398:
+			ext4_warning(dir->i_sb, __FUNCTION__,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#985: FILE: fs/ext4/namei.c:442:
+		if (dx_get_limit(entries) != dx_node_limit (dir)) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#986: FILE: fs/ext4/namei.c:443:
+			ext4_warning(dir->i_sb, __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1002: FILE: fs/ext4/namei.c:459:
+		ext4_warning(dir->i_sb, __FUNCTION__,

WARNING:SPLIT_STRING: quoted string split across lines
#1004: FILE: fs/ext4/namei.c:461:
+			     "Corrupt dir inode %ld, running e2fsck is "
+			     "recommended.", dir->i_ino);

CHECK:SPACING: No space is necessary after a cast
#1024: FILE: fs/ext4/namei.c:718:
+			map_tail->offs = (u16) ((char *) de - base);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1076: FILE: fs/ext4/namei.c:1179:
+	unsigned split, move, size, i;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1089: FILE: fs/ext4/namei.c:1211:
+	for (i = count-1; i >= 0; i--) {
 	              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1091: FILE: fs/ext4/namei.c:1213:
+		if (size + map[i].size/2 > blocksize/2)
 		                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1091: FILE: fs/ext4/namei.c:1213:
+		if (size + map[i].size/2 > blocksize/2)
 		                                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1111: FILE: fs/jffs2/fs.c:631:
+	pg = read_cache_page_async(inode->i_mapping, offset >> PAGE_CACHE_SHIFT,
 			     (void *)jffs2_do_readpage_unlock, inode);

CHECK:SPACING: No space is necessary after a cast
#1200: FILE: kernel/futex_compat.c:67:
+	while (entry != (struct robust_list __user *) &head->list) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1274: FILE: net/8021q/vlan_dev.c:125:
+	if ((skb = skb_share_check(skb, GFP_ATOMIC)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1299: FILE: net/bridge/br_netfilter.c:515:
+	if ((skb = skb_share_check(skb, GFP_ATOMIC)) == NULL)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pkt_dev->hh[6]
#1371: FILE: net/core/pktgen.c:1456:
+			memcpy(&(pkt_dev->hh[6]), pkt_dev->src_mac, ETH_ALEN);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1451: FILE: net/ipv4/tcp_input.c:112:
+#define FLAG_ANY_PROGRESS	(FLAG_FORWARD_PROGRESS|FLAG_SND_UNA_ADVANCED)
                          	                      ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1475: FILE: net/ipv4/tcp_input.c:1864:
+	if ((flag&(FLAG_ANY_PROGRESS|FLAG_DSACKING_ACK)) ||
 	         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1475: FILE: net/ipv4/tcp_input.c:1864:
+	if ((flag&(FLAG_ANY_PROGRESS|FLAG_DSACKING_ACK)) ||
 	                            ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1487: FILE: net/ipv4/tcp_input.c:2120:
+	int is_dupack = !(flag&(FLAG_SND_UNA_ADVANCED|FLAG_NOT_DUP));
 	                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1487: FILE: net/ipv4/tcp_input.c:2120:
+	int is_dupack = !(flag&(FLAG_SND_UNA_ADVANCED|FLAG_NOT_DUP));
 	                                             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1488: FILE: net/ipv4/tcp_input.c:2121:
+	int do_lost = is_dupack || ((flag&FLAG_DATA_SACKED) &&
 	                                 ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1600: FILE: net/sunrpc/svcsock.c:1577:
+		if (atomic_read(&svsk->sk_inuse) > 1
+		    || test_bit(SK_BUSY, &svsk->sk_flags))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000376159.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 27 warnings, 33 checks, 1326 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000376159.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
