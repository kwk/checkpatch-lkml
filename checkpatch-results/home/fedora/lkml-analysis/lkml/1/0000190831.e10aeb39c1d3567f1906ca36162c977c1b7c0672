WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
> > > notification system, fsnotify.  On top of fsnotify I reimplement dnotify and

WARNING:TYPO_SPELLING: 'preperation' may be misspelled - perhaps 'preparation'?
#45: 
> > > All of this is in preperation for fanotify and using fanotify as an on access
                        ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'achive' may be misspelled - perhaps 'achieve'?
#67: 
whether your work is going to achive this? Maybe I can modify my
                              ^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#104: FILE: fs/inotify.c:317:
+			int found = 0;
+			if (ih->flags & IN_ONLY_CHILD) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: fs/inotify.c:485:
+struct inotify_handle *inotify_init(const struct inotify_operations *ops,
+			 int flags)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#171: FILE: include/linux/inotify.h:72:
+#define IN_ONLY_CHILD 0x00000002 /* only notify event generated by this
+					 process and children. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#171: FILE: include/linux/inotify.h:72:
+					 process and children. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#180: FILE: include/linux/inotify.h:122:
+extern struct inotify_handle *inotify_init(const struct inotify_operations *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct inotify_operations *' should also have an identifier name
#180: FILE: include/linux/inotify.h:122:
+extern struct inotify_handle *inotify_init(const struct inotify_operations *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#180: FILE: include/linux/inotify.h:122:
+extern struct inotify_handle *inotify_init(const struct inotify_operations *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#181: FILE: include/linux/inotify.h:123:
+extern struct inotify_handle *inotify_init(const struct inotify_operations *,
+							 int);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000190831.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 3 checks, 96 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000190831.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
