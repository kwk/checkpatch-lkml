WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
Extra bits for separation of task_struct -> task_security to make allyesconfig

ERROR:CODE_INDENT: code indent should use tabs where possible
#69: FILE: drivers/connector/cn_proc.c:119:
+^I ^Iev->event_data.id.r.ruid = task->act_as->uid;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#69: FILE: drivers/connector/cn_proc.c:119:
+^I ^Iev->event_data.id.r.ruid = task->act_as->uid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#70: FILE: drivers/connector/cn_proc.c:120:
+^I ^Iev->event_data.id.e.euid = task->act_as->euid;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#70: FILE: drivers/connector/cn_proc.c:120:
+^I ^Iev->event_data.id.e.euid = task->act_as->euid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#74: FILE: drivers/connector/cn_proc.c:122:
+^I   ^Iev->event_data.id.r.rgid = task->act_as->gid;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#74: FILE: drivers/connector/cn_proc.c:122:
+^I   ^Iev->event_data.id.r.rgid = task->act_as->gid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#75: FILE: drivers/connector/cn_proc.c:123:
+^I   ^Iev->event_data.id.e.egid = task->act_as->egid;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#75: FILE: drivers/connector/cn_proc.c:123:
+^I   ^Iev->event_data.id.e.egid = task->act_as->egid;$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'act_as->euid != obj->suid'
#236: FILE: mm/mempolicy.c:981:
+	if ((act_as->euid != obj->suid) && (act_as->euid != obj->uid) &&
+	    (act_as->uid != obj->suid) && (act_as->uid != obj->uid) &&
 	    !capable(CAP_SYS_NICE)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'act_as->euid != obj->uid'
#236: FILE: mm/mempolicy.c:981:
+	if ((act_as->euid != obj->suid) && (act_as->euid != obj->uid) &&
+	    (act_as->uid != obj->suid) && (act_as->uid != obj->uid) &&
 	    !capable(CAP_SYS_NICE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'act_as->uid != obj->suid'
#236: FILE: mm/mempolicy.c:981:
+	if ((act_as->euid != obj->suid) && (act_as->euid != obj->uid) &&
+	    (act_as->uid != obj->suid) && (act_as->uid != obj->uid) &&
 	    !capable(CAP_SYS_NICE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'act_as->uid != obj->uid'
#236: FILE: mm/mempolicy.c:981:
+	if ((act_as->euid != obj->suid) && (act_as->euid != obj->uid) &&
+	    (act_as->uid != obj->suid) && (act_as->uid != obj->uid) &&
 	    !capable(CAP_SYS_NICE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'act_as->euid != obj->suid'
#261: FILE: mm/migrate.c:948:
+	if ((act_as->euid != obj->suid) && (act_as->euid != obj->uid) &&
+	    (act_as->uid != obj->suid) && (act_as->uid != obj->uid) &&
 	    !capable(CAP_SYS_NICE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'act_as->euid != obj->uid'
#261: FILE: mm/migrate.c:948:
+	if ((act_as->euid != obj->suid) && (act_as->euid != obj->uid) &&
+	    (act_as->uid != obj->suid) && (act_as->uid != obj->uid) &&
 	    !capable(CAP_SYS_NICE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'act_as->uid != obj->suid'
#261: FILE: mm/migrate.c:948:
+	if ((act_as->euid != obj->suid) && (act_as->euid != obj->uid) &&
+	    (act_as->uid != obj->suid) && (act_as->uid != obj->uid) &&
 	    !capable(CAP_SYS_NICE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'act_as->uid != obj->uid'
#261: FILE: mm/migrate.c:948:
+	if ((act_as->euid != obj->suid) && (act_as->euid != obj->uid) &&
+	    (act_as->uid != obj->suid) && (act_as->uid != obj->uid) &&
 	    !capable(CAP_SYS_NICE)) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000335443.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 5 warnings, 8 checks, 256 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000335443.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
