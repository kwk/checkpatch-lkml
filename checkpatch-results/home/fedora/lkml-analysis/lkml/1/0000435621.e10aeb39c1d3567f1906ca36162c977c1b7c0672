WARNING:REPEATED_WORD: Possible repeated word: 'exported'
#34: 
devices exported exported by a virtual machine containing a physical

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#55: 
2. rx_lock can also be taken in softirq context, so it should be taken/released

WARNING:REPEATED_WORD: Possible repeated word: 'exported'
#88: FILE: drivers/net/Kconfig:2515:
+	  access network devices exported exported by a virtual

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#110: FILE: drivers/net/xen-netfront.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CONST_STRUCT: struct ethtool_ops should normally be const
#161: FILE: drivers/net/xen-netfront.c:52:
+static struct ethtool_ops xennet_ethtool_ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#165: FILE: drivers/net/xen-netfront.c:56:
+	unsigned offset;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#171: FILE: drivers/net/xen-netfront.c:62:
+/*
+ * Mutually-exclusive module options to select receive data path:

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#200: FILE: drivers/net/xen-netfront.c:91:
+	spinlock_t   tx_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#201: FILE: drivers/net/xen-netfront.c:92:
+	spinlock_t   rx_lock;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#211: FILE: drivers/net/xen-netfront.c:102:
+	unsigned rx_min_target, rx_max_target, rx_target;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#217: FILE: drivers/net/xen-netfront.c:108:
+	/*
+	 * {tx,rx}_skbs store outstanding skbuffs. Free tx_skb entries

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#227: FILE: drivers/net/xen-netfront.c:118:
+		unsigned link;

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#228: FILE: drivers/net/xen-netfront.c:119:
+	} tx_skbs[NET_TX_RING_SIZE];;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#231: FILE: drivers/net/xen-netfront.c:122:
+	unsigned tx_skb_freelist;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#242: FILE: drivers/net/xen-netfront.c:133:
+	struct multicall_entry rx_mcl[NET_RX_RING_SIZE+1];
 	                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#252: FILE: drivers/net/xen-netfront.c:143:
+/*
+ * Implement our own carrier flag: the network stack's version causes delays

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#261: FILE: drivers/net/xen-netfront.c:152:
+/*
+ * Access macros for acquiring freeing slots in tx_skbs[].

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#264: FILE: drivers/net/xen-netfront.c:155:
+static void add_id_to_freelist(unsigned *head, union skb_entry *list, unsigned short id)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#270: FILE: drivers/net/xen-netfront.c:161:
+static unsigned short get_id_from_freelist(unsigned *head, union skb_entry *list)

WARNING:LINE_SPACING: Missing a blank line after declarations
#287: FILE: drivers/net/xen-netfront.c:178:
+	struct sk_buff *skb = np->rx_skbs[i];
+	np->rx_skbs[i] = NULL;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#292: FILE: drivers/net/xen-netfront.c:183:
+static grant_ref_t xennet_get_rx_ref(struct netfront_info *np,
+					    RING_IDX ri)

WARNING:LINE_SPACING: Missing a blank line after declarations
#296: FILE: drivers/net/xen-netfront.c:187:
+	grant_ref_t ref = np->grant_rx_ref[i];
+	np->grant_rx_ref[i] = GRANT_INVALID_REF;

ERROR:SPACING: space required before the open parenthesis '('
#305: FILE: drivers/net/xen-netfront.c:196:
+#define xennet_sysfs_delif(dev) do { } while(0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#313: FILE: drivers/net/xen-netfront.c:204:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#317: FILE: drivers/net/xen-netfront.c:208:
+	struct net_device *dev = (struct net_device *)data;
+	netif_rx_schedule(dev);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#355: FILE: drivers/net/xen-netfront.c:246:
+	/*
+	 * Allocate skbuffs greedily, even though we batch updates to the

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#376: FILE: drivers/net/xen-netfront.c:267:
+				  jiffies + (HZ/10));
 				               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#386: FILE: drivers/net/xen-netfront.c:277:
+	if (i < (np->rx_target/2)) {
 	                      ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#393: FILE: drivers/net/xen-netfront.c:284:
+	if (((req_prod - np->rx.sring->rsp_prod) < (np->rx_target / 4)) &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#399: FILE: drivers/net/xen-netfront.c:290:
+		if ((skb = __skb_dequeue(&np->rx_batch)) == NULL)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#406: FILE: drivers/net/xen-netfront.c:297:
+		BUG_ON(np->rx_skbs[id]);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#410: FILE: drivers/net/xen-netfront.c:301:
+		BUG_ON((signed short)ref < 0);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#424: FILE: drivers/net/xen-netfront.c:315:
+				 * back to Xen. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#426: FILE: drivers/net/xen-netfront.c:317:
+				MULTI_update_va_mapping(np->rx_mcl+i,
 				                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#451: FILE: drivers/net/xen-netfront.c:342:
+			np->rx_mcl[i-1].args[MULTI_UVMFLAGS_INDEX] =
 			            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#452: FILE: drivers/net/xen-netfront.c:343:
+				UVMF_TLB_FLUSH|UVMF_ALL;
 				              ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#460: FILE: drivers/net/xen-netfront.c:351:
+			 * multicall. */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#461: FILE: drivers/net/xen-netfront.c:352:
+			(void)HYPERVISOR_multicall(np->rx_mcl, i+1);
 			                                        ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#472: FILE: drivers/net/xen-netfront.c:363:
+		wmb();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#510: FILE: drivers/net/xen-netfront.c:401:
+	BUG_ON(!netfront_carrier_ok(np));

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#525: FILE: drivers/net/xen-netfront.c:416:
+			if (unlikely(gnttab_query_foreign_access(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#527: FILE: drivers/net/xen-netfront.c:418:
+				printk(KERN_ALERT "xennet_tx_buf_gc: warning "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'xennet_tx_buf_gc', this function's name, in a string
#527: FILE: drivers/net/xen-netfront.c:418:
+				printk(KERN_ALERT "xennet_tx_buf_gc: warning "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#528: FILE: drivers/net/xen-netfront.c:419:
+				printk(KERN_ALERT "xennet_tx_buf_gc: warning "
+				       "-- grant still in use by backend "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#529: FILE: drivers/net/xen-netfront.c:420:
+				       "-- grant still in use by backend "
+				       "domain.\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#530: FILE: drivers/net/xen-netfront.c:421:
+				BUG();

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#532: FILE: drivers/net/xen-netfront.c:423:
+			gnttab_end_foreign_access_ref(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#534: FILE: drivers/net/xen-netfront.c:425:
+			gnttab_release_grant_reference(

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#544: FILE: drivers/net/xen-netfront.c:435:
+		/*
+		 * Set a new event, then check for race with update of tx_cons.

WARNING:MEMORY_BARRIER: memory barrier without comment
#553: FILE: drivers/net/xen-netfront.c:444:
+		mb();

WARNING:REPEATED_WORD: Possible repeated word: 'it'
#574: FILE: drivers/net/xen-netfront.c:465:
+	   larger than a page), split it it into page-sized chunks. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#574: FILE: drivers/net/xen-netfront.c:465:
+	/* While the header overlaps a page boundary (including being
+	   larger than a page), split it it into page-sized chunks. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#574: FILE: drivers/net/xen-netfront.c:465:
+	   larger than a page), split it it into page-sized chunks. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#587: FILE: drivers/net/xen-netfront.c:478:
+		BUG_ON((signed short)ref < 0);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#593: FILE: drivers/net/xen-netfront.c:484:
+		tx->gref = np->grant_tx_ref[id] = ref;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#610: FILE: drivers/net/xen-netfront.c:501:
+		BUG_ON((signed short)ref < 0);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#616: FILE: drivers/net/xen-netfront.c:507:
+		tx->gref = np->grant_tx_ref[id] = ref;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#642: FILE: drivers/net/xen-netfront.c:533:
+		printk(KERN_ALERT "xennet: skb rides the rocket: %d frags\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#666: FILE: drivers/net/xen-netfront.c:557:
+	BUG_ON((signed short)ref < 0);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#668: FILE: drivers/net/xen-netfront.c:559:
+	gnttab_grant_foreign_access_ref(

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#670: FILE: drivers/net/xen-netfront.c:561:
+	tx->gref = np->grant_tx_ref[id] = ref;

ERROR:CODE_INDENT: code indent should use tabs where possible
#675: FILE: drivers/net/xen-netfront.c:566:
+ ^Itx->flags = 0;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#675: FILE: drivers/net/xen-netfront.c:566:
+ ^Itx->flags = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#675: FILE: drivers/net/xen-netfront.c:566:
+ ^Itx->flags = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#676: FILE: drivers/net/xen-netfront.c:567:
+ ^Iif (skb->ip_summed == CHECKSUM_PARTIAL) /* local packet? */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#676: FILE: drivers/net/xen-netfront.c:567:
+ ^Iif (skb->ip_summed == CHECKSUM_PARTIAL) /* local packet? */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#676: FILE: drivers/net/xen-netfront.c:567:
+ ^Iif (skb->ip_summed == CHECKSUM_PARTIAL) /* local packet? */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#677: FILE: drivers/net/xen-netfront.c:568:
+ ^I^Itx->flags |= NETTXF_csum_blank | NETTXF_data_validated;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#677: FILE: drivers/net/xen-netfront.c:568:
+ ^I^Itx->flags |= NETTXF_csum_blank | NETTXF_data_validated;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#677: FILE: drivers/net/xen-netfront.c:568:
+ ^I^Itx->flags |= NETTXF_csum_blank | NETTXF_data_validated;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#730: FILE: drivers/net/xen-netfront.c:621:
+	struct netfront_info *np = netdev_priv(dev);
+	netif_stop_queue(np->netdev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#737: FILE: drivers/net/xen-netfront.c:628:
+	struct netfront_info *np = netdev_priv(dev);
+	return &np->stats;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#745: FILE: drivers/net/xen-netfront.c:636:
+	BUG_ON(np->rx_skbs[new]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#781: FILE: drivers/net/xen-netfront.c:672:
+				dev_warn(dev, "Invalid extra type: %d\n",
+					extra->type);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#835: FILE: drivers/net/xen-netfront.c:726:
+		/*
+		 * This definitely indicates a bug, either in this driver or in

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#849: FILE: drivers/net/xen-netfront.c:740:
+			 * headroom, ... */

WARNING:SPLIT_STRING: quoted string split across lines
#854: FILE: drivers/net/xen-netfront.c:745:
+					dev_warn(dev, "Unfulfilled rx req "
+						 "(id=%d, st=%d).\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#884: FILE: drivers/net/xen-netfront.c:775:
+			BUG_ON(!ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#927: FILE: drivers/net/xen-netfront.c:818:
+			printk(KERN_WARNING "GSO size must not be zero.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#934: FILE: drivers/net/xen-netfront.c:825:
+			printk(KERN_WARNING "Bad GSO type %d.\n", gso->u.gso.type);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#987: FILE: drivers/net/xen-netfront.c:878:
+		unsigned offset = NETFRONT_SKB_CB(skb)->offset;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1033: FILE: drivers/net/xen-netfront.c:924:
+	if ((budget = *pbudget) > dev->quota)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1060: FILE: drivers/net/xen-netfront.c:951:
+			struct xen_netif_extra_info *gso;
+			gso = &extras[XEN_NETIF_EXTRA_TYPE_GSO - 1];

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1090: FILE: drivers/net/xen-netfront.c:981:
+		/*
+		 * Truesize approximates the size of true data plus

WARNING:TYPO_SPELLING: 'adjustement' may be misspelled - perhaps 'adjustment'?
#1108: FILE: drivers/net/xen-netfront.c:999:
+		 * without this last adjustement, our achievable
 		                     ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1146: FILE: drivers/net/xen-netfront.c:1037:
+	     ((3*np->rx_target) / 4)) &&
 	        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1222: FILE: drivers/net/xen-netfront.c:1113:
+		if ((ref = np->grant_rx_ref[id]) == GRANT_INVALID_REF) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1232: FILE: drivers/net/xen-netfront.c:1123:
+		if (0 == mfn) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:LINE_SPACING: Missing a blank line after declarations
#1282: FILE: drivers/net/xen-netfront.c:1173:
+	struct netfront_info *np = netdev_priv(dev);
+	xennet_release_tx_bufs(np);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1288: FILE: drivers/net/xen-netfront.c:1179:
+static struct net_device * __devinit xennet_create_dev(struct xenbus_device *dev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1296: FILE: drivers/net/xen-netfront.c:1187:
+		printk(KERN_WARNING "%s> alloc_etherdev failed.\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1319: FILE: drivers/net/xen-netfront.c:1210:
+		np->tx_skbs[i].link = i+1;
 		                       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#1332: FILE: drivers/net/xen-netfront.c:1223:
+		printk(KERN_ALERT "#### netfront can't alloc tx grant refs\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#1339: FILE: drivers/net/xen-netfront.c:1230:
+		printk(KERN_ALERT "#### netfront can't alloc rx grant refs\n");

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1376: FILE: drivers/net/xen-netfront.c:1267:
+static int __devinit netfront_probe(struct xenbus_device *dev,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1395: FILE: drivers/net/xen-netfront.c:1286:
+		printk(KERN_WARNING "%s: register_netdev err=%d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1403: FILE: drivers/net/xen-netfront.c:1294:
+		printk(KERN_WARNING "%s: add sysfs failed err=%d\n",

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1434: FILE: drivers/net/xen-netfront.c:1325:
+	info->evtchn = info->netdev->irq = 0;

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#1437: FILE: drivers/net/xen-netfront.c:1328:
+	xennet_end_access(info->tx_ring_ref, info->tx.sring);
 	                                              ^^^^^

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#1438: FILE: drivers/net/xen-netfront.c:1329:
+	xennet_end_access(info->rx_ring_ref, info->rx.sring);
 	                                              ^^^^^

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#1442: FILE: drivers/net/xen-netfront.c:1333:
+	info->tx.sring = NULL;
 	         ^^^^^

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#1443: FILE: drivers/net/xen-netfront.c:1334:
+	info->rx.sring = NULL;
 	         ^^^^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1467: FILE: drivers/net/xen-netfront.c:1358:
+	macstr = s = xenbus_read(XBT_NIL, dev->nodename, "mac", NULL);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1472: FILE: drivers/net/xen-netfront.c:1363:
+		mac[i] = simple_strtoul(s, &e, 16);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1473: FILE: drivers/net/xen-netfront.c:1364:
+		if ((s == e) || (*e != ((i == ETH_ALEN-1) ? '\0' : ':'))) {
 		                                      ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 's == e'
#1473: FILE: drivers/net/xen-netfront.c:1364:
+		if ((s == e) || (*e != ((i == ETH_ALEN-1) ? '\0' : ':'))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1477: FILE: drivers/net/xen-netfront.c:1368:
+		s = e+1;
 		     ^

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#1513: FILE: drivers/net/xen-netfront.c:1404:
+	info->rx.sring = NULL;
 	         ^^^^^

WARNING:TYPO_SPELLING: 'sring' may be misspelled - perhaps 'string'?
#1514: FILE: drivers/net/xen-netfront.c:1405:
+	info->tx.sring = NULL;
 	         ^^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1591: FILE: drivers/net/xen-netfront.c:1482:
+	err = xenbus_printf(xbt, dev->nodename, "tx-ring-ref","%u",
 	                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1597: FILE: drivers/net/xen-netfront.c:1488:
+	err = xenbus_printf(xbt, dev->nodename, "rx-ring-ref","%u",
 	                                                     ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1656: FILE: drivers/net/xen-netfront.c:1547:
+	if (data) {
[...]
+	} else if (dev->mtu > ETH_DATA_LEN)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1664: FILE: drivers/net/xen-netfront.c:1555:
+			return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1681: FILE: drivers/net/xen-netfront.c:1572:
+			return -ENOSYS;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1719: FILE: drivers/net/xen-netfront.c:1610:
+	/* Flip is the default, since it was once the only mode of
+	   operation. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1719: FILE: drivers/net/xen-netfront.c:1610:
+	   operation. */

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1724: FILE: drivers/net/xen-netfront.c:1615:
+	/*
+	 * Copy packets on receive path if:

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1751: FILE: drivers/net/xen-netfront.c:1642:
+		skb = np->rx_skbs[requeue_idx] = xennet_get_rx_skb(np, i);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1752: FILE: drivers/net/xen-netfront.c:1643:
+		ref = np->grant_rx_ref[requeue_idx] = xennet_get_rx_ref(np, i);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1756: FILE: drivers/net/xen-netfront.c:1647:
+			gnttab_grant_foreign_transfer_ref(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1760: FILE: drivers/net/xen-netfront.c:1651:
+			gnttab_grant_foreign_access_ref(

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1775: FILE: drivers/net/xen-netfront.c:1666:
+	/*
+	 * Step 3: All public and private state should now be sane.  Get

CHECK:CAMELCASE: Avoid CamelCase: <XenbusStateInitialising>
#1811: FILE: drivers/net/xen-netfront.c:1702:
+		if (dev->state != XenbusStateInitialising)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <XenbusStateConnected>
#1815: FILE: drivers/net/xen-netfront.c:1706:
+		xenbus_switch_state(dev, XenbusStateConnected);

WARNING:CONST_STRUCT: struct ethtool_ops should normally be const
#1824: FILE: drivers/net/xen-netfront.c:1715:
+static struct ethtool_ops xennet_ethtool_ops =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1825: FILE: drivers/net/xen-netfront.c:1716:
+static struct ethtool_ops xennet_ethtool_ops =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1857: FILE: drivers/net/xen-netfront.c:1748:
+	target = simple_strtoul(buf, &endp, 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1900: FILE: drivers/net/xen-netfront.c:1791:
+	target = simple_strtoul(buf, &endp, 0);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1932: FILE: drivers/net/xen-netfront.c:1823:
+	__ATTR(rxbuf_min, S_IRUGO|S_IWUSR, show_rxbuf_min, store_rxbuf_min),
 	                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1932: FILE: drivers/net/xen-netfront.c:1823:
+	__ATTR(rxbuf_min, S_IRUGO|S_IWUSR, show_rxbuf_min, store_rxbuf_min),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1933: FILE: drivers/net/xen-netfront.c:1824:
+	__ATTR(rxbuf_max, S_IRUGO|S_IWUSR, show_rxbuf_max, store_rxbuf_max),
 	                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1933: FILE: drivers/net/xen-netfront.c:1824:
+	__ATTR(rxbuf_max, S_IRUGO|S_IWUSR, show_rxbuf_max, store_rxbuf_max),

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1934: FILE: drivers/net/xen-netfront.c:1825:
+	__ATTR(rxbuf_cur, S_IRUGO, show_rxbuf_cur, NULL),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1944: FILE: drivers/net/xen-netfront.c:1835:
+		err = device_create_file(&netdev->dev,
+					   &xennet_attrs[i]);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1971: FILE: drivers/net/xen-netfront.c:1862:
+
+

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1972: FILE: drivers/net/xen-netfront.c:1863:
+static int __devexit xennet_remove(struct xenbus_device *dev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2009: FILE: drivers/net/xen-netfront.c:1900:
+	printk(KERN_INFO "Initialising Xen virtual ethernet driver.\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2015: FILE: drivers/net/xen-netfront.c:1906:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000435621.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 11 errors, 89 warnings, 38 checks, 1939 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000435621.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
