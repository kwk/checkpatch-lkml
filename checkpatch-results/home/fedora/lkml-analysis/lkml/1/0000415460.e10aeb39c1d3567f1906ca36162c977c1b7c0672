WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
important for the large block size patches and for allowing to page migration

WARNING:TYPO_SPELLING: 'accomodate' may be misspelled - perhaps 'accommodate'?
#43: 
usually need special handling to accomodate the larger size. It is usually
                                 ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'unecessary' may be misspelled - perhaps 'unnecessary'?
#53: 
pages as a single unit then CompoundPage() there may become unecessary as
                                                            ^^^^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <__SetPageHead>
#133: FILE: include/linux/page-flags.h:227:
+#define __SetPageHead(page)	__set_bit(PG_head, &(page)->flags)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <__ClearPageHead>
#134: FILE: include/linux/page-flags.h:228:
+#define __ClearPageHead(page)	__clear_bit(PG_head, &(page)->flags)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around page->flags
#136: FILE: include/linux/page-flags.h:230:
+#define PageTail(page)		test_bit(PG_tail, &(page->flags))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'page' may be better as '(page)' to avoid precedence issues
#136: FILE: include/linux/page-flags.h:230:
+#define PageTail(page)		test_bit(PG_tail, &(page->flags))

CHECK:CAMELCASE: Avoid CamelCase: <__SetPageTail>
#137: FILE: include/linux/page-flags.h:231:
+#define __SetPageTail(page)	__set_bit(PG_tail, &(page)->flags)

CHECK:CAMELCASE: Avoid CamelCase: <__ClearPageTail>
#138: FILE: include/linux/page-flags.h:232:
+#define __ClearPageTail(page)	__clear_bit(PG_tail, &(page)->flags)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000415460.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 6 checks, 78 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000415460.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
