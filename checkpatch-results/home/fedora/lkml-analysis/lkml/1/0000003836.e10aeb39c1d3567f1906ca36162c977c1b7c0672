WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#49: 
 .../{trace_event_profile.c => trace_event_perf.c}  |   44 ++++++------

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ftrace_event_call *' should also have an identifier name
#68: FILE: include/linux/ftrace_event.h:136:
+	int			(*perf_event_enable)(struct ftrace_event_call *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ftrace_event_call *' should also have an identifier name
#69: FILE: include/linux/ftrace_event.h:137:
+	void			(*perf_event_disable)(struct ftrace_event_call *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#83: FILE: include/linux/ftrace_event.h:194:
+extern int perf_trace_enable(int event_id);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#84: FILE: include/linux/ftrace_event.h:195:
+extern void perf_trace_disable(int event_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#91: FILE: include/linux/ftrace_event.h:201:
+perf_trace_buf_prepare(int size, unsigned short type, int *rctxp,
 			 unsigned long *irq_flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#96: FILE: include/linux/ftrace_event.h:205:
+perf_trace_buf_submit(void *raw_data, int size, int rctx, u64 addr,
 		       u64 count, unsigned long irq_flags, struct pt_regs *regs)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#340: FILE: kernel/trace/trace_event_perf.c:17:
+typedef typeof(char [PERF_MAX_TRACE_SIZE]) perf_trace_t ;

WARNING:SPACING: space prohibited before semicolon
#340: FILE: kernel/trace/trace_event_perf.c:17:
+typedef typeof(char [PERF_MAX_TRACE_SIZE]) perf_trace_t ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#482: FILE: kernel/trace/trace_kprobe.c:1238:
+static __kprobes void kprobe_perf_func(struct kprobe *kp,
 					 struct pt_regs *regs)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#491: FILE: kernel/trace/trace_kprobe.c:1251:
+	if (WARN_ONCE(size > PERF_MAX_TRACE_SIZE,
 		     "profile buffer not large enough"))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#510: FILE: kernel/trace/trace_kprobe.c:1268:
+static __kprobes void kretprobe_perf_func(struct kretprobe_instance *ri,
 					    struct pt_regs *regs)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#519: FILE: kernel/trace/trace_kprobe.c:1281:
+	if (WARN_ONCE(size > PERF_MAX_TRACE_SIZE,
 		     "profile buffer not large enough"))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#533: FILE: kernel/trace/trace_kprobe.c:1295:
+	perf_trace_buf_submit(entry, size, rctx, entry->ret_ip, 1,
 			       irq_flags, regs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#699: FILE: kernel/trace/trace_syscalls.c:529:
+	if (WARN_ONCE(size > PERF_MAX_TRACE_SIZE,
+		"exit event has grown above perf buffer size"))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000003836.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 10 checks, 619 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000003836.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
