CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cb_fn"
#95: FILE: crypto/async_tx/async_memcpy.c:63:
+						    len, cb_fn != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#99: FILE: crypto/async_tx/async_memcpy.c:67:
+		pr_debug("%s: (async) len: %zu\n", __FUNCTION__, len);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cb_fn"
#133: FILE: crypto/async_tx/async_memset.c:60:
+						    cb_fn != NULL);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#137: FILE: crypto/async_tx/async_memset.c:64:
+		pr_debug("%s: (async) len: %zu\n", __FUNCTION__, len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: crypto/async_tx/async_xor.c:35:
+do_async_xor(struct dma_device *device,
 	struct dma_chan *chan, struct page *dest, struct page **src_list,

CHECK:SPACING: No space is necessary after a cast
#160: FILE: crypto/async_tx/async_xor.c:41:
+	dma_addr_t *dma_src = (dma_addr_t *) src_list;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cb_fn"
#184: FILE: crypto/async_tx/async_xor.c:59:
+					 cb_fn != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cb_fn"
#192: FILE: crypto/async_tx/async_xor.c:67:
+							 cb_fn != NULL);

CHECK:SPACING: No space is necessary after a cast
#251: FILE: crypto/async_tx/async_xor.c:266:
+		dma_addr_t *dma_src = (dma_addr_t *) src_list;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cb_fn"
#266: FILE: crypto/async_tx/async_xor.c:277:
+						      cb_fn != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cb_fn"
#274: FILE: crypto/async_tx/async_xor.c:285:
+					cb_fn != NULL);

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#286: FILE: crypto/async_tx/async_xor.c:324:
+	 * This conversion is only possible when dma_addr_t is less than the
+	 * the size of a pointer.  HIGHMEM64G is known to violate this

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000344011.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 9 checks, 678 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000344011.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
