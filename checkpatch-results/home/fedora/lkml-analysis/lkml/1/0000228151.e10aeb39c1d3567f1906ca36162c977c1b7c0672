WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#54: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#59: FILE: fs/nilfs2/cpfile.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#75: FILE: fs/nilfs2/cpfile.c:17:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#76: FILE: fs/nilfs2/cpfile.c:18:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#90: FILE: fs/nilfs2/cpfile.c:32:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#103: FILE: fs/nilfs2/cpfile.c:45:
+	BUG_ON(cno == 0); /* checkpoint number 0 is invalid */

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LINE_SPACING: Missing a blank line after declarations
#114: FILE: fs/nilfs2/cpfile.c:56:
+	__u64 tcno = cno + NILFS_MDT(cpfile)->mi_first_entry_offset - 1;
+	return do_div(tcno, nilfs_cpfile_checkpoints_per_block(cpfile));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#157: FILE: fs/nilfs2/cpfile.c:99:
+	BUG_ON(le32_to_cpu(cp->cp_checkpoints_count) < n);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#252: FILE: fs/nilfs2/cpfile.c:194:
+	BUG_ON(cno < 1 || cno > nilfs_mdt_cno(cpfile) ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cpp"
#288: FILE: fs/nilfs2/cpfile.c:230:
+	if (cpp != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'numer' may be misspelled - perhaps 'number'?
#321: FILE: fs/nilfs2/cpfile.c:263:
+ * @end: end checkpoint numer
                         ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'start == 0'
#349: FILE: fs/nilfs2/cpfile.c:291:
+	if ((start == 0) || (start > end)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'start > end'
#349: FILE: fs/nilfs2/cpfile.c:291:
+	if ((start == 0) || (start > end)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#350: FILE: fs/nilfs2/cpfile.c:292:
+		printk(KERN_CRIT "%s: start = %llu, end = %llu\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#354: FILE: fs/nilfs2/cpfile.c:296:
+		BUG();

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#380: FILE: fs/nilfs2/cpfile.c:322:
+		cp = nilfs_cpfile_block_get_checkpoint(

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#384: FILE: fs/nilfs2/cpfile.c:326:
+			BUG_ON(nilfs_checkpoint_snapshot(cp));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#394: FILE: fs/nilfs2/cpfile.c:336:
+			if (!nilfs_cpfile_is_in_first(cpfile, cno) &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#395: FILE: fs/nilfs2/cpfile.c:337:
+			    (count = nilfs_cpfile_block_sub_valid_checkpoints(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#400: FILE: fs/nilfs2/cpfile.c:342:
+				ret = nilfs_cpfile_delete_checkpoint_block(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#404: FILE: fs/nilfs2/cpfile.c:346:
+				printk(KERN_ERR "%s: cannot delete block\n",

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#469: FILE: fs/nilfs2/cpfile.c:411:
+				nilfs_cpfile_checkpoint_to_cpinfo(

CHECK:BRACES: braces {} should be used on all arms of this statement
#496: FILE: fs/nilfs2/cpfile.c:438:
+	if (cno == 0) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#509: FILE: fs/nilfs2/cpfile.c:451:
+	} else

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#517: FILE: fs/nilfs2/cpfile.c:459:
+		cp = nilfs_cpfile_block_get_checkpoint(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#673: FILE: fs/nilfs2/cpfile.c:615:
+		cp = nilfs_cpfile_block_get_checkpoint(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#691: FILE: fs/nilfs2/cpfile.c:633:
+	list = nilfs_cpfile_block_get_snapshot_list(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#704: FILE: fs/nilfs2/cpfile.c:646:
+	list = nilfs_cpfile_block_get_snapshot_list(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#792: FILE: fs/nilfs2/cpfile.c:734:
+	list = nilfs_cpfile_block_get_snapshot_list(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#798: FILE: fs/nilfs2/cpfile.c:740:
+	list = nilfs_cpfile_block_get_snapshot_list(

CHECK:BRACES: braces {} should be used on all arms of this statement
#911: FILE: fs/nilfs2/cpfile.c:853:
+		if (nilfs_checkpoint_is_mounted(nilfs, cno, 1)) {
[...]
+		} else
[...]

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#913: FILE: fs/nilfs2/cpfile.c:855:
+			/* Current implementation does not have to protect
+			   plain read-only mounts since they are exclusive

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#915: FILE: fs/nilfs2/cpfile.c:857:
+			   cleaner. */

CHECK:BRACES: Unbalanced braces around else statement
#917: FILE: fs/nilfs2/cpfile.c:859:
+		} else

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#973: FILE: fs/nilfs2/cpfile.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#989: FILE: fs/nilfs2/cpfile.h:17:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#990: FILE: fs/nilfs2/cpfile.h:18:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1004: FILE: fs/nilfs2/cpfile.h:32:
+
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1005: FILE: fs/nilfs2/cpfile.h:33:
+int nilfs_cpfile_get_checkpoint(struct inode *, __u64, int,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u64' should also have an identifier name
#1005: FILE: fs/nilfs2/cpfile.h:33:
+int nilfs_cpfile_get_checkpoint(struct inode *, __u64, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1005: FILE: fs/nilfs2/cpfile.h:33:
+int nilfs_cpfile_get_checkpoint(struct inode *, __u64, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_checkpoint **' should also have an identifier name
#1005: FILE: fs/nilfs2/cpfile.h:33:
+int nilfs_cpfile_get_checkpoint(struct inode *, __u64, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct buffer_head **' should also have an identifier name
#1005: FILE: fs/nilfs2/cpfile.h:33:
+int nilfs_cpfile_get_checkpoint(struct inode *, __u64, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1008: FILE: fs/nilfs2/cpfile.h:36:
+void nilfs_cpfile_put_checkpoint(struct inode *, __u64, struct buffer_head *);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u64' should also have an identifier name
#1008: FILE: fs/nilfs2/cpfile.h:36:
+void nilfs_cpfile_put_checkpoint(struct inode *, __u64, struct buffer_head *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct buffer_head *' should also have an identifier name
#1008: FILE: fs/nilfs2/cpfile.h:36:
+void nilfs_cpfile_put_checkpoint(struct inode *, __u64, struct buffer_head *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1009: FILE: fs/nilfs2/cpfile.h:37:
+int nilfs_cpfile_delete_checkpoints(struct inode *, __u64, __u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u64' should also have an identifier name
#1009: FILE: fs/nilfs2/cpfile.h:37:
+int nilfs_cpfile_delete_checkpoints(struct inode *, __u64, __u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u64' should also have an identifier name
#1009: FILE: fs/nilfs2/cpfile.h:37:
+int nilfs_cpfile_delete_checkpoints(struct inode *, __u64, __u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1010: FILE: fs/nilfs2/cpfile.h:38:
+int nilfs_cpfile_delete_checkpoint(struct inode *, __u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u64' should also have an identifier name
#1010: FILE: fs/nilfs2/cpfile.h:38:
+int nilfs_cpfile_delete_checkpoint(struct inode *, __u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1011: FILE: fs/nilfs2/cpfile.h:39:
+int nilfs_cpfile_change_cpmode(struct inode *, __u64, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u64' should also have an identifier name
#1011: FILE: fs/nilfs2/cpfile.h:39:
+int nilfs_cpfile_change_cpmode(struct inode *, __u64, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1011: FILE: fs/nilfs2/cpfile.h:39:
+int nilfs_cpfile_change_cpmode(struct inode *, __u64, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1012: FILE: fs/nilfs2/cpfile.h:40:
+int nilfs_cpfile_is_snapshot(struct inode *, __u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u64' should also have an identifier name
#1012: FILE: fs/nilfs2/cpfile.h:40:
+int nilfs_cpfile_is_snapshot(struct inode *, __u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1013: FILE: fs/nilfs2/cpfile.h:41:
+int nilfs_cpfile_get_stat(struct inode *, struct nilfs_cpstat *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_cpstat *' should also have an identifier name
#1013: FILE: fs/nilfs2/cpfile.h:41:
+int nilfs_cpfile_get_stat(struct inode *, struct nilfs_cpstat *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1014: FILE: fs/nilfs2/cpfile.h:42:
+ssize_t nilfs_cpfile_get_cpinfo(struct inode *, __u64, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u64' should also have an identifier name
#1014: FILE: fs/nilfs2/cpfile.h:42:
+ssize_t nilfs_cpfile_get_cpinfo(struct inode *, __u64, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1014: FILE: fs/nilfs2/cpfile.h:42:
+ssize_t nilfs_cpfile_get_cpinfo(struct inode *, __u64, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_cpinfo *' should also have an identifier name
#1014: FILE: fs/nilfs2/cpfile.h:42:
+ssize_t nilfs_cpfile_get_cpinfo(struct inode *, __u64, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#1014: FILE: fs/nilfs2/cpfile.h:42:
+ssize_t nilfs_cpfile_get_cpinfo(struct inode *, __u64, int,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000228151.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 39 warnings, 19 checks, 953 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000228151.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
