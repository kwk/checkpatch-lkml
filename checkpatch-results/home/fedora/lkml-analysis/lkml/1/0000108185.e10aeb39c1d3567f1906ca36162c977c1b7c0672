WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
appear on /usr/bin/top , thus I don't need to worry about checking interval.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#438: FILE: security/tomoyo/common.c:1840:
+			printk(KERN_ERR "GC thread not available.\n");

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pos' - possible side-effects?
#509: FILE: security/tomoyo/common.h:448:
+#define list_for_each_cookie_rcu(pos, cookie, head)                   \
 	for (({ if (!cookie)                                          \
+				     cookie = head; }),		      \
+	     pos = rcu_dereference((cookie)->next);		      \
 	     prefetch(pos->next), pos != (head) || ((cookie) = NULL); \
+	     (cookie) = pos, pos = rcu_dereference(pos->next))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cookie' - possible side-effects?
#509: FILE: security/tomoyo/common.h:448:
+#define list_for_each_cookie_rcu(pos, cookie, head)                   \
 	for (({ if (!cookie)                                          \
+				     cookie = head; }),		      \
+	     pos = rcu_dereference((cookie)->next);		      \
 	     prefetch(pos->next), pos != (head) || ((cookie) = NULL); \
+	     (cookie) = pos, pos = rcu_dereference(pos->next))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'cookie' may be better as '(cookie)' to avoid precedence issues
#509: FILE: security/tomoyo/common.h:448:
+#define list_for_each_cookie_rcu(pos, cookie, head)                   \
 	for (({ if (!cookie)                                          \
+				     cookie = head; }),		      \
+	     pos = rcu_dereference((cookie)->next);		      \
 	     prefetch(pos->next), pos != (head) || ((cookie) = NULL); \
+	     (cookie) = pos, pos = rcu_dereference(pos->next))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'head' - possible side-effects?
#509: FILE: security/tomoyo/common.h:448:
+#define list_for_each_cookie_rcu(pos, cookie, head)                   \
 	for (({ if (!cookie)                                          \
+				     cookie = head; }),		      \
+	     pos = rcu_dereference((cookie)->next);		      \
 	     prefetch(pos->next), pos != (head) || ((cookie) = NULL); \
+	     (cookie) = pos, pos = rcu_dereference(pos->next))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1093: FILE: security/tomoyo/domain.c:799:
+	BUG_ON(bprm->cred->security);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1637: FILE: security/tomoyo/realpath.c:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1869: FILE: security/tomoyo/realpath.c:576:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#1875: FILE: security/tomoyo/realpath.c:582:
+	struct tomoyo_gc_entry *entry = kmalloc(sizeof(*entry), GFP_ATOMIC);
+	if (!entry)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1894: FILE: security/tomoyo/realpath.c:601:
+	static LIST_HEAD(tomoyo_gc_queue);
+	if (!mutex_trylock(&tomoyo_gc_mutex))

WARNING:LINE_SPACING: Missing a blank line after declarations
#1900: FILE: security/tomoyo/realpath.c:607:
+		struct tomoyo_globally_readable_file_entry *ptr;
+		list_for_each_entry_rcu(ptr, &tomoyo_globally_readable_list,

WARNING:LINE_SPACING: Missing a blank line after declarations
#1913: FILE: security/tomoyo/realpath.c:620:
+		struct tomoyo_pattern_entry *ptr;
+		list_for_each_entry_rcu(ptr, &tomoyo_pattern_list, list) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1925: FILE: security/tomoyo/realpath.c:632:
+		struct tomoyo_no_rewrite_entry *ptr;
+		list_for_each_entry_rcu(ptr, &tomoyo_no_rewrite_list, list) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1937: FILE: security/tomoyo/realpath.c:644:
+		struct tomoyo_domain_initializer_entry *ptr;
+		list_for_each_entry_rcu(ptr, &tomoyo_domain_initializer_list,

WARNING:LINE_SPACING: Missing a blank line after declarations
#1950: FILE: security/tomoyo/realpath.c:657:
+		struct tomoyo_domain_keeper_entry *ptr;
+		list_for_each_entry_rcu(ptr, &tomoyo_domain_keeper_list,

WARNING:LINE_SPACING: Missing a blank line after declarations
#1963: FILE: security/tomoyo/realpath.c:670:
+		struct tomoyo_alias_entry *ptr;
+		list_for_each_entry_rcu(ptr, &tomoyo_alias_list, list) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1975: FILE: security/tomoyo/realpath.c:682:
+		struct tomoyo_policy_manager_entry *ptr;
+		list_for_each_entry_rcu(ptr, &tomoyo_policy_manager_list,

WARNING:LINE_SPACING: Missing a blank line after declarations
#1988: FILE: security/tomoyo/realpath.c:695:
+		struct tomoyo_domain_info *domain;
+		list_for_each_entry_rcu(domain, &tomoyo_domain_list, list) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1990: FILE: security/tomoyo/realpath.c:697:
+			struct tomoyo_acl_info *acl;
+			list_for_each_entry_rcu(acl, &domain->acl_info_list,

WARNING:LINE_SPACING: Missing a blank line after declarations
#2017: FILE: security/tomoyo/realpath.c:724:
+		struct tomoyo_gc_entry *tmp;
+		list_for_each_entry_safe(p, tmp, &tomoyo_gc_queue, list) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#2103: FILE: security/tomoyo/tomoyo.c:34:
+	struct tomoyo_domain_info *domain = cred->security;
+	if (domain)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000108185.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 17 warnings, 5 checks, 1936 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000108185.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
