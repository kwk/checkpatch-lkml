WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
Subject: [PATCH] [LIO-Target]: Add TPG attributes demo_mode_write_protect and prod_mode_write_protect

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#42: 
+#define TA_PROD_MODE_WRITE_PROTECT     0 // Disabled by default in production mode w/ explict ACLs
                                                                                       ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#64: FILE: drivers/lio-core/iscsi_target_core.h:114:
+#define TA_PROD_MODE_WRITE_PROTECT	0 // Disabled by default in production mode w/ explict ACLs
                                   	                                               ^^^^^^^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#109: FILE: drivers/lio-core/iscsi_target_tpg.c:1606:
+extern int iscsi_ta_demo_mode_write_protect (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#109: FILE: drivers/lio-core/iscsi_target_tpg.c:1606:
+extern int iscsi_ta_demo_mode_write_protect (

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: drivers/lio-core/iscsi_target_tpg.c:1619:
+	PYXPRINT("iSCSI_TPG[%hu] - Demo Mode Write Protect bit: %s\n",
+		tpg->tpgt, (a->demo_mode_write_protect) ? "ON" : "OFF");

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#124: FILE: drivers/lio-core/iscsi_target_tpg.c:1621:
+	return(0);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#127: FILE: drivers/lio-core/iscsi_target_tpg.c:1624:
+extern int iscsi_ta_prod_mode_write_protect (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#127: FILE: drivers/lio-core/iscsi_target_tpg.c:1624:
+extern int iscsi_ta_prod_mode_write_protect (

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'flag != 0'
#133: FILE: drivers/lio-core/iscsi_target_tpg.c:1630:
+	if ((flag != 0) && (flag != 1)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'flag != 1'
#133: FILE: drivers/lio-core/iscsi_target_tpg.c:1630:
+	if ((flag != 0) && (flag != 1)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: drivers/lio-core/iscsi_target_tpg.c:1637:
+	PYXPRINT("iSCSI_TPG[%hu] - Production Mode Write Protect bit: %s\n",
+		tpg->tpgt, (a->prod_mode_write_protect) ? "ON" : "OFF");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#153: FILE: drivers/lio-core/iscsi_target_tpg.h:65:
+extern int iscsi_ta_demo_mode_write_protect (iscsi_portal_group_t *, u32);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#153: FILE: drivers/lio-core/iscsi_target_tpg.h:65:
+extern int iscsi_ta_demo_mode_write_protect (iscsi_portal_group_t *, u32);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'iscsi_portal_group_t *' should also have an identifier name
#153: FILE: drivers/lio-core/iscsi_target_tpg.h:65:
+extern int iscsi_ta_demo_mode_write_protect (iscsi_portal_group_t *, u32);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#153: FILE: drivers/lio-core/iscsi_target_tpg.h:65:
+extern int iscsi_ta_demo_mode_write_protect (iscsi_portal_group_t *, u32);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#154: FILE: drivers/lio-core/iscsi_target_tpg.h:66:
+extern int iscsi_ta_prod_mode_write_protect (iscsi_portal_group_t *, u32);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#154: FILE: drivers/lio-core/iscsi_target_tpg.h:66:
+extern int iscsi_ta_prod_mode_write_protect (iscsi_portal_group_t *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'iscsi_portal_group_t *' should also have an identifier name
#154: FILE: drivers/lio-core/iscsi_target_tpg.h:66:
+extern int iscsi_ta_prod_mode_write_protect (iscsi_portal_group_t *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#154: FILE: drivers/lio-core/iscsi_target_tpg.h:66:
+extern int iscsi_ta_prod_mode_write_protect (iscsi_portal_group_t *, u32);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000196327.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 11 warnings, 8 checks, 85 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000196327.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
