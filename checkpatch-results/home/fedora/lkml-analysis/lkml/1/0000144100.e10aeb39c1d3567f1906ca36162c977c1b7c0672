WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
This patch adds SPC-3 task management infrastructure and functionality for LUN_RESET.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#43: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#48: FILE: drivers/target/target_core_tmr.c:1:
+/*******************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#69: FILE: drivers/target/target_core_tmr.c:22:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#70: FILE: drivers/target/target_core_tmr.c:23:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#99: FILE: drivers/target/target_core_tmr.c:52:
+#define DEBUG_LR(x...) printk(KERN_INFO x)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#104: FILE: drivers/target/target_core_tmr.c:57:
+se_tmr_req_t *core_tmr_alloc_req(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#113: FILE: drivers/target/target_core_tmr.c:66:
+		printk(KERN_ERR "Unable to allocate se_tmr_req_t\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#128: FILE: drivers/target/target_core_tmr.c:81:
+void __core_tmr_release_req(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#135: FILE: drivers/target/target_core_tmr.c:88:
+void core_tmr_release_req(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#145: FILE: drivers/target/target_core_tmr.c:98:
+int core_tmr_lun_reset(

WARNING:SPLIT_STRING: quoted string split across lines
#181: FILE: drivers/target/target_core_tmr.c:134:
+			DEBUG_LR("LUN_RESET: TMR caller fabric: %s"
+				" initiator port %s\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#187: FILE: drivers/target/target_core_tmr.c:140:
+	DEBUG_LR("LUN_RESET: %s starting for [%s], tas: %d\n",
+		(preempt_and_abort_list) ? "Preempt" : "TMR",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmr_p == tmr'
#198: FILE: drivers/target/target_core_tmr.c:151:
+		if (tmr && (tmr_p == tmr))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#203: FILE: drivers/target/target_core_tmr.c:156:
+			printk(KERN_ERR "Unable to locate se_cmd_t for TMR\n");

WARNING:TYPO_SPELLING: 'regisration' may be misspelled - perhaps 'registration'?
#209: FILE: drivers/target/target_core_tmr.c:162:
+		 * skip non regisration key matching TMRs.
 		            ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'preempt_and_abort_list != NULL'
#211: FILE: drivers/target/target_core_tmr.c:164:
+		if ((preempt_and_abort_list != NULL) &&
+		    (core_scsi3_check_cdb_abort_and_preempt(
+					preempt_and_abort_list, cmd) != 0))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "preempt_and_abort_list"
#211: FILE: drivers/target/target_core_tmr.c:164:
+		if ((preempt_and_abort_list != NULL) &&

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#212: FILE: drivers/target/target_core_tmr.c:165:
+		    (core_scsi3_check_cdb_abort_and_preempt(

WARNING:SPLIT_STRING: quoted string split across lines
#218: FILE: drivers/target/target_core_tmr.c:171:
+		DEBUG_LR("LUN_RESET: %s releasing TMR %p Function: 0x%02x,"
+			" Response: 0x%02x, t_state: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#249: FILE: drivers/target/target_core_tmr.c:202:
+	list_for_each_entry_safe(task, task_tmp, &dev->state_task_list,
+				t_state_list) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#251: FILE: drivers/target/target_core_tmr.c:204:
+			printk(KERN_ERR "TASK_CMD(task) is NULL!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#257: FILE: drivers/target/target_core_tmr.c:210:
+			printk(KERN_ERR "T_TASK(cmd) is NULL for task: %p cmd:"

WARNING:SPLIT_STRING: quoted string split across lines
#258: FILE: drivers/target/target_core_tmr.c:211:
+			printk(KERN_ERR "T_TASK(cmd) is NULL for task: %p cmd:"
+				" %p ITT: 0x%08x\n", task, cmd,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'preempt_and_abort_list != NULL'
#266: FILE: drivers/target/target_core_tmr.c:219:
+		if ((preempt_and_abort_list != NULL) &&
+		    (core_scsi3_check_cdb_abort_and_preempt(
+					preempt_and_abort_list, cmd) != 0))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "preempt_and_abort_list"
#266: FILE: drivers/target/target_core_tmr.c:219:
+		if ((preempt_and_abort_list != NULL) &&

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#267: FILE: drivers/target/target_core_tmr.c:220:
+		    (core_scsi3_check_cdb_abort_and_preempt(

WARNING:SPLIT_STRING: quoted string split across lines
#282: FILE: drivers/target/target_core_tmr.c:235:
+		DEBUG_LR("LUN_RESET: %s cmd: %p task: %p ITT/CmdSN: 0x%08x/"
+			"0x%08x, i_state: %d, t_state/def_t_state: %d/%d cdb:"

WARNING:SPLIT_STRING: quoted string split across lines
#283: FILE: drivers/target/target_core_tmr.c:236:
+			"0x%08x, i_state: %d, t_state/def_t_state: %d/%d cdb:"
+			" 0x%02x\n", (preempt_and_abort_list) ? "Preempt" : "",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#287: FILE: drivers/target/target_core_tmr.c:240:
+		DEBUG_LR("LUN_RESET: ITT[0x%08x] - pr_res_key: 0x%016Lx"

WARNING:SPLIT_STRING: quoted string split across lines
#288: FILE: drivers/target/target_core_tmr.c:241:
+		DEBUG_LR("LUN_RESET: ITT[0x%08x] - pr_res_key: 0x%016Lx"
+			" t_task_cdbs: %d t_task_cdbs_left: %d"

WARNING:SPLIT_STRING: quoted string split across lines
#289: FILE: drivers/target/target_core_tmr.c:242:
+			" t_task_cdbs: %d t_task_cdbs_left: %d"
+			" t_task_cdbs_sent: %d -- t_transport_active: %d"

WARNING:SPLIT_STRING: quoted string split across lines
#290: FILE: drivers/target/target_core_tmr.c:243:
+			" t_task_cdbs_sent: %d -- t_transport_active: %d"
+			" t_transport_stop: %d t_transport_sent: %d\n",

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#301: FILE: drivers/target/target_core_tmr.c:254:
+			spin_unlock_irqrestore(

WARNING:SPLIT_STRING: quoted string split across lines
#305: FILE: drivers/target/target_core_tmr.c:258:
+			DEBUG_LR("LUN_RESET: Waiting for task: %p to shutdown"
+				" for dev: %p\n", task, dev);

WARNING:SPLIT_STRING: quoted string split across lines
#308: FILE: drivers/target/target_core_tmr.c:261:
+			DEBUG_LR("LUN_RESET Completed task: %p shutdown for"
+				" dev: %p\n", task, dev);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#318: FILE: drivers/target/target_core_tmr.c:271:
+			spin_unlock_irqrestore(

WARNING:SPLIT_STRING: quoted string split across lines
#321: FILE: drivers/target/target_core_tmr.c:274:
+			DEBUG_LR("LUN_RESET: Skipping task: %p, dev: %p for"
+				" t_task_cdbs_ex_left: %d\n", task, dev,

WARNING:SPLIT_STRING: quoted string split across lines
#331: FILE: drivers/target/target_core_tmr.c:284:
+			DEBUG_LR("LUN_RESET: got t_transport_active = 1 for"
+				" task: %p, t_fe_count: %d dev: %p\n", task,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#334: FILE: drivers/target/target_core_tmr.c:287:
+			spin_unlock_irqrestore(&T_TASK(cmd)->t_state_lock,
+						flags);

CHECK:BRACES: braces {} should be used on all arms of this statement
#335: FILE: drivers/target/target_core_tmr.c:288:
+			if (fe_count) {
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmr_nacl != NULL'
#339: FILE: drivers/target/target_core_tmr.c:292:
+				if (((tmr_nacl != NULL) &&
+				     (tmr_nacl == cmd->se_sess->se_node_acl)) ||
+				     tas)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmr_nacl == cmd->se_sess->se_node_acl'
#339: FILE: drivers/target/target_core_tmr.c:292:
+				if (((tmr_nacl != NULL) &&
+				     (tmr_nacl == cmd->se_sess->se_node_acl)) ||
+				     tas)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tmr_nacl"
#339: FILE: drivers/target/target_core_tmr.c:292:
+				if (((tmr_nacl != NULL) &&

CHECK:BRACES: Unbalanced braces around else statement
#344: FILE: drivers/target/target_core_tmr.c:297:
+			} else

WARNING:SPLIT_STRING: quoted string split across lines
#351: FILE: drivers/target/target_core_tmr.c:304:
+		DEBUG_LR("LUN_RESET: Got t_transport_active = 0 for task: %p,"
+			" t_fe_count: %d dev: %p\n", task, fe_count, dev);

CHECK:BRACES: braces {} should be used on all arms of this statement
#354: FILE: drivers/target/target_core_tmr.c:307:
+		if (fe_count) {
[...]
+		} else
[...]

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmr_nacl != NULL'
#358: FILE: drivers/target/target_core_tmr.c:311:
+			if (((tmr_nacl != NULL) &&
+			    (tmr_nacl == cmd->se_sess->se_node_acl)) || tas)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmr_nacl == cmd->se_sess->se_node_acl'
#358: FILE: drivers/target/target_core_tmr.c:311:
+			if (((tmr_nacl != NULL) &&
+			    (tmr_nacl == cmd->se_sess->se_node_acl)) || tas)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tmr_nacl"
#358: FILE: drivers/target/target_core_tmr.c:311:
+			if (((tmr_nacl != NULL) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#359: FILE: drivers/target/target_core_tmr.c:312:
+			if (((tmr_nacl != NULL) &&
+			    (tmr_nacl == cmd->se_sess->se_node_acl)) || tas)

CHECK:BRACES: Unbalanced braces around else statement
#362: FILE: drivers/target/target_core_tmr.c:315:
+		} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "preempt_and_abort_list"
#383: FILE: drivers/target/target_core_tmr.c:336:
+			if (preempt_and_abort_list != NULL)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'preempt_and_abort_list != NULL'
#395: FILE: drivers/target/target_core_tmr.c:348:
+		if ((preempt_and_abort_list != NULL) &&
+		    (core_scsi3_check_cdb_abort_and_preempt(
+					preempt_and_abort_list, cmd) != 0))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "preempt_and_abort_list"
#395: FILE: drivers/target/target_core_tmr.c:348:
+		if ((preempt_and_abort_list != NULL) &&

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#396: FILE: drivers/target/target_core_tmr.c:349:
+		    (core_scsi3_check_cdb_abort_and_preempt(

WARNING:SPLIT_STRING: quoted string split across lines
#414: FILE: drivers/target/target_core_tmr.c:367:
+		DEBUG_LR("LUN_RESET: %s from Device Queue: cmd: %p t_state:"
+			" %d t_fe_count: %d\n", (preempt_and_abort_list) ?

CHECK:BRACES: braces {} should be used on all arms of this statement
#418: FILE: drivers/target/target_core_tmr.c:371:
+		if (atomic_read(&T_TASK(cmd)->t_fe_count)) {
[...]
+		} else
[...]

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmr_nacl != NULL'
#422: FILE: drivers/target/target_core_tmr.c:375:
+			if (((tmr_nacl != NULL) &&
+			     (tmr_nacl == cmd->se_sess->se_node_acl)) ||
+			      tas)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmr_nacl == cmd->se_sess->se_node_acl'
#422: FILE: drivers/target/target_core_tmr.c:375:
+			if (((tmr_nacl != NULL) &&
+			     (tmr_nacl == cmd->se_sess->se_node_acl)) ||
+			      tas)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tmr_nacl"
#422: FILE: drivers/target/target_core_tmr.c:375:
+			if (((tmr_nacl != NULL) &&

CHECK:BRACES: Unbalanced braces around else statement
#427: FILE: drivers/target/target_core_tmr.c:380:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#439: FILE: drivers/target/target_core_tmr.c:392:
+	DEBUG_LR("LUN_RESET: %s for [%s] Complete\n",
+			(preempt_and_abort_list) ? "Preempt" : "TMR",

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#449: FILE: include/target/target_core_tmr.h:1:
+#ifndef TARGET_CORE_TMR_H

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#486: FILE: include/target/target_core_tmr.h:38:
+extern struct se_tmr_req_s *core_tmr_alloc_req(struct se_cmd_s *, void *, u8);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#486: FILE: include/target/target_core_tmr.h:38:
+extern struct se_tmr_req_s *core_tmr_alloc_req(struct se_cmd_s *, void *, u8);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#486: FILE: include/target/target_core_tmr.h:38:
+extern struct se_tmr_req_s *core_tmr_alloc_req(struct se_cmd_s *, void *, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#486: FILE: include/target/target_core_tmr.h:38:
+extern struct se_tmr_req_s *core_tmr_alloc_req(struct se_cmd_s *, void *, u8);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#487: FILE: include/target/target_core_tmr.h:39:
+extern void core_tmr_release_req(struct se_tmr_req_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_tmr_req_s *' should also have an identifier name
#487: FILE: include/target/target_core_tmr.h:39:
+extern void core_tmr_release_req(struct se_tmr_req_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#488: FILE: include/target/target_core_tmr.h:40:
+extern int core_tmr_lun_reset(struct se_device_s *, struct se_tmr_req_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_device_s *' should also have an identifier name
#488: FILE: include/target/target_core_tmr.h:40:
+extern int core_tmr_lun_reset(struct se_device_s *, struct se_tmr_req_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_tmr_req_s *' should also have an identifier name
#488: FILE: include/target/target_core_tmr.h:40:
+extern int core_tmr_lun_reset(struct se_device_s *, struct se_tmr_req_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct list_head *' should also have an identifier name
#488: FILE: include/target/target_core_tmr.h:40:
+extern int core_tmr_lun_reset(struct se_device_s *, struct se_tmr_req_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#488: FILE: include/target/target_core_tmr.h:40:
+extern int core_tmr_lun_reset(struct se_device_s *, struct se_tmr_req_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#489: FILE: include/target/target_core_tmr.h:41:
+extern int core_tmr_lun_reset(struct se_device_s *, struct se_tmr_req_s *,
+				struct list_head *, struct se_cmd_s *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000144100.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 33 warnings, 41 checks, 438 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000144100.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
