WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#46: 
    Signed-off-by: Satoshi UCHIDA <s-uchida@ap.jp.nec.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:SPACING: No space is necessary after a cast
#70: FILE: block/cfq-cgroup.c:1041:
+	char *p = (char *) page;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#73: FILE: block/cfq-cgroup.c:1044:
+	err = strict_strtoul(p, 10, &new_var);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#82: FILE: block/cfq-cgroup.c:1053:
+#define SHOW_FUNCTION2(__FUNC, __VAR, __CONV)				\
+static ssize_t __FUNC(elevator_t *e, char *page)			\
+{									\
+	struct cfq_data *cfqd = e->elevator_data;			\
+	struct cfq_driver_data *cfqdd = cfqd->cfqdd;			\
+	unsigned int __data = __VAR;					\
+	if (__CONV)							\
+		__data = jiffies_to_msecs(__data);			\
+	return cfq_cgroup_var_show2(__data, (page));			\
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#92: FILE: block/cfq-cgroup.c:1063:
+}
+SHOW_FUNCTION2(cfq_cgroup_slice_cgroup_show, cfqdd->cfq_cgroup_slice, 1);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse '__PTR' - possible side-effects?
#95: FILE: block/cfq-cgroup.c:1066:
+#define STORE_FUNCTION2(__FUNC, __PTR, MIN, MAX, __CONV)		\
+static ssize_t __FUNC(elevator_t *e, const char *page, size_t count)	\
+{									\
+	struct cfq_data *cfqd = e->elevator_data;			\
+	struct cfq_driver_data *cfqdd = cfqd->cfqdd;			\
+	unsigned int __data;						\
+	int ret = cfq_cgroup_var_store2(&__data, (page), count);	\
+	if (__data < (MIN))						\
+		__data = (MIN);						\
+	else if (__data > (MAX))					\
+		__data = (MAX);						\
+	if (__CONV)							\
+		*(__PTR) = msecs_to_jiffies(__data);			\
+	else								\
+		*(__PTR) = __data;					\
+	return ret;							\
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'MIN' - possible side-effects?
#95: FILE: block/cfq-cgroup.c:1066:
+#define STORE_FUNCTION2(__FUNC, __PTR, MIN, MAX, __CONV)		\
+static ssize_t __FUNC(elevator_t *e, const char *page, size_t count)	\
+{									\
+	struct cfq_data *cfqd = e->elevator_data;			\
+	struct cfq_driver_data *cfqdd = cfqd->cfqdd;			\
+	unsigned int __data;						\
+	int ret = cfq_cgroup_var_store2(&__data, (page), count);	\
+	if (__data < (MIN))						\
+		__data = (MIN);						\
+	else if (__data > (MAX))					\
+		__data = (MAX);						\
+	if (__CONV)							\
+		*(__PTR) = msecs_to_jiffies(__data);			\
+	else								\
+		*(__PTR) = __data;					\
+	return ret;							\
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'MAX' - possible side-effects?
#95: FILE: block/cfq-cgroup.c:1066:
+#define STORE_FUNCTION2(__FUNC, __PTR, MIN, MAX, __CONV)		\
+static ssize_t __FUNC(elevator_t *e, const char *page, size_t count)	\
+{									\
+	struct cfq_data *cfqd = e->elevator_data;			\
+	struct cfq_driver_data *cfqdd = cfqd->cfqdd;			\
+	unsigned int __data;						\
+	int ret = cfq_cgroup_var_store2(&__data, (page), count);	\
+	if (__data < (MIN))						\
+		__data = (MIN);						\
+	else if (__data > (MAX))					\
+		__data = (MAX);						\
+	if (__CONV)							\
+		*(__PTR) = msecs_to_jiffies(__data);			\
+	else								\
+		*(__PTR) = __data;					\
+	return ret;							\
+}

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#95: FILE: block/cfq-cgroup.c:1066:
+#define STORE_FUNCTION2(__FUNC, __PTR, MIN, MAX, __CONV)		\
+static ssize_t __FUNC(elevator_t *e, const char *page, size_t count)	\
+{									\
+	struct cfq_data *cfqd = e->elevator_data;			\
+	struct cfq_driver_data *cfqdd = cfqd->cfqdd;			\
+	unsigned int __data;						\
+	int ret = cfq_cgroup_var_store2(&__data, (page), count);	\
+	if (__data < (MIN))						\
+		__data = (MIN);						\
+	else if (__data > (MAX))					\
+		__data = (MAX);						\
+	if (__CONV)							\
+		*(__PTR) = msecs_to_jiffies(__data);			\
+	else								\
+		*(__PTR) = __data;					\
+	return ret;							\
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#112: FILE: block/cfq-cgroup.c:1083:
+}
+STORE_FUNCTION2(cfq_cgroup_slice_cgroup_store, &cfqdd->cfq_cgroup_slice, 1,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000205166.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 6 checks, 69 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000205166.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
