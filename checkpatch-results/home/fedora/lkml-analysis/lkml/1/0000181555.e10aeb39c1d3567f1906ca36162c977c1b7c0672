WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
> >   git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-2.6-trace.git

WARNING:TYPO_SPELLING: 'explictly' may be misspelled - perhaps 'explicitly'?
#74: 
      ftrace, ia64: explictly ignore a file in recordmcount.pl
                    ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'resgister' may be misspelled - perhaps 'register'?
#81: 
      ftrace, trivial: fix typo "resgister" -> "register"
                                 ^^^^^^^^^

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#120: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#125: FILE: arch/ia64/include/asm/ftrace.h:1:
+#ifndef _ASM_IA64_FTRACE_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#132: FILE: arch/ia64/include/asm/ftrace.h:8:
+extern void _mcount(unsigned long pfs, unsigned long r1, unsigned long b0, unsigned long r0);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/kprobes.h> instead of <asm/kprobes.h>
#135: FILE: arch/ia64/include/asm/ftrace.h:11:
+#include <asm/kprobes.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#300: FILE: arch/ia64/kernel/ftrace.c:1:
+/*

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#316: FILE: arch/ia64/kernel/ftrace.c:17:
+#include <asm/cacheflush.h>

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#320: FILE: arch/ia64/kernel/ftrace.c:21:
+static unsigned char __attribute__((aligned(8)))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#332: FILE: arch/ia64/kernel/ftrace.c:33:
+	u64 dummy4:64-41+13;
 	             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#332: FILE: arch/ia64/kernel/ftrace.c:33:
+	u64 dummy4:64-41+13;
 	                ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#357: FILE: arch/ia64/kernel/ftrace.c:58:
+ * */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#358: FILE: arch/ia64/kernel/ftrace.c:59:
+static unsigned char __attribute__((aligned(8)))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#430: FILE: arch/ia64/kernel/ftrace.c:131:
+	unsigned char __attribute__((aligned(8))) replaced[MCOUNT_INSN_SIZE];

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#447: FILE: arch/ia64/kernel/ftrace.c:148:
+		return 0;
+	} else {

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#478: FILE: arch/ia64/kernel/ftrace.c:179:
+	old=  ftrace_nop_replace();
 	   ^

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/ftrace.h> instead of <asm/ftrace.h>
#515: FILE: arch/ia64/kernel/ia64_ksyms.c:116:
+#include <asm/ftrace.h>

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#541: FILE: include/trace/workqueue.h:1:
+#ifndef __TRACE_WORKQUEUE_H

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#549: FILE: include/trace/workqueue.h:9:
+DECLARE_TRACE(workqueue_insertion,
+	   TPPROTO(struct task_struct *wq_thread, struct work_struct *work),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#553: FILE: include/trace/workqueue.h:13:
+DECLARE_TRACE(workqueue_execution,
+	   TPPROTO(struct task_struct *wq_thread, struct work_struct *work),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#558: FILE: include/trace/workqueue.h:18:
+DECLARE_TRACE(workqueue_creation,
+	   TPPROTO(struct task_struct *wq_thread, int cpu),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#562: FILE: include/trace/workqueue.h:22:
+DECLARE_TRACE(workqueue_destruction,
+	   TPPROTO(struct task_struct *wq_thread),

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#578: FILE: kernel/trace/Kconfig:291:
+	  The workqueue tracer provides some statistical informations
 	                                                 ^^^^^^^^^^^^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#727: FILE: kernel/trace/trace_branch.c:195:
+static struct tracer branch_trace __read_mostly =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#742: FILE: kernel/trace/trace_branch.c:210:
+		printk(KERN_WARNING "Warning: could not register "

WARNING:SPLIT_STRING: quoted string split across lines
#743: FILE: kernel/trace/trace_branch.c:211:
+		printk(KERN_WARNING "Warning: could not register "
+				    "branch events\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#772: FILE: kernel/trace/trace_branch.c:347:
+		printk(KERN_WARNING "Warning: could not register "

WARNING:SPLIT_STRING: quoted string split across lines
#773: FILE: kernel/trace/trace_branch.c:348:
+		printk(KERN_WARNING "Warning: could not register "
+				    "annotated branches stats\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#843: FILE: kernel/trace/trace_branch.c:403:
+		printk(KERN_WARNING "Warning: could not register "

WARNING:SPLIT_STRING: quoted string split across lines
#844: FILE: kernel/trace/trace_branch.c:404:
+		printk(KERN_WARNING "Warning: could not register "
+				    "all branches stats\n");

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#873: FILE: kernel/trace/trace_stat.c:20:
+^Istruct list_head ^Ilist;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#874: FILE: kernel/trace/trace_stat.c:21:
+^Ivoid ^I^I^I*stat;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#883: FILE: kernel/trace/trace_stat.c:27:
+^Istruct tracer_stat ^I*ts;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#884: FILE: kernel/trace/trace_stat.c:28:
+^Istruct list_head ^Istat_list;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#885: FILE: kernel/trace/trace_stat.c:29:
+^Istruct mutex ^I^Istat_mutex;$

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#885: FILE: kernel/trace/trace_stat.c:29:
+	struct mutex 		stat_mutex;

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*session)...) over kmalloc(sizeof(struct tracer_stat_session)...)
#964: FILE: kernel/trace/trace_stat.c:82:
+	session = kmalloc(sizeof(struct tracer_stat_session), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1018: FILE: kernel/trace/trace_stat.c:121:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1111: FILE: kernel/trace/trace_stat.h:1:
+#ifndef __TRACE_STAT_H

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1138: FILE: kernel/trace/trace_stat.h:28:
+extern int register_stat_tracer(struct tracer_stat *trace);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1139: FILE: kernel/trace/trace_stat.h:29:
+extern void unregister_stat_tracer(struct tracer_stat *trace);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1148: FILE: kernel/trace/trace_workqueue.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1155: FILE: kernel/trace/trace_workqueue.c:8:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1161: FILE: kernel/trace/trace_workqueue.c:14:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1168: FILE: kernel/trace/trace_workqueue.c:21:
+^Ipid_t ^I^I^I    pid;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1170: FILE: kernel/trace/trace_workqueue.c:23:
+^Iatomic_t ^I            inserted;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1175: FILE: kernel/trace/trace_workqueue.c:28:
+^Iunsigned int ^I ^I    executed;$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1181: FILE: kernel/trace/trace_workqueue.c:34:
+	spinlock_t		lock;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1200: FILE: kernel/trace/trace_workqueue.c:53:
+	list_for_each_entry_safe(node, next, &all_workqueue_stat[cpu].list,
+							list) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1222: FILE: kernel/trace/trace_workqueue.c:75:
+	list_for_each_entry_safe(node, next, &all_workqueue_stat[cpu].list,
+							list) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*cws)...) over kzalloc(sizeof(struct cpu_workqueue_stats)...)
#1242: FILE: kernel/trace/trace_workqueue.c:95:
+	cws = kzalloc(sizeof(struct cpu_workqueue_stats), GFP_ATOMIC);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1244: FILE: kernel/trace/trace_workqueue.c:97:
+	if (!cws) {
+		pr_warning("trace_workqueue: not enough memory\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1271: FILE: kernel/trace/trace_workqueue.c:124:
+	list_for_each_entry_safe(node, next, &all_workqueue_stat[cpu].list,
+							list) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1283: FILE: kernel/trace/trace_workqueue.c:136:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1290: FILE: kernel/trace/trace_workqueue.c:143:
+
+

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#1351: FILE: kernel/trace/trace_workqueue.c:204:
+		seq_printf(s, "\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#1359: FILE: kernel/trace/trace_workqueue.c:212:
+	seq_printf(s, "# CPU  INSERTED  EXECUTED   NAME\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#1360: FILE: kernel/trace/trace_workqueue.c:213:
+	seq_printf(s, "# |      |         |          |\n\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1372: FILE: kernel/trace/trace_workqueue.c:225:
+
+

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*all_workqueue_stat)...) over kmalloc(sizeof(struct workqueue_global_stats)...)
#1408: FILE: kernel/trace/trace_workqueue.c:261:
+	all_workqueue_stat = kmalloc(sizeof(struct workqueue_global_stats)

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#1408: FILE: kernel/trace/trace_workqueue.c:261:
+	all_workqueue_stat = kmalloc(sizeof(struct workqueue_global_stats)
+				     * num_possible_cpus(), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000181555.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 34 warnings, 26 checks, 1356 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000181555.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
