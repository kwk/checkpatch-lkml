CHECK:SPACING: No space is necessary after a cast
#57: FILE: include/asm-blackfin/system.h:122:
+#define set_mb(var, value) do { (void) xchg(&var, value); } while (0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'var' may be better as '(var)' to avoid precedence issues
#57: FILE: include/asm-blackfin/system.h:122:
+#define set_mb(var, value) do { (void) xchg(&var, value); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#57: FILE: include/asm-blackfin/system.h:122:
+#define set_mb(var, value) do { (void) xchg(&var, value); } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'var' may be better as '(var)' to avoid precedence issues
#71: FILE: include/asm-h8300/system.h:85:
+#define set_mb(var, value) do { xchg(&var, value); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#71: FILE: include/asm-h8300/system.h:85:
+#define set_mb(var, value) do { xchg(&var, value); } while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'var' may be better as '(var)' to avoid precedence issues
#85: FILE: include/asm-m68knommu/system.h:107:
+#define set_mb(var, value) do { xchg(&var, value); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#85: FILE: include/asm-m68knommu/system.h:107:
+#define set_mb(var, value) do { xchg(&var, value); } while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'var' may be better as '(var)' to avoid precedence issues
#99: FILE: include/asm-sh64/system.h:65:
+#define set_mb(var, value) do { (void)xchg(&var, value); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#99: FILE: include/asm-sh64/system.h:65:
+#define set_mb(var, value) do { (void)xchg(&var, value); } while (0)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#113: FILE: include/asm-v850/system.h:69:
+#define set_mb(var, value)	do { xchg (&var, value); } while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'var' may be better as '(var)' to avoid precedence issues
#113: FILE: include/asm-v850/system.h:69:
+#define set_mb(var, value)	do { xchg (&var, value); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#113: FILE: include/asm-v850/system.h:69:
+#define set_mb(var, value)	do { xchg (&var, value); } while (0)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000389491.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 6 checks, 46 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000389491.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
