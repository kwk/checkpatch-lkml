WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
some system could use reosurce out of IOH resources when only one ioh is there.

WARNING:TYPO_SPELLING: 'reosurce' may be misspelled - perhaps 'resource'?
#44: 
some system could use reosurce out of IOH resources when only one ioh is there.
                      ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "early_qrk[i].f"
#110: FILE: arch/x86/pci/intel_bus.c:126:
+	for (i = 0; early_qrk[i].f != NULL; i++) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#111: FILE: arch/x86/pci/intel_bus.c:127:
+		if (((early_qrk[i].vendor == PCI_ANY_ID) ||
[...]
+				early_qrk[i].f(num, slot, func);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'early_qrk[i].vendor == PCI_ANY_ID'
#111: FILE: arch/x86/pci/intel_bus.c:127:
+		if (((early_qrk[i].vendor == PCI_ANY_ID) ||
+			(early_qrk[i].vendor == vendor)) &&
+			((early_qrk[i].device == PCI_ANY_ID) ||
+			(early_qrk[i].device == device)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'early_qrk[i].vendor == vendor'
#111: FILE: arch/x86/pci/intel_bus.c:127:
+		if (((early_qrk[i].vendor == PCI_ANY_ID) ||
+			(early_qrk[i].vendor == vendor)) &&
+			((early_qrk[i].device == PCI_ANY_ID) ||
+			(early_qrk[i].device == device)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'early_qrk[i].device == PCI_ANY_ID'
#111: FILE: arch/x86/pci/intel_bus.c:127:
+		if (((early_qrk[i].vendor == PCI_ANY_ID) ||
+			(early_qrk[i].vendor == vendor)) &&
+			((early_qrk[i].device == PCI_ANY_ID) ||
+			(early_qrk[i].device == device)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'early_qrk[i].device == device'
#111: FILE: arch/x86/pci/intel_bus.c:127:
+		if (((early_qrk[i].vendor == PCI_ANY_ID) ||
+			(early_qrk[i].vendor == vendor)) &&
+			((early_qrk[i].device == PCI_ANY_ID) ||
+			(early_qrk[i].device == device)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#112: FILE: arch/x86/pci/intel_bus.c:128:
+		if (((early_qrk[i].vendor == PCI_ANY_ID) ||
+			(early_qrk[i].vendor == vendor)) &&

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#121: FILE: arch/x86/pci/intel_bus.c:137:
+	unsigned bus, slot, func;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#159: FILE: arch/x86/pci/intel_bus.c:175:
+		printk(KERN_DEBUG "pci: found %d IOH\n", nr_ioh);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000019637.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 6 checks, 104 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000019637.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
