WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
Subject: [PATCH 1/2] [Target_Core_Mod/PERSISTENT_RESERVATION]: Add Service Action RESERVE/RELEASE w/ all_tg_pt=[0,1]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: drivers/lio-core/target_core_pr.c:338:
+^Iif (!(pr_reg->pr_reg_all_tg_pt)) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: drivers/lio-core/target_core_pr.c:339:
+^I^Ipr_reg->pr_reg_lun_single_tg_pt = deve->se_lun; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#122: FILE: drivers/lio-core/target_core_pr.c:354:
+^Iprintk("SPC-3 PR [%s] for %s TCM Subsystem %s Object Target Port(s)\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#122: FILE: drivers/lio-core/target_core_pr.c:354:
+	printk("SPC-3 PR [%s] for %s TCM Subsystem %s Object Target Port(s)\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: drivers/lio-core/target_core_pr.c:355:
+	printk("SPC-3 PR [%s] for %s TCM Subsystem %s Object Target Port(s)\n", 
 		tfo->get_fabric_name(), (pr_reg->pr_reg_all_tg_pt) ?

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#131: FILE: drivers/lio-core/target_core_pr.c:396:
+	printk("SPC-3 PR [%s] for %s TCM Subsystem %s Object Target Port(s)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#132: FILE: drivers/lio-core/target_core_pr.c:397:
+	printk("SPC-3 PR [%s] for %s TCM Subsystem %s Object Target Port(s)\n",
 		tfo->get_fabric_name(), (pr_reg->pr_reg_all_tg_pt) ?

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#148: FILE: drivers/lio-core/target_core_pr.c:508:
+			printk(KERN_ERR "SPC-3 PR REGISTER: Received res_key: 0x%016Lx"

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#148: FILE: drivers/lio-core/target_core_pr.c:508:
+			printk(KERN_ERR "SPC-3 PR REGISTER: Received res_key: 0x%016Lx"

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#157: FILE: drivers/lio-core/target_core_pr.c:543:
+extern unsigned char *core_scsi3_pr_dump_type (int type)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#157: FILE: drivers/lio-core/target_core_pr.c:543:
+extern unsigned char *core_scsi3_pr_dump_type (int type)

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#179: FILE: drivers/lio-core/target_core_pr.c:565:
+static int core_scsi3_pro_reserve (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#179: FILE: drivers/lio-core/target_core_pr.c:565:
+static int core_scsi3_pro_reserve (

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#193: FILE: drivers/lio-core/target_core_pr.c:579:
+		printk(KERN_ERR "SPC-3 PR: se_sess || se_lun_t is NULL!\n");

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#194: FILE: drivers/lio-core/target_core_pr.c:580:
+		return(PYX_TRANSPORT_LOGICAL_UNIT_COMMUNICATION_FAILURE);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#203: FILE: drivers/lio-core/target_core_pr.c:589:
+		printk(KERN_ERR "SPC-3 PR: Unable to locate"

WARNING:SPLIT_STRING: quoted string split across lines
#204: FILE: drivers/lio-core/target_core_pr.c:590:
+		printk(KERN_ERR "SPC-3 PR: Unable to locate"
+			" PR_REGISTERED *pr_reg\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#205: FILE: drivers/lio-core/target_core_pr.c:591:
+		return(PYX_TRANSPORT_LOGICAL_UNIT_COMMUNICATION_FAILURE);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#214: FILE: drivers/lio-core/target_core_pr.c:600:
+^I * ^I registered with the logical unit for the I_T nexus; and$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#217: FILE: drivers/lio-core/target_core_pr.c:603:
+		printk(KERN_ERR "SPC-3 PR RESERVE: Received res_key: 0x%016Lx"

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#217: FILE: drivers/lio-core/target_core_pr.c:603:
+		printk(KERN_ERR "SPC-3 PR RESERVE: Received res_key: 0x%016Lx"

WARNING:SPLIT_STRING: quoted string split across lines
#218: FILE: drivers/lio-core/target_core_pr.c:604:
+		printk(KERN_ERR "SPC-3 PR RESERVE: Received res_key: 0x%016Lx"
+			" does not match existing SA REGISTER res_key:"

WARNING:SPLIT_STRING: quoted string split across lines
#219: FILE: drivers/lio-core/target_core_pr.c:605:
+			" does not match existing SA REGISTER res_key:"
+			" 0x%016Lx\n", res_key, pr_reg->pr_res_key);

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#219: FILE: drivers/lio-core/target_core_pr.c:605:
+			" 0x%016Lx\n", res_key, pr_reg->pr_res_key);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#220: FILE: drivers/lio-core/target_core_pr.c:606:
+		return(PYX_TRANSPORT_RESERVATION_CONFLICT);

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: drivers/lio-core/target_core_pr.c:613:
+         *       being created.$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#228: FILE: drivers/lio-core/target_core_pr.c:614:
+^I * $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#233: FILE: drivers/lio-core/target_core_pr.c:619:
+		printk(KERN_ERR "SPC-3 PR: Illegal SCOPE: 0x%02x\n", scope);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#234: FILE: drivers/lio-core/target_core_pr.c:620:
+		return(PYX_TRANSPORT_INVALID_PARAMETER_LIST);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#242: FILE: drivers/lio-core/target_core_pr.c:628:
+	if ((pr_res_holder = dev->dev_pr_res_holder)) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#245: FILE: drivers/lio-core/target_core_pr.c:631:
+^I^I * $

WARNING:LINE_SPACING: Missing a blank line after declarations
#256: FILE: drivers/lio-core/target_core_pr.c:642:
+			se_node_acl_t *pr_res_nacl = pr_res_holder->pr_reg_nacl;
+			printk(KERN_ERR "SPC-3 PR: Attempted RESERVE from"

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#256: FILE: drivers/lio-core/target_core_pr.c:642:
+			printk(KERN_ERR "SPC-3 PR: Attempted RESERVE from"

WARNING:SPLIT_STRING: quoted string split across lines
#257: FILE: drivers/lio-core/target_core_pr.c:643:
+			printk(KERN_ERR "SPC-3 PR: Attempted RESERVE from"
+				" [%s]: %s while reservation already held by"

WARNING:SPLIT_STRING: quoted string split across lines
#258: FILE: drivers/lio-core/target_core_pr.c:644:
+				" [%s]: %s while reservation already held by"
+				" [%s]: %s, returning RESERVATION_CONFLICT\n",

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#265: FILE: drivers/lio-core/target_core_pr.c:651:
+			return(PYX_TRANSPORT_RESERVATION_CONFLICT);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pr_res_holder->pr_res_type != type'
#274: FILE: drivers/lio-core/target_core_pr.c:660:
+		if ((pr_res_holder->pr_res_type != type) ||
+		    (pr_res_holder->pr_res_scope != scope)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pr_res_holder->pr_res_scope != scope'
#274: FILE: drivers/lio-core/target_core_pr.c:660:
+		if ((pr_res_holder->pr_res_type != type) ||
+		    (pr_res_holder->pr_res_scope != scope)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#277: FILE: drivers/lio-core/target_core_pr.c:663:
+			se_node_acl_t *pr_res_nacl = pr_res_holder->pr_reg_nacl;
+			printk(KERN_ERR "SPC-3 PR: Attempted RESERVE from"

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#277: FILE: drivers/lio-core/target_core_pr.c:663:
+			printk(KERN_ERR "SPC-3 PR: Attempted RESERVE from"

WARNING:SPLIT_STRING: quoted string split across lines
#278: FILE: drivers/lio-core/target_core_pr.c:664:
+			printk(KERN_ERR "SPC-3 PR: Attempted RESERVE from"
+				" [%s]: %s trying to change TYPE and/or SCOPE,"

WARNING:SPLIT_STRING: quoted string split across lines
#279: FILE: drivers/lio-core/target_core_pr.c:665:
+				" [%s]: %s trying to change TYPE and/or SCOPE,"
+				" while reservation already held by [%s]: %s,"

WARNING:SPLIT_STRING: quoted string split across lines
#280: FILE: drivers/lio-core/target_core_pr.c:666:
+				" while reservation already held by [%s]: %s,"
+				" returning RESERVATION_CONFLICT\n",

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#287: FILE: drivers/lio-core/target_core_pr.c:673:
+			return(PYX_TRANSPORT_RESERVATION_CONFLICT);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#300: FILE: drivers/lio-core/target_core_pr.c:686:
+		return(PYX_TRANSPORT_SENT_TO_TRANSPORT);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#301: FILE: drivers/lio-core/target_core_pr.c:687:
+^I} $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#313: FILE: drivers/lio-core/target_core_pr.c:699:
+	if (!(pr_reg->pr_reg_all_tg_pt)) {
+		dev->dev_pr_tg_port_res_lun = pr_reg->pr_reg_lun_single_tg_pt;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#316: FILE: drivers/lio-core/target_core_pr.c:702:
+	printk("SPC-3 PR [%s] Service Action: RESERVE created new reservation"

WARNING:SPLIT_STRING: quoted string split across lines
#317: FILE: drivers/lio-core/target_core_pr.c:703:
+	printk("SPC-3 PR [%s] Service Action: RESERVE created new reservation"
+		" holder TYPE: %s ALL_TG_PT: %d\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#320: FILE: drivers/lio-core/target_core_pr.c:706:
+	printk("SPC-3 PR [%s] RESERVE Node: %s\n", CMD_TFO(cmd)->get_fabric_name(),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#321: FILE: drivers/lio-core/target_core_pr.c:707:
+	printk("SPC-3 PR [%s] RESERVE Node: %s\n", CMD_TFO(cmd)->get_fabric_name(),
+		se_sess->se_node_acl->initiatorname);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#327: FILE: drivers/lio-core/target_core_pr.c:713:
+static int core_scsi3_pro_reserve_regonly (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#327: FILE: drivers/lio-core/target_core_pr.c:713:
+static int core_scsi3_pro_reserve_regonly (

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#334: FILE: drivers/lio-core/target_core_pr.c:720:
+	return(0);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#337: FILE: drivers/lio-core/target_core_pr.c:723:
+static int core_scsi3_pro_reserve_allreg (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#337: FILE: drivers/lio-core/target_core_pr.c:723:
+static int core_scsi3_pro_reserve_allreg (

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#344: FILE: drivers/lio-core/target_core_pr.c:730:
+	return(0);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#347: FILE: drivers/lio-core/target_core_pr.c:733:
+static int core_scsi3_emulate_pro_reserve (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#347: FILE: drivers/lio-core/target_core_pr.c:733:
+static int core_scsi3_emulate_pro_reserve (

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#363: FILE: drivers/lio-core/target_core_pr.c:749:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#378: FILE: drivers/lio-core/target_core_pr.c:764:
+		printk(KERN_ERR "SPC-3 PR: Unknown Service Action RESERVE Type:"

WARNING:SPLIT_STRING: quoted string split across lines
#379: FILE: drivers/lio-core/target_core_pr.c:765:
+		printk(KERN_ERR "SPC-3 PR: Unknown Service Action RESERVE Type:"
+			" 0x%02x\n", type);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#380: FILE: drivers/lio-core/target_core_pr.c:766:
+		return(PYX_TRANSPORT_INVALID_CDB_FIELD);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#398: FILE: drivers/lio-core/target_core_pr.c:784:
+		printk(KERN_ERR "SPC-3 PR: se_sess || se_lun_t is NULL!\n");

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#399: FILE: drivers/lio-core/target_core_pr.c:785:
+		return(PYX_TRANSPORT_LOGICAL_UNIT_COMMUNICATION_FAILURE);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#406: FILE: drivers/lio-core/target_core_pr.c:792:
+		printk(KERN_ERR "SPC-3 PR: Unable to locate"

WARNING:SPLIT_STRING: quoted string split across lines
#407: FILE: drivers/lio-core/target_core_pr.c:793:
+		printk(KERN_ERR "SPC-3 PR: Unable to locate"
+			" PR_REGISTERED *pr_reg\n");

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#408: FILE: drivers/lio-core/target_core_pr.c:794:
+		return(PYX_TRANSPORT_LOGICAL_UNIT_COMMUNICATION_FAILURE);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#421: FILE: drivers/lio-core/target_core_pr.c:807:
+	if (!(pr_res_holder = dev->dev_pr_res_holder)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#426: FILE: drivers/lio-core/target_core_pr.c:812:
+^I^Ireturn(PYX_TRANSPORT_SENT_TO_TRANSPORT);^I^I$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#426: FILE: drivers/lio-core/target_core_pr.c:812:
+		return(PYX_TRANSPORT_SENT_TO_TRANSPORT);		

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#434: FILE: drivers/lio-core/target_core_pr.c:820:
+		return(PYX_TRANSPORT_SENT_TO_TRANSPORT);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#438: FILE: drivers/lio-core/target_core_pr.c:824:
+^I * $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#450: FILE: drivers/lio-core/target_core_pr.c:836:
+		printk(KERN_ERR "SPC-3 PR RELEASE: Received res_key: 0x%016Lx"

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#450: FILE: drivers/lio-core/target_core_pr.c:836:
+		printk(KERN_ERR "SPC-3 PR RELEASE: Received res_key: 0x%016Lx"

WARNING:SPLIT_STRING: quoted string split across lines
#451: FILE: drivers/lio-core/target_core_pr.c:837:
+		printk(KERN_ERR "SPC-3 PR RELEASE: Received res_key: 0x%016Lx"
+			" does not match existing SA REGISTER res_key:"

WARNING:SPLIT_STRING: quoted string split across lines
#452: FILE: drivers/lio-core/target_core_pr.c:838:
+			" does not match existing SA REGISTER res_key:"
+			" 0x%016Lx\n", res_key, pr_reg->pr_res_key);

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#452: FILE: drivers/lio-core/target_core_pr.c:838:
+			" 0x%016Lx\n", res_key, pr_reg->pr_res_key);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#454: FILE: drivers/lio-core/target_core_pr.c:840:
+		return(PYX_TRANSPORT_RESERVATION_CONFLICT);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pr_res_holder->pr_res_type != type'
#462: FILE: drivers/lio-core/target_core_pr.c:848:
+	if ((pr_res_holder->pr_res_type != type) ||
+	    (pr_res_holder->pr_res_scope != scope)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pr_res_holder->pr_res_scope != scope'
#462: FILE: drivers/lio-core/target_core_pr.c:848:
+	if ((pr_res_holder->pr_res_type != type) ||
+	    (pr_res_holder->pr_res_scope != scope)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#465: FILE: drivers/lio-core/target_core_pr.c:851:
+		se_node_acl_t *pr_res_nacl = pr_res_holder->pr_reg_nacl;
+		printk(KERN_ERR "SPC-3 PR RELEASE: Attempted to release"

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#465: FILE: drivers/lio-core/target_core_pr.c:851:
+		printk(KERN_ERR "SPC-3 PR RELEASE: Attempted to release"

WARNING:SPLIT_STRING: quoted string split across lines
#466: FILE: drivers/lio-core/target_core_pr.c:852:
+		printk(KERN_ERR "SPC-3 PR RELEASE: Attempted to release"
+			" reservation from [%s]: %s with different TYPE "

WARNING:SPLIT_STRING: quoted string split across lines
#467: FILE: drivers/lio-core/target_core_pr.c:853:
+			" reservation from [%s]: %s with different TYPE "
+			"and/or SCOPE  while reservation already held by"

WARNING:SPLIT_STRING: quoted string split across lines
#468: FILE: drivers/lio-core/target_core_pr.c:854:
+			"and/or SCOPE  while reservation already held by"
+			" [%s]: %s, returning RESERVATION_CONFLICT\n",

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#475: FILE: drivers/lio-core/target_core_pr.c:861:
+		return(PYX_TRANSPORT_RESERVATION_CONFLICT);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#485: FILE: drivers/lio-core/target_core_pr.c:871:
+	if (!(pr_reg->pr_reg_all_tg_pt)) {
+		dev->dev_pr_tg_port_res_lun = NULL;
+	}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#488: FILE: drivers/lio-core/target_core_pr.c:874:
+	printk("SPC-3 PR [%s] Service Action: RELEASE cleared reservation holder"

WARNING:SPLIT_STRING: quoted string split across lines
#489: FILE: drivers/lio-core/target_core_pr.c:875:
+	printk("SPC-3 PR [%s] Service Action: RELEASE cleared reservation holder"
+		" TYPE: %s ALL_TG_PT: %d\n", CMD_TFO(cmd)->get_fabric_name(),

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#492: FILE: drivers/lio-core/target_core_pr.c:878:
+	printk("SPC-3 PR [%s] RELEASE Node: %s\n", CMD_TFO(cmd)->get_fabric_name(),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#493: FILE: drivers/lio-core/target_core_pr.c:879:
+	printk("SPC-3 PR [%s] RELEASE Node: %s\n", CMD_TFO(cmd)->get_fabric_name(),
+		se_sess->se_node_acl->initiatorname);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#497: FILE: drivers/lio-core/target_core_pr.c:883:
+	pr_reg->pr_res_type = pr_reg->pr_res_scope = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#514: FILE: drivers/lio-core/target_core_pr.c:1000:
+#if 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#543: FILE: drivers/lio-core/target_core_pr.c:1142:
+^Ibuf[2] |= 0x04; /* ATP_C: All Target Ports Capable bit */ $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#555: FILE: drivers/lio-core/target_core_pr.h:42:
+extern unsigned char *core_scsi3_pr_dump_type (int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#555: FILE: drivers/lio-core/target_core_pr.h:42:
+extern unsigned char *core_scsi3_pr_dump_type (int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#555: FILE: drivers/lio-core/target_core_pr.h:42:
+extern unsigned char *core_scsi3_pr_dump_type (int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000175283.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 28 errors, 57 warnings, 14 checks, 461 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000175283.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
