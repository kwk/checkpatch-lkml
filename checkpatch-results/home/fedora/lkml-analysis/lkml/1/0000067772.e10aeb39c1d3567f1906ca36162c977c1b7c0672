CHECK:MACRO_ARG_REUSE: Macro argument reuse 'entity' - possible side-effects?
#57: FILE: block/elevator-fq.c:150:
+#define for_each_entity(entity)	\
+	for (; entity && entity->parent; entity = entity->parent)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'entity' may be better as '(entity)' to avoid precedence issues
#57: FILE: block/elevator-fq.c:150:
+#define for_each_entity(entity)	\
+	for (; entity && entity->parent; entity = entity->parent)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#82: FILE: block/elevator-fq.c:175:
+static void find_matching_io_entity(struct io_entity **entity,
+			struct io_entity **new_entity)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#112: FILE: block/elevator-fq.c:205:
+}
+struct io_group *ioq_to_io_group(struct io_queue *ioq)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'entity' - possible side-effects?
#125: FILE: block/elevator-fq.c:218:
+#define for_each_entity(entity)	\
+	for (; entity != NULL; entity = NULL)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'entity' may be better as '(entity)' to avoid precedence issues
#125: FILE: block/elevator-fq.c:218:
+#define for_each_entity(entity)	\
+	for (; entity != NULL; entity = NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "entity"
#126: FILE: block/elevator-fq.c:219:
+	for (; entity != NULL; entity = NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#128: FILE: block/elevator-fq.c:221:
+static void find_matching_io_entity(struct io_entity **entity,
+			struct io_entity **new_entity) { }

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#129: FILE: block/elevator-fq.c:222:
+static void find_matching_io_entity(struct io_entity **entity,
+			struct io_entity **new_entity) { }

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#156: FILE: block/elevator-fq.c:262:
+static void entity_served(struct io_entity *entity, unsigned long served,
+		unsigned long queue_charge, unsigned long group_charge,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: block/elevator-fq.c:721:
+	entity_served(&ioq->entity, served, queue_charge, group_charge,
+			ioq->nr_sectors);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#263: FILE: block/elevator-fq.c:939:
+static struct io_group *io_alloc_root_group(struct request_queue *q,
+					struct elevator_queue *e, void *key)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!iog"
#269: FILE: block/elevator-fq.c:945:
+	if (iog == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sd"
#303: FILE: block/elevator-fq.c:1022:
+	for (; sd != NULL; sd = entity->my_sd) {

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#370: FILE: init/Kconfig:615:
+config GROUP_IOSCHED
+	bool "Group IO Scheduler"
+	depends on CGROUPS && ELV_FAIR_QUEUING
+	default n
+	---help---
+	  This feature lets IO scheduler recognize task groups and control
+	  disk bandwidth allocation to such task groups.
+

Kconfig symbols should have a help text which fully describes
it.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000067772.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 1 warnings, 13 checks, 308 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000067772.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
