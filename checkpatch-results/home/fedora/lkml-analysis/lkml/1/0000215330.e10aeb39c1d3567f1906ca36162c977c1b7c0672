WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#37: FILE: Makefile:4:
+EXTRAVERSION = .2
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#68: FILE: arch/x86/kernel/early-quirks.c:104:
+	b &= ~(1<<5);
 	        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#72: FILE: arch/x86/kernel/early-quirks.c:108:
+	d |= 1<<8;
 	      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#82: FILE: arch/x86/kernel/early-quirks.c:118:
+#if defined(CONFIG_ACPI) && defined (CONFIG_X86_IO_APIC)

CHECK:BRACES: braces {} should be used on all arms of this statement
#90: FILE: arch/x86/kernel/early-quirks.c:126:
+	if (d  < 0x82)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#92: FILE: arch/x86/kernel/early-quirks.c:128:
+	else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#100: FILE: arch/x86/kernel/early-quirks.c:136:
+		printk(KERN_INFO "SB4X0 revision 0x%x\n", d);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#101: FILE: arch/x86/kernel/early-quirks.c:137:
+		printk(KERN_INFO "Ignoring ACPI timer override.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#102: FILE: arch/x86/kernel/early-quirks.c:138:
+		printk(KERN_INFO "If you got timer trouble "

WARNING:SPLIT_STRING: quoted string split across lines
#103: FILE: arch/x86/kernel/early-quirks.c:139:
+		printk(KERN_INFO "If you got timer trouble "
+		       "try acpi_use_timer_override\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#184: FILE: drivers/net/sky2.c:3038:
+	if ((wol->wolopts & ~sky2_wol_supported(sky2->hw))
+	    || !device_can_wakeup(&hw->pdev->dev))

CHECK:CAMELCASE: Avoid CamelCase: <LastNameOffset>
#305: FILE: fs/cifs/cifssmb.c:3640:
+					le16_to_cpu(parms->LastNameOffset);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#327: FILE: fs/cifs/readdir.c:644:
+static int cifs_save_resume_key(const char *current_entry,
+	struct cifsFileInfo *cifsFile)

CHECK:CAMELCASE: Avoid CamelCase: <cifsFileInfo>
#327: FILE: fs/cifs/readdir.c:644:
+	struct cifsFileInfo *cifsFile)

CHECK:CAMELCASE: Avoid CamelCase: <cifsFile>
#327: FILE: fs/cifs/readdir.c:644:
+	struct cifsFileInfo *cifsFile)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cifsFile == NULL'
#334: FILE: fs/cifs/readdir.c:651:
+	if ((cifsFile == NULL) || (current_entry == NULL))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current_entry == NULL'
#334: FILE: fs/cifs/readdir.c:651:
+	if ((cifsFile == NULL) || (current_entry == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cifsFile"
#334: FILE: fs/cifs/readdir.c:651:
+	if ((cifsFile == NULL) || (current_entry == NULL))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!current_entry"
#334: FILE: fs/cifs/readdir.c:651:
+	if ((cifsFile == NULL) || (current_entry == NULL))

CHECK:CAMELCASE: Avoid CamelCase: <pFindData>
#340: FILE: fs/cifs/readdir.c:657:
+		FILE_UNIX_INFO *pFindData = (FILE_UNIX_INFO *)current_entry;

CHECK:CAMELCASE: Avoid CamelCase: <FileName>
#342: FILE: fs/cifs/readdir.c:659:
+		filename = &pFindData->FileName[0];

CHECK:CAMELCASE: Avoid CamelCase: <ResumeKey>
#349: FILE: fs/cifs/readdir.c:666:
+		cifsFile->srch_inf.resume_key = pFindData->ResumeKey;

CHECK:CAMELCASE: Avoid CamelCase: <FileNameLength>
#354: FILE: fs/cifs/readdir.c:671:
+		len = le32_to_cpu(pFindData->FileNameLength);

CHECK:CAMELCASE: Avoid CamelCase: <FileIndex>
#355: FILE: fs/cifs/readdir.c:672:
+		cifsFile->srch_inf.resume_key = pFindData->FileIndex;

CHECK:CAMELCASE: Avoid CamelCase: <cFYI>
#382: FILE: fs/cifs/readdir.c:699:
+		cFYI(1, ("Unknown findfirst level %d", level));

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#568: FILE: net/mac80211/debugfs_netdev.c:554:
+	/*
+	 * Do not use IEEE80211_DEV_TO_SUB_IF because that

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000215330.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 19 checks, 475 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000215330.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
