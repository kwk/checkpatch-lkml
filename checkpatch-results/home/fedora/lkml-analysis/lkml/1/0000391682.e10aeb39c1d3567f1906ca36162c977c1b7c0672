CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#174: FILE: arch/powerpc/kernel/of_device.c:98:
+	sl = of_device_get_modalias(ofdev, &env->buf[env->buflen-1],
 	                                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'fuction' may be misspelled - perhaps 'function'?
#569: FILE: drivers/base/core.c:208:
+	/* have the device type specific fuction add its stuff */
 	                                 ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*env)...) over kzalloc(sizeof(struct kobj_uevent_env)...)
#594: FILE: drivers/base/core.c:253:
+	env = kzalloc(sizeof(struct kobj_uevent_env), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1220: FILE: drivers/pci/pci.h:3:
+extern int pci_uevent(struct device *dev, struct kobj_uevent_env *env);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1322: FILE: drivers/power/power_supply.h:17:
+extern int power_supply_uevent(struct device *dev, struct kobj_uevent_env *env);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1386: FILE: drivers/s390/cio/ccwgroup.c:47:
+ccwgroup_uevent (struct device *dev, struct kobj_uevent_env *env)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1454: FILE: drivers/s390/crypto/ap_bus.c:461:
+static int ap_uevent (struct device *dev, struct kobj_uevent_env)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1629: FILE: drivers/usb/core/message.c:1359:
+	if (add_uevent_var(env, "INTERFACE=%d/%d/%d",
 		   alt->desc.bInterfaceClass,

WARNING:LONG_LINE_STRING: line length of 101 exceeds 100 columns
#1637: FILE: drivers/usb/core/message.c:1364:
+	if (add_uevent_var(env, "MODALIAS=usb:v%04Xp%04Xd%04Xdc%02Xdsc%02Xdp%02Xic%02Xisc%02Xip%02X",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1638: FILE: drivers/usb/core/message.c:1365:
+	if (add_uevent_var(env, "MODALIAS=usb:v%04Xp%04Xd%04Xdc%02Xdsc%02Xdp%02Xic%02Xisc%02Xip%02X",
 		   le16_to_cpu(usb_dev->descriptor.idVendor),

WARNING:PRINTF_L: %LX is non-standard C, use %llX
#1699: FILE: drivers/w1/w1.c:429:
+	err = add_uevent_var(env, "W1_SLAVE_ID=%024LX",

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(2, 3) over __attribute__((format(printf, 2, 3)))
#1816: FILE: include/linux/kobject.h:288:
+	__attribute__((format (printf, 2, 3)));

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*env)...) over kzalloc(sizeof(struct kobj_uevent_env)...)
#1896: FILE: lib/kobject_uevent.c:101:
+	env = kzalloc(sizeof(struct kobj_uevent_env), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1995: FILE: lib/kobject_uevent.c:177:
+		call_usermodehelper (argv[0], argv, env->envp, UMH_WAIT_EXEC);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000391682.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 7 checks, 1845 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000391682.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
