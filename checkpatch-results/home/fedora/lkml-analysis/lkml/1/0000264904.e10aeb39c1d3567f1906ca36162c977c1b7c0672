WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#383: FILE: arch/x86/kernel/cpu/common_64.c:30:
+#include <asm/pgtable.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#384: FILE: arch/x86/kernel/cpu/common_64.c:31:
+#include <asm/processor.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/atomic.h> instead of <asm/atomic.h>
#386: FILE: arch/x86/kernel/cpu/common_64.c:33:
+#include <asm/atomic.h>

CHECK:SPACING: No space is necessary after a cast
#410: FILE: arch/x86/kernel/cpu/common_64.c:435:
+struct desc_ptr idt_descr = { 256 * 16 - 1, (unsigned long) idt_table };

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#420: FILE: arch/x86/kernel/cpu/common_64.c:445:
+/* noexec=on|off
+Control non executable mappings for 64bit processes.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#438: FILE: arch/x86/kernel/cpu/common_64.c:463:
+}
+early_param("noexec", nonx_setup);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#443: FILE: arch/x86/kernel/cpu/common_64.c:468:
+/* noexec32=on|off
+Control non executable heap for 32bit processes.

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#457: FILE: arch/x86/kernel/cpu/common_64.c:482:
+__setup("noexec32=", nonx32_setup);

WARNING:MEMORY_BARRIER: memory barrier without comment
#468: FILE: arch/x86/kernel/cpu/common_64.c:493:
+	mb();

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#491: FILE: arch/x86/kernel/cpu/common_64.c:516:
+	pda->irqstackptr += IRQSTACKSIZE-64;
 	                                ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".bss.page_aligned") over __attribute__((section(".bss.page_aligned")))
#496: FILE: arch/x86/kernel/cpu/common_64.c:521:
+__attribute__((section(".bss.page_aligned")));

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#498: FILE: arch/x86/kernel/cpu/common_64.c:523:
+extern asmlinkage void ignore_sysret(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#508: FILE: arch/x86/kernel/cpu/common_64.c:533:
+	wrmsrl(MSR_STAR,  ((u64)__USER32_CS)<<48  | ((u64)__KERNEL_CS)<<32);
 	                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#508: FILE: arch/x86/kernel/cpu/common_64.c:533:
+	wrmsrl(MSR_STAR,  ((u64)__USER32_CS)<<48  | ((u64)__KERNEL_CS)<<32);
 	                                                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#518: FILE: arch/x86/kernel/cpu/common_64.c:543:
+	       X86_EFLAGS_TF|X86_EFLAGS_DF|X86_EFLAGS_IF|X86_EFLAGS_IOPL);
 	                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#518: FILE: arch/x86/kernel/cpu/common_64.c:543:
+	       X86_EFLAGS_TF|X86_EFLAGS_DF|X86_EFLAGS_IF|X86_EFLAGS_IOPL);
 	                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#518: FILE: arch/x86/kernel/cpu/common_64.c:543:
+	       X86_EFLAGS_TF|X86_EFLAGS_DF|X86_EFLAGS_IF|X86_EFLAGS_IOPL);
 	                                                ^

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#533: FILE: arch/x86/kernel/cpu/common_64.c:558:
+ * Copies of the original ist values from the tss are only accessed during
                           ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#566: FILE: arch/x86/kernel/cpu/common_64.c:591:
+	printk(KERN_INFO "Initializing CPU#%d\n", cpu);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#568: FILE: arch/x86/kernel/cpu/common_64.c:593:
+	clear_in_cr4(X86_CR4_VME|X86_CR4_PVI|X86_CR4_TSD|X86_CR4_DE);
 	                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#568: FILE: arch/x86/kernel/cpu/common_64.c:593:
+	clear_in_cr4(X86_CR4_VME|X86_CR4_PVI|X86_CR4_TSD|X86_CR4_DE);
 	                                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#568: FILE: arch/x86/kernel/cpu/common_64.c:593:
+	clear_in_cr4(X86_CR4_VME|X86_CR4_PVI|X86_CR4_TSD|X86_CR4_DE);
 	                                                ^

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#602: FILE: arch/x86/kernel/cpu/common_64.c:627:
+		orig_ist->ist[v] = t->x86_tss.ist[v] = (unsigned long)estacks;
 		          ^^^

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#602: FILE: arch/x86/kernel/cpu/common_64.c:627:
+		orig_ist->ist[v] = t->x86_tss.ist[v] = (unsigned long)estacks;
 		                              ^^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#602: FILE: arch/x86/kernel/cpu/common_64.c:627:
+		orig_ist->ist[v] = t->x86_tss.ist[v] = (unsigned long)estacks;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#616: FILE: arch/x86/kernel/cpu/common_64.c:641:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: braces {} should be used on all arms of this statement
#631: FILE: arch/x86/kernel/cpu/common_64.c:656:
+	if (kgdb_connected && arch_kgdb_ops.correct_hw_break)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#633: FILE: arch/x86/kernel/cpu/common_64.c:658:
+	else {
[...]
+	set_debugreg(0UL, 0);

CHECK:BRACES: Unbalanced braces around else statement
#633: FILE: arch/x86/kernel/cpu/common_64.c:658:
+	else {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000264904.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 12 warnings, 18 checks, 303 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000264904.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
