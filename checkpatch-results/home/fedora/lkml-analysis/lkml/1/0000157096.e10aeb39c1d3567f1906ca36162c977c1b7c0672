CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#73: FILE: arch/xtensa/include/asm/cacheflush.h:78:
+static inline void __invalidate_icache_page_alias(unsigned long virt,
+						unsigned long phys) { }

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#159: FILE: arch/xtensa/include/asm/nommu.h:1:
+typedef struct {

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:NEW_TYPEDEFS: do not add new typedefs
#159: FILE: arch/xtensa/include/asm/nommu.h:1:
+typedef struct {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#165: FILE: arch/xtensa/include/asm/nommu_context.h:1:
+static inline void enter_lazy_tlb(struct mm_struct *mm, struct task_struct *tsk)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#183: FILE: arch/xtensa/include/asm/nommu_context.h:19:
+static inline void switch_mm(struct mm_struct *prev, struct mm_struct *next,
+				struct task_struct *tsk)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#226: FILE: arch/xtensa/include/asm/pgtable.h:188:
+extern void paging_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#227: FILE: arch/xtensa/include/asm/pgtable.h:189:
+extern void pgtable_cache_init(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#497: FILE: arch/xtensa/mm/mmu.c:1:
+/*

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/mmu_context.h> instead of <asm/mmu_context.h>
#510: FILE: arch/xtensa/mm/mmu.c:14:
+#include <asm/mmu_context.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#558: FILE: arch/xtensa/mm/mmu.c:62:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#563: FILE: arch/xtensa/mm/mmu.c:67:
+	pgtable_cache = kmem_cache_create("pgd",
+			PAGE_SIZE, PAGE_SIZE,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000157096.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 7 checks, 422 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000157096.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
