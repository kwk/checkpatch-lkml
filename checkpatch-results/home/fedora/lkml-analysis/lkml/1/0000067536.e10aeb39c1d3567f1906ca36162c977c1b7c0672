WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#69: FILE: drivers/regulator/Kconfig:78:
+config REGULATOR_MAX8660
+	tristate "Maxim 8660/8661 voltage regulator"
+	depends on I2C
+	help
+	  This driver controls a Maxim 8660/8661 voltage output
+	  regulator via I2C bus.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#92: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#97: FILE: drivers/regulator/max8660.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#114: FILE: drivers/regulator/max8660.c:18:
+ * this program; if not, write to the Free Software Foundation, Inc., 59 Temple$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#116: FILE: drivers/regulator/max8660.c:20:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#127: FILE: drivers/regulator/max8660.c:31:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#133: FILE: drivers/regulator/max8660.c:37:
+ * $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#182: FILE: drivers/regulator/max8660.c:86:
+	static const u8 max8660_addresses[MAX8660_N_REGS] =
+	  { 0x10, 0x12, 0x20, 0x23, 0x24, 0x29, 0x2a, 0x32, 0x33, 0x39, 0x80 };

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#186: FILE: drivers/regulator/max8660.c:90:
+	u8 reg_val = (max8660->shadow_regs[reg] & mask) | val;
+	dev_vdbg(&max8660->client->dev, "Writing reg %02x with %02x\n",

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#187: FILE: drivers/regulator/max8660.c:91:
+	dev_vdbg(&max8660->client->dev, "Writing reg %02x with %02x\n",
+			max8660_addresses[reg], reg_val);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#190: FILE: drivers/regulator/max8660.c:94:
+	ret = i2c_smbus_write_byte_data(max8660->client,
+			max8660_addresses[reg], reg_val);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#197: FILE: drivers/regulator/max8660.c:101:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#207: FILE: drivers/regulator/max8660.c:111:
+	u8 mask = (rdev_get_id(rdev) == MAX8660_V3) ? 1 : 4;
+	return !!(val & mask);

WARNING:LINE_SPACING: Missing a blank line after declarations
#214: FILE: drivers/regulator/max8660.c:118:
+	u8 bit = (rdev_get_id(rdev) == MAX8660_V3) ? 1 : 4;
+	return max8660_write(max8660, MAX8660_OVER1, 0xff, bit);

WARNING:LINE_SPACING: Missing a blank line after declarations
#221: FILE: drivers/regulator/max8660.c:125:
+	u8 mask = (rdev_get_id(rdev) == MAX8660_V3) ? ~1 : ~4;
+	return max8660_write(max8660, MAX8660_OVER1, mask, 0);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#224: FILE: drivers/regulator/max8660.c:128:
+static int max8660_dcdc_list(struct regulator_dev *rdev, unsigned selector)

WARNING:LINE_SPACING: Missing a blank line after declarations
#236: FILE: drivers/regulator/max8660.c:140:
+	u8 selector = max8660->shadow_regs[reg];
+	return MAX8660_DCDC_MIN_UV + selector * MAX8660_DCDC_STEP;

WARNING:CONST_STRUCT: struct regulator_ops should normally be const
#267: FILE: drivers/regulator/max8660.c:171:
+static struct regulator_ops max8660_dcdc_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#274: FILE: drivers/regulator/max8660.c:178:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#279: FILE: drivers/regulator/max8660.c:183:
+static int max8660_ldo5_list(struct regulator_dev *rdev, unsigned selector)

WARNING:CONST_STRUCT: struct regulator_ops should normally be const
#319: FILE: drivers/regulator/max8660.c:223:
+static struct regulator_ops max8660_ldo5_ops = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#325: FILE: drivers/regulator/max8660.c:229:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#335: FILE: drivers/regulator/max8660.c:239:
+	u8 mask = (rdev_get_id(rdev) == MAX8660_V6) ? 2 : 4;
+	return !!(val & mask);

WARNING:LINE_SPACING: Missing a blank line after declarations
#342: FILE: drivers/regulator/max8660.c:246:
+	u8 bit = (rdev_get_id(rdev) == MAX8660_V6) ? 2 : 4;
+	return max8660_write(max8660, MAX8660_OVER2, 0xff, bit);

WARNING:LINE_SPACING: Missing a blank line after declarations
#349: FILE: drivers/regulator/max8660.c:253:
+	u8 mask = (rdev_get_id(rdev) == MAX8660_V6) ? ~2 : ~4;
+	return max8660_write(max8660, MAX8660_OVER2, mask, 0);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#352: FILE: drivers/regulator/max8660.c:256:
+static int max8660_ldo67_list(struct regulator_dev *rdev, unsigned selector)

WARNING:CONST_STRUCT: struct regulator_ops should normally be const
#392: FILE: drivers/regulator/max8660.c:296:
+static struct regulator_ops max8660_ldo67_ops = {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#445: FILE: drivers/regulator/max8660.c:349:
+static int max8660_probe(struct i2c_client *client,
+			      const struct i2c_device_id *i2c_id)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*max8660)...) over kzalloc(sizeof(struct max8660)...)
#457: FILE: drivers/regulator/max8660.c:361:
+	max8660 = kzalloc(sizeof(struct max8660) +

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#490: FILE: drivers/regulator/max8660.c:394:
+	for (i = 0; i < pdata->num_subdevs; i++) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#527: FILE: drivers/regulator/max8660.c:431:
+			dev_err(&client->dev, "invalid regulator %s\n",
+				 pdata->subdevs[i].name);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#534: FILE: drivers/regulator/max8660.c:438:
+	for (i = 0; i < pdata->num_subdevs; i++) {
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#613: FILE: include/linux/regulator/max8660.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#628: FILE: include/linux/regulator/max8660.h:16:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#629: FILE: include/linux/regulator/max8660.h:17:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000067536.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 18 warnings, 10 checks, 587 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000067536.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
