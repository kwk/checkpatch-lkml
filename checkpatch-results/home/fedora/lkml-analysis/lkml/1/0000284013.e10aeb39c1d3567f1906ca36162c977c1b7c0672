WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#41: FILE: drivers/video/via/hw.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#57: FILE: drivers/video/via/hw.c:17:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#59: FILE: drivers/video/via/hw.c:19:
+ * 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:CAMELCASE: Avoid CamelCase: <rgbLUT>
#268: FILE: drivers/video/via/hw.c:228:
+struct rgbLUT palLUT_table[] = {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <palLUT_table>
#268: FILE: drivers/video/via/hw.c:228:
+struct rgbLUT palLUT_table[] = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#534: FILE: drivers/video/via/hw.c:494:
+}
+u8 read_reg(int io_port, u8 index)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#537: FILE: drivers/video/via/hw.c:497:
+	return (inb(io_port + 1));

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#572: FILE: drivers/video/via/hw.c:532:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'chip_info.gfx_chip_name ==
 					UNICHROME_CLE266'
#590: FILE: drivers/video/via/hw.c:550:
+				if (dual_fb
+				    && (chip_info.gfx_chip_name ==
+					UNICHROME_CLE266)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: braces {} should be used on all arms of this statement
#590: FILE: drivers/video/via/hw.c:550:
+				if (dual_fb
[...]
+				} else
[...]

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#591: FILE: drivers/video/via/hw.c:551:
+				if (dual_fb
+				    && (chip_info.gfx_chip_name ==

CHECK:BRACES: Unbalanced braces around else statement
#596: FILE: drivers/video/via/hw.c:556:
+				} else

CHECK:CAMELCASE: Avoid CamelCase: <LCD2_Device>
#603: FILE: drivers/video/via/hw.c:563:
+			if (LCD2_Device == primary_dev)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_start_addr', this function's name, in a string
#638: FILE: drivers/video/via/hw.c:598:
+	DEBUG_MSG(KERN_INFO "set_start_addr!\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:BRACES: braces {} should be used on all arms of this statement
#683: FILE: drivers/video/via/hw.c:643:
+		if (via_fb_accel) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#688: FILE: drivers/video/via/hw.c:648:
+		} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmds_setting_info.h_active == 1600'
#739: FILE: drivers/video/via/hw.c:699:
+			if ((tmds_setting_info.h_active == 1600)
+			    && (tmds_setting_info.v_active == 1200))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmds_setting_info.v_active == 1200'
#739: FILE: drivers/video/via/hw.c:699:
+			if ((tmds_setting_info.h_active == 1600)
+			    && (tmds_setting_info.v_active == 1200))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#740: FILE: drivers/video/via/hw.c:700:
+			if ((tmds_setting_info.h_active == 1600)
+			    && (tmds_setting_info.v_active == 1200))

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_lcd_output_path', this function's name, in a string
#896: FILE: drivers/video/via/hw.c:856:
+		  "set_lcd_output_path, iga:%d,out_interface:%d\n",

CHECK:BRACES: braces {} should be used on all arms of this statement
#932: FILE: drivers/video/via/hw.c:892:
+		if (set_iga == IGA1)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#934: FILE: drivers/video/via/hw.c:894:
+		else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#941: FILE: drivers/video/via/hw.c:901:
+		if (set_iga == IGA1)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#943: FILE: drivers/video/via/hw.c:903:
+		else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#951: FILE: drivers/video/via/hw.c:911:
+		if (set_iga == IGA1)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#953: FILE: drivers/video/via/hw.c:913:
+		else {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'UNICHROME_K8M890 == chip_info.gfx_chip_name'
#962: FILE: drivers/video/via/hw.c:922:
+		if ((UNICHROME_K8M890 == chip_info.gfx_chip_name)
+		    || (UNICHROME_P4M890 == chip_info.gfx_chip_name))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'UNICHROME_P4M890 == chip_info.gfx_chip_name'
#962: FILE: drivers/video/via/hw.c:922:
+		if ((UNICHROME_K8M890 == chip_info.gfx_chip_name)
+		    || (UNICHROME_P4M890 == chip_info.gfx_chip_name))

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#962: FILE: drivers/video/via/hw.c:922:
+		if ((UNICHROME_K8M890 == chip_info.gfx_chip_name)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#963: FILE: drivers/video/via/hw.c:923:
+		if ((UNICHROME_K8M890 == chip_info.gfx_chip_name)
+		    || (UNICHROME_P4M890 == chip_info.gfx_chip_name))

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#963: FILE: drivers/video/via/hw.c:923:
+		    || (UNICHROME_P4M890 == chip_info.gfx_chip_name))

CHECK:CAMELCASE: Avoid CamelCase: <ModeInfoIndex>
#996: FILE: drivers/video/via/hw.c:956:
+int search_mode_setting(int ModeInfoIndex)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1000: FILE: drivers/video/via/hw.c:960:
+	while ((i < NUM_TOTAL_MODETABLE)
+	       && (ModeInfoIndex != CLE266Modes[i].ModeIndex)) i++;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1001: FILE: drivers/video/via/hw.c:961:
+	while ((i < NUM_TOTAL_MODETABLE)
+	       && (ModeInfoIndex != CLE266Modes[i].ModeIndex)) i++;

CHECK:CAMELCASE: Avoid CamelCase: <CLE266Modes>
#1001: FILE: drivers/video/via/hw.c:961:
+	       && (ModeInfoIndex != CLE266Modes[i].ModeIndex)) i++;

CHECK:CAMELCASE: Avoid CamelCase: <ModeIndex>
#1001: FILE: drivers/video/via/hw.c:961:
+	       && (ModeInfoIndex != CLE266Modes[i].ModeIndex)) i++;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i >= NUM_TOTAL_MODETABLE'
#1002: FILE: drivers/video/via/hw.c:962:
+	if ((i >= NUM_TOTAL_MODETABLE))

WARNING:UNNECESSARY_PARENTHESES: Unnecessary parentheses
#1002: FILE: drivers/video/via/hw.c:962:
+	if ((i >= NUM_TOTAL_MODETABLE))

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1006: FILE: drivers/video/via/hw.c:966:
+
+}

CHECK:CAMELCASE: Avoid CamelCase: <VideoModeTable>
#1008: FILE: drivers/video/via/hw.c:968:
+struct VideoModeTable *get_modetbl_pointer(int Index)

CHECK:CAMELCASE: Avoid CamelCase: <Index>
#1008: FILE: drivers/video/via/hw.c:968:
+struct VideoModeTable *get_modetbl_pointer(int Index)

CHECK:CAMELCASE: Avoid CamelCase: <TmpTbl>
#1010: FILE: drivers/video/via/hw.c:970:
+	struct VideoModeTable *TmpTbl = NULL;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1011: FILE: drivers/video/via/hw.c:971:
+	struct VideoModeTable *TmpTbl = NULL;
+	TmpTbl = &CLE266Modes[search_mode_setting(Index)];

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1012: FILE: drivers/video/via/hw.c:972:
+	return (TmpTbl);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1019: FILE: drivers/video/via/hw.c:979:
+	int i = 0;
+	while ((i < NUM_TOTAL_CEA_MODES)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1019: FILE: drivers/video/via/hw.c:979:
+	while ((i < NUM_TOTAL_CEA_MODES)
+	       && (Index != CEA_HDMI_Modes[i].ModeIndex)) i++;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1020: FILE: drivers/video/via/hw.c:980:
+	while ((i < NUM_TOTAL_CEA_MODES)
+	       && (Index != CEA_HDMI_Modes[i].ModeIndex)) i++;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i < NUM_TOTAL_CEA_MODES'
#1021: FILE: drivers/video/via/hw.c:981:
+	if ((i < NUM_TOTAL_CEA_MODES))

WARNING:UNNECESSARY_PARENTHESES: Unnecessary parentheses
#1021: FILE: drivers/video/via/hw.c:981:
+	if ((i < NUM_TOTAL_CEA_MODES))

CHECK:BRACES: braces {} should be used on all arms of this statement
#1021: FILE: drivers/video/via/hw.c:981:
+	if ((i < NUM_TOTAL_CEA_MODES))
[...]
+	 else {
[...]

WARNING:TABSTOP: Statements should start on a tabstop
#1023: FILE: drivers/video/via/hw.c:983:
+	 else {

CHECK:BRACES: Unbalanced braces around else statement
#1023: FILE: drivers/video/via/hw.c:983:
+	 else {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 23)
#1026: FILE: drivers/video/via/hw.c:986:
+		while ((i < NUM_TOTAL_MODETABLE)
[...]
+		       i++;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1027: FILE: drivers/video/via/hw.c:987:
+		while ((i < NUM_TOTAL_MODETABLE)
+		       && (Index != CLE266Modes[i].ModeIndex))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i >= NUM_TOTAL_MODETABLE'
#1029: FILE: drivers/video/via/hw.c:989:
+		if ((i >= NUM_TOTAL_MODETABLE))

WARNING:UNNECESSARY_PARENTHESES: Unnecessary parentheses
#1029: FILE: drivers/video/via/hw.c:989:
+		if ((i >= NUM_TOTAL_MODETABLE))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'chip_info.gfx_chip_name == UNICHROME_K800'
#1056: FILE: drivers/video/via/hw.c:1016:
+	if ((chip_info.gfx_chip_name == UNICHROME_K800)
+		|| (chip_info.gfx_chip_name == UNICHROME_K8M890))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'chip_info.gfx_chip_name == UNICHROME_K8M890'
#1056: FILE: drivers/video/via/hw.c:1016:
+	if ((chip_info.gfx_chip_name == UNICHROME_K800)
+		|| (chip_info.gfx_chip_name == UNICHROME_K8M890))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1057: FILE: drivers/video/via/hw.c:1017:
+	if ((chip_info.gfx_chip_name == UNICHROME_K800)
+		|| (chip_info.gfx_chip_name == UNICHROME_K8M890))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'chip_info.gfx_chip_name == UNICHROME_CLE266'
#1059: FILE: drivers/video/via/hw.c:1019:
+	if ((chip_info.gfx_chip_name == UNICHROME_CLE266)
+	    && (chip_info.gfx_chip_revision == CLE266_REVISION_AX))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'chip_info.gfx_chip_revision == CLE266_REVISION_AX'
#1059: FILE: drivers/video/via/hw.c:1019:
+	if ((chip_info.gfx_chip_name == UNICHROME_CLE266)
+	    && (chip_info.gfx_chip_revision == CLE266_REVISION_AX))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1060: FILE: drivers/video/via/hw.c:1020:
+	if ((chip_info.gfx_chip_name == UNICHROME_CLE266)
+	    && (chip_info.gfx_chip_revision == CLE266_REVISION_AX))

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1063: FILE: drivers/video/via/hw.c:1023:
+
+}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1097: FILE: drivers/video/via/hw.c:1057:
+
+	}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1099: FILE: drivers/video/via/hw.c:1059:
+
+}

CHECK:CAMELCASE: Avoid CamelCase: <RegTable>
#1102: FILE: drivers/video/via/hw.c:1062:
+void write_regx(struct io_reg RegTable[], int ItemNum)

CHECK:CAMELCASE: Avoid CamelCase: <ItemNum>
#1102: FILE: drivers/video/via/hw.c:1062:
+void write_regx(struct io_reg RegTable[], int ItemNum)

CHECK:CAMELCASE: Avoid CamelCase: <RegTemp>
#1105: FILE: drivers/video/via/hw.c:1065:
+	unsigned char RegTemp;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1164: FILE: drivers/video/via/hw.c:1124:
+
+}

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1183: FILE: drivers/video/via/hw.c:1143:
+			/* If resolution > 1280x1024, expire length = 64, else
+			   expire length = 128 */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1183: FILE: drivers/video/via/hw.c:1143:
+			   expire length = 128 */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hor_active > 1280'
#1184: FILE: drivers/video/via/hw.c:1144:
+			if ((hor_active > 1280) && (ver_active > 1024))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ver_active > 1024'
#1184: FILE: drivers/video/via/hw.c:1144:
+			if ((hor_active > 1280) && (ver_active > 1024))

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1190: FILE: drivers/video/via/hw.c:1150:
+
+		}

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1201: FILE: drivers/video/via/hw.c:1161:
+			/* If resolution > 1280x1024, expire length = 64, else
+			   expire length = 128 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1201: FILE: drivers/video/via/hw.c:1161:
+			   expire length = 128 */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hor_active > 1280'
#1202: FILE: drivers/video/via/hw.c:1162:
+			if ((hor_active > 1280) && (ver_active > 1024))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ver_active > 1024'
#1202: FILE: drivers/video/via/hw.c:1162:
+			if ((hor_active > 1280) && (ver_active > 1024))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1216: FILE: drivers/video/via/hw.c:1176:
+			/* If resolution > 1280x1024, expire length = 64,
+			   else expire length = 128 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1216: FILE: drivers/video/via/hw.c:1176:
+			   else expire length = 128 */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hor_active > 1280'
#1217: FILE: drivers/video/via/hw.c:1177:
+			if ((hor_active > 1280) && (ver_active > 1024))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ver_active > 1024'
#1217: FILE: drivers/video/via/hw.c:1177:
+			if ((hor_active > 1280) && (ver_active > 1024))

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'fifo_threshold_select_reg.iga1_fifo_threshold_select_reg.reg_num'
#1280: FILE: drivers/video/via/hw.c:1240:
+		    fifo_threshold_select_reg.
+		    iga1_fifo_threshold_select_reg.reg_num;

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'fifo_threshold_select_reg.iga1_fifo_threshold_select_reg.reg'
#1283: FILE: drivers/video/via/hw.c:1243:
+		    fifo_threshold_select_reg.
+		    iga1_fifo_threshold_select_reg.reg;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'fifo_high_threshold_select_reg.iga1_fifo_high_threshold_select_reg.reg_num'
#1291: FILE: drivers/video/via/hw.c:1251:
+		    fifo_high_threshold_select_reg.
+		    iga1_fifo_high_threshold_select_reg.reg_num;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'fifo_high_threshold_select_reg.iga1_fifo_high_threshold_select_reg.reg'
#1294: FILE: drivers/video/via/hw.c:1254:
+		    fifo_high_threshold_select_reg.
+		    iga1_fifo_high_threshold_select_reg.reg;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'display_queue_expire_num_reg.iga1_display_queue_expire_num_reg.reg_num'
#1303: FILE: drivers/video/via/hw.c:1263:
+		    display_queue_expire_num_reg.
+		    iga1_display_queue_expire_num_reg.reg_num;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'display_queue_expire_num_reg.iga1_display_queue_expire_num_reg.reg'
#1306: FILE: drivers/video/via/hw.c:1266:
+		    display_queue_expire_num_reg.
+		    iga1_display_queue_expire_num_reg.reg;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1317: FILE: drivers/video/via/hw.c:1277:
+			/* If resolution > 1280x1024, expire length = 64,
+			   else  expire length = 128 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1317: FILE: drivers/video/via/hw.c:1277:
+			   else  expire length = 128 */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hor_active > 1280'
#1318: FILE: drivers/video/via/hw.c:1278:
+			if ((hor_active > 1280) && (ver_active > 1024))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ver_active > 1024'
#1318: FILE: drivers/video/via/hw.c:1278:
+			if ((hor_active > 1280) && (ver_active > 1024))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1332: FILE: drivers/video/via/hw.c:1292:
+			/* If resolution > 1280x1024, expire length = 64,
+			   else  expire length = 128 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1332: FILE: drivers/video/via/hw.c:1292:
+			   else  expire length = 128 */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hor_active > 1280'
#1333: FILE: drivers/video/via/hw.c:1293:
+			if ((hor_active > 1280) && (ver_active > 1024))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ver_active > 1024'
#1333: FILE: drivers/video/via/hw.c:1293:
+			if ((hor_active > 1280) && (ver_active > 1024))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1347: FILE: drivers/video/via/hw.c:1307:
+			/* If resolution > 1280x1024, expire length = 64,
+			   else expire length = 128 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1347: FILE: drivers/video/via/hw.c:1307:
+			   else expire length = 128 */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hor_active > 1280'
#1348: FILE: drivers/video/via/hw.c:1308:
+			if ((hor_active > 1280) && (ver_active > 1024))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ver_active > 1024'
#1348: FILE: drivers/video/via/hw.c:1308:
+			if ((hor_active > 1280) && (ver_active > 1024))

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'display_fifo_depth_reg.iga2_fifo_depth_select_reg.reg_num'
#1408: FILE: drivers/video/via/hw.c:1368:
+			    display_fifo_depth_reg.
+			    iga2_fifo_depth_select_reg.reg_num;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'display_fifo_depth_reg.iga2_fifo_depth_select_reg.reg'
#1411: FILE: drivers/video/via/hw.c:1371:
+			    display_fifo_depth_reg.
+			    iga2_fifo_depth_select_reg.reg;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1414: FILE: drivers/video/via/hw.c:1374:
+		} else {
+

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'display_fifo_depth_reg.iga2_fifo_depth_select_reg.reg_num'
#1420: FILE: drivers/video/via/hw.c:1380:
+			    display_fifo_depth_reg.
+			    iga2_fifo_depth_select_reg.reg_num;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'display_fifo_depth_reg.iga2_fifo_depth_select_reg.reg'
#1423: FILE: drivers/video/via/hw.c:1383:
+			    display_fifo_depth_reg.
+			    iga2_fifo_depth_select_reg.reg;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'fifo_threshold_select_reg.iga2_fifo_threshold_select_reg.reg_num'
#1431: FILE: drivers/video/via/hw.c:1391:
+		    fifo_threshold_select_reg.
+		    iga2_fifo_threshold_select_reg.reg_num;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'fifo_threshold_select_reg.iga2_fifo_threshold_select_reg.reg'
#1434: FILE: drivers/video/via/hw.c:1394:
+		    fifo_threshold_select_reg.
+		    iga2_fifo_threshold_select_reg.reg;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'fifo_high_threshold_select_reg.iga2_fifo_high_threshold_select_reg.reg_num'
#1442: FILE: drivers/video/via/hw.c:1402:
+		    fifo_high_threshold_select_reg.
+		    iga2_fifo_high_threshold_select_reg.reg_num;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'fifo_high_threshold_select_reg.iga2_fifo_high_threshold_select_reg.reg'
#1445: FILE: drivers/video/via/hw.c:1405:
+		    fifo_high_threshold_select_reg.
+		    iga2_fifo_high_threshold_select_reg.reg;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'display_queue_expire_num_reg.iga2_display_queue_expire_num_reg.reg_num'
#1454: FILE: drivers/video/via/hw.c:1414:
+		    display_queue_expire_num_reg.
+		    iga2_display_queue_expire_num_reg.reg_num;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'display_queue_expire_num_reg.iga2_display_queue_expire_num_reg.reg'
#1457: FILE: drivers/video/via/hw.c:1417:
+		    display_queue_expire_num_reg.
+		    iga2_display_queue_expire_num_reg.reg;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1460: FILE: drivers/video/via/hw.c:1420:
+
+	}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1462: FILE: drivers/video/via/hw.c:1422:
+
+}

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1491: FILE: drivers/video/via/hw.c:1451:
+	return (0);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'set_iga == IGA1'
#1502: FILE: drivers/video/via/hw.c:1462:
+	if ((set_iga == IGA1) || (set_iga == IGA1_IGA2)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'set_iga == IGA1_IGA2'
#1502: FILE: drivers/video/via/hw.c:1462:
+	if ((set_iga == IGA1) || (set_iga == IGA1_IGA2)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'set_iga == IGA2'
#1530: FILE: drivers/video/via/hw.c:1490:
+	if ((set_iga == IGA2) || (set_iga == IGA1_IGA2)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'set_iga == IGA1_IGA2'
#1530: FILE: drivers/video/via/hw.c:1490:
+	if ((set_iga == IGA2) || (set_iga == IGA1_IGA2)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'set_iga == IGA1'
#1558: FILE: drivers/video/via/hw.c:1518:
+	if ((set_iga == IGA1) || (set_iga == IGA1_IGA2)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'set_iga == IGA1_IGA2'
#1558: FILE: drivers/video/via/hw.c:1518:
+	if ((set_iga == IGA1) || (set_iga == IGA1_IGA2)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'set_iga == IGA2'
#1563: FILE: drivers/video/via/hw.c:1523:
+	if ((set_iga == IGA2) || (set_iga == IGA1_IGA2)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'set_iga == IGA1_IGA2'
#1563: FILE: drivers/video/via/hw.c:1523:
+	if ((set_iga == IGA2) || (set_iga == IGA1_IGA2)) {

CHECK:CAMELCASE: Avoid CamelCase: <VIARMisc>
#1569: FILE: drivers/video/via/hw.c:1529:
+	RegTemp = inb(VIARMisc);

CHECK:CAMELCASE: Avoid CamelCase: <VIAWMisc>
#1570: FILE: drivers/video/via/hw.c:1530:
+	outb(RegTemp | (BIT2 + BIT3), VIAWMisc);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'device_timing.hor_total'
#1588: FILE: drivers/video/via/hw.c:1548:
+				    IGA1_HOR_TOTAL_FORMULA(device_timing.
+							   hor_total);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'device_timing.hor_addr'
#1595: FILE: drivers/video/via/hw.c:1555:
+				    IGA1_HOR_ADDR_FORMULA(device_timing.
+							  hor_addr);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'device_timing.ver_total'
#1636: FILE: drivers/video/via/hw.c:1596:
+				    IGA1_VER_TOTAL_FORMULA(device_timing.
+							   ver_total);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'device_timing.ver_addr'
#1643: FILE: drivers/video/via/hw.c:1603:
+				    IGA1_VER_ADDR_FORMULA(device_timing.
+							  ver_addr);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1682: FILE: drivers/video/via/hw.c:1642:
+
+			}

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'device_timing.hor_total'
#1690: FILE: drivers/video/via/hw.c:1650:
+				    IGA2_HOR_TOTAL_FORMULA(device_timing.
+							   hor_total);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'device_timing.hor_addr'
#1697: FILE: drivers/video/via/hw.c:1657:
+				    IGA2_HOR_ADDR_FORMULA(device_timing.
+							  hor_addr);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1722: FILE: drivers/video/via/hw.c:1682:
+				if (UNICHROME_CN700 <= chip_info.gfx_chip_name)

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'iga2_crtc_reg.hor_sync_start.reg_num'
#1725: FILE: drivers/video/via/hw.c:1685:
+					    iga2_crtc_reg.hor_sync_start.
+					    reg_num;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'device_timing.ver_total'
#1742: FILE: drivers/video/via/hw.c:1702:
+				    IGA2_VER_TOTAL_FORMULA(device_timing.
+							   ver_total);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'device_timing.ver_addr'
#1749: FILE: drivers/video/via/hw.c:1709:
+				    IGA2_VER_ADDR_FORMULA(device_timing.
+							  ver_addr);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1788: FILE: drivers/video/via/hw.c:1748:
+
+			}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mode_index == VIA_RES_640X480'
#1848: FILE: drivers/video/via/hw.c:1808:
+	if ((LCD_ON | DVI_ON) && (mode_index == VIA_RES_640X480)
+	    && (crt_setting_info.refresh_rate == 60)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'crt_setting_info.refresh_rate == 60'
#1848: FILE: drivers/video/via/hw.c:1808:
+	if ((LCD_ON | DVI_ON) && (mode_index == VIA_RES_640X480)
+	    && (crt_setting_info.refresh_rate == 60)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1849: FILE: drivers/video/via/hw.c:1809:
+	if ((LCD_ON | DVI_ON) && (mode_index == VIA_RES_640X480)
+	    && (crt_setting_info.refresh_rate == 60)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'chip_info.gfx_chip_name != UNICHROME_CLE266'
#1899: FILE: drivers/video/via/hw.c:1859:
+	if ((chip_info.gfx_chip_name != UNICHROME_CLE266)
+	    && (chip_info.gfx_chip_name != UNICHROME_K400))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'chip_info.gfx_chip_name != UNICHROME_K400'
#1899: FILE: drivers/video/via/hw.c:1859:
+	if ((chip_info.gfx_chip_name != UNICHROME_CLE266)
+	    && (chip_info.gfx_chip_name != UNICHROME_K400))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1900: FILE: drivers/video/via/hw.c:1860:
+	if ((chip_info.gfx_chip_name != UNICHROME_CLE266)
+	    && (chip_info.gfx_chip_name != UNICHROME_K400))

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1910: FILE: drivers/video/via/hw.c:1870:
+
+}

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1930: FILE: drivers/video/via/hw.c:1890:
+	return (crt_reg);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1975: FILE: drivers/video/via/hw.c:1935:
+	} else {
+

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1989: FILE: drivers/video/via/hw.c:1949:
+		if (IGA2 == lvds_setting_info2.iga_path) {

WARNING:TYPO_SPELLING: 'Indentify' may be misspelled - perhaps 'Identify'?
#2003: FILE: drivers/video/via/hw.c:1963:
+	/* Indentify GFX Chip Name */
 	   ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pdev"
#2007: FILE: drivers/video/via/hw.c:1967:
+	if (pdev != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pdev"
#2013: FILE: drivers/video/via/hw.c:1973:
+	if (pdev != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pdev"
#2019: FILE: drivers/video/via/hw.c:1979:
+	if (pdev != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pdev"
#2025: FILE: drivers/video/via/hw.c:1985:
+	if (pdev != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pdev"
#2031: FILE: drivers/video/via/hw.c:1991:
+	if (pdev != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pdev"
#2037: FILE: drivers/video/via/hw.c:1997:
+	if (pdev != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pdev"
#2042: FILE: drivers/video/via/hw.c:2002:
+	if (pdev != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pdev"
#2048: FILE: drivers/video/via/hw.c:2008:
+	if (pdev != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pdev"
#2054: FILE: drivers/video/via/hw.c:2014:
+	if (pdev != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pdev"
#2060: FILE: drivers/video/via/hw.c:2020:
+	if (pdev != NULL)

WARNING:TYPO_SPELLING: 'orignal' may be misspelled - perhaps 'original'?
#2072: FILE: drivers/video/via/hw.c:2032:
+		write_reg(CR4F, VIACR, tmp);	/* restore orignal CR4F value */
 		                            	           ^^^^^^^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2075: FILE: drivers/video/via/hw.c:2035:
+	if (UNICHROME_CX700 == chip_info.gfx_chip_name) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2091: FILE: drivers/video/via/hw.c:2051:
+	if (INTERFACE_NONE == chip_info.tmds_chip_info.output_interface) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'display_hardware_layout ==
 				     HW_LAYOUT_DVI_ONLY'
#2096: FILE: drivers/video/via/hw.c:2056:
+				if ((display_hardware_layout ==
+				     HW_LAYOUT_DVI_ONLY)
+				    || (display_hardware_layout ==
+					HW_LAYOUT_LCD_DVI)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'display_hardware_layout ==
 					HW_LAYOUT_LCD_DVI'
#2096: FILE: drivers/video/via/hw.c:2056:
+				if ((display_hardware_layout ==
+				     HW_LAYOUT_DVI_ONLY)
+				    || (display_hardware_layout ==
+					HW_LAYOUT_LCD_DVI)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2098: FILE: drivers/video/via/hw.c:2058:
+				     HW_LAYOUT_DVI_ONLY)
+				    || (display_hardware_layout ==

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'chip_info.tmds_chip_info.output_interface'
#2101: FILE: drivers/video/via/hw.c:2061:
+					chip_info.tmds_chip_info.
+					    output_interface = INTERFACE_TMDS;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'chip_info.tmds_chip_info.output_interface'
#2104: FILE: drivers/video/via/hw.c:2064:
+					chip_info.tmds_chip_info.
+					    output_interface = INTERFACE_NONE;

WARNING:TYPO_SPELLING: 'singel' may be misspelled - perhaps 'single'?
#2147: FILE: drivers/video/via/hw.c:2107:
+	/*If CX700,two singel LCD, we need to reassign
 	               ^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2148: FILE: drivers/video/via/hw.c:2108:
+	/*If CX700,two singel LCD, we need to reassign
+	   LCD interface to different LVDS port */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2148: FILE: drivers/video/via/hw.c:2108:
+	   LCD interface to different LVDS port */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'UNICHROME_CX700 == chip_info.gfx_chip_name'
#2149: FILE: drivers/video/via/hw.c:2109:
+	if ((UNICHROME_CX700 == chip_info.gfx_chip_name)
+	    && (HW_LAYOUT_LCD1_LCD2 == display_hardware_layout)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'HW_LAYOUT_LCD1_LCD2 == display_hardware_layout'
#2149: FILE: drivers/video/via/hw.c:2109:
+	if ((UNICHROME_CX700 == chip_info.gfx_chip_name)
+	    && (HW_LAYOUT_LCD1_LCD2 == display_hardware_layout)) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2149: FILE: drivers/video/via/hw.c:2109:
+	if ((UNICHROME_CX700 == chip_info.gfx_chip_name)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2150: FILE: drivers/video/via/hw.c:2110:
+	if ((UNICHROME_CX700 == chip_info.gfx_chip_name)
+	    && (HW_LAYOUT_LCD1_LCD2 == display_hardware_layout)) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2150: FILE: drivers/video/via/hw.c:2110:
+	    && (HW_LAYOUT_LCD1_LCD2 == display_hardware_layout)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'INTEGRATED_LVDS == chip_info.lvds_chip_info.lvds_chip_name'
#2151: FILE: drivers/video/via/hw.c:2111:
+		if ((INTEGRATED_LVDS == chip_info.lvds_chip_info.lvds_chip_name)
+		    && (INTEGRATED_LVDS ==
+			chip_info.lvds_chip_info2.lvds_chip_name)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'INTEGRATED_LVDS ==
 			chip_info.lvds_chip_info2.lvds_chip_name'
#2151: FILE: drivers/video/via/hw.c:2111:
+		if ((INTEGRATED_LVDS == chip_info.lvds_chip_info.lvds_chip_name)
+		    && (INTEGRATED_LVDS ==
+			chip_info.lvds_chip_info2.lvds_chip_name)) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2151: FILE: drivers/video/via/hw.c:2111:
+		if ((INTEGRATED_LVDS == chip_info.lvds_chip_info.lvds_chip_name)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2152: FILE: drivers/video/via/hw.c:2112:
+		if ((INTEGRATED_LVDS == chip_info.lvds_chip_info.lvds_chip_name)
+		    && (INTEGRATED_LVDS ==

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2217: FILE: drivers/video/via/hw.c:2177:
+	/*If LCD2_ON, on cx700, internal lvds's information
+	is keeped on lvds_setting_info2 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2217: FILE: drivers/video/via/hw.c:2177:
+	is keeped on lvds_setting_info2 */

CHECK:CAMELCASE: Avoid CamelCase: <VIAStatus>
#2266: FILE: drivers/video/via/hw.c:2226:
+	inb(VIAStatus);

CHECK:CAMELCASE: Avoid CamelCase: <CLE266_ModeXregs>
#2272: FILE: drivers/video/via/hw.c:2232:
+		write_regx(CLE266_ModeXregs, NUM_TOTAL_CLE266_ModeXregs);

CHECK:CAMELCASE: Avoid CamelCase: <NUM_TOTAL_CLE266_ModeXregs>
#2272: FILE: drivers/video/via/hw.c:2232:
+		write_regx(CLE266_ModeXregs, NUM_TOTAL_CLE266_ModeXregs);

CHECK:CAMELCASE: Avoid CamelCase: <KM400_ModeXregs>
#2276: FILE: drivers/video/via/hw.c:2236:
+		write_regx(KM400_ModeXregs, NUM_TOTAL_KM400_ModeXregs);

CHECK:CAMELCASE: Avoid CamelCase: <NUM_TOTAL_KM400_ModeXregs>
#2276: FILE: drivers/video/via/hw.c:2236:
+		write_regx(KM400_ModeXregs, NUM_TOTAL_KM400_ModeXregs);

CHECK:CAMELCASE: Avoid CamelCase: <CN400_ModeXregs>
#2281: FILE: drivers/video/via/hw.c:2241:
+		write_regx(CN400_ModeXregs, NUM_TOTAL_CN400_ModeXregs);

CHECK:CAMELCASE: Avoid CamelCase: <NUM_TOTAL_CN400_ModeXregs>
#2281: FILE: drivers/video/via/hw.c:2241:
+		write_regx(CN400_ModeXregs, NUM_TOTAL_CN400_ModeXregs);

CHECK:CAMELCASE: Avoid CamelCase: <CN700_ModeXregs>
#2288: FILE: drivers/video/via/hw.c:2248:
+		write_regx(CN700_ModeXregs, NUM_TOTAL_CN700_ModeXregs);

CHECK:CAMELCASE: Avoid CamelCase: <NUM_TOTAL_CN700_ModeXregs>
#2288: FILE: drivers/video/via/hw.c:2248:
+		write_regx(CN700_ModeXregs, NUM_TOTAL_CN700_ModeXregs);

CHECK:CAMELCASE: Avoid CamelCase: <CX700_ModeXregs>
#2292: FILE: drivers/video/via/hw.c:2252:
+		write_regx(CX700_ModeXregs, NUM_TOTAL_CX700_ModeXregs);

CHECK:CAMELCASE: Avoid CamelCase: <NUM_TOTAL_CX700_ModeXregs>
#2292: FILE: drivers/video/via/hw.c:2252:
+		write_regx(CX700_ModeXregs, NUM_TOTAL_CX700_ModeXregs);

CHECK:CAMELCASE: Avoid CamelCase: <VX800_ModeXregs>
#2295: FILE: drivers/video/via/hw.c:2255:
+		write_regx(VX800_ModeXregs, NUM_TOTAL_VX800_ModeXregs);

CHECK:CAMELCASE: Avoid CamelCase: <NUM_TOTAL_VX800_ModeXregs>
#2295: FILE: drivers/video/via/hw.c:2255:
+		write_regx(VX800_ModeXregs, NUM_TOTAL_VX800_ModeXregs);

CHECK:CAMELCASE: Avoid CamelCase: <Misc>
#2304: FILE: drivers/video/via/hw.c:2264:
+	outb(VPIT.Misc, VIAWMisc);

CHECK:CAMELCASE: Avoid CamelCase: <StdSR>
#2307: FILE: drivers/video/via/hw.c:2267:
+	for (i = 1; i <= StdSR; i++) {

CHECK:CAMELCASE: Avoid CamelCase: <StdGR>
#2319: FILE: drivers/video/via/hw.c:2279:
+	for (i = 0; i < StdGR; i++) {

CHECK:CAMELCASE: Avoid CamelCase: <StdAR>
#2325: FILE: drivers/video/via/hw.c:2285:
+	for (i = 0; i < StdAR; i++) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'chip_info.gfx_chip_name == UNICHROME_CLE266'
#2336: FILE: drivers/video/via/hw.c:2296:
+	if ((chip_info.gfx_chip_name == UNICHROME_CLE266)
+	    || (chip_info.gfx_chip_name == UNICHROME_K400)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'chip_info.gfx_chip_name == UNICHROME_K400'
#2336: FILE: drivers/video/via/hw.c:2296:
+	if ((chip_info.gfx_chip_name == UNICHROME_CLE266)
+	    || (chip_info.gfx_chip_name == UNICHROME_K400)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2337: FILE: drivers/video/via/hw.c:2297:
+	if ((chip_info.gfx_chip_name == UNICHROME_CLE266)
+	    || (chip_info.gfx_chip_name == UNICHROME_K400)) {

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'res_patch_table[i].io_reg_table[j].index'
#2344: FILE: drivers/video/via/hw.c:2304:
+					    res_patch_table[i].
+					    io_reg_table[j].index;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'res_patch_table[i].io_reg_table[j].port'
#2347: FILE: drivers/video/via/hw.c:2307:
+					    res_patch_table[i].
+					    io_reg_table[j].port;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'res_patch_table[i].io_reg_table[j].value'
#2350: FILE: drivers/video/via/hw.c:2310:
+					    res_patch_table[i].
+					    io_reg_table[j].value;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'res_patch_table[i].io_reg_table[j].mask'
#2353: FILE: drivers/video/via/hw.c:2313:
+					    res_patch_table[i].
+					    io_reg_table[j].mask;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'chip_info.gfx_chip_name == UNICHROME_CLE266'
#2362: FILE: drivers/video/via/hw.c:2322:
+		if ((chip_info.gfx_chip_name == UNICHROME_CLE266)
+		    || (chip_info.gfx_chip_name == UNICHROME_K400)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'chip_info.gfx_chip_name == UNICHROME_K400'
#2362: FILE: drivers/video/via/hw.c:2322:
+		if ((chip_info.gfx_chip_name == UNICHROME_CLE266)
+		    || (chip_info.gfx_chip_name == UNICHROME_K400)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2363: FILE: drivers/video/via/hw.c:2323:
+		if ((chip_info.gfx_chip_name == UNICHROME_CLE266)
+		    || (chip_info.gfx_chip_name == UNICHROME_K400)) {

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'res_patch_table[i].table_length'
#2370: FILE: drivers/video/via/hw.c:2330:
+					     res_patch_table[i].
+					     table_length; j++) {

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'res_patch_table[i].io_reg_table[j].index'
#2373: FILE: drivers/video/via/hw.c:2333:
+						    res_patch_table[i].
+						    io_reg_table[j].index;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'res_patch_table[i].io_reg_table[j].port'
#2376: FILE: drivers/video/via/hw.c:2336:
+						    res_patch_table[i].
+						    io_reg_table[j].port;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'res_patch_table[i].io_reg_table[j].value'
#2379: FILE: drivers/video/via/hw.c:2339:
+						    res_patch_table[i].
+						    io_reg_table[j].value;

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'res_patch_table[i].io_reg_table[j].mask'
#2382: FILE: drivers/video/via/hw.c:2342:
+						    res_patch_table[i].
+						    io_reg_table[j].mask;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'crt_setting_info.iga_path == IGA2'
#2397: FILE: drivers/video/via/hw.c:2357:
+		if (SAMM_ON && (crt_setting_info.iga_path == IGA2)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2410: FILE: drivers/video/via/hw.c:2370:
+		/* Patch if set_hres is not 8 alignment (1366) to setmode
+		to 8 alignment (1368),there is several pixels (2 pixels)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2411: FILE: drivers/video/via/hw.c:2371:
+		on right side of screen. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmds_setting_info.iga_path == IGA2'
#2420: FILE: drivers/video/via/hw.c:2380:
+		if (SAMM_ON && (tmds_setting_info.iga_path == IGA2)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lvds_setting_info.iga_path == IGA2'
#2434: FILE: drivers/video/via/hw.c:2394:
+		if (SAMM_ON && (lvds_setting_info.iga_path == IGA2)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lvds_setting_info2.iga_path == IGA2'
#2450: FILE: drivers/video/via/hw.c:2410:
+		if (SAMM_ON && (lvds_setting_info2.iga_path == IGA2)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'chip_info.gfx_chip_name == UNICHROME_CX700'
#2466: FILE: drivers/video/via/hw.c:2426:
+	if ((chip_info.gfx_chip_name == UNICHROME_CX700)
+	    && (LCD_ON || DVI_ON))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2467: FILE: drivers/video/via/hw.c:2427:
+	if ((chip_info.gfx_chip_name == UNICHROME_CX700)
+	    && (LCD_ON || DVI_ON))

CHECK:CAMELCASE: Avoid CamelCase: <via_fb_hotplug_Xres>
#2472: FILE: drivers/video/via/hw.c:2432:
+		via_fb_hotplug_Xres = hor_res;

CHECK:CAMELCASE: Avoid CamelCase: <via_fb_hotplug_Yres>
#2473: FILE: drivers/video/via/hw.c:2433:
+		via_fb_hotplug_Yres = ver_res;

CHECK:CAMELCASE: Avoid CamelCase: <DeviceStatus>
#2478: FILE: drivers/video/via/hw.c:2438:
+			DeviceStatus = DVI_Device;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hres == res_map_refresh_tbl[i].hres'
#2498: FILE: drivers/video/via/hw.c:2458:
+		if ((hres == res_map_refresh_tbl[i].hres)
+		    && (vres == res_map_refresh_tbl[i].vres)
+		    && (vmode_refresh == res_map_refresh_tbl[i].vmode_refresh))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vres == res_map_refresh_tbl[i].vres'
#2498: FILE: drivers/video/via/hw.c:2458:
+		if ((hres == res_map_refresh_tbl[i].hres)
+		    && (vres == res_map_refresh_tbl[i].vres)
+		    && (vmode_refresh == res_map_refresh_tbl[i].vmode_refresh))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vmode_refresh == res_map_refresh_tbl[i].vmode_refresh'
#2498: FILE: drivers/video/via/hw.c:2458:
+		if ((hres == res_map_refresh_tbl[i].hres)
+		    && (vres == res_map_refresh_tbl[i].vres)
+		    && (vmode_refresh == res_map_refresh_tbl[i].vmode_refresh))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2499: FILE: drivers/video/via/hw.c:2459:
+		if ((hres == res_map_refresh_tbl[i].hres)
+		    && (vres == res_map_refresh_tbl[i].vres)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2500: FILE: drivers/video/via/hw.c:2460:
+		    && (vres == res_map_refresh_tbl[i].vres)
+		    && (vmode_refresh == res_map_refresh_tbl[i].vmode_refresh))

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2505: FILE: drivers/video/via/hw.c:2465:
+
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#2510: FILE: drivers/video/via/hw.c:2470:
+	int i;
+	for (i = 0; i < NUM_TOTAL_RES_MAP_REFRESH; i++) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hres == res_map_refresh_tbl[i].hres'
#2511: FILE: drivers/video/via/hw.c:2471:
+		if ((hres == res_map_refresh_tbl[i].hres)
+		    && (vres == res_map_refresh_tbl[i].vres)
+		    && (pixclock == res_map_refresh_tbl[i].pixclock))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vres == res_map_refresh_tbl[i].vres'
#2511: FILE: drivers/video/via/hw.c:2471:
+		if ((hres == res_map_refresh_tbl[i].hres)
+		    && (vres == res_map_refresh_tbl[i].vres)
+		    && (pixclock == res_map_refresh_tbl[i].pixclock))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pixclock == res_map_refresh_tbl[i].pixclock'
#2511: FILE: drivers/video/via/hw.c:2471:
+		if ((hres == res_map_refresh_tbl[i].hres)
+		    && (vres == res_map_refresh_tbl[i].vres)
+		    && (pixclock == res_map_refresh_tbl[i].pixclock))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2512: FILE: drivers/video/via/hw.c:2472:
+		if ((hres == res_map_refresh_tbl[i].hres)
+		    && (vres == res_map_refresh_tbl[i].vres)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2513: FILE: drivers/video/via/hw.c:2473:
+		    && (vres == res_map_refresh_tbl[i].vres)
+		    && (pixclock == res_map_refresh_tbl[i].pixclock))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pdev"
#2616: FILE: drivers/video/via/hw.c:2576:
+	if (pdev != NULL) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2624: FILE: drivers/video/via/hw.c:2584:
+
+}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pdev"
#2747: FILE: drivers/video/via/hw.c:2707:
+	if (pdev != NULL) {

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - int get_fb_size_from_pci() should probably be int get_fb_size_from_pci(void)
#2762: FILE: drivers/video/via/hw.c:2722:
+int get_fb_size_from_pci()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

CHECK:CAMELCASE: Avoid CamelCase: <FBSize>
#2764: FILE: drivers/video/via/hw.c:2724:
+	unsigned long configid, deviceid, FBSize = 0;

CHECK:CAMELCASE: Avoid CamelCase: <VideoMemSize>
#2765: FILE: drivers/video/via/hw.c:2725:
+	int VideoMemSize;

CHECK:CAMELCASE: Avoid CamelCase: <DeviceFound>
#2766: FILE: drivers/video/via/hw.c:2726:
+	int DeviceFound = FALSE;

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned long)0xCF8' could be '0xCF8UL'
#2769: FILE: drivers/video/via/hw.c:2729:
+		outl(configid, (unsigned long)0xCF8);

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned long)0xCFC' could be '0xCFCUL'
#2770: FILE: drivers/video/via/hw.c:2730:
+		deviceid = (inl((unsigned long)0xCFC) >> 16) & 0xffff;

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned long)0xCF8' could be '0xCF8UL'
#2775: FILE: drivers/video/via/hw.c:2735:
+			outl(configid + 0xE0, (unsigned long)0xCF8);

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned long)0xCFC' could be '0xCFCUL'
#2776: FILE: drivers/video/via/hw.c:2736:
+			FBSize = inl((unsigned long)0xCFC);

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned long)0xCF8' could be '0xCF8UL'
#2789: FILE: drivers/video/via/hw.c:2749:
+			outl(configid + 0xA0, (unsigned long)0xCF8);

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned long)0xCFC' could be '0xCFCUL'
#2790: FILE: drivers/video/via/hw.c:2750:
+			FBSize = inl((unsigned long)0xCFC);

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2860: FILE: drivers/video/via/hw.c:2820:
+void set_dpa_gfx(int output_interface, struct GFX_DPA_SETTING\

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#2861: FILE: drivers/video/via/hw.c:2821:
+					*p_gfx_dpa_setting)
 					^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <DVP0ClockDri_S>
#2872: FILE: drivers/video/via/hw.c:2832:
+				       p_gfx_dpa_setting->DVP0ClockDri_S, BIT2);

CHECK:CAMELCASE: Avoid CamelCase: <DVP0ClockDri_S1>
#2874: FILE: drivers/video/via/hw.c:2834:
+				       p_gfx_dpa_setting->DVP0ClockDri_S1,

CHECK:CAMELCASE: Avoid CamelCase: <DVP0DataDri_S>
#2877: FILE: drivers/video/via/hw.c:2837:
+				       p_gfx_dpa_setting->DVP0DataDri_S, BIT1);

CHECK:CAMELCASE: Avoid CamelCase: <DVP0DataDri_S1>
#2879: FILE: drivers/video/via/hw.c:2839:
+				       p_gfx_dpa_setting->DVP0DataDri_S1, BIT5);

CHECK:CAMELCASE: Avoid CamelCase: <DVP1Driving>
#2891: FILE: drivers/video/via/hw.c:2851:
+				       p_gfx_dpa_setting->DVP1Driving, 0x0F);

CHECK:CAMELCASE: Avoid CamelCase: <DFPHigh>
#2898: FILE: drivers/video/via/hw.c:2858:
+				       p_gfx_dpa_setting->DFPHigh, 0x0F);

CHECK:CAMELCASE: Avoid CamelCase: <DFPLow>
#2905: FILE: drivers/video/via/hw.c:2865:
+				       p_gfx_dpa_setting->DFPLow, 0x0F);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2934: FILE: drivers/video/via/hw.c:2894:
+
+	}

WARNING:LINE_SPACING: Missing a blank line after declarations
#2945: FILE: drivers/video/via/hw.c:2905:
+	int i = 0, index = 0;
+	vmode_tbl = &CLE266Modes[search_mode_setting(mode_index)];

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000284013.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 86 warnings, 164 checks, 2923 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000284013.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
