WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
> > we will end up scribbling all over memory which is pretty serious so for

WARNING:TYPO_SPELLING: 'guarentee' may be misspelled - perhaps 'guarantee'?
#44: 
remains that the buddy guarentee is that the mem_map is contigious out
                       ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'contigious' may be misspelled - perhaps 'contiguous'?
#44: 
remains that the buddy guarentee is that the mem_map is contigious out
                                                        ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'guarentees' may be misspelled - perhaps 'guarantees'?
#46: 
contiguity.  This code is broken under the guarentees that are set out
                                           ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'guarentee' may be misspelled - perhaps 'guarantee'?
#48: 
currently where a greater guarentee of contigious within a node is
                          ^^^^^^^^^

WARNING:TYPO_SPELLING: 'contigious' may be misspelled - perhaps 'contiguous'?
#48: 
currently where a greater guarentee of contigious within a node is
                                       ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'guarentees' may be misspelled - perhaps 'guarantees'?
#49: 
violated, but right now this code violates the current guarentees.
                                                       ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#54: 
branches in the huge cases?  If so we could make this support dependant
                                                              ^^^^^^^^^

WARNING:TYPO_SPELLING: 'contigious' may be misspelled - perhaps 'contiguous'?
#72: 
    is contigious and uses that to optimise access to the elements of the
       ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'alloctor' may be misspelled - perhaps 'allocator'?
#76: 
    use of the buddy alloctor guarentees for the contiguity of the mem_map,
                     ^^^^^^^^

WARNING:TYPO_SPELLING: 'contigious' may be misspelled - perhaps 'contiguous'?
#77: 
    which ensures that the mem_map is at least contigious for maximmally
                                               ^^^^^^^^^^

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#85: 
    Signed-off-by: Andy Whitcroft <apw@shadowen.org>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#96: FILE: mm/hugetlb.c:357:
+static void clear_gigantic_page(struct page *page,
+			unsigned long addr, unsigned long sz)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#102: FILE: mm/hugetlb.c:363:
+	for (i = 0; i < sz/PAGE_SIZE; i++, p = mem_map_next(p, page, i)) {
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: mm/hugetlb.c:384:
+static void copy_gigantic_page(struct page *dst, struct page *src,
+			   unsigned long addr, struct vm_area_struct *vma)

WARNING:LINE_SPACING: Missing a blank line after declarations
#129: FILE: mm/hugetlb.c:390:
+	struct page *src_base = src;
+	might_sleep();

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#132: FILE: mm/hugetlb.c:393:
+		copy_user_highpage(dst, src, addr + i*PAGE_SIZE, vma);
 		                                     ^

WARNING:TYPO_SPELLING: 'withing' may be misspelled - perhaps 'within'?
#180: FILE: mm/internal.h:68:
+ * Iterator over all subpages withing the maximally aligned gigantic
                               ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#184: FILE: mm/internal.h:72:
+static inline struct page *mem_map_next(struct page *iter,
+						struct page *base, int offset)

WARNING:LINE_SPACING: Missing a blank line after declarations
#188: FILE: mm/internal.h:76:
+		unsigned long pfn = page_to_pfn(base) + offset;
+		if (!pfn_valid(pfn))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000217676.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 15 warnings, 5 checks, 100 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000217676.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
