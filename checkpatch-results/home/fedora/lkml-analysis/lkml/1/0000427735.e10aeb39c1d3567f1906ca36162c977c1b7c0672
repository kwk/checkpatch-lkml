WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
 - on joydev_connect check ranges and zero calibration if found out of range

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: joydev.c:56:
+       __s16 absmin[ABS_MAX + 1];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: joydev.c:57:
+       __s16 absmax[ABS_MAX + 1];$

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#69: FILE: joydev.c:72:
struct joydev *joydev)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#70: FILE: joydev.c:73:
+static void joydev_calculate_correction(int min, int max, int axis,
+{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: joydev.c:74:
+       int t, j = joydev->abspam[axis];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: joydev.c:75:
+       int flat = joydev->handle.dev->absflat[j];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: joydev.c:77:
+       joydev->corr[axis].coef[0] = (max + min) / 2 - flat;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: joydev.c:78:
+       joydev->corr[axis].coef[1] = (max + min) / 2 + flat;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: joydev.c:79:
+       if (!(t = ((max - min) / 2 - 2 * flat)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#76: FILE: joydev.c:79:
+       if (!(t = ((max - min) / 2 - 2 * flat)))
+               return;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#76: FILE: joydev.c:79:
+       if (!(t = ((max - min) / 2 - 2 * flat)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#77: FILE: joydev.c:80:
+               return;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: joydev.c:80:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: joydev.c:81:
+       joydev->corr[axis].coef[2] = (1 << 29) / t;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: joydev.c:82:
+       joydev->corr[axis].coef[3] = (1 << 29) / t;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: joydev.c:121:
+                       /* recalibration if needed */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: joydev.c:122:
+                       if (value < joydev->absmin[code]) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: joydev.c:122:
+                       if (value < joydev->absmin[code]) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#90: FILE: joydev.c:122:
+                       if (value < joydev->absmin[code]) {
+                               joydev->absmin[code] = value;

ERROR:CODE_INDENT: code indent should use tabs where possible
#91: FILE: joydev.c:123:
+                               joydev->absmin[code] = value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: joydev.c:123:
+                               joydev->absmin[code] = value;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#92: FILE: joydev.c:124:
+                               joydev_calculate_correction(value,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: joydev.c:124:
+                               joydev_calculate_correction(value,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: joydev.c:125:
+                       } else if (value > joydev->absmax[code]) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#94: FILE: joydev.c:125:
+                               joydev_calculate_correction(value,
+                       } else if (value > joydev->absmax[code]) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: joydev.c:125:
+                       } else if (value > joydev->absmax[code]) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#94: FILE: joydev.c:125:
+                       } else if (value > joydev->absmax[code]) {
+                               joydev->absmax[code] = value;

ERROR:CODE_INDENT: code indent should use tabs where possible
#95: FILE: joydev.c:126:
+                               joydev->absmax[code] = value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: joydev.c:126:
+                               joydev->absmax[code] = value;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: joydev.c:128:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: joydev.c:128:
+                       }$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#99: FILE: joydev.c:128:
+
+                       }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: joydev.c:496:
+       int i, j, minor;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: joydev.c:541:
+               joydev->absmin[i] = dev->absmin[j];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: joydev.c:541:
+               joydev->absmin[i] = dev->absmin[j];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: joydev.c:542:
+               joydev->absmax[i] = dev->absmax[j];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: joydev.c:542:
+               joydev->absmax[i] = dev->absmax[j];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: joydev.c:543:
+               if (joydev->absmax[i] == joydev->absmin[i]) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: joydev.c:543:
+               if (joydev->absmax[i] == joydev->absmin[i]) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 22)
#120: FILE: joydev.c:543:
+               if (joydev->absmax[i] == joydev->absmin[i]) {
                       joydev->corr[i].type = JS_CORR_NONE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: joydev.c:551:
+               if (dev->abs[j] > joydev->absmax[i] || dev->abs[j] <$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: joydev.c:551:
+               if (dev->abs[j] > joydev->absmax[i] || dev->abs[j] <$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#137: FILE: joydev.c:551:
+               if (dev->abs[j] > joydev->absmax[i] || dev->abs[j] <
[...]
+                       printk("Joydev: Bad axis range, recalibrating

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: joydev.c:552:
+                       printk("Joydev: Bad axis range, recalibrating$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: joydev.c:552:
+                       printk("Joydev: Bad axis range, recalibrating$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#139: FILE: joydev.c:552:
+                       printk("Joydev: Bad axis range, recalibrating

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: joydev.c:553:
+                       joydev_calculate_correction(0, 0, i, joydev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: joydev.c:553:
+                       joydev_calculate_correction(0, 0, i, joydev);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: joydev.c:554:
+               } else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: joydev.c:554:
+               } else$

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: joydev.c:555:
+                       joydev_calculate_correction(joydev->absmin[i],$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: joydev.c:555:
+                       joydev_calculate_correction(joydev->absmin[i],$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000427735.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 18 errors, 32 warnings, 3 checks, 88 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000427735.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
