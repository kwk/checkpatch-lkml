WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

CHECK:CAMELCASE: Avoid CamelCase: <numDirs>
#50: FILE: fs/udf/ialloc.c:48:
+			udf_sb_lvidiu(sb)->numDirs =

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <numFiles>
#55: FILE: fs/udf/ialloc.c:51:
+			udf_sb_lvidiu(sb)->numFiles =

CHECK:CAMELCASE: Avoid CamelCase: <minUDFWriteRev>
#85: FILE: fs/udf/super.c:479:
+		int write_rev = le16_to_cpu(udf_sb_lvidiu(sb)->minUDFWriteRev);

CHECK:CAMELCASE: Avoid CamelCase: <impIdent>
#95: FILE: fs/udf/super.c:1384:
+		udf_sb_lvidiu(sb)->impIdent.identSuffix[0] = UDF_OS_CLASS_UNIX;

CHECK:CAMELCASE: Avoid CamelCase: <identSuffix>
#95: FILE: fs/udf/super.c:1384:
+		udf_sb_lvidiu(sb)->impIdent.identSuffix[0] = UDF_OS_CLASS_UNIX;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#116: FILE: fs/udf/super.c:1414:
+		if (UDF_MAX_WRITE_VERSION > le16_to_cpu(udf_sb_lvidiu(sb)->maxUDFWriteRev))

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:CAMELCASE: Avoid CamelCase: <maxUDFWriteRev>
#116: FILE: fs/udf/super.c:1414:
+		if (UDF_MAX_WRITE_VERSION > le16_to_cpu(udf_sb_lvidiu(sb)->maxUDFWriteRev))

CHECK:CAMELCASE: Avoid CamelCase: <minUDFReadRev>
#118: FILE: fs/udf/super.c:1416:
+		if (UDF_SB_UDFREV(sb) > le16_to_cpu(udf_sb_lvidiu(sb)->minUDFReadRev))

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#132: FILE: fs/udf/super.c:1543:
+		uint16_t minUDFReadRev = le16_to_cpu(udf_sb_lvidiu(sb)->minUDFReadRev);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#133: FILE: fs/udf/super.c:1544:
+		uint16_t minUDFWriteRev = le16_to_cpu(udf_sb_lvidiu(sb)->minUDFWriteRev);

CHECK:CAMELCASE: Avoid CamelCase: <logicalVolIntegrityDescImpUse>
#162: FILE: fs/udf/udf_sb.h:98:
+static inline struct logicalVolIntegrityDescImpUse *udf_sb_lvidiu(struct super_block *sb)

CHECK:CAMELCASE: Avoid CamelCase: <logicalVolIntegrityDesc>
#164: FILE: fs/udf/udf_sb.h:100:
+	struct logicalVolIntegrityDesc *lvid = udf_sb_lvid(sb);

CHECK:CAMELCASE: Avoid CamelCase: <numOfPartitions>
#165: FILE: fs/udf/udf_sb.h:101:
+	__u32 number_of_partitions = le32_to_cpu(lvid->numOfPartitions);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#166: FILE: fs/udf/udf_sb.h:102:
+	__u32 offset = number_of_partitions * 2 * sizeof(uint32_t)/sizeof(uint8_t);
 	                                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#167: FILE: fs/udf/udf_sb.h:103:
+	__u32 offset = number_of_partitions * 2 * sizeof(uint32_t)/sizeof(uint8_t);
+	return (struct logicalVolIntegrityDescImpUse *)&(lvid->impUse[offset]);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around lvid->impUse[offset]
#167: FILE: fs/udf/udf_sb.h:103:
+	return (struct logicalVolIntegrityDescImpUse *)&(lvid->impUse[offset]);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:CAMELCASE: Avoid CamelCase: <impUse>
#167: FILE: fs/udf/udf_sb.h:103:
+	return (struct logicalVolIntegrityDescImpUse *)&(lvid->impUse[offset]);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000343819.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 15 checks, 121 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000343819.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
