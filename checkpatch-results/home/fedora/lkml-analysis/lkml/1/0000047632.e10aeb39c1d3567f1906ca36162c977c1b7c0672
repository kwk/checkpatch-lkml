WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#64: FILE: drivers/input/misc/Kconfig:320:
+config INPUT_MMA7455L
+ tristate "Freescale MMA7455L 3-axis accelerometer"
+ depends on SPI_MASTER
+ help
+   SPI driver for the Freescale MMA7455L 3-axis accelerometer.
+
+   The userspace interface is a 3-axis (X/Y/Z) relative movement
+   Linux input device, reporting REL_[XYZ] events.
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#73: FILE: drivers/input/misc/Kconfig:328:
endif

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#86: FILE: drivers/input/misc/mma7455l.c:30:
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#91: FILE: drivers/input/misc/mma7455l.c:1:
+/* Linux kernel driver for the Freescale MMA7455L 3-axis accelerometer

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#109: FILE: drivers/input/misc/mma7455l.c:19:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#110: FILE: drivers/input/misc/mma7455l.c:20:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: drivers/input/misc/mma7455l.c:52:
+ MMA7455L_REG_XOUTL = 0x00,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: drivers/input/misc/mma7455l.c:53:
+ MMA7455L_REG_XOUTH = 0x01,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: drivers/input/misc/mma7455l.c:54:
+ MMA7455L_REG_YOUTL = 0x02,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: drivers/input/misc/mma7455l.c:55:
+ MMA7455L_REG_YOUTH = 0x03,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: drivers/input/misc/mma7455l.c:56:
+ MMA7455L_REG_ZOUTL = 0x04,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: drivers/input/misc/mma7455l.c:57:
+ MMA7455L_REG_ZOUTH = 0x05,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: drivers/input/misc/mma7455l.c:58:
+ MMA7455L_REG_XOUT8 = 0x06,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: drivers/input/misc/mma7455l.c:59:
+ MMA7455L_REG_YOUT8 = 0x07,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: drivers/input/misc/mma7455l.c:60:
+ MMA7455L_REG_ZOUT8 = 0x08,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: drivers/input/misc/mma7455l.c:61:
+ MMA7455L_REG_STATUS = 0x09,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: drivers/input/misc/mma7455l.c:62:
+ MMA7455L_REG_DETSRC = 0x0a,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: drivers/input/misc/mma7455l.c:63:
+ MMA7455L_REG_TOUT = 0x0b,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: drivers/input/misc/mma7455l.c:64:
+ MMA7455L_REG_RESERVED1 = 0x0c,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: drivers/input/misc/mma7455l.c:65:
+ MMA7455L_REG_I2CAD = 0x0d,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: drivers/input/misc/mma7455l.c:66:
+ MMA7455L_REG_USRINF = 0x0e,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: drivers/input/misc/mma7455l.c:67:
+ MMA7455L_REG_WHOAMI = 0x0f,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: drivers/input/misc/mma7455l.c:68:
+ MMA7455L_REG_XOFFL = 0x10,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: drivers/input/misc/mma7455l.c:69:
+ MMA7455L_REG_XOFFH = 0x11,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: drivers/input/misc/mma7455l.c:70:
+ MMA7455L_REG_YOFFL = 0x12,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: drivers/input/misc/mma7455l.c:71:
+ MMA7455L_REG_YOFFH = 0x13,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: drivers/input/misc/mma7455l.c:72:
+ MMA7455L_REG_ZOFFL = 0x14,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: drivers/input/misc/mma7455l.c:73:
+ MMA7455L_REG_ZOFFH = 0x15,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: drivers/input/misc/mma7455l.c:74:
+ MMA7455L_REG_MCTL = 0x16,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: drivers/input/misc/mma7455l.c:75:
+ MMA7455L_REG_INTRST = 0x17,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: drivers/input/misc/mma7455l.c:76:
+ MMA7455L_REG_CTL1 = 0x18,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: drivers/input/misc/mma7455l.c:77:
+ MMA7455L_REG_CTL2 = 0x19,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: drivers/input/misc/mma7455l.c:78:
+ MMA7455L_REG_LDTH = 0x1a,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: drivers/input/misc/mma7455l.c:79:
+ MMA7455L_REG_PDTH = 0x1b,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: drivers/input/misc/mma7455l.c:80:
+ MMA7455L_REG_PW = 0x1c,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: drivers/input/misc/mma7455l.c:81:
+ MMA7455L_REG_LT = 0x1d,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: drivers/input/misc/mma7455l.c:82:
+ MMA7455L_REG_TW = 0x1e,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: drivers/input/misc/mma7455l.c:83:
+ MMA7455L_REG_RESERVED2 = 0x1f,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: drivers/input/misc/mma7455l.c:87:
+ MMA7455L_STATUS_XDA = 0x08,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: drivers/input/misc/mma7455l.c:88:
+ MMA7455L_STATUS_YDA = 0x10,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: drivers/input/misc/mma7455l.c:89:
+ MMA7455L_STATUS_ZDA = 0x20,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: drivers/input/misc/mma7455l.c:93:
+ MMA7455L_MODE_STANDBY = 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: drivers/input/misc/mma7455l.c:94:
+ MMA7455L_MODE_MEASUREMENT = 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: drivers/input/misc/mma7455l.c:95:
+ MMA7455L_MODE_LEVELDETECTION = 0x42, /* Set DRPD to on */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: drivers/input/misc/mma7455l.c:96:
+ MMA7455L_MODE_PULSEDETECTION = 0x43, /* Set DRPD to on */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: drivers/input/misc/mma7455l.c:97:
+ MMA7455L_MODE_MASK = 0x43,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: drivers/input/misc/mma7455l.c:101:
+ MMA7455L_GSELECT_8 = 0x0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: drivers/input/misc/mma7455l.c:102:
+ MMA7455L_GSELECT_2 = 0x4,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: drivers/input/misc/mma7455l.c:103:
+ MMA7455L_GSELECT_4 = 0x8,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: drivers/input/misc/mma7455l.c:104:
+ MMA7455L_GSELECT_MASK = 0xC,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: drivers/input/misc/mma7455l.c:111:
+ struct spi_device *spi_dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: drivers/input/misc/mma7455l.c:112:
+ struct input_dev *input_dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: drivers/input/misc/mma7455l.c:113:
+ struct mutex lock;$

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#203: FILE: drivers/input/misc/mma7455l.c:113:
+ struct mutex lock;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: drivers/input/misc/mma7455l.c:114:
+ struct delayed_work work;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: drivers/input/misc/mma7455l.c:116:
+ u8 mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: drivers/input/misc/mma7455l.c:117:
+ u8 gSelect;$

CHECK:CAMELCASE: Avoid CamelCase: <gSelect>
#207: FILE: drivers/input/misc/mma7455l.c:117:
+ u8 gSelect;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: drivers/input/misc/mma7455l.c:119:
+ u8 flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: drivers/input/misc/mma7455l.c:120:
+ u8 working;$

CHECK:BIT_MACRO: Prefer using the BIT macro
#215: FILE: drivers/input/misc/mma7455l.c:125:
+#define WRITE_BIT (1 << 7)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: drivers/input/misc/mma7455l.c:130:
+ int rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: drivers/input/misc/mma7455l.c:131:
+ u_int8_t cmd;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'u_int8_t'
#222: FILE: drivers/input/misc/mma7455l.c:131:
+ u_int8_t cmd;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: drivers/input/misc/mma7455l.c:133:
+ cmd = ((reg & 0x3f) << ADDR_SHIFT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: drivers/input/misc/mma7455l.c:134:
+ rc = spi_w8r8(mma->spi_dev, cmd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: drivers/input/misc/mma7455l.c:136:
+ return rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: drivers/input/misc/mma7455l.c:141:
+ u_int8_t ret;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'u_int8_t'
#232: FILE: drivers/input/misc/mma7455l.c:141:
+ u_int8_t ret;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: drivers/input/misc/mma7455l.c:143:
+ mutex_lock(&mma->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: drivers/input/misc/mma7455l.c:144:
+ ret = __reg_read(mma, reg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: drivers/input/misc/mma7455l.c:145:
+ mutex_unlock(&mma->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: drivers/input/misc/mma7455l.c:147:
+ return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: drivers/input/misc/mma7455l.c:152:
+ u8 v1, v2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: drivers/input/misc/mma7455l.c:154:
+ v1 = __reg_read(mma, reg1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: drivers/input/misc/mma7455l.c:155:
+ v2 = __reg_read(mma, reg2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: drivers/input/misc/mma7455l.c:157:
+ return (v2 & 0x4) << 13 | (v2 & 0x3) << 8 | v1;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#252: FILE: drivers/input/misc/mma7455l.c:161:
+static inline int __reg_write(struct mma7455l_info *mma,
+ u_int8_t reg, u_int8_t val)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: drivers/input/misc/mma7455l.c:161:
+ u_int8_t reg, u_int8_t val)$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'u_int8_t'
#252: FILE: drivers/input/misc/mma7455l.c:161:
+ u_int8_t reg, u_int8_t val)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: drivers/input/misc/mma7455l.c:163:
+ u_int8_t buf[2];$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'u_int8_t'
#254: FILE: drivers/input/misc/mma7455l.c:163:
+ u_int8_t buf[2];

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: drivers/input/misc/mma7455l.c:165:
+ buf[0] = ((reg & 0x3f) << ADDR_SHIFT) | WRITE_BIT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: drivers/input/misc/mma7455l.c:166:
+ buf[1] = val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: drivers/input/misc/mma7455l.c:168:
+ return spi_write(mma->spi_dev, buf, sizeof(buf));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: drivers/input/misc/mma7455l.c:173:
+ int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: drivers/input/misc/mma7455l.c:175:
+ mutex_lock(&mma->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: drivers/input/misc/mma7455l.c:176:
+ ret = __reg_write(mma, reg, val);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: drivers/input/misc/mma7455l.c:177:
+ mutex_unlock(&mma->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: drivers/input/misc/mma7455l.c:179:
+ return ret;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: drivers/input/misc/mma7455l.c:183:
+static s16 __reg_write_10(struct mma7455l_info *mma,
+ u8 reg1, u8 reg2, s16 value)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: drivers/input/misc/mma7455l.c:183:
+ u8 reg1, u8 reg2, s16 value)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: drivers/input/misc/mma7455l.c:185:
+ int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: drivers/input/misc/mma7455l.c:186:
+ u8 v1, v2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: drivers/input/misc/mma7455l.c:188:
+ v1 = value & 0xFF;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: drivers/input/misc/mma7455l.c:189:
+ if (value < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#281: FILE: drivers/input/misc/mma7455l.c:189:
+ if (value < 0)
+ v2 = ((value >> 8) & 0x3) | 0x4;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: drivers/input/misc/mma7455l.c:190:
+ v2 = ((value >> 8) & 0x3) | 0x4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: drivers/input/misc/mma7455l.c:191:
+ else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#283: FILE: drivers/input/misc/mma7455l.c:191:
+ else
+ v2 = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: drivers/input/misc/mma7455l.c:192:
+ v2 = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: drivers/input/misc/mma7455l.c:194:
+ ret = __reg_write(mma, reg1, v1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: drivers/input/misc/mma7455l.c:195:
+ ret = __reg_write(mma, reg2, v2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: drivers/input/misc/mma7455l.c:196:
+ return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: drivers/input/misc/mma7455l.c:201:
+ struct mma7455l_info *mma =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: drivers/input/misc/mma7455l.c:202:
+ container_of(work, struct mma7455l_info, work.work);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: drivers/input/misc/mma7455l.c:204:
+ s8 val;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#297: FILE: drivers/input/misc/mma7455l.c:205:
+ s8 val;
+ mma->working = 1;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: drivers/input/misc/mma7455l.c:205:
+ mma->working = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: drivers/input/misc/mma7455l.c:208:
+ if (!(mma->flags & MMA7455L_STATUS_XDA)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#300: FILE: drivers/input/misc/mma7455l.c:208:
+ if (!(mma->flags & MMA7455L_STATUS_XDA)) {
+ val = reg_read(mma, MMA7455L_REG_XOUT8);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: drivers/input/misc/mma7455l.c:209:
+ val = reg_read(mma, MMA7455L_REG_XOUT8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: drivers/input/misc/mma7455l.c:210:
+ input_report_abs(mma->input_dev, ABS_X, val);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: drivers/input/misc/mma7455l.c:211:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: drivers/input/misc/mma7455l.c:212:
+ if (!(mma->flags & MMA7455L_STATUS_YDA)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#304: FILE: drivers/input/misc/mma7455l.c:212:
+ if (!(mma->flags & MMA7455L_STATUS_YDA)) {
+ val = reg_read(mma, MMA7455L_REG_YOUT8);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: drivers/input/misc/mma7455l.c:213:
+ val = reg_read(mma, MMA7455L_REG_YOUT8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: drivers/input/misc/mma7455l.c:214:
+ input_report_abs(mma->input_dev, ABS_Y, val);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: drivers/input/misc/mma7455l.c:215:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: drivers/input/misc/mma7455l.c:216:
+ if (!(mma->flags & MMA7455L_STATUS_ZDA)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#308: FILE: drivers/input/misc/mma7455l.c:216:
+ if (!(mma->flags & MMA7455L_STATUS_ZDA)) {
+ val = reg_read(mma, MMA7455L_REG_ZOUT8);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: drivers/input/misc/mma7455l.c:217:
+ val = reg_read(mma, MMA7455L_REG_ZOUT8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: drivers/input/misc/mma7455l.c:218:
+ input_report_abs(mma->input_dev, ABS_Z, val);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: drivers/input/misc/mma7455l.c:219:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: drivers/input/misc/mma7455l.c:221:
+ mma->working = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: drivers/input/misc/mma7455l.c:222:
+ input_sync(mma->input_dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: drivers/input/misc/mma7455l.c:223:
+ put_device(&mma->spi_dev->dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: drivers/input/misc/mma7455l.c:226:
+ reg_write(mma, MMA7455L_REG_INTRST, 0x3);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: drivers/input/misc/mma7455l.c:227:
+ reg_write(mma, MMA7455L_REG_INTRST, 0x0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: drivers/input/misc/mma7455l.c:228:
+ enable_irq(mma->spi_dev->irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: drivers/input/misc/mma7455l.c:233:
+ int status;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: drivers/input/misc/mma7455l.c:235:
+ get_device(&mma->spi_dev->dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: drivers/input/misc/mma7455l.c:236:
+ status = schedule_delayed_work(&mma->work, HZ / 10);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: drivers/input/misc/mma7455l.c:241:
+ struct mma7455l_info *mma = _mma;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#334: FILE: drivers/input/misc/mma7455l.c:242:
+ struct mma7455l_info *mma = _mma;
+ mma7455l_schedule_work(mma);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: drivers/input/misc/mma7455l.c:242:
+ mma7455l_schedule_work(mma);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#337: FILE: drivers/input/misc/mma7455l.c:245:
+ * the current one */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#337: FILE: drivers/input/misc/mma7455l.c:245:
+ /* Disable any further interrupts until we have processed
+ * the current one */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: drivers/input/misc/mma7455l.c:246:
+ disable_irq(mma->spi_dev->irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: drivers/input/misc/mma7455l.c:247:
+ return IRQ_HANDLED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: drivers/input/misc/mma7455l.c:254:
+ u8 tmp = reg_read(mma, MMA7455L_REG_MCTL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: drivers/input/misc/mma7455l.c:256:
+ *mode = tmp & MMA7455L_MODE_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: drivers/input/misc/mma7455l.c:257:
+ *gSelect = tmp & MMA7455L_GSELECT_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: drivers/input/misc/mma7455l.c:262:
+ reg_write(mma, MMA7455L_REG_MCTL, mode | gSelect);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: drivers/input/misc/mma7455l.c:267:
+ mma->mode = mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: drivers/input/misc/mma7455l.c:268:
+ mma->gSelect = gSelect;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: drivers/input/misc/mma7455l.c:270:
+ reg_write(mma, MMA7455L_REG_MCTL, mma->mode | mma->gSelect);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#366: FILE: drivers/input/misc/mma7455l.c:274:
+static ssize_t show_measure(struct device *dev,
+ struct device_attribute *attr, char *buf)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: drivers/input/misc/mma7455l.c:274:
+ struct device_attribute *attr, char *buf)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: drivers/input/misc/mma7455l.c:276:
+ struct mma7455l_info *mma = dev_get_drvdata(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: drivers/input/misc/mma7455l.c:277:
+ s8 x, y, z;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: drivers/input/misc/mma7455l.c:278:
+ u8 old_Mode, old_gSelect;$

CHECK:CAMELCASE: Avoid CamelCase: <old_Mode>
#370: FILE: drivers/input/misc/mma7455l.c:278:
+ u8 old_Mode, old_gSelect;

CHECK:CAMELCASE: Avoid CamelCase: <old_gSelect>
#370: FILE: drivers/input/misc/mma7455l.c:278:
+ u8 old_Mode, old_gSelect;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: drivers/input/misc/mma7455l.c:280:
+ get_mode(mma, &old_Mode, &old_gSelect);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: drivers/input/misc/mma7455l.c:281:
+ set_mode(mma, MMA7455L_MODE_MEASUREMENT, MMA7455L_GSELECT_2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: drivers/input/misc/mma7455l.c:283:
+ while (reg_read(mma, MMA7455L_REG_STATUS) == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#375: FILE: drivers/input/misc/mma7455l.c:283:
+ while (reg_read(mma, MMA7455L_REG_STATUS) == 0)
+ msleep(10);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: drivers/input/misc/mma7455l.c:284:
+ msleep(10);$

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#376: FILE: drivers/input/misc/mma7455l.c:284:
+ msleep(10);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: drivers/input/misc/mma7455l.c:286:
+ x = reg_read(mma, MMA7455L_REG_XOUT8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: drivers/input/misc/mma7455l.c:287:
+ y = reg_read(mma, MMA7455L_REG_YOUT8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: drivers/input/misc/mma7455l.c:288:
+ z = reg_read(mma, MMA7455L_REG_ZOUT8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: drivers/input/misc/mma7455l.c:290:
+ set_mode(mma, old_Mode, old_gSelect);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: drivers/input/misc/mma7455l.c:291:
+ return sprintf(buf, "%d %d %d\n", x, y, z);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#387: FILE: drivers/input/misc/mma7455l.c:295:
+static ssize_t show_mode(struct device *dev,
+ struct device_attribute *attr, char *buf)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: drivers/input/misc/mma7455l.c:295:
+ struct device_attribute *attr, char *buf)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: drivers/input/misc/mma7455l.c:297:
+ struct mma7455l_info *mma = dev_get_drvdata(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: drivers/input/misc/mma7455l.c:299:
+ switch (mma->mode) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: drivers/input/misc/mma7455l.c:300:
+ case MMA7455L_MODE_STANDBY:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: drivers/input/misc/mma7455l.c:301:
+ return sprintf(buf, "Standby\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: drivers/input/misc/mma7455l.c:302:
+ break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: drivers/input/misc/mma7455l.c:303:
+ case MMA7455L_MODE_MEASUREMENT:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: drivers/input/misc/mma7455l.c:304:
+ return sprintf(buf, "Measurement\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: drivers/input/misc/mma7455l.c:305:
+ break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: drivers/input/misc/mma7455l.c:306:
+ case MMA7455L_MODE_LEVELDETECTION:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: drivers/input/misc/mma7455l.c:307:
+ return sprintf(buf, "Level Detection\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: drivers/input/misc/mma7455l.c:308:
+ break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: drivers/input/misc/mma7455l.c:309:
+ case MMA7455L_MODE_PULSEDETECTION:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: drivers/input/misc/mma7455l.c:310:
+ return sprintf(buf, "Pulse Detection\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: drivers/input/misc/mma7455l.c:311:
+ break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: drivers/input/misc/mma7455l.c:312:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#406: FILE: drivers/input/misc/mma7455l.c:314:
+ return sprintf(buf, "Unknown mode!\n");$

CHECK:CAMELCASE: Avoid CamelCase: <show_gSelect>
#409: FILE: drivers/input/misc/mma7455l.c:317:
+static ssize_t show_gSelect(struct device *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#410: FILE: drivers/input/misc/mma7455l.c:318:
+static ssize_t show_gSelect(struct device *dev,
+ struct device_attribute *attr, char *buf)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: drivers/input/misc/mma7455l.c:318:
+ struct device_attribute *attr, char *buf)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: drivers/input/misc/mma7455l.c:320:
+ struct mma7455l_info *mma = dev_get_drvdata(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: drivers/input/misc/mma7455l.c:322:
+ switch (mma->gSelect) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#415: FILE: drivers/input/misc/mma7455l.c:323:
+ case MMA7455L_GSELECT_8:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: drivers/input/misc/mma7455l.c:324:
+ return sprintf(buf, "8\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: drivers/input/misc/mma7455l.c:325:
+ break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: drivers/input/misc/mma7455l.c:326:
+ case MMA7455L_GSELECT_4:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: drivers/input/misc/mma7455l.c:327:
+ return sprintf(buf, "4\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: drivers/input/misc/mma7455l.c:328:
+ break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: drivers/input/misc/mma7455l.c:329:
+ case MMA7455L_GSELECT_2:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: drivers/input/misc/mma7455l.c:330:
+ return sprintf(buf, "2\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: drivers/input/misc/mma7455l.c:331:
+ break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: drivers/input/misc/mma7455l.c:332:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: drivers/input/misc/mma7455l.c:334:
+ return sprintf(buf, "Unknown gSelect!\n");$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#430: FILE: drivers/input/misc/mma7455l.c:338:
+static ssize_t show_level_threshold(struct device *dev,
+ struct device_attribute *attr, char *buf)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#430: FILE: drivers/input/misc/mma7455l.c:338:
+ struct device_attribute *attr, char *buf)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#432: FILE: drivers/input/misc/mma7455l.c:340:
+ struct mma7455l_info *mma = dev_get_drvdata(dev);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#433: FILE: drivers/input/misc/mma7455l.c:341:
+ struct mma7455l_info *mma = dev_get_drvdata(dev);
+ return sprintf(buf, "%u\n", reg_read(mma, MMA7455L_REG_LDTH));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: drivers/input/misc/mma7455l.c:341:
+ return sprintf(buf, "%u\n", reg_read(mma, MMA7455L_REG_LDTH));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#437: FILE: drivers/input/misc/mma7455l.c:345:
+static ssize_t show_calibration(struct device *dev,
+ struct device_attribute *attr, char *buf)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#437: FILE: drivers/input/misc/mma7455l.c:345:
+ struct device_attribute *attr, char *buf)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#439: FILE: drivers/input/misc/mma7455l.c:347:
+ s16 x, y, z;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#440: FILE: drivers/input/misc/mma7455l.c:348:
+ struct mma7455l_info *mma = dev_get_drvdata(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: drivers/input/misc/mma7455l.c:350:
+ mutex_lock(&mma->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: drivers/input/misc/mma7455l.c:351:
+ x = __reg_read_10(mma, MMA7455L_REG_XOFFL, MMA7455L_REG_XOFFH);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#444: FILE: drivers/input/misc/mma7455l.c:352:
+ y = __reg_read_10(mma, MMA7455L_REG_YOFFL, MMA7455L_REG_YOFFH);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#445: FILE: drivers/input/misc/mma7455l.c:353:
+ z = __reg_read_10(mma, MMA7455L_REG_ZOFFL, MMA7455L_REG_ZOFFH);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#446: FILE: drivers/input/misc/mma7455l.c:354:
+ mutex_unlock(&mma->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: drivers/input/misc/mma7455l.c:356:
+ return sprintf(buf, "%d %d %d\n", x, y, z);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#452: FILE: drivers/input/misc/mma7455l.c:360:
+static ssize_t write_mode(struct device *dev,
+ struct device_attribute *attr, const char *buf, size_t count)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: drivers/input/misc/mma7455l.c:360:
+ struct device_attribute *attr, const char *buf, size_t count)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#454: FILE: drivers/input/misc/mma7455l.c:362:
+ struct mma7455l_info *mma = dev_get_drvdata(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#456: FILE: drivers/input/misc/mma7455l.c:364:
+ if (!strncmp(buf, "Standby", count))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#456: FILE: drivers/input/misc/mma7455l.c:364:
+ if (!strncmp(buf, "Standby", count))
+ update_mode(mma, MMA7455L_MODE_STANDBY, mma->gSelect);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#457: FILE: drivers/input/misc/mma7455l.c:365:
+ update_mode(mma, MMA7455L_MODE_STANDBY, mma->gSelect);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#458: FILE: drivers/input/misc/mma7455l.c:366:
+ else if (!strncmp(buf, "Measurement", count))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#458: FILE: drivers/input/misc/mma7455l.c:366:
+ else if (!strncmp(buf, "Measurement", count))
+ update_mode(mma, MMA7455L_MODE_MEASUREMENT, mma->gSelect);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#459: FILE: drivers/input/misc/mma7455l.c:367:
+ update_mode(mma, MMA7455L_MODE_MEASUREMENT, mma->gSelect);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: drivers/input/misc/mma7455l.c:368:
+ else if (!strncmp(buf, "Level Detection", count))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#460: FILE: drivers/input/misc/mma7455l.c:368:
+ else if (!strncmp(buf, "Level Detection", count))
+ update_mode(mma, MMA7455L_MODE_LEVELDETECTION, mma->gSelect);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: drivers/input/misc/mma7455l.c:369:
+ update_mode(mma, MMA7455L_MODE_LEVELDETECTION, mma->gSelect);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: drivers/input/misc/mma7455l.c:370:
+ else if (!strncmp(buf, "Pulse Detection", count))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#462: FILE: drivers/input/misc/mma7455l.c:370:
+ else if (!strncmp(buf, "Pulse Detection", count))
+ update_mode(mma, MMA7455L_MODE_PULSEDETECTION, mma->gSelect);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: drivers/input/misc/mma7455l.c:371:
+ update_mode(mma, MMA7455L_MODE_PULSEDETECTION, mma->gSelect);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: drivers/input/misc/mma7455l.c:373:
+ return count;$

CHECK:CAMELCASE: Avoid CamelCase: <write_gSelect>
#468: FILE: drivers/input/misc/mma7455l.c:376:
+static ssize_t write_gSelect(struct device *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#469: FILE: drivers/input/misc/mma7455l.c:377:
+static ssize_t write_gSelect(struct device *dev,
+ struct device_attribute *attr, const char *buf, size_t count)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#469: FILE: drivers/input/misc/mma7455l.c:377:
+ struct device_attribute *attr, const char *buf, size_t count)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: drivers/input/misc/mma7455l.c:379:
+ unsigned long v;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: drivers/input/misc/mma7455l.c:380:
+ struct mma7455l_info *mma = dev_get_drvdata(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: drivers/input/misc/mma7455l.c:382:
+ if (strict_strtoul(buf, 10, &v) == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#474: FILE: drivers/input/misc/mma7455l.c:382:
+ if (strict_strtoul(buf, 10, &v) == 0) {
+ switch (v) {

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#474: FILE: drivers/input/misc/mma7455l.c:382:
+ if (strict_strtoul(buf, 10, &v) == 0) {

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#475: FILE: drivers/input/misc/mma7455l.c:383:
+ switch (v) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: drivers/input/misc/mma7455l.c:384:
+ case 8:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: drivers/input/misc/mma7455l.c:385:
+ update_mode(mma, mma->mode, MMA7455L_GSELECT_8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: drivers/input/misc/mma7455l.c:386:
+ break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: drivers/input/misc/mma7455l.c:387:
+ case 4:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#480: FILE: drivers/input/misc/mma7455l.c:388:
+ update_mode(mma, mma->mode, MMA7455L_GSELECT_4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: drivers/input/misc/mma7455l.c:389:
+ break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: drivers/input/misc/mma7455l.c:390:
+ case 2:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: drivers/input/misc/mma7455l.c:391:
+ update_mode(mma, mma->mode, MMA7455L_GSELECT_2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: drivers/input/misc/mma7455l.c:392:
+ break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: drivers/input/misc/mma7455l.c:394:
+ return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: drivers/input/misc/mma7455l.c:395:
+ break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: drivers/input/misc/mma7455l.c:396:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: drivers/input/misc/mma7455l.c:397:
+ return count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: drivers/input/misc/mma7455l.c:398:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: drivers/input/misc/mma7455l.c:400:
+ return -EINVAL;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#496: FILE: drivers/input/misc/mma7455l.c:404:
+static ssize_t write_level_threshold(struct device *dev,
+ struct device_attribute *attr, const char *buf, size_t count)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: drivers/input/misc/mma7455l.c:404:
+ struct device_attribute *attr, const char *buf, size_t count)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: drivers/input/misc/mma7455l.c:406:
+ unsigned long v;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#499: FILE: drivers/input/misc/mma7455l.c:407:
+ struct mma7455l_info *mma = dev_get_drvdata(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#501: FILE: drivers/input/misc/mma7455l.c:409:
+ if (strict_strtoul(buf, 10, &v) == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#501: FILE: drivers/input/misc/mma7455l.c:409:
+ if (strict_strtoul(buf, 10, &v) == 0) {
+ if (v <= 0xFF) {

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#501: FILE: drivers/input/misc/mma7455l.c:409:
+ if (strict_strtoul(buf, 10, &v) == 0) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#502: FILE: drivers/input/misc/mma7455l.c:410:
+ if (v <= 0xFF) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#502: FILE: drivers/input/misc/mma7455l.c:410:
+ if (v <= 0xFF) {
+ reg_write(mma, MMA7455L_REG_LDTH, v);

CHECK:BRACES: braces {} should be used on all arms of this statement
#502: FILE: drivers/input/misc/mma7455l.c:410:
+ if (v <= 0xFF) {
[...]
+ } else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#503: FILE: drivers/input/misc/mma7455l.c:411:
+ reg_write(mma, MMA7455L_REG_LDTH, v);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#504: FILE: drivers/input/misc/mma7455l.c:412:
+ return count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#505: FILE: drivers/input/misc/mma7455l.c:413:
+ } else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#505: FILE: drivers/input/misc/mma7455l.c:413:
+ } else
+ return -EINVAL;

CHECK:BRACES: Unbalanced braces around else statement
#505: FILE: drivers/input/misc/mma7455l.c:413:
+ } else

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: drivers/input/misc/mma7455l.c:414:
+ return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#507: FILE: drivers/input/misc/mma7455l.c:415:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#509: FILE: drivers/input/misc/mma7455l.c:417:
+ return -EINVAL;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#513: FILE: drivers/input/misc/mma7455l.c:421:
+static ssize_t write_calibration(struct device *dev,
+ struct device_attribute *attr, const char *buf, size_t count)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#513: FILE: drivers/input/misc/mma7455l.c:421:
+ struct device_attribute *attr, const char *buf, size_t count)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#515: FILE: drivers/input/misc/mma7455l.c:423:
+ int x, y, z;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#516: FILE: drivers/input/misc/mma7455l.c:424:
+ struct mma7455l_info *mma = dev_get_drvdata(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#518: FILE: drivers/input/misc/mma7455l.c:426:
+ if (sscanf(buf, "%d %d %d", &x, &y, &z) == 3) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#518: FILE: drivers/input/misc/mma7455l.c:426:
+ if (sscanf(buf, "%d %d %d", &x, &y, &z) == 3) {
+ mutex_lock(&mma->lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#519: FILE: drivers/input/misc/mma7455l.c:427:
+ mutex_lock(&mma->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#520: FILE: drivers/input/misc/mma7455l.c:428:
+ __reg_write_10(mma, MMA7455L_REG_XOFFL, MMA7455L_REG_XOFFH, x);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#521: FILE: drivers/input/misc/mma7455l.c:429:
+ __reg_write_10(mma, MMA7455L_REG_YOFFL, MMA7455L_REG_YOFFH, y);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: drivers/input/misc/mma7455l.c:430:
+ __reg_write_10(mma, MMA7455L_REG_ZOFFL, MMA7455L_REG_ZOFFH, z);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#523: FILE: drivers/input/misc/mma7455l.c:431:
+ mutex_unlock(&mma->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: drivers/input/misc/mma7455l.c:433:
+ return count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: drivers/input/misc/mma7455l.c:434:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: drivers/input/misc/mma7455l.c:436:
+ return -EINVAL;$

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_measure' to 'measure_show'
#529: FILE: drivers/input/misc/mma7455l.c:437:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#531: FILE: drivers/input/misc/mma7455l.c:439:
+static DEVICE_ATTR(measure, S_IRUGO, show_measure, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#532: FILE: drivers/input/misc/mma7455l.c:440:
+static DEVICE_ATTR(mode, S_IRUGO | S_IWUGO, show_mode, write_mode);

Exporting world writable sysfs/debugfs files is usually a bad thing.
When done arbitrarily they can introduce serious security bugs.
In the past, some of the debugfs vulnerabilities would seemingly allow
any local user to write arbitrary values into device registers - a
situation from which little good can be expected to emerge.

See: https://lore.kernel.org/linux-arm-kernel/cover.1296818921.git.segoon@openwall.com/

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions 'S_IRUGO | S_IWUGO' used
#532: FILE: drivers/input/misc/mma7455l.c:440:
+static DEVICE_ATTR(mode, S_IRUGO | S_IWUGO, show_mode, write_mode);

The permissions used in DEVICE_ATTR are unusual.
Typically only three permissions are used - 0644 (RW), 0444 (RO)
and 0200 (WO).

See: https://www.kernel.org/doc/html/latest/filesystems/sysfs.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#532: FILE: drivers/input/misc/mma7455l.c:440:
+static DEVICE_ATTR(mode, S_IRUGO | S_IWUGO, show_mode, write_mode);

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#533: FILE: drivers/input/misc/mma7455l.c:441:
+static DEVICE_ATTR(gSelect, S_IRUGO | S_IWUGO, show_gSelect,

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions 'S_IRUGO | S_IWUGO' used
#533: FILE: drivers/input/misc/mma7455l.c:441:
+static DEVICE_ATTR(gSelect, S_IRUGO | S_IWUGO, show_gSelect,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#533: FILE: drivers/input/misc/mma7455l.c:441:
+static DEVICE_ATTR(gSelect, S_IRUGO | S_IWUGO, show_gSelect,

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#535: FILE: drivers/input/misc/mma7455l.c:442:
+static DEVICE_ATTR(level_threshold, S_IRUGO | S_IWUGO,

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions 'S_IRUGO | S_IWUGO' used
#535: FILE: drivers/input/misc/mma7455l.c:442:
+static DEVICE_ATTR(level_threshold, S_IRUGO | S_IWUGO,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#535: FILE: drivers/input/misc/mma7455l.c:442:
+static DEVICE_ATTR(level_threshold, S_IRUGO | S_IWUGO,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#537: FILE: drivers/input/misc/mma7455l.c:443:
+ write_level_threshold);$

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#538: FILE: drivers/input/misc/mma7455l.c:444:
+static DEVICE_ATTR(calibration, S_IRUGO | S_IWUGO, show_calibration,

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions 'S_IRUGO | S_IWUGO' used
#538: FILE: drivers/input/misc/mma7455l.c:444:
+static DEVICE_ATTR(calibration, S_IRUGO | S_IWUGO, show_calibration,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#538: FILE: drivers/input/misc/mma7455l.c:444:
+static DEVICE_ATTR(calibration, S_IRUGO | S_IWUGO, show_calibration,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#539: FILE: drivers/input/misc/mma7455l.c:445:
+ write_calibration);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#542: FILE: drivers/input/misc/mma7455l.c:448:
+       &dev_attr_measure.attr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#543: FILE: drivers/input/misc/mma7455l.c:449:
+ &dev_attr_mode.attr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#544: FILE: drivers/input/misc/mma7455l.c:450:
+ &dev_attr_gSelect.attr,$

CHECK:CAMELCASE: Avoid CamelCase: <dev_attr_gSelect>
#544: FILE: drivers/input/misc/mma7455l.c:450:
+ &dev_attr_gSelect.attr,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#545: FILE: drivers/input/misc/mma7455l.c:451:
+ &dev_attr_level_threshold.attr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#546: FILE: drivers/input/misc/mma7455l.c:452:
+ &dev_attr_calibration.attr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#547: FILE: drivers/input/misc/mma7455l.c:453:
+ NULL$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#551: FILE: drivers/input/misc/mma7455l.c:457:
+       .attrs  = mma7455l_sysfs_entries,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#557: FILE: drivers/input/misc/mma7455l.c:463:
+ struct mma7455l_info *mma = input_get_drvdata(inp);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#558: FILE: drivers/input/misc/mma7455l.c:464:
+ struct mma7455l_info *mma = input_get_drvdata(inp);
+ if (mma->mode == MMA7455L_MODE_STANDBY)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#558: FILE: drivers/input/misc/mma7455l.c:464:
+ if (mma->mode == MMA7455L_MODE_STANDBY)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#558: FILE: drivers/input/misc/mma7455l.c:464:
+ if (mma->mode == MMA7455L_MODE_STANDBY)
+ update_mode(mma, MMA7455L_MODE_MEASUREMENT, mma->gSelect);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#559: FILE: drivers/input/misc/mma7455l.c:465:
+ update_mode(mma, MMA7455L_MODE_MEASUREMENT, mma->gSelect);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#561: FILE: drivers/input/misc/mma7455l.c:467:
+ return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#566: FILE: drivers/input/misc/mma7455l.c:472:
+ struct mma7455l_info *mma = input_get_drvdata(inp);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#567: FILE: drivers/input/misc/mma7455l.c:473:
+ struct mma7455l_info *mma = input_get_drvdata(inp);
+ update_mode(mma, MMA7455L_MODE_STANDBY, MMA7455L_GSELECT_2);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#567: FILE: drivers/input/misc/mma7455l.c:473:
+ update_mode(mma, MMA7455L_MODE_STANDBY, MMA7455L_GSELECT_2);$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#570: FILE: drivers/input/misc/mma7455l.c:476:
+static int __devinit mma7455l_probe(struct spi_device *spi)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#572: FILE: drivers/input/misc/mma7455l.c:478:
+ int rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#573: FILE: drivers/input/misc/mma7455l.c:479:
+ struct mma7455l_info *mma;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#574: FILE: drivers/input/misc/mma7455l.c:480:
+ struct mma7455l_platform_data *pdata = spi->dev.platform_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#575: FILE: drivers/input/misc/mma7455l.c:481:
+ u_int8_t wai;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'u_int8_t'
#575: FILE: drivers/input/misc/mma7455l.c:481:
+ u_int8_t wai;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: drivers/input/misc/mma7455l.c:483:
+ mma = kzalloc(sizeof(*mma), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#578: FILE: drivers/input/misc/mma7455l.c:484:
+ if (!mma)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#578: FILE: drivers/input/misc/mma7455l.c:484:
+ if (!mma)
+ return -ENOMEM;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#579: FILE: drivers/input/misc/mma7455l.c:485:
+ return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: drivers/input/misc/mma7455l.c:487:
+ mutex_init(&mma->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#582: FILE: drivers/input/misc/mma7455l.c:488:
+ INIT_DELAYED_WORK(&mma->work, mma7455l_work);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#583: FILE: drivers/input/misc/mma7455l.c:489:
+ mma->spi_dev = spi;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#584: FILE: drivers/input/misc/mma7455l.c:490:
+ mma->flags = mma->working = 0;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#584: FILE: drivers/input/misc/mma7455l.c:490:
+ mma->flags = mma->working = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#586: FILE: drivers/input/misc/mma7455l.c:492:
+ spi_set_drvdata(spi, mma);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#588: FILE: drivers/input/misc/mma7455l.c:494:
+ rc = spi_setup(spi);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: drivers/input/misc/mma7455l.c:495:
+ if (rc < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#589: FILE: drivers/input/misc/mma7455l.c:495:
+ if (rc < 0) {
+ printk(KERN_ERR

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#590: FILE: drivers/input/misc/mma7455l.c:496:
+ printk(KERN_ERR$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#590: FILE: drivers/input/misc/mma7455l.c:496:
+ printk(KERN_ERR

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#591: FILE: drivers/input/misc/mma7455l.c:497:
+ "mma7455l error durign spi_setup of mma7455l driver\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#592: FILE: drivers/input/misc/mma7455l.c:498:
+ dev_set_drvdata(&spi->dev, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#593: FILE: drivers/input/misc/mma7455l.c:499:
+ kfree(mma);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#594: FILE: drivers/input/misc/mma7455l.c:500:
+ return rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: drivers/input/misc/mma7455l.c:501:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#597: FILE: drivers/input/misc/mma7455l.c:503:
+ wai = reg_read(mma, MMA7455L_REG_WHOAMI);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#598: FILE: drivers/input/misc/mma7455l.c:504:
+ if (wai != MMA7455L_WHOAMI_MAGIC) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#598: FILE: drivers/input/misc/mma7455l.c:504:
+ if (wai != MMA7455L_WHOAMI_MAGIC) {
+ printk(KERN_ERR

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#599: FILE: drivers/input/misc/mma7455l.c:505:
+ printk(KERN_ERR$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#599: FILE: drivers/input/misc/mma7455l.c:505:
+ printk(KERN_ERR

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#600: FILE: drivers/input/misc/mma7455l.c:506:
+ "mma7455l unknown whoami signature 0x%02x\n", wai);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#601: FILE: drivers/input/misc/mma7455l.c:507:
+ dev_set_drvdata(&spi->dev, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#602: FILE: drivers/input/misc/mma7455l.c:508:
+ kfree(mma);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#603: FILE: drivers/input/misc/mma7455l.c:509:
+ return -ENODEV;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#604: FILE: drivers/input/misc/mma7455l.c:510:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#606: FILE: drivers/input/misc/mma7455l.c:512:
+ rc = request_irq(mma->spi_dev->irq, mma7455l_interrupt,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#607: FILE: drivers/input/misc/mma7455l.c:513:
+ rc = request_irq(mma->spi_dev->irq, mma7455l_interrupt,
+ IRQF_TRIGGER_HIGH, "mma7455l", mma);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#607: FILE: drivers/input/misc/mma7455l.c:513:
+ IRQF_TRIGGER_HIGH, "mma7455l", mma);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#608: FILE: drivers/input/misc/mma7455l.c:514:
+ if (rc < 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#608: FILE: drivers/input/misc/mma7455l.c:514:
+ if (rc < 0) {
+ dev_err(&spi->dev, "mma7455l error requesting IRQ %d\n",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#609: FILE: drivers/input/misc/mma7455l.c:515:
+ dev_err(&spi->dev, "mma7455l error requesting IRQ %d\n",$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#610: FILE: drivers/input/misc/mma7455l.c:516:
+ dev_err(&spi->dev, "mma7455l error requesting IRQ %d\n",
+ mma->spi_dev->irq);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#610: FILE: drivers/input/misc/mma7455l.c:516:
+ mma->spi_dev->irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#612: FILE: drivers/input/misc/mma7455l.c:518:
+ return rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#613: FILE: drivers/input/misc/mma7455l.c:519:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#615: FILE: drivers/input/misc/mma7455l.c:521:
+ rc = sysfs_create_group(&spi->dev.kobj, &mma7455l_attr_group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#616: FILE: drivers/input/misc/mma7455l.c:522:
+ if (rc) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#616: FILE: drivers/input/misc/mma7455l.c:522:
+ if (rc) {
+ dev_err(&spi->dev, "error creating sysfs group\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#617: FILE: drivers/input/misc/mma7455l.c:523:
+ dev_err(&spi->dev, "error creating sysfs group\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#618: FILE: drivers/input/misc/mma7455l.c:524:
+ return rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#619: FILE: drivers/input/misc/mma7455l.c:525:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#622: FILE: drivers/input/misc/mma7455l.c:528:
+ mma->input_dev = input_allocate_device();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#623: FILE: drivers/input/misc/mma7455l.c:529:
+ if (!mma->input_dev) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#623: FILE: drivers/input/misc/mma7455l.c:529:
+ if (!mma->input_dev) {
+ dev_err(&spi->dev,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: drivers/input/misc/mma7455l.c:530:
+ dev_err(&spi->dev,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#625: FILE: drivers/input/misc/mma7455l.c:531:
+ dev_err(&spi->dev,
+ "mma7455l Unable to allocate input device\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: drivers/input/misc/mma7455l.c:531:
+ "mma7455l Unable to allocate input device\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#627: FILE: drivers/input/misc/mma7455l.c:533:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#629: FILE: drivers/input/misc/mma7455l.c:535:
+ set_bit(EV_ABS, mma->input_dev->evbit);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#630: FILE: drivers/input/misc/mma7455l.c:536:
+ set_bit(ABS_X, mma->input_dev->absbit);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#631: FILE: drivers/input/misc/mma7455l.c:537:
+ set_bit(ABS_Y, mma->input_dev->absbit);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#632: FILE: drivers/input/misc/mma7455l.c:538:
+ set_bit(ABS_Z, mma->input_dev->absbit);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#634: FILE: drivers/input/misc/mma7455l.c:540:
+ input_set_drvdata(mma->input_dev, mma);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#635: FILE: drivers/input/misc/mma7455l.c:541:
+ mma->input_dev->name = "MMA7455L";$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#636: FILE: drivers/input/misc/mma7455l.c:542:
+ mma->input_dev->open = mma7455l_input_open;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#637: FILE: drivers/input/misc/mma7455l.c:543:
+ mma->input_dev->close = mma7455l_input_close;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#639: FILE: drivers/input/misc/mma7455l.c:545:
+ rc = input_register_device(mma->input_dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#640: FILE: drivers/input/misc/mma7455l.c:546:
+ if (!rc) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 1)
#640: FILE: drivers/input/misc/mma7455l.c:546:
+ if (!rc) {
+ update_mode(mma, MMA7455L_MODE_STANDBY, MMA7455L_GSELECT_2);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#641: FILE: drivers/input/misc/mma7455l.c:547:
+ update_mode(mma, MMA7455L_MODE_STANDBY, MMA7455L_GSELECT_2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#643: FILE: drivers/input/misc/mma7455l.c:549:
+ mutex_lock(&mma->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#644: FILE: drivers/input/misc/mma7455l.c:550:
+ __reg_write_10(mma, MMA7455L_REG_XOFFL,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#645: FILE: drivers/input/misc/mma7455l.c:551:
+ __reg_write_10(mma, MMA7455L_REG_XOFFL,
+ MMA7455L_REG_XOFFH, pdata->calibration_x);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#645: FILE: drivers/input/misc/mma7455l.c:551:
+ MMA7455L_REG_XOFFH, pdata->calibration_x);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#646: FILE: drivers/input/misc/mma7455l.c:552:
+ __reg_write_10(mma, MMA7455L_REG_YOFFL,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#647: FILE: drivers/input/misc/mma7455l.c:553:
+ __reg_write_10(mma, MMA7455L_REG_YOFFL,
+ MMA7455L_REG_YOFFH, pdata->calibration_y);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#647: FILE: drivers/input/misc/mma7455l.c:553:
+ MMA7455L_REG_YOFFH, pdata->calibration_y);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#648: FILE: drivers/input/misc/mma7455l.c:554:
+ __reg_write_10(mma, MMA7455L_REG_ZOFFL,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#649: FILE: drivers/input/misc/mma7455l.c:555:
+ __reg_write_10(mma, MMA7455L_REG_ZOFFL,
+ MMA7455L_REG_ZOFFH, pdata->calibration_z);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#649: FILE: drivers/input/misc/mma7455l.c:555:
+ MMA7455L_REG_ZOFFH, pdata->calibration_z);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#650: FILE: drivers/input/misc/mma7455l.c:556:
+ mutex_unlock(&mma->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#652: FILE: drivers/input/misc/mma7455l.c:558:
+ return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#653: FILE: drivers/input/misc/mma7455l.c:559:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#655: FILE: drivers/input/misc/mma7455l.c:561:
+ input_free_device(mma->input_dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#656: FILE: drivers/input/misc/mma7455l.c:562:
+ return rc;$

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#659: FILE: drivers/input/misc/mma7455l.c:565:
+static int __devexit mma7455l_remove(struct spi_device *spi)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#661: FILE: drivers/input/misc/mma7455l.c:567:
+ struct mma7455l_info *mma = dev_get_drvdata(&spi->dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#663: FILE: drivers/input/misc/mma7455l.c:569:
+ sysfs_remove_group(&spi->dev.kobj, &mma7455l_attr_group);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#664: FILE: drivers/input/misc/mma7455l.c:570:
+ input_unregister_device(mma->input_dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#665: FILE: drivers/input/misc/mma7455l.c:571:
+ dev_set_drvdata(&spi->dev, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#666: FILE: drivers/input/misc/mma7455l.c:572:
+ kfree(mma);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#668: FILE: drivers/input/misc/mma7455l.c:574:
+ return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#675: FILE: drivers/input/misc/mma7455l.c:580:
+ struct mma7455l_info *mma = dev_get_drvdata(&spi->dev);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#676: FILE: drivers/input/misc/mma7455l.c:581:
+ struct mma7455l_info *mma = dev_get_drvdata(&spi->dev);
+ get_mode(mma, &mma->mode, &mma->gSelect);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#676: FILE: drivers/input/misc/mma7455l.c:581:
+ get_mode(mma, &mma->mode, &mma->gSelect);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#677: FILE: drivers/input/misc/mma7455l.c:582:
+ set_mode(mma, MMA7455L_MODE_STANDBY, MMA7455L_GSELECT_2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#679: FILE: drivers/input/misc/mma7455l.c:584:
+ return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#684: FILE: drivers/input/misc/mma7455l.c:589:
+ struct mma7455l_info *mma = dev_get_drvdata(&spi->dev);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#685: FILE: drivers/input/misc/mma7455l.c:590:
+ struct mma7455l_info *mma = dev_get_drvdata(&spi->dev);
+ update_mode(mma, mma->mode, mma->gSelect);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#685: FILE: drivers/input/misc/mma7455l.c:590:
+ update_mode(mma, mma->mode, mma->gSelect);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#687: FILE: drivers/input/misc/mma7455l.c:592:
+ return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#695: FILE: drivers/input/misc/mma7455l.c:600:
+ .driver = {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#696: FILE: drivers/input/misc/mma7455l.c:601:
+ .name = "mma7455l",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#697: FILE: drivers/input/misc/mma7455l.c:602:
+ .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#698: FILE: drivers/input/misc/mma7455l.c:603:
+ },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#700: FILE: drivers/input/misc/mma7455l.c:605:
+ .probe = mma7455l_probe,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#701: FILE: drivers/input/misc/mma7455l.c:606:
+ .remove = __devexit_p(mma7455l_remove),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#702: FILE: drivers/input/misc/mma7455l.c:607:
+ .suspend = mma7455l_suspend,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#703: FILE: drivers/input/misc/mma7455l.c:608:
+ .resume = mma7455l_resume,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#708: FILE: drivers/input/misc/mma7455l.c:613:
+ return spi_register_driver(&mma7455l_driver);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#713: FILE: drivers/input/misc/mma7455l.c:618:
+ spi_unregister_driver(&mma7455l_driver);$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#727: FILE: include/linux/mma7455l.h:1:
+#ifndef _LINUX_MMA7455L_H

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#732: FILE: include/linux/mma7455l.h:6:
+ s16 calibration_x;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#733: FILE: include/linux/mma7455l.h:7:
+ s16 calibration_y;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#734: FILE: include/linux/mma7455l.h:8:
+ s16 calibration_z;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000047632.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 399 warnings, 33 checks, 665 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000047632.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
