WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#48: 
>>>>> available under /proc/kprobes/list. Any suggestions for better place and

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: kernel/kprobes.c:821:
+               const char *sym, int offset,char *modname)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#198: FILE: kernel/kprobes.c:821:
+static void __kprobes report_probe(struct seq_file *pi, struct kprobe *p,
+               const char *sym, int offset,char *modname)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: kernel/kprobes.c:821:
+               const char *sym, int offset,char *modname)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#198: FILE: kernel/kprobes.c:821:
+               const char *sym, int offset,char *modname)
                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#210: FILE: kernel/kprobes.c:833:
+		seq_printf(pi, "%p  %s  %s+0x%x  %s\n", p->addr, kprobe_type,
+			sym, offset, (modname ? modname : " "));

CHECK:SPACING: No space is necessary after a cast
#238: FILE: kernel/kprobes.c:861:
+	unsigned int i = *(loff_t *) v;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#247: FILE: kernel/kprobes.c:870:
+		sym = kallsyms_lookup((unsigned long)p->addr, &size,
+					&offset, &modname, namebuf);

CHECK:BRACES: braces {} should be used on all arms of this statement
#248: FILE: kernel/kprobes.c:871:
+		if (p->pre_handler == aggr_pre_handler) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#251: FILE: kernel/kprobes.c:874:
+		} else

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#258: FILE: kernel/kprobes.c:881:
+struct seq_operations kprobes_seq_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#265: FILE: kernel/kprobes.c:888:
+static int __kprobes kprobes_open(struct inode *inode, struct file *filp)
                                                                     ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#267: FILE: kernel/kprobes.c:890:
+	return seq_open(filp, &kprobes_seq_ops);
 	                ^^^^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#270: FILE: kernel/kprobes.c:893:
+static struct file_operations proc_kprobes_operations = {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#280: FILE: kernel/kprobes.c:903:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dir"
#282: FILE: kernel/kprobes.c:905:
+	if (dir == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#284: FILE: kernel/kprobes.c:907:
+	debugfs_create_file("list", 0444, dir , 0 , &proc_kprobes_operations);
 	                                      ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#284: FILE: kernel/kprobes.c:907:
+	debugfs_create_file("list", 0444, dir , 0 , &proc_kprobes_operations);
 	                                          ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#306: FILE: include/linux/kprobes.h:244:
 }
+static inline void debugfs_kprobe_init(void)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000470300.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 6 warnings, 8 checks, 133 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000470300.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
