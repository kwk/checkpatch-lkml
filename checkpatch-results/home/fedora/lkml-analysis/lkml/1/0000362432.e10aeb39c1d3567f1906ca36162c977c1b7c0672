WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#30: 
This patch turns the set_p{te,md,ud,gd} functions into their
                           ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#65: FILE: include/asm-x86/pgtable_64.h:69:
+#define pte_clear(mm, addr, xp)				\
+do { 							\
+	set_pte_at(mm, addr, xp, __pte(0)); 		\
+} while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#66: FILE: include/asm-x86/pgtable_64.h:70:
+do { ^I^I^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#67: FILE: include/asm-x86/pgtable_64.h:71:
+^Iset_pte_at(mm, addr, xp, __pte(0)); ^I^I\$

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#78: FILE: include/asm-x86/pgtable_64.h:74:
+#define pmd_clear(xp)	do { set_pmd(xp, __pmd(0)); } while (0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#151: FILE: include/asm-x86/pgtable_64.h:131:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#152: FILE: include/asm-x86/pgtable_64.h:132:
+#define pte_ERROR(e) ^I^I^I^I^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'e' - possible side-effects?
#152: FILE: include/asm-x86/pgtable_64.h:132:
+#define pte_ERROR(e) 					\
+	printk("%s:%d: bad pte %p(%016llx).\n",		\
+	__FILE__, __LINE__, &(e), (u64)pte_val(e))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#153: FILE: include/asm-x86/pgtable_64.h:133:
+	printk("%s:%d: bad pte %p(%016llx).\n",		\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#155: FILE: include/asm-x86/pgtable_64.h:135:
+#define pmd_ERROR(e) ^I^I^I^I^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'e' - possible side-effects?
#155: FILE: include/asm-x86/pgtable_64.h:135:
+#define pmd_ERROR(e) 					\
+	printk("%s:%d: bad pmd %p(%016llx).\n", 	\
+	__FILE__, __LINE__, &(e), (u64)pmd_val(e))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#156: FILE: include/asm-x86/pgtable_64.h:136:
+^Iprintk("%s:%d: bad pmd %p(%016llx).\n", ^I\$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#156: FILE: include/asm-x86/pgtable_64.h:136:
+	printk("%s:%d: bad pmd %p(%016llx).\n", 	\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#158: FILE: include/asm-x86/pgtable_64.h:138:
+#define pud_ERROR(e) ^I^I^I^I^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'e' - possible side-effects?
#158: FILE: include/asm-x86/pgtable_64.h:138:
+#define pud_ERROR(e) 					\
+	printk("%s:%d: bad pud %p(%016llx).\n",		\
+	 __FILE__, __LINE__, &(e), (u64)pud_val(e))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#159: FILE: include/asm-x86/pgtable_64.h:139:
+	printk("%s:%d: bad pud %p(%016llx).\n",		\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#161: FILE: include/asm-x86/pgtable_64.h:141:
+#define pgd_ERROR(e) ^I^I^I^I^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'e' - possible side-effects?
#161: FILE: include/asm-x86/pgtable_64.h:141:
+#define pgd_ERROR(e) 					\
+	printk("%s:%d: bad pgd %p(%016llx).\n", 	\
+	__FILE__, __LINE__, &(e), (u64)pgd_val(e))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#162: FILE: include/asm-x86/pgtable_64.h:142:
+^Iprintk("%s:%d: bad pgd %p(%016llx).\n", ^I\$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#162: FILE: include/asm-x86/pgtable_64.h:142:
+	printk("%s:%d: bad pgd %p(%016llx).\n", 	\

WARNING:LINE_SPACING: Missing a blank line after declarations
#175: FILE: include/asm-x86/pgtable_64.h:154:
+	pte_t pte = __pte(xchg(&ptep->pte, 0));
+	pte_update(mm, addr, ptep);

WARNING:LINE_SPACING: Missing a blank line after declarations
#203: FILE: include/asm-x86/pgtable_64.h:309:
+	unsigned long pte;
+	pte = (page_nr << PAGE_SHIFT);

WARNING:LINE_SPACING: Missing a blank line after declarations
#259: FILE: include/asm-x86/pgtable_64.h:384:
+	unsigned long pte;
+	pte = pte_val(entry);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#263: FILE: include/asm-x86/pgtable_64.h:388:
+}
+#define mk_pte_huge(entry) ((entry) = __mk_pte_huge(entry))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'entry' - possible side-effects?
#263: FILE: include/asm-x86/pgtable_64.h:388:
+#define mk_pte_huge(entry) ((entry) = __mk_pte_huge(entry))

WARNING:LINE_SPACING: Missing a blank line after declarations
#270: FILE: include/asm-x86/pgtable_64.h:395:
+	int ret = 0;
+	if (!pte_young(*ptep))

WARNING:LINE_SPACING: Missing a blank line after declarations
#303: FILE: include/asm-x86/pgtable_64.h:423:
+	unsigned long pte = pte_val(pte_old);
+	pte &= _PAGE_CHG_MASK;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000362432.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 20 warnings, 7 checks, 260 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000362432.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
