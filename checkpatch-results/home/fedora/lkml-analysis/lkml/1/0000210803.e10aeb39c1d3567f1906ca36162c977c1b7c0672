WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
This patch modifies gen_init_cpio so that lines that specify files can contain what looks like a shell variable that's expanded during processing.

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#58: 
--- a/usr/gen_init_cpio.c

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: usr/gen_init_cpio.c:375:
+       char expanded[PATH_MAX + 1];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: usr/gen_init_cpio.c:376:
+       char env_var[PATH_MAX + 1];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: usr/gen_init_cpio.c:377:
+       char *start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: usr/gen_init_cpio.c:378:
+       char *end;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: usr/gen_init_cpio.c:380:
+       for (start = NULL; (start = strstr(new_location, "${")); ) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#71: FILE: usr/gen_init_cpio.c:380:
+       for (start = NULL; (start = strstr(new_location, "${")); ) {
+               end = strchr(start, '}');

ERROR:CODE_INDENT: code indent should use tabs where possible
#72: FILE: usr/gen_init_cpio.c:381:
+               end = strchr(start, '}');$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: usr/gen_init_cpio.c:381:
+               end = strchr(start, '}');$

ERROR:CODE_INDENT: code indent should use tabs where possible
#73: FILE: usr/gen_init_cpio.c:382:
+               if (start < end) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: usr/gen_init_cpio.c:382:
+               if (start < end) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#73: FILE: usr/gen_init_cpio.c:382:
+               if (start < end) {
+                       *env_var = *expanded = '\0';

CHECK:BRACES: braces {} should be used on all arms of this statement
#73: FILE: usr/gen_init_cpio.c:382:
+               if (start < end) {
[...]
+               } else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#74: FILE: usr/gen_init_cpio.c:383:
+                       *env_var = *expanded = '\0';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: usr/gen_init_cpio.c:383:
+                       *env_var = *expanded = '\0';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#75: FILE: usr/gen_init_cpio.c:384:
+                       strncat(env_var, start + 2, end - start - 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: usr/gen_init_cpio.c:384:
+                       strncat(env_var, start + 2, end - start - 2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#76: FILE: usr/gen_init_cpio.c:385:
+                       strncat(expanded, new_location, start - new_location);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: usr/gen_init_cpio.c:385:
+                       strncat(expanded, new_location, start - new_location);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#77: FILE: usr/gen_init_cpio.c:386:
+                       strncat(expanded, getenv(env_var), PATH_MAX);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: usr/gen_init_cpio.c:386:
+                       strncat(expanded, getenv(env_var), PATH_MAX);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: usr/gen_init_cpio.c:387:
+                       strncat(expanded, end + 1, PATH_MAX);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: usr/gen_init_cpio.c:387:
+                       strncat(expanded, end + 1, PATH_MAX);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: usr/gen_init_cpio.c:388:
+                       strncpy(new_location, expanded, PATH_MAX);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: usr/gen_init_cpio.c:388:
+                       strncpy(new_location, expanded, PATH_MAX);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#80: FILE: usr/gen_init_cpio.c:389:
+               } else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: usr/gen_init_cpio.c:389:
+               } else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#80: FILE: usr/gen_init_cpio.c:389:
+               } else
+                       break;

CHECK:BRACES: Unbalanced braces around else statement
#80: FILE: usr/gen_init_cpio.c:389:
+               } else

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: usr/gen_init_cpio.c:390:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: usr/gen_init_cpio.c:390:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: usr/gen_init_cpio.c:391:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: usr/gen_init_cpio.c:393:
+       return new_location;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#87: FILE: usr/gen_init_cpio.c:396:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: usr/gen_init_cpio.c:442:
+       rc = cpio_mkfile(dname, cpio_replace_env(location),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: usr/gen_init_cpio.c:443:
+                        mode, uid, gid, nlinks);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: usr/gen_init_cpio.c:443:
+                        mode, uid, gid, nlinks);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: usr/gen_init_cpio.c:467:
+               "             expands shell variables quoted with ${}\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: usr/gen_init_cpio.c:467:
+               "             expands shell variables quoted with ${}\n"$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000210803.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 13 errors, 24 warnings, 3 checks, 46 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000210803.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
