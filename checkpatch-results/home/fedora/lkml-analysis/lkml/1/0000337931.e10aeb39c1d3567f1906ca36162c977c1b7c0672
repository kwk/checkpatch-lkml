WARNING:MISPLACED_INIT: __cpuinitconst should be placed after amd_cpu_dev
#57: FILE: arch/x86/kernel/cpu/amd.c:319:
+static struct cpu_dev __cpuinitconst amd_cpu_dev = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:INIT_ATTRIBUTE: Use of __cpuinitconst requires a separate use of const
#57: FILE: arch/x86/kernel/cpu/amd.c:319:
+static struct cpu_dev __cpuinitconst amd_cpu_dev = {

Const init definitions should use __initconst instead of
__initdata.

Similarly init definitions without const require a separate
use of const.

WARNING:MISPLACED_INIT: __cpuinitconst should be placed after centaur_cpu_dev
#68: FILE: arch/x86/kernel/cpu/centaur.c:460:
+static struct cpu_dev __cpuinitconst centaur_cpu_dev = {

ERROR:INIT_ATTRIBUTE: Use of __cpuinitconst requires a separate use of const
#68: FILE: arch/x86/kernel/cpu/centaur.c:460:
+static struct cpu_dev __cpuinitconst centaur_cpu_dev = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __cpuinitconst
#79: FILE: arch/x86/kernel/cpu/common.c:58:
+const struct cpu_dev * __cpuinitdata cpu_devs[X86_VENDOR_NUM] = {};

WARNING:MISPLACED_INIT: __cpuinitconst should be placed after default_cpu
#88: FILE: arch/x86/kernel/cpu/common.c:75:
+static struct cpu_dev __cpuinitconst default_cpu = {

ERROR:INIT_ATTRIBUTE: Use of __cpuinitconst requires a separate use of const
#88: FILE: arch/x86/kernel/cpu/common.c:75:
+static struct cpu_dev __cpuinitconst default_cpu = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#93: FILE: arch/x86/kernel/cpu/common.c:79:
 };
+static const struct cpu_dev * this_cpu __cpuinitdata = &default_cpu;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#93: FILE: arch/x86/kernel/cpu/common.c:79:
+static const struct cpu_dev * this_cpu __cpuinitdata = &default_cpu;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __cpuinitconst
#93: FILE: arch/x86/kernel/cpu/common.c:79:
+static const struct cpu_dev * this_cpu __cpuinitdata = &default_cpu;

ERROR:POINTER_LOCATION: "foo	* bar" should be "foo	*bar"
#140: FILE: arch/x86/kernel/cpu/cpu.h:10:
+	const char	* c_vendor;

ERROR:POINTER_LOCATION: "foo	* bar" should be "foo	*bar"
#144: FILE: arch/x86/kernel/cpu/cpu.h:13:
+	const char	* c_ident[2];

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#153: FILE: arch/x86/kernel/cpu/cpu.h:22:
+extern const struct cpu_dev * cpu_devs [X86_VENDOR_NUM];

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#153: FILE: arch/x86/kernel/cpu/cpu.h:22:
+extern const struct cpu_dev * cpu_devs [X86_VENDOR_NUM];

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

CHECK:CAMELCASE: Avoid CamelCase: <Cx86_model>
#164: FILE: arch/x86/kernel/cpu/cyrix.c:59:
+static char __cpuinitconst Cx86_model[][9] = {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:INIT_ATTRIBUTE: Use of __cpuinitconst requires a separate use of const
#164: FILE: arch/x86/kernel/cpu/cyrix.c:59:
+static char __cpuinitconst Cx86_model[][9] = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#169: FILE: arch/x86/kernel/cpu/cyrix.c:63:
 };
+static char __cpuinitconst Cx486_name[][5] = {

CHECK:CAMELCASE: Avoid CamelCase: <Cx486_name>
#169: FILE: arch/x86/kernel/cpu/cyrix.c:63:
+static char __cpuinitconst Cx486_name[][5] = {

ERROR:INIT_ATTRIBUTE: Use of __cpuinitconst requires a separate use of const
#169: FILE: arch/x86/kernel/cpu/cyrix.c:63:
+static char __cpuinitconst Cx486_name[][5] = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#174: FILE: arch/x86/kernel/cpu/cyrix.c:67:
 };
+static char __cpuinitconst Cx486S_name[][4] = {

CHECK:CAMELCASE: Avoid CamelCase: <Cx486S_name>
#174: FILE: arch/x86/kernel/cpu/cyrix.c:67:
+static char __cpuinitconst Cx486S_name[][4] = {

ERROR:INIT_ATTRIBUTE: Use of __cpuinitconst requires a separate use of const
#174: FILE: arch/x86/kernel/cpu/cyrix.c:67:
+static char __cpuinitconst Cx486S_name[][4] = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#178: FILE: arch/x86/kernel/cpu/cyrix.c:70:
 };
+static char __cpuinitconst Cx486D_name[][4] = {

CHECK:CAMELCASE: Avoid CamelCase: <Cx486D_name>
#178: FILE: arch/x86/kernel/cpu/cyrix.c:70:
+static char __cpuinitconst Cx486D_name[][4] = {

ERROR:INIT_ATTRIBUTE: Use of __cpuinitconst requires a separate use of const
#178: FILE: arch/x86/kernel/cpu/cyrix.c:70:
+static char __cpuinitconst Cx486D_name[][4] = {

WARNING:MISPLACED_INIT: __cpuinitconst should be placed after cyrix_model_mult1[]
#184: FILE: arch/x86/kernel/cpu/cyrix.c:74:
+static char __cpuinitconst cyrix_model_mult1[] = "12??43";

ERROR:INIT_ATTRIBUTE: Use of __cpuinitconst requires a separate use of const
#184: FILE: arch/x86/kernel/cpu/cyrix.c:74:
+static char __cpuinitconst cyrix_model_mult1[] = "12??43";

WARNING:MISPLACED_INIT: __cpuinitconst should be placed after cyrix_model_mult2[]
#185: FILE: arch/x86/kernel/cpu/cyrix.c:75:
+static char __cpuinitconst cyrix_model_mult2[] = "12233445";

ERROR:INIT_ATTRIBUTE: Use of __cpuinitconst requires a separate use of const
#185: FILE: arch/x86/kernel/cpu/cyrix.c:75:
+static char __cpuinitconst cyrix_model_mult2[] = "12233445";

WARNING:MISPLACED_INIT: __cpuinitconst should be placed after cyrix_cpu_dev
#194: FILE: arch/x86/kernel/cpu/cyrix.c:439:
+static struct cpu_dev __cpuinitconst cyrix_cpu_dev = {

ERROR:INIT_ATTRIBUTE: Use of __cpuinitconst requires a separate use of const
#194: FILE: arch/x86/kernel/cpu/cyrix.c:439:
+static struct cpu_dev __cpuinitconst cyrix_cpu_dev = {

WARNING:MISPLACED_INIT: __cpuinitconst should be placed after nsc_cpu_dev
#203: FILE: arch/x86/kernel/cpu/cyrix.c:452:
+static struct cpu_dev __cpuinitconst nsc_cpu_dev = {

ERROR:INIT_ATTRIBUTE: Use of __cpuinitconst requires a separate use of const
#203: FILE: arch/x86/kernel/cpu/cyrix.c:452:
+static struct cpu_dev __cpuinitconst nsc_cpu_dev = {

WARNING:MISPLACED_INIT: __cpuinitconst should be placed after intel_cpu_dev
#214: FILE: arch/x86/kernel/cpu/intel.c:236:
+static struct cpu_dev __cpuinitconst intel_cpu_dev = {

ERROR:INIT_ATTRIBUTE: Use of __cpuinitconst requires a separate use of const
#214: FILE: arch/x86/kernel/cpu/intel.c:236:
+static struct cpu_dev __cpuinitconst intel_cpu_dev = {

WARNING:MISPLACED_INIT: __cpuinitconst should be placed after cache_table[]
#225: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:34:
+static struct _cache_table __cpuinitconst cache_table[] =

ERROR:INIT_ATTRIBUTE: Use of __cpuinitconst requires a separate use of const
#225: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:34:
+static struct _cache_table __cpuinitconst cache_table[] =

WARNING:MISPLACED_INIT: __cpuinitconst should be placed after assocs[]
#234: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:174:
+static unsigned short __cpuinitconst assocs[] = {

ERROR:INIT_ATTRIBUTE: Use of __cpuinitconst requires a separate use of const
#234: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:174:
+static unsigned short __cpuinitconst assocs[] = {

WARNING:MISPLACED_INIT: __cpuinitconst should be placed after levels[]
#243: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:181:
+static unsigned char __cpuinitconst levels[] = { 1, 1, 2, 3 };

ERROR:INIT_ATTRIBUTE: Use of __cpuinitconst requires a separate use of const
#243: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:181:
+static unsigned char __cpuinitconst levels[] = { 1, 1, 2, 3 };

WARNING:MISPLACED_INIT: __cpuinitconst should be placed after types[]
#244: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:182:
+static unsigned char __cpuinitconst types[] = { 1, 2, 3, 3 };

ERROR:INIT_ATTRIBUTE: Use of __cpuinitconst requires a separate use of const
#244: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:182:
+static unsigned char __cpuinitconst types[] = { 1, 2, 3, 3 };

WARNING:MISPLACED_INIT: __cpuinitconst should be placed after nexgen_cpu_dev
#255: FILE: arch/x86/kernel/cpu/nexgen.c:43:
+static struct cpu_dev __cpuinitconst nexgen_cpu_dev = {

ERROR:INIT_ATTRIBUTE: Use of __cpuinitconst requires a separate use of const
#255: FILE: arch/x86/kernel/cpu/nexgen.c:43:
+static struct cpu_dev __cpuinitconst nexgen_cpu_dev = {

WARNING:MISPLACED_INIT: __cpuinitconst should be placed after transmeta_cpu_dev
#266: FILE: arch/x86/kernel/cpu/transmeta.c:105:
+static struct cpu_dev __cpuinitconst transmeta_cpu_dev = {

ERROR:INIT_ATTRIBUTE: Use of __cpuinitconst requires a separate use of const
#266: FILE: arch/x86/kernel/cpu/transmeta.c:105:
+static struct cpu_dev __cpuinitconst transmeta_cpu_dev = {

WARNING:MISPLACED_INIT: __cpuinitconst should be placed after umc_cpu_dev
#277: FILE: arch/x86/kernel/cpu/umc.c:9:
+static struct cpu_dev __cpuinitconst umc_cpu_dev = {

ERROR:INIT_ATTRIBUTE: Use of __cpuinitconst requires a separate use of const
#277: FILE: arch/x86/kernel/cpu/umc.c:9:
+static struct cpu_dev __cpuinitconst umc_cpu_dev = {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000337931.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 26 errors, 15 warnings, 8 checks, 193 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000337931.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
