WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
   git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip.git x86-fixes-for-linus-2

WARNING:TYPO_SPELLING: 'casued' may be misspelled - perhaps 'caused'?
#72: 
      x86/voyager: fix compile breakage casued by x86: move prefill_possible_map calling early
                                        ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#235: FILE: Documentation/lguest/lguest.c:405:
+	 * a Linux boot header (see Documentation/x86/i386/boot.txt) */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#355: FILE: arch/x86/include/asm/io.h:85:
+extern void __iomem *early_ioremap(unsigned long offset, unsigned long size);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#356: FILE: arch/x86/include/asm/io.h:86:
+extern void __iomem *early_memremap(unsigned long offset, unsigned long size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#357: FILE: arch/x86/include/asm/io.h:87:
+extern void early_iounmap(void __iomem *addr, unsigned long size);

WARNING:SPLIT_STRING: quoted string split across lines
#517: FILE: arch/x86/kernel/microcode_core.c:484:
+	       " <tigran@aivazian.fsnet.co.uk>,"
+	       " Peter Oruba\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#530: FILE: arch/x86/kernel/pci-gart_64.c:747:
+		printk(KERN_INFO "PCI-GART: No AMD GART found.\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#579: FILE: arch/x86/mach-voyager/voyager_smp.c:351:
+	 * earlier detection which is done in find_smp_config */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#639: FILE: arch/x86/mm/init_64.c:680:
+	printk(KERN_INFO "init_memory_mapping: %016lx-%016lx\n", start, end);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'init_memory_mapping', this function's name, in a string
#639: FILE: arch/x86/mm/init_64.c:680:
+	printk(KERN_INFO "init_memory_mapping: %016lx-%016lx\n", start, end);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#659: FILE: arch/x86/mm/init_64.c:723:
+	start_pfn = ((pos + (PMD_SIZE - 1))>>PMD_SHIFT)
 	                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#662: FILE: arch/x86/mm/init_64.c:725:
+	end_pfn = ((pos + (PUD_SIZE - 1))>>PUD_SHIFT)
 	                                 ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#668: FILE: arch/x86/mm/init_64.c:727:
+	if (end_pfn > ((end>>PMD_SHIFT)<<(PMD_SHIFT - PAGE_SHIFT)))
 	                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#668: FILE: arch/x86/mm/init_64.c:727:
+	if (end_pfn > ((end>>PMD_SHIFT)<<(PMD_SHIFT - PAGE_SHIFT)))
 	                               ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#669: FILE: arch/x86/mm/init_64.c:728:
+		end_pfn = ((end>>PMD_SHIFT)<<(PMD_SHIFT - PAGE_SHIFT));
 		               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#669: FILE: arch/x86/mm/init_64.c:728:
+		end_pfn = ((end>>PMD_SHIFT)<<(PMD_SHIFT - PAGE_SHIFT));
 		                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#672: FILE: arch/x86/mm/init_64.c:731:
+		nr_range = save_mr(mr, nr_range, start_pfn, end_pfn,
+				page_size_mask & (1<<PG_LEVEL_2M));

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#672: FILE: arch/x86/mm/init_64.c:731:
+				page_size_mask & (1<<PG_LEVEL_2M));
 				                   ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#680: FILE: arch/x86/mm/init_64.c:736:
+	start_pfn = ((pos + (PUD_SIZE - 1))>>PUD_SHIFT)
 	                                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#685: FILE: arch/x86/mm/init_64.c:741:
+		nr_range = save_mr(mr, nr_range, start_pfn, end_pfn,
 				page_size_mask &

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#695: FILE: arch/x86/mm/init_64.c:747:
+	start_pfn = ((pos + (PMD_SIZE - 1))>>PMD_SHIFT)
 	                                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#700: FILE: arch/x86/mm/init_64.c:752:
+		nr_range = save_mr(mr, nr_range, start_pfn, end_pfn,
+				page_size_mask & (1<<PG_LEVEL_2M));

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#700: FILE: arch/x86/mm/init_64.c:752:
+				page_size_mask & (1<<PG_LEVEL_2M));
 				                   ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#706: FILE: arch/x86/mm/init_64.c:757:
+	start_pfn = pos>>PAGE_SHIFT;
 	               ^

WARNING:SPLIT_STRING: quoted string split across lines
#744: FILE: arch/x86/mm/init_64.c:938:
 	printk(KERN_INFO "Memory: %luk/%luk available (%ldk kernel code, "
+			 "%ldk absent, %ldk reserved, %ldk data, %ldk init)\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#748: FILE: arch/x86/mm/init_64.c:942:
+		absent_pages << (PAGE_SHIFT-10),
 		                           ^

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#794: FILE: arch/x86/mm/ioremap.c:648:
+static void __init __iomem *__early_ioremap(unsigned long phys_addr, unsigned long size, pgprot_t prot)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000209942.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 10 warnings, 18 checks, 557 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000209942.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
