WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
Note, this v3 patch integrated the via-sdmmc.h and via-sdmmc.c files into via-sdmm.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#64: FILE: drivers/mmc/host/Kconfig:215:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#79: FILE: drivers/mmc/host/via-sdmmc.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#80: FILE: drivers/mmc/host/via-sdmmc.c:2:
+ *  drivers/mmc/host/via-sdmmc.c - VIA SD/MMC Card Reader driver

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:CAMELCASE: Avoid CamelCase: <Resv>
#329: FILE: drivers/mmc/host/via-sdmmc.c:251:
+	u8 Resv;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#351: FILE: drivers/mmc/host/via-sdmmc.c:273:
+	spinlock_t lock;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#367: FILE: drivers/mmc/host/via-sdmmc.c:289:
+#define DRIVER_VERSION ^I"2.1 beta 2"$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around vcrdr_chip->pm_pcictrl_reg
#414: FILE: drivers/mmc/host/via-sdmmc.c:336:
+	pm_pcictrl_reg = &(vcrdr_chip->pm_pcictrl_reg);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around vcrdr_chip->pm_pcictrl_reg
#433: FILE: drivers/mmc/host/via-sdmmc.c:355:
+	pm_pcictrl_reg = &(vcrdr_chip->pm_pcictrl_reg);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around vcrdr_chip->pm_sdhc_reg
#450: FILE: drivers/mmc/host/via-sdmmc.c:372:
+	pm_sdhc_reg = &(vcrdr_chip->pm_sdhc_reg);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around vcrdr_chip->pm_sdhc_reg
#470: FILE: drivers/mmc/host/via-sdmmc.c:392:
+	pm_sdhc_reg = &(vcrdr_chip->pm_sdhc_reg);

CHECK:SPACING: No space is necessary after a cast
#560: FILE: drivers/mmc/host/via-sdmmc.c:482:
+		cmd->resp[0] = ((u8) (dwdata1)) |

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#561: FILE: drivers/mmc/host/via-sdmmc.c:483:
+		    (((u8) (dwdata0 >> 24)) << 8) |

CHECK:SPACING: No space is necessary after a cast
#562: FILE: drivers/mmc/host/via-sdmmc.c:484:
+		    (((u8) (dwdata0 >> 16)) << 16) |

CHECK:SPACING: No space is necessary after a cast
#563: FILE: drivers/mmc/host/via-sdmmc.c:485:
+		    (((u8) (dwdata0 >> 8)) << 24);

CHECK:SPACING: No space is necessary after a cast
#565: FILE: drivers/mmc/host/via-sdmmc.c:487:
+		cmd->resp[1] = ((u8) (dwdata2)) |

CHECK:SPACING: No space is necessary after a cast
#566: FILE: drivers/mmc/host/via-sdmmc.c:488:
+		    (((u8) (dwdata1 >> 24)) << 8) |

CHECK:SPACING: No space is necessary after a cast
#567: FILE: drivers/mmc/host/via-sdmmc.c:489:
+		    (((u8) (dwdata1 >> 16)) << 16) |

CHECK:SPACING: No space is necessary after a cast
#568: FILE: drivers/mmc/host/via-sdmmc.c:490:
+		    (((u8) (dwdata1 >> 8)) << 24);

CHECK:SPACING: No space is necessary after a cast
#570: FILE: drivers/mmc/host/via-sdmmc.c:492:
+		cmd->resp[2] = ((u8) (dwdata3)) |

CHECK:SPACING: No space is necessary after a cast
#571: FILE: drivers/mmc/host/via-sdmmc.c:493:
+		    (((u8) (dwdata2 >> 24)) << 8) |

CHECK:SPACING: No space is necessary after a cast
#572: FILE: drivers/mmc/host/via-sdmmc.c:494:
+		    (((u8) (dwdata2 >> 16)) << 16) |

CHECK:SPACING: No space is necessary after a cast
#573: FILE: drivers/mmc/host/via-sdmmc.c:495:
+		    (((u8) (dwdata2 >> 8)) << 24);

CHECK:SPACING: No space is necessary after a cast
#576: FILE: drivers/mmc/host/via-sdmmc.c:498:
+		    ((((u8) (dwdata3 >> 24))) << 8) |

CHECK:SPACING: No space is necessary after a cast
#577: FILE: drivers/mmc/host/via-sdmmc.c:499:
+		    (((u8) (dwdata3 >> 16)) << 16) |

CHECK:SPACING: No space is necessary after a cast
#578: FILE: drivers/mmc/host/via-sdmmc.c:500:
+		    (((u8) (dwdata3 >> 8)) << 24);

CHECK:SPACING: No space is necessary after a cast
#609: FILE: drivers/mmc/host/via-sdmmc.c:531:
+		cmdctrl |= ((u32) (0x0 << 16));

CHECK:SPACING: No space is necessary after a cast
#612: FILE: drivers/mmc/host/via-sdmmc.c:534:
+		cmdctrl |= ((u32) (0x01 << 16));

CHECK:SPACING: No space is necessary after a cast
#615: FILE: drivers/mmc/host/via-sdmmc.c:537:
+		cmdctrl |= ((u32) (0x09 << 16));

CHECK:SPACING: No space is necessary after a cast
#618: FILE: drivers/mmc/host/via-sdmmc.c:540:
+		cmdctrl |= ((u32) (0x02 << 16));

CHECK:SPACING: No space is necessary after a cast
#621: FILE: drivers/mmc/host/via-sdmmc.c:543:
+		cmdctrl |= ((u32) (0x03 << 16));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#662: FILE: drivers/mmc/host/via-sdmmc.c:584:
+	BUG_ON(!host->data);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPLIT_STRING: quoted string split across lines
#675: FILE: drivers/mmc/host/via-sdmmc.c:597:
+		pr_err("%s: Controller signalled completion even "
+		       "though there were blocks left.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "host->mrq"
#736: FILE: drivers/mmc/host/via-sdmmc.c:658:
+	WARN_ON(host->mrq != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#831: FILE: drivers/mmc/host/via-sdmmc.c:753:
+	msleep(3);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#834: FILE: drivers/mmc/host/via-sdmmc.c:756:
+	msleep(3);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#847: FILE: drivers/mmc/host/via-sdmmc.c:769:
+	BUG_ON(intmask == 0);

WARNING:SPLIT_STRING: quoted string split across lines
#851: FILE: drivers/mmc/host/via-sdmmc.c:773:
+		pr_err("%s: Got command interrupt 0x%x even "
+		       "though no command operation was in progress.\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#869: FILE: drivers/mmc/host/via-sdmmc.c:791:
+	BUG_ON(intmask == 0);

CHECK:BRACES: braces {} should be used on all arms of this statement
#876: FILE: drivers/mmc/host/via-sdmmc.c:798:
+	if (host->data->error)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#878: FILE: drivers/mmc/host/via-sdmmc.c:800:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#916: FILE: drivers/mmc/host/via-sdmmc.c:838:
+		queue_work(vcrdr_chip->card_detect_queue,
+			 &sdhost->carddet_work);

WARNING:SPLIT_STRING: quoted string split across lines
#956: FILE: drivers/mmc/host/via-sdmmc.c:878:
+		pr_err("%s: Timeout waiting for hardware interrupt."
+		       "cmd:0x%x\n", mmc_hostname(sdhost->mmc),

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1079: FILE: drivers/mmc/host/via-sdmmc.c:1001:
+	msleep(1);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1097: FILE: drivers/mmc/host/via-sdmmc.c:1019:
+	msleep(1);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1105: FILE: drivers/mmc/host/via-sdmmc.c:1027:
+static int __devinit via_chip_probe(struct pci_dev *pcidev,

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1167: FILE: drivers/mmc/host/via-sdmmc.c:1089:
+	msleep(3);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1170: FILE: drivers/mmc/host/via-sdmmc.c:1092:
+	msleep(3);

CHECK:SPACING: No space is necessary after a cast
#1191: FILE: drivers/mmc/host/via-sdmmc.c:1113:
+	sdhost->ddmabuf = (u8 *) __get_free_pages(GFP_KERNEL, 4);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1198: FILE: drivers/mmc/host/via-sdmmc.c:1120:
+	sdhost->dmaaddr = dma_map_single(dev, sdhost->ddmabuf,
+		sdhost->mmc->max_req_size, DMA_BIDIRECTIONAL);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1228: FILE: drivers/mmc/host/via-sdmmc.c:1150:
+static void __devexit via_chip_remove(struct pci_dev *pcidev)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1244: FILE: drivers/mmc/host/via-sdmmc.c:1166:
+	if (sdhost) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1247: FILE: drivers/mmc/host/via-sdmmc.c:1169:
+		dma_unmap_single(&pcidev->dev, sdhost->dmaaddr,
+			sdhost->mmc->max_req_size, DMA_BIDIRECTIONAL);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around vcrdr_chip->pci_cfg_bak[i]
#1280: FILE: drivers/mmc/host/via-sdmmc.c:1202:
+		pci_read_config_byte(pcidev, i, &(vcrdr_chip->pci_cfg_bak[i]));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around vcrdr_chip->pm_sdhc_reg
#1299: FILE: drivers/mmc/host/via-sdmmc.c:1221:
+	pm_sdhcreg = &(vcrdr_chip->pm_sdhc_reg);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1369: FILE: drivers/mmc/host/via-sdmmc.c:1291:
+	msleep(3);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1372: FILE: drivers/mmc/host/via-sdmmc.c:1294:
+	msleep(3);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000167687.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 20 warnings, 36 checks, 1368 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000167687.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
