WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
This patch contains the s390 interrupt subsystem (similar to in kernel apic)

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#114: FILE: arch/s390/kvm/intercept.c:35:
+		return -ENOTSUPP;

ENOTSUPP is not a standard error code and should be avoided in new patches.
EOPNOTSUPP should be used instead.

See: https://lore.kernel.org/netdev/20200510182252.GA411829@lunn.ch/

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#195: FILE: arch/s390/kvm/intercept.c:149:
+	return -ENOTSUPP;

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#212: FILE: arch/s390/kvm/intercept.c:166:
+	if (rc == -ENOTSUPP)

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#231: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#236: FILE: arch/s390/kvm/interrupt.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#249: FILE: arch/s390/kvm/interrupt.c:14:
+#include <asm/uaccess.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#296: FILE: arch/s390/kvm/interrupt.c:61:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#303: FILE: arch/s390/kvm/interrupt.c:68:
+	BUG_ON(vcpu->vcpu_id > KVM_MAX_VCPUS - 1);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#310: FILE: arch/s390/kvm/interrupt.c:75:
+	BUG_ON(vcpu->vcpu_id > KVM_MAX_VCPUS - 1);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#344: FILE: arch/s390/kvm/interrupt.c:109:
+		BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#363: FILE: arch/s390/kvm/interrupt.c:128:
+		rc = copy_to_guest(vcpu, __LC_EXT_OLD_PSW,
+			 &vcpu->arch.sie_block->gpsw, sizeof(psw_t));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#368: FILE: arch/s390/kvm/interrupt.c:133:
+		rc = copy_from_guest(vcpu, &vcpu->arch.sie_block->gpsw,
+			__LC_EXT_NEW_PSW, sizeof(psw_t));

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#374: FILE: arch/s390/kvm/interrupt.c:139:
+		VCPU_EVENT(vcpu, 4, "interrupt: sclp parm:%x",
 		                                     ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#382: FILE: arch/s390/kvm/interrupt.c:147:
+		rc = copy_to_guest(vcpu, __LC_EXT_OLD_PSW,
+			 &vcpu->arch.sie_block->gpsw, sizeof(psw_t));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#387: FILE: arch/s390/kvm/interrupt.c:152:
+		rc = copy_from_guest(vcpu, &vcpu->arch.sie_block->gpsw,
+			__LC_EXT_NEW_PSW, sizeof(psw_t));

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#397: FILE: arch/s390/kvm/interrupt.c:162:
+		VCPU_EVENT(vcpu, 4, "interrupt: virtio parm:%x,parm64:%lx",
 		                                       ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#409: FILE: arch/s390/kvm/interrupt.c:174:
+		rc = copy_to_guest(vcpu, __LC_EXT_OLD_PSW,
+			 &vcpu->arch.sie_block->gpsw, sizeof(psw_t));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#414: FILE: arch/s390/kvm/interrupt.c:179:
+		rc = copy_from_guest(vcpu, &vcpu->arch.sie_block->gpsw,
+			__LC_EXT_NEW_PSW, sizeof(psw_t));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#423: FILE: arch/s390/kvm/interrupt.c:188:
+		rc = put_guest_u64(vcpu, __LC_PFAULT_INTPARM,
+			inti->ext.ext_params2);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#446: FILE: arch/s390/kvm/interrupt.c:211:
+		rc = copy_to_guest(vcpu, offsetof(struct _lowcore,
+		  restart_old_psw), &vcpu->arch.sie_block->gpsw, sizeof(psw_t));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#451: FILE: arch/s390/kvm/interrupt.c:216:
+		rc = copy_from_guest(vcpu, &vcpu->arch.sie_block->gpsw,
+			offsetof(struct _lowcore, restart_psw), sizeof(psw_t));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#466: FILE: arch/s390/kvm/interrupt.c:231:
+		rc = put_guest_u16(vcpu, __LC_PGM_ILC,
+			table[vcpu->arch.sie_block->ipa >> 14]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#471: FILE: arch/s390/kvm/interrupt.c:236:
+		rc = copy_to_guest(vcpu, __LC_PGM_OLD_PSW,
+			 &vcpu->arch.sie_block->gpsw, sizeof(psw_t));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#476: FILE: arch/s390/kvm/interrupt.c:241:
+		rc = copy_from_guest(vcpu, &vcpu->arch.sie_block->gpsw,
+			__LC_PGM_NEW_PSW, sizeof(psw_t));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#482: FILE: arch/s390/kvm/interrupt.c:247:
+		BUG();

WARNING:SPLIT_STRING: quoted string split across lines
#487: FILE: arch/s390/kvm/interrupt.c:252:
+		VCPU_EVENT(vcpu, 1, "%s", "program exception while delivering"
+			   " interrupt");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#490: FILE: arch/s390/kvm/interrupt.c:255:
+			printk(KERN_WARNING "kvm: recursive program check\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#491: FILE: arch/s390/kvm/interrupt.c:256:
+			BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#508: FILE: arch/s390/kvm/interrupt.c:273:
+	rc = copy_to_guest(vcpu, __LC_EXT_OLD_PSW,
+		 &vcpu->arch.sie_block->gpsw, sizeof(psw_t));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#512: FILE: arch/s390/kvm/interrupt.c:277:
+	rc = copy_from_guest(vcpu, &vcpu->arch.sie_block->gpsw,
+		__LC_EXT_NEW_PSW, sizeof(psw_t));

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#517: FILE: arch/s390/kvm/interrupt.c:282:
+		VCPU_EVENT(vcpu, 1, "%s", "program exception while delivering" \

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!rc'
#543: FILE: arch/s390/kvm/interrupt.c:308:
+	if ((!rc) && atomic_read(&fi->active)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!rc'
#553: FILE: arch/s390/kvm/interrupt.c:318:
+	if ((!rc) && (vcpu->arch.sie_block->ckc <
+		get_clock() + vcpu->arch.sie_block->epoch)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#556: FILE: arch/s390/kvm/interrupt.c:321:
+		if ((!psw_extint_disabled(vcpu)) &&
+			(vcpu->arch.sie_block->gcr[0] & 0x800ul))

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#575: FILE: arch/s390/kvm/interrupt.c:340:
+		return -ENOTSUPP; /* disabled wait */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#603: FILE: arch/s390/kvm/interrupt.c:368:
+	while (list_empty(&vcpu->arch.local_int.list) &&
+		list_empty(&vcpu->arch.local_int.float_int->list) &&

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#630: FILE: arch/s390/kvm/interrupt.c:395:
+	if (waitqueue_active(&vcpu->arch.local_int.wq))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#635: FILE: arch/s390/kvm/interrupt.c:400:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#702: FILE: arch/s390/kvm/interrupt.c:467:
+	inti->type = KVM_S390_PROGRAM_INT;;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#709: FILE: arch/s390/kvm/interrupt.c:474:
+	BUG_ON(waitqueue_active(&li->wq));

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#709: FILE: arch/s390/kvm/interrupt.c:474:
+	BUG_ON(waitqueue_active(&li->wq));

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#728: FILE: arch/s390/kvm/interrupt.c:493:
+		VM_EVENT(kvm, 5, "inject: virtio parm:%x,parm64:%lx",
 		                                 ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#729: FILE: arch/s390/kvm/interrupt.c:494:
+			 s390int->parm, s390int->parm64);
 			          ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#731: FILE: arch/s390/kvm/interrupt.c:496:
+		inti->ext.ext_params = s390int->parm;
 		                                ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#735: FILE: arch/s390/kvm/interrupt.c:500:
+		VM_EVENT(kvm, 5, "inject: sclp parm:%x", s390int->parm);
 		                               ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#735: FILE: arch/s390/kvm/interrupt.c:500:
+		VM_EVENT(kvm, 5, "inject: sclp parm:%x", s390int->parm);
 		                                                  ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#737: FILE: arch/s390/kvm/interrupt.c:502:
+		inti->ext.ext_params = s390int->parm;
 		                                ^^^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#757: FILE: arch/s390/kvm/interrupt.c:522:
+				sigcpu = fi->next_rr_cpu = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fi->local_int[sigcpu]"
#758: FILE: arch/s390/kvm/interrupt.c:523:
+		} while (fi->local_int[sigcpu] == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#763: FILE: arch/s390/kvm/interrupt.c:528:
+	if (waitqueue_active(&li->wq))

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#783: FILE: arch/s390/kvm/interrupt.c:548:
+		if (s390int->parm & 0xffff0000) {
 		             ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#788: FILE: arch/s390/kvm/interrupt.c:553:
+		inti->pgm.code = s390int->parm;
 		                          ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#790: FILE: arch/s390/kvm/interrupt.c:555:
+			   s390int->parm);
 			            ^^^^

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#817: FILE: arch/s390/kvm/interrupt.c:582:
+	if (waitqueue_active(&li->wq))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#887: FILE: arch/s390/kvm/kvm-s390.c:248:
+	setup_timer(&vcpu->arch.ckc_timer, kvm_s390_idle_wakeup,
+		 (unsigned long) vcpu);

CHECK:SPACING: No space is necessary after a cast
#887: FILE: arch/s390/kvm/kvm-s390.c:248:
+		 (unsigned long) vcpu);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#910: FILE: arch/s390/kvm/kvm-s390.c:433:
+	BUG_ON(vcpu->kvm->arch.float_int.local_int[vcpu->vcpu_id] == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vcpu->kvm->arch.float_int.local_int[vcpu->vcpu_id]"
#910: FILE: arch/s390/kvm/kvm-s390.c:433:
+	BUG_ON(vcpu->kvm->arch.float_int.local_int[vcpu->vcpu_id] == NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#965: FILE: arch/s390/kvm/kvm-s390.h:47:
+int kvm_s390_inject_vm(struct kvm *kvm,
+		struct kvm_s390_interrupt *s390int);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#967: FILE: arch/s390/kvm/kvm-s390.h:49:
+int kvm_s390_inject_vcpu(struct kvm_vcpu *vcpu,
+		struct kvm_s390_interrupt *s390int);

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1041: FILE: include/asm-s390/kvm_host.h:164:
+	spinlock_t lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1050: FILE: include/asm-s390/kvm_host.h:173:
+	spinlock_t lock;

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#1054: FILE: include/asm-s390/kvm_host.h:177:
+	unsigned long idle_mask [(64 + sizeof(long) - 1) / sizeof(long)];

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1058: FILE: include/asm-s390/kvm_host.h:181:
+
+

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#1098: FILE: include/linux/kvm.h:233:
+	__u32 parm;
 	      ^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000294420.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 35 warnings, 30 checks, 983 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000294420.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
