CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#54: FILE: arch/x86/kernel/ds.c:118:
 }
+static inline void set_bts_buffer_base(char *base, unsigned long value)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#60: FILE: arch/x86/kernel/ds.c:122:
 }
+static inline unsigned long get_bts_index(char *base)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#66: FILE: arch/x86/kernel/ds.c:126:
 }
+static inline void set_bts_index(char *base, unsigned long value)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#72: FILE: arch/x86/kernel/ds.c:130:
 }
+static inline unsigned long get_bts_absolute_maximum(char *base)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#78: FILE: arch/x86/kernel/ds.c:134:
 }
+static inline void set_bts_absolute_maximum(char *base, unsigned long value)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#84: FILE: arch/x86/kernel/ds.c:138:
 }
+static inline unsigned long get_bts_interrupt_threshold(char *base)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#90: FILE: arch/x86/kernel/ds.c:142:
 }
+static inline void set_bts_interrupt_threshold(char *base, unsigned long value)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#96: FILE: arch/x86/kernel/ds.c:146:
 }
+static inline unsigned long get_from_ip(char *base)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#102: FILE: arch/x86/kernel/ds.c:150:
 }
+static inline void set_from_ip(char *base, unsigned long value)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#108: FILE: arch/x86/kernel/ds.c:154:
 }
+static inline unsigned long get_to_ip(char *base)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#114: FILE: arch/x86/kernel/ds.c:158:
 }
+static inline void set_to_ip(char *base, unsigned long value)

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#222: FILE: arch/x86/kernel/ds.c:328:
+	return sizeof(*out);;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#304: FILE: include/asm-x86/ds.h:67:
+extern int ds_read_bts(void *, int, struct bts_struct *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#304: FILE: include/asm-x86/ds.h:67:
+extern int ds_read_bts(void *, int, struct bts_struct *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#304: FILE: include/asm-x86/ds.h:67:
+extern int ds_read_bts(void *, int, struct bts_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bts_struct *' should also have an identifier name
#304: FILE: include/asm-x86/ds.h:67:
+extern int ds_read_bts(void *, int, struct bts_struct *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000344835.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 12 checks, 266 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000344835.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
