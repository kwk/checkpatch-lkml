WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#40: FILE: fs/Kconfig:1569:
+source "fs/pohmelfs/Kconfig"

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#55: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#60: FILE: fs/pohmelfs/Kconfig:1:
+config POHMELFS
+	tristate "POHMELFS filesystem support"
+	select CONNECTOR
+	help
+	  POHMELFS stands for Parallel Optimized Host Message Exchange Layered File System.
+	  This is a network filesystem which supports coherent caching of data and metadata
+	  on clients.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#68: FILE: fs/pohmelfs/Kconfig:9:
+config POHMELFS_DEBUG
+	bool "POHMELFS debugging"
+	depends on POHMELFS
+	default n
+	help
+	  Turns on excessive POHMELFS debugging facilities.
+	  You usually do not want to slow things down noticebly and get really lots of kernel
+	  messages in syslog.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#87: FILE: fs/pohmelfs/Kconfig:28:
+config POHMELFS_CRYPTO
+	bool "POHMELFS crypto support"
+	depends on CONFIG_CRYPTO_BLKCIPHER && CONFIG_CRYPTO_HASH
+	help
+	  This option allows to encrypt and/or protect with strong cryptographic hash all dataflow
+	  between server and clients. Each config group can have own keys.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#108: FILE: fs/pohmelfs/config.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#147: FILE: fs/pohmelfs/config.c:40:
+	if (sc->idx == ctl->idx && sc->type == ctl->type &&
+			sc->proto == ctl->proto &&

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: fs/pohmelfs/config.c:65:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*g)...) over kzalloc(sizeof(struct pohmelfs_config_group)...)
#177: FILE: fs/pohmelfs/config.c:70:
+	g = kzalloc(sizeof(struct pohmelfs_config_group), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dst)...) over kzalloc(sizeof(struct pohmelfs_config)...)
#219: FILE: fs/pohmelfs/config.c:112:
+		dst = kzalloc(sizeof(struct pohmelfs_config), GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#261: FILE: fs/pohmelfs/config.c:154:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#266: FILE: fs/pohmelfs/config.c:159:
+^I^I$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*c)...) over kzalloc(sizeof(struct pohmelfs_config)...)
#308: FILE: fs/pohmelfs/config.c:201:
+	c = kzalloc(sizeof(struct pohmelfs_config), GFP_KERNEL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#374: FILE: fs/pohmelfs/config.c:267:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#382: FILE: fs/pohmelfs/config.c:275:
+	dprintk("%s: idx: %u, strlen: %u, type: %u, keysize: %u, algo: %s.\n",
+			__func__, crypto->idx, crypto->strlen, crypto->type,

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#392: FILE: fs/pohmelfs/config.c:285:
+	switch (crypto->type) {
+		case POHMELFS_CRYPTO_HASH:
[...]
+		case POHMELFS_CRYPTO_CIPHER:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#400: FILE: fs/pohmelfs/config.c:293:
+			err = -ENOTSUPP;

ENOTSUPP is not a standard error code and should be avoided in new patches.
EOPNOTSUPP should be used instead.

See: https://lore.kernel.org/netdev/20200510182252.GA411829@lunn.ch/

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#416: FILE: fs/pohmelfs/config.c:309:
+	switch (msg->flags) {
+		case POHMELFS_FLAGS_CTL:
[...]
+		case POHMELFS_FLAGS_CRYPTO:
[...]
+		default:

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#424: FILE: fs/pohmelfs/config.c:317:
+			err = -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ack)...) over kmalloc(sizeof(struct pohmelfs_cn_ack)...)
#428: FILE: fs/pohmelfs/config.c:321:
+	ack = kmalloc(sizeof(struct pohmelfs_cn_ack), GFP_KERNEL);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#492: FILE: fs/pohmelfs/config.c:385:
+		if (g->hash_string)
+			kfree(g->hash_string);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#495: FILE: fs/pohmelfs/config.c:388:
+		if (g->cipher_string)
+			kfree(g->cipher_string);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#507: FILE: fs/pohmelfs/crypto.c:1:
+/*

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#539: FILE: fs/pohmelfs/crypto.c:33:
+		dprintk("%s: idx: %u: failed to allocate hash '%s', err: %d.\n",
+				__func__, psb->idx, psb->hash_string, err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#551: FILE: fs/pohmelfs/crypto.c:45:
+		dprintk("%s: idx: %u: failed to set key for hash '%s', err: %d.\n",
+				__func__, psb->idx, psb->hash_string, err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#575: FILE: fs/pohmelfs/crypto.c:69:
+		dprintk("%s: idx: %u: failed to allocate cipher '%s', err: %d.\n",
+				__func__, psb->idx, psb->cipher_string, err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#584: FILE: fs/pohmelfs/crypto.c:78:
+		dprintk("%s: idx: %u: failed to set key for cipher '%s', err: %d.\n",
+				__func__, psb->idx, psb->cipher_string, err);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#617: FILE: fs/pohmelfs/crypto.c:111:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#659: FILE: fs/pohmelfs/crypto.c:153:
+static int pohmelfs_crypto_process(struct ablkcipher_request *req,
+		struct scatterlist *sg_dst, struct scatterlist *sg_src,

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#678: FILE: fs/pohmelfs/crypto.c:172:
+	switch (err) {
+		case -EINPROGRESS:
+		case -EBUSY:
[...]
+		default:

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#682: FILE: fs/pohmelfs/crypto.c:176:
+			err = wait_for_completion_interruptible_timeout(&complete.complete,
+					timeout);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#696: FILE: fs/pohmelfs/crypto.c:190:
+int pohmelfs_crypto_process_input_data(struct pohmelfs_crypto_engine *e, u64 cmd_iv,
+		void *data, struct page *page, unsigned int size)

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#702: FILE: fs/pohmelfs/crypto.c:196:
+		__func__, e, cmd_iv, data, page, (page)?page->index:0, size);
 		                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#702: FILE: fs/pohmelfs/crypto.c:196:
+		__func__, e, cmd_iv, data, page, (page)?page->index:0, size);
 		                                                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#727: FILE: fs/pohmelfs/crypto.c:221:
+		void *dst = e->data + e->size/2;
 		                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#731: FILE: fs/pohmelfs/crypto.c:225:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#739: FILE: fs/pohmelfs/crypto.c:233:
+^I^I$

WARNING:LONG_LINE_STRING: line length of 108 exceeds 100 columns
#751: FILE: fs/pohmelfs/crypto.c:245:
+			dprintk("%s: eng: %p, hash: %p, cipher: %p: iv : %llx, hash mismatch (recv/calc): ",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#752: FILE: fs/pohmelfs/crypto.c:246:
+			dprintk("%s: eng: %p, hash: %p, cipher: %p: iv : %llx, hash mismatch (recv/calc): ",
+					__func__, e, e->hash, e->cipher, cmd_iv);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#753: FILE: fs/pohmelfs/crypto.c:247:
+			for (i=0; i<crypto_hash_digestsize(e->hash); ++i) {
 			      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#753: FILE: fs/pohmelfs/crypto.c:247:
+			for (i=0; i<crypto_hash_digestsize(e->hash); ++i) {
 			           ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#754: FILE: fs/pohmelfs/crypto.c:248:
+#if 0

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#769: FILE: fs/pohmelfs/crypto.c:263:
+			dprintk("%s: eng: %p, hash: %p, cipher: %p: hashes matched.\n",
+					__func__, e, e->hash, e->cipher);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#772: FILE: fs/pohmelfs/crypto.c:266:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#774: FILE: fs/pohmelfs/crypto.c:268:
+	dprintk("%s: eng: %p, hash: %p, cipher: %p: completed.\n",
+			__func__, e, e->hash, e->cipher);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#780: FILE: fs/pohmelfs/crypto.c:274:
+	dprintk("%s: eng: %p, hash: %p, cipher: %p: err: %d.\n",
+			__func__, e, e->hash, e->cipher, err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#785: FILE: fs/pohmelfs/crypto.c:279:
+static int pohmelfs_trans_iter(struct netfs_trans *t, struct pohmelfs_crypto_engine *e,
+		int (* iterator) (struct pohmelfs_crypto_engine *e,

WARNING:SPACING: Unnecessary space before function pointer name
#785: FILE: fs/pohmelfs/crypto.c:279:
+		int (* iterator) (struct pohmelfs_crypto_engine *e,

WARNING:SPACING: Unnecessary space before function pointer arguments
#785: FILE: fs/pohmelfs/crypto.c:279:
+		int (* iterator) (struct pohmelfs_crypto_engine *e,

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#785: FILE: fs/pohmelfs/crypto.c:279:
+		int (* iterator) (struct pohmelfs_crypto_engine *e,
 		     ^

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#790: FILE: fs/pohmelfs/crypto.c:284:
+	unsigned int size = t->iovec.iov_len - sizeof(struct netfs_cmd) - t->psb->crypto_attached_size;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#806: FILE: fs/pohmelfs/crypto.c:300:
+^I^I$

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#808: FILE: fs/pohmelfs/crypto.c:302:
+				__func__, size, sz, __be32_to_cpu(cmd->size), __be16_to_cpu(cmd->cpad));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#808: FILE: fs/pohmelfs/crypto.c:302:
+		dprintk("%s: size: %u, sz: %u, cmd_size: %u, cmd_cpad: %u.\n",
+				__func__, size, sz, __be32_to_cpu(cmd->size), __be16_to_cpu(cmd->cpad));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#812: FILE: fs/pohmelfs/crypto.c:306:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#820: FILE: fs/pohmelfs/crypto.c:314:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#825: FILE: fs/pohmelfs/crypto.c:319:
+	for (i=0; i<t->page_num; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#825: FILE: fs/pohmelfs/crypto.c:319:
+	for (i=0; i<t->page_num; ++i) {
 	           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#851: FILE: fs/pohmelfs/crypto.c:345:
+static int pohmelfs_encrypt_iterator(struct pohmelfs_crypto_engine *e,
+		struct scatterlist *sg_dst, struct scatterlist *sg_src)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#878: FILE: fs/pohmelfs/crypto.c:372:
+static int pohmelfs_hash_iterator(struct pohmelfs_crypto_engine *e,
+		struct scatterlist *sg_dst, struct scatterlist *sg_src)

WARNING:LINE_SPACING: Missing a blank line after declarations
#907: FILE: fs/pohmelfs/crypto.c:401:
+		unsigned int i;
+		dprintk("%s: ", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#907: FILE: fs/pohmelfs/crypto.c:401:
+		dprintk("%s: ", __func__);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#908: FILE: fs/pohmelfs/crypto.c:402:
+		for (i=0; i<tc->psb->crypto_attached_size; ++i)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#908: FILE: fs/pohmelfs/crypto.c:402:
+		for (i=0; i<tc->psb->crypto_attached_size; ++i)
 		           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#920: FILE: fs/pohmelfs/crypto.c:414:
+	for (i=0; i<e->page_num; ++i)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#920: FILE: fs/pohmelfs/crypto.c:414:
+	for (i=0; i<e->page_num; ++i)
 	           ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#929: FILE: fs/pohmelfs/crypto.c:423:
+	e->pages = kmalloc(psb->trans_max_pages * sizeof(struct page *), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#933: FILE: fs/pohmelfs/crypto.c:427:
+	for (i=0; i<psb->trans_max_pages; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#933: FILE: fs/pohmelfs/crypto.c:427:
+	for (i=0; i<psb->trans_max_pages; ++i) {
 	           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#963: FILE: fs/pohmelfs/crypto.c:457:
+		struct netfs_cmd *cmd = t->iovec.iov_base;
+		netfs_convert_cmd(cmd);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1045: FILE: fs/pohmelfs/crypto.c:539:
+		wait_event_interruptible(t->wait, kthread_should_stop() ||
+				t->trans || t->page);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1054: FILE: fs/pohmelfs/crypto.c:548:
+		dprintk("%s: thread: %p, trans: %p, page: %p.\n",
+				__func__, t, t->trans, t->page);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1100: FILE: fs/pohmelfs/crypto.c:594:
+		dprintk("%s: st: %p, eng: %p, hash: %p, cipher: %p.\n",
+				__func__, st, &st->eng, &st->eng.hash, &st->eng.cipher);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1103: FILE: fs/pohmelfs/crypto.c:597:
+	for (i=0; i<psb->crypto_thread_num; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1103: FILE: fs/pohmelfs/crypto.c:597:
+	for (i=0; i<psb->crypto_thread_num; ++i) {
 	           ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*t)...) over kzalloc(sizeof(struct pohmelfs_crypto_thread)...)
#1105: FILE: fs/pohmelfs/crypto.c:599:
+		t = kzalloc(sizeof(struct pohmelfs_crypto_thread), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1124: FILE: fs/pohmelfs/crypto.c:618:
+		t->thread = kthread_run(pohmelfs_crypto_thread_func, t,
+				"pohmelfs-crypto-%d-%d", psb->idx, i);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1138: FILE: fs/pohmelfs/crypto.c:632:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1163: FILE: fs/pohmelfs/crypto.c:657:
+static int pohmelfs_crypt_init_complete(struct page **pages, unsigned int page_num,
+		void *private, int err)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1226: FILE: fs/pohmelfs/crypto.c:720:
+	err = wait_event_interruptible_timeout(psb->wait, (psb->flags != ~0),
+			psb->wait_on_page_timeout);

WARNING:TYPO_SPELLING: 'acceptible' may be misspelled - perhaps 'acceptable'?
#1238: FILE: fs/pohmelfs/crypto.c:732:
+	 * should setup superblock in a way, which is acceptible
 	                                              ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1271: FILE: fs/pohmelfs/crypto.c:765:
+static int pohmelfs_crypto_thread_get(struct pohmelfs_sb *psb,
+		int (* action)(struct pohmelfs_crypto_thread *t, void *data), void *data)

WARNING:SPACING: Unnecessary space before function pointer name
#1271: FILE: fs/pohmelfs/crypto.c:765:
+		int (* action)(struct pohmelfs_crypto_thread *t, void *data), void *data)

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#1271: FILE: fs/pohmelfs/crypto.c:765:
+		int (* action)(struct pohmelfs_crypto_thread *t, void *data), void *data)
 		     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1278: FILE: fs/pohmelfs/crypto.c:772:
+		err = wait_event_interruptible_timeout(psb->wait,
+				!list_empty(&psb->crypto_ready_list),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1286: FILE: fs/pohmelfs/crypto.c:780:
+			t = list_entry(psb->crypto_ready_list.prev,
+					struct pohmelfs_crypto_thread,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1290: FILE: fs/pohmelfs/crypto.c:784:
+			list_move_tail(&t->thread_entry,
+					&psb->crypto_active_list);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1295: FILE: fs/pohmelfs/crypto.c:789:
+
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1324: FILE: fs/pohmelfs/crypto.c:818:
+struct pohmelfs_crypto_input_action_data
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1345: FILE: fs/pohmelfs/crypto.c:839:
+int pohmelfs_crypto_process_input_page(struct pohmelfs_crypto_engine *e,
+		struct page *page, unsigned int size, u64 iv)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1357: FILE: fs/pohmelfs/crypto.c:851:
+	err = pohmelfs_crypto_thread_get(POHMELFS_SB(inode->i_sb),
+			pohmelfs_crypt_input_page_action, &act);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1375: FILE: fs/pohmelfs/dir.c:1:
+/*

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1435: FILE: fs/pohmelfs/dir.c:61:
+static struct pohmelfs_name *pohmelfs_insert_offset(struct pohmelfs_inode *pi,
+		struct pohmelfs_name *new)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1447: FILE: fs/pohmelfs/dir.c:73:
+		if (cmp < 0)
[...]
+		else if (cmp > 0)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1451: FILE: fs/pohmelfs/dir.c:77:
+		else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1522: FILE: fs/pohmelfs/dir.c:148:
+static struct pohmelfs_name *pohmelfs_insert_hash(struct pohmelfs_inode *pi,
+		struct pohmelfs_name *new)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1534: FILE: fs/pohmelfs/dir.c:160:
+		if (cmp < 0)
[...]
+		else if (cmp > 0)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1538: FILE: fs/pohmelfs/dir.c:164:
+		else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1545: FILE: fs/pohmelfs/dir.c:171:
+		printk("%s: exist: ino: %llu, hash: %x, len: %u, data: '%s', new: ino: %llu, hash: %x, len: %u, data: '%s'.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1546: FILE: fs/pohmelfs/dir.c:172:
+		printk("%s: exist: ino: %llu, hash: %x, len: %u, data: '%s', new: ino: %llu, hash: %x, len: %u, data: '%s'.\n",
+				__func__, ret->ino, ret->hash, ret->len, ret->data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1605: FILE: fs/pohmelfs/dir.c:231:
+	dprintk("%s: parent: %llu, ino: %llu, decr: %d.\n",
+			__func__, parent->ino, node->ino, decr);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*n)...) over kzalloc(sizeof(struct pohmelfs_name)...)
#1640: FILE: fs/pohmelfs/dir.c:266:
+	n = kzalloc(sizeof(struct pohmelfs_name) + len, GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1647: FILE: fs/pohmelfs/dir.c:273:
+	n->data = (char *)(n+1);
 	                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1656: FILE: fs/pohmelfs/dir.c:282:
+static int pohmelfs_add_dir(struct pohmelfs_sb *psb, struct pohmelfs_inode *parent,
+		struct pohmelfs_inode *npi, struct qstr *str, unsigned int mode, int link)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1674: FILE: fs/pohmelfs/dir.c:300:
+	if (!(str->len == 1 && str->name[0] == '.') &&
+			!(str->len == 2 && str->name[0] == '.' && str->name[1] == '.')) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1713: FILE: fs/pohmelfs/dir.c:339:
+struct pohmelfs_inode *pohmelfs_new_inode(struct pohmelfs_sb *psb,
+		struct pohmelfs_inode *parent, struct qstr *str,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1721: FILE: fs/pohmelfs/dir.c:347:
+	dprintk("%s: creating inode: parent: %llu, ino: %llu, str: %p.\n",
+			__func__, (parent)?parent->ino:0, info->ino, str);

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1721: FILE: fs/pohmelfs/dir.c:347:
+			__func__, (parent)?parent->ino:0, info->ino, str);
 			                  ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1721: FILE: fs/pohmelfs/dir.c:347:
+			__func__, (parent)?parent->ino:0, info->ino, str);
 			                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1734: FILE: fs/pohmelfs/dir.c:360:
+		dprintk("%s: filling VFS inode: %lu/%llu.\n",
+				__func__, new->i_ino, info->ino);

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1752: FILE: fs/pohmelfs/dir.c:378:
+			err = pohmelfs_add_dir(psb, npi, (parent)?parent:npi, &s,
 			                                         ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1752: FILE: fs/pohmelfs/dir.c:378:
+			err = pohmelfs_add_dir(psb, npi, (parent)?parent:npi, &s,
 			                                                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1753: FILE: fs/pohmelfs/dir.c:379:
+			err = pohmelfs_add_dir(psb, npi, (parent)?parent:npi, &s,
+					(parent)?parent->vfs_inode.i_mode:npi->vfs_inode.i_mode, 0);

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1753: FILE: fs/pohmelfs/dir.c:379:
+					(parent)?parent->vfs_inode.i_mode:npi->vfs_inode.i_mode, 0);
 					        ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1753: FILE: fs/pohmelfs/dir.c:379:
+					(parent)?parent->vfs_inode.i_mode:npi->vfs_inode.i_mode, 0);
 					                                 ^

WARNING:LONG_LINE_STRING: line length of 107 exceeds 100 columns
#1763: FILE: fs/pohmelfs/dir.c:389:
+			dprintk("%s: %s inserted name: '%s', new_offset: %llu, ino: %llu, parent: %llu.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1764: FILE: fs/pohmelfs/dir.c:390:
+			dprintk("%s: %s inserted name: '%s', new_offset: %llu, ino: %llu, parent: %llu.\n",
+					__func__, (err)?"unsuccessfully":"successfully",

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1764: FILE: fs/pohmelfs/dir.c:390:
+					__func__, (err)?"unsuccessfully":"successfully",
 					               ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1764: FILE: fs/pohmelfs/dir.c:390:
+					__func__, (err)?"unsuccessfully":"successfully",
 					                                ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1790: FILE: fs/pohmelfs/dir.c:416:
+	printk("%s: putting inode: %p, npi: %p, error: %d.\n", __func__, new, npi, err);

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1791: FILE: fs/pohmelfs/dir.c:417:
+	iput(new);
 	^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1797: FILE: fs/pohmelfs/dir.c:423:
+static int pohmelfs_remote_sync_complete(struct page **pages, unsigned int page_num,
+		void *private, int err)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1825: FILE: fs/pohmelfs/dir.c:451:
+	dprintk("%s: dir: %llu, state: %lx: created: %d, remote_synced: %d.\n",
+			__func__, pi->ino, pi->state, test_bit(NETFS_INODE_CREATED, &pi->state),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1840: FILE: fs/pohmelfs/dir.c:466:
+	err = pohmelfs_meta_command(pi, NETFS_READDIR, NETFS_TRANS_SINGLE_DST,
+			pohmelfs_remote_sync_complete, pi, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1846: FILE: fs/pohmelfs/dir.c:472:
+	ret = wait_event_interruptible_timeout(psb->wait,
+			test_bit(NETFS_INODE_REMOTE_SYNCED, &pi->state) || pi->error, ret);

WARNING:LONG_LINE_STRING: line length of 109 exceeds 100 columns
#1893: FILE: fs/pohmelfs/dir.c:519:
+		dprintk("%s: offset: %llu, parent ino: %llu, name: '%s', len: %u, ino: %llu, mode: %o/%o.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1894: FILE: fs/pohmelfs/dir.c:520:
+		dprintk("%s: offset: %llu, parent ino: %llu, name: '%s', len: %u, ino: %llu, mode: %o/%o.\n",
+				__func__, file->f_pos, pi->ino, n->data, n->len,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1922: FILE: fs/pohmelfs/dir.c:548:
+static int pohmelfs_lookup_single(struct pohmelfs_inode *parent,
+		struct qstr *str, u64 ino)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1930: FILE: fs/pohmelfs/dir.c:556:
+	err = pohmelfs_meta_command_data(parent, NETFS_LOOKUP,
+			(char *)str->name, NETFS_TRANS_SINGLE_DST, NULL, NULL, ino);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1936: FILE: fs/pohmelfs/dir.c:562:
+	ret = wait_event_interruptible_timeout(psb->wait,
+			!test_bit(NETFS_COMMAND_PENDING, &parent->state), ret);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1950: FILE: fs/pohmelfs/dir.c:576:
+	printk("%s: failed: parent: %llu, ino: %llu, name: '%s', err: %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1951: FILE: fs/pohmelfs/dir.c:577:
+	printk("%s: failed: parent: %llu, ino: %llu, name: '%s', err: %d.\n",
+			__func__, parent->ino, ino, str->name, err);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1964: FILE: fs/pohmelfs/dir.c:590:
+struct dentry *pohmelfs_lookup(struct inode *dir, struct dentry *dentry, struct nameidata *nd)
                                                                                            ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1982: FILE: fs/pohmelfs/dir.c:608:
+	dprintk("%s: 1 ino: %lu, inode: %p, name: '%s', hash: %x, parent_state: %lx.\n",
+			__func__, ino, inode, str.name, str.hash, parent->state);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1991: FILE: fs/pohmelfs/dir.c:617:
+	dprintk("%s: dir: %p, dir_ino: %llu, name: '%s', len: %u, dir_state: %lx, ino: %lu.\n",
+			__func__, dir, parent->ino,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2016: FILE: fs/pohmelfs/dir.c:642:
+		printk("%s: second lookup ino: %lu, inode: %p, name: '%s', hash: %x.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2017: FILE: fs/pohmelfs/dir.c:643:
+		printk("%s: second lookup ino: %lu, inode: %p, name: '%s', hash: %x.\n",
+				__func__, ino, inode, str.name, str.hash);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2019: FILE: fs/pohmelfs/dir.c:645:
+			printk("%s: No inode for ino: %lu, name: '%s', hash: %x.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2020: FILE: fs/pohmelfs/dir.c:646:
+			printk("%s: No inode for ino: %lu, name: '%s', hash: %x.\n",
+				__func__, ino, str.name, str.hash);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2025: FILE: fs/pohmelfs/dir.c:651:
+		printk("%s: No inode number : name: '%s', hash: %x.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2026: FILE: fs/pohmelfs/dir.c:652:
+		printk("%s: No inode number : name: '%s', hash: %x.\n",
+			__func__, str.name, str.hash);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2037: FILE: fs/pohmelfs/dir.c:663:
+struct pohmelfs_inode *pohmelfs_create_entry_local(struct pohmelfs_sb *psb,
+	struct pohmelfs_inode *parent, struct qstr *str, u64 start, int mode)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2044: FILE: fs/pohmelfs/dir.c:670:
+	dprintk("%s: name: '%s', mode: %o, start: %llu.\n",
+			__func__, str->name, mode, start);

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#2052: FILE: fs/pohmelfs/dir.c:678:
+	info.nlink = S_ISDIR(mode)?2:1;
 	                          ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2052: FILE: fs/pohmelfs/dir.c:678:
+	info.nlink = S_ISDIR(mode)?2:1;
 	                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2094: FILE: fs/pohmelfs/dir.c:720:
+	dprintk("%s: parent: %llu, inode: %llu, name: '%s', parent_nlink: %d, nlink: %d.\n",
+			__func__, POHMELFS_I(dir)->ino, npi->ino, dentry->d_name.name,

WARNING:UNSPECIFIED_INT: Prefer 'signed int' to bare use of 'signed'
#2095: FILE: fs/pohmelfs/dir.c:721:
+			(signed)dir->i_nlink, (signed)npi->vfs_inode.i_nlink);

WARNING:UNSPECIFIED_INT: Prefer 'signed int' to bare use of 'signed'
#2095: FILE: fs/pohmelfs/dir.c:721:
+			(signed)dir->i_nlink, (signed)npi->vfs_inode.i_nlink);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#2104: FILE: fs/pohmelfs/dir.c:730:
+		struct nameidata *nd)
 		                  ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2104: FILE: fs/pohmelfs/dir.c:730:
+static int pohmelfs_create(struct inode *dir, struct dentry *dentry, int mode,
+		struct nameidata *nd)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2141: FILE: fs/pohmelfs/dir.c:767:
+	dprintk("%s: dir_ino: %llu, inode: %llu, name: '%s', nlink: %d.\n",
+			__func__, parent->ino, pi->ino,

WARNING:UNSPECIFIED_INT: Prefer 'signed int' to bare use of 'signed'
#2142: FILE: fs/pohmelfs/dir.c:768:
+			str.name, (signed)inode->i_nlink);

CHECK:BRACES: braces {} should be used on all arms of this statement
#2148: FILE: fs/pohmelfs/dir.c:774:
+		if (test_bit(NETFS_INODE_CREATED, &pi->state)) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2151: FILE: fs/pohmelfs/dir.c:777:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2190: FILE: fs/pohmelfs/dir.c:816:
+	dprintk("%s: parent: %llu, inode: %llu, name: '%s', parent_nlink: %d, nlink: %d.\n",
+			__func__, POHMELFS_I(dir)->ino, POHMELFS_I(inode)->ino,

WARNING:UNSPECIFIED_INT: Prefer 'signed int' to bare use of 'signed'
#2191: FILE: fs/pohmelfs/dir.c:817:
+			dentry->d_name.name, (signed)dir->i_nlink, (signed)inode->i_nlink);

WARNING:UNSPECIFIED_INT: Prefer 'signed int' to bare use of 'signed'
#2191: FILE: fs/pohmelfs/dir.c:817:
+			dentry->d_name.name, (signed)dir->i_nlink, (signed)inode->i_nlink);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2208: FILE: fs/pohmelfs/dir.c:834:
+static int pohmelfs_create_link(struct pohmelfs_inode *parent, struct qstr *obj,
+		struct pohmelfs_inode *target, struct qstr *tstr)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2234: FILE: fs/pohmelfs/dir.c:860:
+^I$

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#2297: FILE: fs/pohmelfs/dir.c:923:
+			__func__, parent->ino, obj->name, (target)?target->ino:0, (tstr)?tstr->name:NULL,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2297: FILE: fs/pohmelfs/dir.c:923:
+	dprintk("%s: parent: %llu, obj: '%s', target_inode: %llu, target_str: '%s', full: '%s'.\n",
+			__func__, parent->ino, obj->name, (target)?target->ino:0, (tstr)?tstr->name:NULL,

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#2297: FILE: fs/pohmelfs/dir.c:923:
+			__func__, parent->ino, obj->name, (target)?target->ino:0, (tstr)?tstr->name:NULL,
 			                                          ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2297: FILE: fs/pohmelfs/dir.c:923:
+			__func__, parent->ino, obj->name, (target)?target->ino:0, (tstr)?tstr->name:NULL,
 			                                                      ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#2297: FILE: fs/pohmelfs/dir.c:923:
+			__func__, parent->ino, obj->name, (target)?target->ino:0, (tstr)?tstr->name:NULL,
 			                                                                ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2297: FILE: fs/pohmelfs/dir.c:923:
+			__func__, parent->ino, obj->name, (target)?target->ino:0, (tstr)?tstr->name:NULL,
 			                                                                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2305: FILE: fs/pohmelfs/dir.c:931:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2325: FILE: fs/pohmelfs/dir.c:951:
+static int pohmelfs_link(struct dentry *old_dentry, struct inode *dir,
+	struct dentry *dentry)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXU | S_IRWXG | S_IRWXO' are not preferred. Consider using octal permissions '0777'.
#2361: FILE: fs/pohmelfs/dir.c:987:
+	err = pohmelfs_create_entry(dir, dentry, 0, S_IFLNK | S_IRWXU | S_IRWXG | S_IRWXO);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#2374: FILE: fs/pohmelfs/dir.c:1000:
+	iput(inode);
 	^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2380: FILE: fs/pohmelfs/dir.c:1006:
+static int pohmelfs_send_rename(struct pohmelfs_inode *pi, struct pohmelfs_inode *parent,
+		struct qstr *str)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2441: FILE: fs/pohmelfs/dir.c:1067:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2453: FILE: fs/pohmelfs/dir.c:1079:
+static int pohmelfs_rename(struct inode *old_dir, struct dentry *old_dentry,
+			struct inode *new_dir, struct dentry *new_dentry)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2462: FILE: fs/pohmelfs/dir.c:1088:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2488: FILE: fs/pohmelfs/dir.c:1114:
+		if (S_ISDIR(old_inode->i_mode) &&
+				new_parent->total_len <= 3)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2495: FILE: fs/pohmelfs/dir.c:1121:
+	dprintk("%s: ino: %llu, parent: %llu, name: '%s' -> parent: %llu, name: '%s'.\n",
+			__func__, old->ino, old_parent->ino, old_dentry->d_name.name,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2519: FILE: fs/pohmelfs/dir.c:1145:
+^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2551: FILE: fs/pohmelfs/dir.c:1177:
+^I.lookup ^I= pohmelfs_lookup,$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2561: FILE: fs/pohmelfs/inode.c:1:
+/*

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2656: FILE: fs/pohmelfs/inode.c:96:
+	dprintk("%s: cmd: %p, data: %p, len: %u, err: %u.\n",
+			__func__, cmd, data, cur_len, err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2679: FILE: fs/pohmelfs/inode.c:119:
+	printk("%s: completed ino: %llu, err: %d.\n", __func__, pi->ino, err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2684: FILE: fs/pohmelfs/inode.c:124:
+static int pohmelfs_write_trans_complete(struct page **pages, unsigned int page_num,
+		void *private, int err)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2686: FILE: fs/pohmelfs/inode.c:126:
+	unsigned i;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2689: FILE: fs/pohmelfs/inode.c:129:
+	dprintk("%s: pages: %lu-%lu, page_num: %u, err: %d.\n",
+			__func__, pages[0]->index, pages[page_num-1]->index,

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2689: FILE: fs/pohmelfs/inode.c:129:
+			__func__, pages[0]->index, pages[page_num-1]->index,
 			                                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2720: FILE: fs/pohmelfs/inode.c:160:
+	ret = radix_tree_gang_lookup_tag(&mapping->page_tree,
+				(void **)&page, index, 1, PAGECACHE_TAG_DIRTY);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2784: FILE: fs/pohmelfs/inode.c:224:
+		trans->page_num = nr_pages = find_get_pages_tag(mapping, &index,

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2789: FILE: fs/pohmelfs/inode.c:229:
+		dprintk("%s: t: %p, nr_pages: %u, end: %lu, index: %lu, max: %u.\n",
+				__func__, trans, nr_pages, end, index, trans->page_num);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2793: FILE: fs/pohmelfs/inode.c:233:
+^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2844: FILE: fs/pohmelfs/inode.c:284:
+				dprintk("%s: not clear for io page: %p, writeback: %d.\n",
+						__func__, page, PageWriteback(page));

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2852: FILE: fs/pohmelfs/inode.c:292:
+#if 0

WARNING:LONG_LINE_STRING: line length of 115 exceeds 100 columns
#2853: FILE: fs/pohmelfs/inode.c:293:
+			dprintk("%s: %u/%u added trans: %p, gen: %u, page: %p, [High: %d], size: %lu, idx: %lu.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2854: FILE: fs/pohmelfs/inode.c:294:
+			dprintk("%s: %u/%u added trans: %p, gen: %u, page: %p, [High: %d], size: %lu, idx: %lu.\n",
+					__func__, i, trans->page_num, trans, trans->gen, page,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2913: FILE: fs/pohmelfs/inode.c:353:
+	dprintk("%s: parent: %llu, ino: %llu, name: '%s'.\n",
+			__func__, parent->ino, n->ino, n->data);

WARNING:TYPO_SPELLING: 'childs' may be misspelled - perhaps 'children'?
#2919: FILE: fs/pohmelfs/inode.c:359:
+ * Removes all childs, marked for deletion, on server.
                ^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2953: FILE: fs/pohmelfs/inode.c:393:
+static int pohmelfs_write_inode_complete(struct page **pages, unsigned int page_num,
+		void *private, int err)

CHECK:BRACES: braces {} should be used on all arms of this statement
#2959: FILE: fs/pohmelfs/inode.c:399:
+		if (err) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2962: FILE: fs/pohmelfs/inode.c:402:
+		} else

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#3048: FILE: fs/pohmelfs/inode.c:488:
+		dprintk("%s: page: %p, locked: %d, uptodate: %d, error: %d, flags: %lx.\n",
 		                                   ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3049: FILE: fs/pohmelfs/inode.c:489:
+		dprintk("%s: page: %p, locked: %d, uptodate: %d, error: %d, flags: %lx.\n",
+				__func__, page, PageLocked(page), PageUptodate(page),

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3069: FILE: fs/pohmelfs/inode.c:509:
+
+

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#3073: FILE: fs/pohmelfs/inode.c:513:
+	dprintk("%s: page: %p, uptodate: %d, locked: %d, err: %d.\n",
 	                       ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3074: FILE: fs/pohmelfs/inode.c:514:
+	dprintk("%s: page: %p, uptodate: %d, locked: %d, err: %d.\n",
+			__func__, page, PageUptodate(page), PageLocked(page), err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3080: FILE: fs/pohmelfs/inode.c:520:
+static int pohmelfs_read_page_complete(struct page **pages, unsigned int page_num,
+		void *private, int err)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3083: FILE: fs/pohmelfs/inode.c:523:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3146: FILE: fs/pohmelfs/inode.c:586:
+	dprintk("%s: path: '%s', page: %p, ino: %llu, start: %llu, size: %lu.\n",
+			__func__, (char *)data, page, pi->ino, cmd->start, PAGE_CACHE_SIZE);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3165: FILE: fs/pohmelfs/inode.c:605:
+	printk("%s: page: %p, start: %lu, size: %lu, err: %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3166: FILE: fs/pohmelfs/inode.c:606:
+	printk("%s: page: %p, start: %lu, size: %lu, err: %d.\n",
+		__func__, page, page->index << PAGE_CACHE_SHIFT, PAGE_CACHE_SIZE, err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3176: FILE: fs/pohmelfs/inode.c:616:
+static int pohmelfs_write_begin(struct file *file, struct address_space *mapping,
+		loff_t pos, unsigned len, unsigned flags,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3176: FILE: fs/pohmelfs/inode.c:616:
+		loff_t pos, unsigned len, unsigned flags,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3176: FILE: fs/pohmelfs/inode.c:616:
+		loff_t pos, unsigned len, unsigned flags,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3182: FILE: fs/pohmelfs/inode.c:622:
+	unsigned start, end;

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#3193: FILE: fs/pohmelfs/inode.c:633:
+	dprintk("%s: page: %p pos: %llu, len: %u, index: %lu, start: %u, end: %u, uptodate: %d.\n",
 	                                                                          ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3194: FILE: fs/pohmelfs/inode.c:634:
+	dprintk("%s: page: %p pos: %llu, len: %u, index: %lu, start: %u, end: %u, uptodate: %d.\n",
+			__func__, page,	pos, len, index, start, end, PageUptodate(page));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3235: FILE: fs/pohmelfs/inode.c:675:
+static int pohmelfs_write_end(struct file *file, struct address_space *mapping,
+			loff_t pos, unsigned len, unsigned copied,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3235: FILE: fs/pohmelfs/inode.c:675:
+			loff_t pos, unsigned len, unsigned copied,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3235: FILE: fs/pohmelfs/inode.c:675:
+			loff_t pos, unsigned len, unsigned copied,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3241: FILE: fs/pohmelfs/inode.c:681:
+		unsigned from = pos & (PAGE_CACHE_SIZE - 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3253: FILE: fs/pohmelfs/inode.c:693:
+	dprintk("%s: page: %p [U: %d, D: %d, L: %d], pos: %llu, len: %u, copied: %u.\n",
+			__func__, page,

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#3264: FILE: fs/pohmelfs/inode.c:704:
+#if 0

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3278: FILE: fs/pohmelfs/inode.c:718:
+static int pohmelfs_readpages_trans_complete(struct page **__pages, unsigned int page_num,
+		void *private, int err)

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#3285: FILE: fs/pohmelfs/inode.c:725:
+	pages = kzalloc(sizeof(void *) * page_num, GFP_NOIO);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#3295: FILE: fs/pohmelfs/inode.c:735:
+	for (i=0; i<num; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#3295: FILE: fs/pohmelfs/inode.c:735:
+	for (i=0; i<num; ++i) {
 	           ^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#3299: FILE: fs/pohmelfs/inode.c:739:
+			printk("%s: %u/%u: page: %p, index: %lu, uptodate: %d, locked: %d, err: %d.\n",
 			                                         ^^^^^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3299: FILE: fs/pohmelfs/inode.c:739:
+			printk("%s: %u/%u: page: %p, index: %lu, uptodate: %d, locked: %d, err: %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3300: FILE: fs/pohmelfs/inode.c:740:
+			printk("%s: %u/%u: page: %p, index: %lu, uptodate: %d, locked: %d, err: %d.\n",
+				__func__, i, num, page, page->index,

WARNING:SPLIT_STRING: quoted string split across lines
#3363: FILE: fs/pohmelfs/inode.c:803:
+	dprintk("%s: t: %p, gen: %u, path: '%s', path_len: %u, "
+			"start: %lu, num: %u.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3382: FILE: fs/pohmelfs/inode.c:822:
+static int pohmelfs_readpages(struct file *file, struct address_space *mapping,
+			struct list_head *pages, unsigned nr_pages)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3382: FILE: fs/pohmelfs/inode.c:822:
+			struct list_head *pages, unsigned nr_pages)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3394: FILE: fs/pohmelfs/inode.c:834:
+		if (!add_to_page_cache_lru(page, mapping,
+					page->index, GFP_KERNEL)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#3395: FILE: fs/pohmelfs/inode.c:835:
+					page->index, GFP_KERNEL)) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3404: FILE: fs/pohmelfs/inode.c:844:
+			dprintk("%s: added to lru page: %p, page_index: %lu, first_index: %lu.\n",
+					__func__, page, page->index, first->index);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'num > 500'
#3406: FILE: fs/pohmelfs/inode.c:846:
+			if (unlikely(first->index + num != page->index) || (num > 500)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3408: FILE: fs/pohmelfs/inode.c:848:
+				pohmelfs_send_readpages(POHMELFS_I(mapping->host),
+						first, num);

WARNING:TYPO_SPELLING: 'addres' may be misspelled - perhaps 'address'?
#3427: FILE: fs/pohmelfs/inode.c:867:
+ * Small addres space operations for POHMELFS.
          ^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3435: FILE: fs/pohmelfs/inode.c:875:
+^I.set_page_dirty ^I= __set_page_dirty_nobuffers,$

WARNING:TYPO_SPELLING: 'initilizes' may be misspelled - perhaps 'initializes'?
#3463: FILE: fs/pohmelfs/inode.c:903:
+ * ->alloc_inode() callback. Allocates inode and initilizes private data.
                                                  ^^^^^^^^^^

WARNING:STATIC_CONST: Move const after static - use 'static const struct file_operations '
#3507: FILE: fs/pohmelfs/inode.c:947:
+const static struct file_operations pohmelfs_file_ops = {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3557: FILE: fs/pohmelfs/inode.c:997:
+^I$

WARNING:LONG_LINE_STRING: line length of 101 exceeds 100 columns
#3558: FILE: fs/pohmelfs/inode.c:998:
+	dprintk("%s: ino: %llu, mode: %o -> %o, uid: %u -> %u, gid: %u -> %u, size: %llu -> %llu.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3559: FILE: fs/pohmelfs/inode.c:999:
+	dprintk("%s: ino: %llu, mode: %o -> %o, uid: %u -> %u, gid: %u -> %u, size: %llu -> %llu.\n",
+			__func__, pi->ino, inode->i_mode, attr->ia_mode,

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#3560: FILE: fs/pohmelfs/inode.c:1000:
+			inode->i_uid, attr->ia_uid, inode->i_gid, attr->ia_gid, inode->i_size, attr->ia_size);

WARNING:LONG_LINE_STRING: line length of 112 exceeds 100 columns
#3614: FILE: fs/pohmelfs/inode.c:1054:
+	dprintk("%s: inode: %p, num: %lu/%llu inode is regular: %d, dir: %d, link: %d, mode: %o, size: %llu.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3615: FILE: fs/pohmelfs/inode.c:1055:
+	dprintk("%s: inode: %p, num: %lu/%llu inode is regular: %d, dir: %d, link: %d, mode: %o, size: %llu.\n",
+			__func__, inode, inode->i_ino, info->ino,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#3619: FILE: fs/pohmelfs/inode.c:1059:
+	inode->i_mtime = inode->i_atime = inode->i_ctime = CURRENT_TIME_SEC;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3653: FILE: fs/pohmelfs/inode.c:1093:
+static struct pohmelfs_inode *pohmelfs_get_inode_from_list(struct pohmelfs_sb *psb,
+		struct list_head *head, unsigned int *count)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3660: FILE: fs/pohmelfs/inode.c:1100:
+		pi = list_entry(head->next, struct pohmelfs_inode,
+					inode_entry);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#3686: FILE: fs/pohmelfs/inode.c:1126:
+	psb->trans_scan_timeout = psb->drop_scan_timeout = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3690: FILE: fs/pohmelfs/inode.c:1130:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3699: FILE: fs/pohmelfs/inode.c:1139:
+		dprintk("%s: ino: %llu, pi: %p, inode: %p, count: %u.\n",
+				__func__, pi->ino, pi, inode, count);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3702: FILE: fs/pohmelfs/inode.c:1142:
+			printk("%s: ino: %llu, pi: %p, inode: %p, count: %u, i_count: %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3703: FILE: fs/pohmelfs/inode.c:1143:
+			printk("%s: ino: %llu, pi: %p, inode: %p, count: %u, i_count: %d.\n",
+					__func__, pi->ino, pi, inode, count,

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#3710: FILE: fs/pohmelfs/inode.c:1150:
+			iput(&pi->vfs_inode);
 			^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3717: FILE: fs/pohmelfs/inode.c:1157:
+		dprintk("%s: ino: %llu, pi: %p, inode: %p, i_count: %u.\n",
+				__func__, pi->ino, pi, inode, atomic_read(&inode->i_count));

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#3727: FILE: fs/pohmelfs/inode.c:1167:
+			iput(inode);
 			^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3738: FILE: fs/pohmelfs/inode.c:1178:
+	printk("%s: inodes allocated: %d, destroyed: %d.\n", __func__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3739: FILE: fs/pohmelfs/inode.c:1179:
+	printk("%s: inodes allocated: %d, destroyed: %d.\n", __func__,
+		atomic_read(&inodes_allocated), atomic_read(&inodes_destroyed));

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#3782: FILE: fs/pohmelfs/inode.c:1222:
+		seq_printf(seq, ",crypto_fail_unsupported");

WARNING:LINE_SPACING: Missing a blank line after declarations
#3831: FILE: fs/pohmelfs/inode.c:1271:
+		int token;
+		if (!*p)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#3840: FILE: fs/pohmelfs/inode.c:1280:
+		switch (token) {
+			case pohmelfs_opt_idx:
[...]
+			case pohmelfs_opt_trans_scan_timeout:
[...]
+			case pohmelfs_opt_drop_scan_timeout:
[...]
+			case pohmelfs_opt_wait_on_page_timeout:
[...]
+			case pohmelfs_opt_trans_retries:
[...]
+			case pohmelfs_opt_crypto_thread_num:
[...]
+			case pohmelfs_opt_trans_max_pages:
[...]
+			case pohmelfs_opt_crypto_fail_unsupported:
[...]
+			default:

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3882: FILE: fs/pohmelfs/inode.c:1322:
+		dprintk("%s: ino: %llu, pi: %p, inode: %p, count: %u.\n",
+					__func__, pi->ino, pi, &pi->vfs_inode, count);

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#3884: FILE: fs/pohmelfs/inode.c:1324:
+			iput(&pi->vfs_inode);
 			^^^^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#3912: FILE: fs/pohmelfs/inode.c:1352:
+		if (timeout && time_after(dst->send_time + timeout, jiffies)
+				&& dst->retries == 0)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#3922: FILE: fs/pohmelfs/inode.c:1362:
+		if (timeout && (++dst->retries < psb->trans_retries)) {
+			err = netfs_trans_resend(t, psb);
+		}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3965: FILE: fs/pohmelfs/inode.c:1405:
+int pohmelfs_meta_command_data(struct pohmelfs_inode *pi, unsigned int cmd_op, char *addon,
+		unsigned int flags, netfs_trans_complete_t complete, void *priv, u64 start)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3977: FILE: fs/pohmelfs/inode.c:1417:
+^I$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#3979: FILE: fs/pohmelfs/inode.c:1419:
+	sz = path_len = pohmelfs_path_length(pi);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4063: FILE: fs/pohmelfs/inode.c:1503:
+int pohmelfs_meta_command(struct pohmelfs_inode *pi, unsigned int cmd_op, unsigned int flags,
+		netfs_trans_complete_t complete, void *priv, u64 start)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*psb)...) over kzalloc(sizeof(struct pohmelfs_sb)...)
#4079: FILE: fs/pohmelfs/inode.c:1519:
+	psb = kzalloc(sizeof(struct pohmelfs_sb), GFP_NOIO);

CHECK:SPACING: No space is necessary after a cast
#4124: FILE: fs/pohmelfs/inode.c:1564:
+	err = pohmelfs_parse_options((char *) data, psb);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4144: FILE: fs/pohmelfs/inode.c:1584:
+	npi = pohmelfs_create_entry_local(psb, NULL, &str, 0, 0755|S_IFDIR);
 	                                                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4157: FILE: fs/pohmelfs/inode.c:1597:
+^I$

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#4167: FILE: fs/pohmelfs/inode.c:1607:
+	iput(root);
 	^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4187: FILE: fs/pohmelfs/inode.c:1627:
+static int pohmelfs_get_sb(struct file_system_type *fs_type,
+	int flags, const char *dev_name, void *data, struct vfsmount *mnt)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4197: FILE: fs/pohmelfs/inode.c:1637:
+^I.kill_sb ^I= kill_anon_super,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4213: FILE: fs/pohmelfs/inode.c:1653:
+	pohmelfs_inode_cache = kmem_cache_create("pohmelfs_inode_cache",
+				sizeof(struct pohmelfs_inode),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4214: FILE: fs/pohmelfs/inode.c:1654:
+				0, (SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD),
 				                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#4261: FILE: fs/pohmelfs/inode.c:1701:
+        unregister_filesystem(&pohmel_fs_type);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4261: FILE: fs/pohmelfs/inode.c:1701:
+        unregister_filesystem(&pohmel_fs_type);$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4279: FILE: fs/pohmelfs/net.c:1:
+/*

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#4332: FILE: fs/pohmelfs/net.c:54:
+	BUG_ON(!size);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4346: FILE: fs/pohmelfs/net.c:68:
+	err = kernel_recvmsg(st->socket, &msg, &iov, 1, iov.iov_len,
+			msg.msg_flags);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4348: FILE: fs/pohmelfs/net.c:70:
+		printk("%s: failed to recv data: size: %llu, err: %d.\n", __func__, size, err);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'st->read_socket == st->socket'
#4393: FILE: fs/pohmelfs/net.c:115:
+		if (st->socket && (st->read_socket == st->socket) && (revents & POLLIN)) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4403: FILE: fs/pohmelfs/net.c:125:
+			printk("%s: revents: %x, socket: %p, size: %u, err: %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4404: FILE: fs/pohmelfs/net.c:126:
+			printk("%s: revents: %x, socket: %p, size: %u, err: %d.\n",
+					__func__, revents, st->socket, size, err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4421: FILE: fs/pohmelfs/net.c:143:
+			printk("%s: socket: %p, read_socket: %p, revents: %x, rev_error: %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#4422: FILE: fs/pohmelfs/net.c:144:
+			printk("%s: socket: %p, read_socket: %p, revents: %x, rev_error: %d, "
+					"should_stop: %d, size: %u, err: %d.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4434: FILE: fs/pohmelfs/net.c:156:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4438: FILE: fs/pohmelfs/net.c:160:
+^I$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#4447: FILE: fs/pohmelfs/net.c:169:
+struct netfs_poll_helper
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4448: FILE: fs/pohmelfs/net.c:170:
+^Ipoll_table ^I^Ipt;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4452: FILE: fs/pohmelfs/net.c:174:
+static int netfs_queue_wake(wait_queue_t *wait, unsigned mode, int sync, void *key)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4461: FILE: fs/pohmelfs/net.c:183:
+static void netfs_queue_func(struct file *file, wait_queue_head_t *whead,
+				 poll_table *pt)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4516: FILE: fs/pohmelfs/net.c:238:
+		printk("%s: failed to find inode: id: %llu.\n", __func__, cmd->id);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4523: FILE: fs/pohmelfs/net.c:245:
+		printk("%s: failed to find/lock page: page: %p, id: %llu, start: %llu, index: %llu.\n",

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#4524: FILE: fs/pohmelfs/net.c:246:
+				__func__, page, cmd->id, cmd->start, cmd->start >> PAGE_CACHE_SHIFT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4524: FILE: fs/pohmelfs/net.c:246:
+		printk("%s: failed to find/lock page: page: %p, id: %llu, start: %llu, index: %llu.\n",
+				__func__, page, cmd->id, cmd->start, cmd->start >> PAGE_CACHE_SHIFT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4624: FILE: fs/pohmelfs/net.c:346:
+		dprintk("%s: parent: %llu, ino: %llu, name: '%s', hash: %x, len: %u, mode: %o.\n",
+				__func__, parent->ino, info->ino, str.name, str.hash, str.len,

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#4648: FILE: fs/pohmelfs/net.c:370:
+	printk("%s: parent: %llu, ino: %llu, cmd_id: %llu.\n", __func__, parent->ino, cmd->start, cmd->id);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4648: FILE: fs/pohmelfs/net.c:370:
+	printk("%s: parent: %llu, ino: %llu, cmd_id: %llu.\n", __func__, parent->ino, cmd->start, cmd->id);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4671: FILE: fs/pohmelfs/net.c:393:
+		printk("%s: lookup response: id: %llu, start: %llu, size: %u.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4672: FILE: fs/pohmelfs/net.c:394:
+		printk("%s: lookup response: id: %llu, start: %llu, size: %u.\n",
+				__func__, cmd->id, cmd->start, cmd->size);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4684: FILE: fs/pohmelfs/net.c:406:
+		printk("%s: broken lookup response: id: %llu, start: %llu, size: %u.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4685: FILE: fs/pohmelfs/net.c:407:
+		printk("%s: broken lookup response: id: %llu, start: %llu, size: %u.\n",
+				__func__, cmd->id, cmd->start, cmd->size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4704: FILE: fs/pohmelfs/net.c:426:
+	dprintk("%s: parent: %llu, ino: %llu, name: '%s', start: %llu.\n",
+			__func__, parent->ino, info->ino, name, cmd->start);

CHECK:BRACES: braces {} should be used on all arms of this statement
#4706: FILE: fs/pohmelfs/net.c:428:
+	if (cmd->start)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#4708: FILE: fs/pohmelfs/net.c:430:
+	else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4738: FILE: fs/pohmelfs/net.c:460:
+	printk("%s: inode: %p, id: %llu, start: %llu, size: %u, err: %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4739: FILE: fs/pohmelfs/net.c:461:
+	printk("%s: inode: %p, id: %llu, start: %llu, size: %u, err: %d.\n",
+			__func__, inode, cmd->id, cmd->start, cmd->size, err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4754: FILE: fs/pohmelfs/net.c:476:
+		printk("%s: failed to find inode: id: %llu, start: %llu.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4755: FILE: fs/pohmelfs/net.c:477:
+		printk("%s: failed to find inode: id: %llu, start: %llu.\n",
+				__func__, cmd->id, cmd->start);

WARNING:UNSPECIFIED_INT: Prefer 'signed int' to bare use of 'signed'
#4810: FILE: fs/pohmelfs/net.c:532:
+	short err = (signed)cmd->ext;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#4821: FILE: fs/pohmelfs/net.c:543:
+		printk("%s: failed to find transaction: start: %llu: id: %llu, size: %u, ext: %u.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4822: FILE: fs/pohmelfs/net.c:544:
+		printk("%s: failed to find transaction: start: %llu: id: %llu, size: %u, ext: %u.\n",
+				__func__, cmd->start, cmd->id, cmd->size, cmd->ext);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4828: FILE: fs/pohmelfs/net.c:550:
+	dprintk("%s: sync transaction reply: t: %p, refcnt: %d, gen: %u, flags: %x, err: %d.\n",
+			__func__, t, atomic_read(&t->refcnt), t->gen, t->flags, err);

WARNING:LONG_LINE_STRING: line length of 101 exceeds 100 columns
#4874: FILE: fs/pohmelfs/net.c:596:
+	dprintk("%s: ino: %llu, mode: %o -> %o, uid: %u -> %u, gid: %u -> %u, size: %llu -> %llu.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4875: FILE: fs/pohmelfs/net.c:597:
+	dprintk("%s: ino: %llu, mode: %o -> %o, uid: %u -> %u, gid: %u -> %u, size: %llu -> %llu.\n",
+			__func__, POHMELFS_I(inode)->ino, inode->i_mode, info->mode,

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#4876: FILE: fs/pohmelfs/net.c:598:
+			inode->i_uid, info->uid, inode->i_gid, info->gid, inode->i_size, info->size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4926: FILE: fs/pohmelfs/net.c:648:
+	dprintk("%s: ino: %llu, isize: %llu, new_size: %llu.\n",
+			__func__, POHMELFS_I(inode)->ino, isize, cmd->start);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4927: FILE: fs/pohmelfs/net.c:649:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4959: FILE: fs/pohmelfs/net.c:681:
+	dprintk("%s: cipher '%s': %s, hash: '%s': %s.\n",
+			__func__,

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#4960: FILE: fs/pohmelfs/net.c:682:
+			psb->cipher_string, (cap->cipher_strlen)?"SUPPORTED":"NOT SUPPORTED",
 			                                        ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#4960: FILE: fs/pohmelfs/net.c:682:
+			psb->cipher_string, (cap->cipher_strlen)?"SUPPORTED":"NOT SUPPORTED",
 			                                                    ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#4961: FILE: fs/pohmelfs/net.c:683:
+			psb->hash_string, (cap->hash_strlen)?"SUPPORTED":"NOT SUPPORTED");
 			                                    ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#4961: FILE: fs/pohmelfs/net.c:683:
+			psb->hash_string, (cap->hash_strlen)?"SUPPORTED":"NOT SUPPORTED");
 			                                                ^

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#4965: FILE: fs/pohmelfs/net.c:687:
+			err = -ENOTSUPP;

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#4973: FILE: fs/pohmelfs/net.c:695:
+			err = -ENOTSUPP;

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#4982: FILE: fs/pohmelfs/net.c:704:
+static void __inline__ netfs_state_reset(struct netfs_state *st)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

WARNING:INLINE: plain inline is preferred over __inline__
#4982: FILE: fs/pohmelfs/net.c:704:
+static void __inline__ netfs_state_reset(struct netfs_state *st)

WARNING:SPLIT_STRING: quoted string split across lines
#5022: FILE: fs/pohmelfs/net.c:744:
+		dprintk("%s: cmd: %u, id: %llu, start: %llu, size: %u, "
+				"ext: %u, csize: %u, cpad: %u.\n",

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#5029: FILE: fs/pohmelfs/net.c:751:
+			if (unlikely(cmd->csize > e->size/2)) {
 			                                 ^

WARNING:SPLIT_STRING: quoted string split across lines
#5036: FILE: fs/pohmelfs/net.c:758:
+				dprintk("%s: cmd: cmd: %u, id: %llu, start: %llu, size: %u, "
+						"csize: %u != digest size %u.\n",

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#5054: FILE: fs/pohmelfs/net.c:776:
+				for (i=0; i<cmd->csize; ++i) {
 				      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#5054: FILE: fs/pohmelfs/net.c:776:
+				for (i=0; i<cmd->csize; ++i) {
 				           ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#5054: FILE: fs/pohmelfs/net.c:776:
+				for (i=0; i<cmd->csize; ++i) {
+					dprintk("%02x ", hash[i]);
+				}

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#5071: FILE: fs/pohmelfs/net.c:793:
+		switch (cmd->cmd) {
+			case NETFS_READ_PAGE:
[...]
+			case NETFS_READDIR:
[...]
+			case NETFS_LOOKUP:
[...]
+			case NETFS_CREATE:
[...]
+			case NETFS_REMOVE:
[...]
+			case NETFS_TRANS:
[...]
+			case NETFS_INODE_INFO:
[...]
+			case NETFS_PAGE_CACHE:
[...]
+			case NETFS_CAPABILITIES:
[...]
+			default:

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#5100: FILE: fs/pohmelfs/net.c:822:
+				printk("%s: wrong cmd: %u, id: %llu, start: %llu, size: %u, ext: %u.\n",

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#5101: FILE: fs/pohmelfs/net.c:823:
+					__func__, cmd->cmd, cmd->id, cmd->start, cmd->size, cmd->ext);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5101: FILE: fs/pohmelfs/net.c:823:
+				printk("%s: wrong cmd: %u, id: %llu, start: %llu, size: %u, ext: %u.\n",
+					__func__, cmd->cmd, cmd->id, cmd->start, cmd->size, cmd->ext);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#5126: FILE: fs/pohmelfs/net.c:848:
+	st->socket->sk->sk_sndtimeo = st->socket->sk->sk_rcvtimeo = msecs_to_jiffies(60000);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#5130: FILE: fs/pohmelfs/net.c:852:
+		printk("%s: failed to connect to server: idx: %u, err: %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5131: FILE: fs/pohmelfs/net.c:853:
+		printk("%s: failed to connect to server: idx: %u, err: %d.\n",
+				__func__, st->psb->idx, err);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#5134: FILE: fs/pohmelfs/net.c:856:
+	st->socket->sk->sk_sndtimeo = st->socket->sk->sk_rcvtimeo = msecs_to_jiffies(10000);

WARNING:LINE_SPACING: Missing a blank line after declarations
#5142: FILE: fs/pohmelfs/net.c:864:
+		struct sockaddr_in *sin = (struct sockaddr_in *)&ctl->addr;
+		printk(KERN_INFO "%s: (re)connected to peer %u.%u.%u.%u:%d.\n", __func__,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#5142: FILE: fs/pohmelfs/net.c:864:
+		printk(KERN_INFO "%s: (re)connected to peer %u.%u.%u.%u:%d.\n", __func__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5143: FILE: fs/pohmelfs/net.c:865:
+		printk(KERN_INFO "%s: (re)connected to peer %u.%u.%u.%u:%d.\n", __func__,
+			NIPQUAD(sin->sin_addr.s_addr), ntohs(sin->sin_port));

WARNING:LINE_SPACING: Missing a blank line after declarations
#5146: FILE: fs/pohmelfs/net.c:868:
+		struct sockaddr_in6 *sin = (struct sockaddr_in6 *)&ctl->addr;
+		printk(KERN_INFO "%s: (re)connected to peer "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#5146: FILE: fs/pohmelfs/net.c:868:
+		printk(KERN_INFO "%s: (re)connected to peer "

WARNING:SPLIT_STRING: quoted string split across lines
#5147: FILE: fs/pohmelfs/net.c:869:
+		printk(KERN_INFO "%s: (re)connected to peer "
+			"%04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x:%d",

WARNING:LINE_SPACING: Missing a blank line after declarations
#5168: FILE: fs/pohmelfs/net.c:890:
+			struct sockaddr_in *sin = (struct sockaddr_in *)&st->ctl.addr;
+			printk(KERN_INFO "%s: disconnected from peer %u.%u.%u.%u:%d.\n", __func__,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#5168: FILE: fs/pohmelfs/net.c:890:
+			printk(KERN_INFO "%s: disconnected from peer %u.%u.%u.%u:%d.\n", __func__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5169: FILE: fs/pohmelfs/net.c:891:
+			printk(KERN_INFO "%s: disconnected from peer %u.%u.%u.%u:%d.\n", __func__,
+				NIPQUAD(sin->sin_addr.s_addr), ntohs(sin->sin_port));

WARNING:LINE_SPACING: Missing a blank line after declarations
#5172: FILE: fs/pohmelfs/net.c:894:
+			struct sockaddr_in6 *sin = (struct sockaddr_in6 *)&st->ctl.addr;
+			printk(KERN_INFO "%s: disconnected from peer "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#5172: FILE: fs/pohmelfs/net.c:894:
+			printk(KERN_INFO "%s: disconnected from peer "

WARNING:SPLIT_STRING: quoted string split across lines
#5173: FILE: fs/pohmelfs/net.c:895:
+			printk(KERN_INFO "%s: disconnected from peer "
+				"%04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x:%d",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5220: FILE: fs/pohmelfs/net.c:942:
+	dprintk("%s: conf: %p, st: %p, socket: %p.\n",
+			__func__, conf, st, st->socket);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#5232: FILE: fs/pohmelfs/net.c:954:
+
+}

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#5241: FILE: fs/pohmelfs/net.c:963:
+	st->socket->sk->sk_sndtimeo = st->socket->sk->sk_rcvtimeo = 0;

CHECK:BRACES: braces {} should be used on all arms of this statement
#5300: FILE: fs/pohmelfs/net.c:1022:
+	if (!list_empty(&psb->state_list)) {
[...]
+	} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5303: FILE: fs/pohmelfs/net.c:1025:
+			psb->active_state = list_entry(c->config_entry.next,
+				struct pohmelfs_config, config_entry);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5306: FILE: fs/pohmelfs/net.c:1028:
+			psb->active_state = list_entry(psb->state_list.next,
+				struct pohmelfs_config, config_entry);

CHECK:BRACES: Unbalanced braces around else statement
#5308: FILE: fs/pohmelfs/net.c:1030:
+	} else

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#5324: FILE: fs/pohmelfs/net.c:1046:
+		if (pohmelfs_config_check(c, psb->idx)) {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#5332: FILE: fs/pohmelfs/net.c:1054:
+^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#5344: FILE: fs/pohmelfs/netfs.h:1:
+/*

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#5373: FILE: fs/pohmelfs/netfs.h:30:
+struct netfs_cmd
+{

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#5398: FILE: fs/pohmelfs/netfs.h:55:
+#define NETFS_TRANS_SINGLE_DST		(1<<0)
                               		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#5398: FILE: fs/pohmelfs/netfs.h:55:
+#define NETFS_TRANS_SINGLE_DST		(1<<0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#5432: FILE: fs/pohmelfs/netfs.h:89:
+struct saddr
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#5443: FILE: fs/pohmelfs/netfs.h:100:
+struct pohmelfs_crypto
+{

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#5445: FILE: fs/pohmelfs/netfs.h:102:
+	unsigned short		strlen;		/* Size of the attached crypto string including 0-byte

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5446: FILE: fs/pohmelfs/netfs.h:103:
+						 * "cbc(aes)" for example */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#5456: FILE: fs/pohmelfs/netfs.h:113:
+struct pohmelfs_ctl
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#5468: FILE: fs/pohmelfs/netfs.h:125:
+struct pohmelfs_cn_ack
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#5479: FILE: fs/pohmelfs/netfs.h:136:
+struct netfs_inode_info
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#5520: FILE: fs/pohmelfs/netfs.h:177:
+struct netfs_path_entry
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#5535: FILE: fs/pohmelfs/netfs.h:192:
+struct netfs_capabilities
+{

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#5536: FILE: fs/pohmelfs/netfs.h:193:
+	unsigned short		hash_strlen;	/* Hash string length, like "hmac(sha1) including 0 byte "*/

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#5560: FILE: fs/pohmelfs/netfs.h:217:
+struct pohmelfs_name
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#5581: FILE: fs/pohmelfs/netfs.h:238:
+struct pohmelfs_inode
+{

WARNING:LONG_LINE_COMMENT: line length of 118 exceeds 100 columns
#5583: FILE: fs/pohmelfs/netfs.h:240:
+							 * Objects which are not bound to dentry require to be dropped

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#5587: FILE: fs/pohmelfs/netfs.h:244:
+	struct rb_root		hash_root;		/* The same, but indexed by name hash and len */

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#5590: FILE: fs/pohmelfs/netfs.h:247:
+	struct list_head	sync_del_list, sync_create_list;	/* Sync list (create is not used).

WARNING:LONG_LINE_COMMENT: line length of 119 exceeds 100 columns
#5591: FILE: fs/pohmelfs/netfs.h:248:
+									 * It contains children scheduled to be removed

WARNING:LONG_LINE_COMMENT: line length of 120 exceeds 100 columns
#5601: FILE: fs/pohmelfs/netfs.h:258:
+	u64			total_len;		/* Total length of all children names, used to create offsets */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5607: FILE: fs/pohmelfs/netfs.h:264:
+typedef int (* netfs_trans_complete_t)(struct page **pages, unsigned int page_num,

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#5607: FILE: fs/pohmelfs/netfs.h:264:
+typedef int (* netfs_trans_complete_t)(struct page **pages, unsigned int page_num,
              ^

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#5614: FILE: fs/pohmelfs/netfs.h:271:
+struct netfs_trans
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#5681: FILE: fs/pohmelfs/netfs.h:338:
+^I$

WARNING:UNSPECIFIED_INT: Prefer 'signed int' to bare use of 'signed'
#5702: FILE: fs/pohmelfs/netfs.h:359:
+	return (signed)(t->total_size - t->iovec.iov_len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5711: FILE: fs/pohmelfs/netfs.h:368:
+struct netfs_trans *netfs_trans_alloc(struct pohmelfs_sb *psb, unsigned int size,
+		unsigned int flags, unsigned int nr);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#5722: FILE: fs/pohmelfs/netfs.h:379:
+struct netfs_trans_dst
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#5752: FILE: fs/pohmelfs/netfs.h:409:
+struct pohmelfs_crypto_engine
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#5770: FILE: fs/pohmelfs/netfs.h:427:
+struct pohmelfs_crypto_thread
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#5793: FILE: fs/pohmelfs/netfs.h:450:
+struct netfs_state
+{

WARNING:LONG_LINE_COMMENT: line length of 113 exceeds 100 columns
#5794: FILE: fs/pohmelfs/netfs.h:451:
+	struct mutex		__state_lock;		/* Can not allow to use the same socket simultaneously */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#5795: FILE: fs/pohmelfs/netfs.h:452:
+^Istruct netfs_cmd ^Icmd;^I^I^I/* Cached command */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#5806: FILE: fs/pohmelfs/netfs.h:463:
+^Iwait_queue_t ^I^Iwait;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#5807: FILE: fs/pohmelfs/netfs.h:464:
+^Iwait_queue_head_t ^I*whead;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#5808: FILE: fs/pohmelfs/netfs.h:465:
+^Iwait_queue_head_t ^Ithread_wait;$

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#5810: FILE: fs/pohmelfs/netfs.h:467:
+	struct mutex		trans_lock;

WARNING:LONG_LINE_COMMENT: line length of 118 exceeds 100 columns
#5817: FILE: fs/pohmelfs/netfs.h:474:
+							 * Used to determine if between lock drops socket was changed.

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#5818: FILE: fs/pohmelfs/netfs.h:475:
+							 * Never used to read data or any kind of access.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#5836: FILE: fs/pohmelfs/netfs.h:493:
+	BUG_ON(!mutex_is_locked(&st->__state_lock));

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#5856: FILE: fs/pohmelfs/netfs.h:513:
+struct pohmelfs_sb
+{

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#5858: FILE: fs/pohmelfs/netfs.h:515:
+	struct mutex		path_lock;

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#5873: FILE: fs/pohmelfs/netfs.h:530:
+	struct mutex		crypto_thread_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#5887: FILE: fs/pohmelfs/netfs.h:544:
+	spinlock_t		ino_lock;

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#5891: FILE: fs/pohmelfs/netfs.h:548:
+	struct mutex		state_lock;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#5892: FILE: fs/pohmelfs/netfs.h:549:
+^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#5895: FILE: fs/pohmelfs/netfs.h:552:
+^Istruct delayed_work ^Idwork;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#5896: FILE: fs/pohmelfs/netfs.h:553:
+^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#5897: FILE: fs/pohmelfs/netfs.h:554:
+^Istruct delayed_work ^Idrop_dwork;$

WARNING:TYPO_SPELLING: 'perfrom' may be misspelled - perhaps 'perform'?
#5921: FILE: fs/pohmelfs/netfs.h:578:
+	 * Controls whether to perfrom crypto processing or not.
 	                       ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5927: FILE: fs/pohmelfs/netfs.h:584:
+static inline void netfs_trans_update(struct netfs_cmd *cmd,
+		struct netfs_trans *t, unsigned int size)

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#5967: FILE: fs/pohmelfs/netfs.h:624:
+struct pohmelfs_config
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#5974: FILE: fs/pohmelfs/netfs.h:631:
+struct pohmelfs_config_group
+{

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6032: FILE: fs/pohmelfs/netfs.h:689:
+struct pohmelfs_inode *pohmelfs_create_entry_local(struct pohmelfs_sb *psb,
+	struct pohmelfs_inode *parent, struct qstr *str, u64 start, int mode);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6035: FILE: fs/pohmelfs/netfs.h:692:
+struct pohmelfs_inode *pohmelfs_new_inode(struct pohmelfs_sb *psb,
+		struct pohmelfs_inode *parent, struct qstr *str,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6042: FILE: fs/pohmelfs/netfs.h:699:
+int pohmelfs_meta_command(struct pohmelfs_inode *pi, unsigned int cmd_op, unsigned int flags,
+		netfs_trans_complete_t complete, void *priv, u64 start);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6044: FILE: fs/pohmelfs/netfs.h:701:
+int pohmelfs_meta_command_data(struct pohmelfs_inode *pi, unsigned int cmd_op, char *addon,
+		unsigned int flags, netfs_trans_complete_t complete, void *priv, u64 start);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#6050: FILE: fs/pohmelfs/netfs.h:707:
+struct pohmelfs_path_entry
+{

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#6065: FILE: fs/pohmelfs/netfs.h:722:
+struct pohmelfs_path_entry * pohmelfs_add_path_entry(struct pohmelfs_sb *psb,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6066: FILE: fs/pohmelfs/netfs.h:723:
+struct pohmelfs_path_entry * pohmelfs_add_path_entry(struct pohmelfs_sb *psb,
+	u64 parent_ino, u64 ino, struct qstr *str, int link, unsigned int mode);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#6076: FILE: fs/pohmelfs/netfs.h:733:
+struct pohmelfs_crypto_completion
+{

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6089: FILE: fs/pohmelfs/netfs.h:746:
+int pohmelfs_crypto_process_input_data(struct pohmelfs_crypto_engine *e, u64 iv,
+		void *data, struct page *page, unsigned int size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6091: FILE: fs/pohmelfs/netfs.h:748:
+int pohmelfs_crypto_process_input_page(struct pohmelfs_crypto_engine *e,
+		struct page *page, unsigned int size, u64 iv);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#6110: FILE: fs/pohmelfs/netfs.h:767:
+#define dprintk(f, a...) printk(f, ##a)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6134: FILE: fs/pohmelfs/netfs.h:791:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6144: FILE: fs/pohmelfs/path_entry.c:1:
+/*

WARNING:TYPO_SPELLING: 'pathes' may be misspelled - perhaps 'paths'?
#6173: FILE: fs/pohmelfs/path_entry.c:30:
+ * Used to create pathes to root, strings (or structures,
                   ^^^^^^

WARNING:TYPO_SPELLING: 'pathes' may be misspelled - perhaps 'paths'?
#6178: FILE: fs/pohmelfs/path_entry.c:35:
+ * with anyone else, server operates on names and pathes, not some obscure ids.
                                                   ^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6233: FILE: fs/pohmelfs/path_entry.c:90:
+static struct pohmelfs_path_entry *pohmelfs_insert_path_entry(struct rb_root *root,
+		struct pohmelfs_path_entry *new)

CHECK:BRACES: braces {} should be used on all arms of this statement
#6245: FILE: fs/pohmelfs/path_entry.c:102:
+		if (cmp < 0)
[...]
+		else if (cmp > 0)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#6249: FILE: fs/pohmelfs/path_entry.c:106:
+		else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#6256: FILE: fs/pohmelfs/path_entry.c:113:
+		printk("%s: exist: ino: %llu, data: '%s', new: ino: %llu, data: '%s'.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6257: FILE: fs/pohmelfs/path_entry.c:114:
+		printk("%s: exist: ino: %llu, data: '%s', new: ino: %llu, data: '%s'.\n",
+			__func__, ret->ino, ret->name, new->ino, new->name);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'e->len >= str->len'
#6311: FILE: fs/pohmelfs/path_entry.c:168:
+	if ((e->len >= str->len) && (parent_ino == e->parent->ino)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'parent_ino == e->parent->ino'
#6311: FILE: fs/pohmelfs/path_entry.c:168:
+	if ((e->len >= str->len) && (parent_ino == e->parent->ino)) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#6331: FILE: fs/pohmelfs/path_entry.c:188:
+struct pohmelfs_path_entry * pohmelfs_add_path_entry(struct pohmelfs_sb *psb,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6332: FILE: fs/pohmelfs/path_entry.c:189:
+struct pohmelfs_path_entry * pohmelfs_add_path_entry(struct pohmelfs_sb *psb,
+	u64 parent_ino, u64 ino, struct qstr *str, int link, unsigned int mode)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6362: FILE: fs/pohmelfs/path_entry.c:219:
+	dprintk("%s: parent: %llu, ino: %llu, name: '%s', len: %u.\n",
+			__func__, parent_ino, ino, e->name, e->len);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#6367: FILE: fs/pohmelfs/path_entry.c:224:
+static int pohmelfs_prepare_path(struct pohmelfs_inode *pi, struct list_head *list, int len, int create)

WARNING:TYPO_SPELLING: 'stuctures' may be misspelled - perhaps 'structures'?
#6391: FILE: fs/pohmelfs/path_entry.c:248:
+ * Path is formed as set of stuctures, containing name of the object
                             ^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6422: FILE: fs/pohmelfs/path_entry.c:279:
+		dprintk("%s: ino: %llu, mode: %o, is_link: %d, name: '%s', used: %d, ne_len: %u.\n",
+				__func__, e->ino, ne->mode, e->link, e->name, used, ne->len);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#6452: FILE: fs/pohmelfs/path_entry.c:309:
+			BUG_ON(!e->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6460: FILE: fs/pohmelfs/path_entry.c:317:
+	dprintk("%s: inode: %llu, full path: '%s', used: %d.\n",
+			__func__, pi->ino, (char *)data, used);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6506: FILE: fs/pohmelfs/trans.c:1:
+/*

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#6558: FILE: fs/pohmelfs/trans.c:53:
+	struct page **pages = (t->eng)?t->eng->pages:t->pages;
 	                              ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#6558: FILE: fs/pohmelfs/trans.c:53:
+	struct page **pages = (t->eng)?t->eng->pages:t->pages;
 	                                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#6569: FILE: fs/pohmelfs/trans.c:64:
+	for (i=0; i<t->page_num; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#6569: FILE: fs/pohmelfs/trans.c:64:
+	for (i=0; i<t->page_num; ++i) {
 	           ^

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#6600: FILE: fs/pohmelfs/trans.c:95:
+		err = kernel_sendmsg(st->socket, &msg, (struct kvec *)msg.msg_iov, 1, sizeof(struct netfs_cmd));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#6602: FILE: fs/pohmelfs/trans.c:97:
+			printk("%s: %d/%d failed to send transaction header: t: %p, gen: %u, err: %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6603: FILE: fs/pohmelfs/trans.c:98:
+			printk("%s: %d/%d failed to send transaction header: t: %p, gen: %u, err: %d.\n",
+					__func__, i, t->page_num, t, t->gen, err);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#6609: FILE: fs/pohmelfs/trans.c:104:
+		msg.msg_flags = MSG_WAITALL|(attached_pages == 1)?0:MSG_MORE;
 		                           ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#6609: FILE: fs/pohmelfs/trans.c:104:
+		msg.msg_flags = MSG_WAITALL|(attached_pages == 1)?0:MSG_MORE;
 		                                                 ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#6609: FILE: fs/pohmelfs/trans.c:104:
+		msg.msg_flags = MSG_WAITALL|(attached_pages == 1)?0:MSG_MORE;
 		                                                   ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#6613: FILE: fs/pohmelfs/trans.c:108:
+			printk("%s: %d/%d failed to send transaction page: t: %p, gen: %u, size: %u, err: %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6614: FILE: fs/pohmelfs/trans.c:109:
+			printk("%s: %d/%d failed to send transaction page: t: %p, gen: %u, size: %u, err: %d.\n",
+					__func__, i, t->page_num, t, t->gen, size, err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#6632: FILE: fs/pohmelfs/trans.c:127:
+		printk("%s: t: %p, gen: %u, err: %d.\n", __func__, t, t->gen, err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#6665: FILE: fs/pohmelfs/trans.c:160:
+		printk("%s: failed to send contig transaction: t: %p, gen: %u, size: %u, err: %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6666: FILE: fs/pohmelfs/trans.c:161:
+		printk("%s: failed to send contig transaction: t: %p, gen: %u, size: %u, err: %d.\n",
+				__func__, t, t->gen, t->iovec.iov_len, err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6673: FILE: fs/pohmelfs/trans.c:168:
+	dprintk("%s: sent %s transaction: t: %p, gen: %u, size: %u, page_num: %u.\n",
+			__func__, (t->page_num)?"partial":"full",

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#6673: FILE: fs/pohmelfs/trans.c:168:
+			__func__, (t->page_num)?"partial":"full",
 			                       ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#6673: FILE: fs/pohmelfs/trans.c:168:
+			__func__, (t->page_num)?"partial":"full",
 			                                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#6682: FILE: fs/pohmelfs/trans.c:177:
+^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#6712: FILE: fs/pohmelfs/trans.c:207:
+		if (cmp < 0)
[...]
+		else if (cmp > 0)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#6716: FILE: fs/pohmelfs/trans.c:211:
+		else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#6740: FILE: fs/pohmelfs/trans.c:235:
+		if (cmp < 0)
[...]
+		else if (cmp > 0)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#6744: FILE: fs/pohmelfs/trans.c:239:
+		else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#6751: FILE: fs/pohmelfs/trans.c:246:
+		printk("%s: exist: old: gen: %u, flags: %x, send_time: %lu, "

WARNING:SPLIT_STRING: quoted string split across lines
#6752: FILE: fs/pohmelfs/trans.c:247:
+		printk("%s: exist: old: gen: %u, flags: %x, send_time: %lu, "
+				"new: gen: %u, flags: %x, send_time: %lu.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6823: FILE: fs/pohmelfs/trans.c:318:
+	dprintk("%s: t: %p, gen: %u, state: %p, dst: %p.\n",
+			__func__, t, t->gen, st, dst);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6872: FILE: fs/pohmelfs/trans.c:367:
+	dprintk("%s: t: %p, gen: %u, state: %p, dst: %p.\n",
+			__func__, t, t->gen, dst->state, dst);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#6877: FILE: fs/pohmelfs/trans.c:372:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#7045: FILE: fs/pohmelfs/trans.c:540:
+ * least one destination target. $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7070: FILE: fs/pohmelfs/trans.c:565:
+				dprintk("%s: resending st: %p, t: %p, gen: %u.\n",
+						__func__, st, t, t->gen);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7079: FILE: fs/pohmelfs/trans.c:574:
+		dprintk("%s: pushing/resending st: %p, t: %p, gen: %u.\n",
+				__func__, st, t, t->gen);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7104: FILE: fs/pohmelfs/trans.c:599:
+		dprintk("%s: too big size t: %p, gen: %u, iov_len: %u, size: %u, total: %u.\n",
+				__func__, t, t->gen, io->iov_len, size, t->total_size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7127: FILE: fs/pohmelfs/trans.c:622:
+struct netfs_trans *netfs_trans_alloc(struct pohmelfs_sb *psb, unsigned int size,
+		unsigned int flags, unsigned int nr)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#7158: FILE: fs/pohmelfs/trans.c:653:
+	num = (PAGE_SIZE - cont)/sizeof(struct page *);
 	                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#7163: FILE: fs/pohmelfs/trans.c:658:
+	t = kzalloc(cont + nr*sizeof(struct page *), GFP_NOIO);
 	                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7190: FILE: fs/pohmelfs/trans.c:685:
+	dprintk("%s: t: %p, gen: %u, size: %u, flags: %x, page_num: %u, base: %p, pages: %p.\n",
+			__func__, t, t->gen, size, flags, nr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#7204: FILE: fs/pohmelfs/trans.c:699:
+	netfs_trans_dst = kmem_cache_create("netfs_trans_dst", sizeof(struct netfs_trans_dst),
+			0, 0, NULL);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000249528.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 84 errors, 162 warnings, 240 checks, 7123 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000249528.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
