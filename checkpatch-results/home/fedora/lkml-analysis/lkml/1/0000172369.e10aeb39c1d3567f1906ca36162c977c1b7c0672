WARNING:NEEDLESS_IF: kmem_cache_destroy(NULL) is safe and this check is probably not required
#119: FILE: fs/dazukofs/event.c:132:
+	if (dazukofs_group_cachep)
+		kmem_cache_destroy(dazukofs_group_cachep);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#535: FILE: fs/dazukofs/event.c:675:
+		ec_array[i] = kmem_cache_zalloc(

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#715: FILE: fs/dazukofs/ctrl_dev.c:1:
+/* dazukofs: access control stackable filesystem

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#716: FILE: fs/dazukofs/ctrl_dev.c:2:
+/* dazukofs: access control stackable filesystem
+

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#731: FILE: fs/dazukofs/ctrl_dev.c:17:
+   along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#732: FILE: fs/dazukofs/ctrl_dev.c:18:
+   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.$

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#758: FILE: fs/dazukofs/ctrl_dev.c:44:
+	if (file->private_data)
+		kfree(file->private_data);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "strchr"
#796: FILE: fs/dazukofs/ctrl_dev.c:82:
+	if (strchr(DAZUKOFS_ALLOWED_GROUPCHARS, c) != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'group_id' - possible side-effects?
#958: FILE: fs/dazukofs/group_dev.c:114:
+#define DECLARE_GROUP_FOPS(group_id) \
+static ssize_t \
+dazukofs_group_read_##group_id(struct file *file, char __user *buffer, \
+			       size_t length, loff_t *pos) \
+{ \
+	return dazukofs_group_read(group_id, file, buffer, length, pos); \
+} \
+static ssize_t \
+dazukofs_group_write_##group_id(struct file *file, \
+				const char __user *buffer, size_t length, \
+				loff_t *pos) \
+{ \
+	return dazukofs_group_write(group_id, file, buffer, length, pos); \
+} \
+static const struct file_operations group_fops_##group_id = { \
+	.owner		= THIS_MODULE, \
+	.read		= dazukofs_group_read_##group_id, \
+	.write		= dazukofs_group_write_##group_id, \
+};

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#958: FILE: fs/dazukofs/group_dev.c:114:
+#define DECLARE_GROUP_FOPS(group_id) \
+static ssize_t \
+dazukofs_group_read_##group_id(struct file *file, char __user *buffer, \
+			       size_t length, loff_t *pos) \
+{ \
+	return dazukofs_group_read(group_id, file, buffer, length, pos); \
+} \
+static ssize_t \
+dazukofs_group_write_##group_id(struct file *file, \
+				const char __user *buffer, size_t length, \
+				loff_t *pos) \
+{ \
+	return dazukofs_group_write(group_id, file, buffer, length, pos); \
+} \
+static const struct file_operations group_fops_##group_id = { \
+	.owner		= THIS_MODULE, \
+	.read		= dazukofs_group_read_##group_id, \
+	.write		= dazukofs_group_write_##group_id, \
+};

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1151: FILE: fs/dazukofs/dev.h:38:
+extern int dazukofs_ctrl_dev_init(int dev_major, int dev_minor,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1153: FILE: fs/dazukofs/dev.h:40:
+extern void dazukofs_ctrl_dev_destroy(int dev_major, int dev_minor,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1167: FILE: fs/dazukofs/event.h:27:
+extern int dazukofs_get_event(unsigned long group_id,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1169: FILE: fs/dazukofs/event.h:29:
+extern int dazukofs_return_event(unsigned long group_id,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1174: FILE: fs/dazukofs/event.h:34:
+extern int dazukofs_get_groups(char **buf);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1175: FILE: fs/dazukofs/event.h:35:
+extern int dazukofs_add_group(const char *name);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1176: FILE: fs/dazukofs/event.h:36:
+extern int dazukofs_remove_group(const char *name);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000172369.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 5 warnings, 10 checks, 1160 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000172369.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
