WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
   git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip.git sched-for-linus

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#69: 
Américo Wang (1):
  ^

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#179: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'head' - possible side-effects?
#418: FILE: include/linux/plist.h:99:
+#define _PLIST_HEAD_INIT(head)				\
+	.prio_list = LIST_HEAD_INIT((head).prio_list),	\
+	.node_list = LIST_HEAD_INIT((head).node_list)

ERROR:CODE_INDENT: code indent should use tabs where possible
#431: FILE: include/linux/plist.h:110:
+        _PLIST_HEAD_INIT(head),                         \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: include/linux/plist.h:110:
+        _PLIST_HEAD_INIT(head),                         \$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#440: FILE: include/linux/plist.h:122:
+^I.plist = { _PLIST_HEAD_INIT((node).plist) }, ^I\$

WARNING:SPACING: Unnecessary space before function pointer arguments
#452: FILE: include/linux/sched.h:1001:
+	int (*needs_post_schedule) (struct rq *this_rq);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#579: FILE: kernel/latencytop.c:146:
+static inline void store_stacktrace(struct task_struct *tsk,
+					struct latency_record *lat)

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#591: FILE: kernel/latencytop.c:157:
+ * __account_scheduler_latency - record an occured latency
                                            ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#650: FILE: kernel/latencytop.c:249:
+			seq_printf(m, "%i %lu %lu ",
 				latency_record[i].count,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#831: FILE: kernel/sched.c:1688:
+		BUG_ON(1);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#861: FILE: kernel/sched.c:1775:
+			update_avg(&p->se.avg_overlap,
+				p->se.sum_exec_runtime - p->se.last_wakeup);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#865: FILE: kernel/sched.c:1779:
+			update_avg(&p->se.avg_wakeup,
+				sysctl_sched_wakeup_granularity);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#985: FILE: kernel/sched.c:3028:
+	if (!tsk_cache_hot ||
+		sd->nr_balance_failed > sd->cache_nice_tries) {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1039: FILE: kernel/sched.c:3192:
 }
+/********** Helpers for find_busiest_group ************************/

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1042: FILE: kernel/sched.c:3195:
+ * ^I^Iduring load balancing.$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1122: FILE: kernel/sched.c:3252:
+static inline int get_sd_load_idx(struct sched_domain *sd,
+					enum cpu_idle_type idle)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1169: FILE: kernel/sched.c:3283:
+static inline void init_sd_power_savings_stats(struct sched_domain *sd,
+	struct sd_lb_stats *sds, enum cpu_idle_type idle)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1175: FILE: kernel/sched.c:3289:
+	if (idle == CPU_NOT_IDLE || !(sd->flags & SD_POWERSAVINGS_BALANCE))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1177: FILE: kernel/sched.c:3291:
+	else {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1194: FILE: kernel/sched.c:3305:
+ * ^I^Iload balancing ?$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1198: FILE: kernel/sched.c:3309:
+static inline void update_sd_power_savings_stats(struct sched_group *group,
+	struct sd_lb_stats *sds, int local_group, struct sg_lb_stats *sgs)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1213: FILE: kernel/sched.c:3320:
+	if (local_group && (sds->this_nr_running >= sgs->group_capacity ||
+				!sds->this_nr_running))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1223: FILE: kernel/sched.c:3328:
+	if (!sds->power_savings_balance ||
+		sgs->sum_nr_running >= sgs->group_capacity ||

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sgs->sum_nr_running < sds->min_nr_running'
#1238: FILE: kernel/sched.c:3337:
+	if ((sgs->sum_nr_running < sds->min_nr_running) ||
+	    (sgs->sum_nr_running == sds->min_nr_running &&
+	     group_first_cpu(group) > group_first_cpu(sds->group_min))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1291: FILE: kernel/sched.c:3377:
+static inline int check_power_save_busiest_group(struct sd_lb_stats *sds,
+					int this_cpu, unsigned long *imbalance)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1308: FILE: kernel/sched.c:3383:
+	if (sds->this != sds->group_leader ||
+			sds->group_leader == sds->group_min)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1337: FILE: kernel/sched.c:3396:
 
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1340: FILE: kernel/sched.c:3399:
+static inline void init_sd_power_savings_stats(struct sched_domain *sd,
+	struct sd_lb_stats *sds, enum cpu_idle_type idle)

WARNING:RETURN_VOID: void function return statements are not generally useful
#1343: FILE: kernel/sched.c:3402:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1348: FILE: kernel/sched.c:3405:
+static inline void update_sd_power_savings_stats(struct sched_group *group,
+	struct sd_lb_stats *sds, int local_group, struct sg_lb_stats *sgs)

WARNING:RETURN_VOID: void function return statements are not generally useful
#1351: FILE: kernel/sched.c:3408:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1354: FILE: kernel/sched.c:3411:
+static inline int check_power_save_busiest_group(struct sd_lb_stats *sds,
+					int this_cpu, unsigned long *imbalance)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1375: FILE: kernel/sched.c:3431:
+static inline void update_sg_lb_stats(struct sched_group *group, int this_cpu,
+			enum cpu_idle_type idle, int load_idx, int *sd_idle,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1389: FILE: kernel/sched.c:3445:
+	sum_avg_load_per_task = avg_load_per_task = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1483: FILE: kernel/sched.c:3492:
+	sgs->avg_load = sg_div_cpu_power(group,
+			sgs->group_load * SCHED_LOAD_SCALE);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1498: FILE: kernel/sched.c:3494:
 
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1509: FILE: kernel/sched.c:3505:
+	avg_load_per_task = sg_div_cpu_power(group,
+			sum_avg_load_per_task * SCHED_LOAD_SCALE);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1511: FILE: kernel/sched.c:3507:
+	if ((max_cpu_load - min_cpu_load) > 2*avg_load_per_task)
 	                                     ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1516: FILE: kernel/sched.c:3512:
+
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1529: FILE: kernel/sched.c:3525:
+static inline void update_sd_lb_stats(struct sched_domain *sd, int this_cpu,
+			enum cpu_idle_type idle, int *sd_idle,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1547: FILE: kernel/sched.c:3543:
+		update_sg_lb_stats(group, this_cpu, idle, load_idx, sd_idle,
+				local_group, cpus, balance, &sgs);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1580: FILE: kernel/sched.c:3570:
 
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1594: FILE: kernel/sched.c:3581:
+static inline void fix_small_imbalance(struct sd_lb_stats *sds,
+				int this_cpu, unsigned long *imbalance)

CHECK:BRACES: Unbalanced braces around else statement
#1604: FILE: kernel/sched.c:3591:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1642: FILE: kernel/sched.c:3615:
+	tmp = sg_div_cpu_power(sds->busiest,
+			sds->busiest_load_per_task * SCHED_LOAD_SCALE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1651: FILE: kernel/sched.c:3624:
+		tmp = sg_div_cpu_power(sds->this,
+			sds->max_load * sds->busiest->__cpu_power);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1654: FILE: kernel/sched.c:3627:
+		tmp = sg_div_cpu_power(sds->this,
+			sds->busiest_load_per_task * SCHED_LOAD_SCALE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1672: FILE: kernel/sched.c:3645:
+static inline void calculate_imbalance(struct sd_lb_stats *sds, int this_cpu,
+		unsigned long *imbalance)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1690: FILE: kernel/sched.c:3660:
+	max_pull = min(sds->max_load - sds->avg_load,
+			sds->max_load - sds->busiest_load_per_task);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1696: FILE: kernel/sched.c:3664:
+	*imbalance = min(max_pull * sds->busiest->__cpu_power,
+		(sds->avg_load - sds->this_load) * sds->this->__cpu_power)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1725: FILE: kernel/sched.c:3676:
 
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1726: FILE: kernel/sched.c:3677:
+}
+/******* find_busiest_group() helpers end here *********************/

WARNING:TYPO_SPELLING: 'relavent' may be misspelled - perhaps 'relevant'?
#1796: FILE: kernel/sched.c:3714:
+	 * Compute the various statistics relavent for load balancing at
 	                                  ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1800: FILE: kernel/sched.c:3718:
+	update_sd_lb_stats(sd, this_cpu, idle, sd_idle, cpus,
+					balance, &sds);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1909: FILE: kernel/sched.c:4893:
+		runtime = min_t(u64, runtime, 2*sysctl_sched_migration_cost);
 		                               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2135: FILE: kernel/sched_debug.c:314:
+	SEQ_printf(m, "Sched Debug Version: v0.09, %s %.*s\n",
 		init_utsname()->release,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2182: FILE: kernel/sched_fair.c:1336:
+	u64 expected_wakeup = 2*se->avg_wakeup * cfs_rq_of(se)->nr_running;
 	                       ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rt_rq->rt_nr_running > 1'
#2304: FILE: kernel/sched_rt.c:76:
+	if (rt_rq->rt_nr_migratory && (rt_rq->rt_nr_running > 1)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2462: FILE: kernel/sched_rt.c:625:
+	if (prio < prev_prio) {
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'prio <= rt_rq->highest_prio.next'
#2514: FILE: kernel/sched_rt.c:655:
+	if (rt_rq->rt_nr_running && (prio <= rt_rq->highest_prio.next))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2755: FILE: kernel/sched_rt.c:1263:
+	BUG_ON(rq->cpu != task_cpu(p));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2756: FILE: kernel/sched_rt.c:1264:
+	BUG_ON(task_current(rq, p));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2757: FILE: kernel/sched_rt.c:1265:
+	BUG_ON(p->rt.nr_cpus_allowed <= 1);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2759: FILE: kernel/sched_rt.c:1267:
+	BUG_ON(!p->se.on_rq);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2760: FILE: kernel/sched_rt.c:1268:
+	BUG_ON(!rt_task(p));

WARNING:TYPO_SPELLING: 'hasnt' may be misspelled - perhaps 'hasn't'?
#2803: FILE: kernel/sched_rt.c:1324:
+			 * If we get here, the task hasnt moved at all, but
 			                            ^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->prio < this_rq->rt.highest_prio.curr'
#2905: FILE: kernel/sched_rt.c:1411:
+		if (p && (p->prio < this_rq->rt.highest_prio.curr)) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#3007: FILE: kernel/sched_rt.c:1532:
+
+		}

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000148996.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 18 warnings, 51 checks, 2650 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000148996.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
