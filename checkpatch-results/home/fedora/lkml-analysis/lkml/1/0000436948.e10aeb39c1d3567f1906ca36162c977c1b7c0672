WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#103: FILE: arch/powerpc/kernel/smp.c:211:
+			printk("%s on cpu %d: other cpus not "

WARNING:SPLIT_STRING: quoted string split across lines
#104: FILE: arch/powerpc/kernel/smp.c:212:
+			printk("%s on cpu %d: other cpus not "
+			       "responding (%d)\n", __FUNCTION__,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#104: FILE: arch/powerpc/kernel/smp.c:212:
+			       "responding (%d)\n", __FUNCTION__,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#119: FILE: arch/powerpc/kernel/smp.c:223:
+				printk("%s on cpu %d: other cpus "

WARNING:SPLIT_STRING: quoted string split across lines
#120: FILE: arch/powerpc/kernel/smp.c:224:
+				printk("%s on cpu %d: other cpus "
+				       "not finishing (%d/%d)\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#121: FILE: arch/powerpc/kernel/smp.c:225:
+				       __FUNCTION__, smp_processor_id(),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#144: FILE: arch/powerpc/kernel/smp.c:258:
+int smp_call_function (void (*func) (void *info), void *info, int nonatomic,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#150: FILE: arch/powerpc/kernel/smp.c:264:
+	 * it can change. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:BRACES: braces {} should be used on all arms of this statement
#185: FILE: arch/powerpc/kernel/smp.c:299:
+	if (get_cpu() == cpuid) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#186: FILE: arch/powerpc/kernel/smp.c:300:
+		printk(KERN_INFO "%s: trying to call self\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#186: FILE: arch/powerpc/kernel/smp.c:300:
+		printk(KERN_INFO "%s: trying to call self\n", __FUNCTION__);

CHECK:BRACES: Unbalanced braces around else statement
#188: FILE: arch/powerpc/kernel/smp.c:302:
+	} else

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#195: FILE: arch/powerpc/kernel/smp.c:309:
+EXPORT_SYMBOL(smp_call_function_single);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000436948.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 11 warnings, 2 checks, 153 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000436948.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
