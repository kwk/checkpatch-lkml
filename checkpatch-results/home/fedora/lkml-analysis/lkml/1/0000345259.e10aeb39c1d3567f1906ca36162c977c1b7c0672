WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
This is a MMC/SD driver for the Samsung S3C24xx SD/MMC controller, originally

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#40: 
So please advise on whatever changes you deem neccessary and I'll try to
                                              ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#66: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:38:
+#define S3C2440_SDICON_SDRESET        (1<<8)
                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#66: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:38:
+#define S3C2440_SDICON_SDRESET        (1<<8)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#67: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:39:
+#define S3C2440_SDICON_MMCCLOCK       (1<<5)
                                         ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#67: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:39:
+#define S3C2440_SDICON_MMCCLOCK       (1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#76: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:51:
+#define S3C2410_SDICMDCON_SENDERHOST  (1<<6)
                                         ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#76: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:51:
+#define S3C2410_SDICMDCON_SENDERHOST  (1<<6)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#85: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:61:
+#define S3C2440_SDIDCON_DS_BYTE       (0<<22)
                                         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#86: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:62:
+#define S3C2440_SDIDCON_DS_HALFWORD   (1<<22)
                                         ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#86: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:62:
+#define S3C2440_SDIDCON_DS_HALFWORD   (1<<22)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#87: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:63:
+#define S3C2440_SDIDCON_DS_WORD       (2<<22)
                                         ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#95: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:72:
+#define S3C2440_SDIDCON_DATSTART      (1<<14)
                                         ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#95: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:72:
+#define S3C2440_SDIDCON_DATSTART      (1<<14)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#111: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:97:
+#define S3C2440_SDIFSTA_FIFORESET      (1<<16)
                                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#111: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:97:
+#define S3C2440_SDIFSTA_FIFORESET      (1<<16)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#112: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:98:
+#define S3C2440_SDIFSTA_FIFOFAIL       (3<<14)  /* 3 is correct (2 bits) */
                                          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#117: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:101:
+#define S3C2410_SDIFSTA_TFHALF         (1<<11)
                                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#117: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:101:
+#define S3C2410_SDIFSTA_TFHALF         (1<<11)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#118: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:102:
+#define S3C2410_SDIFSTA_TFEMPTY        (1<<10)
                                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#118: FILE: include/asm-arm/arch-s3c2410/regs-sdi.h:102:
+#define S3C2410_SDIFSTA_TFEMPTY        (1<<10)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#127: FILE: drivers/mmc/host/s3cmci.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#149: FILE: drivers/mmc/host/s3cmci.c:23:
+#include <asm/io.h>

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'host' - possible side-effects?
#174: FILE: drivers/mmc/host/s3cmci.c:48:
+#define dbg(host, channels, args...)		 \
+	do {					 \
+	if (dbgmap_err & channels) 		 \
+		dev_err(&host->pdev->dev, args); \
+	else if (dbgmap_info & channels)	 \
+		dev_info(&host->pdev->dev, args);\
+	else if (dbgmap_debug & channels)	 \
+		dev_dbg(&host->pdev->dev, args); \
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'host' may be better as '(host)' to avoid precedence issues
#174: FILE: drivers/mmc/host/s3cmci.c:48:
+#define dbg(host, channels, args...)		 \
+	do {					 \
+	if (dbgmap_err & channels) 		 \
+		dev_err(&host->pdev->dev, args); \
+	else if (dbgmap_info & channels)	 \
+		dev_info(&host->pdev->dev, args);\
+	else if (dbgmap_debug & channels)	 \
+		dev_dbg(&host->pdev->dev, args); \
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'channels' - possible side-effects?
#174: FILE: drivers/mmc/host/s3cmci.c:48:
+#define dbg(host, channels, args...)		 \
+	do {					 \
+	if (dbgmap_err & channels) 		 \
+		dev_err(&host->pdev->dev, args); \
+	else if (dbgmap_info & channels)	 \
+		dev_info(&host->pdev->dev, args);\
+	else if (dbgmap_debug & channels)	 \
+		dev_dbg(&host->pdev->dev, args); \
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'channels' may be better as '(channels)' to avoid precedence issues
#174: FILE: drivers/mmc/host/s3cmci.c:48:
+#define dbg(host, channels, args...)		 \
+	do {					 \
+	if (dbgmap_err & channels) 		 \
+		dev_err(&host->pdev->dev, args); \
+	else if (dbgmap_info & channels)	 \
+		dev_info(&host->pdev->dev, args);\
+	else if (dbgmap_debug & channels)	 \
+		dev_dbg(&host->pdev->dev, args); \
+	} while (0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#175: FILE: drivers/mmc/host/s3cmci.c:49:
+	do {					 \
+	if (dbgmap_err & channels) 		 \

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#176: FILE: drivers/mmc/host/s3cmci.c:50:
+^Iif (dbgmap_err & channels) ^I^I \$

WARNING:TYPO_SPELLING: 'RESSIZE' may be misspelled - perhaps 'RESIZE'?
#184: FILE: drivers/mmc/host/s3cmci.c:58:
+#define RESSIZE(ressource) (((ressource)->end - (ressource)->start)+1)
         ^^^^^^^

WARNING:TYPO_SPELLING: 'ressource' may be misspelled - perhaps 'resource'?
#184: FILE: drivers/mmc/host/s3cmci.c:58:
+#define RESSIZE(ressource) (((ressource)->end - (ressource)->start)+1)
                               ^^^^^^^^^

WARNING:TYPO_SPELLING: 'ressource' may be misspelled - perhaps 'resource'?
#184: FILE: drivers/mmc/host/s3cmci.c:58:
+#define RESSIZE(ressource) (((ressource)->end - (ressource)->start)+1)
                                                  ^^^^^^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#184: FILE: drivers/mmc/host/s3cmci.c:58:
+#define RESSIZE(ressource) (((ressource)->end - (ressource)->start)+1)
                                                                    ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ressource' - possible side-effects?
#184: FILE: drivers/mmc/host/s3cmci.c:58:
+#define RESSIZE(ressource) (((ressource)->end - (ressource)->start)+1)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#227: FILE: drivers/mmc/host/s3cmci.c:101:
+^Icase -EILSEQ: ^I^Ireturn "BADCRC";$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#228: FILE: drivers/mmc/host/s3cmci.c:102:
+^Icase -EINVAL: ^I^Ireturn "EINVAL";$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#229: FILE: drivers/mmc/host/s3cmci.c:103:
+^Icase -ENOMEDIUM: ^Ireturn "NOMEDIUM";$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#239: FILE: drivers/mmc/host/s3cmci.c:113:
+^Icon ^I= readl(host->base + S3C2410_SDICON);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#240: FILE: drivers/mmc/host/s3cmci.c:114:
+^Ipre ^I= readl(host->base + S3C2410_SDIPRE);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#241: FILE: drivers/mmc/host/s3cmci.c:115:
+^Icmdarg ^I= readl(host->base + S3C2410_SDICMDARG);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#242: FILE: drivers/mmc/host/s3cmci.c:116:
+^Icmdcon ^I= readl(host->base + S3C2410_SDICMDCON);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#243: FILE: drivers/mmc/host/s3cmci.c:117:
+^Icmdsta ^I= readl(host->base + S3C2410_SDICMDSTAT);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#244: FILE: drivers/mmc/host/s3cmci.c:118:
+^Ir0 ^I= readl(host->base + S3C2410_SDIRSP0);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#245: FILE: drivers/mmc/host/s3cmci.c:119:
+^Ir1 ^I= readl(host->base + S3C2410_SDIRSP1);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#246: FILE: drivers/mmc/host/s3cmci.c:120:
+^Ir2 ^I= readl(host->base + S3C2410_SDIRSP2);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#247: FILE: drivers/mmc/host/s3cmci.c:121:
+^Ir3 ^I= readl(host->base + S3C2410_SDIRSP3);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#248: FILE: drivers/mmc/host/s3cmci.c:122:
+^Itimer ^I= readl(host->base + S3C2410_SDITIMER);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#249: FILE: drivers/mmc/host/s3cmci.c:123:
+^Ibsize ^I= readl(host->base + S3C2410_SDIBSIZE);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#250: FILE: drivers/mmc/host/s3cmci.c:124:
+^Idatcon ^I= readl(host->base + S3C2410_SDIDCON);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#251: FILE: drivers/mmc/host/s3cmci.c:125:
+^Idatcnt ^I= readl(host->base + S3C2410_SDIDCNT);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#252: FILE: drivers/mmc/host/s3cmci.c:126:
+^Idatsta ^I= readl(host->base + S3C2410_SDIDSTA);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#253: FILE: drivers/mmc/host/s3cmci.c:127:
+^Ifsta ^I= readl(host->base + S3C2410_SDIFSTA);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#257: FILE: drivers/mmc/host/s3cmci.c:131:
+	dbg(host, dbg_debug, "%s  CON:[%08x]  PRE:[%08x]  TMR:[%08x]\n",
+				prefix, con, pre, timer);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#260: FILE: drivers/mmc/host/s3cmci.c:134:
+	dbg(host, dbg_debug, "%s CCON:[%08x] CARG:[%08x] CSTA:[%08x]\n",
+				prefix, cmdcon, cmdarg, cmdsta);

WARNING:SPLIT_STRING: quoted string split across lines
#263: FILE: drivers/mmc/host/s3cmci.c:137:
+	dbg(host, dbg_debug, "%s DCON:[%08x] FSTA:[%08x]"
+			       " DSTA:[%08x] DCNT:[%08x]\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#267: FILE: drivers/mmc/host/s3cmci.c:141:
+	dbg(host, dbg_debug, "%s   R0:[%08x]   R1:[%08x]"
+			       "   R2:[%08x]   R3:[%08x]\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#272: FILE: drivers/mmc/host/s3cmci.c:146:
+static void prepare_dbgmsg(struct s3cmci_host *host, struct mmc_command *cmd,
+								int stop)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: drivers/mmc/host/s3cmci.c:149:
+	snprintf(host->dbgmsg_cmd, 300,
+		"#%u%s op:%s(%i) arg:0x%08x flags:0x08%x retries:%u",

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#276: FILE: drivers/mmc/host/s3cmci.c:150:
+		host->ccnt, (stop?" (STOP)":""), mmc_cmd2str(cmd->opcode),
 		                 ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#276: FILE: drivers/mmc/host/s3cmci.c:150:
+		host->ccnt, (stop?" (STOP)":""), mmc_cmd2str(cmd->opcode),
 		                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#281: FILE: drivers/mmc/host/s3cmci.c:155:
+		snprintf(host->dbgmsg_dat, 300,
+			"#%u bsize:%u blocks:%u bytes:%u",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#291: FILE: drivers/mmc/host/s3cmci.c:165:
+static void dbg_dumpcmd(struct s3cmci_host *host, struct mmc_command *cmd,
+								int fail)

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#293: FILE: drivers/mmc/host/s3cmci.c:167:
+	unsigned int dbglvl = fail?dbg_fail:dbg_debug;
 	                          ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#293: FILE: drivers/mmc/host/s3cmci.c:167:
+	unsigned int dbglvl = fail?dbg_fail:dbg_debug;
 	                                   ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#299: FILE: drivers/mmc/host/s3cmci.c:173:
+	if (cmd->error == 0) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#301: FILE: drivers/mmc/host/s3cmci.c:175:
+		dbg(host, dbglvl, "CMD[OK] %s R0:0x%08x\n",
+			host->dbgmsg_cmd, cmd->resp[0]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#304: FILE: drivers/mmc/host/s3cmci.c:178:
+		dbg(host, dbglvl, "CMD[%s] %s Status:%s\n",
+			mmc_err2str(cmd->error), host->dbgmsg_cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#313: FILE: drivers/mmc/host/s3cmci.c:187:
+		dbg(host, dbglvl, "DAT[%s] %s\n",
+			mmc_err2str(cmd->data->error), host->dbgmsg_dat);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#316: FILE: drivers/mmc/host/s3cmci.c:190:
+		dbg(host, dbglvl, "DAT[%s] %s DCNT:0x%08x\n",
+			mmc_err2str(cmd->data->error), host->dbgmsg_dat,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!host->mrq'
#359: FILE: drivers/mmc/host/s3cmci.c:233:
+	if ((!host->mrq) || (!host->mrq->data))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!host->mrq->data'
#359: FILE: drivers/mmc/host/s3cmci.c:233:
+	if ((!host->mrq) || (!host->mrq->data))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#364: FILE: drivers/mmc/host/s3cmci.c:238:
+		dbg(host, dbg_debug, "no more buffers (%i/%i)\n",
+		      host->pio_sgptr, host->mrq->data->sg_len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#375: FILE: drivers/mmc/host/s3cmci.c:249:
+	dbg(host, dbg_sg, "new buffer (%i/%i)\n",
+	      host->pio_sgptr, host->mrq->data->sg_len);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#380: FILE: drivers/mmc/host/s3cmci.c:254:
+#define FIFO_FILL(host) ((readl(host->base + S3C2410_SDIFSTA) & ^I\$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'host' may be better as '(host)' to avoid precedence issues
#380: FILE: drivers/mmc/host/s3cmci.c:254:
+#define FIFO_FILL(host) ((readl(host->base + S3C2410_SDIFSTA) & 	\
+				S3C2410_SDIFSTA_COUNTMASK) >> 2)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#382: FILE: drivers/mmc/host/s3cmci.c:256:
+#define FIFO_FREE(host) ((63 - (readl(host->base + S3C2410_SDIFSTA) ^I\$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'host' may be better as '(host)' to avoid precedence issues
#382: FILE: drivers/mmc/host/s3cmci.c:256:
+#define FIFO_FREE(host) ((63 - (readl(host->base + S3C2410_SDIFSTA) 	\
+				& S3C2410_SDIFSTA_COUNTMASK)) >> 2)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#399: FILE: drivers/mmc/host/s3cmci.c:273:
+			res = get_data_buffer(host, &host->pio_words,
+							&host->pio_ptr);

WARNING:SPLIT_STRING: quoted string split across lines
#405: FILE: drivers/mmc/host/s3cmci.c:279:
+				dbg(host, dbg_pio, "pio_read(): "
+				    "complete (no more data).\n");

WARNING:SPLIT_STRING: quoted string split across lines
#410: FILE: drivers/mmc/host/s3cmci.c:284:
+			dbg(host, dbg_pio, "pio_read(): new target: "
+			    "[%i]@[%p]\n", host->pio_words, host->pio_ptr);

WARNING:SPLIT_STRING: quoted string split across lines
#414: FILE: drivers/mmc/host/s3cmci.c:288:
+		dbg(host, dbg_pio, "pio_read(): fifo:[%02i] "
+		    "buffer:[%03i] dcnt:[%08X]\n", fifo, host->pio_words,

WARNING:SPLIT_STRING: quoted string split across lines
#431: FILE: drivers/mmc/host/s3cmci.c:305:
+			dbg(host, dbg_pio, "pio_read(): "
+			    "complete (no more buffers).\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#455: FILE: drivers/mmc/host/s3cmci.c:329:
+			res = get_data_buffer(host, &host->pio_words,
+							&host->pio_ptr);

WARNING:SPLIT_STRING: quoted string split across lines
#458: FILE: drivers/mmc/host/s3cmci.c:332:
+				dbg(host, dbg_pio, "pio_write(): "
+					"complete (no more data).\n");

WARNING:SPLIT_STRING: quoted string split across lines
#465: FILE: drivers/mmc/host/s3cmci.c:339:
+			dbg(host, dbg_pio, "pio_write(): "
+				"new source: [%i]@[%p]\n",

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#468: FILE: drivers/mmc/host/s3cmci.c:342:
+
+		}

CHECK:SPACING: No space is necessary after a cast
#485: FILE: drivers/mmc/host/s3cmci.c:359:
+	struct s3cmci_host *host = (struct s3cmci_host *) data;

CHECK:BRACES: braces {} should be used on all arms of this statement
#495: FILE: drivers/mmc/host/s3cmci.c:369:
+	if (host->complete_what == COMPLETION_FINALIZE) {
[...]
+	} else
[...]

WARNING:SPLIT_STRING: quoted string split across lines
#499: FILE: drivers/mmc/host/s3cmci.c:373:
+			dbg(host, dbg_err, "unfinished %s "
+				"- pio_count:[%u] pio_words:[%u]\n",

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#500: FILE: drivers/mmc/host/s3cmci.c:374:
+				(host->pio_active == XFER_READ)?"read":"write",
 				                               ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#500: FILE: drivers/mmc/host/s3cmci.c:374:
+				(host->pio_active == XFER_READ)?"read":"write",
 				                                      ^

CHECK:BRACES: Unbalanced braces around else statement
#507: FILE: drivers/mmc/host/s3cmci.c:381:
+	} else

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#514: FILE: drivers/mmc/host/s3cmci.c:388:
+ *   host->mrq ^I^I^Ipoints to current request$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#550: FILE: drivers/mmc/host/s3cmci.c:424:
+^Imci_csta ^I= readl(host->base + S3C2410_SDICMDSTAT);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#551: FILE: drivers/mmc/host/s3cmci.c:425:
+^Imci_dsta ^I= readl(host->base + S3C2410_SDIDSTA);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#552: FILE: drivers/mmc/host/s3cmci.c:426:
+^Imci_dcnt ^I= readl(host->base + S3C2410_SDIDCNT);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#553: FILE: drivers/mmc/host/s3cmci.c:427:
+^Imci_fsta ^I= readl(host->base + S3C2410_SDIFSTA);$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'host->complete_what == COMPLETION_NONE'
#558: FILE: drivers/mmc/host/s3cmci.c:432:
+	if ((host->complete_what == COMPLETION_NONE) ||
+			(host->complete_what == COMPLETION_FINALIZE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'host->complete_what == COMPLETION_FINALIZE'
#558: FILE: drivers/mmc/host/s3cmci.c:432:
+	if ((host->complete_what == COMPLETION_NONE) ||
+			(host->complete_what == COMPLETION_FINALIZE)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#559: FILE: drivers/mmc/host/s3cmci.c:433:
+	if ((host->complete_what == COMPLETION_NONE) ||
+			(host->complete_what == COMPLETION_FINALIZE)) {

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#571: FILE: drivers/mmc/host/s3cmci.c:445:
+	cmd = host->cmd_is_stop?host->mrq->stop:host->mrq->cmd;
 	                       ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#571: FILE: drivers/mmc/host/s3cmci.c:445:
+	cmd = host->cmd_is_stop?host->mrq->stop:host->mrq->cmd;
 	                                       ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'host->pio_active == XFER_WRITE'
#580: FILE: drivers/mmc/host/s3cmci.c:454:
+		if ((host->pio_active == XFER_WRITE) &&
+				(mci_fsta & S3C2410_SDIFSTA_TFDET)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#581: FILE: drivers/mmc/host/s3cmci.c:455:
+		if ((host->pio_active == XFER_WRITE) &&
+				(mci_fsta & S3C2410_SDIFSTA_TFDET)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#582: FILE: drivers/mmc/host/s3cmci.c:456:
+				(mci_fsta & S3C2410_SDIFSTA_TFDET)) {
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'host->pio_active == XFER_READ'
#588: FILE: drivers/mmc/host/s3cmci.c:462:
+		if ((host->pio_active == XFER_READ) &&
+				(mci_fsta & S3C2410_SDIFSTA_RFDET)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#589: FILE: drivers/mmc/host/s3cmci.c:463:
+		if ((host->pio_active == XFER_READ) &&
+				(mci_fsta & S3C2410_SDIFSTA_RFDET)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#590: FILE: drivers/mmc/host/s3cmci.c:464:
+				(mci_fsta & S3C2410_SDIFSTA_RFDET)) {
+

WARNING:SPLIT_STRING: quoted string split across lines
#618: FILE: drivers/mmc/host/s3cmci.c:492:
+				dbg(host, dbg_irq, "fixup for chip bug: "
+				    "ignore CRC fail with long rsp\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#642: FILE: drivers/mmc/host/s3cmci.c:516:
+	/* errors handled after this point are only relevant
+	   when a data transfer is in progress */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#642: FILE: drivers/mmc/host/s3cmci.c:516:
+	   when a data transfer is in progress */

WARNING:SPLIT_STRING: quoted string split across lines
#711: FILE: drivers/mmc/host/s3cmci.c:585:
+	dbg(host, dbg_irq, "csta:0x%08x dsta:0x%08x "
+			   "fsta:0x%08x dcnt:0x%08x status:%s.\n",

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#718: FILE: drivers/mmc/host/s3cmci.c:592:
+
+}

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#722: FILE: drivers/mmc/host/s3cmci.c:596:
+ * ISR for the CardDetect Pin
+*/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#736: FILE: drivers/mmc/host/s3cmci.c:610:
+void s3cmci_dma_done_callback(struct s3c2410_dma_chan *dma_ch, void *buf_id,
+	int size, enum s3c2410_dma_buffresult result)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#742: FILE: drivers/mmc/host/s3cmci.c:616:
+^Imci_csta ^I= readl(host->base + S3C2410_SDICMDSTAT);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#743: FILE: drivers/mmc/host/s3cmci.c:617:
+^Imci_dsta ^I= readl(host->base + S3C2410_SDIDSTA);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#744: FILE: drivers/mmc/host/s3cmci.c:618:
+^Imci_fsta ^I= readl(host->base + S3C2410_SDIFSTA);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#745: FILE: drivers/mmc/host/s3cmci.c:619:
+^Imci_dcnt ^I= readl(host->base + S3C2410_SDIDCNT);$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!host->mrq'
#747: FILE: drivers/mmc/host/s3cmci.c:621:
+	if ((!host->mrq) || (!host->mrq) || (!host->mrq->data))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!host->mrq'
#747: FILE: drivers/mmc/host/s3cmci.c:621:
+	if ((!host->mrq) || (!host->mrq) || (!host->mrq->data))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!host->mrq->data'
#747: FILE: drivers/mmc/host/s3cmci.c:621:
+	if ((!host->mrq) || (!host->mrq) || (!host->mrq->data))

WARNING:SPLIT_STRING: quoted string split across lines
#757: FILE: drivers/mmc/host/s3cmci.c:631:
+		dbg(host, dbg_fail, "DMA FAILED: csta=0x%08x dsta=0x%08x "
+			"fsta=0x%08x dcnt:0x%08x result:0x%08x toGo:%u\n",

WARNING:SPLIT_STRING: quoted string split across lines
#767: FILE: drivers/mmc/host/s3cmci.c:641:
+		dbg(host, dbg_dma, "DMA DONE  Size:%i DSTA:[%08x] "
+			"DCNT:[%08x] toGo:%u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#774: FILE: drivers/mmc/host/s3cmci.c:648:
+	dbg(host, dbg_dma, "DMA FINISHED Size:%i DSTA:%08x DCNT:%08x\n",
+		size, mci_dsta, mci_dcnt);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#783: FILE: drivers/mmc/host/s3cmci.c:657:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#790: FILE: drivers/mmc/host/s3cmci.c:664:
+
+}

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#795: FILE: drivers/mmc/host/s3cmci.c:669:
+	struct mmc_command *cmd = host->cmd_is_stop?mrq->stop:mrq->cmd;
 	                                           ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#795: FILE: drivers/mmc/host/s3cmci.c:669:
+	struct mmc_command *cmd = host->cmd_is_stop?mrq->stop:mrq->cmd;
 	                                                     ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd->error == 0'
#804: FILE: drivers/mmc/host/s3cmci.c:678:
+	if (cmd->data && (cmd->error == 0) &&
+		  (cmd->data->error == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd->data->error == 0'
#804: FILE: drivers/mmc/host/s3cmci.c:678:
+	if (cmd->data && (cmd->error == 0) &&
+		  (cmd->data->error == 0)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#805: FILE: drivers/mmc/host/s3cmci.c:679:
+	if (cmd->data && (cmd->error == 0) &&
+		  (cmd->data->error == 0)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#806: FILE: drivers/mmc/host/s3cmci.c:680:
+		  (cmd->data->error == 0)) {
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!host->dma_complete'
#807: FILE: drivers/mmc/host/s3cmci.c:681:
+		if (host->dodma && (!host->dma_complete)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!host->cmd_is_stop'
#840: FILE: drivers/mmc/host/s3cmci.c:714:
+	if (cmd->data && cmd->data->stop && (!host->cmd_is_stop)) {

WARNING:TYPO_SPELLING: 'Calulate' may be misspelled - perhaps 'Calculate'?
#850: FILE: drivers/mmc/host/s3cmci.c:724:
+	/* Calulate the amout of bytes transfer, but only if there was
 	   ^^^^^^^^

WARNING:TYPO_SPELLING: 'amout' may be misspelled - perhaps 'amount'?
#850: FILE: drivers/mmc/host/s3cmci.c:724:
+	/* Calulate the amout of bytes transfer, but only if there was
 	                ^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#851: FILE: drivers/mmc/host/s3cmci.c:725:
+	 * no error */

WARNING:TYPO_SPELLING: 'transfering' may be misspelled - perhaps 'transferring'?
#858: FILE: drivers/mmc/host/s3cmci.c:732:
+	/* If we had an error while transfering data we flush the
 	                            ^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#859: FILE: drivers/mmc/host/s3cmci.c:733:
+	 * DMA channel and the fifo to clear out any garbage */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#886: FILE: drivers/mmc/host/s3cmci.c:760:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#898: FILE: drivers/mmc/host/s3cmci.c:772:
+	s3c2410_dma_devconfig(host->dma, source, 3,
+		host->mem->start + host->sdidata);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#902: FILE: drivers/mmc/host/s3cmci.c:776:
+		s3c2410_dma_config(host->dma, 4,
+			(S3C2410_DCON_HWTRIG | S3C2410_DCON_CH0_SDI));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#911: FILE: drivers/mmc/host/s3cmci.c:785:
+static void s3cmci_send_command(struct s3cmci_host *host,
+					struct mmc_command *cmd)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#955: FILE: drivers/mmc/host/s3cmci.c:829:
+		(S3C2410_SDIDSTA_TXDATAON | S3C2410_SDIDSTA_RXDATAON)) {
+

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1026: FILE: drivers/mmc/host/s3cmci.c:900:
+	int rw = (data->flags & MMC_DATA_WRITE)?1:0;
 	                                       ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1026: FILE: drivers/mmc/host/s3cmci.c:900:
+	int rw = (data->flags & MMC_DATA_WRITE)?1:0;
 	                                         ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1028: FILE: drivers/mmc/host/s3cmci.c:902:
+	if (rw != ((data->flags & MMC_DATA_READ)?0:1))
 	                                        ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1028: FILE: drivers/mmc/host/s3cmci.c:902:
+	if (rw != ((data->flags & MMC_DATA_READ)?0:1))
 	                                          ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1034: FILE: drivers/mmc/host/s3cmci.c:908:
+	host->pio_active = rw?XFER_WRITE:XFER_READ;
 	                     ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1034: FILE: drivers/mmc/host/s3cmci.c:908:
+	host->pio_active = rw?XFER_WRITE:XFER_READ;
 	                                ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1051: FILE: drivers/mmc/host/s3cmci.c:925:
+	int rw = (data->flags & MMC_DATA_WRITE)?1:0;
 	                                       ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1051: FILE: drivers/mmc/host/s3cmci.c:925:
+	int rw = (data->flags & MMC_DATA_WRITE)?1:0;
 	                                         ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1053: FILE: drivers/mmc/host/s3cmci.c:927:
+	if (rw != ((data->flags & MMC_DATA_READ)?0:1))
 	                                        ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1053: FILE: drivers/mmc/host/s3cmci.c:927:
+	if (rw != ((data->flags & MMC_DATA_READ)?0:1))
 	                                          ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1056: FILE: drivers/mmc/host/s3cmci.c:930:
+	s3cmci_dma_setup(host, rw?S3C2410_DMASRC_MEM:S3C2410_DMASRC_HW);
 	                         ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1056: FILE: drivers/mmc/host/s3cmci.c:930:
+	s3cmci_dma_setup(host, rw?S3C2410_DMASRC_MEM:S3C2410_DMASRC_HW);
 	                                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1060: FILE: drivers/mmc/host/s3cmci.c:934:
+	dma_len = dma_map_sg(mmc_dev(host->mmc), data->sg, data->sg_len,
+				(rw)?DMA_TO_DEVICE:DMA_FROM_DEVICE);

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1060: FILE: drivers/mmc/host/s3cmci.c:934:
+				(rw)?DMA_TO_DEVICE:DMA_FROM_DEVICE);
 				    ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1060: FILE: drivers/mmc/host/s3cmci.c:934:
+				(rw)?DMA_TO_DEVICE:DMA_FROM_DEVICE);
 				                  ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1062: FILE: drivers/mmc/host/s3cmci.c:936:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1073: FILE: drivers/mmc/host/s3cmci.c:947:
+		dbg(host, dbg_dma, "enqueue %i:%u@%u\n", i,
+			sg_dma_address(&data->sg[i]),

CHECK:SPACING: No space is necessary after a cast
#1076: FILE: drivers/mmc/host/s3cmci.c:950:
+		res = s3c2410_dma_enqueue(host->dma, (void *) host,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1077: FILE: drivers/mmc/host/s3cmci.c:951:
+		res = s3c2410_dma_enqueue(host->dma, (void *) host,
+				sg_dma_address(&data->sg[i]),

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1095: FILE: drivers/mmc/host/s3cmci.c:969:
+	struct mmc_command *cmd = host->cmd_is_stop?mrq->stop:mrq->cmd;
 	                                           ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1095: FILE: drivers/mmc/host/s3cmci.c:969:
+	struct mmc_command *cmd = host->cmd_is_stop?mrq->stop:mrq->cmd;
 	                                                     ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1102: FILE: drivers/mmc/host/s3cmci.c:976:
+	 * Fifo clear only necessary on 2440, but doesn't hurt on 2410 */

WARNING:LINE_SPACING: Missing a blank line after declarations
#1109: FILE: drivers/mmc/host/s3cmci.c:983:
+		int res;
+		res = s3cmci_setup_data(host, cmd->data);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1121: FILE: drivers/mmc/host/s3cmci.c:995:
+
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1135: FILE: drivers/mmc/host/s3cmci.c:1009:
+
+	}

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1192: FILE: drivers/mmc/host/s3cmci.c:1066:
+		host->real_rate = host->clk_rate / (host->clk_div*(mci_psc+1));
 		                                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1192: FILE: drivers/mmc/host/s3cmci.c:1066:
+		host->real_rate = host->clk_rate / (host->clk_div*(mci_psc+1));
 		                                                          ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ios->power_mode == MMC_POWER_ON'
#1216: FILE: drivers/mmc/host/s3cmci.c:1090:
+	if ((ios->power_mode == MMC_POWER_ON)
+		|| (ios->power_mode == MMC_POWER_UP)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ios->power_mode == MMC_POWER_UP'
#1216: FILE: drivers/mmc/host/s3cmci.c:1090:
+	if ((ios->power_mode == MMC_POWER_ON)
+		|| (ios->power_mode == MMC_POWER_UP)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1217: FILE: drivers/mmc/host/s3cmci.c:1091:
+	if ((ios->power_mode == MMC_POWER_ON)
+		|| (ios->power_mode == MMC_POWER_UP)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1218: FILE: drivers/mmc/host/s3cmci.c:1092:
+		|| (ios->power_mode == MMC_POWER_UP)) {
+

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1220: FILE: drivers/mmc/host/s3cmci.c:1094:
+		    host->real_rate/1000, ios->clock/1000);
 		                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1220: FILE: drivers/mmc/host/s3cmci.c:1094:
+		    host->real_rate/1000, ios->clock/1000);
 		                                    ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1227: FILE: drivers/mmc/host/s3cmci.c:1101:
+
+}

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1262: FILE: drivers/mmc/host/s3cmci.c:1136:
+^Istruct mmc_host ^I*mmc;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1263: FILE: drivers/mmc/host/s3cmci.c:1137:
+^Istruct s3cmci_host ^I*host;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1274: FILE: drivers/mmc/host/s3cmci.c:1148:
+^Ihost->mmc ^I= mmc;$

CHECK:SPACING: No space is necessary after a cast
#1284: FILE: drivers/mmc/host/s3cmci.c:1158:
+	tasklet_init(&host->pio_tasklet, pio_tasklet, (unsigned long) host);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1297: FILE: drivers/mmc/host/s3cmci.c:1171:
+^Ihost->complete_what ^I= COMPLETION_NONE;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1298: FILE: drivers/mmc/host/s3cmci.c:1172:
+^Ihost->pio_active ^I= XFER_NONE;$

WARNING:TYPO_SPELLING: 'resouce' may be misspelled - perhaps 'resource'?
#1307: FILE: drivers/mmc/host/s3cmci.c:1181:
+			"failed to get io memory region resouce.\n");
 			                                ^^^^^^^

WARNING:TYPO_SPELLING: 'RESSIZE' may be misspelled - perhaps 'RESIZE'?
#1314: FILE: drivers/mmc/host/s3cmci.c:1188:
+		RESSIZE(host->mem), pdev->name);
 		^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1314: FILE: drivers/mmc/host/s3cmci.c:1188:
+	host->mem = request_mem_region(host->mem->start,
+		RESSIZE(host->mem), pdev->name);

WARNING:TYPO_SPELLING: 'RESSIZE' may be misspelled - perhaps 'RESIZE'?
#1322: FILE: drivers/mmc/host/s3cmci.c:1196:
+	host->base = ioremap(host->mem->start, RESSIZE(host->mem));
 	                                       ^^^^^^^

WARNING:TYPO_SPELLING: 'resouce' may be misspelled - perhaps 'resource'?
#1331: FILE: drivers/mmc/host/s3cmci.c:1205:
+		dev_err(&pdev->dev, "failed to get interrupt resouce.\n");
 		                                             ^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1381: FILE: drivers/mmc/host/s3cmci.c:1255:
+^Immc->ops ^I= &s3cmci_ops;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1384: FILE: drivers/mmc/host/s3cmci.c:1258:
+^Immc->f_min ^I= host->clk_rate / (host->clk_div * 256);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1385: FILE: drivers/mmc/host/s3cmci.c:1259:
+^Immc->f_max ^I= host->clk_rate / host->clk_div;$

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1396: FILE: drivers/mmc/host/s3cmci.c:1270:
+	    "irq_cd:%u dma:%u.\n", (host->is2440?"2440":""),
 	                                        ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1396: FILE: drivers/mmc/host/s3cmci.c:1270:
+	    "irq_cd:%u dma:%u.\n", (host->is2440?"2440":""),
 	                                               ^

WARNING:SPLIT_STRING: quoted string split across lines
#1396: FILE: drivers/mmc/host/s3cmci.c:1270:
+	dbg(host, dbg_debug, "probe: mode:%s mapped mci_base:%p irq:%u "
+	    "irq_cd:%u dma:%u.\n", (host->is2440?"2440":""),

WARNING:TYPO_SPELLING: 'RESSIZE' may be misspelled - perhaps 'RESIZE'?
#1426: FILE: drivers/mmc/host/s3cmci.c:1300:
+	release_mem_region(host->mem->start, RESSIZE(host->mem));
 	                                     ^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1436: FILE: drivers/mmc/host/s3cmci.c:1310:
+^Istruct mmc_host ^I*mmc  = platform_get_drvdata(pdev);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1437: FILE: drivers/mmc/host/s3cmci.c:1311:
+^Istruct s3cmci_host ^I*host = mmc_priv(mmc);$

WARNING:TYPO_SPELLING: 'RESSIZE' may be misspelled - perhaps 'RESIZE'?
#1446: FILE: drivers/mmc/host/s3cmci.c:1320:
+	release_mem_region(host->mem->start, RESSIZE(host->mem));
 	                                     ^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1488: FILE: drivers/mmc/host/s3cmci.c:1362:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1513: FILE: drivers/mmc/host/s3cmci.c:1387:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1541: FILE: drivers/mmc/host/s3cmci.h:1:
+/*

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1580: FILE: drivers/mmc/host/s3cmci.h:40:
+	unsigned		sdiimsk;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1581: FILE: drivers/mmc/host/s3cmci.h:41:
+	unsigned		sdidata;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1589: FILE: drivers/mmc/host/s3cmci.h:49:
+	spinlock_t		complete_lock;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1605: FILE: drivers/mmc/host/s3cmci.h:65:
+^Ichar ^I^I^Idbgmsg_cmd[301];$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1606: FILE: drivers/mmc/host/s3cmci.h:66:
+^Ichar ^I^I^Idbgmsg_dat[301];$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000345259.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 83 warnings, 125 checks, 1560 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000345259.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
