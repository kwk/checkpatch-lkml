WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
o Currently once a queue uses its slice and it is empty, we remove it from the

WARNING:TYPO_SPELLING: 'lenghts' may be misspelled - perhaps 'lengths'?
#64: 
 history. Instead it provides slice lenghts according to prio and if in one
                                    ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'lenght' may be misspelled - perhaps 'length'?
#68: 
 This does not work in hierarchical setups where group's slice lenght is
                                                               ^^^^^^

WARNING:TYPO_SPELLING: 'histroy' may be misspelled - perhaps 'history'?
#72: 
 Hence we need to keep track of histroy and assign a new vtime based on disk
                                ^^^^^^^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#149: FILE: block/elevator-fq.c:190:
+	if (sync && entity->vdisktime
+	    && vdisktime_gt(entity->vdisktime, st->min_vdisktime)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#187: FILE: block/elevator-fq.c:212:
+	if (parent) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#190: FILE: block/elevator-fq.c:215:
+	} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "node"
#245: FILE: block/elevator-fq.c:275:
+	while (*node != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: braces {} should be used on all arms of this statement
#249: FILE: block/elevator-fq.c:279:
+		if (vdisktime_gt(entry->vdisktime, entity->vdisktime))
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#251: FILE: block/elevator-fq.c:281:
+		else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#314: FILE: block/elevator-fq.c:344:
+		entity = rb_entry(st->rb_leftmost_idle, struct io_entity,
+					rb_node);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000067775.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 7 checks, 257 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000067775.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
