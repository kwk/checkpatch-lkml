CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'task' may be better as '(task)' to avoid precedence issues
#97: FILE: arch/frv/include/asm/ptrace.h:84:
+#define task_pt_regs(task) (task->thread.frame0)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#100: FILE: arch/frv/include/asm/ptrace.h:87:
+extern void user_enable_single_step(struct task_struct *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#101: FILE: arch/frv/include/asm/ptrace.h:88:
+extern void user_disable_single_step(struct task_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#101: FILE: arch/frv/include/asm/ptrace.h:88:
+extern void user_disable_single_step(struct task_struct *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#107: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#112: FILE: arch/frv/include/asm/syscall.h:1:
+/* syscall parameter access functions $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#112: FILE: arch/frv/include/asm/syscall.h:1:
+/* syscall parameter access functions 

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#194: FILE: arch/frv/include/asm/syscall.h:83:
+	BUG_ON(i);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#198: FILE: arch/frv/include/asm/syscall.h:87:
+	case 6: args[5] = regs->gr13;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#199: FILE: arch/frv/include/asm/syscall.h:88:
+	case 5: args[4] = regs->gr12;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#200: FILE: arch/frv/include/asm/syscall.h:89:
+	case 4: args[3] = regs->gr11;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#201: FILE: arch/frv/include/asm/syscall.h:90:
+	case 3: args[2] = regs->gr10;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#202: FILE: arch/frv/include/asm/syscall.h:91:
+	case 2: args[1] = regs->gr9;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#203: FILE: arch/frv/include/asm/syscall.h:92:
+	case 1:	args[0] = regs->gr8;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#206: FILE: arch/frv/include/asm/syscall.h:95:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#219: FILE: arch/frv/include/asm/syscall.h:108:
+	BUG_ON(i);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#222: FILE: arch/frv/include/asm/syscall.h:111:
+	case 6: regs->gr13 = args[5];

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#223: FILE: arch/frv/include/asm/syscall.h:112:
+	case 5: regs->gr12 = args[4];

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#224: FILE: arch/frv/include/asm/syscall.h:113:
+	case 4: regs->gr11 = args[3];

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#225: FILE: arch/frv/include/asm/syscall.h:114:
+	case 3: regs->gr10 = args[2];

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#226: FILE: arch/frv/include/asm/syscall.h:115:
+	case 2: regs->gr9  = args[1];

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#227: FILE: arch/frv/include/asm/syscall.h:116:
+	case 1: regs->gr8  = args[0];

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#230: FILE: arch/frv/include/asm/syscall.h:119:
+		BUG();

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000133817.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 13 errors, 7 warnings, 3 checks, 655 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000133817.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
