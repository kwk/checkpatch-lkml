WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#63: FILE: drivers/dma/Kconfig:40:
+config PASEMI_DMA
+	tristate "PA Semi DMA Engine support"
+	depends on PPC_PASEMI
+	select DMA_ENGINE
+	help
+	  Enable support for the DMA Engine on PA Semi PWRficient SoCs
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#83: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#88: FILE: drivers/dma/pasemi_dma.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#102: FILE: drivers/dma/pasemi_dma.c:15:
+ * this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#103: FILE: drivers/dma/pasemi_dma.c:16:
+ * 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#155: FILE: drivers/dma/pasemi_dma.c:68:
+module_param(channels, uint, S_IRUGO);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#176: FILE: drivers/dma/pasemi_dma.c:89:
+	new &= (RING_SZ-1);
 	               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#182: FILE: drivers/dma/pasemi_dma.c:95:
+		if (unlikely(chan->chan.ring_virt[i & (RING_SZ-1)] & XCT_COPY_O))
 		                                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#184: FILE: drivers/dma/pasemi_dma.c:97:
+		desc = chan->ring_info[i & (RING_SZ-1)];
 		                                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#192: FILE: drivers/dma/pasemi_dma.c:105:
+			chan->next_to_clean = i & (RING_SZ-1);
 			                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#201: FILE: drivers/dma/pasemi_dma.c:114:
+	chan->next_to_clean = i & (RING_SZ-1);
 	                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: drivers/dma/pasemi_dma.c:138:
+^Ireg = PAS_IOB_DMA_TXCH_RESET_PINTC | $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#258: FILE: drivers/dma/pasemi_dma.c:171:
+		printk(KERN_INFO "pasemi_dma: Failed to allocate descriptor ring: %d\n", ret);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: drivers/dma/pasemi_dma.c:186:
+	pasemi_write_dma_reg(PAS_DMA_TXCHAN_BASEL(chno),
+			   PAS_DMA_TXCHAN_BASEL_BRBL(ch->chan.ring_dma));

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#297: FILE: drivers/dma/pasemi_dma.c:210:
+	return ch->chan.ring_size/4;
 	                         ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#310: FILE: drivers/dma/pasemi_dma.c:223:
+	return;
+}

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#325: FILE: drivers/dma/pasemi_dma.c:238:
+		clean = (ch->next_to_clean - 4) & (RING_SZ-1);
 		                                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#326: FILE: drivers/dma/pasemi_dma.c:239:
+		fill = (ch->next_to_fill - 1) & (RING_SZ-1) ;
 		                                        ^

WARNING:SPACING: space prohibited before semicolon
#326: FILE: drivers/dma/pasemi_dma.c:239:
+		fill = (ch->next_to_fill - 1) & (RING_SZ-1) ;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#339: FILE: drivers/dma/pasemi_dma.c:252:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:RETURN_VOID: void function return statements are not generally useful
#343: FILE: drivers/dma/pasemi_dma.c:256:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#345: FILE: drivers/dma/pasemi_dma.c:258:
+
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#355: FILE: drivers/dma/pasemi_dma.c:268:
+	if (unlikely(!len)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#358: FILE: drivers/dma/pasemi_dma.c:271:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#362: FILE: drivers/dma/pasemi_dma.c:275:
+^Iif (desc->flags & DMA_PREP_INTERRUPT) $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#378: FILE: drivers/dma/pasemi_dma.c:291:
+	ring[idx & (RING_SZ-1)] = xct[0];
 	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#379: FILE: drivers/dma/pasemi_dma.c:292:
+	ring[(idx+1) & (RING_SZ-1)] = xct[1];
 	         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#379: FILE: drivers/dma/pasemi_dma.c:292:
+	ring[(idx+1) & (RING_SZ-1)] = xct[1];
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#380: FILE: drivers/dma/pasemi_dma.c:293:
+	ring[(idx+2) & (RING_SZ-1)] = xct[2];
 	         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#380: FILE: drivers/dma/pasemi_dma.c:293:
+	ring[(idx+2) & (RING_SZ-1)] = xct[2];
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#381: FILE: drivers/dma/pasemi_dma.c:294:
+	ring[(idx+3) & (RING_SZ-1)] = xct[3];
 	         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#381: FILE: drivers/dma/pasemi_dma.c:294:
+	ring[(idx+3) & (RING_SZ-1)] = xct[3];
 	                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#383: FILE: drivers/dma/pasemi_dma.c:296:
+	chan->next_to_fill = (chan->next_to_fill + 4) & (RING_SZ-1);
 	                                                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#410: FILE: drivers/dma/pasemi_dma.c:323:
+	if (ch->desc_count >= (RING_SZ/4)) {
 	                              ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#431: FILE: drivers/dma/pasemi_dma.c:344:
+	BUG_ON(!desc);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#444: FILE: drivers/dma/pasemi_dma.c:357:
+		if (printk_ratelimit())

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#445: FILE: drivers/dma/pasemi_dma.c:358:
+			printk(KERN_WARNING "pasemi_dma: Copy request too long (%ld > %d)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#492: FILE: drivers/dma/pasemi_dma.c:405:
+			printk(KERN_INFO "pasemi_dma: request of irq %d failed: %d\n",

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#503: FILE: drivers/dma/pasemi_dma.c:416:
+static int __devinit pasemi_dma_probe(struct pci_dev *pdev,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#538: FILE: drivers/dma/pasemi_dma.c:451:
+	printk(KERN_INFO "PA Semi DMA Engine found, using %d channels for copy\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#539: FILE: drivers/dma/pasemi_dma.c:452:
+	printk(KERN_INFO "PA Semi DMA Engine found, using %d channels for copy\n",
+		dma_dev->chancnt);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#549: FILE: drivers/dma/pasemi_dma.c:462:
+	printk(KERN_ERR "PA Semi DMA Engine initialization failed\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#557: FILE: drivers/dma/pasemi_dma.c:470:
+	struct pasemi_dma *device;
+	device = pci_get_drvdata(pdev);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#562: FILE: drivers/dma/pasemi_dma.c:475:
+static void __devexit pasemi_dma_remove(struct pci_dev *pdev)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#597: FILE: drivers/dma/pasemi_dma.c:510:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000306892.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 17 warnings, 24 checks, 549 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000306892.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
