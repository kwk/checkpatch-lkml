WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#74: FILE: ltt/ltt-type-serializer.c:1:
+/**

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#85: FILE: ltt/ltt-type-serializer.c:12:
+notrace void _ltt_specialized_trace(const struct marker *mdata,
+		void *probe_data,

CHECK:CAMELCASE: Avoid CamelCase: <eID>
#90: FILE: ltt/ltt-type-serializer.c:17:
+	uint16_t eID;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#90: FILE: ltt/ltt-type-serializer.c:17:
+	uint16_t eID;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#97: FILE: ltt/ltt-type-serializer.c:24:
+	uint64_t tsc;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: ltt/ltt-type-serializer.c:67:
+		ret = ltt_reserve_slot(trace, channel, &transport_data,
+					data_size, &slot_size, &buf_offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: ltt/ltt-type-serializer.c:77:
+		buf_offset = ltt_write_event_header(trace,
+					channel, buf, buf_offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#155: FILE: ltt/ltt-type-serializer.c:82:
+			ltt_relay_write(buf, buf_offset, serialize_private,
+				data_size);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#175: FILE: include/linux/ltt-type-serializer.h:1:
+#ifndef _LTT_TYPE_SERIALIZER_H

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#184: FILE: include/linux/ltt-type-serializer.h:10:
+extern void _ltt_specialized_trace(const struct marker *mdata, void *probe_data,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: include/linux/ltt-type-serializer.h:11:
+extern void _ltt_specialized_trace(const struct marker *mdata, void *probe_data,
+		void *serialize_private, unsigned int data_size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#194: FILE: include/linux/ltt-type-serializer.h:20:
+static inline void ltt_specialized_trace(const struct marker *mdata,
+		void *probe_data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#201: FILE: include/linux/ltt-type-serializer.h:27:
+	_ltt_specialized_trace(mdata, probe_data, serialize_private, data_size,
+		largest_align);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000158729.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 11 checks, 203 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000158729.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
