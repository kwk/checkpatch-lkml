WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#73: FILE: arch/i386/kernel/tsc.c:317:
+		printk("Marking TSC unstable due to: %s.\n", reason);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#112: FILE: arch/x86_64/kernel/tsc.c:204:
+		printk("Marking TSC unstable due to %s\n", reason);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'check_tsc_sync_source', this function's name, in a string
#125: FILE: arch/x86_64/kernel/tsc_sync.c:141:
+		mark_tsc_unstable("check_tsc_sync_source failed");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#182: FILE: include/asm-x86_64/timex.h:30:
+extern void mark_tsc_unstable(char*);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#182: FILE: include/asm-x86_64/timex.h:30:
+extern void mark_tsc_unstable(char*);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char*' should also have an identifier name
#182: FILE: include/asm-x86_64/timex.h:30:
+extern void mark_tsc_unstable(char*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#194: FILE: include/asm-x86_64/tsc.h:56:
+extern void mark_tsc_unstable(char*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#194: FILE: include/asm-x86_64/tsc.h:56:
+extern void mark_tsc_unstable(char*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char*' should also have an identifier name
#194: FILE: include/asm-x86_64/tsc.h:56:
+extern void mark_tsc_unstable(char*);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000464050.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 5 warnings, 2 checks, 103 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000464050.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
