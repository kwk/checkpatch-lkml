WARNING:TYPO_SPELLING: 'cacheing' may be misspelled - perhaps 'caching'?
#28: 
write cacheing in support of read/write exclusive mounts.  This feature
      ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BAD_SIGN_OFF: Non-standard signature: 'Signed-of-by:' - perhaps 'Signed-off-by:'?
#35: 
Signed-of-by: Eric Van Hensbergen <ericvh@gmail.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#60: FILE: fs/9p/9p.h:373:
+		 u32 count, const char __user * data, char * kdata,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#60: FILE: fs/9p/9p.h:373:
+		 u32 count, const char __user * data, char * kdata,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#72: FILE: fs/9p/conv.c:462:
+v9fs_put_kernel_data(struct cbuf *bufp, char * kdata, int count,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#73: FILE: fs/9p/conv.c:463:
+v9fs_put_kernel_data(struct cbuf *bufp, char * kdata, int count,
+		   unsigned char **pdata)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#88: FILE: fs/9p/conv.c:735:
+				      const char __user * data, char * kdata)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#88: FILE: fs/9p/conv.c:735:
+				      const char __user * data, char * kdata)

ERROR:SPACING: space required before the open parenthesis '('
#97: FILE: fs/9p/conv.c:750:
+	if(data)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#99: FILE: fs/9p/conv.c:752:
+		err = v9fs_put_user_data(bufp, data, count,
+						&fc->params.twrite.data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#102: FILE: fs/9p/conv.c:755:
+		err = v9fs_put_kernel_data(bufp, kdata, count,
+						&fc->params.twrite.data);

CHECK:SPACING: No space is necessary after a cast
#175: FILE: fs/9p/fid.c:45:
+	struct list_head *fid_list= (struct list_head *) *priv;

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#175: FILE: fs/9p/fid.c:45:
+	struct list_head *fid_list= (struct list_head *) *priv;
 	                          ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fid_list"
#177: FILE: fs/9p/fid.c:47:
+	if (fid_list == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!priv"
#181: FILE: fs/9p/fid.c:50:
+		if (*priv == NULL) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#194: FILE: fs/9p/fid.c:82:
+	new->filp = NULL;
 	     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#227: FILE: fs/9p/v9fs_vfs.h:57:
+ssize_t v9fs_write(struct file *filp, const char __user * data, char * kdata, size_t count, loff_t * offset);
                                 ^^^^

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#227: FILE: fs/9p/v9fs_vfs.h:57:
+ssize_t v9fs_write(struct file *filp, const char __user * data, char * kdata, size_t count, loff_t * offset);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#227: FILE: fs/9p/v9fs_vfs.h:57:
+ssize_t v9fs_write(struct file *filp, const char __user * data, char * kdata, size_t count, loff_t * offset);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#227: FILE: fs/9p/v9fs_vfs.h:57:
+ssize_t v9fs_write(struct file *filp, const char __user * data, char * kdata, size_t count, loff_t * offset);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#227: FILE: fs/9p/v9fs_vfs.h:57:
+ssize_t v9fs_write(struct file *filp, const char __user * data, char * kdata, size_t count, loff_t * offset);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#255: FILE: fs/9p/vfs_addr.c:54:
+static int v9fs_vfs_readpage_worker(struct file *filp, struct page *page)
                                                  ^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#276: FILE: fs/9p/vfs_addr.c:77:
+			printk(KERN_ERR "v9fs_t_read returned %d\n", result);

WARNING:INDENTED_LABEL: labels should not be indented
#289: FILE: fs/9p/vfs_addr.c:101:
+      io_error:

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#306: FILE: fs/9p/vfs_addr.c:118:
+		       unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#306: FILE: fs/9p/vfs_addr.c:118:
+		       unsigned from, unsigned to)

ERROR:SPACING: space required before the open parenthesis '('
#308: FILE: fs/9p/vfs_addr.c:120:
+	if(!PageUptodate(page)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#311: FILE: fs/9p/vfs_addr.c:123:
+			void *kaddr = kmap_atomic(page, KM_USER0);
+			memset(kaddr, 0, from);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#335: FILE: fs/9p/vfs_addr.c:147:
+int v9fs_commit_write(struct file *file, struct page *page,
+		       unsigned offset, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#335: FILE: fs/9p/vfs_addr.c:147:
+		       unsigned offset, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#335: FILE: fs/9p/vfs_addr.c:147:
+		       unsigned offset, unsigned to)

ERROR:CODE_INDENT: code indent should use tabs where possible
#337: FILE: fs/9p/vfs_addr.c:149:
+        struct inode *inode = page->mapping->host;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: fs/9p/vfs_addr.c:149:
+        struct inode *inode = page->mapping->host;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#338: FILE: fs/9p/vfs_addr.c:150:
+        loff_t pos = ((loff_t)page->index << PAGE_CACHE_SHIFT) + to;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: fs/9p/vfs_addr.c:150:
+        loff_t pos = ((loff_t)page->index << PAGE_CACHE_SHIFT) + to;$

ERROR:SPACING: space required before the open parenthesis '('
#342: FILE: fs/9p/vfs_addr.c:154:
+	if(!PageUptodate(page))

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: fs/9p/vfs_addr.c:157:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#350: FILE: fs/9p/vfs_addr.c:162:
+        if (pos > inode->i_size)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: fs/9p/vfs_addr.c:162:
+        if (pos > inode->i_size)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#351: FILE: fs/9p/vfs_addr.c:163:
+                i_size_write(inode, pos);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: fs/9p/vfs_addr.c:163:
+                i_size_write(inode, pos);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#352: FILE: fs/9p/vfs_addr.c:164:
+        set_page_dirty(page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: fs/9p/vfs_addr.c:164:
+        set_page_dirty(page);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#353: FILE: fs/9p/vfs_addr.c:165:
+	dprintk(DEBUG_CURRENT, "inode->size: %llx\n",inode->i_size);
 	                                            ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#358: FILE: fs/9p/vfs_addr.c:170:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#368: FILE: fs/9p/vfs_addr.c:180:
+static int v9fs_vfs_readpage(struct file *filp, struct page *page)
                                           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#374: FILE: fs/9p/vfs_addr.c:186:
+	retval = v9fs_vfs_readpage_worker(filp, page);
 	                                  ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#402: FILE: fs/9p/vfs_addr.c:214:
+		return fid->filp;
 		            ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#404: FILE: fs/9p/vfs_addr.c:216:
+	dprintk(DEBUG_VFS, " filp not found for page: %p\n", page);
 	                     ^^^^

WARNING:TYPO_SPELLING: 'mmaped' may be misspelled - perhaps 'mapped'?
#409: FILE: fs/9p/vfs_addr.c:221:
+ * v9fs_vfs_writepage - write a mmaped page to server
                                 ^^^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#423: FILE: fs/9p/vfs_addr.c:235:
+	struct file *filp = v9fs_find_file(page);
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#428: FILE: fs/9p/vfs_addr.c:240:
+	if ((!inode) || (!filp))
 	                  ^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!inode'
#428: FILE: fs/9p/vfs_addr.c:240:
+	if ((!inode) || (!filp))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!filp'
#428: FILE: fs/9p/vfs_addr.c:240:
+	if ((!inode) || (!filp))

CHECK:CAMELCASE: Avoid CamelCase: <UnlockPage>
#429: FILE: fs/9p/vfs_addr.c:241:
+		goto UnlockPage;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: No space is necessary after a cast
#442: FILE: fs/9p/vfs_addr.c:254:
+	offset = ((loff_t) page->index << PAGE_CACHE_SHIFT);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#444: FILE: fs/9p/vfs_addr.c:256:
+	retval = v9fs_write(filp, NULL, buffer, count, &offset);
 	                    ^^^^

WARNING:INDENTED_LABEL: labels should not be indented
#448: FILE: fs/9p/vfs_addr.c:260:
+      UnlockPage:

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#485: FILE: fs/9p/vfs_file.c:82:
+	if((vfid->qid.version) && (v9ses->cache) && !(file->f_flags&O_APPEND)) {
 	                                                           ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vfid->qid.version'
#485: FILE: fs/9p/vfs_file.c:82:
+	if((vfid->qid.version) && (v9ses->cache) && !(file->f_flags&O_APPEND)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'v9ses->cache'
#485: FILE: fs/9p/vfs_file.c:82:
+	if((vfid->qid.version) && (v9ses->cache) && !(file->f_flags&O_APPEND)) {

ERROR:SPACING: space required before the open parenthesis '('
#485: FILE: fs/9p/vfs_file.c:82:
+	if((vfid->qid.version) && (v9ses->cache) && !(file->f_flags&O_APPEND)) {

ERROR:SPACING: space required before the open parenthesis '('
#488: FILE: fs/9p/vfs_file.c:84:
+		if(file->f_op == &v9fs_file_operations) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#494: FILE: fs/9p/vfs_file.c:90:
+         v9fs_fid_insert(vfid, &inode->i_private);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: fs/9p/vfs_file.c:90:
+         v9fs_fid_insert(vfid, &inode->i_private);$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#518: FILE: fs/9p/vfs_file.c:203:
+v9fs_write(struct file *filp, const char __user * data,
                         ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#518: FILE: fs/9p/vfs_file.c:203:
+v9fs_write(struct file *filp, const char __user * data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#519: FILE: fs/9p/vfs_file.c:204:
+v9fs_write(struct file *filp, const char __user * data,
+		char* kdata, size_t count, loff_t * offset)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#519: FILE: fs/9p/vfs_file.c:204:
+		char* kdata, size_t count, loff_t * offset)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#519: FILE: fs/9p/vfs_file.c:204:
+		char* kdata, size_t count, loff_t * offset)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#530: FILE: fs/9p/vfs_file.c:216:
+	dprintk(DEBUG_VFS, "count %d offset %x\n",
+			(int)count, (int)*offset);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#540: FILE: fs/9p/vfs_file.c:226:
+		result = v9fs_t_write(v9ses, fid, *offset, rsize,
+						data, kdata, &fcall);

ERROR:SPACING: space required before the open parenthesis '('
#549: FILE: fs/9p/vfs_file.c:245:
+		if(data)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#560: FILE: fs/9p/vfs_file.c:255:
 
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#571: FILE: fs/9p/vfs_file.c:266:
+v9fs_file_write(struct file *filp, const char __user * data,
                              ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#571: FILE: fs/9p/vfs_file.c:266:
+v9fs_file_write(struct file *filp, const char __user * data,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#572: FILE: fs/9p/vfs_file.c:267:
+		size_t count, loff_t * offset)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#578: FILE: fs/9p/vfs_file.c:273:
+	dprintk(DEBUG_VFS, "count %d offset %x\n",
+			(int)count, (int)*offset);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#579: FILE: fs/9p/vfs_file.c:274:
+	ret = v9fs_write(filp, data, NULL, count, offset);
 	                 ^^^^

ERROR:SPACING: space required before the open parenthesis '('
#580: FILE: fs/9p/vfs_file.c:275:
+	if(invalidate_inode_pages2(inode->i_mapping) < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#627: FILE: fs/9p/vfs_inode.c:530:
+^I        if((vfid->qid.version) && (v9ses->cache) &&$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vfid->qid.version'
#627: FILE: fs/9p/vfs_inode.c:530:
+	        if((vfid->qid.version) && (v9ses->cache) &&
+		  !(flags & O_APPEND)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'v9ses->cache'
#627: FILE: fs/9p/vfs_inode.c:530:
+	        if((vfid->qid.version) && (v9ses->cache) &&
+		  !(flags & O_APPEND)) {

ERROR:SPACING: space required before the open parenthesis '('
#627: FILE: fs/9p/vfs_inode.c:530:
+	        if((vfid->qid.version) && (v9ses->cache) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#628: FILE: fs/9p/vfs_inode.c:531:
+	        if((vfid->qid.version) && (v9ses->cache) &&
+		  !(flags & O_APPEND)) {

ERROR:SPACING: space required before the open parenthesis '('
#630: FILE: fs/9p/vfs_inode.c:533:
+			if(filp->f_op == &v9fs_file_operations) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000466654.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 32 errors, 31 warnings, 23 checks, 553 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000466654.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
