WARNING:SPLIT_STRING: quoted string split across lines
#65: FILE: arch/um/os-Linux/aio.c:138:
 				printk("aio_thread - write failed, fd = %d, "
+				       "err = %d\n", reply_fd, errno);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space required before the open parenthesis '('
#101: FILE: arch/um/os-Linux/aio.c:171:
+	if(n < 0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#131: FILE: arch/um/os-Linux/aio.c:207:
 			printk("not_aio_thread - write failed, fd = %d, "
+			       "err = %d\n", req.aio->reply_fd, errno);

ERROR:SPACING: space required before the open brace '{'
#142: FILE: arch/um/os-Linux/aio.c:282:
+		if(err != sizeof(reply)){

ERROR:SPACING: space required before the open parenthesis '('
#142: FILE: arch/um/os-Linux/aio.c:282:
+		if(err != sizeof(reply)){

CHECK:BRACES: braces {} should be used on all arms of this statement
#142: FILE: arch/um/os-Linux/aio.c:282:
+		if(err != sizeof(reply)){
[...]
 		else err = 0;
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#158: FILE: arch/um/os-Linux/aio.c:384:
+	else err = -errno;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#174: FILE: arch/um/os-Linux/drivers/ethertap_user.c:53:
+		printk("etap_change - request failed, err = %d\n", errno);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'etap_change', this function's name, in a string
#174: FILE: arch/um/os-Linux/drivers/ethertap_user.c:53:
+		printk("etap_change - request failed, err = %d\n", errno);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#188: FILE: arch/um/os-Linux/drivers/ethertap_user.c:129:
+		printk("etap_tramp : read of status failed, err = %d\n", -err);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'etap_tramp', this function's name, in a string
#188: FILE: arch/um/os-Linux/drivers/ethertap_user.c:129:
+		printk("etap_tramp : read of status failed, err = %d\n", -err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#264: FILE: arch/um/os-Linux/process.c:82:
+		printk("Couldn't read '%s', err = %d\n", stat, errno);

WARNING:SPLIT_STRING: quoted string split across lines
#283: FILE: arch/um/os-Linux/sigio.c:77:
 					       "read on socket failed, "
+					       "err = %d\n", errno);

WARNING:SPLIT_STRING: quoted string split across lines
#296: FILE: arch/um/os-Linux/sigio.c:93:
 				printk("write_sigio_thread : write on socket "
+				       "failed, err = %d\n", errno);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#308: FILE: arch/um/os-Linux/sigio.c:133:
+		printk("update_thread : write failed, err = %d\n", errno);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'update_thread', this function's name, in a string
#308: FILE: arch/um/os-Linux/sigio.c:133:
+		printk("update_thread : write failed, err = %d\n", errno);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#316: FILE: arch/um/os-Linux/sigio.c:139:
+		printk("update_thread : read failed, err = %d\n", errno);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'update_thread', this function's name, in a string
#316: FILE: arch/um/os-Linux/sigio.c:139:
+		printk("update_thread : read failed, err = %d\n", errno);

WARNING:SPACING: space prohibited before semicolon
#325: FILE: arch/um/os-Linux/sigio.c:463:
+	while(write(master, buf, sizeof(buf)) > 0) ;

ERROR:SPACING: space required before the open parenthesis '('
#325: FILE: arch/um/os-Linux/sigio.c:463:
+	while(write(master, buf, sizeof(buf)) > 0) ;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#325: FILE: arch/um/os-Linux/sigio.c:463:
+	while(write(master, buf, sizeof(buf)) > 0) ;

WARNING:SPACING: space prohibited before semicolon
#329: FILE: arch/um/os-Linux/sigio.c:466:
+	while(((n = read(slave, buf, sizeof(buf))) > 0) && !got_sigio) ;

ERROR:SPACING: space required before the open parenthesis '('
#329: FILE: arch/um/os-Linux/sigio.c:466:
+	while(((n = read(slave, buf, sizeof(buf))) > 0) && !got_sigio) ;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#329: FILE: arch/um/os-Linux/sigio.c:466:
+	while(((n = read(slave, buf, sizeof(buf))) > 0) && !got_sigio) ;

ERROR:SPACING: space required before the open brace '{'
#352: FILE: arch/um/os-Linux/skas/mem.c:204:
+		if(ret != sizeof(map)){

ERROR:SPACING: space required before the open parenthesis '('
#352: FILE: arch/um/os-Linux/skas/mem.c:204:
+		if(ret != sizeof(map)){

ERROR:SPACING: space required before the open brace '{'
#366: FILE: arch/um/os-Linux/skas/mem.c:238:
+		if(ret != sizeof(unmap)){

ERROR:SPACING: space required before the open parenthesis '('
#366: FILE: arch/um/os-Linux/skas/mem.c:238:
+		if(ret != sizeof(unmap)){

ERROR:SPACING: space required before the open brace '{'
#380: FILE: arch/um/os-Linux/skas/mem.c:275:
+		if(ret != sizeof(protect)){

ERROR:SPACING: space required before the open parenthesis '('
#380: FILE: arch/um/os-Linux/skas/mem.c:275:
+		if(ret != sizeof(protect)){

WARNING:SPLIT_STRING: quoted string split across lines
#403: FILE: arch/um/os-Linux/skas/process.c:440:
 		panic("map_stub_pages : /proc/mm map for code failed, "
+		      "err = %d\n", n);

WARNING:SPLIT_STRING: quoted string split across lines
#416: FILE: arch/um/os-Linux/skas/process.c:460:
 			panic("map_stub_pages : /proc/mm map for data failed, "
+			      "err = %d\n", errno);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000447220.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 14 errors, 17 warnings, 1 checks, 358 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000447220.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
