WARNING:TYPO_SPELLING: 'managment' may be misspelled - perhaps 'management'?
#34: 
This patch adds the managment for rwlocks to have multiple readers.
                    ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!owners.owner"
#79: FILE: include/linux/spinlock.h:269:
+# define rt_write_can_lock(rwl)	((rwl)->owners.owner == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: braces {} should be used on all arms of this statement
#257: FILE: kernel/rtmutex.c:1147:
+		if (mtx)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#259: FILE: kernel/rtmutex.c:1149:
+		else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#268: FILE: kernel/rtmutex.c:1157:
+	if (mtx)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#270: FILE: kernel/rtmutex.c:1159:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#378: FILE: kernel/rtmutex.c:1331:
+		if (mtx)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#380: FILE: kernel/rtmutex.c:1333:
+		else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#389: FILE: kernel/rtmutex.c:1341:
+	if (mtx)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#391: FILE: kernel/rtmutex.c:1343:
+	else {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#560: FILE: kernel/rtmutex_common.h:169:
+extern void rt_rwlock_write_lock(struct rw_mutex *rwm);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#561: FILE: kernel/rtmutex_common.h:170:
+extern void rt_rwlock_read_lock(struct rw_mutex *rwm);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#562: FILE: kernel/rtmutex_common.h:171:
+extern void rt_rwlock_write_unlock(struct rw_mutex *rwm);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#563: FILE: kernel/rtmutex_common.h:172:
+extern void rt_rwlock_read_unlock(struct rw_mutex *rwm);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000290555.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 1 warnings, 13 checks, 471 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000290555.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
