WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#45: FILE: arch/x86/kvm/x86_emulate.c:435:
+#define __emulate_2op_cl(_op, _cl, _src, _dst, _eflags, _suffix, _type) ^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_cl' - possible side-effects?
#45: FILE: arch/x86/kvm/x86_emulate.c:435:
+#define __emulate_2op_cl(_op, _cl, _src, _dst, _eflags, _suffix, _type) 	\
+	do {									\
+		unsigned long _tmp;						\
+		_type _clv  = (_cl).val;  					\
+		_type _srcv = (_src).val;    					\
+		_type _dstv = (_dst).val;					\
+										\
+		__asm__ __volatile__ (						\
+			_PRE_EFLAGS("0", "5", "2")				\
+			_op _suffix " %4,%1 \n"					\
+			_POST_EFLAGS("0", "5", "2")				\
+			: "=m" (_eflags), "+r" (_dstv), "=&r" (_tmp)		\
+			: "c" (_clv) , "r" (_srcv), "i" (EFLAGS_MASK)		\
+			); 							\
+										\
+		(_cl).val  = (unsigned long) _clv;				\
+		(_src).val = (unsigned long) _srcv;				\
+		(_dst).val = (unsigned long) _dstv;				\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_src' - possible side-effects?
#45: FILE: arch/x86/kvm/x86_emulate.c:435:
+#define __emulate_2op_cl(_op, _cl, _src, _dst, _eflags, _suffix, _type) 	\
+	do {									\
+		unsigned long _tmp;						\
+		_type _clv  = (_cl).val;  					\
+		_type _srcv = (_src).val;    					\
+		_type _dstv = (_dst).val;					\
+										\
+		__asm__ __volatile__ (						\
+			_PRE_EFLAGS("0", "5", "2")				\
+			_op _suffix " %4,%1 \n"					\
+			_POST_EFLAGS("0", "5", "2")				\
+			: "=m" (_eflags), "+r" (_dstv), "=&r" (_tmp)		\
+			: "c" (_clv) , "r" (_srcv), "i" (EFLAGS_MASK)		\
+			); 							\
+										\
+		(_cl).val  = (unsigned long) _clv;				\
+		(_src).val = (unsigned long) _srcv;				\
+		(_dst).val = (unsigned long) _dstv;				\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_dst' - possible side-effects?
#45: FILE: arch/x86/kvm/x86_emulate.c:435:
+#define __emulate_2op_cl(_op, _cl, _src, _dst, _eflags, _suffix, _type) 	\
+	do {									\
+		unsigned long _tmp;						\
+		_type _clv  = (_cl).val;  					\
+		_type _srcv = (_src).val;    					\
+		_type _dstv = (_dst).val;					\
+										\
+		__asm__ __volatile__ (						\
+			_PRE_EFLAGS("0", "5", "2")				\
+			_op _suffix " %4,%1 \n"					\
+			_POST_EFLAGS("0", "5", "2")				\
+			: "=m" (_eflags), "+r" (_dstv), "=&r" (_tmp)		\
+			: "c" (_clv) , "r" (_srcv), "i" (EFLAGS_MASK)		\
+			); 							\
+										\
+		(_cl).val  = (unsigned long) _clv;				\
+		(_src).val = (unsigned long) _srcv;				\
+		(_dst).val = (unsigned long) _dstv;				\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_type' - possible side-effects?
#45: FILE: arch/x86/kvm/x86_emulate.c:435:
+#define __emulate_2op_cl(_op, _cl, _src, _dst, _eflags, _suffix, _type) 	\
+	do {									\
+		unsigned long _tmp;						\
+		_type _clv  = (_cl).val;  					\
+		_type _srcv = (_src).val;    					\
+		_type _dstv = (_dst).val;					\
+										\
+		__asm__ __volatile__ (						\
+			_PRE_EFLAGS("0", "5", "2")				\
+			_op _suffix " %4,%1 \n"					\
+			_POST_EFLAGS("0", "5", "2")				\
+			: "=m" (_eflags), "+r" (_dstv), "=&r" (_tmp)		\
+			: "c" (_clv) , "r" (_srcv), "i" (EFLAGS_MASK)		\
+			); 							\
+										\
+		(_cl).val  = (unsigned long) _clv;				\
+		(_src).val = (unsigned long) _srcv;				\
+		(_dst).val = (unsigned long) _dstv;				\
+	} while (0)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#48: FILE: arch/x86/kvm/x86_emulate.c:438:
+^I^I_type _clv  = (_cl).val;  ^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#49: FILE: arch/x86/kvm/x86_emulate.c:439:
+^I^I_type _srcv = (_src).val;    ^I^I^I^I^I\$

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#54: FILE: arch/x86/kvm/x86_emulate.c:444:
+			_op _suffix " %4,%1 \n"					\

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#57: FILE: arch/x86/kvm/x86_emulate.c:447:
+			: "c" (_clv) , "r" (_srcv), "i" (EFLAGS_MASK)		\
 			             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#58: FILE: arch/x86/kvm/x86_emulate.c:448:
+^I^I^I); ^I^I^I^I^I^I^I\$

CHECK:SPACING: No space is necessary after a cast
#60: FILE: arch/x86/kvm/x86_emulate.c:450:
+		(_cl).val  = (unsigned long) _clv;				\

CHECK:SPACING: No space is necessary after a cast
#61: FILE: arch/x86/kvm/x86_emulate.c:451:
+		(_src).val = (unsigned long) _srcv;				\

CHECK:SPACING: No space is necessary after a cast
#62: FILE: arch/x86/kvm/x86_emulate.c:452:
+		(_dst).val = (unsigned long) _dstv;				\

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_op' - possible side-effects?
#65: FILE: arch/x86/kvm/x86_emulate.c:455:
+#define emulate_2op_cl(_op, _cl, _src, _dst, _eflags)				\
+	do {									\
+		switch ((_dst).bytes) {						\
+		case 2:								\
+			__emulate_2op_cl(_op, _cl, _src, _dst, _eflags,  	\
+						"w", unsigned short);         	\
+			break;							\
+		case 4: 							\
+			__emulate_2op_cl(_op, _cl, _src, _dst, _eflags,  	\
+						"l", unsigned int);           	\
+			break;							\
+		case 8:								\
+			ON64(__emulate_2op_cl(_op, _cl, _src, _dst, _eflags,	\
+						"q", unsigned long));  		\
+			break;							\
+		}								\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_cl' - possible side-effects?
#65: FILE: arch/x86/kvm/x86_emulate.c:455:
+#define emulate_2op_cl(_op, _cl, _src, _dst, _eflags)				\
+	do {									\
+		switch ((_dst).bytes) {						\
+		case 2:								\
+			__emulate_2op_cl(_op, _cl, _src, _dst, _eflags,  	\
+						"w", unsigned short);         	\
+			break;							\
+		case 4: 							\
+			__emulate_2op_cl(_op, _cl, _src, _dst, _eflags,  	\
+						"l", unsigned int);           	\
+			break;							\
+		case 8:								\
+			ON64(__emulate_2op_cl(_op, _cl, _src, _dst, _eflags,	\
+						"q", unsigned long));  		\
+			break;							\
+		}								\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_src' - possible side-effects?
#65: FILE: arch/x86/kvm/x86_emulate.c:455:
+#define emulate_2op_cl(_op, _cl, _src, _dst, _eflags)				\
+	do {									\
+		switch ((_dst).bytes) {						\
+		case 2:								\
+			__emulate_2op_cl(_op, _cl, _src, _dst, _eflags,  	\
+						"w", unsigned short);         	\
+			break;							\
+		case 4: 							\
+			__emulate_2op_cl(_op, _cl, _src, _dst, _eflags,  	\
+						"l", unsigned int);           	\
+			break;							\
+		case 8:								\
+			ON64(__emulate_2op_cl(_op, _cl, _src, _dst, _eflags,	\
+						"q", unsigned long));  		\
+			break;							\
+		}								\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_dst' - possible side-effects?
#65: FILE: arch/x86/kvm/x86_emulate.c:455:
+#define emulate_2op_cl(_op, _cl, _src, _dst, _eflags)				\
+	do {									\
+		switch ((_dst).bytes) {						\
+		case 2:								\
+			__emulate_2op_cl(_op, _cl, _src, _dst, _eflags,  	\
+						"w", unsigned short);         	\
+			break;							\
+		case 4: 							\
+			__emulate_2op_cl(_op, _cl, _src, _dst, _eflags,  	\
+						"l", unsigned int);           	\
+			break;							\
+		case 8:								\
+			ON64(__emulate_2op_cl(_op, _cl, _src, _dst, _eflags,	\
+						"q", unsigned long));  		\
+			break;							\
+		}								\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_eflags' - possible side-effects?
#65: FILE: arch/x86/kvm/x86_emulate.c:455:
+#define emulate_2op_cl(_op, _cl, _src, _dst, _eflags)				\
+	do {									\
+		switch ((_dst).bytes) {						\
+		case 2:								\
+			__emulate_2op_cl(_op, _cl, _src, _dst, _eflags,  	\
+						"w", unsigned short);         	\
+			break;							\
+		case 4: 							\
+			__emulate_2op_cl(_op, _cl, _src, _dst, _eflags,  	\
+						"l", unsigned int);           	\
+			break;							\
+		case 8:								\
+			ON64(__emulate_2op_cl(_op, _cl, _src, _dst, _eflags,	\
+						"q", unsigned long));  		\
+			break;							\
+		}								\
+	} while (0)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#69: FILE: arch/x86/kvm/x86_emulate.c:459:
+^I^I^I__emulate_2op_cl(_op, _cl, _src, _dst, _eflags,  ^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#70: FILE: arch/x86/kvm/x86_emulate.c:460:
+^I^I^I^I^I^I"w", unsigned short);         ^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#72: FILE: arch/x86/kvm/x86_emulate.c:462:
+^I^Icase 4: ^I^I^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#73: FILE: arch/x86/kvm/x86_emulate.c:463:
+^I^I^I__emulate_2op_cl(_op, _cl, _src, _dst, _eflags,  ^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#74: FILE: arch/x86/kvm/x86_emulate.c:464:
+^I^I^I^I^I^I"l", unsigned int);           ^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#78: FILE: arch/x86/kvm/x86_emulate.c:468:
+^I^I^I^I^I^I"q", unsigned long));  ^I^I\$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000192717.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 11 warnings, 12 checks, 45 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000192717.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
