WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
3) Removed the "()" logic of hot keys. Now, the first upper cased letter of an

WARNING:TYPO_SPELLING: 'procceed' may be misspelled - perhaps 'proceed'?
#51: 
worth including before we procceed. Tweaking the colors will be the easy part ;)
                          ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#123: FILE: scripts/kconfig/Makefile:122:
+nconf-objs^I:= nconf.o zconf.tab.o shared.o nconf.gui.o $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#151: FILE: scripts/kconfig/Makefile:172:
+HOSTLOADLIBES_nconf^I= -lmenu -lpanel -lncurses $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#200: FILE: scripts/kconfig/conf.c:447:
+			fprintf(stderr,
+			_("\n*** Kernel configuration requires explicit update.\n\n"));

CHECK:CAMELCASE: Avoid CamelCase: <rootEntry>
#210: FILE: scripts/kconfig/conf.c:457:
+	rootEntry = &rootmenu;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#522: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#527: FILE: scripts/kconfig/nconf.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#539: FILE: scripts/kconfig/nconf.c:13:
+static const char nconf_readme[] = N_(

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#580: FILE: scripts/kconfig/nconf.c:54:
+"   <Exit>, <Help> and <Instructions> \n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#601: FILE: scripts/kconfig/nconf.c:75:
+"   Also, the <TAB> and cursor keys will cycle between <Select>, \n"

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#674: FILE: scripts/kconfig/nconf.c:148:
+menu_instructions[] = N_(

WARNING:TYPO_SPELLING: 'allways' may be misspelled - perhaps 'always'?
#681: FILE: scripts/kconfig/nconf.c:155:
+	" <Esc> allways leaves the current window\n"),
 	        ^^^^^^^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#682: FILE: scripts/kconfig/nconf.c:156:
+radiolist_instructions[] = N_(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#687: FILE: scripts/kconfig/nconf.c:161:
+inputbox_instructions_int[] = N_(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#691: FILE: scripts/kconfig/nconf.c:165:
+inputbox_instructions_hex[] = N_(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#694: FILE: scripts/kconfig/nconf.c:168:
+inputbox_instructions_string[] = N_(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#697: FILE: scripts/kconfig/nconf.c:171:
+setmod_text[] = N_(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#701: FILE: scripts/kconfig/nconf.c:175:
+nohelp_text[] = N_(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#703: FILE: scripts/kconfig/nconf.c:177:
+load_config_text[] = N_(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#707: FILE: scripts/kconfig/nconf.c:181:
+load_config_help[] = N_(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#718: FILE: scripts/kconfig/nconf.c:192:
+save_config_text[] = N_(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#721: FILE: scripts/kconfig/nconf.c:195:
+save_config_help[] = N_(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#732: FILE: scripts/kconfig/nconf.c:206:
+search_help[] = N_(

WARNING:TYPO_SPELLING: 'resetted' may be misspelled - perhaps 'reset'?
#811: FILE: scripts/kconfig/nconf.c:285:
+ * resetted in clean_items. It would be better to use a hash, but lets keep it
    ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#812: FILE: scripts/kconfig/nconf.c:286:
+ * simple... */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#817: FILE: scripts/kconfig/nconf.c:291:
+} hotkeys[1<<(sizeof(char)*8)];
            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#817: FILE: scripts/kconfig/nconf.c:291:
+} hotkeys[1<<(sizeof(char)*8)];
                           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#829: FILE: scripts/kconfig/nconf.c:303:
+	int index = item_index(current_item(btns_menu));
+	switch (index) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#845: FILE: scripts/kconfig/nconf.c:319:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#849: FILE: scripts/kconfig/nconf.c:323:
+	int i;
+	for (i = 0; curses_menu_items[i]; i++)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#867: FILE: scripts/kconfig/nconf.c:341:
+		hot_index = (hot_index+1)%hotkeys[c].count;
 		                      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#867: FILE: scripts/kconfig/nconf.c:341:
+		hot_index = (hot_index+1)%hotkeys[c].count;
 		                         ^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#869: FILE: scripts/kconfig/nconf.c:343:
+		return hotkeys[c].ptrs[hot_index];
+	} else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#891: FILE: scripts/kconfig/nconf.c:365:
+ * return 0 on success*/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!org"
#900: FILE: scripts/kconfig/nconf.c:374:
+	if (org == NULL || is_hot(index))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#923: FILE: scripts/kconfig/nconf.c:397:
+		if (canbhot(org[i]) && org[i-1] != '<' && org[i-1] != '(') {
 		                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#923: FILE: scripts/kconfig/nconf.c:397:
+		if (canbhot(org[i]) && org[i-1] != '<' && org[i-1] != '(') {
 		                                               ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#937: FILE: scripts/kconfig/nconf.c:411:
+	/*
+	snprintf(dest, len, "%.*s(%c)%s", position, org, org[position],

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#942: FILE: scripts/kconfig/nconf.c:416:
+	for (i=0; i<position; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#942: FILE: scripts/kconfig/nconf.c:416:
+	for (i=0; i<position; i++)
 	           ^

WARNING:TYPO_SPELLING: 'menue' may be misspelled - perhaps 'menu'?
#950: FILE: scripts/kconfig/nconf.c:424:
+ * As ncurses does not allow any attributes inside menue item, we use mark the
                                                    ^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#951: FILE: scripts/kconfig/nconf.c:425:
+ * hot key as the first capitalized letter in the string */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#957: FILE: scripts/kconfig/nconf.c:431:
+	if (items_num > MAX_MENU_ITEMS-1)
 	                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#968: FILE: scripts/kconfig/nconf.c:442:
+	if (make_hot(k_menu_items[items_num].str,
+		sizeof(k_menu_items[items_num].str), tmp_str, items_num) != 0)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#973: FILE: scripts/kconfig/nconf.c:447:
+	curses_menu_items[items_num] = new_item(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#977: FILE: scripts/kconfig/nconf.c:451:
+	set_item_userptr(curses_menu_items[items_num],
+			&k_menu_items[items_num]);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#986: FILE: scripts/kconfig/nconf.c:460:
+	int index = items_num-1;
 	                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#997: FILE: scripts/kconfig/nconf.c:471:
+	snprintf(tmp_str, sizeof(tmp_str), "%s%s",
+		k_menu_items[index].str, new_str);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#999: FILE: scripts/kconfig/nconf.c:473:
+	if (make_hot(k_menu_items[index].str,
+		sizeof(k_menu_items[index].str), tmp_str, index) != 0)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1005: FILE: scripts/kconfig/nconf.c:479:
+	curses_menu_items[index] = new_item(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1009: FILE: scripts/kconfig/nconf.c:483:
+	set_item_userptr(curses_menu_items[index],
+			&k_menu_items[index]);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cur"
#1019: FILE: scripts/kconfig/nconf.c:493:
+	if (cur == NULL)

CHECK:SPACING: No space is necessary after a cast
#1021: FILE: scripts/kconfig/nconf.c:495:
+	mcur = (struct mitem *) item_userptr(cur);

CHECK:SPACING: No space is necessary after a cast
#1036: FILE: scripts/kconfig/nconf.c:510:
+	mcur = (struct mitem *) item_userptr(cur);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1039: FILE: scripts/kconfig/nconf.c:513:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1046: FILE: scripts/kconfig/nconf.c:520:
+static char filename[PATH_MAX+1];
                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1049: FILE: scripts/kconfig/nconf.c:523:
+	static char menu_backtitle[PATH_MAX+128];
 	                                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1059: FILE: scripts/kconfig/nconf.c:533:
+		menu_backtitle[sizeof(menu_backtitle)-1] = '\0';
 		                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1063: FILE: scripts/kconfig/nconf.c:537:
+		filename[sizeof(filename)-1] = '\0';
 		                         ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1067: FILE: scripts/kconfig/nconf.c:541:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1077: FILE: scripts/kconfig/nconf.c:551:
+	dres = dialog_inputbox(main_window,
+			_("Search Configuration Parameter"),

WARNING:SPLIT_STRING: quoted string split across lines
#1079: FILE: scripts/kconfig/nconf.c:553:
+		      _("Enter CONFIG_ (sub)string to search for "
+			"(with or without \"CONFIG\")"),

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1086: FILE: scripts/kconfig/nconf.c:560:
+		show_scroll_win(main_window,
+			_("Search Configuration"), search_help);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1101: FILE: scripts/kconfig/nconf.c:575:
+	show_scroll_win(main_window,
+		_("Search Results"), str_get(&res));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1105: FILE: scripts/kconfig/nconf.c:579:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1115: FILE: scripts/kconfig/nconf.c:589:
+
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#1122: FILE: scripts/kconfig/nconf.c:596:
+		if (prop && menu != current_menu) {
[...]
+		} else
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#1124: FILE: scripts/kconfig/nconf.c:598:
+			const char *prompt = menu_get_prompt(menu);
+			switch (prop->type) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1130: FILE: scripts/kconfig/nconf.c:604:
+					item_make(menu, 'm',
+						"%s%*c%s",

CHECK:BRACES: Unbalanced braces around else statement
#1133: FILE: scripts/kconfig/nconf.c:607:
+				} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1135: FILE: scripts/kconfig/nconf.c:609:
+					item_make(menu, 'm',
+							"   %*c%s  --->",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1146: FILE: scripts/kconfig/nconf.c:620:
+					item_make(menu, ':',
+							"   %*c*** %s ***",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1155: FILE: scripts/kconfig/nconf.c:629:
+					item_make(menu, ':', "---%*c%s",
+							indent + 1, ' ',

CHECK:BRACES: Unbalanced braces around else statement
#1159: FILE: scripts/kconfig/nconf.c:633:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1180: FILE: scripts/kconfig/nconf.c:654:
+				item_make(menu, 't', "[%c]",
+						val == no ? ' ' : '*');

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1202: FILE: scripts/kconfig/nconf.c:676:
+		item_add_str("%*c%s", indent + 1,
+				' ', _(menu_get_prompt(menu)));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1206: FILE: scripts/kconfig/nconf.c:680:
+				item_add_str(" (%s)",
+					_(menu_get_prompt(def_menu)));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1219: FILE: scripts/kconfig/nconf.c:693:
+			item_make(menu, ':',
+				"---%*c%s", indent + 1,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1232: FILE: scripts/kconfig/nconf.c:706:
+					item_make(menu, 't', "[%c]",
+						val == no ? ' ' : '*');

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1235: FILE: scripts/kconfig/nconf.c:709:
+					item_make(menu, 't', "-%c-",
+						val == no ? ' ' : '*');

CHECK:BRACES: braces {} should be used on all arms of this statement
#1249: FILE: scripts/kconfig/nconf.c:723:
+				if (sym_is_changable(sym)) {
[...]
+				} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1252: FILE: scripts/kconfig/nconf.c:726:
+						item_make(menu,
+							't', "{%c}", ch);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1255: FILE: scripts/kconfig/nconf.c:729:
+						item_make(menu,
+							't', "<%c>", ch);

CHECK:BRACES: Unbalanced braces around else statement
#1256: FILE: scripts/kconfig/nconf.c:730:
+				} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1262: FILE: scripts/kconfig/nconf.c:736:
+				item_make(menu, 's', "(%s)",
+					sym_get_string_value(sym));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1267: FILE: scripts/kconfig/nconf.c:741:
+				item_add_str("%*c%s%s", tmp, ' ',
+					_(menu_get_prompt(menu)),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1275: FILE: scripts/kconfig/nconf.c:749:
+		item_add_str("%*c%s%s", indent + 1, ' ',
+			_(menu_get_prompt(menu)),

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1299: FILE: scripts/kconfig/nconf.c:773:
+ * prefer not to scroll the menu if possible*/

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1307: FILE: scripts/kconfig/nconf.c:781:
+	if (selected_index >= toprow && selected_index < toprow+maxy) {
 	                                                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1310: FILE: scripts/kconfig/nconf.c:784:
+		set_current_item(curses_menu,
+			curses_menu_items[selected_index]);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1312: FILE: scripts/kconfig/nconf.c:786:
+		toprow = max(selected_index-maxy/2, 0);
 		                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1312: FILE: scripts/kconfig/nconf.c:786:
+		toprow = max(selected_index-maxy/2, 0);
 		                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1313: FILE: scripts/kconfig/nconf.c:787:
+		if (toprow >= item_count(curses_menu)-maxy)
 		                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1314: FILE: scripts/kconfig/nconf.c:788:
+			toprow = item_count(curses_menu)-mwin_max_lines;
 			                                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1317: FILE: scripts/kconfig/nconf.c:791:
+		set_current_item(curses_menu,
+			curses_menu_items[selected_index]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1325: FILE: scripts/kconfig/nconf.c:799:
+static void show_menu(const char *prompt, const char *instructions,
+		int selected_index)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1345: FILE: scripts/kconfig/nconf.c:819:
+	menu_window = derwin(main_window,
+			mwin_max_lines,

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1348: FILE: scripts/kconfig/nconf.c:822:
+			(COLS-maxx)/2);
 			     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1348: FILE: scripts/kconfig/nconf.c:822:
+			(COLS-maxx)/2);
 			           ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1368: FILE: scripts/kconfig/nconf.c:842:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1391: FILE: scripts/kconfig/nconf.c:865:
+			item_make(NULL, 'L',
+				_("    Load an Alternate Configuration File"));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1393: FILE: scripts/kconfig/nconf.c:867:
+			item_make(NULL, 'S',
+				_("    Save an Alternate Configuration File"));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1397: FILE: scripts/kconfig/nconf.c:871:
+		show_menu(prompt ? _(prompt) : _("Main Menu"),
+				_(menu_instructions),

WARNING:LINE_SPACING: Missing a blank line after declarations
#1428: FILE: scripts/kconfig/nconf.c:902:
+				int tmp = get_next_hot(res);
+				if (tmp != -1)

CHECK:SPACING: No space is necessary after a cast
#1448: FILE: scripts/kconfig/nconf.c:922:
+		submenu = (struct menu *) item_data();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1463: FILE: scripts/kconfig/nconf.c:937:
+					show_scroll_win(main_window,
+						_("README"),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1468: FILE: scripts/kconfig/nconf.c:942:
+				show_scroll_win(main_window,
+					_("Instructions"),

CHECK:SPACING: No space is necessary after a cast
#1477: FILE: scripts/kconfig/nconf.c:951:
+						(void *) (long) !submenu->data;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 48)
#1482: FILE: scripts/kconfig/nconf.c:956:
+				if (sym_is_choice(sym) &&
[...]
+						conf_choice(submenu);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1483: FILE: scripts/kconfig/nconf.c:957:
+				if (sym_is_choice(sym) &&
+					sym_get_tristate_value(sym) == yes)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1505: FILE: scripts/kconfig/nconf.c:979:
+				show_scroll_win(main_window,
+					_("README"), _(nconf_readme));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1574: FILE: scripts/kconfig/nconf.c:1048:
+				item_make(child, ':', "<X> %s",
+					_(menu_get_prompt(child)));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1577: FILE: scripts/kconfig/nconf.c:1051:
+				item_make(child, ':', "    %s",
+					_(menu_get_prompt(child)));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1583: FILE: scripts/kconfig/nconf.c:1057:
+		show_menu(prompt ? _(prompt) : _("Choice Menu"),
+				_(radiolist_instructions),

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1608: FILE: scripts/kconfig/nconf.c:1082:
+			if (res == 10 || res == 27 || res == 'h'
+				|| res == ' ' || res == 's' || res == '?')

WARNING:LINE_SPACING: Missing a blank line after declarations
#1613: FILE: scripts/kconfig/nconf.c:1087:
+				int tmp = get_next_hot(res);
+				if (tmp != -1)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1674: FILE: scripts/kconfig/nconf.c:1148:
+		res = dialog_inputbox(main_window,
+				prompt ? _(prompt) : _("Main Menu"),

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 40)
#1681: FILE: scripts/kconfig/nconf.c:1155:
+			if (sym_set_string_value(menu->sym,
[...]
+					return;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1682: FILE: scripts/kconfig/nconf.c:1156:
+			if (sym_set_string_value(menu->sym,
+				dialog_input_result))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1685: FILE: scripts/kconfig/nconf.c:1159:
+			btn_dialog(main_window,
+				_("You have made an invalid entry."), 0);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1699: FILE: scripts/kconfig/nconf.c:1173:
+	char dialog_input_result[256];
+	while (1) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1701: FILE: scripts/kconfig/nconf.c:1175:
+		int res;
+		res = dialog_inputbox(main_window,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1702: FILE: scripts/kconfig/nconf.c:1176:
+		res = dialog_inputbox(main_window,
+				NULL, load_config_text,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1719: FILE: scripts/kconfig/nconf.c:1193:
+			show_scroll_win(main_window,
+				_("Load Alternate Configuration"),

WARNING:LINE_SPACING: Missing a blank line after declarations
#1731: FILE: scripts/kconfig/nconf.c:1205:
+	char dialog_input_result[256];
+	while (1) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1733: FILE: scripts/kconfig/nconf.c:1207:
+		int res;
+		res = dialog_inputbox(main_window,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1734: FILE: scripts/kconfig/nconf.c:1208:
+		res = dialog_inputbox(main_window,
+				NULL, save_config_text,

WARNING:SPLIT_STRING: quoted string split across lines
#1747: FILE: scripts/kconfig/nconf.c:1221:
+			btn_dialog(main_window, _("Can't create file! "
+				"Probably a nonexistent directory."), 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1751: FILE: scripts/kconfig/nconf.c:1225:
+			show_scroll_win(main_window,
+				_("Save Alternate Configuration"),

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "main_window"
#1764: FILE: scripts/kconfig/nconf.c:1238:
+	if (main_window != NULL)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1768: FILE: scripts/kconfig/nconf.c:1242:
+	main_window = newwin(LINES-2, COLS-2, 2, 1);
 	                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1768: FILE: scripts/kconfig/nconf.c:1242:
+	main_window = newwin(LINES-2, COLS-2, 2, 1);
 	                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1770: FILE: scripts/kconfig/nconf.c:1244:
+	mwin_max_lines = LINES-7;
 	                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1771: FILE: scripts/kconfig/nconf.c:1245:
+	mwin_max_cols = COLS-6;
 	                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1774: FILE: scripts/kconfig/nconf.c:1248:
+	btn_cols = min(btn_cols, COLS-16);
 	                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1776: FILE: scripts/kconfig/nconf.c:1250:
+	btns_window = derwin(main_window,
+		1,

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1778: FILE: scripts/kconfig/nconf.c:1252:
+		LINES-4,
 		     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1779: FILE: scripts/kconfig/nconf.c:1253:
+		(COLS-2-btn_cols)/2);
 		     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1779: FILE: scripts/kconfig/nconf.c:1253:
+		(COLS-2-btn_cols)/2);
 		       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1779: FILE: scripts/kconfig/nconf.c:1253:
+		(COLS-2-btn_cols)/2);
 		                 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1794: FILE: scripts/kconfig/nconf.c:1268:
+
+

WARNING:SPLIT_STRING: quoted string split across lines
#1820: FILE: scripts/kconfig/nconf.c:1294:
+		printf("Your terminal should have at "
+			"least 20 lines and 60 columns\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1864: FILE: scripts/kconfig/nconf.c:1338:
+			res = btn_dialog(main_window,
+					_("Do you wish to save your "

WARNING:SPLIT_STRING: quoted string split across lines
#1865: FILE: scripts/kconfig/nconf.c:1339:
+					_("Do you wish to save your "
+					     "new kernel configuration?\n"

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1880: FILE: scripts/kconfig/nconf.c:1354:
+
+

WARNING:SPLIT_STRING: quoted string split across lines
#1887: FILE: scripts/kconfig/nconf.c:1361:
+			"Your kernel configuration changes were NOT saved."
+			"\n\n"));

WARNING:SPLIT_STRING: quoted string split across lines
#1894: FILE: scripts/kconfig/nconf.c:1368:
+		"*** Execute 'make' to build the kernel or try 'make help'."
+		"\n\n"));

WARNING:SPLIT_STRING: quoted string split across lines
#1899: FILE: scripts/kconfig/nconf.c:1373:
+			"Your kernel configuration changes were NOT saved."
+			"\n\n"));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1911: FILE: scripts/kconfig/nconf.gui.c:1:
+/*

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1921: FILE: scripts/kconfig/nconf.gui.c:11:
+attributes_t attributes[ATTR_MAX+1] = {0};
                                 ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1924: FILE: scripts/kconfig/nconf.gui.c:14:
+/* available colors:
+   COLOR_BLACK   0

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1969: FILE: scripts/kconfig/nconf.gui.c:59:
+	int start_color = COLOR_BLACK+1;
 	                             ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1972: FILE: scripts/kconfig/nconf.gui.c:62:
+ * values for rgb are from 0 to 1000 */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1975: FILE: scripts/kconfig/nconf.gui.c:65:
+	init_color(start_color+1, br, bg, bb);\
 	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1976: FILE: scripts/kconfig/nconf.gui.c:66:
+	init_pair(attr, start_color, start_color+1); }
 	                                        ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2009: FILE: scripts/kconfig/nconf.gui.c:99:
+
+}

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2012: FILE: scripts/kconfig/nconf.gui.c:102:
+/* available attributes:
+   A_NORMAL        Normal display (no highlight)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#2028: FILE: scripts/kconfig/nconf.gui.c:118:
+#define mkattr(name, attr) { attributes[name] = attr | COLOR_PAIR(name); }

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'attr' may be better as '(attr)' to avoid precedence issues
#2028: FILE: scripts/kconfig/nconf.gui.c:118:
+#define mkattr(name, attr) { attributes[name] = attr | COLOR_PAIR(name); }

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void set_colors() should probably be void set_colors(void)
#2094: FILE: scripts/kconfig/nconf.gui.c:184:
+void set_colors()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

WARNING:TYPO_SPELLING: 'deafults' may be misspelled - perhaps 'defaults'?
#2104: FILE: scripts/kconfig/nconf.gui.c:194:
+		/* give deafults */
 		        ^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2109: FILE: scripts/kconfig/nconf.gui.c:199:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2112: FILE: scripts/kconfig/nconf.gui.c:202:
+void print_in_middle(WINDOW *win,
+		int starty,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2120: FILE: scripts/kconfig/nconf.gui.c:210:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!win"
#2121: FILE: scripts/kconfig/nconf.gui.c:211:
+	if (win == NULL)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2164: FILE: scripts/kconfig/nconf.gui.c:254:
+	return text+i;
 	           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2170: FILE: scripts/kconfig/nconf.gui.c:260:
+	int res = 0;
+	while (*line != '\0' && *line != '\n') {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2188: FILE: scripts/kconfig/nconf.gui.c:278:
+		char tmp[x+10];
 		          ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2191: FILE: scripts/kconfig/nconf.gui.c:281:
+		int len = get_line_length(line);
+		strncpy(tmp, line, min(len, x));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2219: FILE: scripts/kconfig/nconf.gui.c:309:
+	ITEM *btns[btn_num+1];
 	                  ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2223: FILE: scripts/kconfig/nconf.gui.c:313:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2228: FILE: scripts/kconfig/nconf.gui.c:318:
+		btns_width += strlen(btn)+1;
 		                         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2238: FILE: scripts/kconfig/nconf.gui.c:328:
+		int len = get_line_length(line);
+		if (msg_width < len)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2244: FILE: scripts/kconfig/nconf.gui.c:334:
+	y = (LINES-(msg_lines+4))/2;
 	          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2244: FILE: scripts/kconfig/nconf.gui.c:334:
+	y = (LINES-(msg_lines+4))/2;
 	                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2244: FILE: scripts/kconfig/nconf.gui.c:334:
+	y = (LINES-(msg_lines+4))/2;
 	                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2245: FILE: scripts/kconfig/nconf.gui.c:335:
+	x = (COLS-(total_width+4))/2;
 	         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2245: FILE: scripts/kconfig/nconf.gui.c:335:
+	x = (COLS-(total_width+4))/2;
 	                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2245: FILE: scripts/kconfig/nconf.gui.c:335:
+	x = (COLS-(total_width+4))/2;
 	                          ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2247: FILE: scripts/kconfig/nconf.gui.c:337:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2250: FILE: scripts/kconfig/nconf.gui.c:340:
+		win_rows = msg_lines+4;
 		                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2252: FILE: scripts/kconfig/nconf.gui.c:342:
+		win_rows = msg_lines+2;
 		                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2254: FILE: scripts/kconfig/nconf.gui.c:344:
+	win = newwin(win_rows, total_width+4, y, x);
 	                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2256: FILE: scripts/kconfig/nconf.gui.c:346:
+	menu_win = derwin(win, 1, btns_width, win_rows-2,
 	                                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2257: FILE: scripts/kconfig/nconf.gui.c:347:
+	menu_win = derwin(win, 1, btns_width, win_rows-2,
+			1+(total_width+2-btns_width)/2);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2257: FILE: scripts/kconfig/nconf.gui.c:347:
+			1+(total_width+2-btns_width)/2);
 			 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2257: FILE: scripts/kconfig/nconf.gui.c:347:
+			1+(total_width+2-btns_width)/2);
 			              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2257: FILE: scripts/kconfig/nconf.gui.c:347:
+			1+(total_width+2-btns_width)/2);
 			                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2257: FILE: scripts/kconfig/nconf.gui.c:347:
+			1+(total_width+2-btns_width)/2);
 			                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2259: FILE: scripts/kconfig/nconf.gui.c:349:
+	msg_win = derwin(win, win_rows-2, msg_width, 1,
 	                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2260: FILE: scripts/kconfig/nconf.gui.c:350:
+	msg_win = derwin(win, win_rows-2, msg_width, 1,
+			1+(total_width+2-msg_width)/2);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2260: FILE: scripts/kconfig/nconf.gui.c:350:
+			1+(total_width+2-msg_width)/2);
 			 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2260: FILE: scripts/kconfig/nconf.gui.c:350:
+			1+(total_width+2-msg_width)/2);
 			              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2260: FILE: scripts/kconfig/nconf.gui.c:350:
+			1+(total_width+2-msg_width)/2);
 			                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2260: FILE: scripts/kconfig/nconf.gui.c:350:
+			1+(total_width+2-msg_width)/2);
 			                           ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2282: FILE: scripts/kconfig/nconf.gui.c:372:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2324: FILE: scripts/kconfig/nconf.gui.c:414:
+int dialog_inputbox(WINDOW *main_window,
+		const char *title, const char *prompt,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2337: FILE: scripts/kconfig/nconf.gui.c:427:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#2343: FILE: scripts/kconfig/nconf.gui.c:433:
+		int len = get_line_length(line);
+		prompt_width = max(prompt_width, len);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2350: FILE: scripts/kconfig/nconf.gui.c:440:
+	y = (LINES-(prompt_lines+4))/2;
 	          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2350: FILE: scripts/kconfig/nconf.gui.c:440:
+	y = (LINES-(prompt_lines+4))/2;
 	                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2350: FILE: scripts/kconfig/nconf.gui.c:440:
+	y = (LINES-(prompt_lines+4))/2;
 	                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2351: FILE: scripts/kconfig/nconf.gui.c:441:
+	x = (COLS-(prompt_width+4))/2;
 	         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2351: FILE: scripts/kconfig/nconf.gui.c:441:
+	x = (COLS-(prompt_width+4))/2;
 	                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2351: FILE: scripts/kconfig/nconf.gui.c:441:
+	x = (COLS-(prompt_width+4))/2;
 	                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2356: FILE: scripts/kconfig/nconf.gui.c:446:
+	win = newwin(prompt_lines+6, prompt_width+7, y, x);
 	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2356: FILE: scripts/kconfig/nconf.gui.c:446:
+	win = newwin(prompt_lines+6, prompt_width+7, y, x);
 	                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2357: FILE: scripts/kconfig/nconf.gui.c:447:
+	prompt_win = derwin(win, prompt_lines+1, prompt_width, 2, 2);
 	                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2358: FILE: scripts/kconfig/nconf.gui.c:448:
+	form_win = derwin(win, 1, prompt_width, prompt_lines+3, 2);
 	                                                    ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2385: FILE: scripts/kconfig/nconf.gui.c:475:
+		int len = strlen(result);
+		switch (res) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2393: FILE: scripts/kconfig/nconf.gui.c:483:
+				memmove(&result[cursor_position-1],
 				                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2395: FILE: scripts/kconfig/nconf.gui.c:485:
+					len-cursor_position+1);
 					   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2395: FILE: scripts/kconfig/nconf.gui.c:485:
+					len-cursor_position+1);
 					                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2402: FILE: scripts/kconfig/nconf.gui.c:492:
+					&result[cursor_position+1],
 					                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2403: FILE: scripts/kconfig/nconf.gui.c:493:
+					len-cursor_position+1);
 					   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2403: FILE: scripts/kconfig/nconf.gui.c:493:
+					len-cursor_position+1);
 					                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2409: FILE: scripts/kconfig/nconf.gui.c:499:
+			if (cursor_position < len &&
+			     cursor_position < min(result_len, prompt_width))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2419: FILE: scripts/kconfig/nconf.gui.c:509:
+			    len-2 < result_len) {
 			       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2421: FILE: scripts/kconfig/nconf.gui.c:511:
+				memmove(&result[cursor_position+1],
 				                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2423: FILE: scripts/kconfig/nconf.gui.c:513:
+					len+1);
 					   ^

WARNING:TYPO_SPELLING: 'unknow' may be misspelled - perhaps 'unknown'?
#2427: FILE: scripts/kconfig/nconf.gui.c:517:
+				mvprintw(0, 0, "unknow key: %d\n", res);
 				                ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2468: FILE: scripts/kconfig/nconf.gui.c:558:
+^I^Iconst char *title, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2468: FILE: scripts/kconfig/nconf.gui.c:558:
+void show_scroll_win(WINDOW *main_window,
+		const char *title, 

WARNING:LINE_SPACING: Missing a blank line after declarations
#2489: FILE: scripts/kconfig/nconf.gui.c:579:
+		int len = get_line_length(line);
+		total_cols = max(total_cols, len+2);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2489: FILE: scripts/kconfig/nconf.gui.c:579:
+		total_cols = max(total_cols, len+2);
 		                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2493: FILE: scripts/kconfig/nconf.gui.c:583:
+	pad = newpad(total_lines+10, total_cols+10);
 	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2493: FILE: scripts/kconfig/nconf.gui.c:583:
+	pad = newpad(total_lines+10, total_cols+10);
 	                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2497: FILE: scripts/kconfig/nconf.gui.c:587:
+	win_lines = min(total_lines+2, LINES-2);
 	                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2497: FILE: scripts/kconfig/nconf.gui.c:587:
+	win_lines = min(total_lines+2, LINES-2);
 	                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2498: FILE: scripts/kconfig/nconf.gui.c:588:
+	win_cols = min(total_cols+2, COLS-2);
 	                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2498: FILE: scripts/kconfig/nconf.gui.c:588:
+	win_cols = min(total_cols+2, COLS-2);
 	                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2499: FILE: scripts/kconfig/nconf.gui.c:589:
+	text_lines = max(win_lines-2, 0);
 	                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2500: FILE: scripts/kconfig/nconf.gui.c:590:
+	text_cols = max(win_cols-2, 0);
 	                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2503: FILE: scripts/kconfig/nconf.gui.c:593:
+	y = (LINES-win_lines)/2;
 	          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2503: FILE: scripts/kconfig/nconf.gui.c:593:
+	y = (LINES-win_lines)/2;
 	                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2504: FILE: scripts/kconfig/nconf.gui.c:594:
+	x = (COLS-win_cols)/2;
 	         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2504: FILE: scripts/kconfig/nconf.gui.c:594:
+	x = (COLS-win_cols)/2;
 	                   ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2517: FILE: scripts/kconfig/nconf.gui.c:607:
+	do {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2519: FILE: scripts/kconfig/nconf.gui.c:609:
+		copywin(pad, win, start_y, start_x, 2, 2, text_lines,
+				text_cols, 0);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2526: FILE: scripts/kconfig/nconf.gui.c:616:
+			start_y += text_lines-2;
 			                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2529: FILE: scripts/kconfig/nconf.gui.c:619:
+			start_y -= text_lines+2;
 			                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2552: FILE: scripts/kconfig/nconf.gui.c:642:
+		if (start_y >= total_lines-text_lines)
 		                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2553: FILE: scripts/kconfig/nconf.gui.c:643:
+			start_y = total_lines-text_lines;
 			                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2556: FILE: scripts/kconfig/nconf.gui.c:646:
+		if (start_x >= total_cols-text_cols)
 		                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2557: FILE: scripts/kconfig/nconf.gui.c:647:
+			start_x = total_cols-text_cols;
 			                    ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2570: FILE: scripts/kconfig/nconf.h:1:
+/*

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2598: FILE: scripts/kconfig/nconf.h:29:
+#define max(a,b) ({\
              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2603: FILE: scripts/kconfig/nconf.h:34:
+#define min(a,b) ({\
              ^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2608: FILE: scripts/kconfig/nconf.h:39:
+typedef enum {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2639: FILE: scripts/kconfig/nconf.h:70:
+void print_in_middle(WINDOW *win,
+	int starty,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2650: FILE: scripts/kconfig/nconf.h:81:
+int dialog_inputbox(WINDOW *main_window,
+	const char *title, const char *prompt,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2654: FILE: scripts/kconfig/nconf.h:85:
+^Iconst char *title, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2654: FILE: scripts/kconfig/nconf.h:85:
+void show_scroll_win(WINDOW *main_window,
+	const char *title, 

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2662: FILE: scripts/kconfig/shared.c:1:
+/*

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2679: FILE: scripts/kconfig/shared.c:18:
+	str_printf(r, _("  Defined at %s:%d\n"), prop->menu->file->name,
+		prop->menu->lineno);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2710: FILE: scripts/kconfig/shared.c:49:
+^I^I                                    sym_get_string_value(sym));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2710: FILE: scripts/kconfig/shared.c:49:
+		str_printf(r, "Symbol: %s [=%s]\n", sym->name,
+		                                    sym_get_string_value(sym));

CHECK:BRACES: braces {} should be used on all arms of this statement
#2715: FILE: scripts/kconfig/shared.c:54:
+		if (!hit) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2718: FILE: scripts/kconfig/shared.c:57:
+		} else

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2750: FILE: scripts/kconfig/shared.h:1:
+/*

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000198110.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 49 warnings, 202 checks, 2626 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000198110.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
