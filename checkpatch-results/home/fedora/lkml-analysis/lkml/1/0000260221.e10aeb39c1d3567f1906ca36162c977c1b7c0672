WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
The attached patch allows the system to control the volume of the system bell.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#42: 
#include <stdio.h>

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
#include <linux/kd.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
#include <sys/ioctl.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
#include <fcntl.h>

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#84: FILE: drivers/char/keyboard.c:227:
+	list_for_each_entry(handle, &kbd_handler.h_list, h_node) {
+	if (test_bit(EV_SND, handle->dev->evbit)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#108: FILE: drivers/char/vt_ioctl.c:429:
+		 * Set the system beep/tone volume
+		*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#144: FILE: drivers/input/misc/pcspkr.c:48:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#145: FILE: drivers/input/misc/pcspkr.c:49:
+enum hrtimer_restart pcspkr_do_timer(struct hrtimer *handle)
  {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: drivers/input/misc/pcspkr.c:52:
+        container_of(handle, struct pcspkr_state, timer);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: drivers/input/misc/pcspkr.c:52:
+        container_of(handle, struct pcspkr_state, timer);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#153: FILE: drivers/input/misc/pcspkr.c:56:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#155: FILE: drivers/input/misc/pcspkr.c:58:
+
+

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#157: FILE: drivers/input/misc/pcspkr.c:60:
+		value = spkr_state->value_high-1;;
 		                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#157: FILE: drivers/input/misc/pcspkr.c:60:
+		value = spkr_state->value_high-1;;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#158: FILE: drivers/input/misc/pcspkr.c:61:
+		spkr_state->high=0;
 		                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#160: FILE: drivers/input/misc/pcspkr.c:63:
+		value = spkr_state->value_low-1;
 		                             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#161: FILE: drivers/input/misc/pcspkr.c:64:
+		spkr_state->high=1;
 		                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: drivers/input/misc/pcspkr.c:66:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#164: FILE: drivers/input/misc/pcspkr.c:67:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#164: FILE: drivers/input/misc/pcspkr.c:67:
+	
+	

ERROR:SPACING: space required before the open brace '{'
#166: FILE: drivers/input/misc/pcspkr.c:69:
+	if (value){

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#167: FILE: drivers/input/misc/pcspkr.c:70:
+		if (value>=50){
 		         ^

ERROR:SPACING: space required before the open brace '{'
#167: FILE: drivers/input/misc/pcspkr.c:70:
+		if (value>=50){

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#173: FILE: drivers/input/misc/pcspkr.c:76:
+		else{
+		outb_p(inb_p(0x61) | 3, 0x61);

ERROR:SPACING: space required before the open brace '{'
#173: FILE: drivers/input/misc/pcspkr.c:76:
+		else{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#173: FILE: drivers/input/misc/pcspkr.c:76:
+		}
+		else{

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#173: FILE: drivers/input/misc/pcspkr.c:76:
+		else{

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#177: FILE: drivers/input/misc/pcspkr.c:80:
+		outb((value>>8)& 0xFF, 0x42);
 		           ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxW)
#177: FILE: drivers/input/misc/pcspkr.c:80:
+		outb((value>>8)& 0xFF, 0x42);
 		               ^

ERROR:SPACING: space required before the open brace '{'
#180: FILE: drivers/input/misc/pcspkr.c:83:
+	else{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#180: FILE: drivers/input/misc/pcspkr.c:83:
+	}
+	else{

CHECK:BRACES: Unbalanced braces around else statement
#180: FILE: drivers/input/misc/pcspkr.c:83:
+	else{

CHECK:LINE_SPACING: Please don't use multiple blank lines
#190: FILE: drivers/input/misc/pcspkr.c:93:
+
+

ERROR:SPACING: space required before the open brace '{'
#200: FILE: drivers/input/misc/pcspkr.c:102:
+	if (code == SND_VOLUME){

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#201: FILE: drivers/input/misc/pcspkr.c:103:
+		if (value <=0) {
 		          ^

ERROR:SPACING: space required before the open brace '{'
#205: FILE: drivers/input/misc/pcspkr.c:107:
+		else{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#205: FILE: drivers/input/misc/pcspkr.c:107:
+		}
+		else{

CHECK:BRACES: Unbalanced braces around else statement
#205: FILE: drivers/input/misc/pcspkr.c:107:
+		else{

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#206: FILE: drivers/input/misc/pcspkr.c:108:
+			if (value>MAX_VOL) value = MAX_VOL;
 			         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#206: FILE: drivers/input/misc/pcspkr.c:108:
+			if (value>MAX_VOL) value = MAX_VOL;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#207: FILE: drivers/input/misc/pcspkr.c:109:
+			spkr_state->value_low = MAX_VOL/value;
 			                               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#208: FILE: drivers/input/misc/pcspkr.c:110:
+			value = (MAX_VOL/spkr_state->value_low)-value;
 			                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#208: FILE: drivers/input/misc/pcspkr.c:110:
+			value = (MAX_VOL/spkr_state->value_low)-value;
 			                                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#210: FILE: drivers/input/misc/pcspkr.c:112:
+				spkr_state->value_high = MAX_VOL/value;
 				                                ^

ERROR:SPACING: space required before the open brace '{'
#240: FILE: drivers/input/misc/pcspkr.c:125:
+	if (value){

WARNING:LINE_SPACING: Missing a blank line after declarations
#242: FILE: drivers/input/misc/pcspkr.c:127:
+		unsigned int delay;
+		if(value<20) value=20;

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#242: FILE: drivers/input/misc/pcspkr.c:127:
+		if(value<20) value=20;
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#242: FILE: drivers/input/misc/pcspkr.c:127:
+		if(value<20) value=20;
 		                  ^

ERROR:SPACING: space required before the open parenthesis '('
#242: FILE: drivers/input/misc/pcspkr.c:127:
+		if(value<20) value=20;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#242: FILE: drivers/input/misc/pcspkr.c:127:
+		if(value<20) value=20;

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#243: FILE: drivers/input/misc/pcspkr.c:128:
+		else if(value>32767) value=32767;
 		             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#243: FILE: drivers/input/misc/pcspkr.c:128:
+		else if(value>32767) value=32767;
 		                          ^

ERROR:SPACING: space required before the open parenthesis '('
#243: FILE: drivers/input/misc/pcspkr.c:128:
+		else if(value>32767) value=32767;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#243: FILE: drivers/input/misc/pcspkr.c:128:
+		else if(value>32767) value=32767;

ERROR:SPACING: space required before the open brace '{'
#244: FILE: drivers/input/misc/pcspkr.c:129:
+		if (spkr_state->value_low == 1){

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#245: FILE: drivers/input/misc/pcspkr.c:130:
+			if (spkr_state->value_high == 1) return 0;

ERROR:SPACING: space required before the open brace '{'
#246: FILE: drivers/input/misc/pcspkr.c:131:
+			if (spkr_state->value_high == MAX_VOL){

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: drivers/input/misc/pcspkr.c:132:
+                        ^Iunsigned int count = PIT_TICK_RATE / value;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#247: FILE: drivers/input/misc/pcspkr.c:132:
+                        ^Iunsigned int count = PIT_TICK_RATE / value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: drivers/input/misc/pcspkr.c:132:
+                        ^Iunsigned int count = PIT_TICK_RATE / value;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: drivers/input/misc/pcspkr.c:139:
+        ^I^I^Ioutb((count >> 8) & 0xff, 0x42);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#254: FILE: drivers/input/misc/pcspkr.c:139:
+        ^I^I^Ioutb((count >> 8) & 0xff, 0x42);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: drivers/input/misc/pcspkr.c:139:
+        ^I^I^Ioutb((count >> 8) & 0xff, 0x42);$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#258: FILE: drivers/input/misc/pcspkr.c:143:
+		delay = 1000000000/value;
 		                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#259: FILE: drivers/input/misc/pcspkr.c:144:
+		spkr_state->delay = delay/2;
 		                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#262: FILE: drivers/input/misc/pcspkr.c:147:
+		hrtimer_start(&spkr_state->timer, ktime_set(0, 0),
+				HRTIMER_MODE_REL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#267: FILE: drivers/input/misc/pcspkr.c:149:
+    ^Ielse{$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#267: FILE: drivers/input/misc/pcspkr.c:149:
+    ^Ielse{$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: drivers/input/misc/pcspkr.c:149:
+    ^Ielse{$

ERROR:SPACING: space required before the open brace '{'
#267: FILE: drivers/input/misc/pcspkr.c:149:
+    	else{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#267: FILE: drivers/input/misc/pcspkr.c:149:
  	}
+    	else{

CHECK:BRACES: Unbalanced braces around else statement
#267: FILE: drivers/input/misc/pcspkr.c:149:
+    	else{

ERROR:CODE_INDENT: code indent should use tabs where possible
#272: FILE: drivers/input/misc/pcspkr.c:154:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: drivers/input/misc/pcspkr.c:154:
+        }$

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#289: FILE: drivers/input/misc/pcspkr.c:177:
+	pcspkr_dev->sndbit[0] = BIT_MASK(SND_BELL) | BIT_MASK(SND_TONE)|
 	                                                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#290: FILE: drivers/input/misc/pcspkr.c:178:
+        ^I^I^IBIT_MASK(SND_VOLUME);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#290: FILE: drivers/input/misc/pcspkr.c:178:
+        ^I^I^IBIT_MASK(SND_VOLUME);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: drivers/input/misc/pcspkr.c:178:
+        ^I^I^IBIT_MASK(SND_VOLUME);$

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#317: FILE: drivers/input/misc/pcspkr.c:203:
  static int __devexit pcspkr_remove(struct platform_device *dev)

WARNING:LINE_SPACING: Missing a blank line after declarations
#338: FILE: drivers/input/misc/pcspkr.c:219:
+	struct pcspkr_state *spkr_state = platform_get_drvdata(dev);
+	pcspkr_event(spkr_state->pcspkr_dev, EV_SND, SND_BELL, 0);

WARNING:LINE_SPACING: Missing a blank line after declarations
#348: FILE: drivers/input/misc/pcspkr.c:228:
+	struct pcspkr_state *spkr_state = platform_get_drvdata(dev);
+	pcspkr_event(spkr_state->pcspkr_dev, EV_SND, SND_BELL, 0);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#384: FILE: include/linux/vt_kern.h:28:
+extern void kd_set_volume(unsigned int volume);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000260221.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 38 errors, 23 warnings, 22 checks, 281 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000260221.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
