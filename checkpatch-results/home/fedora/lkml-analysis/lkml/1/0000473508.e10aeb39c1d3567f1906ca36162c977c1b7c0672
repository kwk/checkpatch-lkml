ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: fs/ufs/inode.c:737:
+ ^Istruct ufs_inode_info *ufsi = UFS_I(inode);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#99: FILE: fs/ufs/inode.c:737:
+ ^Istruct ufs_inode_info *ufsi = UFS_I(inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: fs/ufs/inode.c:737:
+ ^Istruct ufs_inode_info *ufsi = UFS_I(inode);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: fs/ufs/inode.c:738:
+ ^Iunsigned i;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#100: FILE: fs/ufs/inode.c:738:
+ ^Iunsigned i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: fs/ufs/inode.c:738:
+ ^Iunsigned i;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#100: FILE: fs/ufs/inode.c:738:
+ 	unsigned i;

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: fs/ufs/inode.c:781:
+ ^Istruct ufs_inode_info *ufsi = UFS_I(inode);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#125: FILE: fs/ufs/inode.c:781:
+ ^Istruct ufs_inode_info *ufsi = UFS_I(inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: fs/ufs/inode.c:781:
+ ^Istruct ufs_inode_info *ufsi = UFS_I(inode);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: fs/ufs/inode.c:782:
+ ^Iunsigned i;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#126: FILE: fs/ufs/inode.c:782:
+ ^Iunsigned i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: fs/ufs/inode.c:782:
+ ^Iunsigned i;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#126: FILE: fs/ufs/inode.c:782:
+ 	unsigned i;

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: fs/ufs/inode.c:812:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#156: FILE: fs/ufs/inode.c:812:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: fs/ufs/inode.c:812:
+ ^I}$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#159: FILE: fs/ufs/inode.c:815:
+		memset (ufs_inode, 0, sizeof(struct ufs2_inode));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#163: FILE: fs/ufs/inode.c:819:
+static int ufs_update_inode(struct inode * inode, int do_sync)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#167: FILE: fs/ufs/inode.c:823:
+	struct buffer_head * bh;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#173: FILE: fs/ufs/inode.c:829:
+		ufs_warning (sb, "ufs_read_inode", "bad inode number (%lu)\n", inode->i_ino);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#179: FILE: fs/ufs/inode.c:835:
+		ufs_warning (sb, "ufs_read_inode", "unable to read inode %lu\n", inode->i_ino);

CHECK:SPACING: No space is necessary after a cast
#188: FILE: fs/ufs/inode.c:844:
+		struct ufs_inode *ufs_inode = (struct ufs_inode *) bh->b_data;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#214: FILE: fs/ufs/super.c:106:
+	printk("  magic:     0x%x\n", magic);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#223: FILE: fs/ufs/super.c:124:
+		printk(KERN_INFO"  cs_nifree(Num of free inodes): %llu\n",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#223: FILE: fs/ufs/super.c:124:
+		printk(KERN_INFO"  cs_nifree(Num of free inodes): %llu\n",

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#226: FILE: fs/ufs/super.c:127:
+		printk(KERN_INFO"  cs_nffree(Num of free frags): %llu\n",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#226: FILE: fs/ufs/super.c:127:
+		printk(KERN_INFO"  cs_nffree(Num of free frags): %llu\n",

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#320: FILE: include/linux/ufs_fs.h:264:
+#define	ufs_inotofsba(x)	(((u64)ufs_cgimin(ufs_inotocg(x))) + ufs_inotocgoff(x) / uspi->s_inopf)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#320: FILE: include/linux/ufs_fs.h:264:
+#define	ufs_inotofsba(x)	(((u64)ufs_cgimin(ufs_inotocg(x))) + ufs_inotocgoff(x) / uspi->s_inopf)

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#535: FILE: fs/ufs/ialloc.c:373:
+	iput(inode);
 	^^^^

Some words may have been misspelled.  Consider reviewing them.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000473508.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 20 warnings, 4 checks, 471 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000473508.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
