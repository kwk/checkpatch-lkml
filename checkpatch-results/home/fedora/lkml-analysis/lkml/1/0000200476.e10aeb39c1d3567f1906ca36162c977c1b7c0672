CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#179: FILE: include/linux/writeback.h:121:
+extern int dirty_background_ratio_handler(struct ctl_table *table, int write,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#180: FILE: include/linux/writeback.h:122:
+		struct file *filp, void __user *buffer, size_t *lenp,
 		             ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#180: FILE: include/linux/writeback.h:122:
+extern int dirty_background_ratio_handler(struct ctl_table *table, int write,
+		struct file *filp, void __user *buffer, size_t *lenp,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#182: FILE: include/linux/writeback.h:124:
+extern int dirty_background_bytes_handler(struct ctl_table *table, int write,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#183: FILE: include/linux/writeback.h:125:
+		struct file *filp, void __user *buffer, size_t *lenp,
 		             ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#183: FILE: include/linux/writeback.h:125:
+extern int dirty_background_bytes_handler(struct ctl_table *table, int write,
+		struct file *filp, void __user *buffer, size_t *lenp,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#188: FILE: include/linux/writeback.h:130:
+extern int dirty_bytes_handler(struct ctl_table *table, int write,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#189: FILE: include/linux/writeback.h:131:
+		struct file *filp, void __user *buffer, size_t *lenp,
 		             ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#189: FILE: include/linux/writeback.h:131:
+extern int dirty_bytes_handler(struct ctl_table *table, int write,
+		struct file *filp, void __user *buffer, size_t *lenp,

WARNING:DUPLICATED_SYSCTL_CONST: duplicated sysctl range checking value 'zero', consider using the shared one in include/linux/sysctl.h
#215: FILE: kernel/sysctl.c:931:
+		.extra1		= &zero,

Commit d91bff3011cf ("proc/sysctl: add shared variables for range
check") added some shared const variables to be used instead of a local
copy in each source file.

Consider replacing the sysctl range checking value with the shared
one in include/linux/sysctl.h.  The following conversion scheme may
be used::

  &zero     ->  SYSCTL_ZERO
  &one      ->  SYSCTL_ONE
  &int_max  ->  SYSCTL_INT_MAX

See:

  1. https://lore.kernel.org/lkml/20190430180111.10688-1-mcroce@redhat.com/
  2. https://lore.kernel.org/lkml/20190531131422.14970-1-mcroce@redhat.com/

WARNING:DUPLICATED_SYSCTL_CONST: duplicated sysctl range checking value 'zero', consider using the shared one in include/linux/sysctl.h
#232: FILE: kernel/sysctl.c:952:
+		.extra1		= &zero,

WARNING:LINE_SPACING: Missing a blank line after declarations
#287: FILE: mm/page-writeback.c:164:
+	int shift = calc_period_shift();
+	prop_change_shift(&vm_completions, shift);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#292: FILE: mm/page-writeback.c:169:
+		struct file *filp, void __user *buffer, size_t *lenp,
 		             ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#292: FILE: mm/page-writeback.c:169:
+int dirty_background_ratio_handler(struct ctl_table *table, int write,
+		struct file *filp, void __user *buffer, size_t *lenp,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#297: FILE: mm/page-writeback.c:174:
+	ret = proc_dointvec_minmax(table, write, filp, buffer, lenp, ppos);
 	                                         ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#304: FILE: mm/page-writeback.c:181:
+		struct file *filp, void __user *buffer, size_t *lenp,
 		             ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#304: FILE: mm/page-writeback.c:181:
+int dirty_background_bytes_handler(struct ctl_table *table, int write,
+		struct file *filp, void __user *buffer, size_t *lenp,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#309: FILE: mm/page-writeback.c:186:
+	ret = proc_doulongvec_minmax(table, write, filp, buffer, lenp, ppos);
 	                                           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#323: FILE: mm/page-writeback.c:199:
+	ret = proc_dointvec_minmax(table, write, filp, buffer, lenp, ppos);
 	                                         ^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#334: FILE: mm/page-writeback.c:207:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#336: FILE: mm/page-writeback.c:209:
+		struct file *filp, void __user *buffer, size_t *lenp,
 		             ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#336: FILE: mm/page-writeback.c:209:
+int dirty_bytes_handler(struct ctl_table *table, int write,
+		struct file *filp, void __user *buffer, size_t *lenp,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#342: FILE: mm/page-writeback.c:215:
+	ret = proc_doulongvec_minmax(table, write, filp, buffer, lenp, ppos);
 	                                           ^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#363: FILE: mm/page-writeback.c:437:
+	if (vm_dirty_bytes)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#365: FILE: mm/page-writeback.c:439:
+	else {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000200476.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 13 warnings, 12 checks, 264 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000200476.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
