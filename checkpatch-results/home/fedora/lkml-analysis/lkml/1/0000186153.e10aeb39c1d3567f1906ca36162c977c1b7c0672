WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#34: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#39: FILE: fs/squashfs/squashfs.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#56: FILE: fs/squashfs/squashfs.h:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#57: FILE: fs/squashfs/squashfs.h:19:
+ * Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#74: FILE: fs/squashfs/squashfs.h:36:
+extern int squashfs_read_data(struct super_block *, void **, u64, int, u64 *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#75: FILE: fs/squashfs/squashfs.h:37:
+extern int squashfs_read_data(struct super_block *, void **, u64, int, u64 *,
+				int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#78: FILE: fs/squashfs/squashfs.h:40:
+extern struct squashfs_cache *squashfs_cache_init(char *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#78: FILE: fs/squashfs/squashfs.h:40:
+extern struct squashfs_cache *squashfs_cache_init(char *, int, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#78: FILE: fs/squashfs/squashfs.h:40:
+extern struct squashfs_cache *squashfs_cache_init(char *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#78: FILE: fs/squashfs/squashfs.h:40:
+extern struct squashfs_cache *squashfs_cache_init(char *, int, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#79: FILE: fs/squashfs/squashfs.h:41:
+extern void squashfs_cache_delete(struct squashfs_cache *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct squashfs_cache *' should also have an identifier name
#79: FILE: fs/squashfs/squashfs.h:41:
+extern void squashfs_cache_delete(struct squashfs_cache *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#80: FILE: fs/squashfs/squashfs.h:42:
+extern struct squashfs_cache_entry *squashfs_cache_get(struct super_block *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#80: FILE: fs/squashfs/squashfs.h:42:
+extern struct squashfs_cache_entry *squashfs_cache_get(struct super_block *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct squashfs_cache *' should also have an identifier name
#80: FILE: fs/squashfs/squashfs.h:42:
+extern struct squashfs_cache_entry *squashfs_cache_get(struct super_block *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#80: FILE: fs/squashfs/squashfs.h:42:
+extern struct squashfs_cache_entry *squashfs_cache_get(struct super_block *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#80: FILE: fs/squashfs/squashfs.h:42:
+extern struct squashfs_cache_entry *squashfs_cache_get(struct super_block *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#81: FILE: fs/squashfs/squashfs.h:43:
+extern struct squashfs_cache_entry *squashfs_cache_get(struct super_block *,
+				struct squashfs_cache *, u64, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#82: FILE: fs/squashfs/squashfs.h:44:
+extern void squashfs_cache_put(struct squashfs_cache_entry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct squashfs_cache_entry *' should also have an identifier name
#82: FILE: fs/squashfs/squashfs.h:44:
+extern void squashfs_cache_put(struct squashfs_cache_entry *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#83: FILE: fs/squashfs/squashfs.h:45:
+extern int squashfs_copy_data(void *, struct squashfs_cache_entry *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#83: FILE: fs/squashfs/squashfs.h:45:
+extern int squashfs_copy_data(void *, struct squashfs_cache_entry *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct squashfs_cache_entry *' should also have an identifier name
#83: FILE: fs/squashfs/squashfs.h:45:
+extern int squashfs_copy_data(void *, struct squashfs_cache_entry *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#83: FILE: fs/squashfs/squashfs.h:45:
+extern int squashfs_copy_data(void *, struct squashfs_cache_entry *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#83: FILE: fs/squashfs/squashfs.h:45:
+extern int squashfs_copy_data(void *, struct squashfs_cache_entry *, int, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#84: FILE: fs/squashfs/squashfs.h:46:
+extern int squashfs_read_metadata(struct super_block *, void *, u64 *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#84: FILE: fs/squashfs/squashfs.h:46:
+extern int squashfs_read_metadata(struct super_block *, void *, u64 *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#84: FILE: fs/squashfs/squashfs.h:46:
+extern int squashfs_read_metadata(struct super_block *, void *, u64 *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64 *' should also have an identifier name
#84: FILE: fs/squashfs/squashfs.h:46:
+extern int squashfs_read_metadata(struct super_block *, void *, u64 *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#84: FILE: fs/squashfs/squashfs.h:46:
+extern int squashfs_read_metadata(struct super_block *, void *, u64 *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#84: FILE: fs/squashfs/squashfs.h:46:
+extern int squashfs_read_metadata(struct super_block *, void *, u64 *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#85: FILE: fs/squashfs/squashfs.h:47:
+extern int squashfs_read_metadata(struct super_block *, void *, u64 *,
+				int *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#86: FILE: fs/squashfs/squashfs.h:48:
+extern struct squashfs_cache_entry *squashfs_get_fragment(struct super_block *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#86: FILE: fs/squashfs/squashfs.h:48:
+extern struct squashfs_cache_entry *squashfs_get_fragment(struct super_block *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#86: FILE: fs/squashfs/squashfs.h:48:
+extern struct squashfs_cache_entry *squashfs_get_fragment(struct super_block *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#86: FILE: fs/squashfs/squashfs.h:48:
+extern struct squashfs_cache_entry *squashfs_get_fragment(struct super_block *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#87: FILE: fs/squashfs/squashfs.h:49:
+extern struct squashfs_cache_entry *squashfs_get_fragment(struct super_block *,
+				u64, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#88: FILE: fs/squashfs/squashfs.h:50:
+extern struct squashfs_cache_entry *squashfs_get_datablock(struct super_block *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#88: FILE: fs/squashfs/squashfs.h:50:
+extern struct squashfs_cache_entry *squashfs_get_datablock(struct super_block *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#88: FILE: fs/squashfs/squashfs.h:50:
+extern struct squashfs_cache_entry *squashfs_get_datablock(struct super_block *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#88: FILE: fs/squashfs/squashfs.h:50:
+extern struct squashfs_cache_entry *squashfs_get_datablock(struct super_block *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#89: FILE: fs/squashfs/squashfs.h:51:
+extern struct squashfs_cache_entry *squashfs_get_datablock(struct super_block *,
+				u64, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#90: FILE: fs/squashfs/squashfs.h:52:
+extern int squashfs_read_table(struct super_block *, void *, u64, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#90: FILE: fs/squashfs/squashfs.h:52:
+extern int squashfs_read_table(struct super_block *, void *, u64, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#90: FILE: fs/squashfs/squashfs.h:52:
+extern int squashfs_read_table(struct super_block *, void *, u64, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#90: FILE: fs/squashfs/squashfs.h:52:
+extern int squashfs_read_table(struct super_block *, void *, u64, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#90: FILE: fs/squashfs/squashfs.h:52:
+extern int squashfs_read_table(struct super_block *, void *, u64, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#93: FILE: fs/squashfs/squashfs.h:55:
+extern __le64 *squashfs_read_inode_lookup_table(struct super_block *, u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#93: FILE: fs/squashfs/squashfs.h:55:
+extern __le64 *squashfs_read_inode_lookup_table(struct super_block *, u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#93: FILE: fs/squashfs/squashfs.h:55:
+extern __le64 *squashfs_read_inode_lookup_table(struct super_block *, u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#93: FILE: fs/squashfs/squashfs.h:55:
+extern __le64 *squashfs_read_inode_lookup_table(struct super_block *, u64,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#94: FILE: fs/squashfs/squashfs.h:56:
+extern __le64 *squashfs_read_inode_lookup_table(struct super_block *, u64,
+				unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#97: FILE: fs/squashfs/squashfs.h:59:
+extern int squashfs_frag_lookup(struct super_block *, unsigned int, u64 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#97: FILE: fs/squashfs/squashfs.h:59:
+extern int squashfs_frag_lookup(struct super_block *, unsigned int, u64 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#97: FILE: fs/squashfs/squashfs.h:59:
+extern int squashfs_frag_lookup(struct super_block *, unsigned int, u64 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64 *' should also have an identifier name
#97: FILE: fs/squashfs/squashfs.h:59:
+extern int squashfs_frag_lookup(struct super_block *, unsigned int, u64 *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#98: FILE: fs/squashfs/squashfs.h:60:
+extern __le64 *squashfs_read_fragment_index_table(struct super_block *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#98: FILE: fs/squashfs/squashfs.h:60:
+extern __le64 *squashfs_read_fragment_index_table(struct super_block *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#98: FILE: fs/squashfs/squashfs.h:60:
+extern __le64 *squashfs_read_fragment_index_table(struct super_block *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#98: FILE: fs/squashfs/squashfs.h:60:
+extern __le64 *squashfs_read_fragment_index_table(struct super_block *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#99: FILE: fs/squashfs/squashfs.h:61:
+extern __le64 *squashfs_read_fragment_index_table(struct super_block *,
+				u64, unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#102: FILE: fs/squashfs/squashfs.h:64:
+extern int squashfs_get_id(struct super_block *, unsigned int, unsigned int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#102: FILE: fs/squashfs/squashfs.h:64:
+extern int squashfs_get_id(struct super_block *, unsigned int, unsigned int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#102: FILE: fs/squashfs/squashfs.h:64:
+extern int squashfs_get_id(struct super_block *, unsigned int, unsigned int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int *' should also have an identifier name
#102: FILE: fs/squashfs/squashfs.h:64:
+extern int squashfs_get_id(struct super_block *, unsigned int, unsigned int *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#103: FILE: fs/squashfs/squashfs.h:65:
+extern __le64 *squashfs_read_id_index_table(struct super_block *, u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#103: FILE: fs/squashfs/squashfs.h:65:
+extern __le64 *squashfs_read_id_index_table(struct super_block *, u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#103: FILE: fs/squashfs/squashfs.h:65:
+extern __le64 *squashfs_read_id_index_table(struct super_block *, u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned short' should also have an identifier name
#103: FILE: fs/squashfs/squashfs.h:65:
+extern __le64 *squashfs_read_id_index_table(struct super_block *, u64,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#104: FILE: fs/squashfs/squashfs.h:66:
+extern __le64 *squashfs_read_id_index_table(struct super_block *, u64,
+				unsigned short);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#107: FILE: fs/squashfs/squashfs.h:69:
+extern struct inode *squashfs_iget(struct super_block *, long long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#107: FILE: fs/squashfs/squashfs.h:69:
+extern struct inode *squashfs_iget(struct super_block *, long long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long long' should also have an identifier name
#107: FILE: fs/squashfs/squashfs.h:69:
+extern struct inode *squashfs_iget(struct super_block *, long long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#107: FILE: fs/squashfs/squashfs.h:69:
+extern struct inode *squashfs_iget(struct super_block *, long long,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#108: FILE: fs/squashfs/squashfs.h:70:
+extern struct inode *squashfs_iget(struct super_block *, long long,
+				unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#109: FILE: fs/squashfs/squashfs.h:71:
+extern int squashfs_read_inode(struct inode *, long long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#109: FILE: fs/squashfs/squashfs.h:71:
+extern int squashfs_read_inode(struct inode *, long long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long long' should also have an identifier name
#109: FILE: fs/squashfs/squashfs.h:71:
+extern int squashfs_read_inode(struct inode *, long long);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#135: FILE: fs/squashfs/squashfs_fs.h:1:
+#ifndef SQUASHFS_FS

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#154: FILE: fs/squashfs/squashfs_fs.h:20:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#155: FILE: fs/squashfs/squashfs_fs.h:21:
+ * Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'flag' may be better as '(flag)' to avoid precedence issues
#195: FILE: fs/squashfs/squashfs_fs.h:61:
+#define SQUASHFS_BIT(flag, bit)		((flag >> bit) & 1)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'bit' may be better as '(bit)' to avoid precedence issues
#195: FILE: fs/squashfs/squashfs_fs.h:61:
+#define SQUASHFS_BIT(flag, bit)		((flag >> bit) & 1)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#235: FILE: fs/squashfs/squashfs_fs.h:101:
+ * uncompressed */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:BIT_MACRO: Prefer using the BIT macro
#236: FILE: fs/squashfs/squashfs_fs.h:102:
+#define SQUASHFS_COMPRESSED_BIT		(1 << 15)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'B' - possible side-effects?
#238: FILE: fs/squashfs/squashfs_fs.h:104:
+#define SQUASHFS_COMPRESSED_SIZE(B)	(((B) & ~SQUASHFS_COMPRESSED_BIT) ? \
+		(B) & ~SQUASHFS_COMPRESSED_BIT :  SQUASHFS_COMPRESSED_BIT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#243: FILE: fs/squashfs/squashfs_fs.h:109:
+#define SQUASHFS_COMPRESSED_BIT_BLOCK	(1 << 24)

CHECK:SPACING: No space is necessary after a cast
#254: FILE: fs/squashfs/squashfs_fs.h:120:
+#define SQUASHFS_INODE_BLK(A)		((unsigned int) ((A) >> 16))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#256: FILE: fs/squashfs/squashfs_fs.h:122:
+#define SQUASHFS_INODE_OFFSET(A)	((unsigned int) ((A) & 0xffff))

CHECK:SPACING: No space is necessary after a cast
#258: FILE: fs/squashfs/squashfs_fs.h:124:
+#define SQUASHFS_MKINODE(A, B)		((long long)(((long long) (A)\

CHECK:LINE_SPACING: Please don't use multiple blank lines
#345: FILE: fs/squashfs/squashfs_fs.h:211:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#386: FILE: fs/squashfs/squashfs_fs.h:252:
+^I__le32^I ^I^Iinode_number;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#395: FILE: fs/squashfs/squashfs_fs.h:261:
+^I__le32^I ^I^Iinode_number;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#405: FILE: fs/squashfs/squashfs_fs.h:271:
+^I__le32^I ^I^Iinode_number;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#416: FILE: fs/squashfs/squashfs_fs.h:282:
+^I__le32^I ^I^Iinode_number;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#428: FILE: fs/squashfs/squashfs_fs.h:294:
+^I__le32^I ^I^Iinode_number;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#442: FILE: fs/squashfs/squashfs_fs.h:308:
+^I__le32^I ^I^Iinode_number;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#459: FILE: fs/squashfs/squashfs_fs.h:325:
+^I__le32^I ^I^Iinode_number;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#473: FILE: fs/squashfs/squashfs_fs.h:339:
+^I__le32^I ^I^Iinode_number;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#522: FILE: fs/squashfs/squashfs_fs_i.h:1:
+#ifndef SQUASHFS_FS_I

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#541: FILE: fs/squashfs/squashfs_fs_i.h:20:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#542: FILE: fs/squashfs/squashfs_fs_i.h:21:
+ * Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#573: FILE: fs/squashfs/squashfs_fs_sb.h:1:
+#ifndef SQUASHFS_FS_SB

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#592: FILE: fs/squashfs/squashfs_fs_sb.h:20:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#593: FILE: fs/squashfs/squashfs_fs_sb.h:21:
+ * Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#608: FILE: fs/squashfs/squashfs_fs_sb.h:36:
+	spinlock_t		lock;

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#636: FILE: fs/squashfs/squashfs_fs_sb.h:64:
+	struct mutex		read_data_mutex;

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#637: FILE: fs/squashfs/squashfs_fs_sb.h:65:
+	struct mutex		meta_index_mutex;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000186153.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 63 warnings, 38 checks, 592 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000186153.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
