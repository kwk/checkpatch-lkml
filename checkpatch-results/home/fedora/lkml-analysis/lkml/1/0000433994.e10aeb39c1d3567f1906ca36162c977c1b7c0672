WARNING:TYPO_SPELLING: 'algorythm' may be misspelled - perhaps 'algorithm'?
#31: 
Add MEMORY_HOTREMOVE config and implements basic algorythm.
                                                 ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'algorythm' may be misspelled - perhaps 'algorithm'?
#40: 
This works on my easy test, but I think I need more work on loop algorythm 
                                                                 ^^^^^^^^^

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#43: 
Signed-Off-By: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#60: FILE: mm/Kconfig:129:
+config MEMORY_HOTREMOVE
+	bool "Allow for memory hot-remove"
+	depends on MEMORY_HOTPLUG_SPARSE
+	select	MIGRATION
+	select  PAGE_ISOLATION
+
 # Heavily threaded applications may benefit from splitting the mm-wide
 # page_table_lock, so that faults on different parts of the user address
 # space can be handled with less contention: split it at this NR_CPUS.

Kconfig symbols should have a help text which fully describes
it.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#97: FILE: mm/memory_hotplug.c:315:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#116: FILE: mm/memory_hotplug.c:334:
+static int do_migrate_and_isolate_pages(struct isolation_info *info,
+				unsigned long start_pfn,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#130: FILE: mm/memory_hotplug.c:348:
+		if (is_page_isolated(info,page))
 		                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: mm/memory_hotplug.c:371:
+	ret = migrate_pages(&source, hotremove_migrate_alloc,
+			   (unsigned long)info);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#158: FILE: mm/memory_hotplug.c:376:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#169: FILE: mm/memory_hotplug.c:387:
+	int removed = 0;
+	res.start = info->start_pfn << PAGE_SHIFT;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#174: FILE: mm/memory_hotplug.c:392:
+		start_pfn =(res.start >> PAGE_SHIFT);
 		          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#178: FILE: mm/memory_hotplug.c:396:
+			if (!is_page_isolated(info,page))
 			                          ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#187: FILE: mm/memory_hotplug.c:405:
+}
+/*

WARNING:TYPO_SPELLING: 'aslo' may be misspelled - perhaps 'also'?
#199: FILE: mm/memory_hotplug.c:417:
+ *       But bootmem is aslo makred as Reserved.
                         ^^^^

WARNING:TYPO_SPELLING: 'resouce' may be misspelled - perhaps 'resource'?
#200: FILE: mm/memory_hotplug.c:418:
+ *	 We check memory resouce information and confirm we freed
   	                 ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#231: FILE: mm/memory_hotplug.c:449:
+		if (PageSlab(page) ||
+			PageUncached(page) ||

ERROR:SPACING: space required before the open parenthesis '('
#244: FILE: mm/memory_hotplug.c:462:
+	if(ret < 0)

ERROR:SPACING: space required after that ';' (ctx:BxV)
#259: FILE: mm/memory_hotplug.c:477:
+	for(;pfn < end_pfn;pfn++) {
 	    ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#259: FILE: mm/memory_hotplug.c:477:
+	for(;pfn < end_pfn;pfn++) {
 	                  ^

ERROR:SPACING: space required before the open parenthesis '('
#259: FILE: mm/memory_hotplug.c:477:
+	for(;pfn < end_pfn;pfn++) {

WARNING:TYPO_SPELLING: 'Resrved' may be misspelled - perhaps 'Reserved'?
#263: FILE: mm/memory_hotplug.c:481:
+		if (PageReserved(page)) /* ignore Resrved page for now */
 		                                  ^^^^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#265: FILE: mm/memory_hotplug.c:483:
+		if (!is_page_isolated(info,page))
 		                          ^

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#279: FILE: mm/memory_hotplug.c:497:
+			msleep(10);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#285: FILE: mm/memory_hotplug.c:503:
+	if (ret < 0) {
+		goto failed_removal;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#303: FILE: mm/memory_hotplug.c:521:
+		printk("some unremovable pages are included in %lx to %lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#304: FILE: mm/memory_hotplug.c:522:
+		printk("some unremovable pages are included in %lx to %lx\n",
+			info->start_pfn, info->end_pfn);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#322: FILE: include/linux/memory_hotplug.h:62:
+extern int offline_pages(unsigned long, unsigned long, unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#322: FILE: include/linux/memory_hotplug.h:62:
+extern int offline_pages(unsigned long, unsigned long, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#322: FILE: include/linux/memory_hotplug.h:62:
+extern int offline_pages(unsigned long, unsigned long, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#322: FILE: include/linux/memory_hotplug.h:62:
+extern int offline_pages(unsigned long, unsigned long, unsigned long);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000433994.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 14 warnings, 8 checks, 257 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000433994.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
