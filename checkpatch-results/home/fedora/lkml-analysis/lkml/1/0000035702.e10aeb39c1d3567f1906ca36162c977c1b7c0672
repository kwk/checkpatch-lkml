WARNING:TYPO_SPELLING: 'simmilar' may be misspelled - perhaps 'similar'?
#53: 
It uses stats to track memory usage, simmilar to soft limits. It checks
                                     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#98: FILE: mm/memcontrol.c:82:
+	MEM_CGROUP_STAT_THRESHOLDS, /* decrements on each page in/out.
+					used by threshold implementation */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#98: FILE: mm/memcontrol.c:82:
+					used by threshold implementation */

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#112: FILE: mm/memcontrol.c:199:
+static bool mem_cgroup_threshold_check(struct mem_cgroup* mem);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#113: FILE: mm/memcontrol.c:200:
+static void mem_cgroup_threshold(struct mem_cgroup* mem, bool swap);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#187: FILE: mm/memcontrol.c:2917:
+		__mem_cgroup_stat_set(cpustat, MEM_CGROUP_STAT_THRESHOLDS,
+				THRESHOLDS_EVENTS_THRESH);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#222: FILE: mm/memcontrol.c:2952:
+		list_for_each_entry_continue_reverse((*below), thresholds,
+				list) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#233: FILE: mm/memcontrol.c:2963:
+static void mem_cgroup_invalidate_thresholds(struct mem_cgroup *memcg,
+		bool swap)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#252: FILE: mm/memcontrol.c:2982:
+			BUG_ON(!*below);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#272: FILE: mm/memcontrol.c:3002:
+static int mem_cgroup_register_event(struct cgroup *cgrp, struct cftype *cft,
+		struct eventfd_ctx *eventfd, const char *args)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#296: FILE: mm/memcontrol.c:3026:
+		BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#314: FILE: mm/memcontrol.c:3044:
+static int mem_cgroup_unregister_event(struct cgroup *cgrp, struct cftype *cft,
+		struct eventfd_ctx *eventfd)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#326: FILE: mm/memcontrol.c:3056:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#393: FILE: mm/memcontrol.c:3234:
+	BUG_ON((mem->below_threshold) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#394: FILE: mm/memcontrol.c:3235:
+	BUG_ON((mem->below_threshold) &&
+			(mem->above_threshold) &&

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#397: FILE: mm/memcontrol.c:3238:
+	BUG_ON((mem->memsw_below_threshold) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#398: FILE: mm/memcontrol.c:3239:
+	BUG_ON((mem->memsw_below_threshold) &&
+			(mem->memsw_above_threshold) &&

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000035702.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 8 warnings, 7 checks, 352 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000035702.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
