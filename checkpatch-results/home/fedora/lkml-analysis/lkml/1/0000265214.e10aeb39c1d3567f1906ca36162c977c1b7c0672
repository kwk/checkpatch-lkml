WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#60: FILE: drivers/usb/serial/ftdi_sio.c:30:
+/* Thanx to gkh and the rest of the usb dev group for all code I have
+   assimilated :-) */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#60: FILE: drivers/usb/serial/ftdi_sio.c:30:
+   assimilated :-) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#82: FILE: drivers/usb/serial/ftdi_sio.c:63:
+	int custom_divisor;	/* custom_divisor kludge, this is for
+				   baud_base (different from what goes to the

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#83: FILE: drivers/usb/serial/ftdi_sio.c:64:
+				   chip!) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#109: FILE: drivers/usb/serial/ftdi_sio.c:87:
+	speed_t force_baud;	/* if non-zero, force the baud rate to
+				   this value */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#109: FILE: drivers/usb/serial/ftdi_sio.c:87:
+				   this value */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#111: FILE: drivers/usb/serial/ftdi_sio.c:89:
+	int force_rtscts;	/* if non-zero, force RTS-CTS to always
+				   be enabled */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#111: FILE: drivers/usb/serial/ftdi_sio.c:89:
+				   be enabled */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ftdi_private *' should also have an identifier name
#121: FILE: drivers/usb/serial/ftdi_sio.c:101:
+	void (*port_probe)(struct ftdi_private *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#700: FILE: drivers/usb/serial/ftdi_sio.c:691:
+static int  ftdi_sio_probe(struct usb_serial *serial,
+					const struct usb_device_id *id);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#705: FILE: drivers/usb/serial/ftdi_sio.c:696:
+			struct usb_serial_port *port, struct file *filp);
 			                                           ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#705: FILE: drivers/usb/serial/ftdi_sio.c:696:
+static int  ftdi_open(struct tty_struct *tty,
+			struct usb_serial_port *port, struct file *filp);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#707: FILE: drivers/usb/serial/ftdi_sio.c:698:
+			struct usb_serial_port *port, struct file *filp);
 			                                           ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#707: FILE: drivers/usb/serial/ftdi_sio.c:698:
+static void ftdi_close(struct tty_struct *tty,
+			struct usb_serial_port *port, struct file *filp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#709: FILE: drivers/usb/serial/ftdi_sio.c:700:
+static int  ftdi_write(struct tty_struct *tty, struct usb_serial_port *port,
+			const unsigned char *buf, int count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#716: FILE: drivers/usb/serial/ftdi_sio.c:707:
+static void ftdi_set_termios(struct tty_struct *tty,
+			struct usb_serial_port *port, struct ktermios *old);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#719: FILE: drivers/usb/serial/ftdi_sio.c:710:
+static int  ftdi_tiocmset(struct tty_struct *tty, struct file *file,
+			unsigned int set, unsigned int clear);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#721: FILE: drivers/usb/serial/ftdi_sio.c:712:
+static int  ftdi_ioctl(struct tty_struct *tty, struct file *file,
+			unsigned int cmd, unsigned long arg);

WARNING:LINE_SPACING: Missing a blank line after declarations
#741: FILE: drivers/usb/serial/ftdi_sio.c:773:
+	int divisor3 = base / 2 / baud;
+	if ((divisor3 & 0x7) == 7)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TABSTOP: Statements should start on a tabstop
#763: FILE: drivers/usb/serial/ftdi_sio.c:790:
+	 return ftdi_232am_baud_base_to_divisor(baud, 48000000);

WARNING:TABSTOP: Statements should start on a tabstop
#788: FILE: drivers/usb/serial/ftdi_sio.c:811:
+	 return ftdi_232bm_baud_base_to_divisor(baud, 48000000);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#796: FILE: drivers/usb/serial/ftdi_sio.c:818:
+static int update_mctrl(struct usb_serial_port *port, unsigned int set,
+							unsigned int clear)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#806: FILE: drivers/usb/serial/ftdi_sio.c:873:
+static __u32 get_ftdi_divisor(struct tty_struct *tty,
+						struct usb_serial_port *port)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#853: FILE: drivers/usb/serial/ftdi_sio.c:908:
+	/* 1. Get the baud rate from the tty settings, this observes
+	      alt_speed hack */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#853: FILE: drivers/usb/serial/ftdi_sio.c:908:
+	      alt_speed hack */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#860: FILE: drivers/usb/serial/ftdi_sio.c:914:
+	/* 2. Observe async-compatible custom_divisor hack, update baudrate
+	   if needed */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#860: FILE: drivers/usb/serial/ftdi_sio.c:914:
+	   if needed */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#868: FILE: drivers/usb/serial/ftdi_sio.c:921:
+		dbg("%s - custom divisor %d sets baud rate to %d",
+				__func__, priv->custom_divisor, baud);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#890: FILE: drivers/usb/serial/ftdi_sio.c:944:
+			dbg("%s - Baudrate (%d) requested is not supported",
+							__func__,  baud);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#935: FILE: drivers/usb/serial/ftdi_sio.c:1018:
+static int get_serial_info(struct usb_serial_port *port,
+				struct serial_struct __user *retinfo)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#986: FILE: drivers/usb/serial/ftdi_sio.c:1157:
+static ssize_t show_latency_timer(struct device *dev,
+				struct device_attribute *attr, char *buf)

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#995: FILE: drivers/usb/serial/ftdi_sio.c:1166:
+	dbg("%s", __func__);

CHECK:SPACING: No space is necessary after a cast
#1003: FILE: drivers/usb/serial/ftdi_sio.c:1173:
+			     (char *) &latency, 1, WDR_TIMEOUT);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1014: FILE: drivers/usb/serial/ftdi_sio.c:1184:
+static ssize_t store_latency_timer(struct device *dev,
+			struct device_attribute *attr, const char *valbuf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1026: FILE: drivers/usb/serial/ftdi_sio.c:1214:
+static ssize_t store_event_char(struct device *dev,
+	struct device_attribute *attr, const char *valbuf, size_t count)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#1035: FILE: drivers/usb/serial/ftdi_sio.c:1240:
+static DEVICE_ATTR(latency_timer, S_IWUSR | S_IRUGO, show_latency_timer,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1045: FILE: drivers/usb/serial/ftdi_sio.c:1249:
+	dbg("%s", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1054: FILE: drivers/usb/serial/ftdi_sio.c:1271:
+	dbg("%s", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1064: FILE: drivers/usb/serial/ftdi_sio.c:1293:
+static int ftdi_sio_probe(struct usb_serial *serial,
+					const struct usb_device_id *id)

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1077: FILE: drivers/usb/serial/ftdi_sio.c:1315:
+	dbg("%s", __func__);

WARNING:PRINTF_Z: %Zd is non-standard C, use %zd
#1083: FILE: drivers/usb/serial/ftdi_sio.c:1319:
+		err("%s- kmalloc(%Zd) failed.", __func__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1084: FILE: drivers/usb/serial/ftdi_sio.c:1320:
+		err("%s- kmalloc(%Zd) failed.", __func__,
+					sizeof(struct ftdi_private));

WARNING:NEEDLESS_IF: usb_free_urb(NULL) is safe and this check is probably not required
#1112: FILE: drivers/usb/serial/ftdi_sio.c:1351:
 	if (port->write_urb) {
+		usb_free_urb(port->write_urb);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1133: FILE: drivers/usb/serial/ftdi_sio.c:1369:
+	dbg("%s", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1146: FILE: drivers/usb/serial/ftdi_sio.c:1381:
+	dbg("%s", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1155: FILE: drivers/usb/serial/ftdi_sio.c:1399:
+	dbg("%s", __func__);

CHECK:CAMELCASE: Avoid CamelCase: <bulk_in_endpointAddress>
#1184: FILE: drivers/usb/serial/ftdi_sio.c:1508:
+			usb_rcvbulkpipe(dev, port->bulk_in_endpointAddress),

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1192: FILE: drivers/usb/serial/ftdi_sio.c:1515:
+		err("%s - failed submitting read urb, error %d",
+							__func__, result);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1229: FILE: drivers/usb/serial/ftdi_sio.c:1629:
+		/* Original sio requires control byte at start of
+		   each packet. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1229: FILE: drivers/usb/serial/ftdi_sio.c:1629:
+		   each packet. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1245: FILE: drivers/usb/serial/ftdi_sio.c:1642:
+			memcpy(first_byte + data_offset,
 				current_position, user_pktsz);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1258: FILE: drivers/usb/serial/ftdi_sio.c:1654:
+	usb_serial_debug_data(debug, &port->dev, __func__,
+						transfer_size, buffer);

CHECK:CAMELCASE: Avoid CamelCase: <bulk_out_endpointAddress>
#1266: FILE: drivers/usb/serial/ftdi_sio.c:1659:
+					port->bulk_out_endpointAddress),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1274: FILE: drivers/usb/serial/ftdi_sio.c:1666:
+		err("%s - failed submitting write urb, error %d",
+							__func__, status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1313: FILE: drivers/usb/serial/ftdi_sio.c:1790:
+		err("%s transfer_buffer_length %d actual_length %d number of packets %d",
+				__func__,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1343: FILE: drivers/usb/serial/ftdi_sio.c:1818:
+		/* This will happen at close every time so it is a dbg not an
+		   err */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1343: FILE: drivers/usb/serial/ftdi_sio.c:1818:
+		   err */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1377: FILE: drivers/usb/serial/ftdi_sio.c:1884:
+			usb_serial_debug_data(debug, &port->dev, __func__,
+						urb->actual_length, data);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1396: FILE: drivers/usb/serial/ftdi_sio.c:1901:
+		/* Compare new line status to the old one, signal if different/
+		   N.B. packet may be processed more than once, but differences

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1397: FILE: drivers/usb/serial/ftdi_sio.c:1902:
+		   are only processed once.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1415: FILE: drivers/usb/serial/ftdi_sio.c:1926:
+			/* break out & wait for throttling/unthrottling to
+			   happen */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1415: FILE: drivers/usb/serial/ftdi_sio.c:1926:
+			   happen */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1426: FILE: drivers/usb/serial/ftdi_sio.c:1934:
+		/* Although the device uses a bitmask and hence can have
+		   multiple errors on a packet - the order here sets the

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1427: FILE: drivers/usb/serial/ftdi_sio.c:1935:
+		   priority the error is returned to the tty layer  */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1430: FILE: drivers/usb/serial/ftdi_sio.c:1937:
+		if (data[packet_offset+1] & FTDI_RS_OE) {
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1435: FILE: drivers/usb/serial/ftdi_sio.c:1941:
+		if (data[packet_offset+1] & FTDI_RS_BI) {
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1440: FILE: drivers/usb/serial/ftdi_sio.c:1945:
+		if (data[packet_offset+1] & FTDI_RS_PE) {
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1445: FILE: drivers/usb/serial/ftdi_sio.c:1949:
+		if (data[packet_offset+1] & FTDI_RS_FE) {
 		                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1455: FILE: drivers/usb/serial/ftdi_sio.c:1959:
+				tty_insert_flip_char(tty,
+					data[packet_offset + i], error_flag);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1479: FILE: drivers/usb/serial/ftdi_sio.c:1977:
+				/* In this case it is just status - if that is
+				   an error send a bad character */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1479: FILE: drivers/usb/serial/ftdi_sio.c:1977:
+				   an error send a bad character */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1533: FILE: drivers/usb/serial/ftdi_sio.c:2032:
+			err("%s - failed resubmitting read urb, error %d",
+							__func__, result);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1560: FILE: drivers/usb/serial/ftdi_sio.c:2054:
+	if (usb_control_msg(port->serial->dev,
+			usb_sndctrlpipe(port->serial->dev, 0),

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1563: FILE: drivers/usb/serial/ftdi_sio.c:2057:
+			urb_value , priv->interface,
 			          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1566: FILE: drivers/usb/serial/ftdi_sio.c:2060:
+		err("%s FAILED to enable/disable break state (state was %d)",
+							__func__, break_state);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1571: FILE: drivers/usb/serial/ftdi_sio.c:2064:
+	dbg("%s break state is %d - urb is %d", __func__,
+						break_state, urb_value);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1589: FILE: drivers/usb/serial/ftdi_sio.c:2092:
+	/* Force baud rate if this device requires it, unless it is set to
+	   B0. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1589: FILE: drivers/usb/serial/ftdi_sio.c:2092:
+	   B0. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1600: FILE: drivers/usb/serial/ftdi_sio.c:2112:
+	   don't see any problems yet */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1611: FILE: drivers/usb/serial/ftdi_sio.c:2137:
+	/* This is needed by the break command since it uses the same command
+	   - but is or'ed with this value  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1611: FILE: drivers/usb/serial/ftdi_sio.c:2137:
+	   - but is or'ed with this value  */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1658: FILE: drivers/usb/serial/ftdi_sio.c:2192:
+			dbg("%s  request to enable xonxoff iflag=%04x",
+							__func__, iflag);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1680: FILE: drivers/usb/serial/ftdi_sio.c:2215:
+			 * stack - not by device */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1695: FILE: drivers/usb/serial/ftdi_sio.c:2243:
+		ret = usb_control_msg(port->serial->dev,
+			   usb_rcvctrlpipe(port->serial->dev, 0),

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1720: FILE: drivers/usb/serial/ftdi_sio.c:2259:
+		/* the 8U232AM returns a two byte value (the sio is a 1 byte
+		   value) - in the same format as the data returned from the in

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1721: FILE: drivers/usb/serial/ftdi_sio.c:2260:
+		   point */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1723: FILE: drivers/usb/serial/ftdi_sio.c:2262:
+		ret = usb_control_msg(port->serial->dev,
+				   usb_rcvctrlpipe(port->serial->dev, 0),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1742: FILE: drivers/usb/serial/ftdi_sio.c:2286:
+static int ftdi_tiocmset(struct tty_struct *tty, struct file *file,
 			unsigned int set, unsigned int clear)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1751: FILE: drivers/usb/serial/ftdi_sio.c:2295:
+static int ftdi_ioctl(struct tty_struct *tty, struct file *file,
+					unsigned int cmd, unsigned long arg)

CHECK:SPACING: No space is necessary after a cast
#1761: FILE: drivers/usb/serial/ftdi_sio.c:2307:
+					(struct serial_struct __user *) arg);

CHECK:SPACING: No space is necessary after a cast
#1766: FILE: drivers/usb/serial/ftdi_sio.c:2311:
+					(struct serial_struct __user *) arg);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1788: FILE: drivers/usb/serial/ftdi_sio.c:2337:
+				/* Return 0 if caller wanted to know about
+				   these bits */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1788: FILE: drivers/usb/serial/ftdi_sio.c:2337:
+				   these bits */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1914: FILE: drivers/usb/serial/ftdi_sio.h:971:
+ ftdi_sio_b300 = 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1915: FILE: drivers/usb/serial/ftdi_sio.h:972:
+ ftdi_sio_b600 = 1,$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000265214.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 52 warnings, 42 checks, 2074 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000265214.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
