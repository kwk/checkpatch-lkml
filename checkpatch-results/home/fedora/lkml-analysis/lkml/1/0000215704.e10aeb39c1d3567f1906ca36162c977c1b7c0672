WARNING:TYPO_SPELLING: 'suppport' may be misspelled - perhaps 'support'?
#34: 
This patch provides the HDQ driver to suppport TI OMAP2430/3430 platforms.
                                      ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#53: FILE: drivers/w1/masters/Kconfig:55:
+config HDQ_MASTER_OMAP
+	tristate "OMAP HDQ driver"
+	depends on ARCH_OMAP2430 || ARCH_OMAP34XX
+	help
+	  Say Y here if you want support for the 1-wire or HDQ Interface
+	  on an OMAP processor.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#76: FILE: drivers/w1/masters/omap_hdq.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#77: FILE: drivers/w1/masters/omap_hdq.c:2:
+ * drivers/w1/masters/omap_hdq.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#106: FILE: drivers/w1/masters/omap_hdq.c:31:
+#define OMAP_HDQ_CTRL_STATUS_INTERRUPTMASK	(1<<6)
                                           	  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#106: FILE: drivers/w1/masters/omap_hdq.c:31:
+#define OMAP_HDQ_CTRL_STATUS_INTERRUPTMASK	(1<<6)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#107: FILE: drivers/w1/masters/omap_hdq.c:32:
+#define OMAP_HDQ_CTRL_STATUS_CLOCKENABLE	(1<<5)
                                         	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#107: FILE: drivers/w1/masters/omap_hdq.c:32:
+#define OMAP_HDQ_CTRL_STATUS_CLOCKENABLE	(1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#108: FILE: drivers/w1/masters/omap_hdq.c:33:
+#define OMAP_HDQ_CTRL_STATUS_GO			(1<<4)
                                			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#108: FILE: drivers/w1/masters/omap_hdq.c:33:
+#define OMAP_HDQ_CTRL_STATUS_GO			(1<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#109: FILE: drivers/w1/masters/omap_hdq.c:34:
+#define OMAP_HDQ_CTRL_STATUS_INITIALIZATION	(1<<2)
                                            	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#109: FILE: drivers/w1/masters/omap_hdq.c:34:
+#define OMAP_HDQ_CTRL_STATUS_INITIALIZATION	(1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#110: FILE: drivers/w1/masters/omap_hdq.c:35:
+#define OMAP_HDQ_CTRL_STATUS_DIR		(1<<1)
                                 		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#110: FILE: drivers/w1/masters/omap_hdq.c:35:
+#define OMAP_HDQ_CTRL_STATUS_DIR		(1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#111: FILE: drivers/w1/masters/omap_hdq.c:36:
+#define OMAP_HDQ_CTRL_STATUS_MODE		(1<<0)
                                  		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#111: FILE: drivers/w1/masters/omap_hdq.c:36:
+#define OMAP_HDQ_CTRL_STATUS_MODE		(1<<0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#113: FILE: drivers/w1/masters/omap_hdq.c:38:
+#define OMAP_HDQ_INT_STATUS_TXCOMPLETE		(1<<2)
                                       		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#113: FILE: drivers/w1/masters/omap_hdq.c:38:
+#define OMAP_HDQ_INT_STATUS_TXCOMPLETE		(1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#114: FILE: drivers/w1/masters/omap_hdq.c:39:
+#define OMAP_HDQ_INT_STATUS_RXCOMPLETE		(1<<1)
                                       		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#114: FILE: drivers/w1/masters/omap_hdq.c:39:
+#define OMAP_HDQ_INT_STATUS_RXCOMPLETE		(1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#115: FILE: drivers/w1/masters/omap_hdq.c:40:
+#define OMAP_HDQ_INT_STATUS_TIMEOUT		(1<<0)
                                    		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#115: FILE: drivers/w1/masters/omap_hdq.c:40:
+#define OMAP_HDQ_INT_STATUS_TIMEOUT		(1<<0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#117: FILE: drivers/w1/masters/omap_hdq.c:42:
+#define OMAP_HDQ_SYSCONFIG_SOFTRESET		(1<<1)
                                     		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#117: FILE: drivers/w1/masters/omap_hdq.c:42:
+#define OMAP_HDQ_SYSCONFIG_SOFTRESET		(1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#118: FILE: drivers/w1/masters/omap_hdq.c:43:
+#define OMAP_HDQ_SYSCONFIG_AUTOIDLE		(1<<0)
                                    		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#118: FILE: drivers/w1/masters/omap_hdq.c:43:
+#define OMAP_HDQ_SYSCONFIG_AUTOIDLE		(1<<0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#120: FILE: drivers/w1/masters/omap_hdq.c:45:
+#define OMAP_HDQ_SYSSTATUS_RESETDONE		(1<<0)
                                     		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#120: FILE: drivers/w1/masters/omap_hdq.c:45:
+#define OMAP_HDQ_SYSSTATUS_RESETDONE		(1<<0)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#124: FILE: drivers/w1/masters/omap_hdq.c:49:
+#define OMAP_HDQ_TIMEOUT			(HZ/5)
                         			   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#165: FILE: drivers/w1/masters/omap_hdq.c:90:
+static void omap_w1_search_bus(void *_hdq, u8 search_type,
+	w1_slave_found_callback slave_found);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#167: FILE: drivers/w1/masters/omap_hdq.c:92:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#187: FILE: drivers/w1/masters/omap_hdq.c:112:
+static inline u8 hdq_reg_merge(struct hdq_data *hdq_data, u32 offset,
+			u8 val, u8 mask)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: drivers/w1/masters/omap_hdq.c:128:
+static int hdq_wait_for_flag(struct hdq_data *hdq_data, u32 offset,
+		u8 flag, u8 flag_set, u8 *status)

CHECK:BRACES: braces {} should be used on all arms of this statement
#208: FILE: drivers/w1/masters/omap_hdq.c:133:
+	if (flag_set == OMAP_HDQ_FLAG_CLEAR) {
[...]
+	} else if (flag_set == OMAP_HDQ_FLAG_SET) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#211: FILE: drivers/w1/masters/omap_hdq.c:136:
+		while (((*status = hdq_reg_in(hdq_data, offset)) & flag)
+			&& time_before(jiffies, timeout)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#219: FILE: drivers/w1/masters/omap_hdq.c:144:
+		while (!((*status = hdq_reg_in(hdq_data, offset)) & flag)
+			&& time_before(jiffies, timeout)) {

CHECK:BRACES: Unbalanced braces around else statement
#224: FILE: drivers/w1/masters/omap_hdq.c:149:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#250: FILE: drivers/w1/masters/omap_hdq.c:175:
+	hdq_reg_merge(hdq_data, OMAP_HDQ_CTRL_STATUS, OMAP_HDQ_CTRL_STATUS_GO,
+		OMAP_HDQ_CTRL_STATUS_DIR | OMAP_HDQ_CTRL_STATUS_GO);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#253: FILE: drivers/w1/masters/omap_hdq.c:178:
+	ret = wait_event_timeout(hdq_wait_queue,
+		hdq_data->hdq_irqstatus, OMAP_HDQ_TIMEOUT);

WARNING:SPLIT_STRING: quoted string split across lines
#263: FILE: drivers/w1/masters/omap_hdq.c:188:
+		dev_dbg(hdq_data->dev, "timeout waiting for"
+			"TXCOMPLETE/RXCOMPLETE, %x", *status);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:MISSING_SPACE: break quoted strings at a space character
#263: FILE: drivers/w1/masters/omap_hdq.c:188:
+		dev_dbg(hdq_data->dev, "timeout waiting for"
+			"TXCOMPLETE/RXCOMPLETE, %x", *status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#270: FILE: drivers/w1/masters/omap_hdq.c:195:
+	ret = hdq_wait_for_flag(hdq_data, OMAP_HDQ_CTRL_STATUS,
+			OMAP_HDQ_CTRL_STATUS_GO,

WARNING:SPLIT_STRING: quoted string split across lines
#274: FILE: drivers/w1/masters/omap_hdq.c:199:
+		dev_dbg(hdq_data->dev, "timeout waiting GO bit"
+			"return to zero, %x", tmp_status);

WARNING:MISSING_SPACE: break quoted strings at a space character
#274: FILE: drivers/w1/masters/omap_hdq.c:199:
+		dev_dbg(hdq_data->dev, "timeout waiting GO bit"
+			"return to zero, %x", tmp_status);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hdq_isr', this function's name, in a string
#290: FILE: drivers/w1/masters/omap_hdq.c:215:
+	dev_dbg(hdq_data->dev, "hdq_isr: %x", hdq_data->hdq_irqstatus);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#310: FILE: drivers/w1/masters/omap_hdq.c:235:
+static void omap_w1_search_bus(void *_hdq, u8 search_type,
+	w1_slave_found_callback slave_found)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#343: FILE: drivers/w1/masters/omap_hdq.c:268:
+	hdq_reg_out(hdq_data, OMAP_HDQ_CTRL_STATUS,
+		OMAP_HDQ_CTRL_STATUS_CLOCKENABLE |

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#348: FILE: drivers/w1/masters/omap_hdq.c:273:
+	ret = hdq_wait_for_flag(hdq_data, OMAP_HDQ_SYSSTATUS,
+		OMAP_HDQ_SYSSTATUS_RESETDONE, OMAP_HDQ_FLAG_SET, &tmp_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#351: FILE: drivers/w1/masters/omap_hdq.c:276:
+		dev_dbg(hdq_data->dev, "timeout waiting HDQ reset, %x",
+				tmp_status);

CHECK:BRACES: Unbalanced braces around else statement
#352: FILE: drivers/w1/masters/omap_hdq.c:277:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#354: FILE: drivers/w1/masters/omap_hdq.c:279:
+		hdq_reg_out(hdq_data, OMAP_HDQ_CTRL_STATUS,
+			OMAP_HDQ_CTRL_STATUS_CLOCKENABLE |

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#357: FILE: drivers/w1/masters/omap_hdq.c:282:
+		hdq_reg_out(hdq_data, OMAP_HDQ_SYSCONFIG,
+			OMAP_HDQ_SYSCONFIG_AUTOIDLE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#386: FILE: drivers/w1/masters/omap_hdq.c:311:
+	hdq_reg_merge(hdq_data, OMAP_HDQ_CTRL_STATUS,
+		OMAP_HDQ_CTRL_STATUS_INITIALIZATION | OMAP_HDQ_CTRL_STATUS_GO,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#392: FILE: drivers/w1/masters/omap_hdq.c:317:
+	ret = wait_event_timeout(hdq_wait_queue,
+		hdq_data->hdq_irqstatus, OMAP_HDQ_TIMEOUT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#403: FILE: drivers/w1/masters/omap_hdq.c:328:
+		dev_dbg(hdq_data->dev, "timeout waiting for TIMEOUT, %x",
+				tmp_status);

WARNING:TYPO_SPELLING: 'rerurn' may be misspelled - perhaps 'return'?
#408: FILE: drivers/w1/masters/omap_hdq.c:333:
+	 * wait for both INIT and GO bits rerurn to zero.
 	                                  ^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#412: FILE: drivers/w1/masters/omap_hdq.c:337:
+	ret = hdq_wait_for_flag(hdq_data, OMAP_HDQ_CTRL_STATUS,
+			OMAP_HDQ_CTRL_STATUS_INITIALIZATION |

WARNING:SPLIT_STRING: quoted string split across lines
#417: FILE: drivers/w1/masters/omap_hdq.c:342:
+		dev_dbg(hdq_data->dev, "timeout waiting INIT&GO bits"
+			"return to zero, %x", tmp_status);

WARNING:MISSING_SPACE: break quoted strings at a space character
#417: FILE: drivers/w1/masters/omap_hdq.c:342:
+		dev_dbg(hdq_data->dev, "timeout waiting INIT&GO bits"
+			"return to zero, %x", tmp_status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#444: FILE: drivers/w1/masters/omap_hdq.c:369:
+		hdq_reg_merge(hdq_data, OMAP_HDQ_CTRL_STATUS,
+			OMAP_HDQ_CTRL_STATUS_DIR | OMAP_HDQ_CTRL_STATUS_GO,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#453: FILE: drivers/w1/masters/omap_hdq.c:378:
+			& OMAP_HDQ_INT_STATUS_RXCOMPLETE)
+			&& time_before(jiffies, timeout)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#457: FILE: drivers/w1/masters/omap_hdq.c:382:
+		hdq_reg_merge(hdq_data, OMAP_HDQ_CTRL_STATUS, 0,
+			OMAP_HDQ_CTRL_STATUS_DIR);

WARNING:SPLIT_STRING: quoted string split across lines
#462: FILE: drivers/w1/masters/omap_hdq.c:387:
+			dev_dbg(hdq_data->dev, "timeout waiting for"
+				"RXCOMPLETE, %x", status);

WARNING:MISSING_SPACE: break quoted strings at a space character
#462: FILE: drivers/w1/masters/omap_hdq.c:387:
+			dev_dbg(hdq_data->dev, "timeout waiting for"
+				"RXCOMPLETE, %x", status);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#474: FILE: drivers/w1/masters/omap_hdq.c:399:
+
+}

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#487: FILE: drivers/w1/masters/omap_hdq.c:412:
+	if (OMAP_HDQ_MAX_USER == hdq_data->hdq_usecount) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#494: FILE: drivers/w1/masters/omap_hdq.c:419:
+		if (1 == hdq_data->hdq_usecount) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#517: FILE: drivers/w1/masters/omap_hdq.c:442:
+				hdq_reg_out(hdq_data, OMAP_HDQ_CTRL_STATUS,
+					OMAP_HDQ_CTRL_STATUS_CLOCKENABLE |

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#520: FILE: drivers/w1/masters/omap_hdq.c:445:
+				hdq_reg_out(hdq_data, OMAP_HDQ_SYSCONFIG,
+					OMAP_HDQ_SYSCONFIG_AUTOIDLE);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#544: FILE: drivers/w1/masters/omap_hdq.c:469:
+	if (0 == hdq_data->hdq_usecount) {

WARNING:SPLIT_STRING: quoted string split across lines
#546: FILE: drivers/w1/masters/omap_hdq.c:471:
+		dev_dbg(hdq_data->dev, "attempt to decrement use count"
+			"when it is zero");

WARNING:MISSING_SPACE: break quoted strings at a space character
#546: FILE: drivers/w1/masters/omap_hdq.c:471:
+		dev_dbg(hdq_data->dev, "attempt to decrement use count"
+			"when it is zero");

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#551: FILE: drivers/w1/masters/omap_hdq.c:476:
+		if (0 == hdq_data->hdq_usecount) {

WARNING:TYPO_SPELLING: 'transfered' may be misspelled - perhaps 'transferred'?
#621: FILE: drivers/w1/masters/omap_hdq.c:546:
+	/* Second write, data transfered. Release the module */
 	                      ^^^^^^^^^^

WARNING:RETURN_VOID: void function return statements are not generally useful
#634: FILE: drivers/w1/masters/omap_hdq.c:559:
+	return;
+}

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#645: FILE: drivers/w1/masters/omap_hdq.c:570:
+	if (!hdq_data) {
+		dev_dbg(&pdev->dev, "unable to allocate memory\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#701: FILE: drivers/w1/masters/omap_hdq.c:626:
+	dev_info(&pdev->dev, "OMAP HDQ Hardware Rev %c.%c. Driver in %s mode\n",
+		(rev >> 4) + '0', (rev & 0x0f) + '0', "Interrupt");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#755: FILE: drivers/w1/masters/omap_hdq.c:680:
+
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#795: FILE: drivers/w1/masters/omap_hdq.c:720:
+module_param(w1_id, int, S_IRUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000215704.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 24 warnings, 55 checks, 741 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000215704.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
