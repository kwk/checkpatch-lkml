WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#142: FILE: mm/swapfile.c:897:
+				break;
+			else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#158: FILE: mm/swapfile.c:916:
+int try_to_unuse(unsigned int type, unsigned int preswap,
+		unsigned long pages_to_unuse)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#268: FILE: include/linux/swap.h:167:
+extern int preswap_sysctl_handler(struct ctl_table *, int, struct file *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#269: FILE: include/linux/swap.h:168:
+extern int preswap_sysctl_handler(struct ctl_table *, int, struct file *,
+	void __user *, size_t *, loff_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#272: FILE: include/linux/swap.h:171:
+extern void preswap_shrink(unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#272: FILE: include/linux/swap.h:171:
+extern void preswap_shrink(unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#273: FILE: include/linux/swap.h:172:
+extern int preswap_test(struct swap_info_struct *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct swap_info_struct *' should also have an identifier name
#273: FILE: include/linux/swap.h:172:
+extern int preswap_test(struct swap_info_struct *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#273: FILE: include/linux/swap.h:172:
+extern int preswap_test(struct swap_info_struct *, unsigned long);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#274: FILE: include/linux/swap.h:173:
+extern void preswap_init(unsigned);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#274: FILE: include/linux/swap.h:173:
+extern void preswap_init(unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#274: FILE: include/linux/swap.h:173:
+extern void preswap_init(unsigned);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#275: FILE: include/linux/swap.h:174:
+extern int preswap_put(struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#275: FILE: include/linux/swap.h:174:
+extern int preswap_put(struct page *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#276: FILE: include/linux/swap.h:175:
+extern int preswap_get(struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#276: FILE: include/linux/swap.h:175:
+extern int preswap_get(struct page *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#277: FILE: include/linux/swap.h:176:
+extern void preswap_flush(unsigned, unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#277: FILE: include/linux/swap.h:176:
+extern void preswap_flush(unsigned, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#277: FILE: include/linux/swap.h:176:
+extern void preswap_flush(unsigned, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#277: FILE: include/linux/swap.h:176:
+extern void preswap_flush(unsigned, unsigned long);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#278: FILE: include/linux/swap.h:177:
+extern void preswap_flush_area(unsigned);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#278: FILE: include/linux/swap.h:177:
+extern void preswap_flush_area(unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#278: FILE: include/linux/swap.h:177:
+extern void preswap_flush_area(unsigned);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#280: FILE: include/linux/swap.h:179:
+extern int try_to_unuse(unsigned int, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#280: FILE: include/linux/swap.h:179:
+extern int try_to_unuse(unsigned int, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#280: FILE: include/linux/swap.h:179:
+extern int try_to_unuse(unsigned int, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#280: FILE: include/linux/swap.h:179:
+extern int try_to_unuse(unsigned int, unsigned int, unsigned long);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#287: FILE: include/linux/swap.h:186:
+static inline int preswap_test(struct swap_info_struct *sis,
+	unsigned long offset)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#292: FILE: include/linux/swap.h:191:
+static inline void preswap_init(unsigned type)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#306: FILE: include/linux/swap.h:205:
+static inline void preswap_flush(unsigned type, unsigned long offset)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#310: FILE: include/linux/swap.h:209:
+static inline void preswap_flush_area(unsigned type)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#330: FILE: mm/preswap.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#331: FILE: mm/preswap.c:2:
+ * linux/mm/preswap.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '_type' may be better as '(_type)' to avoid precedence issues
#378: FILE: mm/preswap.c:49:
+#define oswiz(_type, _ind)	((_type << SWIZ_BITS) | (_ind & SWIZ_MASK))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '_ind' may be better as '(_ind)' to avoid precedence issues
#378: FILE: mm/preswap.c:49:
+#define oswiz(_type, _ind)	((_type << SWIZ_BITS) | (_ind & SWIZ_MASK))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '_ind' may be better as '(_ind)' to avoid precedence issues
#379: FILE: mm/preswap.c:50:
+#define iswiz(_ind)		(_ind >> SWIZ_BITS)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#390: FILE: mm/preswap.c:61:
+		&sis->preswap_map[offset/BITS_PER_LONG]);
 		                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#394: FILE: mm/preswap.c:65:
+static inline void preswap_set(struct swap_info_struct *sis,
+				unsigned long offset)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#399: FILE: mm/preswap.c:70:
+		&sis->preswap_map[offset/BITS_PER_LONG]);
 		                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#403: FILE: mm/preswap.c:74:
+static inline void preswap_clear(struct swap_info_struct *sis,
+				unsigned long offset)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#408: FILE: mm/preswap.c:79:
+	clear_bit(offset % BITS_PER_LONG,
+		&sis->preswap_map[offset/BITS_PER_LONG]);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#408: FILE: mm/preswap.c:79:
+		&sis->preswap_map[offset/BITS_PER_LONG]);
 		                        ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#416: FILE: mm/preswap.c:87:
+ * was declined, and -ERRNO for a specific error */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#420: FILE: mm/preswap.c:91:
+	unsigned type = swp_type(entry);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#436: FILE: mm/preswap.c:107:
+	ret = tmem_put_page(preswap_poolid, oswiz(type, ind),
+		iswiz(ind), pfn);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#443: FILE: mm/preswap.c:114:
+		 * the (older) page from preswap */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#451: FILE: mm/preswap.c:122:
+ * was not present (should never happen!), and -ERRNO for a specific error */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#455: FILE: mm/preswap.c:126:
+	unsigned type = swp_type(entry);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#470: FILE: mm/preswap.c:141:
+	ret = tmem_get_page(preswap_poolid, oswiz(type, ind),
+		iswiz(ind), pfn);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#475: FILE: mm/preswap.c:146:
+void preswap_flush(unsigned type, unsigned long offset)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#488: FILE: mm/preswap.c:159:
+		ret = tmem_flush_page(preswap_poolid,
+			oswiz(type, ind), iswiz(ind));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#495: FILE: mm/preswap.c:166:
+void preswap_flush_area(unsigned type)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#507: FILE: mm/preswap.c:178:
+void preswap_init(unsigned type)

CHECK:BRACES: braces {} should be used on all arms of this statement
#549: FILE: mm/preswap.c:220:
+			if (total_pages_to_unuse < si->preswap_pages)
[...]
+			else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#550: FILE: mm/preswap.c:221:
+				pages = unuse_pages = total_pages_to_unuse;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: Unbalanced braces around else statement
#551: FILE: mm/preswap.c:222:
+			else {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#570: FILE: mm/preswap.c:241:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#574: FILE: mm/preswap.c:245:
+ * preswap page usage to N (usually 0) */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#576: FILE: mm/preswap.c:247:
+int preswap_sysctl_handler(ctl_table *table, int write,
+	struct file *file, void __user *buffer, size_t *length, loff_t *ppos)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#609: FILE: include/linux/sysctl.h:208:
+	VM_PRESWAP_PAGES=36,	/* pages/target_pages in preswap */
 	                ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000099243.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 30 warnings, 29 checks, 548 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000099243.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
