WARNING:SPACING: Unnecessary space before function pointer arguments
#48: FILE: drivers/misc/sgi-xp/xpc.h:669:
+extern enum xp_retval (*xpc_allocate_msgqueues) (struct xpc_channel *);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct xpc_channel *' should also have an identifier name
#48: FILE: drivers/misc/sgi-xp/xpc.h:669:
+extern enum xp_retval (*xpc_allocate_msgqueues) (struct xpc_channel *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: Unnecessary space before function pointer arguments
#49: FILE: drivers/misc/sgi-xp/xpc.h:670:
+extern void (*xpc_free_msgqueues) (struct xpc_channel *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct xpc_channel *' should also have an identifier name
#49: FILE: drivers/misc/sgi-xp/xpc.h:670:
+extern void (*xpc_free_msgqueues) (struct xpc_channel *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#301: FILE: drivers/misc/sgi-xp/xpc_main.c:189:
+enum xp_retval (*xpc_allocate_msgqueues) (struct xpc_channel *ch);

WARNING:SPACING: Unnecessary space before function pointer arguments
#302: FILE: drivers/misc/sgi-xp/xpc_main.c:190:
+void (*xpc_free_msgqueues) (struct xpc_channel *ch);

WARNING:TYPO_SPELLING: 'cachline' may be misspelled - perhaps 'cacheline'?
#319: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1057:
+	/* see if kzalloc will give us cachline aligned memory by default */
 	                               ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!base"
#321: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1059:
+	if (*base == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!base"
#331: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1069:
+	if (*base == NULL)

CHECK:CAMELCASE: Avoid CamelCase: <local_GPs>
#349: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1105:
+	part_sn2->local_GPs =

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <local_GPs_base>
#351: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1107:
+					      &part_sn2->local_GPs_base);

CHECK:CAMELCASE: Avoid CamelCase: <remote_GPs>
#363: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1115:
+	part_sn2->remote_GPs =

CHECK:CAMELCASE: Avoid CamelCase: <remote_GPs_base>
#365: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1117:
+					      &part_sn2->remote_GPs_base);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#407: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1565:
+	for (nentries = ch->local_nentries; nentries > 0; nentries--) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ch->local_msgqueue"
#412: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1570:
+		if (ch->local_msgqueue == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ch->notify_queue"
#417: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1575:
+		if (ch->notify_queue == NULL) {

WARNING:SPLIT_STRING: quoted string split across lines
#426: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1584:
+			dev_dbg(xpc_chan, "nentries=%d local_nentries=%d, "
+				"partid=%d, channel=%d\n", nentries,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:CAMELCASE: Avoid CamelCase: <xpSuccess>
#432: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1590:
+		return xpSuccess;

WARNING:SPLIT_STRING: quoted string split across lines
#436: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1594:
+	dev_dbg(xpc_chan, "can't get memory for local message queue and notify "
+		"queue, partid=%d, channel=%d\n", ch->partid, ch->number);

CHECK:CAMELCASE: Avoid CamelCase: <xpNoMemory>
#437: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1595:
+	return xpNoMemory;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#453: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1611:
+	for (nentries = ch->remote_nentries; nentries > 0; nentries--) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#457: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1615:
+		    xpc_kzalloc_cacheline_aligned_sn2(nbytes, GFP_KERNEL,
+						     &ch->remote_msgqueue_base);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ch->remote_msgqueue"
#458: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1616:
+		if (ch->remote_msgqueue == NULL)

WARNING:SPLIT_STRING: quoted string split across lines
#464: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1622:
+			dev_dbg(xpc_chan, "nentries=%d remote_nentries=%d, "
+				"partid=%d, channel=%d\n", nentries,

WARNING:SPLIT_STRING: quoted string split across lines
#474: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1632:
+	dev_dbg(xpc_chan, "can't get memory for cached remote message queue, "
+		"partid=%d, channel=%d\n", ch->partid, ch->number);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#492: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1650:
+	if (ret == xpSuccess) {
+

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#516: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1674:
+	DBUG_ON(!spin_is_locked(&ch->lock));

lockdep_assert_held() annotations should be preferred over
assertions based on spin_is_locked()

See: https://www.kernel.org/doc/html/latest/locking/lockdep-design.html#annotations

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000270495.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 12 warnings, 15 checks, 494 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000270495.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
