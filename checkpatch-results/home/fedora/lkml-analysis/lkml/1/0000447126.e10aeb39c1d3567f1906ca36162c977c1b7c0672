WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#56: FILE: arch/arm/mach-omap1/io.c:24:
+extern void omapfb_reserve_sdram(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#77: FILE: arch/arm/mach-omap2/io.c:30:
+extern void omapfb_reserve_sdram(void);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#124: FILE: arch/arm/plat-omap/fb.c:71:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!conf"
#166: FILE: arch/arm/plat-omap/fb.c:100:
+	if (conf == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#183: FILE: arch/arm/plat-omap/fb.c:117:
+static int set_fbmem_region_type(struct omapfb_mem_region *rg, int mem_type,
+				  unsigned long mem_start,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#202: FILE: arch/arm/plat-omap/fb.c:136:
+			      unsigned long start_avail, unsigned size_avail)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#208: FILE: arch/arm/plat-omap/fb.c:142:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#214: FILE: arch/arm/plat-omap/fb.c:148:
+		printk(KERN_ERR "Zero size for FB region %d\n", region_idx);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#228: FILE: arch/arm/plat-omap/fb.c:162:
+		printk(KERN_ERR "Trying to use reserved memory "

WARNING:SPLIT_STRING: quoted string split across lines
#229: FILE: arch/arm/plat-omap/fb.c:163:
+		printk(KERN_ERR "Trying to use reserved memory "
+			"for FB region %d\n", region_idx);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#260: FILE: arch/arm/plat-omap/fb.c:194:
+			printk(KERN_ERR

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rg.type != OMAPFB_MEMTYPE_SDRAM'
#273: FILE: arch/arm/plat-omap/fb.c:200:
+		if (set_fbmem_region_type(&rg, OMAPFB_MEMTYPE_SDRAM,
+				          sdram_start, sdram_size) < 0 ||
+		    (rg.type != OMAPFB_MEMTYPE_SDRAM))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:CODE_INDENT: code indent should use tabs where possible
#274: FILE: arch/arm/plat-omap/fb.c:201:
+^I^I^I^I          sdram_start, sdram_size) < 0 ||$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: arch/arm/plat-omap/fb.c:201:
+		if (set_fbmem_region_type(&rg, OMAPFB_MEMTYPE_SDRAM,
+				          sdram_start, sdram_size) < 0 ||

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#277: FILE: arch/arm/plat-omap/fb.c:204:
+		BUG_ON(omapfb_config.mem_desc.region[i].size);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#327: FILE: arch/arm/plat-omap/fb.c:251:
+			printk(KERN_ERR

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rg.type != OMAPFB_MEMTYPE_SRAM'
#334: FILE: arch/arm/plat-omap/fb.c:258:
+		if (set_fbmem_region_type(&rg, OMAPFB_MEMTYPE_SRAM,
+				          sram_pstart, sram_size) < 0 ||
+		    (rg.type != OMAPFB_MEMTYPE_SRAM))

ERROR:CODE_INDENT: code indent should use tabs where possible
#335: FILE: arch/arm/plat-omap/fb.c:259:
+^I^I^I^I          sram_pstart, sram_size) < 0 ||$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#335: FILE: arch/arm/plat-omap/fb.c:259:
+		if (set_fbmem_region_type(&rg, OMAPFB_MEMTYPE_SRAM,
+				          sram_pstart, sram_size) < 0 ||

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#338: FILE: arch/arm/plat-omap/fb.c:262:
+		BUG_ON(omapfb_config.mem_desc.region[i].size);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#348: FILE: arch/arm/plat-omap/fb.c:272:
+				printk("Not enough SRAM for FB region %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#349: FILE: arch/arm/plat-omap/fb.c:273:
+				printk("Not enough SRAM for FB region %d\n",
+					i);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#372: FILE: arch/arm/plat-omap/fb.c:296:
+		pr_info("Reserving %lu bytes SRAM for frame buffer\n",
+			 reserved);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#384: FILE: arch/arm/plat-omap/fb.c:312:
+		printk(KERN_ERR "Invalid FB mem configuration entries\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!conf"
#389: FILE: arch/arm/plat-omap/fb.c:316:
+	if (conf == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#392: FILE: arch/arm/plat-omap/fb.c:319:
+			printk(KERN_ERR "Missing LCD configuration\n");

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#405: FILE: arch/arm/plat-omap/fb.c:332:
+unsigned long omapfb_reserve_sram(unsigned long sram_pstart,
+				  unsigned long sram_vstart,
+				  unsigned long sram_size,
+				  unsigned long start_avail,
+				  unsigned long size_avail) {}

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#424: FILE: arch/arm/plat-omap/sram.c:54:
+extern unsigned long omapfb_reserve_sram(unsigned long sram_pstart,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000447126.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 15 warnings, 10 checks, 448 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000447126.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
