WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#66: FILE: Documentation/accounting/getdelays.c:120:
+static int send_cmd(int sd, __u16 nlmsg_type, __u32 nlmsg_pid,
 	     __u8 genl_cmd, __u16 nla_type,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#195: FILE: Documentation/auxdisplay/cfag12864b-example.c:165:
+static void cfag12864b_format(unsigned char * matrix)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#301: FILE: Documentation/video4linux/v4lgrab.c:92:
+static int get_brightness_adj(unsigned char *image, long size, int *brightness) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#490: FILE: Documentation/vm/page-types.c:550:
+static void add_bits_filter(uint64_t mask, uint64_t bits)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#866: FILE: scripts/basic/docproc.c:74:
+static void usage (void)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#884: FILE: scripts/basic/docproc.c:132:
+static void add_new_symbol(struct symfile *sym, char * symname)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#893: FILE: scripts/basic/docproc.c:140:
+static struct symfile * add_new_file(char * filename)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#893: FILE: scripts/basic/docproc.c:140:
+static struct symfile * add_new_file(char * filename)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#901: FILE: scripts/basic/docproc.c:147:
+static struct symfile * filename_exist(char * filename)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#901: FILE: scripts/basic/docproc.c:147:
+static struct symfile * filename_exist(char * filename)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#913: FILE: scripts/basic/docproc.c:160:
+static void adddep(char * file)		   { printf("\t%s", file); }

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#914: FILE: scripts/basic/docproc.c:161:
+static void adddep2(char * file, char * line)     { line = line; adddep(file); }

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#914: FILE: scripts/basic/docproc.c:161:
+static void adddep2(char * file, char * line)     { line = line; adddep(file); }

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#915: FILE: scripts/basic/docproc.c:162:
+static void noaction(char * line)		   { line = line; }

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#916: FILE: scripts/basic/docproc.c:163:
+static void noaction2(char * file, char * line)   { file = file; line = line; }

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#916: FILE: scripts/basic/docproc.c:163:
+static void noaction2(char * file, char * line)   { file = file; line = line; }

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#920: FILE: scripts/basic/docproc.c:166:
+static void printline(char * line)               { printf("%s", line); }

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#928: FILE: scripts/basic/docproc.c:173:
+static void find_export_symbols(char * filename)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#937: FILE: scripts/basic/docproc.c:230:
+static void docfunctions(char * filename, char * type)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#937: FILE: scripts/basic/docproc.c:230:
+static void docfunctions(char * filename, char * type)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#947: FILE: scripts/basic/docproc.c:261:
 }
+static void intfunc(char * filename) {	docfunctions(filename, NOFUNCTION); }

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#947: FILE: scripts/basic/docproc.c:261:
+static void intfunc(char * filename) {	docfunctions(filename, NOFUNCTION); }

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#948: FILE: scripts/basic/docproc.c:262:
+static void extfunc(char * filename) { docfunctions(filename, FUNCTION);   }

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#956: FILE: scripts/basic/docproc.c:269:
+static void singfunc(char * filename, char * line)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#956: FILE: scripts/basic/docproc.c:269:
+static void singfunc(char * filename, char * line)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1014: FILE: scripts/basic/fixdep.c:167:
+static int is_defined_config(const char * name, int len)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1023: FILE: scripts/basic/fixdep.c:183:
+static void define_config(const char * name, int len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1139: FILE: scripts/genksyms/genksyms.c:180:
+static struct symbol *__add_symbol(const char *name, enum symbol_type type,
 			    struct string_list *defn, int is_extern,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1148: FILE: scripts/genksyms/genksyms.c:269:
+static struct symbol *add_reference_symbol(const char *name, enum symbol_type type,
 				    struct string_list *defn, int is_extern)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000090811.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 23 errors, 2 warnings, 5 checks, 981 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000090811.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
