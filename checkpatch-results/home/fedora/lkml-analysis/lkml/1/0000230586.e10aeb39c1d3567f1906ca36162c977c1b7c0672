WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#470: FILE: drivers/ide/ide-disk.h:12:
+sector_t ide_gd_capacity(ide_drive_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#474: FILE: drivers/ide/ide-disk.h:15:
+void ide_disk_init_capacity(ide_drive_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#475: FILE: drivers/ide/ide-disk.h:16:
+void ide_disk_setup(ide_drive_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#476: FILE: drivers/ide/ide-disk.h:17:
+void ide_disk_flush(ide_drive_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#477: FILE: drivers/ide/ide-disk.h:18:
+int ide_disk_set_doorlock(ide_drive_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#477: FILE: drivers/ide/ide-disk.h:18:
+int ide_disk_set_doorlock(ide_drive_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#478: FILE: drivers/ide/ide-disk.h:19:
+ide_startstop_t ide_do_rw_disk(ide_drive_t *, struct request *, sector_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#478: FILE: drivers/ide/ide-disk.h:19:
+ide_startstop_t ide_do_rw_disk(ide_drive_t *, struct request *, sector_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'sector_t' should also have an identifier name
#478: FILE: drivers/ide/ide-disk.h:19:
+ide_startstop_t ide_do_rw_disk(ide_drive_t *, struct request *, sector_t);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#500: FILE: drivers/ide/ide-gd.c:1:
+#include <linux/module.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'reinitilized' may be misspelled - perhaps 'reinitialized'?
#579: FILE: drivers/ide/ide-gd.c:80:
+ * reinitilized on resume otherwise the disk
    ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#592: FILE: drivers/ide/ide-gd.c:93:
+	/* On Alpha, halt(8) doesn't actually turn the machine off,
+	   it puts you into the sort of firmware monitor. Typically,

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#601: FILE: drivers/ide/ide-gd.c:102:
+	   the disk to expire its write cache. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#610: FILE: drivers/ide/ide-gd.c:111:
+	printk(KERN_INFO "Shutdown: %s\n", drive->name);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#635: FILE: drivers/ide/ide-gd.c:136:
+static int ide_gd_open(struct inode *inode, struct file *filp)
                                                          ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!idkp"
#642: FILE: drivers/ide/ide-gd.c:143:
+	if (idkp == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#661: FILE: drivers/ide/ide-gd.c:162:
+static int ide_gd_release(struct inode *inode, struct file *filp)
                                                             ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#709: FILE: drivers/ide/ide-gd.c:210:
+	struct ide_disk_obj *idkp = ide_drv_g(disk, ide_disk_obj);
+	set_capacity(disk, ide_gd_capacity(idkp->drive));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#713: FILE: drivers/ide/ide-gd.c:214:
+static struct block_device_operations ide_gd_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000230586.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 18 warnings, 1 checks, 530 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000230586.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
