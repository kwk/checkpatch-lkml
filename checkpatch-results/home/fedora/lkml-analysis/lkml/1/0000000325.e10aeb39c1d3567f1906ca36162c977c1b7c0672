WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#52: 
Subject: [PATCH 1/6] PM_QOS to use handle based list implementation and exported function

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: include/linux/pm_qos_params.h:21:
+void pm_qos_update_request(struct pm_qos_request_list *pm_qos_req,
+		s32 new_value);

WARNING:TYPO_SPELLING: 'comparitor' may be misspelled - perhaps 'comparator'?
#277: FILE: kernel/pm_qos_params.c:150:
+		extreme_value = pm_qos_array[pm_qos_class]->comparitor(
 		                                            ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#277: FILE: kernel/pm_qos_params.c:150:
+		extreme_value = pm_qos_array[pm_qos_class]->comparitor(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#288: FILE: kernel/pm_qos_params.c:157:
+		atomic_set(&pm_qos_array[pm_qos_class]->target_value,
+				extreme_value);

WARNING:UNNECESSARY_KERN_LEVEL: Possible unnecessary KERN_ERR
#289: FILE: kernel/pm_qos_params.c:158:
+		pr_debug(KERN_ERR "new target for qos %d is %d\n", pm_qos_class,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#290: FILE: kernel/pm_qos_params.c:159:
+		pr_debug(KERN_ERR "new target for qos %d is %d\n", pm_qos_class,
+			atomic_read(&pm_qos_array[pm_qos_class]->target_value));

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#297: FILE: kernel/pm_qos_params.c:164:
+		blocking_notifier_call_chain(

CHECK:SPACING: No space is necessary after a cast
#299: FILE: kernel/pm_qos_params.c:166:
+					(unsigned long) extreme_value, NULL);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dep)...) over kzalloc(sizeof(struct pm_qos_request_list)...)
#343: FILE: kernel/pm_qos_params.c:219:
+	dep = kzalloc(sizeof(struct pm_qos_request_list), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#389: FILE: kernel/pm_qos_params.c:249:
+void pm_qos_update_request(struct pm_qos_request_list *pm_qos_req,
+		s32 new_value)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pm_qos_req"
#448: FILE: kernel/pm_qos_params.c:284:
+	if (pm_qos_req == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#504: FILE: kernel/pm_qos_params.c:341:
+		filp->private_data = (void *) pm_qos_add_request(pm_qos_class,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#528: FILE: kernel/pm_qos_params.c:360:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#542: FILE: kernel/pm_qos_params.c:369:
+	if (count == sizeof(s32)) {
[...]
+	} else if (count == 11) { /* len('0x12345678/0') */
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#548: FILE: kernel/pm_qos_params.c:375:
+		x = sscanf(ascii_value, "%x", &value);

WARNING:UNNECESSARY_KERN_LEVEL: Possible unnecessary KERN_ERR
#551: FILE: kernel/pm_qos_params.c:378:
+		pr_debug(KERN_ERR "%s, %d, 0x%x\n", ascii_value, x, value);

CHECK:BRACES: Unbalanced braces around else statement
#552: FILE: kernel/pm_qos_params.c:379:
+	} else

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000000325.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 13 checks, 479 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000000325.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
