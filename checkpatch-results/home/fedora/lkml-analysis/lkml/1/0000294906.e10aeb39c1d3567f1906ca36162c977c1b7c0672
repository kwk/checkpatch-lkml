WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
additional check is made to ensure the values can be retrieved correctly. The

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#47: FILE: mm/internal.h:70:
+extern void mminit_verify_pageflags(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#48: FILE: mm/internal.h:71:
+extern void mminit_verify_page_links(struct page *page, enum zone_type zone,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#49: FILE: mm/internal.h:72:
+extern void mminit_verify_page_links(struct page *page, enum zone_type zone,
+				unsigned long nid, unsigned long pfn);

WARNING:LINE_SPACING: Missing a blank line after declarations
#69: FILE: mm/mm_init.c:16:
+	unsigned long shift = 0;
+	if (mminit_debug_level < MMINIT_VERIFY)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#73: FILE: mm/mm_init.c:20:
+	mminit_debug_printk(MMINIT_TRACE, "pageflags_layout_widths",
+		"Section %d Node %d Zone %d Reserved %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#79: FILE: mm/mm_init.c:26:
+	mminit_debug_printk(MMINIT_TRACE, "pageflags_layout_shifts",
+		"Section %d Node %d Zone %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#89: FILE: mm/mm_init.c:36:
+	mminit_debug_printk(MMINIT_TRACE, "pageflags_layout_offsets",
+		"Section %d Node %d Zone %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#94: FILE: mm/mm_init.c:41:
+	mminit_debug_printk(MMINIT_TRACE, "pageflags_layout_zoneid",
+		"Zone ID: %d -> %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#98: FILE: mm/mm_init.c:45:
+	mminit_debug_printk(MMINIT_TRACE, "pageflags_layout_nodeflags",
+		"Node not in page flags");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#104: FILE: mm/mm_init.c:51:
+		BUG_ON(shift != SECTIONS_PGSHIFT);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#108: FILE: mm/mm_init.c:55:
+		BUG_ON(shift != NODES_PGSHIFT);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#112: FILE: mm/mm_init.c:59:
+		BUG_ON(shift != ZONES_PGSHIFT);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#114: FILE: mm/mm_init.c:61:
+	BUG_ON(ZONES_MASK & NODES_MASK & SECTIONS_MASK);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#118: FILE: mm/mm_init.c:65:
+void __meminit mminit_verify_page_links(struct page *page, enum zone_type zone,
+			unsigned long nid, unsigned long pfn)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#123: FILE: mm/mm_init.c:70:
+	BUG_ON(page_to_nid(page) != nid);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#124: FILE: mm/mm_init.c:71:
+	BUG_ON(page_zone_id(page) != zone);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#125: FILE: mm/mm_init.c:72:
+	BUG_ON(page_to_pfn(page) != pfn);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#156: FILE: mm/page_alloc.c:2834:
+	mminit_debug_printk(MMINIT_TRACE, "memmap_init",
+			"Initialising map node %d zone %d pfns %lu -> %lu\n",

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000294906.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 10 checks, 115 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000294906.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
