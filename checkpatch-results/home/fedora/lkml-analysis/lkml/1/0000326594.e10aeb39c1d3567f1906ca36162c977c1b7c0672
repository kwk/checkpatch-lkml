WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#46: FILE: drivers/md/Kconfig:291:
+config DM_IOBAND
+	tristate "I/O bandwidth control (EXPERIMENTAL)"
+	depends on BLK_DEV_DM && EXPERIMENTAL
+	---help---
+	This device-mapper target allows to define how the
+	available bandwith of a storage device should be
+	shared between processes, cgroups, the partitions or the LUNs.
+
+	Information on how to use dm-ioband is available in:
+	   <file:Documentation/device-mapper/ioband.txt>.
+
+	If unsure, say N.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:TYPO_SPELLING: 'bandwith' may be misspelled - perhaps 'bandwidth'?
#51: FILE: drivers/md/Kconfig:296:
+	available bandwith of a storage device should be
 	          ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#83: FILE: drivers/md/dm-ioband-ctl.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#108: FILE: drivers/md/dm-ioband-ctl.c:26:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#108: FILE: drivers/md/dm-ioband-ctl.c:26:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24)
                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#108: FILE: drivers/md/dm-ioband-ctl.c:26:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24)
                                            ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#108: FILE: drivers/md/dm-ioband-ctl.c:26:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:LINE_SPACING: Missing a blank line after declarations
#123: FILE: drivers/md/dm-ioband-ctl.c:41:
+	struct policy_type *p;
+	for (p = dm_ioband_policy_type; (p->p_name); p++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#136: FILE: drivers/md/dm-ioband-ctl.c:54:
+static struct ioband_device *alloc_ioband_device(int devgroup_id, char *name,
+				int io_throttle, int io_limit)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*new)...) over kzalloc(sizeof(struct ioband_device)...)
#144: FILE: drivers/md/dm-ioband-ctl.c:62:
+	new = kzalloc(sizeof(struct ioband_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#159: FILE: drivers/md/dm-ioband-ctl.c:77:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#159: FILE: drivers/md/dm-ioband-ctl.c:77:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24)
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#159: FILE: drivers/md/dm-ioband-ctl.c:77:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24)
                                            ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#159: FILE: drivers/md/dm-ioband-ctl.c:77:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#219: FILE: drivers/md/dm-ioband-ctl.c:137:
+static struct ioband_group *ioband_group_find(struct ioband_group *head,int id)
                                                                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#232: FILE: drivers/md/dm-ioband-ctl.c:150:
+static int ioband_group_init(struct ioband_group *gp,
+		struct ioband_group *head, struct ioband_device *dp, int id)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#320: FILE: drivers/md/dm-ioband-ctl.c:238:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*gp)...) over kzalloc(sizeof(struct ioband_group)...)
#368: FILE: drivers/md/dm-ioband-ctl.c:286:
+	gp = kzalloc(sizeof(struct ioband_group), GFP_KERNEL);

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#374: FILE: drivers/md/dm-ioband-ctl.c:292:
+	val = simple_strtol(argv[1], NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ioband_ctr', this function's name, in a string
#381: FILE: drivers/md/dm-ioband-ctl.c:299:
+	dprintk(KERN_ERR "ioband_ctr device group id:%d\n", val);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#384: FILE: drivers/md/dm-ioband-ctl.c:302:
+		val = simple_strtol(argv[2], NULL, 0);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ioband_ctr', this function's name, in a string
#387: FILE: drivers/md/dm-ioband-ctl.c:305:
+		dprintk(KERN_ERR "ioband_ctr ioqueue_low:%d\n", io_throttle);

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#390: FILE: drivers/md/dm-ioband-ctl.c:308:
+		val = simple_strtol(argv[3], NULL, 0);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ioband_ctr', this function's name, in a string
#393: FILE: drivers/md/dm-ioband-ctl.c:311:
+		dprintk(KERN_ERR "ioband_ctr ioqueue_high:%d\n", io_limit);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#405: FILE: drivers/md/dm-ioband-ctl.c:323:
+	dp = alloc_ioband_device(devgroup_id, "default",io_throttle, io_limit);
 	                                               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#505: FILE: drivers/md/dm-ioband-ctl.c:423:
+		wait_event_lock_irq(dp->g_waitq, !device_should_block(gp),
+						dp->g_lock, do_nothing());

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#508: FILE: drivers/md/dm-ioband-ctl.c:426:
+		wait_event_lock_irq(gp->c_waitq, !group_should_block(gp),
+						dp->g_lock, do_nothing());

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#545: FILE: drivers/md/dm-ioband-ctl.c:463:
+static inline int release_bios(struct ioband_group *gp,
+		 struct bio_list *issue_list, struct bio_list *pushback_list)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#570: FILE: drivers/md/dm-ioband-ctl.c:488:
+static inline struct ioband_group *ioband_group_get(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#590: FILE: drivers/md/dm-ioband-ctl.c:508:
+static int ioband_map(struct dm_target *ti, struct bio *bio,
+						union map_info *map_context)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#597: FILE: drivers/md/dm-ioband-ctl.c:515:
+#if 0	/* not supported yet */

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ioband_map', this function's name, in a string
#622: FILE: drivers/md/dm-ioband-ctl.c:540:
+			dprintk(KERN_ERR "ioband_map: token expired "

WARNING:SPLIT_STRING: quoted string split across lines
#623: FILE: drivers/md/dm-ioband-ctl.c:541:
+			dprintk(KERN_ERR "ioband_map: token expired "
+						"gp:%p bio:%p\n", gp, bio);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#664: FILE: drivers/md/dm-ioband-ctl.c:582:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#664: FILE: drivers/md/dm-ioband-ctl.c:582:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24)
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#664: FILE: drivers/md/dm-ioband-ctl.c:582:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24)
                                            ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#664: FILE: drivers/md/dm-ioband-ctl.c:582:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ioband_conduct', this function's name, in a string
#688: FILE: drivers/md/dm-ioband-ctl.c:606:
+		dprintk(KERN_ERR "ioband_conduct: token expired gp:%p\n", gp);

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#698: FILE: drivers/md/dm-ioband-ctl.c:616:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#698: FILE: drivers/md/dm-ioband-ctl.c:616:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24)
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#698: FILE: drivers/md/dm-ioband-ctl.c:616:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24)
                                            ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#698: FILE: drivers/md/dm-ioband-ctl.c:616:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#706: FILE: drivers/md/dm-ioband-ctl.c:624:
+static int ioband_end_io(struct dm_target *ti, struct bio *bio,
+		    int error, union map_info *map_context)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#729: FILE: drivers/md/dm-ioband-ctl.c:647:
+^I * ^I not to kick the workqueues so often.$

WARNING:LINE_SPACING: Missing a blank line after declarations
#740: FILE: drivers/md/dm-ioband-ctl.c:658:
+	struct ioband_group *gp = ti->private;
+	ioband_group_stop_all(gp, 1);

WARNING:LINE_SPACING: Missing a blank line after declarations
#746: FILE: drivers/md/dm-ioband-ctl.c:664:
+	struct ioband_group *gp = ti->private;
+	ioband_group_resume_all(gp);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#749: FILE: drivers/md/dm-ioband-ctl.c:667:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#762: FILE: drivers/md/dm-ioband-ctl.c:680:
+		DMEMIT(" %lu %lu %lu",
+			bws->immediate + bws->deferred, bws->deferred,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#769: FILE: drivers/md/dm-ioband-ctl.c:687:
+static int ioband_status(struct dm_target *ti, status_type_t type,
+			char *result, unsigned int maxlen)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#789: FILE: drivers/md/dm-ioband-ctl.c:707:
+		DMEMIT("%s %d %d %d", gp->c_dev->name, dp->g_devgroup,
+					dp->g_io_throttle, dp->g_io_limit);

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#832: FILE: drivers/md/dm-ioband-ctl.c:750:
+		id = simple_strtol(p, NULL, 0);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ioband_set_param', this function's name, in a string
#853: FILE: drivers/md/dm-ioband-ctl.c:771:
+			DMWARN("ioband_set_param: id=%d not found.", id);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ioband_group_attach', this function's name, in a string
#869: FILE: drivers/md/dm-ioband-ctl.c:787:
+		DMWARN("ioband_group_attach: invalid id:%d", id);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*sub_gp)...) over kzalloc(sizeof(struct ioband_group)...)
#872: FILE: drivers/md/dm-ioband-ctl.c:790:
+	sub_gp = kzalloc(sizeof(struct ioband_group), GFP_KERNEL);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ioband_group_detach', this function's name, in a string
#891: FILE: drivers/md/dm-ioband-ctl.c:809:
+		DMWARN("ioband_group_detach: invalid id:%d", id);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ioband_group_detach', this function's name, in a string
#898: FILE: drivers/md/dm-ioband-ctl.c:816:
+		DMWARN("ioband_group_detach: invalid id:%d", id);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#914: FILE: drivers/md/dm-ioband-ctl.c:832:
+ * ^I"io_throttle" <value>$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#915: FILE: drivers/md/dm-ioband-ctl.c:833:
+ * ^I"io_limit"    <value>$

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#945: FILE: drivers/md/dm-ioband-ctl.c:863:
+		ioband_debug = simple_strtol(argv[1], NULL, 0);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#946: FILE: drivers/md/dm-ioband-ctl.c:864:
+		if (ioband_debug < 0) ioband_debug = 0;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#949: FILE: drivers/md/dm-ioband-ctl.c:867:
+		val = simple_strtol(argv[1], NULL, 0);

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#960: FILE: drivers/md/dm-ioband-ctl.c:878:
+		val = simple_strtol(argv[1], NULL, 0);

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#973: FILE: drivers/md/dm-ioband-ctl.c:891:
+		int id = simple_strtol(argv[1], NULL, 0);

WARNING:LINE_SPACING: Missing a blank line after declarations
#974: FILE: drivers/md/dm-ioband-ctl.c:892:
+		int id = simple_strtol(argv[1], NULL, 0);
+		return ioband_group_attach(gp, id);

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#976: FILE: drivers/md/dm-ioband-ctl.c:894:
+		int id = simple_strtol(argv[1], NULL, 0);

WARNING:LINE_SPACING: Missing a blank line after declarations
#977: FILE: drivers/md/dm-ioband-ctl.c:895:
+		int id = simple_strtol(argv[1], NULL, 0);
+		return ioband_group_detach(gp, id);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#978: FILE: drivers/md/dm-ioband-ctl.c:896:
+		return ioband_group_detach(gp, id);
+	} else {

WARNING:SPLIT_STRING: quoted string split across lines
#1028: FILE: drivers/md/dm-ioband-ctl.c:946:
+MODULE_AUTHOR("Hirokazu Takahashi <taka@valinux.co.jp>, "
+	      "Ryo Tsuruta <ryov@valinux.co.jp");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1034: FILE: drivers/md/dm-ioband-policy.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1053: FILE: drivers/md/dm-ioband-policy.c:20:
+
+

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1064: FILE: drivers/md/dm-ioband-policy.c:31:
+#if 0	/* this will also work correctly */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1070: FILE: drivers/md/dm-ioband-policy.c:37:
+	dprintk(KERN_ERR "proceed_epoch %d --> %d\n",
+						dp->g_epoch-1, dp->g_epoch);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1070: FILE: drivers/md/dm-ioband-policy.c:37:
+						dp->g_epoch-1, dp->g_epoch);
 						           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1090: FILE: drivers/md/dm-ioband-policy.c:57:
+	iopri = gp->c_token*IOBAND_IOPRIO_BASE/gp->c_token_init_value + 1;
 	                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1090: FILE: drivers/md/dm-ioband-policy.c:57:
+	iopri = gp->c_token*IOBAND_IOPRIO_BASE/gp->c_token_init_value + 1;
 	                                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1094: FILE: drivers/md/dm-ioband-policy.c:61:
+		iopri += IOBAND_IOPRIO_BASE*2;
 		                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1107: FILE: drivers/md/dm-ioband-policy.c:74:
+		dprintk(KERN_ERR "refill token: gp:%p token:%d\n",
+							gp, gp->c_token);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1128: FILE: drivers/md/dm-ioband-policy.c:95:
+		p->c_token = p->c_token_init_value =

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1129: FILE: drivers/md/dm-ioband-policy.c:96:
+		   dp->g_token_base*p->c_weight/dp->g_weight_total + 1;
 		                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1129: FILE: drivers/md/dm-ioband-policy.c:96:
+		   dp->g_token_base*p->c_weight/dp->g_weight_total + 1;
 		                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1131: FILE: drivers/md/dm-ioband-policy.c:98:
+		   dp->g_io_limit*p->c_weight/dp->g_weight_total + 1;
 		                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1131: FILE: drivers/md/dm-ioband-policy.c:98:
+		   dp->g_io_limit*p->c_weight/dp->g_weight_total + 1;
 		                             ^

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#1153: FILE: drivers/md/dm-ioband-policy.c:120:
+	int val = simple_strtol(value, NULL, 0);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1162: FILE: drivers/md/dm-ioband-policy.c:129:
+		if (val > 0) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1165: FILE: drivers/md/dm-ioband-policy.c:132:
+		} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1180: FILE: drivers/md/dm-ioband-policy.c:147:
+
+

WARNING:TYPO_SPELLING: 'initalize' may be misspelled - perhaps 'initialize'?
#1200: FILE: drivers/md/dm-ioband-policy.c:167:
+ * g_group_ctr    : To initalize the policy own members of struct ioband_group.
                        ^^^^^^^^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1223: FILE: drivers/md/dm-ioband-policy.c:190:
+}
+/* weight balancing policy. --- End --- */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1225: FILE: drivers/md/dm-ioband-policy.c:192:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1240: FILE: drivers/md/dm-ioband-type.c:1:
+/*

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#1270: FILE: drivers/md/dm-ioband-type.c:31:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1270: FILE: drivers/md/dm-ioband-type.c:31:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24)
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1270: FILE: drivers/md/dm-ioband-type.c:31:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24)
                                            ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1270: FILE: drivers/md/dm-ioband-type.c:31:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1324: FILE: drivers/md/dm-ioband.h:1:
+/*

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1351: FILE: drivers/md/dm-ioband.h:28:
+	spinlock_t	g_lock;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ioband_group *' should also have an identifier name
#1361: FILE: drivers/md/dm-ioband.h:38:
+	int	(*g_can_submit)(struct ioband_group *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ioband_group *' should also have an identifier name
#1362: FILE: drivers/md/dm-ioband.h:39:
+	void	(*g_prepare_bio)(struct ioband_group *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#1362: FILE: drivers/md/dm-ioband.h:39:
+	void	(*g_prepare_bio)(struct ioband_group *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ioband_device *' should also have an identifier name
#1363: FILE: drivers/md/dm-ioband.h:40:
+	int	(*g_restart_bios)(struct ioband_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ioband_group *' should also have an identifier name
#1364: FILE: drivers/md/dm-ioband.h:41:
+	void	(*g_hold_bio)(struct ioband_group *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#1364: FILE: drivers/md/dm-ioband.h:41:
+	void	(*g_hold_bio)(struct ioband_group *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ioband_group *' should also have an identifier name
#1365: FILE: drivers/md/dm-ioband.h:42:
+	struct bio * (*g_pop_bio)(struct ioband_group *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ioband_group *' should also have an identifier name
#1366: FILE: drivers/md/dm-ioband.h:43:
+	int	(*g_group_ctr)(struct ioband_group *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ioband_group *' should also have an identifier name
#1367: FILE: drivers/md/dm-ioband.h:44:
+	void	(*g_group_dtr)(struct ioband_group *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ioband_group *' should also have an identifier name
#1368: FILE: drivers/md/dm-ioband.h:45:
+	int	(*g_set_param)(struct ioband_group *, char *cmd, char *value);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ioband_group *' should also have an identifier name
#1369: FILE: drivers/md/dm-ioband.h:46:
+	int	(*g_should_block)(struct ioband_group *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#1399: FILE: drivers/md/dm-ioband.h:76:
+	int	(*c_getid)(struct bio *);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1418: FILE: drivers/md/dm-ioband.h:95:
+
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ioband_device *' should also have an identifier name
#1437: FILE: drivers/md/dm-ioband.h:114:
+	void	  (*p_policy_init)(struct ioband_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#1444: FILE: drivers/md/dm-ioband.h:121:
+	int	  (*t_getid)(struct bio *);

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#1451: FILE: drivers/md/dm-ioband.h:128:
+#define dprintk(format, a...) \
+	if (ioband_debug > 0) ioband_debug--, printk(format, ##a)

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1452: FILE: drivers/md/dm-ioband.h:129:
+	if (ioband_debug > 0) ioband_debug--, printk(format, ##a)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1452: FILE: drivers/md/dm-ioband.h:129:
+	if (ioband_debug > 0) ioband_debug--, printk(format, ##a)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000326594.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 15 errors, 64 warnings, 35 checks, 1389 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000326594.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
