CHECK:SPACING: No space is necessary after a cast
#479: FILE: drivers/dma/ioat/dma.c:698:
+	struct ioat_dma_chan *ioat = (void *) data;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#507: FILE: drivers/dma/ioat/dma.c:726:
+		if (ioat_cleanup_preamble(chan, &phys_complete))
[...]
+		else if (test_bit(IOAT_COMPLETION_ACK, &chan->state))
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#511: FILE: drivers/dma/ioat/dma.c:730:
+		else {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#719: FILE: drivers/dma/ioat/dma.h:284:
+	return !!(err & (IOAT_CHANERR_SRC_ADDR_ERR|IOAT_CHANERR_DEST_ADDR_ERR|
 	                                          ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#719: FILE: drivers/dma/ioat/dma.h:284:
+	return !!(err & (IOAT_CHANERR_SRC_ADDR_ERR|IOAT_CHANERR_DEST_ADDR_ERR|
 	                                                                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#720: FILE: drivers/dma/ioat/dma.h:285:
+			 IOAT_CHANERR_NEXT_ADDR_ERR|IOAT_CHANERR_CONTROL_ERR|
 			                           ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#720: FILE: drivers/dma/ioat/dma.h:285:
+			 IOAT_CHANERR_NEXT_ADDR_ERR|IOAT_CHANERR_CONTROL_ERR|
 			                                                    ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#724: FILE: drivers/dma/ioat/dma.h:289:
 int __devinit ioat_probe(struct ioatdma_device *device);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#725: FILE: drivers/dma/ioat/dma.h:290:
 int __devinit ioat_register(struct ioatdma_device *device);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#726: FILE: drivers/dma/ioat/dma.h:291:
 int __devinit ioat1_dma_probe(struct ioatdma_device *dev, int dca);

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#750: FILE: drivers/dma/ioat/dma_v2.c:52:
+	ioat->dmacount += ioat2_ring_pending(ioat);;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1016: FILE: drivers/dma/ioat/dma_v2.c:227:
+	if (ioat2_ring_pending(ioat)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1022: FILE: drivers/dma/ioat/dma_v2.c:233:
+	} else

CHECK:SPACING: No space is necessary after a cast
#1048: FILE: drivers/dma/ioat/dma_v2.c:259:
+	struct ioat2_dma_chan *ioat = (void *) data;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1066: FILE: drivers/dma/ioat/dma_v2.c:277:
+			BUG_ON(is_ioat_bug(chanerr));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: braces {} should be used on all arms of this statement
#1073: FILE: drivers/dma/ioat/dma_v2.c:284:
+		if (ioat_cleanup_preamble(chan, &phys_complete))
[...]
+		else if (test_bit(IOAT_COMPLETION_ACK, &chan->state))
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1077: FILE: drivers/dma/ioat/dma_v2.c:288:
+		else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1127: FILE: drivers/dma/ioat/dma_v2.c:504:
+		if (jiffies > chan->timer.expires &&
[...]
+		} else
[...]

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#1127: FILE: drivers/dma/ioat/dma_v2.c:504:
+		if (jiffies > chan->timer.expires &&

CHECK:SPACING: No space is necessary after a cast
#1131: FILE: drivers/dma/ioat/dma_v2.c:508:
+			ioat2_timer_event((unsigned long) ioat);

CHECK:BRACES: Unbalanced braces around else statement
#1132: FILE: drivers/dma/ioat/dma_v2.c:509:
+		} else

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1184: FILE: drivers/dma/ioat/dma_v2.h:140:
 int __devinit ioat2_dma_probe(struct ioatdma_device *dev, int dca);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1185: FILE: drivers/dma/ioat/dma_v2.h:141:
 int __devinit ioat3_dma_probe(struct ioatdma_device *dev, int dca);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1186: FILE: drivers/dma/ioat/dma_v2.h:142:
 struct dca_provider * __devinit ioat2_dca_init(struct pci_dev *pdev, void __iomem *iobase);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000076568.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 15 checks, 1118 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000076568.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
