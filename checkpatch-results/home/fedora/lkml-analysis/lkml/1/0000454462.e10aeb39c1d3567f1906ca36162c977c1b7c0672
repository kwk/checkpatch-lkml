WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#66: FILE: crypto/Kconfig:473:
+config CRYPTO_RSA_DEBUG
+	bool "Debugging capabilities"
+	depends on CRYPTO_RSA
+	help
+		This adds lots of debugging information and debugging capabilities in
+		the rsa module. It also adds approximately 1 more K to the kernel.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_CFLAGS is deprecated, please use `ccflags-y instead.
#107: FILE: crypto/Makefile:8:
+EXTRA_CFLAGS += -DRSA_HAVE_MPI_PRINT -Wno-unused-function

EXTRA_{A,C,CPP,LD}FLAGS are deprecated and should be replaced by the new
flags added via commit f77bf01425b1 ("kbuild: introduce ccflags-y,
asflags-y and ldflags-y").

The following conversion scheme maybe used::

  EXTRA_AFLAGS    ->  asflags-y
  EXTRA_CFLAGS    ->  ccflags-y
  EXTRA_CPPFLAGS  ->  cppflags-y
  EXTRA_LDFLAGS   ->  ldflags-y

See:

  1. https://lore.kernel.org/lkml/20070930191054.GA15876@uranus.ravnborg.org/
  2. https://lore.kernel.org/lkml/1313384834-24433-12-git-send-email-lacombar@gmail.com/
  3. https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#compilation-flags

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#123: FILE: crypto/rsa.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#140: FILE: crypto/rsa.c:18:
+static _u32 ^Imodinv = 0;$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#140: FILE: crypto/rsa.c:18:
+static _u32 	modinv = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#144: FILE: crypto/rsa.c:22:
+	return (x > y)? x: y;
 	              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#144: FILE: crypto/rsa.c:22:
+	return (x > y)? x: y;
 	                 ^

WARNING:TYPO_SPELLING: 'auxilliary' may be misspelled - perhaps 'auxiliary'?
#157: FILE: crypto/rsa.c:35:
+	/* Pre-allocate some auxilliary mpis */
 	                     ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'auxilliary' may be misspelled - perhaps 'auxiliary'?
#158: FILE: crypto/rsa.c:36:
+	rsa_echo("Preallocating %lu bytes for auxilliary operands\n",
 	                                      ^^^^^^^^^^

ERROR:SPACING: space required before the open parenthesis '('
#162: FILE: crypto/rsa.c:40:
+	for(i = 0; i < RSA_AUX_COUNT; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#164: FILE: crypto/rsa.c:42:
+		if(retval < 0)

ERROR:SPACING: space required before the open parenthesis '('
#173: FILE: crypto/rsa.c:51:
+	for(i = 0; i < RSA_AUX_COUNT; i++)

WARNING:TYPO_SPELLING: 'auxilliary' may be misspelled - perhaps 'auxiliary'?
#185: FILE: crypto/rsa.c:63:
+	/* Free all the pre-allocated auxilliary mpis */
 	                              ^^^^^^^^^^

ERROR:SPACING: space required before the open parenthesis '('
#186: FILE: crypto/rsa.c:64:
+	for(i = 0; i < RSA_AUX_COUNT; i++)

WARNING:REPEATED_WORD: Possible repeated word: 'pointer'
#197: FILE: crypto/rsa.c:75:
+ * @n: 	  pointer pointer to the allocated mpi

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#197: FILE: crypto/rsa.c:75:
+ * @n: ^I  pointer pointer to the allocated mpi$

CHECK:SPACING: spaces preferred around that '*' (ctx:WxO)
#200: FILE: crypto/rsa.c:78:
+static _err rsa_mpi_alloc(mpi ** n, _i32 limbs)
                               ^

ERROR:SPACING: space prohibited after that '*' (ctx:OxW)
#200: FILE: crypto/rsa.c:78:
+static _err rsa_mpi_alloc(mpi ** n, _i32 limbs)
                                ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#202: FILE: crypto/rsa.c:80:
+	mpi * handle;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#205: FILE: crypto/rsa.c:83:
+	if(!limbs)

ERROR:SPACING: space required before the open parenthesis '('
#210: FILE: crypto/rsa.c:88:
+	if(!handle) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#211: FILE: crypto/rsa.c:89:
+		rsa_debug("%s: kmalloc failed\n", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#216: FILE: crypto/rsa.c:94:
+	if(!handle->data) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#219: FILE: crypto/rsa.c:97:
+		rsa_debug("%s: kzalloc failed\n", __FUNCTION__);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#224: FILE: crypto/rsa.c:102:
+	handle->size = handle->limbs = limbs;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#231: FILE: crypto/rsa.c:109:
+static void rsa_mpi_free(mpi * n)

ERROR:SPACING: space required before the open parenthesis '('
#233: FILE: crypto/rsa.c:111:
+	if(!n)

WARNING:REPEATED_WORD: Possible repeated word: 'pointer'
#246: FILE: crypto/rsa.c:124:
+ * @n:	  pointer pointer to the allocated mpi

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#251: FILE: crypto/rsa.c:129:
+static _err rsa_mpi_init(mpi ** n, _u8 * str, _u32 size, _u32 xtra)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#254: FILE: crypto/rsa.c:132:
+	_u32 * buf;

ERROR:SPACING: space required before the open parenthesis '('
#259: FILE: crypto/rsa.c:137:
+	if(!size && !xtra) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#260: FILE: crypto/rsa.c:138:
+		rsa_debug("%s: invalid initialization string\n", __FUNCTION__);

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#265: FILE: crypto/rsa.c:143:
+	s = (size / 4) + ((size % 4)? 1: 0);
 	                            ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#265: FILE: crypto/rsa.c:143:
+	s = (size / 4) + ((size % 4)? 1: 0);
 	                               ^

ERROR:SPACING: space required before the open parenthesis '('
#267: FILE: crypto/rsa.c:145:
+	if(retval < 0)

ERROR:SPACING: space required before the open parenthesis '('
#274: FILE: crypto/rsa.c:152:
+	for(i = size - 1, j = 0; i >= 0; i--, j++)

WARNING:REPEATED_WORD: Possible repeated word: 'pointer'
#284: FILE: crypto/rsa.c:162:
+ * @n:	 pointer pointer to the allocated mpi

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#288: FILE: crypto/rsa.c:166:
+static _err rsa_mpi_resize(mpi ** n, _i32 size, _u8 hold)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#291: FILE: crypto/rsa.c:169:
+	mpi * handle = *n;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#294: FILE: crypto/rsa.c:172:
+	if(handle && handle->limbs >= size) {
+		 _i32 i, s;

ERROR:SPACING: space required before the open parenthesis '('
#294: FILE: crypto/rsa.c:172:
+	if(handle && handle->limbs >= size) {

WARNING:TABSTOP: Statements should start on a tabstop
#296: FILE: crypto/rsa.c:174:
+		 _u32 * buf;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#296: FILE: crypto/rsa.c:174:
+		 _u32 * buf;

ERROR:SPACING: space required before the open parenthesis '('
#302: FILE: crypto/rsa.c:180:
+		if(!hold) {

ERROR:SPACING: space required before the open parenthesis '('
#303: FILE: crypto/rsa.c:181:
+			for(i = 0; i < s; i++)

ERROR:SPACING: space required before the open parenthesis '('
#308: FILE: crypto/rsa.c:186:
+		else if(size < handle->size)

ERROR:SPACING: space required before the open parenthesis '('
#309: FILE: crypto/rsa.c:187:
+			for(i = size; i < s; i++)

ERROR:SPACING: space required before the open parenthesis '('
#317: FILE: crypto/rsa.c:195:
+	else if(handle) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#318: FILE: crypto/rsa.c:196:
+		mpi * tmp = NULL;

ERROR:SPACING: space required before the open parenthesis '('
#321: FILE: crypto/rsa.c:199:
+		if(retval < 0)

ERROR:SPACING: space required before the open parenthesis '('
#325: FILE: crypto/rsa.c:203:
+		if(hold) {

ERROR:SPACING: space required before the open parenthesis '('
#335: FILE: crypto/rsa.c:213:
+	else if(!handle) {

ERROR:SPACING: space required before the open parenthesis '('
#337: FILE: crypto/rsa.c:215:
+		if(retval < 0)

WARNING:TYPO_SPELLING: 'needeed' may be misspelled - perhaps 'needed'?
#348: FILE: crypto/rsa.c:226:
+ * if needeed
       ^^^^^^^

WARNING:REPEATED_WORD: Possible repeated word: 'pointer'
#352: FILE: crypto/rsa.c:230:
+ * @n:	 pointer pointer to the allocated mpi

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#356: FILE: crypto/rsa.c:234:
+static _err rsa_mpi_set(mpi ** n, _u8 * str, _u32 size)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#359: FILE: crypto/rsa.c:237:
+	_u32 * buf;

ERROR:SPACING: space required before the open parenthesis '('
#362: FILE: crypto/rsa.c:240:
+	if(!size) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#363: FILE: crypto/rsa.c:241:
+		rsa_debug("%s: invalid initialization string\n", __FUNCTION__);

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#368: FILE: crypto/rsa.c:246:
+	s = (size / 4) + ((size % 4)? 1: 0);
 	                            ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#368: FILE: crypto/rsa.c:246:
+	s = (size / 4) + ((size % 4)? 1: 0);
 	                               ^

ERROR:SPACING: space required before the open parenthesis '('
#370: FILE: crypto/rsa.c:248:
+	if(retval < 0)

ERROR:SPACING: space required before the open parenthesis '('
#375: FILE: crypto/rsa.c:253:
+	for(i = size - 1, j = 0; i >= 0; i--, j++)

ERROR:POINTER_LOCATION: "foo **	bar" should be "foo **bar"
#388: FILE: crypto/rsa.c:266:
+static inline _err rsa_mpi_copy(mpi **	dest, mpi * src)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#388: FILE: crypto/rsa.c:266:
+static inline _err rsa_mpi_copy(mpi **	dest, mpi * src)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#391: FILE: crypto/rsa.c:269:
+	_u32 * destbuf, * srcbuf;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#391: FILE: crypto/rsa.c:269:
+	_u32 * destbuf, * srcbuf;
 	                ^

ERROR:SPACING: space required before the open parenthesis '('
#395: FILE: crypto/rsa.c:273:
+	if(retval < 0)

ERROR:SPACING: space required before the open parenthesis '('
#401: FILE: crypto/rsa.c:279:
+	for(i = 0, s = src->size; i < s; i++)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#412: FILE: crypto/rsa.c:290:
+static void rsa_mpi_print(mpi * n, _u8 how)

ERROR:SPACING: space required before the open parenthesis '('
#423: FILE: crypto/rsa.c:301:
+	if(rsa_mpi_iszero(n) && how) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#424: FILE: crypto/rsa.c:302:
+		printk("0\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#429: FILE: crypto/rsa.c:307:
+	printk("%s", (n->sign)? "-": " ");

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#429: FILE: crypto/rsa.c:307:
+	printk("%s", (n->sign)? "-": " ");
 	                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#429: FILE: crypto/rsa.c:307:
+	printk("%s", (n->sign)? "-": " ");
 	                           ^

ERROR:SPACING: space required before the open parenthesis '('
#432: FILE: crypto/rsa.c:310:
+	for(i = n->size - 1; i >= 0; i--) {

ERROR:SPACING: space required before the open parenthesis '('
#436: FILE: crypto/rsa.c:314:
+		if(!limb && !started && how)

ERROR:SPACING: space required before the open parenthesis '('
#442: FILE: crypto/rsa.c:320:
+		for(j = 28; j >= 0; j -= 4) {

ERROR:SPACING: space required before the open parenthesis '('
#446: FILE: crypto/rsa.c:324:
+			if(!byte && !started && how)

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#450: FILE: crypto/rsa.c:328:
+			byte += (byte <= 0x09)? '0': 'a' - 0x0A;
 			                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#450: FILE: crypto/rsa.c:328:
+			byte += (byte <= 0x09)? '0': 'a' - 0x0A;
 			                           ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#451: FILE: crypto/rsa.c:329:
+			printk("%c", byte);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#455: FILE: crypto/rsa.c:333:
+	printk("\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#466: FILE: crypto/rsa.c:344:
+static inline _u8 rsa_mpi_iszero(mpi * n)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#469: FILE: crypto/rsa.c:347:
+	_u32 * buf;

ERROR:SPACING: space required before the open parenthesis '('
#473: FILE: crypto/rsa.c:351:
+	for(i = 0; i < s; i++)

ERROR:SPACING: space required before the open parenthesis '('
#474: FILE: crypto/rsa.c:352:
+		if(buf[i])

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#487: FILE: crypto/rsa.c:365:
+static _i8 rsa_mpi_compare(mpi * a, mpi * b)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#487: FILE: crypto/rsa.c:365:
+static _i8 rsa_mpi_compare(mpi * a, mpi * b)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#490: FILE: crypto/rsa.c:368:
+	_u32 * abuf, * bbuf;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#490: FILE: crypto/rsa.c:368:
+	_u32 * abuf, * bbuf;
 	             ^

ERROR:SPACING: space required before the open parenthesis '('
#493: FILE: crypto/rsa.c:371:
+	if(a->sign != b->sign)

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#494: FILE: crypto/rsa.c:372:
+		return (a->sign)? -1: 1;
 		                ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#494: FILE: crypto/rsa.c:372:
+		return (a->sign)? -1: 1;
 		                    ^

ERROR:SPACING: space required before the open parenthesis '('
#497: FILE: crypto/rsa.c:375:
+	if(a->size > b->size && rsa_mpi_clz(a) < (a->size - b->size) * 32)

ERROR:SPACING: space required before the open parenthesis '('
#499: FILE: crypto/rsa.c:377:
+	else if(a->size > b->size)

ERROR:SPACING: space required before the open parenthesis '('
#501: FILE: crypto/rsa.c:379:
+	else if(b->size > a->size && rsa_mpi_clz(b) < (b->size - a->size) * 32)

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#503: FILE: crypto/rsa.c:381:
+		return -1;
+	else

ERROR:SPACING: space required before the open parenthesis '('
#509: FILE: crypto/rsa.c:387:
+	for(i = j - 1; i >= 0; i--)

ERROR:SPACING: space required before the open parenthesis '('
#510: FILE: crypto/rsa.c:388:
+		if(abuf[i] > bbuf[i])

ERROR:SPACING: space required before the open parenthesis '('
#512: FILE: crypto/rsa.c:390:
+		else if(abuf[i] < bbuf[i])

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#525: FILE: crypto/rsa.c:403:
+static _u64 rsa_mpi_clz( mpi * n)

ERROR:SPACING: space prohibited after that open parenthesis '('
#525: FILE: crypto/rsa.c:403:
+static _u64 rsa_mpi_clz( mpi * n)

ERROR:SPACING: space required before the open parenthesis '('
#531: FILE: crypto/rsa.c:409:
+	for(i = n->size - 1; i >= 0; i--) {

ERROR:SPACING: space required before the open parenthesis '('
#534: FILE: crypto/rsa.c:412:
+		if(!limb) {

ERROR:SPACING: space required before the open parenthesis '('
#539: FILE: crypto/rsa.c:417:
+		while(!(limb & 0x80000000)) {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#553: FILE: crypto/rsa.c:431:
+ * @n: ^I  the mpi$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#556: FILE: crypto/rsa.c:434:
+static inline void rsa_mpi_complement(mpi * n, _u8 which)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#559: FILE: crypto/rsa.c:437:
+	_u32 * buf;

ERROR:SPACING: space required before the open parenthesis '('
#563: FILE: crypto/rsa.c:441:
+	for(i = 0; i < s; i++)

ERROR:SPACING: space required before the open parenthesis '('
#565: FILE: crypto/rsa.c:443:
+	if(!which)

ERROR:SPACING: space required before the open parenthesis '('
#569: FILE: crypto/rsa.c:447:
+	for(i = 0; i < s; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#571: FILE: crypto/rsa.c:449:
+		if(buf[i])

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#581: FILE: crypto/rsa.c:459:
+static inline void rsa_mpi_canonicalize(mpi * n)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#584: FILE: crypto/rsa.c:462:
+	_u32 * buf = n->data;

ERROR:SPACING: space required before the open parenthesis '('
#586: FILE: crypto/rsa.c:464:
+	for(i = n->size - 1; i >= 0; i--)

ERROR:SPACING: space required before the open parenthesis '('
#587: FILE: crypto/rsa.c:465:
+		if(!buf[i] && n->size > 1)

WARNING:REPEATED_WORD: Possible repeated word: 'pointer'
#598: FILE: crypto/rsa.c:476:
+ * @n: 	  pointer pointer to the allocated mpi

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#598: FILE: crypto/rsa.c:476:
+ * @n: ^I  pointer pointer to the allocated mpi$

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#601: FILE: crypto/rsa.c:479:
+static _err rsa_mpi_shift(mpi ** n, _i64 bits)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#604: FILE: crypto/rsa.c:482:
+	_u32 * buf;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#605: FILE: crypto/rsa.c:483:
+	mpi * handle;

ERROR:SPACING: space required before the open parenthesis '('
#609: FILE: crypto/rsa.c:487:
+	if(!bits || rsa_mpi_iszero(handle))

ERROR:SPACING: space required before the open parenthesis '('
#613: FILE: crypto/rsa.c:491:
+	if(bits > 0) {

ERROR:SPACING: space required before the open parenthesis '('
#618: FILE: crypto/rsa.c:496:
+		for(i = 0; i < size; i++)

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#619: FILE: crypto/rsa.c:497:
+			buf[i] = (i + distance >= size)? 0x00: buf[i + distance];
 			                               ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#619: FILE: crypto/rsa.c:497:
+			buf[i] = (i + distance >= size)? 0x00: buf[i + distance];
 			                                     ^

ERROR:SPACING: space required before the open parenthesis '('
#623: FILE: crypto/rsa.c:501:
+		if(bits) {

ERROR:SPACING: space required before the open parenthesis '('
#626: FILE: crypto/rsa.c:504:
+			for(i = 0; i < size; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#628: FILE: crypto/rsa.c:506:
+				if(i < size - 1)

ERROR:SPACING: space required before the open parenthesis '('
#644: FILE: crypto/rsa.c:522:
+	if(lz < bits) {

ERROR:SPACING: space required before the open parenthesis '('
#649: FILE: crypto/rsa.c:527:
+		if(retval < 0)

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#653: FILE: crypto/rsa.c:531:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#653: FILE: crypto/rsa.c:531:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#661: FILE: crypto/rsa.c:539:
+	if(distance) {

ERROR:SPACING: space required before the open parenthesis '('
#663: FILE: crypto/rsa.c:541:
+		for(i = handle->size - distance - 1; i >= 0; i--)

ERROR:SPACING: space required before the open parenthesis '('
#666: FILE: crypto/rsa.c:544:
+		for(i = 0; i < distance; i++)

ERROR:SPACING: space required before the open parenthesis '('
#673: FILE: crypto/rsa.c:551:
+	if(bits)

ERROR:SPACING: space required before the open parenthesis '('
#674: FILE: crypto/rsa.c:552:
+		for(i = handle->size - 1; i >= 0; i--) {

ERROR:SPACING: space required before the open parenthesis '('
#676: FILE: crypto/rsa.c:554:
+			if(i > 0)

WARNING:REPEATED_WORD: Possible repeated word: 'pointer'
#688: FILE: crypto/rsa.c:566:
+ * @res: pointer pointer to the result

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#692: FILE: crypto/rsa.c:570:
+static _err rsa_mpi_multiply(mpi ** res, mpi *	a, mpi * b)

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#692: FILE: crypto/rsa.c:570:
+static _err rsa_mpi_multiply(mpi ** res, mpi *	a, mpi * b)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#692: FILE: crypto/rsa.c:570:
+static _err rsa_mpi_multiply(mpi ** res, mpi *	a, mpi * b)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#695: FILE: crypto/rsa.c:573:
+	_u32 * buf, * abuf, * bbuf;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#695: FILE: crypto/rsa.c:573:
+	_u32 * buf, * abuf, * bbuf;
 	            ^

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#695: FILE: crypto/rsa.c:573:
+	_u32 * buf, * abuf, * bbuf;
 	                    ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#697: FILE: crypto/rsa.c:575:
+	mpi * handle;

ERROR:SPACING: space required before the open parenthesis '('
#704: FILE: crypto/rsa.c:582:
+	if(retval < 0)

ERROR:SPACING: space required before the open parenthesis '('
#714: FILE: crypto/rsa.c:592:
+	for(i = 0; i < bsize; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#716: FILE: crypto/rsa.c:594:
+		for(j = 0; j < asize; j++)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#717: FILE: crypto/rsa.c:595:
+			buf[i + j] = tmp = buf[i + j] + (abuf[j] * (_u64)bbuf[i]) + (tmp >> 32);

WARNING:REPEATED_WORD: Possible repeated word: 'pointer'
#730: FILE: crypto/rsa.c:608:
+ * @res: pointer pointer to the result

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#734: FILE: crypto/rsa.c:612:
+static _err rsa_mpi_subtract(mpi ** res, mpi * a, mpi * b)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#734: FILE: crypto/rsa.c:612:
+static _err rsa_mpi_subtract(mpi ** res, mpi * a, mpi * b)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#734: FILE: crypto/rsa.c:612:
+static _err rsa_mpi_subtract(mpi ** res, mpi * a, mpi * b)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#736: FILE: crypto/rsa.c:614:
+	_u32 * buf, * abuf, * bbuf;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#736: FILE: crypto/rsa.c:614:
+	_u32 * buf, * abuf, * bbuf;
 	            ^

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#736: FILE: crypto/rsa.c:614:
+	_u32 * buf, * abuf, * bbuf;
 	                    ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#738: FILE: crypto/rsa.c:616:
+	mpi * handle;

ERROR:SPACING: space required before the open parenthesis '('
#742: FILE: crypto/rsa.c:620:
+	if((retval = rsa_mpi_resize(res, size, true)) < 0 ||

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#742: FILE: crypto/rsa.c:620:
+	if((retval = rsa_mpi_resize(res, size, true)) < 0 ||

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#753: FILE: crypto/rsa.c:631:
+	if(a->sign == b->sign) {
+		 _u8 borrow = false;

ERROR:SPACING: space required before the open parenthesis '('
#753: FILE: crypto/rsa.c:631:
+	if(a->sign == b->sign) {

WARNING:TABSTOP: Statements should start on a tabstop
#754: FILE: crypto/rsa.c:632:
+		 _u8 borrow = false;

WARNING:TABSTOP: Statements should start on a tabstop
#755: FILE: crypto/rsa.c:633:
+		 _u32 limb;

ERROR:SPACING: space required before the open parenthesis '('
#757: FILE: crypto/rsa.c:635:
+		for(i = 0; i < size; i++) {

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#763: FILE: crypto/rsa.c:641:
+		handle->sign = (borrow)? !b->sign: b->sign;
 		                       ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#763: FILE: crypto/rsa.c:641:
+		handle->sign = (borrow)? !b->sign: b->sign;
 		                                 ^

ERROR:SPACING: space required before the open parenthesis '('
#764: FILE: crypto/rsa.c:642:
+		if(borrow)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#768: FILE: crypto/rsa.c:646:
+	else {
+		 _u8 carry = false;

CHECK:BRACES: Unbalanced braces around else statement
#768: FILE: crypto/rsa.c:646:
+	else {

WARNING:TABSTOP: Statements should start on a tabstop
#769: FILE: crypto/rsa.c:647:
+		 _u8 carry = false;

WARNING:TABSTOP: Statements should start on a tabstop
#770: FILE: crypto/rsa.c:648:
+		 _u64 sum;

ERROR:SPACING: space required before the open parenthesis '('
#772: FILE: crypto/rsa.c:650:
+		for(i = 0; i < size; i++) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#773: FILE: crypto/rsa.c:651:
+			buf[i] = sum = abuf[i] + bbuf[i] + carry;

WARNING:REPEATED_WORD: Possible repeated word: 'pointer'
#791: FILE: crypto/rsa.c:669:
+ * @res: pointer pointer to the result

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#795: FILE: crypto/rsa.c:673:
+static _err rsa_mpi_remainder(mpi ** res, mpi * a, mpi * b)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#795: FILE: crypto/rsa.c:673:
+static _err rsa_mpi_remainder(mpi ** res, mpi * a, mpi * b)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#795: FILE: crypto/rsa.c:673:
+static _err rsa_mpi_remainder(mpi ** res, mpi * a, mpi * b)

ERROR:SPACING: space required before the open parenthesis '('
#803: FILE: crypto/rsa.c:681:
+	if((retval = rsa_mpi_copy(&aux[0], a)) < 0 ||

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#803: FILE: crypto/rsa.c:681:
+	if((retval = rsa_mpi_copy(&aux[0], a)) < 0 ||

ERROR:SPACING: space required before the open parenthesis '('
#812: FILE: crypto/rsa.c:690:
+	if(retval < 0)

ERROR:SPACING: space required before the open parenthesis '('
#815: FILE: crypto/rsa.c:693:
+	for(i = 0; i <= k; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#817: FILE: crypto/rsa.c:695:
+		if(retval < 0)

ERROR:SPACING: space required before the open parenthesis '('
#820: FILE: crypto/rsa.c:698:
+		if(!(*res)->sign) {

ERROR:SPACING: space required before the open parenthesis '('
#822: FILE: crypto/rsa.c:700:
+			if(retval < 0)

ERROR:SPACING: space required before the open parenthesis '('
#827: FILE: crypto/rsa.c:705:
+		if(retval < 0)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#842: FILE: crypto/rsa.c:720:
+static _u32 rsa_modinv(mpi * n)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#846: FILE: crypto/rsa.c:724:
+	pow1 = y = 1;

ERROR:SPACING: space required before the open parenthesis '('
#849: FILE: crypto/rsa.c:727:
+	for(i = 2; i <= RSA_RADIX_BITS; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#852: FILE: crypto/rsa.c:730:
+		if(pow1 < tmp)

WARNING:REPEATED_WORD: Possible repeated word: 'pointer'
#866: FILE: crypto/rsa.c:744:
+ * @res: pointer pointer to the result

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#871: FILE: crypto/rsa.c:749:
+static _err rsa_monpro(mpi ** res, mpi * a, mpi * b, mpi * n)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#871: FILE: crypto/rsa.c:749:
+static _err rsa_monpro(mpi ** res, mpi * a, mpi * b, mpi * n)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#871: FILE: crypto/rsa.c:749:
+static _err rsa_monpro(mpi ** res, mpi * a, mpi * b, mpi * n)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#871: FILE: crypto/rsa.c:749:
+static _err rsa_monpro(mpi ** res, mpi * a, mpi * b, mpi * n)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#874: FILE: crypto/rsa.c:752:
+	_u32 * buf, * nbuf, * tmp, m;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#874: FILE: crypto/rsa.c:752:
+	_u32 * buf, * nbuf, * tmp, m;
 	            ^

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#874: FILE: crypto/rsa.c:752:
+	_u32 * buf, * nbuf, * tmp, m;
 	                    ^

ERROR:SPACING: space required before the open parenthesis '('
#881: FILE: crypto/rsa.c:759:
+	if(retval < 0)

ERROR:SPACING: space required before the open parenthesis '('
#884: FILE: crypto/rsa.c:762:
+	if(retval < 0)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#887: FILE: crypto/rsa.c:765:
+	tmp = buf = aux[2]->data;

ERROR:SPACING: space required before the open parenthesis '('
#890: FILE: crypto/rsa.c:768:
+	for(i = 0; i < nsize; i++, tmp++) {

ERROR:SPACING: space required before the open parenthesis '('
#894: FILE: crypto/rsa.c:772:
+		for(j = 0; j < nsize; j++)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#895: FILE: crypto/rsa.c:773:
+			tmp[j] = product = tmp[j] + (m * (_u64)nbuf[j]) + (product >> 32);

ERROR:SPACING: space required before the open parenthesis '('
#897: FILE: crypto/rsa.c:775:
+		for(j = nsize + i; j < k; j++)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#898: FILE: crypto/rsa.c:776:
+			buf[j] = product = buf[j] + (product >> 32);

ERROR:SPACING: space required before the open parenthesis '('
#902: FILE: crypto/rsa.c:780:
+	if(retval < 0)

ERROR:SPACING: space required before the open parenthesis '('
#906: FILE: crypto/rsa.c:784:
+	if(retval < 0)

ERROR:SPACING: space required before the open parenthesis '('
#909: FILE: crypto/rsa.c:787:
+	if(rsa_mpi_compare(aux[2], n) >= 0) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#909: FILE: crypto/rsa.c:787:
+	if(rsa_mpi_compare(aux[2], n) >= 0) {
[...]
+	else if((retval = rsa_mpi_copy(res, aux[2])) < 0)
[...]

ERROR:SPACING: space required before the open parenthesis '('
#910: FILE: crypto/rsa.c:788:
+		if((retval = rsa_mpi_subtract(&aux[3], aux[2], n)) < 0 ||

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#910: FILE: crypto/rsa.c:788:
+		if((retval = rsa_mpi_subtract(&aux[3], aux[2], n)) < 0 ||

ERROR:SPACING: space required before the open parenthesis '('
#914: FILE: crypto/rsa.c:792:
+	else if((retval = rsa_mpi_copy(res, aux[2])) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#914: FILE: crypto/rsa.c:792:
+	else if((retval = rsa_mpi_copy(res, aux[2])) < 0)

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#914: FILE: crypto/rsa.c:792:
+	}
+	else if((retval = rsa_mpi_copy(res, aux[2])) < 0)

WARNING:REPEATED_WORD: Possible repeated word: 'pointer'
#924: FILE: crypto/rsa.c:802:
+ * @res: pointer pointer to the result

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#929: FILE: crypto/rsa.c:807:
+static _err rsa_modexp(mpi ** res, mpi * m, mpi * e, mpi * n)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#929: FILE: crypto/rsa.c:807:
+static _err rsa_modexp(mpi ** res, mpi * m, mpi * e, mpi * n)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#929: FILE: crypto/rsa.c:807:
+static _err rsa_modexp(mpi ** res, mpi * m, mpi * e, mpi * n)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#929: FILE: crypto/rsa.c:807:
+static _err rsa_modexp(mpi ** res, mpi * m, mpi * e, mpi * n)

ERROR:SPACING: space required before the open parenthesis '('
#936: FILE: crypto/rsa.c:814:
+	if(m->size != n->size || rsa_mpi_compare(m, n) > 0)

ERROR:SPACING: space required before the open parenthesis '('
#944: FILE: crypto/rsa.c:822:
+	if((retval = rsa_mpi_copy(&aux[5], m)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#944: FILE: crypto/rsa.c:822:
+	if((retval = rsa_mpi_copy(&aux[5], m)) < 0)

ERROR:SPACING: space required before the open parenthesis '('
#946: FILE: crypto/rsa.c:824:
+	if((retval = rsa_mpi_shift(&aux[5], -(n->size * 32))) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#946: FILE: crypto/rsa.c:824:
+	if((retval = rsa_mpi_shift(&aux[5], -(n->size * 32))) < 0)

ERROR:SPACING: space required before the open parenthesis '('
#948: FILE: crypto/rsa.c:826:
+	if((retval = rsa_mpi_remainder(&aux[4], aux[5], n)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#948: FILE: crypto/rsa.c:826:
+	if((retval = rsa_mpi_remainder(&aux[4], aux[5], n)) < 0)

ERROR:SPACING: space required before the open parenthesis '('
#954: FILE: crypto/rsa.c:832:
+	if((retval = rsa_mpi_set(&aux[5], "\x01", 1)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#954: FILE: crypto/rsa.c:832:
+	if((retval = rsa_mpi_set(&aux[5], "\x01", 1)) < 0)

ERROR:SPACING: space required before the open parenthesis '('
#956: FILE: crypto/rsa.c:834:
+	if((retval = rsa_mpi_shift(&aux[5], -(n->size * 32))) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#956: FILE: crypto/rsa.c:834:
+	if((retval = rsa_mpi_shift(&aux[5], -(n->size * 32))) < 0)

ERROR:SPACING: space required before the open parenthesis '('
#958: FILE: crypto/rsa.c:836:
+	if((retval = rsa_mpi_remainder(&aux[7], aux[5], n)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#958: FILE: crypto/rsa.c:836:
+	if((retval = rsa_mpi_remainder(&aux[7], aux[5], n)) < 0)

ERROR:SPACING: space required before the open parenthesis '('
#965: FILE: crypto/rsa.c:843:
+	for(i = e->size - 1; i >= 0; i--) {

ERROR:SPACING: space required before the open parenthesis '('
#970: FILE: crypto/rsa.c:848:
+		for(j = 0; j < 32; j++) {

ERROR:SPACING: space required before the open parenthesis '('
#974: FILE: crypto/rsa.c:852:
+			if(!(limb & 0x80000000) && !started) {

ERROR:SPACING: space required before the open parenthesis '('
#982: FILE: crypto/rsa.c:860:
+			if(retval < 0)

ERROR:SPACING: space required before the open parenthesis '('
#985: FILE: crypto/rsa.c:863:
+			if(limb & 0x80000000) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#985: FILE: crypto/rsa.c:863:
+			if(limb & 0x80000000) {
[...]
+			else if((retval = rsa_mpi_copy(&aux[7], aux[5])) < 0)
[...]

ERROR:SPACING: space required before the open parenthesis '('
#988: FILE: crypto/rsa.c:866:
+				if(retval < 0)

ERROR:SPACING: space required before the open parenthesis '('
#991: FILE: crypto/rsa.c:869:
+			else if((retval = rsa_mpi_copy(&aux[7], aux[5])) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#991: FILE: crypto/rsa.c:869:
+			else if((retval = rsa_mpi_copy(&aux[7], aux[5])) < 0)

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#991: FILE: crypto/rsa.c:869:
+			}
+			else if((retval = rsa_mpi_copy(&aux[7], aux[5])) < 0)

ERROR:SPACING: space required before the open parenthesis '('
#1000: FILE: crypto/rsa.c:878:
+	if(retval < 0)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1015: FILE: crypto/rsa.h:1:
+#ifndef _KM_RSA_H_

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1023: FILE: crypto/rsa.h:9:
+#define RSA_AUX_COUNT ^I^ICONFIG_RSA_AUXCOUNT$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1024: FILE: crypto/rsa.h:10:
+#define RSA_AUX_SIZE ^I^ICONFIG_RSA_AUXSIZE$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1036: FILE: crypto/rsa.h:22:
+^I#define rsa_debug(fmt, args...) ^I^I^I   \$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1037: FILE: crypto/rsa.h:23:
+^I{ ^I^I^I^I^I^I^I   \$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1038: FILE: crypto/rsa.h:24:
+^I^Iif(printk_ratelimit()) ^I^I^I^I   \$

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#1038: FILE: crypto/rsa.h:24:
+		if(printk_ratelimit()) 				   \

ERROR:SPACING: space required before the open parenthesis '('
#1038: FILE: crypto/rsa.h:24:
+		if(printk_ratelimit()) 				   \

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1039: FILE: crypto/rsa.h:25:
+			printk(RSA_LOGLEVEL "rsa: " fmt, ## args); \

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1045: FILE: crypto/rsa.h:31:
+#define rsa_echo(fmt, args...) printk(RSA_LOGLEVEL "rsa: " fmt, ## args)

WARNING:TYPO_SPELLING: 'auxilliary' may be misspelled - perhaps 'auxiliary'?
#1048: FILE: crypto/rsa.h:34:
+	#error "Rsa module needs at least 8 auxilliary mpis"
 	                                    ^^^^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1051: FILE: crypto/rsa.h:37:
+typedef signed char ^I^I_i8;$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1051: FILE: crypto/rsa.h:37:
+typedef signed char 		_i8;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1052: FILE: crypto/rsa.h:38:
+typedef signed short		_i16;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1053: FILE: crypto/rsa.h:39:
+typedef signed int ^I^I_i32;$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1053: FILE: crypto/rsa.h:39:
+typedef signed int 		_i32;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1054: FILE: crypto/rsa.h:40:
+typedef signed long long	_i64;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1055: FILE: crypto/rsa.h:41:
+typedef unsigned char ^I^I_u8;$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1055: FILE: crypto/rsa.h:41:
+typedef unsigned char 		_u8;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1056: FILE: crypto/rsa.h:42:
+typedef unsigned short		_u16;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1057: FILE: crypto/rsa.h:43:
+typedef unsigned int ^I^I_u32;$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1057: FILE: crypto/rsa.h:43:
+typedef unsigned int 		_u32;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1058: FILE: crypto/rsa.h:44:
+typedef unsigned long long	_u64;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1059: FILE: crypto/rsa.h:45:
+typedef signed int		_err;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1062: FILE: crypto/rsa.h:48:
+typedef struct mpi {

ERROR:POINTER_LOCATION: "foo	* bar" should be "foo	*bar"
#1063: FILE: crypto/rsa.h:49:
+	_u32	* data;	/* _u32 array holding the number absolute value */

ERROR:POINTER_LOCATION: "foo __exit	bar" should be "foo __exit bar"
#1071: FILE: crypto/rsa.h:57:
+static void __exit	rsa_unload(void);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1075: FILE: crypto/rsa.h:61:
+static void ^I^Irsa_mpi_free(mpi *);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1076: FILE: crypto/rsa.h:62:
+static _err ^I^Irsa_mpi_init(mpi **, _u8 *, _u32, _u32);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1077: FILE: crypto/rsa.h:63:
+static _err ^I^Irsa_mpi_resize(mpi **, _i32, _u8);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1078: FILE: crypto/rsa.h:64:
+static _err ^I^Irsa_mpi_set(mpi **, _u8 *, _u32);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1079: FILE: crypto/rsa.h:65:
+static inline _err ^Irsa_mpi_copy(mpi **, mpi *);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1080: FILE: crypto/rsa.h:66:
+static void ^I^Irsa_mpi_print(mpi *, _u8);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1083: FILE: crypto/rsa.h:69:
+static inline _u8 ^Irsa_mpi_iszero(mpi *);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1084: FILE: crypto/rsa.h:70:
+static _i8 ^I^Irsa_mpi_compare(mpi *, mpi *);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1085: FILE: crypto/rsa.h:71:
+static _u64^I ^Irsa_mpi_clz(mpi *);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1086: FILE: crypto/rsa.h:72:
+static inline void ^Irsa_mpi_complement(mpi *, _u8);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1087: FILE: crypto/rsa.h:73:
+static inline void ^Irsa_mpi_canonicalize(mpi *);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1091: FILE: crypto/rsa.h:77:
+static _err ^I^Irsa_mpi_multiply(mpi **, mpi *, mpi *);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1092: FILE: crypto/rsa.h:78:
+static _err ^I^Irsa_mpi_subtract(mpi **, mpi *, mpi *);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1093: FILE: crypto/rsa.h:79:
+static _err ^I^Irsa_mpi_remainder(mpi **, mpi *, mpi *);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1097: FILE: crypto/rsa.h:83:
+static _err ^I^Irsa_monpro(mpi **, mpi *, mpi *, mpi *);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1098: FILE: crypto/rsa.h:84:
+static _err ^I^Irsa_modexp(mpi **, mpi *, mpi *, mpi *);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000454462.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 199 errors, 78 warnings, 12 checks, 1033 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000454462.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
