WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
Fixing this is a mess. It turns out there is tons of crap buried in a header

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#84: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#132: FILE: drivers/message/i2o/exec-osm.c:392:
+	if (i2o_dma_realloc(dev, &c->dlct,
+					le32_to_cpu(sb->expected_lct_size)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around sg_list[sg_index]
#195: FILE: drivers/message/i2o/i2o_config.c:872:
+			p = &(sg_list[sg_index]);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#279: FILE: drivers/message/i2o/memory.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:BRACES: braces {} should be used on all arms of this statement
#315: FILE: drivers/message/i2o/memory.c:37:
+	if (c->pae_support) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#322: FILE: drivers/message/i2o/memory.c:44:
+	} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sg_count > 8'
#325: FILE: drivers/message/i2o/memory.c:47:
+	if (c->short_req && (sg_count > 8))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#332: FILE: drivers/message/i2o/memory.c:54:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#350: FILE: drivers/message/i2o/memory.c:72:
+dma_addr_t i2o_dma_map_single(struct i2o_controller *c, void *ptr,
+					    size_t size,

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#352: FILE: drivers/message/i2o/memory.c:74:
+					    u32 ** sg_ptr)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#406: FILE: drivers/message/i2o/memory.c:128:
+int i2o_dma_map_sg(struct i2o_controller *c, struct scatterlist *sg,
+	    int sg_count, enum dma_data_direction direction, u32 ** sg_ptr)

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#406: FILE: drivers/message/i2o/memory.c:128:
+	    int sg_count, enum dma_data_direction direction, u32 ** sg_ptr)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pdev->dma_mask == DMA_64BIT_MASK'
#466: FILE: drivers/message/i2o/memory.c:188:
+	if ((sizeof(dma_addr_t) > 4) && (pdev->dma_mask == DMA_64BIT_MASK)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#478: FILE: drivers/message/i2o/memory.c:200:
+			printk(KERN_WARNING "i2o: unable to set 64-bit DMA");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#491: FILE: drivers/message/i2o/memory.c:213:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#512: FILE: drivers/message/i2o/memory.c:234:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#549: FILE: drivers/message/i2o/memory.c:271:
+int i2o_pool_alloc(struct i2o_pool *pool, const char *name,
+				 size_t size, int min_nr)

WARNING:MISSING_EOF_NEWLINE: adding a line without newline at end of file
#591: FILE: drivers/message/i2o/memory.c:313:
+EXPORT_SYMBOL_GPL(i2o_pool_free);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#631: FILE: drivers/message/i2o/pci.c:210:
+	if (i2o_dma_alloc(dev, &c->out_queue,
+		I2O_MAX_OUTBOUND_MSG_FRAMES * I2O_OUTBOUND_MSG_FRAME_SIZE *

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#699: FILE: include/linux/i2o.h:693:
+extern u16 i2o_sg_tablesize(struct i2o_controller *c, u16 body_size);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#700: FILE: include/linux/i2o.h:694:
+extern dma_addr_t i2o_dma_map_single(struct i2o_controller *c, void *ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#701: FILE: include/linux/i2o.h:695:
+extern dma_addr_t i2o_dma_map_single(struct i2o_controller *c, void *ptr,
 					    size_t size,

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#756: FILE: include/linux/i2o.h:697:
+					    u32 ** sg_ptr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#757: FILE: include/linux/i2o.h:698:
+extern int i2o_dma_map_sg(struct i2o_controller *c,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#758: FILE: include/linux/i2o.h:699:
+extern int i2o_dma_map_sg(struct i2o_controller *c,
 				 struct scatterlist *sg, int sg_count,

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#939: FILE: include/linux/i2o.h:701:
+				 u32 ** sg_ptr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#940: FILE: include/linux/i2o.h:702:
+extern int i2o_dma_alloc(struct device *dev, struct i2o_dma *addr, size_t len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#941: FILE: include/linux/i2o.h:703:
+extern void i2o_dma_free(struct device *dev, struct i2o_dma *addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#942: FILE: include/linux/i2o.h:704:
+extern int i2o_dma_realloc(struct device *dev, struct i2o_dma *addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#943: FILE: include/linux/i2o.h:705:
+extern int i2o_dma_realloc(struct device *dev, struct i2o_dma *addr,
+								size_t len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#944: FILE: include/linux/i2o.h:706:
+extern int i2o_pool_alloc(struct i2o_pool *pool, const char *name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#945: FILE: include/linux/i2o.h:707:
+extern int i2o_pool_alloc(struct i2o_pool *pool, const char *name,
+				 size_t size, int min_nr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#946: FILE: include/linux/i2o.h:708:
+extern void i2o_pool_free(struct i2o_pool *pool);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000247374.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 5 warnings, 25 checks, 803 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000247374.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
