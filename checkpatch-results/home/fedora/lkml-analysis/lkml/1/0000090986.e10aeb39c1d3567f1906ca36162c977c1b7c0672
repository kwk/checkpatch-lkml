CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#43: 
>                                 * soon as the queue becomes uncongested.
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#44: 
>                                 */
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#45: 
>                                inode->i_state |= I_DIRTY_PAGES;
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#46: 
> -                               if (wbc->nr_to_write <= 0) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#47: 
> +                               if (wbc->nr_to_write <= 0 ||
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#48: 
> +                                   wbc->encountered_congestion) {
    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#49: 
>                                        /*
  ^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#50: 
>                                         * slice used up: queue for next turn

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#50: 
>                                         * slice used up: queue for next turn
  ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#51: 
>                                         */
  ^

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#61: FILE: fs/fs-writeback.c:323:
)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:CODE_INDENT: code indent should use tabs where possible
#64: FILE: fs/fs-writeback.c:326:
+                        * It may well have just encountered congestion$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: fs/fs-writeback.c:328:
+                       inode->i_state |= I_DIRTY_PAGES;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: fs/fs-writeback.c:328:
+                       inode->i_state |= I_DIRTY_PAGES;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: fs/fs-writeback.c:329:
+                       if (wbc->nr_to_write <= 0 ||     /* sliced used up */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: fs/fs-writeback.c:329:
+                       if (wbc->nr_to_write <= 0 ||     /* sliced used up */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#104: FILE: fs/fs-writeback.c:329:
+                       if (wbc->nr_to_write <= 0 ||     /* sliced used up */
[...]
+                               requeue_io(inode);

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: fs/fs-writeback.c:330:
+                            wbc->encountered_congestion)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: fs/fs-writeback.c:330:
+                            wbc->encountered_congestion)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#106: FILE: fs/fs-writeback.c:331:
+                               requeue_io(inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: fs/fs-writeback.c:331:
+                               requeue_io(inode);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: fs/fs-writeback.c:332:
+                       else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: fs/fs-writeback.c:332:
+                       else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#107: FILE: fs/fs-writeback.c:332:
+                       else {
[...]
                                redirty_tail(inode);

CHECK:BRACES: Unbalanced braces around else statement
#107: FILE: fs/fs-writeback.c:332:
+                       else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: fs/fs-writeback.c:333:
+                               /* somehow blocked: retry later */$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000090986.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 8 warnings, 10 checks, 52 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000090986.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
