ERROR:SPACING: space prohibited before that ':' (ctx:WxV)
#84: FILE: drivers/s390/cio/chsc.c:31:
+	u16 :10;
 	    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ':' (ctx:WxV)
#86: FILE: drivers/s390/cio/chsc.c:33:
+	u16 :4;
 	    ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxV)
#88: FILE: drivers/s390/cio/chsc.c:35:
+	u16 :16;
 	    ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxV)
#90: FILE: drivers/s390/cio/chsc.c:37:
+	u32 :32;
 	    ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxV)
#92: FILE: drivers/s390/cio/chsc.c:39:
+	u32 :32;
 	    ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#104: FILE: drivers/s390/cio/chsc.c:51:
+} __attribute__ ((packed));

CHECK:SPACING: No space is necessary after a cast
#119: FILE: drivers/s390/cio/chsc.c:65:
+	ssd_area = (struct chsc_ssd_area *) page;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ssd_area->st != 0'
#251: FILE: drivers/s390/cio/chsc.c:92:
+	if ((ssd_area->st != 0) && (ssd_area->st != 2))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ssd_area->st != 2'
#251: FILE: drivers/s390/cio/chsc.c:92:
+	if ((ssd_area->st != 0) && (ssd_area->st != 2))

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#455: FILE: drivers/s390/cio/chsc.h:78:
+};
+extern int chsc_get_ssd_info(struct subchannel_id schid,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#455: FILE: drivers/s390/cio/chsc.h:78:
+extern int chsc_get_ssd_info(struct subchannel_id schid,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#549: FILE: drivers/s390/cio/css.c:164:
+		 * memory allocation. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000439912.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 2 warnings, 5 checks, 535 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000439912.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
