WARNING:NEW_TYPEDEFS: do not add new typedefs
#133: FILE: include/linux/mm_types.h:18:
+typedef atomic_long_t mm_counter_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#135: FILE: include/linux/mm_types.h:20:
+typedef unsigned long mm_counter_t;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#152: FILE: include/linux/mm_types.h:102:
+	struct mm_struct * vm_mm;	/* The address space we belong to. */

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#155: FILE: include/linux/mm_types.h:105:
+	unsigned long vm_end;		/* The first byte after our end address
+					   within vm_mm. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#155: FILE: include/linux/mm_types.h:105:
+					   within vm_mm. */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#191: FILE: include/linux/mm_types.h:141:
+	struct vm_operations_struct * vm_ops;

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#191: FILE: include/linux/mm_types.h:141:
+	struct vm_operations_struct * vm_ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#195: FILE: include/linux/mm_types.h:145:
+	unsigned long vm_pgoff;		/* Offset (within vm_file) in PAGE_SIZE
+					   units, *not* PAGE_CACHE_SIZE */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#195: FILE: include/linux/mm_types.h:145:
+					   units, *not* PAGE_CACHE_SIZE */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#196: FILE: include/linux/mm_types.h:146:
+	struct file * vm_file;		/* File we map to (can be NULL). */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#197: FILE: include/linux/mm_types.h:147:
+	void * vm_private_data;		/* was vm_pte (shared mem) */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#209: FILE: include/linux/mm_types.h:159:
+	struct vm_area_struct * mmap;		/* list of VMAs */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#211: FILE: include/linux/mm_types.h:161:
+	struct vm_area_struct * mmap_cache;	/* last find_vma result */

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#212: FILE: include/linux/mm_types.h:162:
+	unsigned long (*get_unmapped_area) (struct file *filp,
 	                                                 ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACING: Unnecessary space before function pointer arguments
#212: FILE: include/linux/mm_types.h:162:
+	unsigned long (*get_unmapped_area) (struct file *filp,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#213: FILE: include/linux/mm_types.h:163:
+	unsigned long (*get_unmapped_area) (struct file *filp,
+				unsigned long addr, unsigned long len,

WARNING:SPACING: Unnecessary space before function pointer arguments
#215: FILE: include/linux/mm_types.h:165:
+	void (*unmap_area) (struct mm_struct *mm, unsigned long addr);

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#218: FILE: include/linux/mm_types.h:168:
+	unsigned long cached_hole_size; 	/* if non-zero, the largest hole below free_area_cache */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#218: FILE: include/linux/mm_types.h:168:
+^Iunsigned long cached_hole_size; ^I/* if non-zero, the largest hole below free_area_cache */$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#220: FILE: include/linux/mm_types.h:170:
+	pgd_t * pgd;

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#222: FILE: include/linux/mm_types.h:172:
+	atomic_t mm_count;			/* How many references to "struct mm_struct" (users count as 1) */

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#227: FILE: include/linux/mm_types.h:177:
+	struct list_head mmlist;		/* List of maybe swapped mm's.	These are globally strung

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000411959.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 14 warnings, 1 checks, 338 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000411959.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
