WARNING:TYPO_SPELLING: 'registerd' may be misspelled - perhaps 'registered'?
#21: 
Subject: [PATCH 6/8][mmotm] kcore use registerd physmem information
                                      ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#54: 
 - fixed non-NUMA compile error pointed out by Jiri Slaby <jirislaby@gmail.com> 

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#294: FILE: fs/proc/kcore.c:105:
+}
+/*

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#303: FILE: fs/proc/kcore.c:114:
+	if (kcore_need_update) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#309: FILE: fs/proc/kcore.c:120:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#317: FILE: fs/proc/kcore.c:128:
+
+

CHECK:SPACING: No space is necessary after a cast
#356: FILE: fs/proc/kcore.c:167:
+	if (ent->addr < (unsigned long) __va(0))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'inialized' may be misspelled - perhaps 'initialized'?
#385: FILE: fs/proc/kcore.c:196:
+	/* Not inialized....update now */
 	       ^^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#390: FILE: fs/proc/kcore.c:201:
+		unsigned long node_end;
+		node_end  = NODE_DATA(nid)->node_start_pfn +

CHECK:LINE_SPACING: Please don't use multiple blank lines
#412: FILE: fs/proc/kcore.c:490:
 
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#413: FILE: fs/proc/kcore.c:491:
+static int open_kcore(struct inode *inode, struct file *filp)
                                                         ^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#422: FILE: fs/proc/kcore.c:500:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#444: FILE: fs/proc/kcore.c:522:
+
+

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#453: FILE: fs/proc/kcore.c:543:
+	proc_root_kcore = proc_create("kcore", S_IRUSR, NULL,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078020.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 8 checks, 318 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078020.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
