ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#86: FILE: net/core/scm.c:46:
+#define init_new_task_struct_shadow(shadow) (shadow)->scm_work_list = NULL

ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: net/core/scm.c:48:
+                    task_struct, init_new_task_struct_shadow);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: net/core/scm.c:48:
+                    task_struct, init_new_task_struct_shadow);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: net/core/scm.c:57:
+                    fp_list, init_new_fp_list_shadow);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: net/core/scm.c:57:
+                    fp_list, init_new_fp_list_shadow);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#130: FILE: net/core/scm.c:138:
+			printk(KERN_WARNING "__scm_destroy: Unable to allocate fpl_shadow");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__scm_destroy', this function's name, in a string
#130: FILE: net/core/scm.c:138:
+			printk(KERN_WARNING "__scm_destroy: Unable to allocate fpl_shadow");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#138: FILE: net/core/scm.c:146:
+			printk(KERN_WARNING "__scm_destroy: Unable to allocate current_shadow");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__scm_destroy', this function's name, in a string
#138: FILE: net/core/scm.c:146:
+			printk(KERN_WARNING "__scm_destroy: Unable to allocate current_shadow");

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#157: FILE: net/core/scm.c:162:
+				fpl_shadow = list_first_entry(&work_list, struct scm_fp_list_shadow, list);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#161: FILE: net/core/scm.c:166:
+				for (i=fpl->count-1; i>=0; i--)
 				      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#161: FILE: net/core/scm.c:166:
+				for (i=fpl->count-1; i>=0; i--)
 				                 ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#161: FILE: net/core/scm.c:166:
+				for (i=fpl->count-1; i>=0; i--)
 				                      ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000099217.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 7 warnings, 1 checks, 113 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000099217.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
