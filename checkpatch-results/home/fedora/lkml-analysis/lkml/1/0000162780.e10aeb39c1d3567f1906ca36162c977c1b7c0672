WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#43: FILE: arch/blackfin/include/asm/bitops.h:27:
+__raw_bit_set_asm(volatile unsigned long *addr, unsigned long nr);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#47: FILE: arch/blackfin/include/asm/bitops.h:30:
+__raw_bit_clear_asm(volatile unsigned long *addr, unsigned long nr);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#51: FILE: arch/blackfin/include/asm/bitops.h:33:
+__raw_bit_toggle_asm(volatile unsigned long *addr, unsigned long nr);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#55: FILE: arch/blackfin/include/asm/bitops.h:36:
+__raw_bit_test_set_asm(volatile unsigned long *addr, unsigned long nr);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#59: FILE: arch/blackfin/include/asm/bitops.h:39:
+__raw_bit_test_clear_asm(volatile unsigned long *addr, unsigned long nr);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#63: FILE: arch/blackfin/include/asm/bitops.h:42:
+__raw_bit_test_toggle_asm(volatile unsigned long *addr, unsigned long nr);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#67: FILE: arch/blackfin/include/asm/bitops.h:45:
+__raw_bit_test_asm(const volatile unsigned long *addr, unsigned long nr);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#70: FILE: arch/blackfin/include/asm/bitops.h:47:
+static inline void set_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#77: FILE: arch/blackfin/include/asm/bitops.h:53:
+static inline void clear_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#84: FILE: arch/blackfin/include/asm/bitops.h:59:
+static inline void change_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#92: FILE: arch/blackfin/include/asm/bitops.h:66:
+test_bit(unsigned long nr, const volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#100: FILE: arch/blackfin/include/asm/bitops.h:73:
+test_and_set_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#108: FILE: arch/blackfin/include/asm/bitops.h:80:
+test_and_clear_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#116: FILE: arch/blackfin/include/asm/bitops.h:87:
+test_and_change_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#125: FILE: arch/blackfin/include/asm/bitops.h:97:
+static inline void set_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#134: FILE: arch/blackfin/include/asm/bitops.h:109:
+static inline void clear_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#143: FILE: arch/blackfin/include/asm/bitops.h:121:
+static inline void change_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#153: FILE: arch/blackfin/include/asm/bitops.h:134:
+test_and_set_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#163: FILE: arch/blackfin/include/asm/bitops.h:151:
+test_and_clear_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#173: FILE: arch/blackfin/include/asm/bitops.h:168:
+test_and_change_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#182: FILE: arch/blackfin/include/asm/bitops.h:191:
+static inline void __set_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#191: FILE: arch/blackfin/include/asm/bitops.h:201:
+static inline void __clear_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#200: FILE: arch/blackfin/include/asm/bitops.h:211:
+static inline void __change_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#210: FILE: arch/blackfin/include/asm/bitops.h:222:
+__test_and_set_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#220: FILE: arch/blackfin/include/asm/bitops.h:235:
+__test_and_clear_bit(unsigned long nr, volatile unsigned long *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#231: FILE: arch/blackfin/include/asm/bitops.h:248:
+__test_and_change_bit(unsigned long nr, volatile unsigned long *addr)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000162780.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 26 warnings, 0 checks, 201 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000162780.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
