ERROR:INITIALISED_STATIC: do not initialise statics to 0
#54: FILE: arch/arm/mm/init.c:74:
+static unsigned long phys_devtree_start __initdata = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#55: FILE: arch/arm/mm/init.c:75:
+static unsigned long phys_devtree_size __initdata = 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#104: FILE: arch/arm/mm/init.c:222:
+		struct membank *bank = &mi->bank[i];
+		if (bank_phys_start(bank) <= start &&

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'phys_devtree_start == 0'
#131: FILE: arch/arm/mm/init.c:253:
+	if ((phys_devtree_start == 0) || (phys_devtree_size == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'phys_devtree_size == 0'
#131: FILE: arch/arm/mm/init.c:253:
+	if ((phys_devtree_start == 0) || (phys_devtree_size == 0))

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#136: FILE: arch/arm/mm/init.c:258:
+		phys_devtree_start = phys_devtree_size = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SPLIT_STRING: quoted string split across lines
#138: FILE: arch/arm/mm/init.c:260:
+		pr_err("DEVICETREE: 0x%08lx+0x%08lx extends beyond "
+		       "physical memory - disabling device tree\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#164: FILE: arch/arm/mm/init.c:359:
+		pr_err("DEVICETREE: 0x%08lx+0x%08lx overlaps in-use "
+		       "memory region - disabling device tree\n",

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000009678.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 3 warnings, 3 checks, 158 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000009678.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
