WARNING:REPEATED_WORD: Possible repeated word: 'bad'
#43: 
> one) is bad bad bad.

WARNING:REPEATED_WORD: Possible repeated word: 'bad'
#43: 
> one) is bad bad bad.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#59: FILE: include/linux/kfifo.h:40:
t gfp_mask,

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#63: FILE: include/linux/kfifo.h:44:
+extern int __kfifo_put_user(struct kfifo *fifo,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#68: FILE: include/linux/kfifo.h:49:
+extern int __kfifo_get_user(struct kfifo *fifo,  unsigned char __user *buf=
                                                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#68: FILE: include/linux/kfifo.h:49:
+extern int __kfifo_get_user(struct kfifo *fifo,  unsigned char __user *buf=

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#77: FILE: kernel/kfifo.c:53:
+++ b/kernel/kfifo.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#82: FILE: kernel/kfifo.c:26:
+#include <asm/uaccess.h>

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#105: FILE: kernel/kfifo.c:168:
+int __kfifo_put_user(struct kfifo *fifo, const unsigned char __user *buffe=
                                                                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: kernel/kfifo.c:169:
+^I        unsigned int len)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#111: FILE: kernel/kfifo.c:173:
+	len =3D min(len, fifo->size - fifo->in + fifo->out);
 	    ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#118: FILE: kernel/kfifo.c:180:
+	smp_mb();

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#121: FILE: kernel/kfifo.c:183:
+	l =3D min(len, fifo->size - (fifo->in & (fifo->size - 1)));
 	  ^

ERROR:SPACING: space required before the open parenthesis '('
#123: FILE: kernel/kfifo.c:185:
+	if(copy_from_user(fifo->buffer + (fifo->in & (fifo->size - 1)),

CHECK:LINE_SPACING: Please don't use multiple blank lines
#127: FILE: kernel/kfifo.c:189:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MEMORY_BARRIER: memory barrier without comment
#137: FILE: kernel/kfifo.c:199:
+	smp_wmb();

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#139: FILE: kernel/kfifo.c:201:
+	fifo->in +=3D len;
 	         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#170: FILE: kernel/kfifo.c:270:
+int __kfifo_get_user(struct kfifo *fifo,
+			 unsigned char __user *buffer, unsigned int len)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#174: FILE: kernel/kfifo.c:274:
+	len =3D min(len, fifo->in - fifo->out);
 	    ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#181: FILE: kernel/kfifo.c:281:
+	smp_rmb();

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#184: FILE: kernel/kfifo.c:284:
+	l =3D min(len, fifo->size - (fifo->out & (fifo->size - 1)));
 	  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#186: FILE: kernel/kfifo.c:286:
+	if (copy_to_user(buffer, fifo->buffer + (fifo->out & (fifo->size - 1)), l=
 	                                                                         ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#186: FILE: kernel/kfifo.c:286:
+	if (copy_to_user(buffer, fifo->buffer + (fifo->out & (fifo->size - 1)), l=

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:MEMORY_BARRIER: memory barrier without comment
#199: FILE: kernel/kfifo.c:298:
+	smp_mb();

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#201: FILE: kernel/kfifo.c:300:
+	fifo->out +=3D len;
 	          ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000419314.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 13 errors, 8 warnings, 4 checks, 144 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000419314.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
