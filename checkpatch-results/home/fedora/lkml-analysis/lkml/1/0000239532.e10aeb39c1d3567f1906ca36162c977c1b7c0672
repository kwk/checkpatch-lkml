ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Jeffrey Vernon Merkey (jmerkey@wolfmountaingroup.com)'
#25: 
Signed-off-by: Jeffrey Vernon Merkey (jmerkey@wolfmountaingroup.com)

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#30: FILE: debug/mdb/mdb-logic.c:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#32: FILE: debug/mdb/mdb-logic.c:3:
+/***************************************************************************
+*

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#94: FILE: debug/mdb/mdb-logic.c:65:
+#include <asm/atomic.h>

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#221: FILE: debug/mdb/mdb-logic.c:192:
+unsigned char *exprDescription[]={
                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <exprDescription>
#221: FILE: debug/mdb/mdb-logic.c:192:
+unsigned char *exprDescription[]={

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: debug/mdb/mdb-logic.c:193:
+     "INVALID",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: debug/mdb/mdb-logic.c:194:
+     "NUMERIC",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: debug/mdb/mdb-logic.c:195:
+     "BOOLEAN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: debug/mdb/mdb-logic.c:196:
+     "???????",$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#228: FILE: debug/mdb/mdb-logic.c:199:
+unsigned char *parserDescription[]={
                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <parserDescription>
#228: FILE: debug/mdb/mdb-logic.c:199:
+unsigned char *parserDescription[]={

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: debug/mdb/mdb-logic.c:200:
+     "NULL_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: debug/mdb/mdb-logic.c:201:
+     "NUMBER_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: debug/mdb/mdb-logic.c:202:
+     "MINUS_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: debug/mdb/mdb-logic.c:203:
+     "PLUS_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: debug/mdb/mdb-logic.c:204:
+     "MULTIPLY_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: debug/mdb/mdb-logic.c:205:
+     "DIVIDE_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: debug/mdb/mdb-logic.c:206:
+     "GREATER_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: debug/mdb/mdb-logic.c:207:
+     "LESS_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: debug/mdb/mdb-logic.c:208:
+     "XOR_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: debug/mdb/mdb-logic.c:209:
+     "AND_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: debug/mdb/mdb-logic.c:210:
+     "OR_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: debug/mdb/mdb-logic.c:211:
+     "NOT_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: debug/mdb/mdb-logic.c:212:
+     "NEG_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: debug/mdb/mdb-logic.c:213:
+     "EQUAL_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: debug/mdb/mdb-logic.c:214:
+     "LEFT_SHIFT_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: debug/mdb/mdb-logic.c:215:
+     "RIGHT_SHIFT_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: debug/mdb/mdb-logic.c:216:
+     "SPACE_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: debug/mdb/mdb-logic.c:217:
+     "FLAGS_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: debug/mdb/mdb-logic.c:218:
+     "EAX_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: debug/mdb/mdb-logic.c:219:
+     "EBX_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: debug/mdb/mdb-logic.c:220:
+     "ECX_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: debug/mdb/mdb-logic.c:221:
+     "EDX_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: debug/mdb/mdb-logic.c:222:
+     "ESI_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: debug/mdb/mdb-logic.c:223:
+     "EDI_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: debug/mdb/mdb-logic.c:224:
+     "EBP_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: debug/mdb/mdb-logic.c:225:
+     "ESP_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: debug/mdb/mdb-logic.c:226:
+     "CS_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: debug/mdb/mdb-logic.c:227:
+     "DS_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: debug/mdb/mdb-logic.c:228:
+     "ES_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: debug/mdb/mdb-logic.c:229:
+     "FS_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: debug/mdb/mdb-logic.c:230:
+     "GS_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: debug/mdb/mdb-logic.c:231:
+     "SS_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: debug/mdb/mdb-logic.c:232:
+     "DREF_OPEN_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: debug/mdb/mdb-logic.c:233:
+     "DREF_CLOSE_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: debug/mdb/mdb-logic.c:234:
+     "MOD_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: debug/mdb/mdb-logic.c:235:
+     "NUMBER_END",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: debug/mdb/mdb-logic.c:236:
+     "GREATER_EQUAL_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: debug/mdb/mdb-logic.c:237:
+     "LESS_EQUAL_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: debug/mdb/mdb-logic.c:238:
+     "EIP_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: debug/mdb/mdb-logic.c:239:
+     "ASSIGNMENT_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: debug/mdb/mdb-logic.c:240:
+     "Dunsigned short_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: debug/mdb/mdb-logic.c:241:
+     "unsigned short_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: debug/mdb/mdb-logic.c:242:
+     "unsigned char_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: debug/mdb/mdb-logic.c:243:
+     "LOGICAL_AND_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: debug/mdb/mdb-logic.c:244:
+     "LOGICAL_OR_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: debug/mdb/mdb-logic.c:245:
+     "CF_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: debug/mdb/mdb-logic.c:246:
+     "PF_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: debug/mdb/mdb-logic.c:247:
+     "AF_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: debug/mdb/mdb-logic.c:248:
+     "ZF_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: debug/mdb/mdb-logic.c:249:
+     "SF_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: debug/mdb/mdb-logic.c:250:
+     "IF_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: debug/mdb/mdb-logic.c:251:
+     "DF_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: debug/mdb/mdb-logic.c:252:
+     "OF_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: debug/mdb/mdb-logic.c:253:
+     "VM_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: debug/mdb/mdb-logic.c:254:
+     "AC_TOKEN",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: debug/mdb/mdb-logic.c:255:
+     "BEGIN_BRACKET",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: debug/mdb/mdb-logic.c:256:
+     "END_BRACKET",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: debug/mdb/mdb-logic.c:257:
+     "NOT_EQUAL_TOKEN"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: debug/mdb/mdb-logic.c:258:
+     "INVALID_NUMBER_TOKEN"$

WARNING:SPLIT_STRING: quoted string split across lines
#287: FILE: debug/mdb/mdb-logic.c:258:
+     "NOT_EQUAL_TOKEN"
+     "INVALID_NUMBER_TOKEN"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:MISSING_SPACE: break quoted strings at a space character
#287: FILE: debug/mdb/mdb-logic.c:258:
+     "NOT_EQUAL_TOKEN"
+     "INVALID_NUMBER_TOKEN"

CHECK:CAMELCASE: Avoid CamelCase: <TokenIndex>
#290: FILE: debug/mdb/mdb-logic.c:261:
+unsigned char TokenIndex[256];

CHECK:CAMELCASE: Avoid CamelCase: <TokenClass>
#291: FILE: debug/mdb/mdb-logic.c:262:
+unsigned char TokenClass[256];

CHECK:CAMELCASE: Avoid CamelCase: <TokenType>
#292: FILE: debug/mdb/mdb-logic.c:263:
+unsigned char TokenType[256];

CHECK:CAMELCASE: Avoid CamelCase: <TokenValue>
#293: FILE: debug/mdb/mdb-logic.c:264:
+unsigned long TokenValue[256];

CHECK:CAMELCASE: Avoid CamelCase: <TokenCount>
#294: FILE: debug/mdb/mdb-logic.c:265:
+unsigned long TokenCount;

CHECK:CAMELCASE: Avoid CamelCase: <numStack>
#296: FILE: debug/mdb/mdb-logic.c:267:
+unsigned long numStack[NUM_STACK_SIZE];

CHECK:CAMELCASE: Avoid CamelCase: <contextStack>
#301: FILE: debug/mdb/mdb-logic.c:272:
+unsigned long contextStack[CONTEXT_STACK_SIZE];

CHECK:CAMELCASE: Avoid CamelCase: <booleanStack>
#306: FILE: debug/mdb/mdb-logic.c:277:
+unsigned long booleanStack[BOOL_STACK_SIZE];

CHECK:CAMELCASE: Avoid CamelCase: <logicalStack>
#311: FILE: debug/mdb/mdb-logic.c:282:
+unsigned long logicalStack[LOGICAL_STACK_SIZE];

CHECK:CAMELCASE: Avoid CamelCase: <GetValueFromSymbol>
#316: FILE: debug/mdb/mdb-logic.c:287:
+extern unsigned long GetValueFromSymbol(unsigned char *symbolName);

CHECK:CAMELCASE: Avoid CamelCase: <symbolName>
#316: FILE: debug/mdb/mdb-logic.c:287:
+extern unsigned long GetValueFromSymbol(unsigned char *symbolName);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#316: FILE: debug/mdb/mdb-logic.c:287:
+extern unsigned long GetValueFromSymbol(unsigned char *symbolName);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#317: FILE: debug/mdb/mdb-logic.c:288:
+extern unsigned char delim_table[256];

CHECK:CAMELCASE: Avoid CamelCase: <expressLock>
#320: FILE: debug/mdb/mdb-logic.c:291:
+spinlock_t expressLock = SPIN_LOCK_UNLOCKED;

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#324: FILE: debug/mdb/mdb-logic.c:295:
+unsigned long GetNumber(unsigned char *p, unsigned char **rp, unsigned long *opl, unsigned long *retCode, unsigned long mode)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <GetNumber>
#324: FILE: debug/mdb/mdb-logic.c:295:
+unsigned long GetNumber(unsigned char *p, unsigned char **rp, unsigned long *opl, unsigned long *retCode, unsigned long mode)

CHECK:CAMELCASE: Avoid CamelCase: <retCode>
#324: FILE: debug/mdb/mdb-logic.c:295:
+unsigned long GetNumber(unsigned char *p, unsigned char **rp, unsigned long *opl, unsigned long *retCode, unsigned long mode)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#326: FILE: debug/mdb/mdb-logic.c:297:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: debug/mdb/mdb-logic.c:298:
+    unsigned char *op, *pp = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: debug/mdb/mdb-logic.c:299:
+    unsigned long c = 0, decimal = 0, hex_found = 0, invalid = 0, valid = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: debug/mdb/mdb-logic.c:301:
+    pp = op = p;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#330: FILE: debug/mdb/mdb-logic.c:301:
+    pp = op = p;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: debug/mdb/mdb-logic.c:302:
+    while (*p)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#331: FILE: debug/mdb/mdb-logic.c:302:
+    while (*p)
+    {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#331: FILE: debug/mdb/mdb-logic.c:302:
+    while (*p)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: debug/mdb/mdb-logic.c:303:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: debug/mdb/mdb-logic.c:304:
+       if (*p == 'X' || *p == 'x')$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#333: FILE: debug/mdb/mdb-logic.c:304:
+       if (*p == 'X' || *p == 'x')
+       {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#333: FILE: debug/mdb/mdb-logic.c:304:
+       if (*p == 'X' || *p == 'x')
+       {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: debug/mdb/mdb-logic.c:305:
+       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#335: FILE: debug/mdb/mdb-logic.c:306:
+          hex_found = 1;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: debug/mdb/mdb-logic.c:306:
+          hex_found = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#336: FILE: debug/mdb/mdb-logic.c:307:
+          p++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: debug/mdb/mdb-logic.c:307:
+          p++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#337: FILE: debug/mdb/mdb-logic.c:308:
+          pp = p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: debug/mdb/mdb-logic.c:308:
+          pp = p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: debug/mdb/mdb-logic.c:309:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: debug/mdb/mdb-logic.c:311:
+       if (*p >= '0' && *p <= '9')$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#340: FILE: debug/mdb/mdb-logic.c:311:
+       if (*p >= '0' && *p <= '9')
+       {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#340: FILE: debug/mdb/mdb-logic.c:311:
+       if (*p >= '0' && *p <= '9')
+       {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: debug/mdb/mdb-logic.c:312:
+       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#342: FILE: debug/mdb/mdb-logic.c:313:
+          valid++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: debug/mdb/mdb-logic.c:313:
+          valid++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: debug/mdb/mdb-logic.c:315:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: debug/mdb/mdb-logic.c:316:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 7)
#345: FILE: debug/mdb/mdb-logic.c:316:
+       else
+       if (*p >= 'A' && *p <= 'F')

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#345: FILE: debug/mdb/mdb-logic.c:316:
+       }
+       else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: debug/mdb/mdb-logic.c:317:
+       if (*p >= 'A' && *p <= 'F')$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#346: FILE: debug/mdb/mdb-logic.c:317:
+       if (*p >= 'A' && *p <= 'F')
+       {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#346: FILE: debug/mdb/mdb-logic.c:317:
+       if (*p >= 'A' && *p <= 'F')
+       {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: debug/mdb/mdb-logic.c:318:
+       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#349: FILE: debug/mdb/mdb-logic.c:320:
+          valid++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: debug/mdb/mdb-logic.c:320:
+          valid++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: debug/mdb/mdb-logic.c:322:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: debug/mdb/mdb-logic.c:323:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 7)
#352: FILE: debug/mdb/mdb-logic.c:323:
+       else
+       if (*p >= 'a' && *p <= 'f')

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#352: FILE: debug/mdb/mdb-logic.c:323:
+       }
+       else

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: debug/mdb/mdb-logic.c:324:
+       if (*p >= 'a' && *p <= 'f')$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#353: FILE: debug/mdb/mdb-logic.c:324:
+       if (*p >= 'a' && *p <= 'f')
+       {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#353: FILE: debug/mdb/mdb-logic.c:324:
+       if (*p >= 'a' && *p <= 'f')
+       {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: debug/mdb/mdb-logic.c:325:
+       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#356: FILE: debug/mdb/mdb-logic.c:327:
+          valid++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: debug/mdb/mdb-logic.c:327:
+          valid++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: debug/mdb/mdb-logic.c:329:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: debug/mdb/mdb-logic.c:330:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 7)
#359: FILE: debug/mdb/mdb-logic.c:330:
+       else
+       if ((*p == 'R') || (*p == 'r'))

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#359: FILE: debug/mdb/mdb-logic.c:330:
+       }
+       else

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: debug/mdb/mdb-logic.c:331:
+       if ((*p == 'R') || (*p == 'r'))$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#360: FILE: debug/mdb/mdb-logic.c:331:
+       if ((*p == 'R') || (*p == 'r'))
+       {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#360: FILE: debug/mdb/mdb-logic.c:331:
+       if ((*p == 'R') || (*p == 'r'))
+       {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: debug/mdb/mdb-logic.c:332:
+       {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: debug/mdb/mdb-logic.c:335:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: debug/mdb/mdb-logic.c:336:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 7)
#365: FILE: debug/mdb/mdb-logic.c:336:
+       else
+       if (delim_table[((*p) & 0xFF)])

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#365: FILE: debug/mdb/mdb-logic.c:336:
+       }
+       else

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: debug/mdb/mdb-logic.c:337:
+       if (delim_table[((*p) & 0xFF)])$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#366: FILE: debug/mdb/mdb-logic.c:337:
+       if (delim_table[((*p) & 0xFF)])
+	  break;

CHECK:CAMELCASE: Avoid CamelCase: <xFF>
#366: FILE: debug/mdb/mdb-logic.c:337:
+       if (delim_table[((*p) & 0xFF)])

WARNING:TABSTOP: Statements should start on a tabstop
#367: FILE: debug/mdb/mdb-logic.c:338:
+	  break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: debug/mdb/mdb-logic.c:339:
+       else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#368: FILE: debug/mdb/mdb-logic.c:339:
+       else
+       {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#368: FILE: debug/mdb/mdb-logic.c:339:
+       else
+       {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: debug/mdb/mdb-logic.c:340:
+       {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#370: FILE: debug/mdb/mdb-logic.c:341:
+          invalid = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: debug/mdb/mdb-logic.c:341:
+          invalid = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#371: FILE: debug/mdb/mdb-logic.c:342:
+          break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: debug/mdb/mdb-logic.c:342:
+          break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: debug/mdb/mdb-logic.c:343:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: debug/mdb/mdb-logic.c:344:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: debug/mdb/mdb-logic.c:346:
+    if (rp)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#375: FILE: debug/mdb/mdb-logic.c:346:
+    if (rp)
+       *rp = p;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: debug/mdb/mdb-logic.c:347:
+       *rp = p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: debug/mdb/mdb-logic.c:348:
+    if (opl)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#377: FILE: debug/mdb/mdb-logic.c:348:
+    if (opl)
+       *opl = (unsigned long)((unsigned long)p - (unsigned long) op);

CHECK:SPACING: No space is necessary after a cast
#378: FILE: debug/mdb/mdb-logic.c:349:
+       *opl = (unsigned long)((unsigned long)p - (unsigned long) op);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: debug/mdb/mdb-logic.c:349:
+       *opl = (unsigned long)((unsigned long)p - (unsigned long) op);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: debug/mdb/mdb-logic.c:351:
+    if (invalid && !valid)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#380: FILE: debug/mdb/mdb-logic.c:351:
+    if (invalid && !valid)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#380: FILE: debug/mdb/mdb-logic.c:351:
+    if (invalid && !valid)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: debug/mdb/mdb-logic.c:352:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: debug/mdb/mdb-logic.c:353:
+       if (retCode)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#382: FILE: debug/mdb/mdb-logic.c:353:
+       if (retCode)
+          *retCode = -1;   /* invalid string */

ERROR:CODE_INDENT: code indent should use tabs where possible
#383: FILE: debug/mdb/mdb-logic.c:354:
+          *retCode = -1;   /* invalid string */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: debug/mdb/mdb-logic.c:354:
+          *retCode = -1;   /* invalid string */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: debug/mdb/mdb-logic.c:355:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: debug/mdb/mdb-logic.c:356:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: debug/mdb/mdb-logic.c:358:
+    p = pp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: debug/mdb/mdb-logic.c:360:
+    if (mode)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#389: FILE: debug/mdb/mdb-logic.c:360:
+    if (mode)
+       decimal = 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: debug/mdb/mdb-logic.c:361:
+       decimal = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: debug/mdb/mdb-logic.c:363:
+    if (decimal)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#392: FILE: debug/mdb/mdb-logic.c:363:
+    if (decimal)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#392: FILE: debug/mdb/mdb-logic.c:363:
+    if (decimal)
[...]
+       /* parse as decimal number */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: debug/mdb/mdb-logic.c:364:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: debug/mdb/mdb-logic.c:366:
+       while (*p)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#395: FILE: debug/mdb/mdb-logic.c:366:
+       while (*p)
+       {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 13)
#395: FILE: debug/mdb/mdb-logic.c:366:
+       while (*p)
+       {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: debug/mdb/mdb-logic.c:367:
+       {$

WARNING:TABSTOP: Statements should start on a tabstop
#397: FILE: debug/mdb/mdb-logic.c:368:
+	     if (*p >= '0' && *p <= '9')

WARNING:TABSTOP: Statements should start on a tabstop
#399: FILE: debug/mdb/mdb-logic.c:370:
+	     else

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: debug/mdb/mdb-logic.c:373:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: debug/mdb/mdb-logic.c:374:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: debug/mdb/mdb-logic.c:375:
+    else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 4)
#404: FILE: debug/mdb/mdb-logic.c:375:
+    else
+    if (hex_found)

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#404: FILE: debug/mdb/mdb-logic.c:375:
+    }
+    else

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#405: FILE: debug/mdb/mdb-logic.c:376:
+    if (hex_found)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#405: FILE: debug/mdb/mdb-logic.c:376:
+    if (hex_found)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#405: FILE: debug/mdb/mdb-logic.c:376:
+    if (hex_found)
[...]
+       /* parse as hex number */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#406: FILE: debug/mdb/mdb-logic.c:377:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: debug/mdb/mdb-logic.c:379:
+       while (*p)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#408: FILE: debug/mdb/mdb-logic.c:379:
+       while (*p)
+       {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#408: FILE: debug/mdb/mdb-logic.c:379:
+       while (*p)
+       {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: debug/mdb/mdb-logic.c:380:
+       {$

WARNING:TABSTOP: Statements should start on a tabstop
#410: FILE: debug/mdb/mdb-logic.c:381:
+	  if (*p >= '0' && *p <= '9')

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 13)
#410: FILE: debug/mdb/mdb-logic.c:381:
+	  if (*p >= '0' && *p <= '9')
+	     c = (c << 4) | (*p - '0');

WARNING:TABSTOP: Statements should start on a tabstop
#412: FILE: debug/mdb/mdb-logic.c:383:
+	  else if (*p >= 'A' && *p <= 'F')

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 13)
#412: FILE: debug/mdb/mdb-logic.c:383:
+	  else if (*p >= 'A' && *p <= 'F')
+	     c = (c << 4) | (*p - 'A' + 10);

WARNING:TABSTOP: Statements should start on a tabstop
#414: FILE: debug/mdb/mdb-logic.c:385:
+	  else if (*p >= 'a' && *p <= 'f')

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 13)
#414: FILE: debug/mdb/mdb-logic.c:385:
+	  else if (*p >= 'a' && *p <= 'f')
+	     c = (c << 4) | (*p - 'a' + 10);

WARNING:TABSTOP: Statements should start on a tabstop
#416: FILE: debug/mdb/mdb-logic.c:387:
+	  else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 13)
#416: FILE: debug/mdb/mdb-logic.c:387:
+	  else
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#417: FILE: debug/mdb/mdb-logic.c:388:
+	     break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: debug/mdb/mdb-logic.c:390:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: debug/mdb/mdb-logic.c:391:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: debug/mdb/mdb-logic.c:392:
+    else  /* default parses as hex */$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#421: FILE: debug/mdb/mdb-logic.c:392:
+    else  /* default parses as hex */
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#421: FILE: debug/mdb/mdb-logic.c:392:
+    else  /* default parses as hex */
[...]
+       /* parse as hex number */

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#421: FILE: debug/mdb/mdb-logic.c:392:
+    }
+    else  /* default parses as hex */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: debug/mdb/mdb-logic.c:393:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: debug/mdb/mdb-logic.c:395:
+       while (*p)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#424: FILE: debug/mdb/mdb-logic.c:395:
+       while (*p)
+       {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#424: FILE: debug/mdb/mdb-logic.c:395:
+       while (*p)
+       {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: debug/mdb/mdb-logic.c:396:
+       {$

WARNING:TABSTOP: Statements should start on a tabstop
#426: FILE: debug/mdb/mdb-logic.c:397:
+	  if (*p >= '0' && *p <= '9')

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 13)
#426: FILE: debug/mdb/mdb-logic.c:397:
+	  if (*p >= '0' && *p <= '9')
+	     c = (c << 4) | (*p - '0');

WARNING:TABSTOP: Statements should start on a tabstop
#428: FILE: debug/mdb/mdb-logic.c:399:
+	  else if (*p >= 'A' && *p <= 'F')

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 13)
#428: FILE: debug/mdb/mdb-logic.c:399:
+	  else if (*p >= 'A' && *p <= 'F')
+	     c = (c << 4) | (*p - 'A' + 10);

WARNING:TABSTOP: Statements should start on a tabstop
#430: FILE: debug/mdb/mdb-logic.c:401:
+	  else if (*p >= 'a' && *p <= 'f')

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 13)
#430: FILE: debug/mdb/mdb-logic.c:401:
+	  else if (*p >= 'a' && *p <= 'f')
+	     c = (c << 4) | (*p - 'a' + 10);

WARNING:TABSTOP: Statements should start on a tabstop
#432: FILE: debug/mdb/mdb-logic.c:403:
+	  else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 13)
#432: FILE: debug/mdb/mdb-logic.c:403:
+	  else
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#433: FILE: debug/mdb/mdb-logic.c:404:
+	     break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: debug/mdb/mdb-logic.c:406:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: debug/mdb/mdb-logic.c:407:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: debug/mdb/mdb-logic.c:409:
+    if (retCode)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#438: FILE: debug/mdb/mdb-logic.c:409:
+    if (retCode)
+       *retCode = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#439: FILE: debug/mdb/mdb-logic.c:410:
+       *retCode = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: debug/mdb/mdb-logic.c:412:
+    return (c);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#441: FILE: debug/mdb/mdb-logic.c:412:
+    return (c);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#443: FILE: debug/mdb/mdb-logic.c:414:
+
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#445: FILE: debug/mdb/mdb-logic.c:416:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <parseTokens>
#446: FILE: debug/mdb/mdb-logic.c:417:
+unsigned char *parseTokens(StackFrame *stackFrame, unsigned char *p, unsigned long mode)

CHECK:CAMELCASE: Avoid CamelCase: <StackFrame>
#446: FILE: debug/mdb/mdb-logic.c:417:
+unsigned char *parseTokens(StackFrame *stackFrame, unsigned char *p, unsigned long mode)

CHECK:CAMELCASE: Avoid CamelCase: <stackFrame>
#446: FILE: debug/mdb/mdb-logic.c:417:
+unsigned char *parseTokens(StackFrame *stackFrame, unsigned char *p, unsigned long mode)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#448: FILE: debug/mdb/mdb-logic.c:419:
+{
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: debug/mdb/mdb-logic.c:420:
+    register unsigned long i, value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: debug/mdb/mdb-logic.c:421:
+    unsigned char symbol[256], *s;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#451: FILE: debug/mdb/mdb-logic.c:422:
+    unsigned char *tmp, *op;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: debug/mdb/mdb-logic.c:423:
+    unsigned long delta, retCode = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#454: FILE: debug/mdb/mdb-logic.c:425:
+    op = p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#455: FILE: debug/mdb/mdb-logic.c:426:
+    TokenCount = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#456: FILE: debug/mdb/mdb-logic.c:427:
+    while (TokenCount < 200 && (unsigned long)p - (unsigned long)op < 200)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#456: FILE: debug/mdb/mdb-logic.c:427:
+    while (TokenCount < 200 && (unsigned long)p - (unsigned long)op < 200)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#456: FILE: debug/mdb/mdb-logic.c:427:
+    while (TokenCount < 200 && (unsigned long)p - (unsigned long)op < 200)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#457: FILE: debug/mdb/mdb-logic.c:428:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#458: FILE: debug/mdb/mdb-logic.c:429:
+       if (isalpha(*p) || *p == '_' ||  *p == '@' || *p == '$')$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#458: FILE: debug/mdb/mdb-logic.c:429:
+       if (isalpha(*p) || *p == '_' ||  *p == '@' || *p == '$')
+       {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 10)
#458: FILE: debug/mdb/mdb-logic.c:429:
+       if (isalpha(*p) || *p == '_' ||  *p == '@' || *p == '$')
+       {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#459: FILE: debug/mdb/mdb-logic.c:430:
+       {$

WARNING:TABSTOP: Statements should start on a tabstop
#461: FILE: debug/mdb/mdb-logic.c:432:
+	  for (i=0; i < 255; i++)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#461: FILE: debug/mdb/mdb-logic.c:432:
+	  for (i=0; i < 255; i++)
+          {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 13)
#461: FILE: debug/mdb/mdb-logic.c:432:
+	  for (i=0; i < 255; i++)
+          {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#461: FILE: debug/mdb/mdb-logic.c:432:
+	  for (i=0; i < 255; i++)
 	        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#462: FILE: debug/mdb/mdb-logic.c:433:
+          {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: debug/mdb/mdb-logic.c:433:
+          {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#463: FILE: debug/mdb/mdb-logic.c:434:
+             if (delim_table[((s[i]) & 0xFF)])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: debug/mdb/mdb-logic.c:434:
+             if (delim_table[((s[i]) & 0xFF)])$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 's[i]'
#463: FILE: debug/mdb/mdb-logic.c:434:
+             if (delim_table[((s[i]) & 0xFF)])

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:CODE_INDENT: code indent should use tabs where possible
#464: FILE: debug/mdb/mdb-logic.c:435:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: debug/mdb/mdb-logic.c:435:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#466: FILE: debug/mdb/mdb-logic.c:437:
+             if (!isprint(s[i]))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#466: FILE: debug/mdb/mdb-logic.c:437:
+             if (!isprint(s[i]))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#467: FILE: debug/mdb/mdb-logic.c:438:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: debug/mdb/mdb-logic.c:438:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#470: FILE: debug/mdb/mdb-logic.c:441:
+          }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: debug/mdb/mdb-logic.c:441:
+          }$

WARNING:TABSTOP: Statements should start on a tabstop
#474: FILE: debug/mdb/mdb-logic.c:445:
+	  if (value)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#474: FILE: debug/mdb/mdb-logic.c:445:
+	  if (value)
+	  {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 13)
#474: FILE: debug/mdb/mdb-logic.c:445:
+	  if (value)
+	  {

WARNING:TABSTOP: Statements should start on a tabstop
#475: FILE: debug/mdb/mdb-logic.c:446:
+	  {

CHECK:SPACING: No space is necessary after a cast
#476: FILE: debug/mdb/mdb-logic.c:447:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#480: FILE: debug/mdb/mdb-logic.c:451:
+	  }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: debug/mdb/mdb-logic.c:452:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: debug/mdb/mdb-logic.c:454:
+       if (stackFrame)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#483: FILE: debug/mdb/mdb-logic.c:454:
+       if (stackFrame)
+       {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 9)
#483: FILE: debug/mdb/mdb-logic.c:454:
+       if (stackFrame)
+       {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: debug/mdb/mdb-logic.c:455:
+       {$

WARNING:TABSTOP: Statements should start on a tabstop
#485: FILE: debug/mdb/mdb-logic.c:456:
+	 switch (*p)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#485: FILE: debug/mdb/mdb-logic.c:456:
+	 switch (*p)
+	 {

WARNING:TABSTOP: Statements should start on a tabstop
#486: FILE: debug/mdb/mdb-logic.c:457:
+	 {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#487: FILE: debug/mdb/mdb-logic.c:458:
+	 {
+

WARNING:TABSTOP: Statements should start on a tabstop
#488: FILE: debug/mdb/mdb-logic.c:459:
+	  case '\0':

CHECK:SPACING: No space is necessary after a cast
#489: FILE: debug/mdb/mdb-logic.c:460:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#491: FILE: debug/mdb/mdb-logic.c:462:
+	     return (p);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#491: FILE: debug/mdb/mdb-logic.c:462:
+	     return (p);

WARNING:TABSTOP: Statements should start on a tabstop
#493: FILE: debug/mdb/mdb-logic.c:464:
+	  case ']':

CHECK:SPACING: No space is necessary after a cast
#494: FILE: debug/mdb/mdb-logic.c:465:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#497: FILE: debug/mdb/mdb-logic.c:468:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#499: FILE: debug/mdb/mdb-logic.c:470:
+	  case '(':

CHECK:SPACING: No space is necessary after a cast
#500: FILE: debug/mdb/mdb-logic.c:471:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#503: FILE: debug/mdb/mdb-logic.c:474:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#505: FILE: debug/mdb/mdb-logic.c:476:
+	  case ')':

CHECK:SPACING: No space is necessary after a cast
#506: FILE: debug/mdb/mdb-logic.c:477:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#509: FILE: debug/mdb/mdb-logic.c:480:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#511: FILE: debug/mdb/mdb-logic.c:482:
+	  case '+':

CHECK:SPACING: No space is necessary after a cast
#512: FILE: debug/mdb/mdb-logic.c:483:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#515: FILE: debug/mdb/mdb-logic.c:486:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#517: FILE: debug/mdb/mdb-logic.c:488:
+	  case '-':

CHECK:SPACING: No space is necessary after a cast
#518: FILE: debug/mdb/mdb-logic.c:489:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#521: FILE: debug/mdb/mdb-logic.c:492:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#523: FILE: debug/mdb/mdb-logic.c:494:
+	  case '*':

CHECK:SPACING: No space is necessary after a cast
#524: FILE: debug/mdb/mdb-logic.c:495:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#527: FILE: debug/mdb/mdb-logic.c:498:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#529: FILE: debug/mdb/mdb-logic.c:500:
+	  case '/':

CHECK:SPACING: No space is necessary after a cast
#530: FILE: debug/mdb/mdb-logic.c:501:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#533: FILE: debug/mdb/mdb-logic.c:504:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#535: FILE: debug/mdb/mdb-logic.c:506:
+	  case '%':

CHECK:SPACING: No space is necessary after a cast
#536: FILE: debug/mdb/mdb-logic.c:507:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#539: FILE: debug/mdb/mdb-logic.c:510:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#541: FILE: debug/mdb/mdb-logic.c:512:
+	  case '~':

CHECK:SPACING: No space is necessary after a cast
#542: FILE: debug/mdb/mdb-logic.c:513:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#545: FILE: debug/mdb/mdb-logic.c:516:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#547: FILE: debug/mdb/mdb-logic.c:518:
+	  case '^':

CHECK:SPACING: No space is necessary after a cast
#548: FILE: debug/mdb/mdb-logic.c:519:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#551: FILE: debug/mdb/mdb-logic.c:522:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#553: FILE: debug/mdb/mdb-logic.c:524:
+	  case '!':

WARNING:TABSTOP: Statements should start on a tabstop
#555: FILE: debug/mdb/mdb-logic.c:526:
+	     if (*p == '=')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#555: FILE: debug/mdb/mdb-logic.c:526:
+	     if (*p == '=')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#556: FILE: debug/mdb/mdb-logic.c:527:
+	     {

CHECK:SPACING: No space is necessary after a cast
#557: FILE: debug/mdb/mdb-logic.c:528:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#561: FILE: debug/mdb/mdb-logic.c:532:
+	     }

CHECK:SPACING: No space is necessary after a cast
#562: FILE: debug/mdb/mdb-logic.c:533:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#564: FILE: debug/mdb/mdb-logic.c:535:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#566: FILE: debug/mdb/mdb-logic.c:537:
+	  case ' ':   /* drop spaces on the floor */

WARNING:TABSTOP: Statements should start on a tabstop
#568: FILE: debug/mdb/mdb-logic.c:539:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#574: FILE: debug/mdb/mdb-logic.c:545:
+	  case 'p':

WARNING:TABSTOP: Statements should start on a tabstop
#575: FILE: debug/mdb/mdb-logic.c:546:
+	  case 'P':

WARNING:TABSTOP: Statements should start on a tabstop
#577: FILE: debug/mdb/mdb-logic.c:548:
+	     if (*p == 'F' || *p == 'f')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#577: FILE: debug/mdb/mdb-logic.c:548:
+	     if (*p == 'F' || *p == 'f')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#578: FILE: debug/mdb/mdb-logic.c:549:
+	     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#579: FILE: debug/mdb/mdb-logic.c:550:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tSystemFlags & PF_FLAG;

CHECK:CAMELCASE: Avoid CamelCase: <tSystemFlags>
#580: FILE: debug/mdb/mdb-logic.c:551:
+		   TokenValue[TokenCount] = stackFrame->tSystemFlags & PF_FLAG;

CHECK:SPACING: No space is necessary after a cast
#581: FILE: debug/mdb/mdb-logic.c:552:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#585: FILE: debug/mdb/mdb-logic.c:556:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#586: FILE: debug/mdb/mdb-logic.c:557:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#588: FILE: debug/mdb/mdb-logic.c:559:
+	  case 'z':

WARNING:TABSTOP: Statements should start on a tabstop
#589: FILE: debug/mdb/mdb-logic.c:560:
+	  case 'Z':

WARNING:TABSTOP: Statements should start on a tabstop
#591: FILE: debug/mdb/mdb-logic.c:562:
+	     if (*p == 'F' || *p == 'f')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#591: FILE: debug/mdb/mdb-logic.c:562:
+	     if (*p == 'F' || *p == 'f')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#592: FILE: debug/mdb/mdb-logic.c:563:
+	     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#593: FILE: debug/mdb/mdb-logic.c:564:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tSystemFlags & ZF_FLAG;

CHECK:SPACING: No space is necessary after a cast
#595: FILE: debug/mdb/mdb-logic.c:566:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#599: FILE: debug/mdb/mdb-logic.c:570:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#600: FILE: debug/mdb/mdb-logic.c:571:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#602: FILE: debug/mdb/mdb-logic.c:573:
+	  case 'i':

WARNING:TABSTOP: Statements should start on a tabstop
#603: FILE: debug/mdb/mdb-logic.c:574:
+	  case 'I':

WARNING:TABSTOP: Statements should start on a tabstop
#605: FILE: debug/mdb/mdb-logic.c:576:
+	     if (*p == 'F' || *p == 'f')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#605: FILE: debug/mdb/mdb-logic.c:576:
+	     if (*p == 'F' || *p == 'f')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#606: FILE: debug/mdb/mdb-logic.c:577:
+	     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#607: FILE: debug/mdb/mdb-logic.c:578:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tSystemFlags & IF_FLAG;

CHECK:SPACING: No space is necessary after a cast
#609: FILE: debug/mdb/mdb-logic.c:580:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#613: FILE: debug/mdb/mdb-logic.c:584:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#614: FILE: debug/mdb/mdb-logic.c:585:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#616: FILE: debug/mdb/mdb-logic.c:587:
+	  case 'o':

WARNING:TABSTOP: Statements should start on a tabstop
#617: FILE: debug/mdb/mdb-logic.c:588:
+	  case 'O':

WARNING:TABSTOP: Statements should start on a tabstop
#619: FILE: debug/mdb/mdb-logic.c:590:
+	     if (*p == 'F' || *p == 'f')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#619: FILE: debug/mdb/mdb-logic.c:590:
+	     if (*p == 'F' || *p == 'f')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#620: FILE: debug/mdb/mdb-logic.c:591:
+	     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#621: FILE: debug/mdb/mdb-logic.c:592:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tSystemFlags & OF_FLAG;

CHECK:SPACING: No space is necessary after a cast
#623: FILE: debug/mdb/mdb-logic.c:594:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#627: FILE: debug/mdb/mdb-logic.c:598:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#628: FILE: debug/mdb/mdb-logic.c:599:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#630: FILE: debug/mdb/mdb-logic.c:601:
+	  case 'v':

WARNING:TABSTOP: Statements should start on a tabstop
#631: FILE: debug/mdb/mdb-logic.c:602:
+	  case 'V':

WARNING:TABSTOP: Statements should start on a tabstop
#633: FILE: debug/mdb/mdb-logic.c:604:
+	     if (*p == 'M' || *p == 'm')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#633: FILE: debug/mdb/mdb-logic.c:604:
+	     if (*p == 'M' || *p == 'm')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#634: FILE: debug/mdb/mdb-logic.c:605:
+	     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#635: FILE: debug/mdb/mdb-logic.c:606:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tSystemFlags & VM_FLAG;

CHECK:SPACING: No space is necessary after a cast
#637: FILE: debug/mdb/mdb-logic.c:608:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#641: FILE: debug/mdb/mdb-logic.c:612:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#642: FILE: debug/mdb/mdb-logic.c:613:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#644: FILE: debug/mdb/mdb-logic.c:615:
+	  case 'x':

WARNING:TABSTOP: Statements should start on a tabstop
#645: FILE: debug/mdb/mdb-logic.c:616:
+	  case 'X':

WARNING:TABSTOP: Statements should start on a tabstop
#646: FILE: debug/mdb/mdb-logic.c:617:
+	  case '0':

WARNING:TABSTOP: Statements should start on a tabstop
#647: FILE: debug/mdb/mdb-logic.c:618:
+	  case '1':

WARNING:TABSTOP: Statements should start on a tabstop
#648: FILE: debug/mdb/mdb-logic.c:619:
+	  case '2':

WARNING:TABSTOP: Statements should start on a tabstop
#649: FILE: debug/mdb/mdb-logic.c:620:
+	  case '3':

WARNING:TABSTOP: Statements should start on a tabstop
#650: FILE: debug/mdb/mdb-logic.c:621:
+	  case '4':

WARNING:TABSTOP: Statements should start on a tabstop
#651: FILE: debug/mdb/mdb-logic.c:622:
+	  case '5':

WARNING:TABSTOP: Statements should start on a tabstop
#652: FILE: debug/mdb/mdb-logic.c:623:
+	  case '6':

WARNING:TABSTOP: Statements should start on a tabstop
#653: FILE: debug/mdb/mdb-logic.c:624:
+	  case '7':

WARNING:TABSTOP: Statements should start on a tabstop
#654: FILE: debug/mdb/mdb-logic.c:625:
+	  case '8':

WARNING:TABSTOP: Statements should start on a tabstop
#655: FILE: debug/mdb/mdb-logic.c:626:
+	  case '9':

CHECK:SPACING: No space is necessary after a cast
#656: FILE: debug/mdb/mdb-logic.c:627:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

ERROR:CODE_INDENT: code indent should use tabs where possible
#659: FILE: debug/mdb/mdb-logic.c:630:
+^I                : (TokenType[TokenCount++] = NUMBER_TOKEN));$

WARNING:TABSTOP: Statements should start on a tabstop
#660: FILE: debug/mdb/mdb-logic.c:631:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#662: FILE: debug/mdb/mdb-logic.c:633:
+	  case 'a':

WARNING:TABSTOP: Statements should start on a tabstop
#663: FILE: debug/mdb/mdb-logic.c:634:
+	  case 'A':

WARNING:TABSTOP: Statements should start on a tabstop
#666: FILE: debug/mdb/mdb-logic.c:637:
+	     if ((*tmp == 'F' || *tmp == 'f') && (*(tmp + 1) == ' ' || *(tmp + 1) == '=' ))

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#666: FILE: debug/mdb/mdb-logic.c:637:
+	     if ((*tmp == 'F' || *tmp == 'f') && (*(tmp + 1) == ' ' || *(tmp + 1) == '=' ))
+	     {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#666: FILE: debug/mdb/mdb-logic.c:637:
+	     if ((*tmp == 'F' || *tmp == 'f') && (*(tmp + 1) == ' ' || *(tmp + 1) == '=' ))

WARNING:TABSTOP: Statements should start on a tabstop
#667: FILE: debug/mdb/mdb-logic.c:638:
+	     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#668: FILE: debug/mdb/mdb-logic.c:639:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tSystemFlags & AF_FLAG;

CHECK:SPACING: No space is necessary after a cast
#670: FILE: debug/mdb/mdb-logic.c:641:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#675: FILE: debug/mdb/mdb-logic.c:646:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#676: FILE: debug/mdb/mdb-logic.c:647:
+	     if ((*tmp == 'C' || *tmp == 'c') && (*(tmp + 1) == ' ' || *(tmp + 1) == '=' ))

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#676: FILE: debug/mdb/mdb-logic.c:647:
+	     if ((*tmp == 'C' || *tmp == 'c') && (*(tmp + 1) == ' ' || *(tmp + 1) == '=' ))
+	     {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#676: FILE: debug/mdb/mdb-logic.c:647:
+	     if ((*tmp == 'C' || *tmp == 'c') && (*(tmp + 1) == ' ' || *(tmp + 1) == '=' ))

WARNING:TABSTOP: Statements should start on a tabstop
#677: FILE: debug/mdb/mdb-logic.c:648:
+	     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#678: FILE: debug/mdb/mdb-logic.c:649:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tSystemFlags & AC_FLAG;

CHECK:SPACING: No space is necessary after a cast
#680: FILE: debug/mdb/mdb-logic.c:651:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#685: FILE: debug/mdb/mdb-logic.c:656:
+	     }

CHECK:SPACING: No space is necessary after a cast
#686: FILE: debug/mdb/mdb-logic.c:657:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

ERROR:CODE_INDENT: code indent should use tabs where possible
#689: FILE: debug/mdb/mdb-logic.c:660:
+^I                : (TokenType[TokenCount++] = NUMBER_TOKEN));$

WARNING:TABSTOP: Statements should start on a tabstop
#690: FILE: debug/mdb/mdb-logic.c:661:
+	     break;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#692: FILE: debug/mdb/mdb-logic.c:663:
+
+

WARNING:TABSTOP: Statements should start on a tabstop
#693: FILE: debug/mdb/mdb-logic.c:664:
+	  case 'b':

WARNING:TABSTOP: Statements should start on a tabstop
#694: FILE: debug/mdb/mdb-logic.c:665:
+	  case 'B':

CHECK:SPACING: No space is necessary after a cast
#695: FILE: debug/mdb/mdb-logic.c:666:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

ERROR:CODE_INDENT: code indent should use tabs where possible
#698: FILE: debug/mdb/mdb-logic.c:669:
+^I                : (TokenType[TokenCount++] = NUMBER_TOKEN));$

WARNING:TABSTOP: Statements should start on a tabstop
#699: FILE: debug/mdb/mdb-logic.c:670:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#701: FILE: debug/mdb/mdb-logic.c:672:
+	  case 'c':

WARNING:TABSTOP: Statements should start on a tabstop
#702: FILE: debug/mdb/mdb-logic.c:673:
+	  case 'C':

WARNING:TABSTOP: Statements should start on a tabstop
#705: FILE: debug/mdb/mdb-logic.c:676:
+	     if (*tmp == 'S' || *tmp == 's')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#705: FILE: debug/mdb/mdb-logic.c:676:
+	     if (*tmp == 'S' || *tmp == 's')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#706: FILE: debug/mdb/mdb-logic.c:677:
+	     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#707: FILE: debug/mdb/mdb-logic.c:678:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tCS;

CHECK:CAMELCASE: Avoid CamelCase: <tCS>
#708: FILE: debug/mdb/mdb-logic.c:679:
+		   TokenValue[TokenCount] = stackFrame->tCS;

CHECK:SPACING: No space is necessary after a cast
#709: FILE: debug/mdb/mdb-logic.c:680:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#714: FILE: debug/mdb/mdb-logic.c:685:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#715: FILE: debug/mdb/mdb-logic.c:686:
+	     if ((*tmp == 'F' || *tmp == 'f') && (*(tmp + 1) == ' ' || *(tmp + 1) == '=' ))

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#715: FILE: debug/mdb/mdb-logic.c:686:
+	     if ((*tmp == 'F' || *tmp == 'f') && (*(tmp + 1) == ' ' || *(tmp + 1) == '=' ))
+	     {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#715: FILE: debug/mdb/mdb-logic.c:686:
+	     if ((*tmp == 'F' || *tmp == 'f') && (*(tmp + 1) == ' ' || *(tmp + 1) == '=' ))

WARNING:TABSTOP: Statements should start on a tabstop
#716: FILE: debug/mdb/mdb-logic.c:687:
+	     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#717: FILE: debug/mdb/mdb-logic.c:688:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tSystemFlags & CF_FLAG;

CHECK:SPACING: No space is necessary after a cast
#719: FILE: debug/mdb/mdb-logic.c:690:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#724: FILE: debug/mdb/mdb-logic.c:695:
+	     }

CHECK:SPACING: No space is necessary after a cast
#725: FILE: debug/mdb/mdb-logic.c:696:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

ERROR:CODE_INDENT: code indent should use tabs where possible
#728: FILE: debug/mdb/mdb-logic.c:699:
+^I                : (TokenType[TokenCount++] = NUMBER_TOKEN));$

WARNING:TABSTOP: Statements should start on a tabstop
#729: FILE: debug/mdb/mdb-logic.c:700:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#731: FILE: debug/mdb/mdb-logic.c:702:
+	  case 'd':

WARNING:TABSTOP: Statements should start on a tabstop
#732: FILE: debug/mdb/mdb-logic.c:703:
+	  case 'D':

WARNING:TABSTOP: Statements should start on a tabstop
#735: FILE: debug/mdb/mdb-logic.c:706:
+	     if (*tmp == 'S' || *tmp == 's')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#735: FILE: debug/mdb/mdb-logic.c:706:
+	     if (*tmp == 'S' || *tmp == 's')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#736: FILE: debug/mdb/mdb-logic.c:707:
+	     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#737: FILE: debug/mdb/mdb-logic.c:708:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tDS;

CHECK:CAMELCASE: Avoid CamelCase: <tDS>
#738: FILE: debug/mdb/mdb-logic.c:709:
+		   TokenValue[TokenCount] = stackFrame->tDS;

CHECK:SPACING: No space is necessary after a cast
#739: FILE: debug/mdb/mdb-logic.c:710:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#744: FILE: debug/mdb/mdb-logic.c:715:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#745: FILE: debug/mdb/mdb-logic.c:716:
+	     if ((*tmp == 'F' || *tmp == 'f') && (*(tmp + 1) == ' ' || *(tmp + 1) == '=' ))

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#745: FILE: debug/mdb/mdb-logic.c:716:
+	     if ((*tmp == 'F' || *tmp == 'f') && (*(tmp + 1) == ' ' || *(tmp + 1) == '=' ))
+	     {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#745: FILE: debug/mdb/mdb-logic.c:716:
+	     if ((*tmp == 'F' || *tmp == 'f') && (*(tmp + 1) == ' ' || *(tmp + 1) == '=' ))

WARNING:TABSTOP: Statements should start on a tabstop
#746: FILE: debug/mdb/mdb-logic.c:717:
+	     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#747: FILE: debug/mdb/mdb-logic.c:718:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tSystemFlags & DF_FLAG;

CHECK:SPACING: No space is necessary after a cast
#749: FILE: debug/mdb/mdb-logic.c:720:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#754: FILE: debug/mdb/mdb-logic.c:725:
+	     }

CHECK:SPACING: No space is necessary after a cast
#755: FILE: debug/mdb/mdb-logic.c:726:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

ERROR:CODE_INDENT: code indent should use tabs where possible
#758: FILE: debug/mdb/mdb-logic.c:729:
+^I                : (TokenType[TokenCount++] = NUMBER_TOKEN));$

WARNING:TABSTOP: Statements should start on a tabstop
#759: FILE: debug/mdb/mdb-logic.c:730:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#761: FILE: debug/mdb/mdb-logic.c:732:
+	  case 'e':

WARNING:TABSTOP: Statements should start on a tabstop
#762: FILE: debug/mdb/mdb-logic.c:733:
+	  case 'E':

WARNING:TABSTOP: Statements should start on a tabstop
#765: FILE: debug/mdb/mdb-logic.c:736:
+	     if (*tmp == 'A' || *tmp == 'a')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#765: FILE: debug/mdb/mdb-logic.c:736:
+	     if (*tmp == 'A' || *tmp == 'a')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#766: FILE: debug/mdb/mdb-logic.c:737:
+	     {

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#768: FILE: debug/mdb/mdb-logic.c:739:
+		if (*tmp == 'X' || *tmp == 'x')
+		{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#768: FILE: debug/mdb/mdb-logic.c:739:
+		if (*tmp == 'X' || *tmp == 'x')
+		{

WARNING:TABSTOP: Statements should start on a tabstop
#770: FILE: debug/mdb/mdb-logic.c:741:
+		   if (stackFrame)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (19, 22)
#770: FILE: debug/mdb/mdb-logic.c:741:
+		   if (stackFrame)
+		      TokenValue[TokenCount] = stackFrame->tEAX;

CHECK:CAMELCASE: Avoid CamelCase: <tEAX>
#771: FILE: debug/mdb/mdb-logic.c:742:
+		      TokenValue[TokenCount] = stackFrame->tEAX;

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#772: FILE: debug/mdb/mdb-logic.c:743:
+		   TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

CHECK:SPACING: No space is necessary after a cast
#772: FILE: debug/mdb/mdb-logic.c:743:
+		   TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#777: FILE: debug/mdb/mdb-logic.c:748:
+		   break;

CHECK:SPACING: No space is necessary after a cast
#779: FILE: debug/mdb/mdb-logic.c:750:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

ERROR:CODE_INDENT: code indent should use tabs where possible
#781: FILE: debug/mdb/mdb-logic.c:752:
+                                                   mode);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#781: FILE: debug/mdb/mdb-logic.c:752:
+		TokenValue[TokenCount] = GetNumber(p, &p, &delta, &retCode,
+                                                   mode);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#781: FILE: debug/mdb/mdb-logic.c:752:
+                                                   mode);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#782: FILE: debug/mdb/mdb-logic.c:753:
+^I        ((retCode) ? (TokenType[TokenCount++] = INVALID_NUMBER_TOKEN)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#783: FILE: debug/mdb/mdb-logic.c:754:
+^I                   : (TokenType[TokenCount++] = NUMBER_TOKEN));$

WARNING:TABSTOP: Statements should start on a tabstop
#785: FILE: debug/mdb/mdb-logic.c:756:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#786: FILE: debug/mdb/mdb-logic.c:757:
+	     if (*tmp == 'B' || *tmp == 'b')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#786: FILE: debug/mdb/mdb-logic.c:757:
+	     if (*tmp == 'B' || *tmp == 'b')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#787: FILE: debug/mdb/mdb-logic.c:758:
+	     {

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#789: FILE: debug/mdb/mdb-logic.c:760:
+		if (*tmp == 'X' || *tmp == 'x')
+		{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#789: FILE: debug/mdb/mdb-logic.c:760:
+		if (*tmp == 'X' || *tmp == 'x')
+		{

WARNING:TABSTOP: Statements should start on a tabstop
#791: FILE: debug/mdb/mdb-logic.c:762:
+		   if (stackFrame)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (19, 22)
#791: FILE: debug/mdb/mdb-logic.c:762:
+		   if (stackFrame)
+		      TokenValue[TokenCount] = stackFrame->tEBX;

CHECK:CAMELCASE: Avoid CamelCase: <tEBX>
#792: FILE: debug/mdb/mdb-logic.c:763:
+		      TokenValue[TokenCount] = stackFrame->tEBX;

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#793: FILE: debug/mdb/mdb-logic.c:764:
+		   TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

CHECK:SPACING: No space is necessary after a cast
#793: FILE: debug/mdb/mdb-logic.c:764:
+		   TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#798: FILE: debug/mdb/mdb-logic.c:769:
+		   break;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#800: FILE: debug/mdb/mdb-logic.c:771:
+		if (*tmp == 'P' || *tmp == 'p')
+		{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#800: FILE: debug/mdb/mdb-logic.c:771:
+		if (*tmp == 'P' || *tmp == 'p')
+		{

WARNING:TABSTOP: Statements should start on a tabstop
#802: FILE: debug/mdb/mdb-logic.c:773:
+		   if (stackFrame)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (19, 22)
#802: FILE: debug/mdb/mdb-logic.c:773:
+		   if (stackFrame)
+		      TokenValue[TokenCount] = stackFrame->tEBP;

CHECK:CAMELCASE: Avoid CamelCase: <tEBP>
#803: FILE: debug/mdb/mdb-logic.c:774:
+		      TokenValue[TokenCount] = stackFrame->tEBP;

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#804: FILE: debug/mdb/mdb-logic.c:775:
+		   TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

CHECK:SPACING: No space is necessary after a cast
#804: FILE: debug/mdb/mdb-logic.c:775:
+		   TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#809: FILE: debug/mdb/mdb-logic.c:780:
+		   break;

CHECK:SPACING: No space is necessary after a cast
#811: FILE: debug/mdb/mdb-logic.c:782:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

ERROR:CODE_INDENT: code indent should use tabs where possible
#813: FILE: debug/mdb/mdb-logic.c:784:
+                                                   mode);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#813: FILE: debug/mdb/mdb-logic.c:784:
+		TokenValue[TokenCount] = GetNumber(p, &p, &delta, &retCode,
+                                                   mode);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#813: FILE: debug/mdb/mdb-logic.c:784:
+                                                   mode);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#814: FILE: debug/mdb/mdb-logic.c:785:
+^I        ((retCode) ? (TokenType[TokenCount++] = INVALID_NUMBER_TOKEN)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#815: FILE: debug/mdb/mdb-logic.c:786:
+^I                   : (TokenType[TokenCount++] = NUMBER_TOKEN));$

WARNING:TABSTOP: Statements should start on a tabstop
#817: FILE: debug/mdb/mdb-logic.c:788:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#818: FILE: debug/mdb/mdb-logic.c:789:
+	     if (*tmp == 'C' || *tmp == 'c')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#818: FILE: debug/mdb/mdb-logic.c:789:
+	     if (*tmp == 'C' || *tmp == 'c')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#819: FILE: debug/mdb/mdb-logic.c:790:
+	     {

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#821: FILE: debug/mdb/mdb-logic.c:792:
+		if (*tmp == 'X' || *tmp == 'x')
+		{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#821: FILE: debug/mdb/mdb-logic.c:792:
+		if (*tmp == 'X' || *tmp == 'x')
+		{

WARNING:TABSTOP: Statements should start on a tabstop
#823: FILE: debug/mdb/mdb-logic.c:794:
+		   if (stackFrame)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (19, 22)
#823: FILE: debug/mdb/mdb-logic.c:794:
+		   if (stackFrame)
+		      TokenValue[TokenCount] = stackFrame->tECX;

CHECK:CAMELCASE: Avoid CamelCase: <tECX>
#824: FILE: debug/mdb/mdb-logic.c:795:
+		      TokenValue[TokenCount] = stackFrame->tECX;

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#825: FILE: debug/mdb/mdb-logic.c:796:
+		   TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

CHECK:SPACING: No space is necessary after a cast
#825: FILE: debug/mdb/mdb-logic.c:796:
+		   TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#830: FILE: debug/mdb/mdb-logic.c:801:
+		   break;

CHECK:SPACING: No space is necessary after a cast
#832: FILE: debug/mdb/mdb-logic.c:803:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

ERROR:CODE_INDENT: code indent should use tabs where possible
#834: FILE: debug/mdb/mdb-logic.c:805:
+                                                   mode);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#834: FILE: debug/mdb/mdb-logic.c:805:
+		TokenValue[TokenCount] = GetNumber(p, &p, &delta, &retCode,
+                                                   mode);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#834: FILE: debug/mdb/mdb-logic.c:805:
+                                                   mode);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#835: FILE: debug/mdb/mdb-logic.c:806:
+^I        ((retCode) ? (TokenType[TokenCount++] = INVALID_NUMBER_TOKEN)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#836: FILE: debug/mdb/mdb-logic.c:807:
+^I                   : (TokenType[TokenCount++] = NUMBER_TOKEN));$

WARNING:TABSTOP: Statements should start on a tabstop
#838: FILE: debug/mdb/mdb-logic.c:809:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#839: FILE: debug/mdb/mdb-logic.c:810:
+	     if (*tmp == 'D' || *tmp == 'd')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#839: FILE: debug/mdb/mdb-logic.c:810:
+	     if (*tmp == 'D' || *tmp == 'd')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#840: FILE: debug/mdb/mdb-logic.c:811:
+	     {

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#842: FILE: debug/mdb/mdb-logic.c:813:
+		if (*tmp == 'X' || *tmp == 'x')
+		{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#842: FILE: debug/mdb/mdb-logic.c:813:
+		if (*tmp == 'X' || *tmp == 'x')
+		{

WARNING:TABSTOP: Statements should start on a tabstop
#844: FILE: debug/mdb/mdb-logic.c:815:
+		   if (stackFrame)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (19, 22)
#844: FILE: debug/mdb/mdb-logic.c:815:
+		   if (stackFrame)
+		      TokenValue[TokenCount] = stackFrame->tEDX;

CHECK:CAMELCASE: Avoid CamelCase: <tEDX>
#845: FILE: debug/mdb/mdb-logic.c:816:
+		      TokenValue[TokenCount] = stackFrame->tEDX;

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#846: FILE: debug/mdb/mdb-logic.c:817:
+		   TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

CHECK:SPACING: No space is necessary after a cast
#846: FILE: debug/mdb/mdb-logic.c:817:
+		   TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#851: FILE: debug/mdb/mdb-logic.c:822:
+		   break;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#853: FILE: debug/mdb/mdb-logic.c:824:
+		if (*tmp == 'I' || *tmp == 'i')
+		{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#853: FILE: debug/mdb/mdb-logic.c:824:
+		if (*tmp == 'I' || *tmp == 'i')
+		{

WARNING:TABSTOP: Statements should start on a tabstop
#855: FILE: debug/mdb/mdb-logic.c:826:
+		   if (stackFrame)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (19, 22)
#855: FILE: debug/mdb/mdb-logic.c:826:
+		   if (stackFrame)
+		      TokenValue[TokenCount] = stackFrame->tEDI;

CHECK:CAMELCASE: Avoid CamelCase: <tEDI>
#856: FILE: debug/mdb/mdb-logic.c:827:
+		      TokenValue[TokenCount] = stackFrame->tEDI;

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#857: FILE: debug/mdb/mdb-logic.c:828:
+		   TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

CHECK:SPACING: No space is necessary after a cast
#857: FILE: debug/mdb/mdb-logic.c:828:
+		   TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#862: FILE: debug/mdb/mdb-logic.c:833:
+		   break;

CHECK:SPACING: No space is necessary after a cast
#864: FILE: debug/mdb/mdb-logic.c:835:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

ERROR:CODE_INDENT: code indent should use tabs where possible
#866: FILE: debug/mdb/mdb-logic.c:837:
+                                                   mode);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#866: FILE: debug/mdb/mdb-logic.c:837:
+		TokenValue[TokenCount] = GetNumber(p, &p, &delta, &retCode,
+                                                   mode);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#866: FILE: debug/mdb/mdb-logic.c:837:
+                                                   mode);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#867: FILE: debug/mdb/mdb-logic.c:838:
+^I        ((retCode) ? (TokenType[TokenCount++] = INVALID_NUMBER_TOKEN)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#868: FILE: debug/mdb/mdb-logic.c:839:
+^I                   : (TokenType[TokenCount++] = NUMBER_TOKEN));$

WARNING:TABSTOP: Statements should start on a tabstop
#870: FILE: debug/mdb/mdb-logic.c:841:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#871: FILE: debug/mdb/mdb-logic.c:842:
+	     if (*tmp == 'S' || *tmp == 's')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#871: FILE: debug/mdb/mdb-logic.c:842:
+	     if (*tmp == 'S' || *tmp == 's')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#872: FILE: debug/mdb/mdb-logic.c:843:
+	     {

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#874: FILE: debug/mdb/mdb-logic.c:845:
+		if (*tmp == 'P' || *tmp == 'p')
+		{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#874: FILE: debug/mdb/mdb-logic.c:845:
+		if (*tmp == 'P' || *tmp == 'p')
+		{

WARNING:TABSTOP: Statements should start on a tabstop
#876: FILE: debug/mdb/mdb-logic.c:847:
+		   if (stackFrame)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (19, 22)
#876: FILE: debug/mdb/mdb-logic.c:847:
+		   if (stackFrame)
+		      TokenValue[TokenCount] = stackFrame->tESP;

CHECK:CAMELCASE: Avoid CamelCase: <tESP>
#877: FILE: debug/mdb/mdb-logic.c:848:
+		      TokenValue[TokenCount] = stackFrame->tESP;

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#878: FILE: debug/mdb/mdb-logic.c:849:
+		   TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

CHECK:SPACING: No space is necessary after a cast
#878: FILE: debug/mdb/mdb-logic.c:849:
+		   TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#883: FILE: debug/mdb/mdb-logic.c:854:
+		   break;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#885: FILE: debug/mdb/mdb-logic.c:856:
+		if (*tmp == 'I' || *tmp == 'i')
+		{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#885: FILE: debug/mdb/mdb-logic.c:856:
+		if (*tmp == 'I' || *tmp == 'i')
+		{

WARNING:TABSTOP: Statements should start on a tabstop
#887: FILE: debug/mdb/mdb-logic.c:858:
+		   if (stackFrame)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (19, 22)
#887: FILE: debug/mdb/mdb-logic.c:858:
+		   if (stackFrame)
+		      TokenValue[TokenCount] = stackFrame->tESI;

CHECK:CAMELCASE: Avoid CamelCase: <tESI>
#888: FILE: debug/mdb/mdb-logic.c:859:
+		      TokenValue[TokenCount] = stackFrame->tESI;

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#889: FILE: debug/mdb/mdb-logic.c:860:
+		   TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

CHECK:SPACING: No space is necessary after a cast
#889: FILE: debug/mdb/mdb-logic.c:860:
+		   TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#894: FILE: debug/mdb/mdb-logic.c:865:
+		   break;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#896: FILE: debug/mdb/mdb-logic.c:867:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tES;

CHECK:CAMELCASE: Avoid CamelCase: <tES>
#897: FILE: debug/mdb/mdb-logic.c:868:
+		   TokenValue[TokenCount] = stackFrame->tES;

CHECK:SPACING: No space is necessary after a cast
#898: FILE: debug/mdb/mdb-logic.c:869:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#903: FILE: debug/mdb/mdb-logic.c:874:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#904: FILE: debug/mdb/mdb-logic.c:875:
+	     if (*tmp == 'I' || *tmp == 'i')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#904: FILE: debug/mdb/mdb-logic.c:875:
+	     if (*tmp == 'I' || *tmp == 'i')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#905: FILE: debug/mdb/mdb-logic.c:876:
+	     {

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#907: FILE: debug/mdb/mdb-logic.c:878:
+		if (*tmp == 'P' || *tmp == 'p')
+		{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#907: FILE: debug/mdb/mdb-logic.c:878:
+		if (*tmp == 'P' || *tmp == 'p')
+		{

WARNING:TABSTOP: Statements should start on a tabstop
#909: FILE: debug/mdb/mdb-logic.c:880:
+		   if (stackFrame)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (19, 22)
#909: FILE: debug/mdb/mdb-logic.c:880:
+		   if (stackFrame)
+		      TokenValue[TokenCount] = stackFrame->tEIP;

CHECK:CAMELCASE: Avoid CamelCase: <tEIP>
#910: FILE: debug/mdb/mdb-logic.c:881:
+		      TokenValue[TokenCount] = stackFrame->tEIP;

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#911: FILE: debug/mdb/mdb-logic.c:882:
+		   TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

CHECK:SPACING: No space is necessary after a cast
#911: FILE: debug/mdb/mdb-logic.c:882:
+		   TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#916: FILE: debug/mdb/mdb-logic.c:887:
+		   break;

WARNING:TABSTOP: Statements should start on a tabstop
#918: FILE: debug/mdb/mdb-logic.c:889:
+	     }

CHECK:SPACING: No space is necessary after a cast
#919: FILE: debug/mdb/mdb-logic.c:890:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

ERROR:CODE_INDENT: code indent should use tabs where possible
#922: FILE: debug/mdb/mdb-logic.c:893:
+^I                : (TokenType[TokenCount++] = NUMBER_TOKEN));$

WARNING:TABSTOP: Statements should start on a tabstop
#923: FILE: debug/mdb/mdb-logic.c:894:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#925: FILE: debug/mdb/mdb-logic.c:896:
+	  case 'f':

WARNING:TABSTOP: Statements should start on a tabstop
#926: FILE: debug/mdb/mdb-logic.c:897:
+	  case 'F':

WARNING:TABSTOP: Statements should start on a tabstop
#929: FILE: debug/mdb/mdb-logic.c:900:
+	     if (*tmp == 'S' || *tmp == 's')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#929: FILE: debug/mdb/mdb-logic.c:900:
+	     if (*tmp == 'S' || *tmp == 's')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#930: FILE: debug/mdb/mdb-logic.c:901:
+	     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#931: FILE: debug/mdb/mdb-logic.c:902:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tFS;

CHECK:CAMELCASE: Avoid CamelCase: <tFS>
#932: FILE: debug/mdb/mdb-logic.c:903:
+		   TokenValue[TokenCount] = stackFrame->tFS;

CHECK:SPACING: No space is necessary after a cast
#933: FILE: debug/mdb/mdb-logic.c:904:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#938: FILE: debug/mdb/mdb-logic.c:909:
+	     }

CHECK:SPACING: No space is necessary after a cast
#939: FILE: debug/mdb/mdb-logic.c:910:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

ERROR:CODE_INDENT: code indent should use tabs where possible
#942: FILE: debug/mdb/mdb-logic.c:913:
+^I                : (TokenType[TokenCount++] = NUMBER_TOKEN));$

WARNING:TABSTOP: Statements should start on a tabstop
#943: FILE: debug/mdb/mdb-logic.c:914:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#945: FILE: debug/mdb/mdb-logic.c:916:
+	  case 'g':

WARNING:TABSTOP: Statements should start on a tabstop
#946: FILE: debug/mdb/mdb-logic.c:917:
+	  case 'G':   /* GS */

WARNING:TABSTOP: Statements should start on a tabstop
#948: FILE: debug/mdb/mdb-logic.c:919:
+	     if (*p == 'S' || *p == 's')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#948: FILE: debug/mdb/mdb-logic.c:919:
+	     if (*p == 'S' || *p == 's')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#949: FILE: debug/mdb/mdb-logic.c:920:
+	     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#950: FILE: debug/mdb/mdb-logic.c:921:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tGS;

CHECK:CAMELCASE: Avoid CamelCase: <tGS>
#951: FILE: debug/mdb/mdb-logic.c:922:
+		   TokenValue[TokenCount] = stackFrame->tGS;

CHECK:SPACING: No space is necessary after a cast
#952: FILE: debug/mdb/mdb-logic.c:923:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#956: FILE: debug/mdb/mdb-logic.c:927:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#957: FILE: debug/mdb/mdb-logic.c:928:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#959: FILE: debug/mdb/mdb-logic.c:930:
+	  case 's':

WARNING:TABSTOP: Statements should start on a tabstop
#960: FILE: debug/mdb/mdb-logic.c:931:
+	  case 'S':

WARNING:TABSTOP: Statements should start on a tabstop
#962: FILE: debug/mdb/mdb-logic.c:933:
+	     if (*p == 'S' || *p == 's')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#962: FILE: debug/mdb/mdb-logic.c:933:
+	     if (*p == 'S' || *p == 's')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#963: FILE: debug/mdb/mdb-logic.c:934:
+	     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#964: FILE: debug/mdb/mdb-logic.c:935:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tSS;

CHECK:CAMELCASE: Avoid CamelCase: <tSS>
#965: FILE: debug/mdb/mdb-logic.c:936:
+		   TokenValue[TokenCount] = stackFrame->tSS;

CHECK:SPACING: No space is necessary after a cast
#966: FILE: debug/mdb/mdb-logic.c:937:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#970: FILE: debug/mdb/mdb-logic.c:941:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#971: FILE: debug/mdb/mdb-logic.c:942:
+	     if (*p == 'F' || *p == 'f')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#971: FILE: debug/mdb/mdb-logic.c:942:
+	     if (*p == 'F' || *p == 'f')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#972: FILE: debug/mdb/mdb-logic.c:943:
+	     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#973: FILE: debug/mdb/mdb-logic.c:944:
+		if (stackFrame)
+		   TokenValue[TokenCount] = stackFrame->tSystemFlags & SF_FLAG;

CHECK:SPACING: No space is necessary after a cast
#975: FILE: debug/mdb/mdb-logic.c:946:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#979: FILE: debug/mdb/mdb-logic.c:950:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#980: FILE: debug/mdb/mdb-logic.c:951:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#982: FILE: debug/mdb/mdb-logic.c:953:
+	  case '[':

CHECK:SPACING: No space is necessary after a cast
#983: FILE: debug/mdb/mdb-logic.c:954:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#986: FILE: debug/mdb/mdb-logic.c:957:
+	     if (*p == 'D' || *p == 'd')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#986: FILE: debug/mdb/mdb-logic.c:957:
+	     if (*p == 'D' || *p == 'd')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#987: FILE: debug/mdb/mdb-logic.c:958:
+	     {

CHECK:SPACING: No space is necessary after a cast
#988: FILE: debug/mdb/mdb-logic.c:959:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#992: FILE: debug/mdb/mdb-logic.c:963:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#993: FILE: debug/mdb/mdb-logic.c:964:
+	     if (*p == 'W' || *p == 'w')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#993: FILE: debug/mdb/mdb-logic.c:964:
+	     if (*p == 'W' || *p == 'w')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#994: FILE: debug/mdb/mdb-logic.c:965:
+	     {

CHECK:SPACING: No space is necessary after a cast
#995: FILE: debug/mdb/mdb-logic.c:966:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#999: FILE: debug/mdb/mdb-logic.c:970:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#1000: FILE: debug/mdb/mdb-logic.c:971:
+	     if (*p == 'B' || *p == 'b')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1000: FILE: debug/mdb/mdb-logic.c:971:
+	     if (*p == 'B' || *p == 'b')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1001: FILE: debug/mdb/mdb-logic.c:972:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1002: FILE: debug/mdb/mdb-logic.c:973:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1006: FILE: debug/mdb/mdb-logic.c:977:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#1007: FILE: debug/mdb/mdb-logic.c:978:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1009: FILE: debug/mdb/mdb-logic.c:980:
+	  case '=':

WARNING:TABSTOP: Statements should start on a tabstop
#1011: FILE: debug/mdb/mdb-logic.c:982:
+	     if (*p == '=')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1011: FILE: debug/mdb/mdb-logic.c:982:
+	     if (*p == '=')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1012: FILE: debug/mdb/mdb-logic.c:983:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1013: FILE: debug/mdb/mdb-logic.c:984:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1017: FILE: debug/mdb/mdb-logic.c:988:
+	     }

CHECK:SPACING: No space is necessary after a cast
#1018: FILE: debug/mdb/mdb-logic.c:989:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1020: FILE: debug/mdb/mdb-logic.c:991:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1022: FILE: debug/mdb/mdb-logic.c:993:
+	  case '<':

WARNING:TABSTOP: Statements should start on a tabstop
#1024: FILE: debug/mdb/mdb-logic.c:995:
+	     if (*p == '<')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1024: FILE: debug/mdb/mdb-logic.c:995:
+	     if (*p == '<')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1025: FILE: debug/mdb/mdb-logic.c:996:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1026: FILE: debug/mdb/mdb-logic.c:997:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1030: FILE: debug/mdb/mdb-logic.c:1001:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#1031: FILE: debug/mdb/mdb-logic.c:1002:
+	     if (*p == '=')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1031: FILE: debug/mdb/mdb-logic.c:1002:
+	     if (*p == '=')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1032: FILE: debug/mdb/mdb-logic.c:1003:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1033: FILE: debug/mdb/mdb-logic.c:1004:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1037: FILE: debug/mdb/mdb-logic.c:1008:
+	     }

CHECK:SPACING: No space is necessary after a cast
#1038: FILE: debug/mdb/mdb-logic.c:1009:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1040: FILE: debug/mdb/mdb-logic.c:1011:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1042: FILE: debug/mdb/mdb-logic.c:1013:
+	  case '>':

WARNING:TABSTOP: Statements should start on a tabstop
#1044: FILE: debug/mdb/mdb-logic.c:1015:
+	     if (*p == '>')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1044: FILE: debug/mdb/mdb-logic.c:1015:
+	     if (*p == '>')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1045: FILE: debug/mdb/mdb-logic.c:1016:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1046: FILE: debug/mdb/mdb-logic.c:1017:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1050: FILE: debug/mdb/mdb-logic.c:1021:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#1051: FILE: debug/mdb/mdb-logic.c:1022:
+	     if (*p == '=')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1051: FILE: debug/mdb/mdb-logic.c:1022:
+	     if (*p == '=')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1052: FILE: debug/mdb/mdb-logic.c:1023:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1053: FILE: debug/mdb/mdb-logic.c:1024:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1057: FILE: debug/mdb/mdb-logic.c:1028:
+	     }

CHECK:SPACING: No space is necessary after a cast
#1058: FILE: debug/mdb/mdb-logic.c:1029:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1060: FILE: debug/mdb/mdb-logic.c:1031:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1062: FILE: debug/mdb/mdb-logic.c:1033:
+	  case '|':

WARNING:TABSTOP: Statements should start on a tabstop
#1064: FILE: debug/mdb/mdb-logic.c:1035:
+	     if (*p == '|')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1064: FILE: debug/mdb/mdb-logic.c:1035:
+	     if (*p == '|')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1065: FILE: debug/mdb/mdb-logic.c:1036:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1066: FILE: debug/mdb/mdb-logic.c:1037:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1070: FILE: debug/mdb/mdb-logic.c:1041:
+	     }

CHECK:SPACING: No space is necessary after a cast
#1071: FILE: debug/mdb/mdb-logic.c:1042:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1073: FILE: debug/mdb/mdb-logic.c:1044:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1075: FILE: debug/mdb/mdb-logic.c:1046:
+	  case '&':

WARNING:TABSTOP: Statements should start on a tabstop
#1077: FILE: debug/mdb/mdb-logic.c:1048:
+	     if (*p == '&')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1077: FILE: debug/mdb/mdb-logic.c:1048:
+	     if (*p == '&')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1078: FILE: debug/mdb/mdb-logic.c:1049:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1079: FILE: debug/mdb/mdb-logic.c:1050:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1083: FILE: debug/mdb/mdb-logic.c:1054:
+	     }

CHECK:SPACING: No space is necessary after a cast
#1084: FILE: debug/mdb/mdb-logic.c:1055:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1086: FILE: debug/mdb/mdb-logic.c:1057:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1088: FILE: debug/mdb/mdb-logic.c:1059:
+	  default: /* if we get a default, drop the character on the floor */

WARNING:TABSTOP: Statements should start on a tabstop
#1090: FILE: debug/mdb/mdb-logic.c:1061:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1092: FILE: debug/mdb/mdb-logic.c:1063:
+	 }

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1092: FILE: debug/mdb/mdb-logic.c:1063:
+
+	 }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1093: FILE: debug/mdb/mdb-logic.c:1064:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1094: FILE: debug/mdb/mdb-logic.c:1065:
+       else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1094: FILE: debug/mdb/mdb-logic.c:1065:
+       else
+       {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 9)
#1094: FILE: debug/mdb/mdb-logic.c:1065:
+       else
+       {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1094: FILE: debug/mdb/mdb-logic.c:1065:
+       }
+       else

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1095: FILE: debug/mdb/mdb-logic.c:1066:
+       {$

WARNING:TABSTOP: Statements should start on a tabstop
#1096: FILE: debug/mdb/mdb-logic.c:1067:
+	 switch (*p)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1096: FILE: debug/mdb/mdb-logic.c:1067:
+	 switch (*p)
+	 {

WARNING:TABSTOP: Statements should start on a tabstop
#1097: FILE: debug/mdb/mdb-logic.c:1068:
+	 {

WARNING:TABSTOP: Statements should start on a tabstop
#1098: FILE: debug/mdb/mdb-logic.c:1069:
+	  case '\0':

CHECK:SPACING: No space is necessary after a cast
#1099: FILE: debug/mdb/mdb-logic.c:1070:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1101: FILE: debug/mdb/mdb-logic.c:1072:
+	     return (p);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1101: FILE: debug/mdb/mdb-logic.c:1072:
+	     return (p);

WARNING:TABSTOP: Statements should start on a tabstop
#1103: FILE: debug/mdb/mdb-logic.c:1074:
+	  case ']':

CHECK:SPACING: No space is necessary after a cast
#1104: FILE: debug/mdb/mdb-logic.c:1075:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1107: FILE: debug/mdb/mdb-logic.c:1078:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1109: FILE: debug/mdb/mdb-logic.c:1080:
+	  case '(':

CHECK:SPACING: No space is necessary after a cast
#1110: FILE: debug/mdb/mdb-logic.c:1081:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1113: FILE: debug/mdb/mdb-logic.c:1084:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1115: FILE: debug/mdb/mdb-logic.c:1086:
+	  case ')':

CHECK:SPACING: No space is necessary after a cast
#1116: FILE: debug/mdb/mdb-logic.c:1087:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1119: FILE: debug/mdb/mdb-logic.c:1090:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1121: FILE: debug/mdb/mdb-logic.c:1092:
+	  case '+':

CHECK:SPACING: No space is necessary after a cast
#1122: FILE: debug/mdb/mdb-logic.c:1093:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1125: FILE: debug/mdb/mdb-logic.c:1096:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1127: FILE: debug/mdb/mdb-logic.c:1098:
+	  case '-':

CHECK:SPACING: No space is necessary after a cast
#1128: FILE: debug/mdb/mdb-logic.c:1099:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1131: FILE: debug/mdb/mdb-logic.c:1102:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1133: FILE: debug/mdb/mdb-logic.c:1104:
+	  case '*':

CHECK:SPACING: No space is necessary after a cast
#1134: FILE: debug/mdb/mdb-logic.c:1105:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1137: FILE: debug/mdb/mdb-logic.c:1108:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1139: FILE: debug/mdb/mdb-logic.c:1110:
+	  case '/':

CHECK:SPACING: No space is necessary after a cast
#1140: FILE: debug/mdb/mdb-logic.c:1111:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1143: FILE: debug/mdb/mdb-logic.c:1114:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1145: FILE: debug/mdb/mdb-logic.c:1116:
+	  case '%':

CHECK:SPACING: No space is necessary after a cast
#1146: FILE: debug/mdb/mdb-logic.c:1117:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1149: FILE: debug/mdb/mdb-logic.c:1120:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1151: FILE: debug/mdb/mdb-logic.c:1122:
+	  case '~':

CHECK:SPACING: No space is necessary after a cast
#1152: FILE: debug/mdb/mdb-logic.c:1123:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1155: FILE: debug/mdb/mdb-logic.c:1126:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1157: FILE: debug/mdb/mdb-logic.c:1128:
+	  case '^':

CHECK:SPACING: No space is necessary after a cast
#1158: FILE: debug/mdb/mdb-logic.c:1129:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1161: FILE: debug/mdb/mdb-logic.c:1132:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1163: FILE: debug/mdb/mdb-logic.c:1134:
+	  case '!':

WARNING:TABSTOP: Statements should start on a tabstop
#1165: FILE: debug/mdb/mdb-logic.c:1136:
+	     if (*p == '=')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1165: FILE: debug/mdb/mdb-logic.c:1136:
+	     if (*p == '=')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1166: FILE: debug/mdb/mdb-logic.c:1137:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1167: FILE: debug/mdb/mdb-logic.c:1138:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1171: FILE: debug/mdb/mdb-logic.c:1142:
+	     }

CHECK:SPACING: No space is necessary after a cast
#1172: FILE: debug/mdb/mdb-logic.c:1143:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1174: FILE: debug/mdb/mdb-logic.c:1145:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1176: FILE: debug/mdb/mdb-logic.c:1147:
+	  case ' ':   /* drop spaces on the floor */

WARNING:TABSTOP: Statements should start on a tabstop
#1178: FILE: debug/mdb/mdb-logic.c:1149:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1184: FILE: debug/mdb/mdb-logic.c:1155:
+	  case 'x':

WARNING:TABSTOP: Statements should start on a tabstop
#1185: FILE: debug/mdb/mdb-logic.c:1156:
+	  case 'X':

WARNING:TABSTOP: Statements should start on a tabstop
#1186: FILE: debug/mdb/mdb-logic.c:1157:
+	  case '0':

WARNING:TABSTOP: Statements should start on a tabstop
#1187: FILE: debug/mdb/mdb-logic.c:1158:
+	  case '1':

WARNING:TABSTOP: Statements should start on a tabstop
#1188: FILE: debug/mdb/mdb-logic.c:1159:
+	  case '2':

WARNING:TABSTOP: Statements should start on a tabstop
#1189: FILE: debug/mdb/mdb-logic.c:1160:
+	  case '3':

WARNING:TABSTOP: Statements should start on a tabstop
#1190: FILE: debug/mdb/mdb-logic.c:1161:
+	  case '4':

WARNING:TABSTOP: Statements should start on a tabstop
#1191: FILE: debug/mdb/mdb-logic.c:1162:
+	  case '5':

WARNING:TABSTOP: Statements should start on a tabstop
#1192: FILE: debug/mdb/mdb-logic.c:1163:
+	  case '6':

WARNING:TABSTOP: Statements should start on a tabstop
#1193: FILE: debug/mdb/mdb-logic.c:1164:
+	  case '7':

WARNING:TABSTOP: Statements should start on a tabstop
#1194: FILE: debug/mdb/mdb-logic.c:1165:
+	  case '8':

WARNING:TABSTOP: Statements should start on a tabstop
#1195: FILE: debug/mdb/mdb-logic.c:1166:
+	  case '9':

WARNING:TABSTOP: Statements should start on a tabstop
#1196: FILE: debug/mdb/mdb-logic.c:1167:
+	  case 'a':

WARNING:TABSTOP: Statements should start on a tabstop
#1197: FILE: debug/mdb/mdb-logic.c:1168:
+	  case 'A':

WARNING:TABSTOP: Statements should start on a tabstop
#1198: FILE: debug/mdb/mdb-logic.c:1169:
+	  case 'b':

WARNING:TABSTOP: Statements should start on a tabstop
#1199: FILE: debug/mdb/mdb-logic.c:1170:
+	  case 'B':

WARNING:TABSTOP: Statements should start on a tabstop
#1200: FILE: debug/mdb/mdb-logic.c:1171:
+	  case 'c':

WARNING:TABSTOP: Statements should start on a tabstop
#1201: FILE: debug/mdb/mdb-logic.c:1172:
+	  case 'C':

WARNING:TABSTOP: Statements should start on a tabstop
#1202: FILE: debug/mdb/mdb-logic.c:1173:
+	  case 'd':

WARNING:TABSTOP: Statements should start on a tabstop
#1203: FILE: debug/mdb/mdb-logic.c:1174:
+	  case 'D':

WARNING:TABSTOP: Statements should start on a tabstop
#1204: FILE: debug/mdb/mdb-logic.c:1175:
+	  case 'e':

WARNING:TABSTOP: Statements should start on a tabstop
#1205: FILE: debug/mdb/mdb-logic.c:1176:
+	  case 'E':

WARNING:TABSTOP: Statements should start on a tabstop
#1206: FILE: debug/mdb/mdb-logic.c:1177:
+	  case 'f':

WARNING:TABSTOP: Statements should start on a tabstop
#1207: FILE: debug/mdb/mdb-logic.c:1178:
+	  case 'F':

CHECK:SPACING: No space is necessary after a cast
#1208: FILE: debug/mdb/mdb-logic.c:1179:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1211: FILE: debug/mdb/mdb-logic.c:1182:
+^I                : (TokenType[TokenCount++] = NUMBER_TOKEN));$

WARNING:TABSTOP: Statements should start on a tabstop
#1212: FILE: debug/mdb/mdb-logic.c:1183:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1214: FILE: debug/mdb/mdb-logic.c:1185:
+	  case '[':

CHECK:SPACING: No space is necessary after a cast
#1215: FILE: debug/mdb/mdb-logic.c:1186:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1218: FILE: debug/mdb/mdb-logic.c:1189:
+	     if (*p == 'D' || *p == 'd')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1218: FILE: debug/mdb/mdb-logic.c:1189:
+	     if (*p == 'D' || *p == 'd')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1219: FILE: debug/mdb/mdb-logic.c:1190:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1220: FILE: debug/mdb/mdb-logic.c:1191:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1224: FILE: debug/mdb/mdb-logic.c:1195:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#1225: FILE: debug/mdb/mdb-logic.c:1196:
+	     if (*p == 'W' || *p == 'w')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1225: FILE: debug/mdb/mdb-logic.c:1196:
+	     if (*p == 'W' || *p == 'w')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1226: FILE: debug/mdb/mdb-logic.c:1197:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1227: FILE: debug/mdb/mdb-logic.c:1198:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1231: FILE: debug/mdb/mdb-logic.c:1202:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#1232: FILE: debug/mdb/mdb-logic.c:1203:
+	     if (*p == 'B' || *p == 'b')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1232: FILE: debug/mdb/mdb-logic.c:1203:
+	     if (*p == 'B' || *p == 'b')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1233: FILE: debug/mdb/mdb-logic.c:1204:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1234: FILE: debug/mdb/mdb-logic.c:1205:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1238: FILE: debug/mdb/mdb-logic.c:1209:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#1239: FILE: debug/mdb/mdb-logic.c:1210:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1241: FILE: debug/mdb/mdb-logic.c:1212:
+	  case '=':

WARNING:TABSTOP: Statements should start on a tabstop
#1243: FILE: debug/mdb/mdb-logic.c:1214:
+	     if (*p == '=')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1243: FILE: debug/mdb/mdb-logic.c:1214:
+	     if (*p == '=')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1244: FILE: debug/mdb/mdb-logic.c:1215:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1245: FILE: debug/mdb/mdb-logic.c:1216:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1249: FILE: debug/mdb/mdb-logic.c:1220:
+	     }

CHECK:SPACING: No space is necessary after a cast
#1250: FILE: debug/mdb/mdb-logic.c:1221:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1252: FILE: debug/mdb/mdb-logic.c:1223:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1254: FILE: debug/mdb/mdb-logic.c:1225:
+	  case '<':

WARNING:TABSTOP: Statements should start on a tabstop
#1256: FILE: debug/mdb/mdb-logic.c:1227:
+	     if (*p == '<')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1256: FILE: debug/mdb/mdb-logic.c:1227:
+	     if (*p == '<')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1257: FILE: debug/mdb/mdb-logic.c:1228:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1258: FILE: debug/mdb/mdb-logic.c:1229:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1262: FILE: debug/mdb/mdb-logic.c:1233:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#1263: FILE: debug/mdb/mdb-logic.c:1234:
+	     if (*p == '=')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1263: FILE: debug/mdb/mdb-logic.c:1234:
+	     if (*p == '=')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1264: FILE: debug/mdb/mdb-logic.c:1235:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1265: FILE: debug/mdb/mdb-logic.c:1236:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1269: FILE: debug/mdb/mdb-logic.c:1240:
+	     }

CHECK:SPACING: No space is necessary after a cast
#1270: FILE: debug/mdb/mdb-logic.c:1241:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1272: FILE: debug/mdb/mdb-logic.c:1243:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1274: FILE: debug/mdb/mdb-logic.c:1245:
+	  case '>':

WARNING:TABSTOP: Statements should start on a tabstop
#1276: FILE: debug/mdb/mdb-logic.c:1247:
+	     if (*p == '>')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1276: FILE: debug/mdb/mdb-logic.c:1247:
+	     if (*p == '>')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1277: FILE: debug/mdb/mdb-logic.c:1248:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1278: FILE: debug/mdb/mdb-logic.c:1249:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1282: FILE: debug/mdb/mdb-logic.c:1253:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#1283: FILE: debug/mdb/mdb-logic.c:1254:
+	     if (*p == '=')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1283: FILE: debug/mdb/mdb-logic.c:1254:
+	     if (*p == '=')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1284: FILE: debug/mdb/mdb-logic.c:1255:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1285: FILE: debug/mdb/mdb-logic.c:1256:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1289: FILE: debug/mdb/mdb-logic.c:1260:
+	     }

CHECK:SPACING: No space is necessary after a cast
#1290: FILE: debug/mdb/mdb-logic.c:1261:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1292: FILE: debug/mdb/mdb-logic.c:1263:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1294: FILE: debug/mdb/mdb-logic.c:1265:
+	  case '|':

WARNING:TABSTOP: Statements should start on a tabstop
#1296: FILE: debug/mdb/mdb-logic.c:1267:
+	     if (*p == '|')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1296: FILE: debug/mdb/mdb-logic.c:1267:
+	     if (*p == '|')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1297: FILE: debug/mdb/mdb-logic.c:1268:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1298: FILE: debug/mdb/mdb-logic.c:1269:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1302: FILE: debug/mdb/mdb-logic.c:1273:
+	     }

CHECK:SPACING: No space is necessary after a cast
#1303: FILE: debug/mdb/mdb-logic.c:1274:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1305: FILE: debug/mdb/mdb-logic.c:1276:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1307: FILE: debug/mdb/mdb-logic.c:1278:
+	  case '&':

WARNING:TABSTOP: Statements should start on a tabstop
#1309: FILE: debug/mdb/mdb-logic.c:1280:
+	     if (*p == '&')

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1309: FILE: debug/mdb/mdb-logic.c:1280:
+	     if (*p == '&')
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1310: FILE: debug/mdb/mdb-logic.c:1281:
+	     {

CHECK:SPACING: No space is necessary after a cast
#1311: FILE: debug/mdb/mdb-logic.c:1282:
+		TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1315: FILE: debug/mdb/mdb-logic.c:1286:
+	     }

CHECK:SPACING: No space is necessary after a cast
#1316: FILE: debug/mdb/mdb-logic.c:1287:
+	     TokenIndex[TokenCount] = (unsigned long) ((unsigned long) p - (unsigned long) op);

WARNING:TABSTOP: Statements should start on a tabstop
#1318: FILE: debug/mdb/mdb-logic.c:1289:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1320: FILE: debug/mdb/mdb-logic.c:1291:
+	  default: /* if we get a default, drop the character on the floor */

WARNING:TABSTOP: Statements should start on a tabstop
#1322: FILE: debug/mdb/mdb-logic.c:1293:
+	     break;

WARNING:TABSTOP: Statements should start on a tabstop
#1324: FILE: debug/mdb/mdb-logic.c:1295:
+	 }

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1324: FILE: debug/mdb/mdb-logic.c:1295:
+
+	 }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1325: FILE: debug/mdb/mdb-logic.c:1296:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1326: FILE: debug/mdb/mdb-logic.c:1297:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1327: FILE: debug/mdb/mdb-logic.c:1298:
+    return p;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1329: FILE: debug/mdb/mdb-logic.c:1300:
+
+}

CHECK:CAMELCASE: Avoid CamelCase: <displayExpressionHelp>
#1331: FILE: debug/mdb/mdb-logic.c:1302:
+void displayExpressionHelp(void)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1333: FILE: debug/mdb/mdb-logic.c:1304:
+{
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1334: FILE: debug/mdb/mdb-logic.c:1305:
+       if (DBGPrint("Arithmetic Operators\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1334: FILE: debug/mdb/mdb-logic.c:1305:
+       if (DBGPrint("Arithmetic Operators\n")) return;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:CAMELCASE: Avoid CamelCase: <DBGPrint>
#1334: FILE: debug/mdb/mdb-logic.c:1305:
+       if (DBGPrint("Arithmetic Operators\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1335: FILE: debug/mdb/mdb-logic.c:1306:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1335: FILE: debug/mdb/mdb-logic.c:1306:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1336: FILE: debug/mdb/mdb-logic.c:1307:
+       if (DBGPrint("+   add\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1336: FILE: debug/mdb/mdb-logic.c:1307:
+       if (DBGPrint("+   add\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1337: FILE: debug/mdb/mdb-logic.c:1308:
+       if (DBGPrint("-   subtract\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1337: FILE: debug/mdb/mdb-logic.c:1308:
+       if (DBGPrint("-   subtract\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1338: FILE: debug/mdb/mdb-logic.c:1309:
+       if (DBGPrint("*   multiply\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1338: FILE: debug/mdb/mdb-logic.c:1309:
+       if (DBGPrint("*   multiply\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1339: FILE: debug/mdb/mdb-logic.c:1310:
+       if (DBGPrint("/   divide\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1339: FILE: debug/mdb/mdb-logic.c:1310:
+       if (DBGPrint("/   divide\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1340: FILE: debug/mdb/mdb-logic.c:1311:
+       if (DBGPrint("<<  bit shift left\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1340: FILE: debug/mdb/mdb-logic.c:1311:
+       if (DBGPrint("<<  bit shift left\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1341: FILE: debug/mdb/mdb-logic.c:1312:
+       if (DBGPrint(">>  bit shift right\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1341: FILE: debug/mdb/mdb-logic.c:1312:
+       if (DBGPrint(">>  bit shift right\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1342: FILE: debug/mdb/mdb-logic.c:1313:
+       if (DBGPrint("|   OR operator\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1342: FILE: debug/mdb/mdb-logic.c:1313:
+       if (DBGPrint("|   OR operator\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1343: FILE: debug/mdb/mdb-logic.c:1314:
+       if (DBGPrint("&   AND operator\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1343: FILE: debug/mdb/mdb-logic.c:1314:
+       if (DBGPrint("&   AND operator\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1344: FILE: debug/mdb/mdb-logic.c:1315:
+       if (DBGPrint("^   XOR operator\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1344: FILE: debug/mdb/mdb-logic.c:1315:
+       if (DBGPrint("^   XOR operator\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1345: FILE: debug/mdb/mdb-logic.c:1316:
+       if (DBGPrint("~   NEG operator\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1345: FILE: debug/mdb/mdb-logic.c:1316:
+       if (DBGPrint("~   NEG operator\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1346: FILE: debug/mdb/mdb-logic.c:1317:
+       if (DBGPrint("%%   MODULO operator\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1346: FILE: debug/mdb/mdb-logic.c:1317:
+       if (DBGPrint("%%   MODULO operator\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1347: FILE: debug/mdb/mdb-logic.c:1318:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1347: FILE: debug/mdb/mdb-logic.c:1318:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1348: FILE: debug/mdb/mdb-logic.c:1319:
+       if (DBGPrint("Example 1:\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1348: FILE: debug/mdb/mdb-logic.c:1319:
+       if (DBGPrint("Example 1:\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1349: FILE: debug/mdb/mdb-logic.c:1320:
+       if (DBGPrint("(0)> .e (100 + 100)\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1349: FILE: debug/mdb/mdb-logic.c:1320:
+       if (DBGPrint("(0)> .e (100 + 100)\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1350: FILE: debug/mdb/mdb-logic.c:1321:
+       if (DBGPrint("(0)> result = 0x200 (512)\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1350: FILE: debug/mdb/mdb-logic.c:1321:
+       if (DBGPrint("(0)> result = 0x200 (512)\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1351: FILE: debug/mdb/mdb-logic.c:1322:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1351: FILE: debug/mdb/mdb-logic.c:1322:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1352: FILE: debug/mdb/mdb-logic.c:1323:
+       if (DBGPrint("Example 2:\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1352: FILE: debug/mdb/mdb-logic.c:1323:
+       if (DBGPrint("Example 2:\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1353: FILE: debug/mdb/mdb-logic.c:1324:
+       if (DBGPrint("(0)> .e (1 << 20)\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1353: FILE: debug/mdb/mdb-logic.c:1324:
+       if (DBGPrint("(0)> .e (1 << 20)\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1354: FILE: debug/mdb/mdb-logic.c:1325:
+       if (DBGPrint("(0)> result = 0x00100000 (1,024,000)\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1354: FILE: debug/mdb/mdb-logic.c:1325:
+       if (DBGPrint("(0)> result = 0x00100000 (1,024,000)\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1355: FILE: debug/mdb/mdb-logic.c:1326:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1355: FILE: debug/mdb/mdb-logic.c:1326:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1356: FILE: debug/mdb/mdb-logic.c:1327:
+       if (DBGPrint("Example 3:\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1356: FILE: debug/mdb/mdb-logic.c:1327:
+       if (DBGPrint("Example 3:\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1357: FILE: debug/mdb/mdb-logic.c:1328:
+       if (DBGPrint("(0)> .e (FEF023 & 100F)\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1357: FILE: debug/mdb/mdb-logic.c:1328:
+       if (DBGPrint("(0)> .e (FEF023 & 100F)\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1358: FILE: debug/mdb/mdb-logic.c:1329:
+       if (DBGPrint("(0)> result = 0x1003 (4099)\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1358: FILE: debug/mdb/mdb-logic.c:1329:
+       if (DBGPrint("(0)> result = 0x1003 (4099)\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1359: FILE: debug/mdb/mdb-logic.c:1330:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1359: FILE: debug/mdb/mdb-logic.c:1330:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1360: FILE: debug/mdb/mdb-logic.c:1331:
+       if (DBGPrint("Boolean Operators (Conditional Breakpoint)\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1360: FILE: debug/mdb/mdb-logic.c:1331:
+       if (DBGPrint("Boolean Operators (Conditional Breakpoint)\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1361: FILE: debug/mdb/mdb-logic.c:1332:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1361: FILE: debug/mdb/mdb-logic.c:1332:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1362: FILE: debug/mdb/mdb-logic.c:1333:
+       if (DBGPrint("==      is equal to\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1362: FILE: debug/mdb/mdb-logic.c:1333:
+       if (DBGPrint("==      is equal to\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1363: FILE: debug/mdb/mdb-logic.c:1334:
+       if (DBGPrint("!=      is not equal to\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1363: FILE: debug/mdb/mdb-logic.c:1334:
+       if (DBGPrint("!=      is not equal to\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1364: FILE: debug/mdb/mdb-logic.c:1335:
+       if (DBGPrint("!<expr> is not\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1364: FILE: debug/mdb/mdb-logic.c:1335:
+       if (DBGPrint("!<expr> is not\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1365: FILE: debug/mdb/mdb-logic.c:1336:
+       if (DBGPrint(">       is greater than\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1365: FILE: debug/mdb/mdb-logic.c:1336:
+       if (DBGPrint(">       is greater than\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1366: FILE: debug/mdb/mdb-logic.c:1337:
+       if (DBGPrint("<       is less than\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1366: FILE: debug/mdb/mdb-logic.c:1337:
+       if (DBGPrint("<       is less than\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1367: FILE: debug/mdb/mdb-logic.c:1338:
+       if (DBGPrint(">=      is greater than or equal to\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1367: FILE: debug/mdb/mdb-logic.c:1338:
+       if (DBGPrint(">=      is greater than or equal to\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1368: FILE: debug/mdb/mdb-logic.c:1339:
+       if (DBGPrint("<=      if less than or equal to\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1368: FILE: debug/mdb/mdb-logic.c:1339:
+       if (DBGPrint("<=      if less than or equal to\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1369: FILE: debug/mdb/mdb-logic.c:1340:
+       if (DBGPrint("||      logical OR operator\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1369: FILE: debug/mdb/mdb-logic.c:1340:
+       if (DBGPrint("||      logical OR operator\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1370: FILE: debug/mdb/mdb-logic.c:1341:
+       if (DBGPrint("&&      logical AND operator\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1370: FILE: debug/mdb/mdb-logic.c:1341:
+       if (DBGPrint("&&      logical AND operator\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1371: FILE: debug/mdb/mdb-logic.c:1342:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1371: FILE: debug/mdb/mdb-logic.c:1342:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1372: FILE: debug/mdb/mdb-logic.c:1343:
+       if (DBGPrint("all breakpoint conditions must be enclosed in brackets () to\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1372: FILE: debug/mdb/mdb-logic.c:1343:
+       if (DBGPrint("all breakpoint conditions must be enclosed in brackets () to\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1373: FILE: debug/mdb/mdb-logic.c:1344:
+       if (DBGPrint("evaluate correctly\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1373: FILE: debug/mdb/mdb-logic.c:1344:
+       if (DBGPrint("evaluate correctly\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1374: FILE: debug/mdb/mdb-logic.c:1345:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1374: FILE: debug/mdb/mdb-logic.c:1345:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1375: FILE: debug/mdb/mdb-logic.c:1346:
+       if (DBGPrint("Example 1 (Execute Breakpoint):\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1375: FILE: debug/mdb/mdb-logic.c:1346:
+       if (DBGPrint("Example 1 (Execute Breakpoint):\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1376: FILE: debug/mdb/mdb-logic.c:1347:
+       if (DBGPrint("(0)> b 37000 (EAX == 20 && EBX <= 4000)\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1376: FILE: debug/mdb/mdb-logic.c:1347:
+       if (DBGPrint("(0)> b 37000 (EAX == 20 && EBX <= 4000)\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1377: FILE: debug/mdb/mdb-logic.c:1348:
+       if (DBGPrint("breakpoint will activate if condition is true (returns 1)\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1377: FILE: debug/mdb/mdb-logic.c:1348:
+       if (DBGPrint("breakpoint will activate if condition is true (returns 1)\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1378: FILE: debug/mdb/mdb-logic.c:1349:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1378: FILE: debug/mdb/mdb-logic.c:1349:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1379: FILE: debug/mdb/mdb-logic.c:1350:
+       if (DBGPrint("Example 2 (IO Breakpoint):\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1379: FILE: debug/mdb/mdb-logic.c:1350:
+       if (DBGPrint("Example 2 (IO Breakpoint):\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1380: FILE: debug/mdb/mdb-logic.c:1351:
+       if (DBGPrint("(0)> bi 3D4 (!EBX && [d ESI+40] != 2000)\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1380: FILE: debug/mdb/mdb-logic.c:1351:
+       if (DBGPrint("(0)> bi 3D4 (!EBX && [d ESI+40] != 2000)\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1381: FILE: debug/mdb/mdb-logic.c:1352:
+       if (DBGPrint("breakpoint will activate if condition is true (returns 1)\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1381: FILE: debug/mdb/mdb-logic.c:1352:
+       if (DBGPrint("breakpoint will activate if condition is true (returns 1)\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1382: FILE: debug/mdb/mdb-logic.c:1353:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1382: FILE: debug/mdb/mdb-logic.c:1353:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1383: FILE: debug/mdb/mdb-logic.c:1354:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1383: FILE: debug/mdb/mdb-logic.c:1354:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1384: FILE: debug/mdb/mdb-logic.c:1355:
+       if (DBGPrint("Register Operators\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1384: FILE: debug/mdb/mdb-logic.c:1355:
+       if (DBGPrint("Register Operators\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1385: FILE: debug/mdb/mdb-logic.c:1356:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1385: FILE: debug/mdb/mdb-logic.c:1356:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1386: FILE: debug/mdb/mdb-logic.c:1357:
+       if (DBGPrint("EAX, EBX, ECX, EDX        - general registers\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1386: FILE: debug/mdb/mdb-logic.c:1357:
+       if (DBGPrint("EAX, EBX, ECX, EDX        - general registers\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1387: FILE: debug/mdb/mdb-logic.c:1358:
+       if (DBGPrint("ESI, EDI, EBP, ESP        - pointer registers\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1387: FILE: debug/mdb/mdb-logic.c:1358:
+       if (DBGPrint("ESI, EDI, EBP, ESP        - pointer registers\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1388: FILE: debug/mdb/mdb-logic.c:1359:
+       if (DBGPrint("EIP, <symbol>             - instruction pointer or symbol\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1388: FILE: debug/mdb/mdb-logic.c:1359:
+       if (DBGPrint("EIP, <symbol>             - instruction pointer or symbol\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1389: FILE: debug/mdb/mdb-logic.c:1360:
+       if (DBGPrint("CS, DS, ES, FS, GS, SS    - segment registers\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1389: FILE: debug/mdb/mdb-logic.c:1360:
+       if (DBGPrint("CS, DS, ES, FS, GS, SS    - segment registers\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1390: FILE: debug/mdb/mdb-logic.c:1361:
+       if (DBGPrint("CF, PF, AF, ZF, SF, IF    - flags\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1390: FILE: debug/mdb/mdb-logic.c:1361:
+       if (DBGPrint("CF, PF, AF, ZF, SF, IF    - flags\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1391: FILE: debug/mdb/mdb-logic.c:1362:
+       if (DBGPrint("DF, OF, VM, AC\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1391: FILE: debug/mdb/mdb-logic.c:1362:
+       if (DBGPrint("DF, OF, VM, AC\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1392: FILE: debug/mdb/mdb-logic.c:1363:
+       if (DBGPrint("=                         - set equal to\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1392: FILE: debug/mdb/mdb-logic.c:1363:
+       if (DBGPrint("=                         - set equal to\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1393: FILE: debug/mdb/mdb-logic.c:1364:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1393: FILE: debug/mdb/mdb-logic.c:1364:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1394: FILE: debug/mdb/mdb-logic.c:1365:
+       if (DBGPrint("Example 1:\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1394: FILE: debug/mdb/mdb-logic.c:1365:
+       if (DBGPrint("Example 1:\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1395: FILE: debug/mdb/mdb-logic.c:1366:
+       if (DBGPrint("(0)> EAX = 0032700 \n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1395: FILE: debug/mdb/mdb-logic.c:1366:
+       if (DBGPrint("(0)> EAX = 0032700 \n")) return;

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1395: FILE: debug/mdb/mdb-logic.c:1366:
+       if (DBGPrint("(0)> EAX = 0032700 \n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1396: FILE: debug/mdb/mdb-logic.c:1367:
+       if (DBGPrint("EAX changed to 0x0032700\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1396: FILE: debug/mdb/mdb-logic.c:1367:
+       if (DBGPrint("EAX changed to 0x0032700\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1397: FILE: debug/mdb/mdb-logic.c:1368:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1397: FILE: debug/mdb/mdb-logic.c:1368:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1398: FILE: debug/mdb/mdb-logic.c:1369:
+       if (DBGPrint("Example 2:\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1398: FILE: debug/mdb/mdb-logic.c:1369:
+       if (DBGPrint("Example 2:\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1399: FILE: debug/mdb/mdb-logic.c:1370:
+       if (DBGPrint("(0)> u thread_switch\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1399: FILE: debug/mdb/mdb-logic.c:1370:
+       if (DBGPrint("(0)> u thread_switch\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1400: FILE: debug/mdb/mdb-logic.c:1371:
+       if (DBGPrint("unassembles function thread_switch\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1400: FILE: debug/mdb/mdb-logic.c:1371:
+       if (DBGPrint("unassembles function thread_switch\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1401: FILE: debug/mdb/mdb-logic.c:1372:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1401: FILE: debug/mdb/mdb-logic.c:1372:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1402: FILE: debug/mdb/mdb-logic.c:1373:
+       if (DBGPrint("Example 3 (Dump):\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1402: FILE: debug/mdb/mdb-logic.c:1373:
+       if (DBGPrint("Example 3 (Dump):\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1403: FILE: debug/mdb/mdb-logic.c:1374:
+       if (DBGPrint("(0)> d EBP+ECX\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1403: FILE: debug/mdb/mdb-logic.c:1374:
+       if (DBGPrint("(0)> d EBP+ECX\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1404: FILE: debug/mdb/mdb-logic.c:1375:
+       if (DBGPrint("(dumps [d EBP + ECX])\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1404: FILE: debug/mdb/mdb-logic.c:1375:
+       if (DBGPrint("(dumps [d EBP + ECX])\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1405: FILE: debug/mdb/mdb-logic.c:1376:
+       if (DBGPrint("[addr] 00 00 00 01 02 04 07 ...\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1405: FILE: debug/mdb/mdb-logic.c:1376:
+       if (DBGPrint("[addr] 00 00 00 01 02 04 07 ...\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1406: FILE: debug/mdb/mdb-logic.c:1377:
+       if (DBGPrint("[addr] 00 34 56 00 7A 01 00 ...\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1406: FILE: debug/mdb/mdb-logic.c:1377:
+       if (DBGPrint("[addr] 00 34 56 00 7A 01 00 ...\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1407: FILE: debug/mdb/mdb-logic.c:1378:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1407: FILE: debug/mdb/mdb-logic.c:1378:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1408: FILE: debug/mdb/mdb-logic.c:1379:
+       if (DBGPrint("Bracket Operators\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1408: FILE: debug/mdb/mdb-logic.c:1379:
+       if (DBGPrint("Bracket Operators\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1409: FILE: debug/mdb/mdb-logic.c:1380:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1409: FILE: debug/mdb/mdb-logic.c:1380:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1410: FILE: debug/mdb/mdb-logic.c:1381:
+       if (DBGPrint("(       begin expression bracket\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1410: FILE: debug/mdb/mdb-logic.c:1381:
+       if (DBGPrint("(       begin expression bracket\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1411: FILE: debug/mdb/mdb-logic.c:1382:
+       if (DBGPrint(")       end expression bracket\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1411: FILE: debug/mdb/mdb-logic.c:1382:
+       if (DBGPrint(")       end expression bracket\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1412: FILE: debug/mdb/mdb-logic.c:1383:
+       if (DBGPrint("[       begin pointer\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1412: FILE: debug/mdb/mdb-logic.c:1383:
+       if (DBGPrint("[       begin pointer\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1413: FILE: debug/mdb/mdb-logic.c:1384:
+       if (DBGPrint("]       end pointer\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1413: FILE: debug/mdb/mdb-logic.c:1384:
+       if (DBGPrint("]       end pointer\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1414: FILE: debug/mdb/mdb-logic.c:1385:
+       if (DBGPrint("d       Dunsigned short reference\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1414: FILE: debug/mdb/mdb-logic.c:1385:
+       if (DBGPrint("d       Dunsigned short reference\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1415: FILE: debug/mdb/mdb-logic.c:1386:
+       if (DBGPrint("w       unsigned short reference\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1415: FILE: debug/mdb/mdb-logic.c:1386:
+       if (DBGPrint("w       unsigned short reference\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1416: FILE: debug/mdb/mdb-logic.c:1387:
+       if (DBGPrint("b       unsigned char reference\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1416: FILE: debug/mdb/mdb-logic.c:1387:
+       if (DBGPrint("b       unsigned char reference\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1417: FILE: debug/mdb/mdb-logic.c:1388:
+       if (DBGPrint("<num>r  parse number as decimal not hex flag"$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1417: FILE: debug/mdb/mdb-logic.c:1388:
+       if (DBGPrint("<num>r  parse number as decimal not hex flag"
+                    " (e.g. 512r == 200)\n")) return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1418: FILE: debug/mdb/mdb-logic.c:1389:
+                    " (e.g. 512r == 200)\n")) return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1418: FILE: debug/mdb/mdb-logic.c:1389:
+                    " (e.g. 512r == 200)\n")) return;$

WARNING:SPLIT_STRING: quoted string split across lines
#1418: FILE: debug/mdb/mdb-logic.c:1389:
+       if (DBGPrint("<num>r  parse number as decimal not hex flag"
+                    " (e.g. 512r == 200)\n")) return;

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#1419: FILE: debug/mdb/mdb-logic.c:1390:
+       if (DBGPrint("Note - Dunsigned short,unsigned short, and unsigned char dereference operators must\n"))          return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1419: FILE: debug/mdb/mdb-logic.c:1390:
+       if (DBGPrint("Note - Dunsigned short,unsigned short, and unsigned char dereference operators must\n"))          return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1419: FILE: debug/mdb/mdb-logic.c:1390:
+       if (DBGPrint("Note - Dunsigned short,unsigned short, and unsigned char dereference operators must\n"))          return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1420: FILE: debug/mdb/mdb-logic.c:1391:
+       if (DBGPrint("immediately follow pointer brackets (no spaces)\n"))                 return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1420: FILE: debug/mdb/mdb-logic.c:1391:
+       if (DBGPrint("immediately follow pointer brackets (no spaces)\n"))                 return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1421: FILE: debug/mdb/mdb-logic.c:1392:
+       if (DBGPrint("i.e.  [d <addr/symbol>] or [w <addr/symbol>] or\n"))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#1421: FILE: debug/mdb/mdb-logic.c:1392:
+       if (DBGPrint("i.e.  [d <addr/symbol>] or [w <addr/symbol>] or\n"))
+           return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1422: FILE: debug/mdb/mdb-logic.c:1393:
+           return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1422: FILE: debug/mdb/mdb-logic.c:1393:
+           return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1423: FILE: debug/mdb/mdb-logic.c:1394:
+       if (DBGPrint("[b <addr/symbol>], etc.\n"))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#1423: FILE: debug/mdb/mdb-logic.c:1394:
+       if (DBGPrint("[b <addr/symbol>], etc.\n"))
+           return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1424: FILE: debug/mdb/mdb-logic.c:1395:
+           return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1424: FILE: debug/mdb/mdb-logic.c:1395:
+           return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1425: FILE: debug/mdb/mdb-logic.c:1396:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1425: FILE: debug/mdb/mdb-logic.c:1396:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1426: FILE: debug/mdb/mdb-logic.c:1397:
+       if (DBGPrint("Example 1 (dump):\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1426: FILE: debug/mdb/mdb-logic.c:1397:
+       if (DBGPrint("Example 1 (dump):\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1427: FILE: debug/mdb/mdb-logic.c:1398:
+       if (DBGPrint("(0)> d [d EAX+100r] \n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1427: FILE: debug/mdb/mdb-logic.c:1398:
+       if (DBGPrint("(0)> d [d EAX+100r] \n")) return;

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1427: FILE: debug/mdb/mdb-logic.c:1398:
+       if (DBGPrint("(0)> d [d EAX+100r] \n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1428: FILE: debug/mdb/mdb-logic.c:1399:
+       if (DBGPrint("[eax + 100 (dec)] 00 00 00 01 02 04 07 00\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1428: FILE: debug/mdb/mdb-logic.c:1399:
+       if (DBGPrint("[eax + 100 (dec)] 00 00 00 01 02 04 07 00\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1429: FILE: debug/mdb/mdb-logic.c:1400:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1429: FILE: debug/mdb/mdb-logic.c:1400:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1430: FILE: debug/mdb/mdb-logic.c:1401:
+       if (DBGPrint("Example 2 (dump):\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1430: FILE: debug/mdb/mdb-logic.c:1401:
+       if (DBGPrint("Example 2 (dump):\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1431: FILE: debug/mdb/mdb-logic.c:1402:
+       if (DBGPrint("(0)> d [w 003400] \n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1431: FILE: debug/mdb/mdb-logic.c:1402:
+       if (DBGPrint("(0)> d [w 003400] \n")) return;

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1431: FILE: debug/mdb/mdb-logic.c:1402:
+       if (DBGPrint("(0)> d [w 003400] \n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1432: FILE: debug/mdb/mdb-logic.c:1403:
+       if (DBGPrint("[addr (hex)] 00 22 00 01 02 04 07 ...\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1432: FILE: debug/mdb/mdb-logic.c:1403:
+       if (DBGPrint("[addr (hex)] 00 22 00 01 02 04 07 ...\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1433: FILE: debug/mdb/mdb-logic.c:1404:
+       if (DBGPrint("[addr (hex)] 00 31 A1 00 6A 05 00 ...\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1433: FILE: debug/mdb/mdb-logic.c:1404:
+       if (DBGPrint("[addr (hex)] 00 31 A1 00 6A 05 00 ...\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1434: FILE: debug/mdb/mdb-logic.c:1405:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1434: FILE: debug/mdb/mdb-logic.c:1405:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1435: FILE: debug/mdb/mdb-logic.c:1406:
+       if (DBGPrint("Example 3 (break):\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1435: FILE: debug/mdb/mdb-logic.c:1406:
+       if (DBGPrint("Example 3 (break):\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1436: FILE: debug/mdb/mdb-logic.c:1407:
+       if (DBGPrint("(0)> b = 7A000 (EAX + ECX == 30) && ([d B8000+50]  == 0x07)\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1436: FILE: debug/mdb/mdb-logic.c:1407:
+       if (DBGPrint("(0)> b = 7A000 (EAX + ECX == 30) && ([d B8000+50]  == 0x07)\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1437: FILE: debug/mdb/mdb-logic.c:1408:
+       if (DBGPrint("breakpoint will activate if condition is true (returns 1)\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1437: FILE: debug/mdb/mdb-logic.c:1408:
+       if (DBGPrint("breakpoint will activate if condition is true (returns 1)\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1438: FILE: debug/mdb/mdb-logic.c:1409:
+       if (DBGPrint("\n")) return;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1438: FILE: debug/mdb/mdb-logic.c:1409:
+       if (DBGPrint("\n")) return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1440: FILE: debug/mdb/mdb-logic.c:1411:
+       return;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1442: FILE: debug/mdb/mdb-logic.c:1413:
+
+}

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1446: FILE: debug/mdb/mdb-logic.c:1417:
+   unsigned long *pd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1447: FILE: debug/mdb/mdb-logic.c:1418:
+   unsigned short *pw;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1448: FILE: debug/mdb/mdb-logic.c:1419:
+   unsigned char *pb;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1450: FILE: debug/mdb/mdb-logic.c:1421:
+   switch (type)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1450: FILE: debug/mdb/mdb-logic.c:1421:
+   switch (type)
+   {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1451: FILE: debug/mdb/mdb-logic.c:1422:
+   {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1452: FILE: debug/mdb/mdb-logic.c:1423:
+      case ULONG_PTR:$

CHECK:SPACING: No space is necessary after a cast
#1453: FILE: debug/mdb/mdb-logic.c:1424:
+	 pd = (unsigned long *) value;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1456: FILE: debug/mdb/mdb-logic.c:1427:
+                  mdb_getword((unsigned long)pd, 4));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1456: FILE: debug/mdb/mdb-logic.c:1427:
+	 DBGPrint("dref (d): [%08X]-> %08X\n", pd,
+                  mdb_getword((unsigned long)pd, 4));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1456: FILE: debug/mdb/mdb-logic.c:1427:
+                  mdb_getword((unsigned long)pd, 4));$

WARNING:TABSTOP: Statements should start on a tabstop
#1458: FILE: debug/mdb/mdb-logic.c:1429:
+	 return (unsigned long) mdb_getword((unsigned long)pd, 4);

CHECK:SPACING: No space is necessary after a cast
#1458: FILE: debug/mdb/mdb-logic.c:1429:
+	 return (unsigned long) mdb_getword((unsigned long)pd, 4);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1460: FILE: debug/mdb/mdb-logic.c:1431:
+      case WORD_PTR:$

CHECK:SPACING: No space is necessary after a cast
#1461: FILE: debug/mdb/mdb-logic.c:1432:
+	 pw = (unsigned short *) value;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1464: FILE: debug/mdb/mdb-logic.c:1435:
+                  mdb_getword((unsigned long)pw, 2));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1464: FILE: debug/mdb/mdb-logic.c:1435:
+	 DBGPrint("dref (w): [%08X]-> %04X\n", pw,
+                  mdb_getword((unsigned long)pw, 2));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1464: FILE: debug/mdb/mdb-logic.c:1435:
+                  mdb_getword((unsigned long)pw, 2));$

WARNING:TABSTOP: Statements should start on a tabstop
#1466: FILE: debug/mdb/mdb-logic.c:1437:
+	 return (unsigned short) mdb_getword((unsigned long)pw, 2);

CHECK:SPACING: No space is necessary after a cast
#1466: FILE: debug/mdb/mdb-logic.c:1437:
+	 return (unsigned short) mdb_getword((unsigned long)pw, 2);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1468: FILE: debug/mdb/mdb-logic.c:1439:
+      case BYTE_PTR:$

CHECK:SPACING: No space is necessary after a cast
#1469: FILE: debug/mdb/mdb-logic.c:1440:
+	 pb = (unsigned char *) value;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1472: FILE: debug/mdb/mdb-logic.c:1443:
+                  mdb_getword((unsigned long)pb, 1));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1472: FILE: debug/mdb/mdb-logic.c:1443:
+	 DBGPrint("dref (b): [%08X]-> %02X\n", pb,
+                  mdb_getword((unsigned long)pb, 1));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1472: FILE: debug/mdb/mdb-logic.c:1443:
+                  mdb_getword((unsigned long)pb, 1));$

WARNING:TABSTOP: Statements should start on a tabstop
#1474: FILE: debug/mdb/mdb-logic.c:1445:
+	 return (unsigned char) mdb_getword((unsigned long)pb, 1);

CHECK:SPACING: No space is necessary after a cast
#1474: FILE: debug/mdb/mdb-logic.c:1445:
+	 return (unsigned char) mdb_getword((unsigned long)pb, 1);

WARNING:TABSTOP: Statements should start on a tabstop
#1480: FILE: debug/mdb/mdb-logic.c:1451:
+	 return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1481: FILE: debug/mdb/mdb-logic.c:1452:
+   }$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1483: FILE: debug/mdb/mdb-logic.c:1454:
+
+}

CHECK:CAMELCASE: Avoid CamelCase: <ExpressPush>
#1485: FILE: debug/mdb/mdb-logic.c:1456:
+unsigned long ExpressPush(unsigned long i)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1487: FILE: debug/mdb/mdb-logic.c:1458:
+     if (sp > bos)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1487: FILE: debug/mdb/mdb-logic.c:1458:
+     if (sp > bos)
+     {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1488: FILE: debug/mdb/mdb-logic.c:1459:
+     {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1493: FILE: debug/mdb/mdb-logic.c:1464:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1494: FILE: debug/mdb/mdb-logic.c:1465:
+     *sp = i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1496: FILE: debug/mdb/mdb-logic.c:1467:
+     DBGPrint("push : %08X (%d)\n", *sp, *sp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1498: FILE: debug/mdb/mdb-logic.c:1469:
+     sp++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1499: FILE: debug/mdb/mdb-logic.c:1470:
+     return 1;$

CHECK:CAMELCASE: Avoid CamelCase: <ExpressPop>
#1502: FILE: debug/mdb/mdb-logic.c:1473:
+unsigned long ExpressPop(void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1504: FILE: debug/mdb/mdb-logic.c:1475:
+    sp--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1505: FILE: debug/mdb/mdb-logic.c:1476:
+    if (sp < tos)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1505: FILE: debug/mdb/mdb-logic.c:1476:
+    if (sp < tos)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#1505: FILE: debug/mdb/mdb-logic.c:1476:
+    if (sp < tos)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1506: FILE: debug/mdb/mdb-logic.c:1477:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1507: FILE: debug/mdb/mdb-logic.c:1478:
+       sp++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1509: FILE: debug/mdb/mdb-logic.c:1480:
+       DBGPrint("pop  : <err>\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1511: FILE: debug/mdb/mdb-logic.c:1482:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1512: FILE: debug/mdb/mdb-logic.c:1483:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1514: FILE: debug/mdb/mdb-logic.c:1485:
+    DBGPrint("pop  : %08X (%d)\n", *sp, *sp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1516: FILE: debug/mdb/mdb-logic.c:1487:
+    return *sp;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1518: FILE: debug/mdb/mdb-logic.c:1489:
+
+}

CHECK:CAMELCASE: Avoid CamelCase: <ContextPush>
#1520: FILE: debug/mdb/mdb-logic.c:1491:
+unsigned long ContextPush(unsigned long i)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1522: FILE: debug/mdb/mdb-logic.c:1493:
+     if (c_sp > c_bos)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1522: FILE: debug/mdb/mdb-logic.c:1493:
+     if (c_sp > c_bos)
+     {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1523: FILE: debug/mdb/mdb-logic.c:1494:
+     {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1528: FILE: debug/mdb/mdb-logic.c:1499:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1529: FILE: debug/mdb/mdb-logic.c:1500:
+     *c_sp = i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1531: FILE: debug/mdb/mdb-logic.c:1502:
+     DBGPrint("cpush: %08X (%d)\n", *c_sp, *c_sp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1533: FILE: debug/mdb/mdb-logic.c:1504:
+     c_sp++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1534: FILE: debug/mdb/mdb-logic.c:1505:
+     return 1;$

CHECK:CAMELCASE: Avoid CamelCase: <ContextPop>
#1537: FILE: debug/mdb/mdb-logic.c:1508:
+unsigned long ContextPop(void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1539: FILE: debug/mdb/mdb-logic.c:1510:
+    c_sp--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1540: FILE: debug/mdb/mdb-logic.c:1511:
+    if (c_sp < c_tos)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1540: FILE: debug/mdb/mdb-logic.c:1511:
+    if (c_sp < c_tos)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#1540: FILE: debug/mdb/mdb-logic.c:1511:
+    if (c_sp < c_tos)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1541: FILE: debug/mdb/mdb-logic.c:1512:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1542: FILE: debug/mdb/mdb-logic.c:1513:
+       c_sp++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1544: FILE: debug/mdb/mdb-logic.c:1515:
+       DBGPrint("cpop : <err>\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1546: FILE: debug/mdb/mdb-logic.c:1517:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1547: FILE: debug/mdb/mdb-logic.c:1518:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1549: FILE: debug/mdb/mdb-logic.c:1520:
+    DBGPrint("cpop : %08X (%d)\n", *c_sp, *c_sp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1551: FILE: debug/mdb/mdb-logic.c:1522:
+    return *c_sp;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1553: FILE: debug/mdb/mdb-logic.c:1524:
+
+}

CHECK:CAMELCASE: Avoid CamelCase: <BooleanPush>
#1555: FILE: debug/mdb/mdb-logic.c:1526:
+unsigned long BooleanPush(unsigned long i)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1557: FILE: debug/mdb/mdb-logic.c:1528:
+     if (b_sp > b_bos)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1557: FILE: debug/mdb/mdb-logic.c:1528:
+     if (b_sp > b_bos)
+     {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1558: FILE: debug/mdb/mdb-logic.c:1529:
+     {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1563: FILE: debug/mdb/mdb-logic.c:1534:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1564: FILE: debug/mdb/mdb-logic.c:1535:
+     *b_sp = i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1566: FILE: debug/mdb/mdb-logic.c:1537:
+     DBGPrint("bpush: %08X (%d)\n", *b_sp, *b_sp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1568: FILE: debug/mdb/mdb-logic.c:1539:
+     b_sp++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1569: FILE: debug/mdb/mdb-logic.c:1540:
+     return 1;$

CHECK:CAMELCASE: Avoid CamelCase: <BooleanPop>
#1572: FILE: debug/mdb/mdb-logic.c:1543:
+unsigned long BooleanPop(void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1574: FILE: debug/mdb/mdb-logic.c:1545:
+    b_sp--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1575: FILE: debug/mdb/mdb-logic.c:1546:
+    if (b_sp < b_tos)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1575: FILE: debug/mdb/mdb-logic.c:1546:
+    if (b_sp < b_tos)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#1575: FILE: debug/mdb/mdb-logic.c:1546:
+    if (b_sp < b_tos)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1576: FILE: debug/mdb/mdb-logic.c:1547:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1577: FILE: debug/mdb/mdb-logic.c:1548:
+       b_sp++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1579: FILE: debug/mdb/mdb-logic.c:1550:
+       DBGPrint("bpop : <err>\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1581: FILE: debug/mdb/mdb-logic.c:1552:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1582: FILE: debug/mdb/mdb-logic.c:1553:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1584: FILE: debug/mdb/mdb-logic.c:1555:
+    DBGPrint("bpop : %08X (%d)\n", *b_sp, *b_sp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1586: FILE: debug/mdb/mdb-logic.c:1557:
+    return *b_sp;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1588: FILE: debug/mdb/mdb-logic.c:1559:
+
+}

CHECK:CAMELCASE: Avoid CamelCase: <LogicalPush>
#1590: FILE: debug/mdb/mdb-logic.c:1561:
+unsigned long LogicalPush(unsigned long i)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1592: FILE: debug/mdb/mdb-logic.c:1563:
+     if (l_sp > l_bos)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1592: FILE: debug/mdb/mdb-logic.c:1563:
+     if (l_sp > l_bos)
+     {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1593: FILE: debug/mdb/mdb-logic.c:1564:
+     {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1598: FILE: debug/mdb/mdb-logic.c:1569:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1599: FILE: debug/mdb/mdb-logic.c:1570:
+     *l_sp = i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1601: FILE: debug/mdb/mdb-logic.c:1572:
+     DBGPrint("lpush: %08X (%d)\n", *l_sp, *l_sp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1603: FILE: debug/mdb/mdb-logic.c:1574:
+     l_sp++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1604: FILE: debug/mdb/mdb-logic.c:1575:
+     return 1;$

CHECK:CAMELCASE: Avoid CamelCase: <LogicalPop>
#1607: FILE: debug/mdb/mdb-logic.c:1578:
+unsigned long LogicalPop(void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1609: FILE: debug/mdb/mdb-logic.c:1580:
+    l_sp--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1610: FILE: debug/mdb/mdb-logic.c:1581:
+    if (l_sp < l_tos)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1610: FILE: debug/mdb/mdb-logic.c:1581:
+    if (l_sp < l_tos)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#1610: FILE: debug/mdb/mdb-logic.c:1581:
+    if (l_sp < l_tos)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1611: FILE: debug/mdb/mdb-logic.c:1582:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1612: FILE: debug/mdb/mdb-logic.c:1583:
+       l_sp++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1614: FILE: debug/mdb/mdb-logic.c:1585:
+       DBGPrint("lpop : <err>\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1616: FILE: debug/mdb/mdb-logic.c:1587:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1617: FILE: debug/mdb/mdb-logic.c:1588:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1619: FILE: debug/mdb/mdb-logic.c:1590:
+    DBGPrint("lpop : %08X (%d)\n", *l_sp, *l_sp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1621: FILE: debug/mdb/mdb-logic.c:1592:
+    return *l_sp;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1623: FILE: debug/mdb/mdb-logic.c:1594:
+
+}

CHECK:CAMELCASE: Avoid CamelCase: <initNumericStacks>
#1625: FILE: debug/mdb/mdb-logic.c:1596:
+void initNumericStacks(void)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1627: FILE: debug/mdb/mdb-logic.c:1598:
+{
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1628: FILE: debug/mdb/mdb-logic.c:1599:
+    sp = numStack;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1629: FILE: debug/mdb/mdb-logic.c:1600:
+    tos = sp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1630: FILE: debug/mdb/mdb-logic.c:1601:
+    bos = sp + NUM_STACK_SIZE - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1632: FILE: debug/mdb/mdb-logic.c:1603:
+    c_sp = contextStack;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1633: FILE: debug/mdb/mdb-logic.c:1604:
+    c_tos = c_sp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1634: FILE: debug/mdb/mdb-logic.c:1605:
+    c_bos = c_sp + CONTEXT_STACK_SIZE - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1636: FILE: debug/mdb/mdb-logic.c:1607:
+    b_sp = booleanStack;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1637: FILE: debug/mdb/mdb-logic.c:1608:
+    b_tos = b_sp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1638: FILE: debug/mdb/mdb-logic.c:1609:
+    b_bos = b_sp + BOOL_STACK_SIZE - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1640: FILE: debug/mdb/mdb-logic.c:1611:
+    l_sp = logicalStack;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1641: FILE: debug/mdb/mdb-logic.c:1612:
+    l_tos = l_sp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1642: FILE: debug/mdb/mdb-logic.c:1613:
+    l_bos = l_sp + LOGICAL_STACK_SIZE - 1;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1644: FILE: debug/mdb/mdb-logic.c:1615:
+
+}

CHECK:CAMELCASE: Avoid CamelCase: <ProcessOperator>
#1646: FILE: debug/mdb/mdb-logic.c:1617:
+unsigned long ProcessOperator(unsigned long oper)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1648: FILE: debug/mdb/mdb-logic.c:1619:
+    unsigned long a, b;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1650: FILE: debug/mdb/mdb-logic.c:1621:
+    b = ExpressPop();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1651: FILE: debug/mdb/mdb-logic.c:1622:
+    a = ExpressPop();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1652: FILE: debug/mdb/mdb-logic.c:1623:
+    switch(oper)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1652: FILE: debug/mdb/mdb-logic.c:1623:
+    switch(oper)
+    {

ERROR:SPACING: space required before the open parenthesis '('
#1652: FILE: debug/mdb/mdb-logic.c:1623:
+    switch(oper)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1653: FILE: debug/mdb/mdb-logic.c:1624:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1654: FILE: debug/mdb/mdb-logic.c:1625:
+       case NEG_TOKEN:$

WARNING:TABSTOP: Statements should start on a tabstop
#1655: FILE: debug/mdb/mdb-logic.c:1626:
+	  break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1657: FILE: debug/mdb/mdb-logic.c:1628:
+       case LEFT_SHIFT_TOKEN:$

WARNING:TABSTOP: Statements should start on a tabstop
#1659: FILE: debug/mdb/mdb-logic.c:1630:
+	  break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1661: FILE: debug/mdb/mdb-logic.c:1632:
+       case RIGHT_SHIFT_TOKEN:$

WARNING:TABSTOP: Statements should start on a tabstop
#1663: FILE: debug/mdb/mdb-logic.c:1634:
+	  break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1665: FILE: debug/mdb/mdb-logic.c:1636:
+       case PLUS_TOKEN:$

WARNING:TABSTOP: Statements should start on a tabstop
#1667: FILE: debug/mdb/mdb-logic.c:1638:
+	  break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1669: FILE: debug/mdb/mdb-logic.c:1640:
+       case XOR_TOKEN:$

WARNING:TABSTOP: Statements should start on a tabstop
#1671: FILE: debug/mdb/mdb-logic.c:1642:
+	  break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1673: FILE: debug/mdb/mdb-logic.c:1644:
+       case AND_TOKEN:$

WARNING:TABSTOP: Statements should start on a tabstop
#1675: FILE: debug/mdb/mdb-logic.c:1646:
+	  break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1677: FILE: debug/mdb/mdb-logic.c:1648:
+       case MOD_TOKEN:$

WARNING:TABSTOP: Statements should start on a tabstop
#1678: FILE: debug/mdb/mdb-logic.c:1649:
+	  if (b) /* if modulo by zero, drop value on the floor */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 13)
#1678: FILE: debug/mdb/mdb-logic.c:1649:
+	  if (b) /* if modulo by zero, drop value on the floor */
+	     ExpressPush(a % b);

WARNING:TABSTOP: Statements should start on a tabstop
#1680: FILE: debug/mdb/mdb-logic.c:1651:
+	  else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 13)
#1680: FILE: debug/mdb/mdb-logic.c:1651:
+	  else
+	     ExpressPush(0);

WARNING:TABSTOP: Statements should start on a tabstop
#1682: FILE: debug/mdb/mdb-logic.c:1653:
+	  break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1684: FILE: debug/mdb/mdb-logic.c:1655:
+       case OR_TOKEN:$

WARNING:TABSTOP: Statements should start on a tabstop
#1686: FILE: debug/mdb/mdb-logic.c:1657:
+	  break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1688: FILE: debug/mdb/mdb-logic.c:1659:
+       case MINUS_TOKEN:$

WARNING:TABSTOP: Statements should start on a tabstop
#1690: FILE: debug/mdb/mdb-logic.c:1661:
+	  break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1692: FILE: debug/mdb/mdb-logic.c:1663:
+       case MULTIPLY_TOKEN:$

WARNING:TABSTOP: Statements should start on a tabstop
#1694: FILE: debug/mdb/mdb-logic.c:1665:
+	  break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1696: FILE: debug/mdb/mdb-logic.c:1667:
+       case DIVIDE_TOKEN:$

WARNING:TABSTOP: Statements should start on a tabstop
#1697: FILE: debug/mdb/mdb-logic.c:1668:
+	  if (b) /* if divide by zero, drop value on the floor */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 13)
#1697: FILE: debug/mdb/mdb-logic.c:1668:
+	  if (b) /* if divide by zero, drop value on the floor */
+	     ExpressPush(a / b);

WARNING:TABSTOP: Statements should start on a tabstop
#1699: FILE: debug/mdb/mdb-logic.c:1670:
+	  else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 13)
#1699: FILE: debug/mdb/mdb-logic.c:1670:
+	  else
+	     ExpressPush(0);

WARNING:TABSTOP: Statements should start on a tabstop
#1701: FILE: debug/mdb/mdb-logic.c:1672:
+	  break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1703: FILE: debug/mdb/mdb-logic.c:1674:
+    }$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1703: FILE: debug/mdb/mdb-logic.c:1674:
+
+    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1704: FILE: debug/mdb/mdb-logic.c:1675:
+    return 0;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1706: FILE: debug/mdb/mdb-logic.c:1677:
+
+}

CHECK:CAMELCASE: Avoid CamelCase: <ProcessBoolean>
#1708: FILE: debug/mdb/mdb-logic.c:1679:
+unsigned long ProcessBoolean(unsigned long oper)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1710: FILE: debug/mdb/mdb-logic.c:1681:
+{
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1711: FILE: debug/mdb/mdb-logic.c:1682:
+    unsigned long a, b;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1713: FILE: debug/mdb/mdb-logic.c:1684:
+    b = ExpressPop();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1714: FILE: debug/mdb/mdb-logic.c:1685:
+    a = ExpressPop();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1715: FILE: debug/mdb/mdb-logic.c:1686:
+    switch(oper)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1715: FILE: debug/mdb/mdb-logic.c:1686:
+    switch(oper)
+    {

ERROR:SPACING: space required before the open parenthesis '('
#1715: FILE: debug/mdb/mdb-logic.c:1686:
+    switch(oper)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1716: FILE: debug/mdb/mdb-logic.c:1687:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1717: FILE: debug/mdb/mdb-logic.c:1688:
+       case NOT_TOKEN:$

WARNING:TABSTOP: Statements should start on a tabstop
#1719: FILE: debug/mdb/mdb-logic.c:1690:
+	  break;             /* this operation returns the boolean for (!x) */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1721: FILE: debug/mdb/mdb-logic.c:1692:
+       case GREATER_TOKEN:$

WARNING:TABSTOP: Statements should start on a tabstop
#1723: FILE: debug/mdb/mdb-logic.c:1694:
+	  break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1725: FILE: debug/mdb/mdb-logic.c:1696:
+       case LESS_TOKEN:$

WARNING:TABSTOP: Statements should start on a tabstop
#1727: FILE: debug/mdb/mdb-logic.c:1698:
+	  break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1729: FILE: debug/mdb/mdb-logic.c:1700:
+       case GREATER_EQUAL_TOKEN:$

WARNING:TABSTOP: Statements should start on a tabstop
#1731: FILE: debug/mdb/mdb-logic.c:1702:
+	  break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1733: FILE: debug/mdb/mdb-logic.c:1704:
+       case LESS_EQUAL_TOKEN:$

WARNING:TABSTOP: Statements should start on a tabstop
#1735: FILE: debug/mdb/mdb-logic.c:1706:
+	  break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1737: FILE: debug/mdb/mdb-logic.c:1708:
+       case EQUAL_TOKEN:$

WARNING:TABSTOP: Statements should start on a tabstop
#1739: FILE: debug/mdb/mdb-logic.c:1710:
+	  break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1741: FILE: debug/mdb/mdb-logic.c:1712:
+       case NOT_EQUAL_TOKEN:$

WARNING:TABSTOP: Statements should start on a tabstop
#1743: FILE: debug/mdb/mdb-logic.c:1714:
+	  break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1744: FILE: debug/mdb/mdb-logic.c:1715:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1745: FILE: debug/mdb/mdb-logic.c:1716:
+    return 0;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1747: FILE: debug/mdb/mdb-logic.c:1718:
+
+}

CHECK:CAMELCASE: Avoid CamelCase: <ProcessLogical>
#1749: FILE: debug/mdb/mdb-logic.c:1720:
+unsigned long ProcessLogical(unsigned long oper)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1751: FILE: debug/mdb/mdb-logic.c:1722:
+{
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1752: FILE: debug/mdb/mdb-logic.c:1723:
+    unsigned long a, b;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1754: FILE: debug/mdb/mdb-logic.c:1725:
+    b = ExpressPop();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1755: FILE: debug/mdb/mdb-logic.c:1726:
+    a = ExpressPop();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1756: FILE: debug/mdb/mdb-logic.c:1727:
+    switch(oper)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1756: FILE: debug/mdb/mdb-logic.c:1727:
+    switch(oper)
+    {

ERROR:SPACING: space required before the open parenthesis '('
#1756: FILE: debug/mdb/mdb-logic.c:1727:
+    switch(oper)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1757: FILE: debug/mdb/mdb-logic.c:1728:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1758: FILE: debug/mdb/mdb-logic.c:1729:
+       case LOGICAL_AND_TOKEN:$

WARNING:TABSTOP: Statements should start on a tabstop
#1760: FILE: debug/mdb/mdb-logic.c:1731:
+	  break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1762: FILE: debug/mdb/mdb-logic.c:1733:
+       case LOGICAL_OR_TOKEN:$

WARNING:TABSTOP: Statements should start on a tabstop
#1764: FILE: debug/mdb/mdb-logic.c:1735:
+	  break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1765: FILE: debug/mdb/mdb-logic.c:1736:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1766: FILE: debug/mdb/mdb-logic.c:1737:
+    return 0;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1768: FILE: debug/mdb/mdb-logic.c:1739:
+
+}

CHECK:CAMELCASE: Avoid CamelCase: <ParseLogical>
#1770: FILE: debug/mdb/mdb-logic.c:1741:
+unsigned long ParseLogical(unsigned long logicalCount)

CHECK:CAMELCASE: Avoid CamelCase: <logicalCount>
#1770: FILE: debug/mdb/mdb-logic.c:1741:
+unsigned long ParseLogical(unsigned long logicalCount)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1772: FILE: debug/mdb/mdb-logic.c:1743:
+{
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1773: FILE: debug/mdb/mdb-logic.c:1744:
+    register int i, r;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1774: FILE: debug/mdb/mdb-logic.c:1745:
+    unsigned long a;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1775: FILE: debug/mdb/mdb-logic.c:1746:
+    unsigned long c = 0, lastClass = 0, oper = 0;$

CHECK:CAMELCASE: Avoid CamelCase: <lastClass>
#1775: FILE: debug/mdb/mdb-logic.c:1746:
+    unsigned long c = 0, lastClass = 0, oper = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1777: FILE: debug/mdb/mdb-logic.c:1748:
+    for (i=0; i < logicalCount; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#1777: FILE: debug/mdb/mdb-logic.c:1748:
+    for (i=0; i < logicalCount; i++)
+       ExpressPush(LogicalPop());

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1777: FILE: debug/mdb/mdb-logic.c:1748:
+    for (i=0; i < logicalCount; i++)
           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1778: FILE: debug/mdb/mdb-logic.c:1749:
+       ExpressPush(LogicalPop());$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1780: FILE: debug/mdb/mdb-logic.c:1751:
+    for (i=0, r=0; i < (logicalCount / 2); i++)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1780: FILE: debug/mdb/mdb-logic.c:1751:
+    for (i=0, r=0; i < (logicalCount / 2); i++)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#1780: FILE: debug/mdb/mdb-logic.c:1751:
+    for (i=0, r=0; i < (logicalCount / 2); i++)
+    {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1780: FILE: debug/mdb/mdb-logic.c:1751:
+    for (i=0, r=0; i < (logicalCount / 2); i++)
           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1780: FILE: debug/mdb/mdb-logic.c:1751:
+    for (i=0, r=0; i < (logicalCount / 2); i++)
                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1781: FILE: debug/mdb/mdb-logic.c:1752:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1782: FILE: debug/mdb/mdb-logic.c:1753:
+       a = ExpressPop();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1783: FILE: debug/mdb/mdb-logic.c:1754:
+       TokenType[r] = NUMBER_TOKEN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1784: FILE: debug/mdb/mdb-logic.c:1755:
+       TokenValue[r++] = a;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1785: FILE: debug/mdb/mdb-logic.c:1756:
+       a = ExpressPop();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1786: FILE: debug/mdb/mdb-logic.c:1757:
+       TokenType[r] = a;  /* get the operator type */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1787: FILE: debug/mdb/mdb-logic.c:1758:
+       TokenValue[r++] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1788: FILE: debug/mdb/mdb-logic.c:1759:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1790: FILE: debug/mdb/mdb-logic.c:1761:
+    initNumericStacks();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1793: FILE: debug/mdb/mdb-logic.c:1764:
+     DBGPrint("\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1795: FILE: debug/mdb/mdb-logic.c:1766:
+    for (i=0; i < logicalCount; i++)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1795: FILE: debug/mdb/mdb-logic.c:1766:
+    for (i=0; i < logicalCount; i++)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#1795: FILE: debug/mdb/mdb-logic.c:1766:
+    for (i=0; i < logicalCount; i++)
[...]
+#if DEBUG_LOGICAL

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1795: FILE: debug/mdb/mdb-logic.c:1766:
+    for (i=0; i < logicalCount; i++)
           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1796: FILE: debug/mdb/mdb-logic.c:1767:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1798: FILE: debug/mdb/mdb-logic.c:1769:
+       DBGPrint("token: %02X  value: %08X  type: %s\n", TokenType[i],$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1799: FILE: debug/mdb/mdb-logic.c:1770:
+       DBGPrint("token: %02X  value: %08X  type: %s\n", TokenType[i],
+	      TokenValue[i], parserDescription[TokenType[i]]);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1801: FILE: debug/mdb/mdb-logic.c:1772:
+       switch (TokenType[i])$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1801: FILE: debug/mdb/mdb-logic.c:1772:
+       switch (TokenType[i])
+       {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1802: FILE: debug/mdb/mdb-logic.c:1773:
+       {$

WARNING:TABSTOP: Statements should start on a tabstop
#1803: FILE: debug/mdb/mdb-logic.c:1774:
+	  case LOGICAL_AND_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#1804: FILE: debug/mdb/mdb-logic.c:1775:
+	  case LOGICAL_OR_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#1805: FILE: debug/mdb/mdb-logic.c:1776:
+	     if (lastClass != CLASS_BOOLEAN)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1805: FILE: debug/mdb/mdb-logic.c:1776:
+	     if (lastClass != CLASS_BOOLEAN)
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1806: FILE: debug/mdb/mdb-logic.c:1777:
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1809: FILE: debug/mdb/mdb-logic.c:1780:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#1810: FILE: debug/mdb/mdb-logic.c:1781:
+	     continue;

WARNING:TABSTOP: Statements should start on a tabstop
#1812: FILE: debug/mdb/mdb-logic.c:1783:
+	  case NUMBER_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#1813: FILE: debug/mdb/mdb-logic.c:1784:
+	     if (lastClass == CLASS_DATA)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1813: FILE: debug/mdb/mdb-logic.c:1784:
+	     if (lastClass == CLASS_DATA)
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1814: FILE: debug/mdb/mdb-logic.c:1785:
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1817: FILE: debug/mdb/mdb-logic.c:1788:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#1821: FILE: debug/mdb/mdb-logic.c:1792:
+	     if (oper)

WARNING:TABSTOP: Statements should start on a tabstop
#1823: FILE: debug/mdb/mdb-logic.c:1794:
+	     continue;

WARNING:TABSTOP: Statements should start on a tabstop
#1825: FILE: debug/mdb/mdb-logic.c:1796:
+	  case NULL_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#1827: FILE: debug/mdb/mdb-logic.c:1798:
+	     return c;

WARNING:TABSTOP: Statements should start on a tabstop
#1829: FILE: debug/mdb/mdb-logic.c:1800:
+	  default:

WARNING:TABSTOP: Statements should start on a tabstop
#1830: FILE: debug/mdb/mdb-logic.c:1801:
+	     continue;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1831: FILE: debug/mdb/mdb-logic.c:1802:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1832: FILE: debug/mdb/mdb-logic.c:1803:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1833: FILE: debug/mdb/mdb-logic.c:1804:
+    return c;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1835: FILE: debug/mdb/mdb-logic.c:1806:
+
+}

CHECK:CAMELCASE: Avoid CamelCase: <ParseBoolean>
#1837: FILE: debug/mdb/mdb-logic.c:1808:
+unsigned long ParseBoolean(unsigned long booleanCount)

CHECK:CAMELCASE: Avoid CamelCase: <booleanCount>
#1837: FILE: debug/mdb/mdb-logic.c:1808:
+unsigned long ParseBoolean(unsigned long booleanCount)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1839: FILE: debug/mdb/mdb-logic.c:1810:
+{
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1840: FILE: debug/mdb/mdb-logic.c:1811:
+    register int i, r;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1841: FILE: debug/mdb/mdb-logic.c:1812:
+    unsigned long a, oper = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1842: FILE: debug/mdb/mdb-logic.c:1813:
+    unsigned long c = 0, lastClass = 0, logicalCount = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1844: FILE: debug/mdb/mdb-logic.c:1815:
+    for (i=0; i < booleanCount; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#1844: FILE: debug/mdb/mdb-logic.c:1815:
+    for (i=0; i < booleanCount; i++)
+       ExpressPush(BooleanPop());

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1844: FILE: debug/mdb/mdb-logic.c:1815:
+    for (i=0; i < booleanCount; i++)
           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1845: FILE: debug/mdb/mdb-logic.c:1816:
+       ExpressPush(BooleanPop());$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1847: FILE: debug/mdb/mdb-logic.c:1818:
+    for (i=0, r=0; i < (booleanCount / 2); i++)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1847: FILE: debug/mdb/mdb-logic.c:1818:
+    for (i=0, r=0; i < (booleanCount / 2); i++)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#1847: FILE: debug/mdb/mdb-logic.c:1818:
+    for (i=0, r=0; i < (booleanCount / 2); i++)
+    {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1847: FILE: debug/mdb/mdb-logic.c:1818:
+    for (i=0, r=0; i < (booleanCount / 2); i++)
           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1847: FILE: debug/mdb/mdb-logic.c:1818:
+    for (i=0, r=0; i < (booleanCount / 2); i++)
                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1848: FILE: debug/mdb/mdb-logic.c:1819:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1849: FILE: debug/mdb/mdb-logic.c:1820:
+       a = ExpressPop();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1850: FILE: debug/mdb/mdb-logic.c:1821:
+       TokenType[r] = NUMBER_TOKEN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1851: FILE: debug/mdb/mdb-logic.c:1822:
+       TokenValue[r++] = a;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1852: FILE: debug/mdb/mdb-logic.c:1823:
+       a = ExpressPop();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1853: FILE: debug/mdb/mdb-logic.c:1824:
+       TokenType[r] = a;  /* get the operator type */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1854: FILE: debug/mdb/mdb-logic.c:1825:
+       TokenValue[r++] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1855: FILE: debug/mdb/mdb-logic.c:1826:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1857: FILE: debug/mdb/mdb-logic.c:1828:
+    initNumericStacks();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1860: FILE: debug/mdb/mdb-logic.c:1831:
+     DBGPrint("\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1862: FILE: debug/mdb/mdb-logic.c:1833:
+    for (i=0; i < booleanCount; i++)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1862: FILE: debug/mdb/mdb-logic.c:1833:
+    for (i=0; i < booleanCount; i++)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#1862: FILE: debug/mdb/mdb-logic.c:1833:
+    for (i=0; i < booleanCount; i++)
[...]
+#if DEBUG_BOOL

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1862: FILE: debug/mdb/mdb-logic.c:1833:
+    for (i=0; i < booleanCount; i++)
           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1863: FILE: debug/mdb/mdb-logic.c:1834:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1865: FILE: debug/mdb/mdb-logic.c:1836:
+       DBGPrint("token: %02X  value: %08X  type: %s\n", TokenType[i],$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1866: FILE: debug/mdb/mdb-logic.c:1837:
+       DBGPrint("token: %02X  value: %08X  type: %s\n", TokenType[i],
+	      TokenValue[i], parserDescription[TokenType[i]]);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1868: FILE: debug/mdb/mdb-logic.c:1839:
+       switch (TokenType[i])$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1868: FILE: debug/mdb/mdb-logic.c:1839:
+       switch (TokenType[i])
+       {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1869: FILE: debug/mdb/mdb-logic.c:1840:
+       {$

WARNING:TABSTOP: Statements should start on a tabstop
#1871: FILE: debug/mdb/mdb-logic.c:1842:
+	  case LOGICAL_AND_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#1872: FILE: debug/mdb/mdb-logic.c:1843:
+	  case LOGICAL_OR_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#1881: FILE: debug/mdb/mdb-logic.c:1852:
+	     continue;

WARNING:TABSTOP: Statements should start on a tabstop
#1884: FILE: debug/mdb/mdb-logic.c:1855:
+	  case NOT_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#1885: FILE: debug/mdb/mdb-logic.c:1856:
+	     if (lastClass != CLASS_BOOLEAN)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1885: FILE: debug/mdb/mdb-logic.c:1856:
+	     if (lastClass != CLASS_BOOLEAN)
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1886: FILE: debug/mdb/mdb-logic.c:1857:
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1890: FILE: debug/mdb/mdb-logic.c:1861:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#1891: FILE: debug/mdb/mdb-logic.c:1862:
+	     continue;

WARNING:TABSTOP: Statements should start on a tabstop
#1893: FILE: debug/mdb/mdb-logic.c:1864:
+	  case GREATER_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#1894: FILE: debug/mdb/mdb-logic.c:1865:
+	  case LESS_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#1895: FILE: debug/mdb/mdb-logic.c:1866:
+	  case GREATER_EQUAL_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#1896: FILE: debug/mdb/mdb-logic.c:1867:
+	  case LESS_EQUAL_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#1897: FILE: debug/mdb/mdb-logic.c:1868:
+	  case EQUAL_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#1898: FILE: debug/mdb/mdb-logic.c:1869:
+	  case NOT_EQUAL_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#1899: FILE: debug/mdb/mdb-logic.c:1870:
+	     if (lastClass != CLASS_BOOLEAN)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1899: FILE: debug/mdb/mdb-logic.c:1870:
+	     if (lastClass != CLASS_BOOLEAN)
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1900: FILE: debug/mdb/mdb-logic.c:1871:
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1903: FILE: debug/mdb/mdb-logic.c:1874:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#1904: FILE: debug/mdb/mdb-logic.c:1875:
+	     continue;

WARNING:TABSTOP: Statements should start on a tabstop
#1906: FILE: debug/mdb/mdb-logic.c:1877:
+	  case NUMBER_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#1907: FILE: debug/mdb/mdb-logic.c:1878:
+	     if (lastClass == CLASS_DATA)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1907: FILE: debug/mdb/mdb-logic.c:1878:
+	     if (lastClass == CLASS_DATA)
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1908: FILE: debug/mdb/mdb-logic.c:1879:
+	     {

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1910: FILE: debug/mdb/mdb-logic.c:1881:
+		if (logicalCount)
+		{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 19)
#1910: FILE: debug/mdb/mdb-logic.c:1881:
+		if (logicalCount)
+		{

WARNING:TABSTOP: Statements should start on a tabstop
#1917: FILE: debug/mdb/mdb-logic.c:1888:
+		   return c;

WARNING:TABSTOP: Statements should start on a tabstop
#1920: FILE: debug/mdb/mdb-logic.c:1891:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#1924: FILE: debug/mdb/mdb-logic.c:1895:
+	     if (oper)

WARNING:TABSTOP: Statements should start on a tabstop
#1926: FILE: debug/mdb/mdb-logic.c:1897:
+	     continue;

WARNING:TABSTOP: Statements should start on a tabstop
#1928: FILE: debug/mdb/mdb-logic.c:1899:
+	  case NULL_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#1930: FILE: debug/mdb/mdb-logic.c:1901:
+	     if (logicalCount)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1930: FILE: debug/mdb/mdb-logic.c:1901:
+	     if (logicalCount)
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1931: FILE: debug/mdb/mdb-logic.c:1902:
+	     {

WARNING:TABSTOP: Statements should start on a tabstop
#1938: FILE: debug/mdb/mdb-logic.c:1909:
+	     }

WARNING:TABSTOP: Statements should start on a tabstop
#1939: FILE: debug/mdb/mdb-logic.c:1910:
+	     return c;

WARNING:TABSTOP: Statements should start on a tabstop
#1941: FILE: debug/mdb/mdb-logic.c:1912:
+	  default:

WARNING:TABSTOP: Statements should start on a tabstop
#1942: FILE: debug/mdb/mdb-logic.c:1913:
+	     continue;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1943: FILE: debug/mdb/mdb-logic.c:1914:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1944: FILE: debug/mdb/mdb-logic.c:1915:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1945: FILE: debug/mdb/mdb-logic.c:1916:
+    return c;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1947: FILE: debug/mdb/mdb-logic.c:1918:
+
+}

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1949: FILE: debug/mdb/mdb-logic.c:1920:
+unsigned long Evaluate(StackFrame *stackFrame, unsigned char **p, unsigned long *type, unsigned long mode)

CHECK:CAMELCASE: Avoid CamelCase: <Evaluate>
#1949: FILE: debug/mdb/mdb-logic.c:1920:
+unsigned long Evaluate(StackFrame *stackFrame, unsigned char **p, unsigned long *type, unsigned long mode)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1951: FILE: debug/mdb/mdb-logic.c:1922:
+{
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1952: FILE: debug/mdb/mdb-logic.c:1923:
+     register int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1953: FILE: debug/mdb/mdb-logic.c:1924:
+     unsigned long oper = 0, dref = 0, bracket = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1954: FILE: debug/mdb/mdb-logic.c:1925:
+     unsigned long dref_type = 0, lastClass = 0, lastToken = 0;$

CHECK:CAMELCASE: Avoid CamelCase: <lastToken>
#1954: FILE: debug/mdb/mdb-logic.c:1925:
+     unsigned long dref_type = 0, lastClass = 0, lastToken = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1955: FILE: debug/mdb/mdb-logic.c:1926:
+     unsigned long neg_flag = 0, negative_flag = 0, c;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1956: FILE: debug/mdb/mdb-logic.c:1927:
+     unsigned long booleanCount = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1959: FILE: debug/mdb/mdb-logic.c:1930:
+     spin_lock_irqsave(&expressLock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1962: FILE: debug/mdb/mdb-logic.c:1933:
+     if (type)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1965: FILE: debug/mdb/mdb-logic.c:1936:
+     DBGPrint("\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1968: FILE: debug/mdb/mdb-logic.c:1939:
+     DBGPrint("\np: %08X  %s\n", *p, *p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1970: FILE: debug/mdb/mdb-logic.c:1941:
+     parseTokens(stackFrame, *p, mode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1971: FILE: debug/mdb/mdb-logic.c:1942:
+     if (TokenCount)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1971: FILE: debug/mdb/mdb-logic.c:1942:
+     if (TokenCount)
+     {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1972: FILE: debug/mdb/mdb-logic.c:1943:
+     {$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1974: FILE: debug/mdb/mdb-logic.c:1945:
+	for (i=0; i < TokenCount; i++)
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 11)
#1974: FILE: debug/mdb/mdb-logic.c:1945:
+	for (i=0; i < TokenCount; i++)
[...]
+#if (DEBUG_EXPRESS)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1974: FILE: debug/mdb/mdb-logic.c:1945:
+	for (i=0; i < TokenCount; i++)
 	      ^

WARNING:TABSTOP: Statements should start on a tabstop
#1979: FILE: debug/mdb/mdb-logic.c:1950:
+	   switch (TokenType[i])

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1979: FILE: debug/mdb/mdb-logic.c:1950:
+	   switch (TokenType[i])
+	   {

WARNING:TABSTOP: Statements should start on a tabstop
#1980: FILE: debug/mdb/mdb-logic.c:1951:
+	   {

WARNING:TABSTOP: Statements should start on a tabstop
#1981: FILE: debug/mdb/mdb-logic.c:1952:
+	      case INVALID_NUMBER_TOKEN:

ERROR:CODE_INDENT: code indent should use tabs where possible
#1982: FILE: debug/mdb/mdb-logic.c:1953:
+                 goto evaluate_error_exit;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1982: FILE: debug/mdb/mdb-logic.c:1953:
+                 goto evaluate_error_exit;$

WARNING:TABSTOP: Statements should start on a tabstop
#1984: FILE: debug/mdb/mdb-logic.c:1955:
+	      case NOT_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#1985: FILE: debug/mdb/mdb-logic.c:1956:
+		 if (lastClass != CLASS_DATA)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1985: FILE: debug/mdb/mdb-logic.c:1956:
+		 if (lastClass != CLASS_DATA)
+		 {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#1985: FILE: debug/mdb/mdb-logic.c:1956:
+		 if (lastClass != CLASS_DATA)
+		 {

WARNING:TABSTOP: Statements should start on a tabstop
#1986: FILE: debug/mdb/mdb-logic.c:1957:
+		 {

WARNING:TABSTOP: Statements should start on a tabstop
#1987: FILE: debug/mdb/mdb-logic.c:1958:
+		    if (oper)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (20, 23)
#1987: FILE: debug/mdb/mdb-logic.c:1958:
+		    if (oper)
+		       oper = ProcessOperator(oper);

WARNING:TABSTOP: Statements should start on a tabstop
#1998: FILE: debug/mdb/mdb-logic.c:1969:
+		 }

WARNING:TABSTOP: Statements should start on a tabstop
#2000: FILE: debug/mdb/mdb-logic.c:1971:
+		 continue;

WARNING:TABSTOP: Statements should start on a tabstop
#2003: FILE: debug/mdb/mdb-logic.c:1974:
+	      case GREATER_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2004: FILE: debug/mdb/mdb-logic.c:1975:
+	      case LESS_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2005: FILE: debug/mdb/mdb-logic.c:1976:
+	      case GREATER_EQUAL_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2006: FILE: debug/mdb/mdb-logic.c:1977:
+	      case LESS_EQUAL_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2007: FILE: debug/mdb/mdb-logic.c:1978:
+	      case LOGICAL_AND_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2008: FILE: debug/mdb/mdb-logic.c:1979:
+	      case LOGICAL_OR_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2009: FILE: debug/mdb/mdb-logic.c:1980:
+	      case EQUAL_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2010: FILE: debug/mdb/mdb-logic.c:1981:
+	      case NOT_EQUAL_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2011: FILE: debug/mdb/mdb-logic.c:1982:
+		 if (oper)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#2011: FILE: debug/mdb/mdb-logic.c:1982:
+		 if (oper)
+		    oper = ProcessOperator(oper);

WARNING:TABSTOP: Statements should start on a tabstop
#2023: FILE: debug/mdb/mdb-logic.c:1994:
+		 continue;

WARNING:TABSTOP: Statements should start on a tabstop
#2026: FILE: debug/mdb/mdb-logic.c:1997:
+	      case DWORD_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2027: FILE: debug/mdb/mdb-logic.c:1998:
+		 if (dref)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#2027: FILE: debug/mdb/mdb-logic.c:1998:
+		 if (dref)
+		    dref_type = ULONG_PTR;

WARNING:TABSTOP: Statements should start on a tabstop
#2030: FILE: debug/mdb/mdb-logic.c:2001:
+		 continue;

WARNING:TABSTOP: Statements should start on a tabstop
#2032: FILE: debug/mdb/mdb-logic.c:2003:
+	      case WORD_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2033: FILE: debug/mdb/mdb-logic.c:2004:
+		 if (dref)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#2033: FILE: debug/mdb/mdb-logic.c:2004:
+		 if (dref)
+		    dref_type = WORD_PTR;

WARNING:TABSTOP: Statements should start on a tabstop
#2036: FILE: debug/mdb/mdb-logic.c:2007:
+		 continue;

WARNING:TABSTOP: Statements should start on a tabstop
#2038: FILE: debug/mdb/mdb-logic.c:2009:
+	      case BYTE_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2039: FILE: debug/mdb/mdb-logic.c:2010:
+		 if (dref)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#2039: FILE: debug/mdb/mdb-logic.c:2010:
+		 if (dref)
+		    dref_type = BYTE_PTR;

WARNING:TABSTOP: Statements should start on a tabstop
#2042: FILE: debug/mdb/mdb-logic.c:2013:
+		 continue;

WARNING:TABSTOP: Statements should start on a tabstop
#2044: FILE: debug/mdb/mdb-logic.c:2015:
+	      case DREF_OPEN_TOKEN:   /* push state and nest for de-reference */

WARNING:TABSTOP: Statements should start on a tabstop
#2045: FILE: debug/mdb/mdb-logic.c:2016:
+		 if (lastClass == CLASS_DATA)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2045: FILE: debug/mdb/mdb-logic.c:2016:
+		 if (lastClass == CLASS_DATA)
+		 {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#2045: FILE: debug/mdb/mdb-logic.c:2016:
+		 if (lastClass == CLASS_DATA)
+		 {

WARNING:TABSTOP: Statements should start on a tabstop
#2046: FILE: debug/mdb/mdb-logic.c:2017:
+		 {

WARNING:TABSTOP: Statements should start on a tabstop
#2048: FILE: debug/mdb/mdb-logic.c:2019:
+		    if (type)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2048: FILE: debug/mdb/mdb-logic.c:2019:
+		    if (type)
+		    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (20, 23)
#2048: FILE: debug/mdb/mdb-logic.c:2019:
+		    if (type)
+		    {

WARNING:TABSTOP: Statements should start on a tabstop
#2049: FILE: debug/mdb/mdb-logic.c:2020:
+		    {

WARNING:TABSTOP: Statements should start on a tabstop
#2050: FILE: debug/mdb/mdb-logic.c:2021:
+		       if (booleanCount)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 26)
#2050: FILE: debug/mdb/mdb-logic.c:2021:
+		       if (booleanCount)
+			  *type = BOOLEAN_EXPRESSION;

WARNING:TABSTOP: Statements should start on a tabstop
#2052: FILE: debug/mdb/mdb-logic.c:2023:
+		       else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 26)
#2052: FILE: debug/mdb/mdb-logic.c:2023:
+		       else
+			  *type = NUMERIC_EXPRESSION;

WARNING:TABSTOP: Statements should start on a tabstop
#2054: FILE: debug/mdb/mdb-logic.c:2025:
+		    }

WARNING:TABSTOP: Statements should start on a tabstop
#2056: FILE: debug/mdb/mdb-logic.c:2027:
+		    if (booleanCount)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2056: FILE: debug/mdb/mdb-logic.c:2027:
+		    if (booleanCount)
+		    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (20, 23)
#2056: FILE: debug/mdb/mdb-logic.c:2027:
+		    if (booleanCount)
+		    {

WARNING:TABSTOP: Statements should start on a tabstop
#2057: FILE: debug/mdb/mdb-logic.c:2028:
+		    {

WARNING:TABSTOP: Statements should start on a tabstop
#2069: FILE: debug/mdb/mdb-logic.c:2040:
+		       return c;

WARNING:TABSTOP: Statements should start on a tabstop
#2070: FILE: debug/mdb/mdb-logic.c:2041:
+		    }

WARNING:TABSTOP: Statements should start on a tabstop
#2077: FILE: debug/mdb/mdb-logic.c:2048:
+		    return c;

WARNING:TABSTOP: Statements should start on a tabstop
#2078: FILE: debug/mdb/mdb-logic.c:2049:
+		 }

WARNING:TABSTOP: Statements should start on a tabstop
#2091: FILE: debug/mdb/mdb-logic.c:2062:
+		 continue;

WARNING:TABSTOP: Statements should start on a tabstop
#2093: FILE: debug/mdb/mdb-logic.c:2064:
+	      case DREF_CLOSE_TOKEN: /* pop state,restore,and complete oper */

WARNING:TABSTOP: Statements should start on a tabstop
#2094: FILE: debug/mdb/mdb-logic.c:2065:
+		 if (!dref)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#2094: FILE: debug/mdb/mdb-logic.c:2065:
+		 if (!dref)
+		    continue;

WARNING:TABSTOP: Statements should start on a tabstop
#2095: FILE: debug/mdb/mdb-logic.c:2066:
+		    continue;

WARNING:TABSTOP: Statements should start on a tabstop
#2103: FILE: debug/mdb/mdb-logic.c:2074:
+		 if (dref)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#2103: FILE: debug/mdb/mdb-logic.c:2074:
+		 if (dref)
+		    dref--;

WARNING:TABSTOP: Statements should start on a tabstop
#2108: FILE: debug/mdb/mdb-logic.c:2079:
+		 if (negative_flag)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#2108: FILE: debug/mdb/mdb-logic.c:2079:
+		 if (negative_flag)
+		    c = 0 - c;

WARNING:TABSTOP: Statements should start on a tabstop
#2110: FILE: debug/mdb/mdb-logic.c:2081:
+		 if (neg_flag)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#2110: FILE: debug/mdb/mdb-logic.c:2081:
+		 if (neg_flag)
+		    c = ~c;

WARNING:TABSTOP: Statements should start on a tabstop
#2116: FILE: debug/mdb/mdb-logic.c:2087:
+		 if (oper)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#2116: FILE: debug/mdb/mdb-logic.c:2087:
+		 if (oper)
+		    oper = ProcessOperator(oper);

WARNING:TABSTOP: Statements should start on a tabstop
#2119: FILE: debug/mdb/mdb-logic.c:2090:
+		 continue;

WARNING:TABSTOP: Statements should start on a tabstop
#2121: FILE: debug/mdb/mdb-logic.c:2092:
+	      case BB_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2122: FILE: debug/mdb/mdb-logic.c:2093:
+		 if (lastClass == CLASS_DATA)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2122: FILE: debug/mdb/mdb-logic.c:2093:
+		 if (lastClass == CLASS_DATA)
+		 {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#2122: FILE: debug/mdb/mdb-logic.c:2093:
+		 if (lastClass == CLASS_DATA)
+		 {

WARNING:TABSTOP: Statements should start on a tabstop
#2123: FILE: debug/mdb/mdb-logic.c:2094:
+		 {

WARNING:TABSTOP: Statements should start on a tabstop
#2125: FILE: debug/mdb/mdb-logic.c:2096:
+		    if (type)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2125: FILE: debug/mdb/mdb-logic.c:2096:
+		    if (type)
+		    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (20, 23)
#2125: FILE: debug/mdb/mdb-logic.c:2096:
+		    if (type)
+		    {

WARNING:TABSTOP: Statements should start on a tabstop
#2126: FILE: debug/mdb/mdb-logic.c:2097:
+		    {

WARNING:TABSTOP: Statements should start on a tabstop
#2127: FILE: debug/mdb/mdb-logic.c:2098:
+		       if (booleanCount)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 26)
#2127: FILE: debug/mdb/mdb-logic.c:2098:
+		       if (booleanCount)
+			  *type = BOOLEAN_EXPRESSION;

WARNING:TABSTOP: Statements should start on a tabstop
#2129: FILE: debug/mdb/mdb-logic.c:2100:
+		       else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 26)
#2129: FILE: debug/mdb/mdb-logic.c:2100:
+		       else
+			  *type = NUMERIC_EXPRESSION;

WARNING:TABSTOP: Statements should start on a tabstop
#2131: FILE: debug/mdb/mdb-logic.c:2102:
+		    }

WARNING:TABSTOP: Statements should start on a tabstop
#2133: FILE: debug/mdb/mdb-logic.c:2104:
+		    if (booleanCount)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2133: FILE: debug/mdb/mdb-logic.c:2104:
+		    if (booleanCount)
+		    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (20, 23)
#2133: FILE: debug/mdb/mdb-logic.c:2104:
+		    if (booleanCount)
+		    {

WARNING:TABSTOP: Statements should start on a tabstop
#2134: FILE: debug/mdb/mdb-logic.c:2105:
+		    {

WARNING:TABSTOP: Statements should start on a tabstop
#2146: FILE: debug/mdb/mdb-logic.c:2117:
+		       return c;

WARNING:TABSTOP: Statements should start on a tabstop
#2147: FILE: debug/mdb/mdb-logic.c:2118:
+		    }

WARNING:TABSTOP: Statements should start on a tabstop
#2154: FILE: debug/mdb/mdb-logic.c:2125:
+		    return c;

WARNING:TABSTOP: Statements should start on a tabstop
#2155: FILE: debug/mdb/mdb-logic.c:2126:
+		 }

WARNING:TABSTOP: Statements should start on a tabstop
#2166: FILE: debug/mdb/mdb-logic.c:2137:
+		 continue;

WARNING:TABSTOP: Statements should start on a tabstop
#2168: FILE: debug/mdb/mdb-logic.c:2139:
+	      case EB_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2169: FILE: debug/mdb/mdb-logic.c:2140:
+		 if (!bracket)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#2169: FILE: debug/mdb/mdb-logic.c:2140:
+		 if (!bracket)
+		    continue;

WARNING:TABSTOP: Statements should start on a tabstop
#2170: FILE: debug/mdb/mdb-logic.c:2141:
+		    continue;

WARNING:TABSTOP: Statements should start on a tabstop
#2175: FILE: debug/mdb/mdb-logic.c:2146:
+		 if (bracket)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#2175: FILE: debug/mdb/mdb-logic.c:2146:
+		 if (bracket)
+		    bracket--;

WARNING:TABSTOP: Statements should start on a tabstop
#2179: FILE: debug/mdb/mdb-logic.c:2150:
+		 if (negative_flag)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#2179: FILE: debug/mdb/mdb-logic.c:2150:
+		 if (negative_flag)
+		    c = 0 - c;

WARNING:TABSTOP: Statements should start on a tabstop
#2181: FILE: debug/mdb/mdb-logic.c:2152:
+		 if (neg_flag)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#2181: FILE: debug/mdb/mdb-logic.c:2152:
+		 if (neg_flag)
+		    c = ~c;

WARNING:TABSTOP: Statements should start on a tabstop
#2186: FILE: debug/mdb/mdb-logic.c:2157:
+		 if (oper)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#2186: FILE: debug/mdb/mdb-logic.c:2157:
+		 if (oper)
+		    oper = ProcessOperator(oper);

WARNING:TABSTOP: Statements should start on a tabstop
#2189: FILE: debug/mdb/mdb-logic.c:2160:
+		 continue;

WARNING:TABSTOP: Statements should start on a tabstop
#2192: FILE: debug/mdb/mdb-logic.c:2163:
+	      case NEG_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2195: FILE: debug/mdb/mdb-logic.c:2166:
+		 continue;

WARNING:TABSTOP: Statements should start on a tabstop
#2197: FILE: debug/mdb/mdb-logic.c:2168:
+	      case MINUS_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2198: FILE: debug/mdb/mdb-logic.c:2169:
+		 if (lastClass == CLASS_ARITHMETIC)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2198: FILE: debug/mdb/mdb-logic.c:2169:
+		 if (lastClass == CLASS_ARITHMETIC)
+		 {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#2198: FILE: debug/mdb/mdb-logic.c:2169:
+		 if (lastClass == CLASS_ARITHMETIC)
+		 {

WARNING:TABSTOP: Statements should start on a tabstop
#2199: FILE: debug/mdb/mdb-logic.c:2170:
+		 {

WARNING:TABSTOP: Statements should start on a tabstop
#2202: FILE: debug/mdb/mdb-logic.c:2173:
+		    continue;

WARNING:TABSTOP: Statements should start on a tabstop
#2203: FILE: debug/mdb/mdb-logic.c:2174:
+		 }

WARNING:TABSTOP: Statements should start on a tabstop
#2204: FILE: debug/mdb/mdb-logic.c:2175:
+		 if (lastClass != CLASS_ARITHMETIC)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2204: FILE: debug/mdb/mdb-logic.c:2175:
+		 if (lastClass != CLASS_ARITHMETIC)
+		 {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#2204: FILE: debug/mdb/mdb-logic.c:2175:
+		 if (lastClass != CLASS_ARITHMETIC)
+		 {

WARNING:TABSTOP: Statements should start on a tabstop
#2205: FILE: debug/mdb/mdb-logic.c:2176:
+		 {

WARNING:TABSTOP: Statements should start on a tabstop
#2208: FILE: debug/mdb/mdb-logic.c:2179:
+		 }

WARNING:TABSTOP: Statements should start on a tabstop
#2210: FILE: debug/mdb/mdb-logic.c:2181:
+		 continue;

WARNING:TABSTOP: Statements should start on a tabstop
#2212: FILE: debug/mdb/mdb-logic.c:2183:
+	      case PLUS_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2213: FILE: debug/mdb/mdb-logic.c:2184:
+	      case LEFT_SHIFT_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2214: FILE: debug/mdb/mdb-logic.c:2185:
+	      case RIGHT_SHIFT_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2215: FILE: debug/mdb/mdb-logic.c:2186:
+	      case XOR_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2216: FILE: debug/mdb/mdb-logic.c:2187:
+	      case AND_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2217: FILE: debug/mdb/mdb-logic.c:2188:
+	      case MOD_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2218: FILE: debug/mdb/mdb-logic.c:2189:
+	      case OR_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2219: FILE: debug/mdb/mdb-logic.c:2190:
+	      case MULTIPLY_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2220: FILE: debug/mdb/mdb-logic.c:2191:
+	      case DIVIDE_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2221: FILE: debug/mdb/mdb-logic.c:2192:
+		 if (lastClass != CLASS_ARITHMETIC)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2221: FILE: debug/mdb/mdb-logic.c:2192:
+		 if (lastClass != CLASS_ARITHMETIC)
+		 {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#2221: FILE: debug/mdb/mdb-logic.c:2192:
+		 if (lastClass != CLASS_ARITHMETIC)
+		 {

WARNING:TABSTOP: Statements should start on a tabstop
#2222: FILE: debug/mdb/mdb-logic.c:2193:
+		 {

WARNING:TABSTOP: Statements should start on a tabstop
#2225: FILE: debug/mdb/mdb-logic.c:2196:
+		 }

WARNING:TABSTOP: Statements should start on a tabstop
#2227: FILE: debug/mdb/mdb-logic.c:2198:
+		 continue;

WARNING:TABSTOP: Statements should start on a tabstop
#2230: FILE: debug/mdb/mdb-logic.c:2201:
+	      case CF_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2231: FILE: debug/mdb/mdb-logic.c:2202:
+	      case PF_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2232: FILE: debug/mdb/mdb-logic.c:2203:
+	      case AF_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2233: FILE: debug/mdb/mdb-logic.c:2204:
+	      case ZF_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2234: FILE: debug/mdb/mdb-logic.c:2205:
+	      case SF_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2235: FILE: debug/mdb/mdb-logic.c:2206:
+	      case IF_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2236: FILE: debug/mdb/mdb-logic.c:2207:
+	      case DF_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2237: FILE: debug/mdb/mdb-logic.c:2208:
+	      case OF_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2238: FILE: debug/mdb/mdb-logic.c:2209:
+	      case VM_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2239: FILE: debug/mdb/mdb-logic.c:2210:
+	      case AC_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2240: FILE: debug/mdb/mdb-logic.c:2211:
+	      case EIP_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2241: FILE: debug/mdb/mdb-logic.c:2212:
+	      case FLAGS_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2242: FILE: debug/mdb/mdb-logic.c:2213:
+	      case EAX_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2243: FILE: debug/mdb/mdb-logic.c:2214:
+	      case EBX_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2244: FILE: debug/mdb/mdb-logic.c:2215:
+	      case ECX_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2245: FILE: debug/mdb/mdb-logic.c:2216:
+	      case EDX_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2246: FILE: debug/mdb/mdb-logic.c:2217:
+	      case ESI_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2247: FILE: debug/mdb/mdb-logic.c:2218:
+	      case EDI_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2248: FILE: debug/mdb/mdb-logic.c:2219:
+	      case EBP_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2249: FILE: debug/mdb/mdb-logic.c:2220:
+	      case ESP_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2250: FILE: debug/mdb/mdb-logic.c:2221:
+	      case CS_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2251: FILE: debug/mdb/mdb-logic.c:2222:
+	      case DS_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2252: FILE: debug/mdb/mdb-logic.c:2223:
+	      case ES_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2253: FILE: debug/mdb/mdb-logic.c:2224:
+	      case FS_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2254: FILE: debug/mdb/mdb-logic.c:2225:
+	      case GS_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2255: FILE: debug/mdb/mdb-logic.c:2226:
+	      case SS_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2256: FILE: debug/mdb/mdb-logic.c:2227:
+	      case NUMBER_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2257: FILE: debug/mdb/mdb-logic.c:2228:
+		 if (lastClass == CLASS_DATA)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2257: FILE: debug/mdb/mdb-logic.c:2228:
+		 if (lastClass == CLASS_DATA)
+		 {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#2257: FILE: debug/mdb/mdb-logic.c:2228:
+		 if (lastClass == CLASS_DATA)
+		 {

WARNING:TABSTOP: Statements should start on a tabstop
#2258: FILE: debug/mdb/mdb-logic.c:2229:
+		 {

WARNING:TABSTOP: Statements should start on a tabstop
#2260: FILE: debug/mdb/mdb-logic.c:2231:
+		    if (type)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2260: FILE: debug/mdb/mdb-logic.c:2231:
+		    if (type)
+		    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (20, 23)
#2260: FILE: debug/mdb/mdb-logic.c:2231:
+		    if (type)
+		    {

WARNING:TABSTOP: Statements should start on a tabstop
#2261: FILE: debug/mdb/mdb-logic.c:2232:
+		    {

WARNING:TABSTOP: Statements should start on a tabstop
#2262: FILE: debug/mdb/mdb-logic.c:2233:
+		       if (booleanCount)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 26)
#2262: FILE: debug/mdb/mdb-logic.c:2233:
+		       if (booleanCount)
+			  *type = BOOLEAN_EXPRESSION;

WARNING:TABSTOP: Statements should start on a tabstop
#2264: FILE: debug/mdb/mdb-logic.c:2235:
+		       else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 26)
#2264: FILE: debug/mdb/mdb-logic.c:2235:
+		       else
+			  *type = NUMERIC_EXPRESSION;

WARNING:TABSTOP: Statements should start on a tabstop
#2266: FILE: debug/mdb/mdb-logic.c:2237:
+		    }

WARNING:TABSTOP: Statements should start on a tabstop
#2268: FILE: debug/mdb/mdb-logic.c:2239:
+		    if (booleanCount)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2268: FILE: debug/mdb/mdb-logic.c:2239:
+		    if (booleanCount)
+		    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (20, 23)
#2268: FILE: debug/mdb/mdb-logic.c:2239:
+		    if (booleanCount)
+		    {

WARNING:TABSTOP: Statements should start on a tabstop
#2269: FILE: debug/mdb/mdb-logic.c:2240:
+		    {

WARNING:TABSTOP: Statements should start on a tabstop
#2281: FILE: debug/mdb/mdb-logic.c:2252:
+		       return c;

WARNING:TABSTOP: Statements should start on a tabstop
#2282: FILE: debug/mdb/mdb-logic.c:2253:
+		    }

WARNING:TABSTOP: Statements should start on a tabstop
#2289: FILE: debug/mdb/mdb-logic.c:2260:
+		    return c;

WARNING:TABSTOP: Statements should start on a tabstop
#2290: FILE: debug/mdb/mdb-logic.c:2261:
+		 }

WARNING:TABSTOP: Statements should start on a tabstop
#2293: FILE: debug/mdb/mdb-logic.c:2264:
+		 if (negative_flag)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#2293: FILE: debug/mdb/mdb-logic.c:2264:
+		 if (negative_flag)
+		    c = 0 - c;

WARNING:TABSTOP: Statements should start on a tabstop
#2295: FILE: debug/mdb/mdb-logic.c:2266:
+		 if (neg_flag)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#2295: FILE: debug/mdb/mdb-logic.c:2266:
+		 if (neg_flag)
+		    c = ~TokenValue[i];

WARNING:TABSTOP: Statements should start on a tabstop
#2300: FILE: debug/mdb/mdb-logic.c:2271:
+		 if (oper)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#2300: FILE: debug/mdb/mdb-logic.c:2271:
+		 if (oper)
+		    oper = ProcessOperator(oper);

WARNING:TABSTOP: Statements should start on a tabstop
#2303: FILE: debug/mdb/mdb-logic.c:2274:
+		 continue;

WARNING:TABSTOP: Statements should start on a tabstop
#2305: FILE: debug/mdb/mdb-logic.c:2276:
+	      case NULL_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2307: FILE: debug/mdb/mdb-logic.c:2278:
+		 if (TokenCount > 1 && type)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2307: FILE: debug/mdb/mdb-logic.c:2278:
+		 if (TokenCount > 1 && type)
+		 {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#2307: FILE: debug/mdb/mdb-logic.c:2278:
+		 if (TokenCount > 1 && type)
+		 {

WARNING:TABSTOP: Statements should start on a tabstop
#2308: FILE: debug/mdb/mdb-logic.c:2279:
+		 {

WARNING:TABSTOP: Statements should start on a tabstop
#2309: FILE: debug/mdb/mdb-logic.c:2280:
+		    if (booleanCount)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (20, 23)
#2309: FILE: debug/mdb/mdb-logic.c:2280:
+		    if (booleanCount)
+		       *type = BOOLEAN_EXPRESSION;

WARNING:TABSTOP: Statements should start on a tabstop
#2311: FILE: debug/mdb/mdb-logic.c:2282:
+		    else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (20, 23)
#2311: FILE: debug/mdb/mdb-logic.c:2282:
+		    else
+		       *type = NUMERIC_EXPRESSION;

WARNING:TABSTOP: Statements should start on a tabstop
#2313: FILE: debug/mdb/mdb-logic.c:2284:
+		 }

WARNING:TABSTOP: Statements should start on a tabstop
#2315: FILE: debug/mdb/mdb-logic.c:2286:
+		 if (booleanCount)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2315: FILE: debug/mdb/mdb-logic.c:2286:
+		 if (booleanCount)
+		 {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 20)
#2315: FILE: debug/mdb/mdb-logic.c:2286:
+		 if (booleanCount)
+		 {

WARNING:TABSTOP: Statements should start on a tabstop
#2316: FILE: debug/mdb/mdb-logic.c:2287:
+		 {

WARNING:TABSTOP: Statements should start on a tabstop
#2328: FILE: debug/mdb/mdb-logic.c:2299:
+		    return c;

WARNING:TABSTOP: Statements should start on a tabstop
#2329: FILE: debug/mdb/mdb-logic.c:2300:
+		 }

WARNING:TABSTOP: Statements should start on a tabstop
#2336: FILE: debug/mdb/mdb-logic.c:2307:
+		 return c;

WARNING:TABSTOP: Statements should start on a tabstop
#2339: FILE: debug/mdb/mdb-logic.c:2310:
+	      case ASSIGNMENT_TOKEN:

WARNING:TABSTOP: Statements should start on a tabstop
#2341: FILE: debug/mdb/mdb-logic.c:2312:
+		 continue;

WARNING:TABSTOP: Statements should start on a tabstop
#2343: FILE: debug/mdb/mdb-logic.c:2314:
+	      default:

WARNING:TABSTOP: Statements should start on a tabstop
#2345: FILE: debug/mdb/mdb-logic.c:2316:
+		 continue;

WARNING:TABSTOP: Statements should start on a tabstop
#2346: FILE: debug/mdb/mdb-logic.c:2317:
+	   }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2348: FILE: debug/mdb/mdb-logic.c:2319:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2351: FILE: debug/mdb/mdb-logic.c:2322:
+     if (type)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2354: FILE: debug/mdb/mdb-logic.c:2325:
+     if (lastToken) {};$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2354: FILE: debug/mdb/mdb-logic.c:2325:
+     if (lastToken) {};

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2354: FILE: debug/mdb/mdb-logic.c:2325:
+     if (lastToken) {};

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2357: FILE: debug/mdb/mdb-logic.c:2328:
+     spin_unlock_irqrestore(&expressLock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2359: FILE: debug/mdb/mdb-logic.c:2330:
+     return 0;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2361: FILE: debug/mdb/mdb-logic.c:2332:
+
+}

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#2363: FILE: debug/mdb/mdb-logic.c:2334:
+unsigned long EvaluateNumericExpression(StackFrame *stackFrame, unsigned char **p, unsigned long *type)

CHECK:CAMELCASE: Avoid CamelCase: <EvaluateNumericExpression>
#2363: FILE: debug/mdb/mdb-logic.c:2334:
+unsigned long EvaluateNumericExpression(StackFrame *stackFrame, unsigned char **p, unsigned long *type)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2365: FILE: debug/mdb/mdb-logic.c:2336:
+     register unsigned long c;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#2366: FILE: debug/mdb/mdb-logic.c:2337:
+     register unsigned long c;
+     c = Evaluate(stackFrame, p, type, 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2366: FILE: debug/mdb/mdb-logic.c:2337:
+     c = Evaluate(stackFrame, p, type, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2367: FILE: debug/mdb/mdb-logic.c:2338:
+     return c;$

CHECK:CAMELCASE: Avoid CamelCase: <EvaluateExpression>
#2370: FILE: debug/mdb/mdb-logic.c:2341:
+unsigned long EvaluateExpression(StackFrame *stackFrame, unsigned char **p, unsigned long *type)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2372: FILE: debug/mdb/mdb-logic.c:2343:
+     register unsigned long c;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#2373: FILE: debug/mdb/mdb-logic.c:2344:
+     register unsigned long c;
+     c = Evaluate(stackFrame, p, type, 0);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2373: FILE: debug/mdb/mdb-logic.c:2344:
+     c = Evaluate(stackFrame, p, type, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2374: FILE: debug/mdb/mdb-logic.c:2345:
+     return c;$

CHECK:CAMELCASE: Avoid CamelCase: <EvaluateCommandExpression>
#2377: FILE: debug/mdb/mdb-logic.c:2348:
+void EvaluateCommandExpression(StackFrame *stackFrame, unsigned char *p)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2379: FILE: debug/mdb/mdb-logic.c:2350:
+     unsigned char *expr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2380: FILE: debug/mdb/mdb-logic.c:2351:
+     unsigned long type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2381: FILE: debug/mdb/mdb-logic.c:2352:
+     unsigned long c;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2384: FILE: debug/mdb/mdb-logic.c:2355:
+     DBGPrint("expr: [%s]\n", p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2386: FILE: debug/mdb/mdb-logic.c:2357:
+     expr = p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2387: FILE: debug/mdb/mdb-logic.c:2358:
+     c = EvaluateExpression(stackFrame, &p, &type);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2388: FILE: debug/mdb/mdb-logic.c:2359:
+     if (type)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2388: FILE: debug/mdb/mdb-logic.c:2359:
+     if (type)
+     {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2389: FILE: debug/mdb/mdb-logic.c:2360:
+     {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2391: FILE: debug/mdb/mdb-logic.c:2362:
+	DBGPrint("expr: %s = 0x%08X (%dr) (%s) bool(%i) = %s\n",
+		    expr, (unsigned)c, (int)c, exprDescription[type & 3],

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2391: FILE: debug/mdb/mdb-logic.c:2362:
+		    expr, (unsigned)c, (int)c, exprDescription[type & 3],

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2393: FILE: debug/mdb/mdb-logic.c:2364:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2394: FILE: debug/mdb/mdb-logic.c:2365:
+     else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2394: FILE: debug/mdb/mdb-logic.c:2365:
+     else
+     {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2394: FILE: debug/mdb/mdb-logic.c:2365:
+     }
+     else

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2395: FILE: debug/mdb/mdb-logic.c:2366:
+     {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2396: FILE: debug/mdb/mdb-logic.c:2367:
+        DBGPrint("expression parameters invalid\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2396: FILE: debug/mdb/mdb-logic.c:2367:
+        DBGPrint("expression parameters invalid\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2398: FILE: debug/mdb/mdb-logic.c:2369:
+                 " bool(%i) = %s\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2398: FILE: debug/mdb/mdb-logic.c:2369:
+                 " bool(%i) = %s\n",$

WARNING:SPLIT_STRING: quoted string split across lines
#2398: FILE: debug/mdb/mdb-logic.c:2369:
+	DBGPrint("expr: %s = 0x%08X (%dr) (results invalid) (%s)"
+                 " bool(%i) = %s\n",

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2399: FILE: debug/mdb/mdb-logic.c:2370:
+		 expr, (unsigned)c, (int)c, exprDescription[type & 3],

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2401: FILE: debug/mdb/mdb-logic.c:2372:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2402: FILE: debug/mdb/mdb-logic.c:2373:
+     return;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2404: FILE: debug/mdb/mdb-logic.c:2375:
+
+}

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000239532.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 295 errors, 1209 warnings, 206 checks, 2375 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000239532.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
