WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#56: FILE: drivers/edac/edac_pci.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#64: FILE: drivers/edac/edac_pci.c:8:
express

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#81: FILE: drivers/edac/edac_pci.c:25:
+#include <asm/uaccess.h>

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#105: FILE: drivers/edac/edac_pci.c:49:
+struct edac_pci_ctl_info * edac_pci_alloc_ctl_info(

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#105: FILE: drivers/edac/edac_pci.c:49:
+struct edac_pci_ctl_info * edac_pci_alloc_ctl_info(

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#117: FILE: drivers/edac/edac_pci.c:61:
+	if ((pci = kzalloc(size, GFP_KERNEL)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#126: FILE: drivers/edac/edac_pci.c:70:
+	snprintf(pci->name, strlen(edac_pci_name)+1, "%s", edac_pci_name);
 	                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#134: FILE: drivers/edac/edac_pci.c:78:
+ * ^Ifrees the memory allocated by edac_pci_alloc_ctl_info() function$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#144: FILE: drivers/edac/edac_pci.c:88:
+ * ^Iscans the edac_pci list for a specific 'struct device *'$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#146: FILE: drivers/edac/edac_pci.c:90:
+static struct edac_pci_ctl_info * find_edac_pci_by_dev(struct device

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#152: FILE: drivers/edac/edac_pci.c:95:
+	debugf3("%s()\n", __func__);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#166: FILE: drivers/edac/edac_pci.c:109:
+ * ^IBefore calling this function, caller must assign a unique value to$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#167: FILE: drivers/edac/edac_pci.c:110:
+ * ^Iedac_dev->pci_idx.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#168: FILE: drivers/edac/edac_pci.c:111:
+ * ^IReturn:$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#169: FILE: drivers/edac/edac_pci.c:112:
+ * ^I^I0 on success$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#170: FILE: drivers/edac/edac_pci.c:113:
+ * ^I^I1 on failure$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#180: FILE: drivers/edac/edac_pci.c:123:
+	if (unlikely((rover = find_edac_pci_by_dev(pci->dev)) != NULL))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#201: FILE: drivers/edac/edac_pci.c:144:
+	edac_printk(KERN_WARNING, EDAC_PCI,
+		"%s (%s) %s %s already assigned %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#208: FILE: drivers/edac/edac_pci.c:151:
+	edac_printk(KERN_WARNING, EDAC_PCI,
+		"but in low-level driver: attempt to assign\n"

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#239: FILE: drivers/edac/edac_pci.c:181:
+ * ^ISearch for an edac_pci_ctl_info structure whose index is 'idx'$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#246: FILE: drivers/edac/edac_pci.c:188:
+struct edac_pci_ctl_info * edac_pci_find(int idx)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#270: FILE: drivers/edac/edac_pci.c:212:
+ * ^Iperforms the operation scheduled by a workq request$

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#272: FILE: drivers/edac/edac_pci.c:214:
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,20))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#272: FILE: drivers/edac/edac_pci.c:214:
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,20))
                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#272: FILE: drivers/edac/edac_pci.c:214:
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,20))
                                              ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#272: FILE: drivers/edac/edac_pci.c:214:
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,20))

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pci->op_state == OP_RUNNING_POLL'
#285: FILE: drivers/edac/edac_pci.c:227:
+	if ((pci->op_state == OP_RUNNING_POLL) &&
+		(pci->edac_check != NULL) &&
+		(pci->check_parity_error))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pci->edac_check != NULL'
#285: FILE: drivers/edac/edac_pci.c:227:
+	if ((pci->op_state == OP_RUNNING_POLL) &&
+		(pci->edac_check != NULL) &&
+		(pci->check_parity_error))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pci->check_parity_error'
#285: FILE: drivers/edac/edac_pci.c:227:
+	if ((pci->op_state == OP_RUNNING_POLL) &&
+		(pci->edac_check != NULL) &&
+		(pci->check_parity_error))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#286: FILE: drivers/edac/edac_pci.c:228:
+	if ((pci->op_state == OP_RUNNING_POLL) &&
+		(pci->edac_check != NULL) &&

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pci->edac_check"
#286: FILE: drivers/edac/edac_pci.c:228:
+		(pci->edac_check != NULL) &&

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#298: FILE: drivers/edac/edac_pci.c:240:
+ * ^Iinitialize a workq item for this edac_pci instance$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#299: FILE: drivers/edac/edac_pci.c:241:
+ * ^Ipassing in the new delay period in msec$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#302: FILE: drivers/edac/edac_pci.c:244:
+static void edac_pci_workq_setup(struct edac_pci_ctl_info *pci,
+		unsigned int msec)

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#304: FILE: drivers/edac/edac_pci.c:246:
+	debugf0("%s()\n", __func__);

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#309: FILE: drivers/edac/edac_pci.c:251:
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,20))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#309: FILE: drivers/edac/edac_pci.c:251:
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,20))
                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#309: FILE: drivers/edac/edac_pci.c:251:
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,20))
                                              ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#309: FILE: drivers/edac/edac_pci.c:251:
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,20))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#319: FILE: drivers/edac/edac_pci.c:261:
+ * ^Istop the workq processing on this edac_pci instance$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#334: FILE: drivers/edac/edac_pci.c:276:
+void edac_pci_reset_delay_period(struct edac_pci_ctl_info *pci,
+		unsigned long value)

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#360: FILE: drivers/edac/edac_pci.c:302:
+	debugf0("%s()\n", __func__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pci->edac_check"
#377: FILE: drivers/edac/edac_pci.c:319:
+	if (pci->edac_check != NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#386: FILE: drivers/edac/edac_pci.c:328:
+	edac_pci_printk(pci, KERN_INFO,
+		"Giving out device to module '%s' controller '%s':"

WARNING:SPLIT_STRING: quoted string split across lines
#387: FILE: drivers/edac/edac_pci.c:329:
+		"Giving out device to module '%s' controller '%s':"
+		" DEV '%s' (%s)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:CAMELCASE: Avoid CamelCase: <edac_op_state_toString>
#391: FILE: drivers/edac/edac_pci.c:333:
+		edac_op_state_toString(pci->op_state));

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#406: FILE: drivers/edac/edac_pci.c:348:
+ * ^IRemove sysfs entries for specified edac_pci structure and$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#407: FILE: drivers/edac/edac_pci.c:349:
+ * ^Ithen remove edac_pci structure from global list$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#410: FILE: drivers/edac/edac_pci.c:352:
+ * ^IPointer to 'struct device' representing edac_pci structure$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#411: FILE: drivers/edac/edac_pci.c:353:
+ * ^Ito remove$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#414: FILE: drivers/edac/edac_pci.c:356:
+ * ^IPointer to removed edac_pci structure,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#415: FILE: drivers/edac/edac_pci.c:357:
+ * ^Ior NULL if device not found$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#417: FILE: drivers/edac/edac_pci.c:359:
+struct edac_pci_ctl_info * edac_pci_del_device(struct device *dev)

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#421: FILE: drivers/edac/edac_pci.c:363:
+	debugf0("%s()\n", __func__);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#425: FILE: drivers/edac/edac_pci.c:367:
+	if ((pci = find_edac_pci_by_dev(dev)) == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#441: FILE: drivers/edac/edac_pci.c:383:
+	edac_printk(KERN_INFO, EDAC_PCI,
+		"Removed device %d for %s %s: DEV %s\n",

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#467: FILE: drivers/edac/edac_pci.c:408:
+static int edac_pci_idx = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ctl' may be better as '(ctl)' to avoid precedence issues
#520: FILE: drivers/edac/edac_core.h:64:
+#define edac_pci_printk(ctl, level, fmt, arg...) \
+	printk(level "EDAC PCI%d: " fmt, ctl->pci_idx, ##arg)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#521: FILE: drivers/edac/edac_core.h:65:
+	printk(level "EDAC PCI%d: " fmt, ctl->pci_idx, ##arg)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#576: FILE: drivers/edac/edac_core.h:653:
+	unsigned poll_msec;	/* number of milliseconds to poll interval */

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#584: FILE: drivers/edac/edac_core.h:661:
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,20))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#584: FILE: drivers/edac/edac_core.h:661:
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,20))
                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#584: FILE: drivers/edac/edac_core.h:661:
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,20))
                                              ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#584: FILE: drivers/edac/edac_core.h:661:
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,20))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#595: FILE: drivers/edac/edac_core.h:672:
+	void (*edac_check) (struct edac_pci_ctl_info * edac_dev);

WARNING:SPACING: Unnecessary space before function pointer arguments
#595: FILE: drivers/edac/edac_core.h:672:
+	void (*edac_check) (struct edac_pci_ctl_info * edac_dev);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#633: FILE: drivers/edac/edac_core.h:710:
+		container_of(w, struct edac_pci_ctl_info,work)
 		                                        ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#651: FILE: drivers/edac/edac_core.h:818:
+extern void edac_pci_free_ctl_info(struct edac_pci_ctl_info *pci);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#657: FILE: drivers/edac/edac_core.h:823:
+extern int edac_pci_add_device(struct edac_pci_ctl_info *pci, int

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#659: FILE: drivers/edac/edac_core.h:824:
+extern struct edac_pci_ctl_info * edac_pci_del_device(struct device

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#659: FILE: drivers/edac/edac_core.h:824:
+extern struct edac_pci_ctl_info * edac_pci_del_device(struct device

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#665: FILE: drivers/edac/edac_core.h:829:
+extern void edac_pci_release_generic_ctl(struct edac_pci_ctl_info

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#667: FILE: drivers/edac/edac_core.h:830:
+extern int edac_pci_create_sysfs(struct edac_pci_ctl_info *pci);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#668: FILE: drivers/edac/edac_core.h:831:
+extern void edac_pci_remove_sysfs(struct edac_pci_ctl_info *pci);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#673: FILE: drivers/edac/edac_core.h:836:
+extern char * edac_op_state_toString(int op_state);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#673: FILE: drivers/edac/edac_core.h:836:
+extern char * edac_op_state_toString(int op_state);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#747: FILE: drivers/edac/edac_module.c:40:
+char * edac_op_state_toString(int opstate)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#823: FILE: drivers/edac/e752x_edac.c:1048:
+		printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#826: FILE: drivers/edac/e752x_edac.c:1051:
+		printk(KERN_WARNING

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#857: FILE: drivers/edac/edac_pci_sysfs.c:21:
+static int check_pci_errors = 0;	/* default YES check PCI parity */

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#858: FILE: drivers/edac/edac_pci_sysfs.c:22:
+static int panic_on_pci_parity = 0;	/* default no panic on PCI Parity

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#860: FILE: drivers/edac/edac_pci_sysfs.c:23:
+static int panic_on_pci_parity = 0;	/* default no panic on PCI Parity
+static int log_pci_errs = 1;

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#871: FILE: drivers/edac/edac_pci_sysfs.c:32:
+/**************************** EDAC PCI sysfs instance
+static ssize_t instance_pe_count_show(struct edac_pci_ctl_info *pci,

ERROR:CODE_INDENT: code indent should use tabs where possible
#874: FILE: drivers/edac/edac_pci_sysfs.c:34:
+        return sprintf(data,"%u\n",$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#881: FILE: drivers/edac/edac_pci_sysfs.c:40:
+        return sprintf(data,"%u\n",$

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#894: FILE: drivers/edac/edac_pci_sysfs.c:51:
+	debugf1("%s()\n", __func__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#902: FILE: drivers/edac/edac_pci_sysfs.c:59:
+        struct attribute attr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#902: FILE: drivers/edac/edac_pci_sysfs.c:59:
+        struct attribute attr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#903: FILE: drivers/edac/edac_pci_sysfs.c:60:
+        ssize_t (*show)(struct edac_pci_ctl_info *, char *);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#903: FILE: drivers/edac/edac_pci_sysfs.c:60:
+        ssize_t (*show)(struct edac_pci_ctl_info *, char *);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct edac_pci_ctl_info *' should also have an identifier name
#903: FILE: drivers/edac/edac_pci_sysfs.c:60:
+        ssize_t (*show)(struct edac_pci_ctl_info *, char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#903: FILE: drivers/edac/edac_pci_sysfs.c:60:
+        ssize_t (*show)(struct edac_pci_ctl_info *, char *);

ERROR:CODE_INDENT: code indent should use tabs where possible
#904: FILE: drivers/edac/edac_pci_sysfs.c:61:
+        ssize_t (*store)(struct edac_pci_ctl_info *, const char *,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#904: FILE: drivers/edac/edac_pci_sysfs.c:61:
+        ssize_t (*store)(struct edac_pci_ctl_info *, const char *,$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct edac_pci_ctl_info *' should also have an identifier name
#904: FILE: drivers/edac/edac_pci_sysfs.c:61:
+        ssize_t (*store)(struct edac_pci_ctl_info *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#904: FILE: drivers/edac/edac_pci_sysfs.c:61:
+        ssize_t (*store)(struct edac_pci_ctl_info *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ize_t' should also have an identifier name
#904: FILE: drivers/edac/edac_pci_sysfs.c:61:
+        ssize_t (*store)(struct edac_pci_ctl_info *, const char *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#906: FILE: drivers/edac/edac_pci_sysfs.c:62:
+        ssize_t (*store)(struct edac_pci_ctl_info *, const char *,
+};

ERROR:CODE_INDENT: code indent should use tabs where possible
#910: FILE: drivers/edac/edac_pci_sysfs.c:66:
+                        struct attribute *attr,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#910: FILE: drivers/edac/edac_pci_sysfs.c:66:
+static ssize_t edac_pci_instance_show(struct kobject *kobj,
+                        struct attribute *attr,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#910: FILE: drivers/edac/edac_pci_sysfs.c:66:
+                        struct attribute *attr,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#911: FILE: drivers/edac/edac_pci_sysfs.c:67:
+                        char *buffer)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#911: FILE: drivers/edac/edac_pci_sysfs.c:67:
+                        char *buffer)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#913: FILE: drivers/edac/edac_pci_sysfs.c:69:
+        struct edac_pci_ctl_info *pci = to_instance(kobj);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#913: FILE: drivers/edac/edac_pci_sysfs.c:69:
+        struct edac_pci_ctl_info *pci = to_instance(kobj);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#914: FILE: drivers/edac/edac_pci_sysfs.c:70:
+        struct instance_attribute *instance_attr =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#914: FILE: drivers/edac/edac_pci_sysfs.c:70:
+        struct instance_attribute *instance_attr =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#917: FILE: drivers/edac/edac_pci_sysfs.c:72:
+        if (instance_attr->show)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#917: FILE: drivers/edac/edac_pci_sysfs.c:72:
+        if (instance_attr->show)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#918: FILE: drivers/edac/edac_pci_sysfs.c:73:
+                return instance_attr->show(pci, buffer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#918: FILE: drivers/edac/edac_pci_sysfs.c:73:
+                return instance_attr->show(pci, buffer);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#919: FILE: drivers/edac/edac_pci_sysfs.c:74:
+        return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#919: FILE: drivers/edac/edac_pci_sysfs.c:74:
+        return -EIO;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#922: FILE: drivers/edac/edac_pci_sysfs.c:77:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#925: FILE: drivers/edac/edac_pci_sysfs.c:79:
+/* Function to 'store' fields into the edac_pci 'instance' structure
+static ssize_t edac_pci_instance_store(struct kobject *kobj,

ERROR:CODE_INDENT: code indent should use tabs where possible
#926: FILE: drivers/edac/edac_pci_sysfs.c:80:
+                        struct attribute *attr,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#927: FILE: drivers/edac/edac_pci_sysfs.c:81:
+                ^Iconst char *buffer, size_t count)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#927: FILE: drivers/edac/edac_pci_sysfs.c:81:
+                ^Iconst char *buffer, size_t count)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#929: FILE: drivers/edac/edac_pci_sysfs.c:83:
+        struct edac_pci_ctl_info *pci = to_instance(kobj);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#930: FILE: drivers/edac/edac_pci_sysfs.c:84:
+        struct instance_attribute *instance_attr =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#933: FILE: drivers/edac/edac_pci_sysfs.c:86:
+        if (instance_attr->store)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#934: FILE: drivers/edac/edac_pci_sysfs.c:87:
+                return instance_attr->store(pci, buffer, count);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#935: FILE: drivers/edac/edac_pci_sysfs.c:88:
+        return -EIO;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#982: FILE: drivers/edac/edac_pci_sysfs.c:134:
+		debugf2("%s() failed to register instance pci%d\n",
+				__func__, idx);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1001: FILE: drivers/edac/edac_pci_sysfs.c:152:
+/***************************** EDAC PCI sysfs root
+#define to_edacpci(k) container_of(k, struct edac_pci_ctl_info, kobj)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1011: FILE: drivers/edac/edac_pci_sysfs.c:223:
+EDAC_PCI_ATTR(check_pci_errors, S_IRUGO|S_IWUSR, edac_pci_int_show,
                                        ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1011: FILE: drivers/edac/edac_pci_sysfs.c:223:
+EDAC_PCI_ATTR(check_pci_errors, S_IRUGO|S_IWUSR, edac_pci_int_show,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1012: FILE: drivers/edac/edac_pci_sysfs.c:224:
+EDAC_PCI_ATTR(check_pci_errors, S_IRUGO|S_IWUSR, edac_pci_int_show,
+	edac_pci_int_store);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1013: FILE: drivers/edac/edac_pci_sysfs.c:225:
+EDAC_PCI_ATTR(log_pci_errs, S_IRUGO|S_IWUSR, edac_pci_int_show,
                                    ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1013: FILE: drivers/edac/edac_pci_sysfs.c:225:
+EDAC_PCI_ATTR(log_pci_errs, S_IRUGO|S_IWUSR, edac_pci_int_show,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1014: FILE: drivers/edac/edac_pci_sysfs.c:226:
+EDAC_PCI_ATTR(log_pci_errs, S_IRUGO|S_IWUSR, edac_pci_int_show,
 	edac_pci_int_store);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1018: FILE: drivers/edac/edac_pci_sysfs.c:230:
+EDAC_PCI_ATTR(pci_nonparity_count, S_IRUGO, edac_pci_int_show, NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!edac_class"
#1057: FILE: drivers/edac/edac_pci_sysfs.c:273:
+	if (edac_class == NULL) {

ERROR:SPACING: space required before the open parenthesis '('
#1069: FILE: drivers/edac/edac_pci_sysfs.c:283:
+	if(err)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1130: FILE: drivers/edac/edac_pci_sysfs.c:332:
 
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1134: FILE: drivers/edac/edac_pci_sysfs.c:336:
+	err = sysfs_create_link(edac_kobj,
+			&pci->dev->kobj,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1138: FILE: drivers/edac/edac_pci_sysfs.c:340:
+		debugf0("%s() sysfs_create_link() returned err= %d\n",
+				__func__, err);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1147: FILE: drivers/edac/edac_pci_sysfs.c:349:
+	debugf0("%s()\n", __func__);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1203: FILE: drivers/edac/edac_pci_sysfs.c:546:
 }
+void edac_pci_handle_pe(struct edac_pci_ctl_info *pci, const char

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1206: FILE: drivers/edac/edac_pci_sysfs.c:548:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1226: FILE: drivers/edac/edac_pci_sysfs.c:567:
+{
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000423248.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 42 errors, 61 warnings, 38 checks, 1153 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000423248.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
