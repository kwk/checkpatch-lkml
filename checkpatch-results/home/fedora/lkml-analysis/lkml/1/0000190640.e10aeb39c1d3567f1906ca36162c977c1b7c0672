CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#72: FILE: fs/ocfs2/alloc.c:6557:
+	vfs_dq_free_space_nodirty(inode,
+			ocfs2_clusters_to_bytes(osb->sb, clusters_to_del));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#99: FILE: fs/ocfs2/alloc.c:6907:
+		if (vfs_dq_alloc_space_nodirty(inode,
+				       ocfs2_clusters_to_bytes(osb->sb, 1))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#136: FILE: fs/ocfs2/aops.c:1735:
+	if (clusters_to_alloc && vfs_dq_alloc_space_nodirty(inode,
+			ocfs2_clusters_to_bytes(osb->sb, clusters_to_alloc))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#176: FILE: fs/ocfs2/aops.c:1782:
+		vfs_dq_free_space(inode,
+			  ocfs2_clusters_to_bytes(osb->sb, clusters_to_alloc));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#216: FILE: fs/ocfs2/dir.c:1264:
+	if (vfs_dq_alloc_space_nodirty(dir,
+				ocfs2_clusters_to_bytes(osb->sb, alloc))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#230: FILE: fs/ocfs2/dir.c:1393:
+		vfs_dq_free_space_nodirty(dir,
+			ocfs2_clusters_to_bytes(osb->sb, 2));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#248: FILE: fs/ocfs2/dir.c:1429:
+		if (vfs_dq_alloc_space_nodirty(dir,
+					ocfs2_clusters_to_bytes(sb, 1))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#299: FILE: fs/ocfs2/file.c:584:
+	if (vfs_dq_alloc_space_nodirty(inode, ocfs2_clusters_to_bytes(osb->sb,
+	    clusters_to_add))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#314: FILE: fs/ocfs2/file.c:629:
+	vfs_dq_free_space(inode,
+			ocfs2_clusters_to_bytes(osb->sb, clusters_to_add));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#325: FILE: fs/ocfs2/file.c:665:
+		vfs_dq_free_space(inode,
+			ocfs2_clusters_to_bytes(osb->sb, clusters_to_add));

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#352: FILE: fs/ocfs2/file.c:974:
+		if (attr->ia_valid & ATTR_UID && attr->ia_uid != inode->i_uid
+		    && OCFS2_HAS_RO_COMPAT_FEATURE(sb,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#363: FILE: fs/ocfs2/file.c:985:
+		if (attr->ia_valid & ATTR_GID && attr->ia_gid != inode->i_gid
+		    && OCFS2_HAS_RO_COMPAT_FEATURE(sb,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#442: FILE: fs/ocfs2/inode.c:925:
+	 * a block for inode. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#467: FILE: fs/ocfs2/journal.h:299:
+ * global quota info */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#522: FILE: fs/ocfs2/journal.h:352:
+ * group descriptor + mkdir/symlink blocks + quota update */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#538: FILE: fs/ocfs2/journal.h:368:
+ * update on dir */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#541: FILE: fs/ocfs2/journal.h:371:
+	return 2*OCFS2_INODE_UPDATE_CREDITS + 1 +
 	        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#645: FILE: fs/ocfs2/namei.c:339:
+	 * to be called. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#705: FILE: fs/ocfs2/namei.c:1668:
+	 * to be called. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#721: FILE: fs/ocfs2/namei.c:1692:
+		if (vfs_dq_alloc_space_nodirty(inode,
+		    ocfs2_clusters_to_bytes(osb->sb, 1))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#735: FILE: fs/ocfs2/namei.c:1764:
+		vfs_dq_free_space_nodirty(inode,
+					ocfs2_clusters_to_bytes(osb->sb, 1));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000190640.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 15 checks, 664 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000190640.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
