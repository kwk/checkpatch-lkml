WARNING:TYPO_SPELLING: 'referenece' may be misspelled - perhaps 'reference'?
#48: 
create the file and dropping the referenece in the release method
                                 ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#100: FILE: ipc/shm.c:73:
+static void shm_open (struct vm_area_struct *vma);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#101: FILE: ipc/shm.c:74:
+static void shm_close (struct vm_area_struct *vma);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#149: FILE: ipc/shm.c:207:
+static void shm_close (struct vm_area_struct *vma)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#153: FILE: ipc/shm.c:209:
+	struct file * file = vma->vm_file;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#176: FILE: ipc/shm.c:233:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#186: FILE: ipc/shm.c:243:
+	int err = 0;
+	if (sfd->vm_ops->set_policy)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#243: FILE: ipc/shm.c:289:
+static unsigned long shm_get_unmapped_area(struct file *file,
+	unsigned long addr, unsigned long len, unsigned long pgoff,

WARNING:LINE_SPACING: Missing a blank line after declarations
#247: FILE: ipc/shm.c:293:
+	struct shm_file_data *sfd = shm_file_data(file);
+	return sfd->file->f_op->get_unmapped_area(sfd->file, addr, len, pgoff,

ERROR:SPACING: space required before the open parenthesis '('
#332: FILE: ipc/shm.c:865:
+	if(shp == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!shp"
#332: FILE: ipc/shm.c:865:
+	if(shp == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#404: FILE: ipc/shm.c:947:
+^I^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vma->vm_ops == &shm_vm_ops'
#413: FILE: ipc/shm.c:1009:
+		if ((vma->vm_ops == &shm_vm_ops) &&
 			(vma->vm_start - addr)/PAGE_SIZE == vma->vm_pgoff) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#414: FILE: ipc/shm.c:1010:
+		if ((vma->vm_ops == &shm_vm_ops) &&
 			(vma->vm_start - addr)/PAGE_SIZE == vma->vm_pgoff) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vma->vm_ops == &shm_vm_ops'
#422: FILE: ipc/shm.c:1038:
+		if ((vma->vm_ops == &shm_vm_ops) &&
 			(vma->vm_start - addr)/PAGE_SIZE == vma->vm_pgoff)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#423: FILE: ipc/shm.c:1039:
+		if ((vma->vm_ops == &shm_vm_ops) &&
 			(vma->vm_start - addr)/PAGE_SIZE == vma->vm_pgoff)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000470964.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 6 warnings, 6 checks, 347 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000470964.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
