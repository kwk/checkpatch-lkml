WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#104: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#109: FILE: drivers/net/macvtap.c:1:
+#include <linux/etherdevice.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#130: FILE: drivers/net/macvtap.c:22:
+/*
+ * A macvtap queue is the central object of this driver, it connects

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#153: FILE: drivers/net/macvtap.c:45:
+	.obj_size = sizeof (struct macvtap_queue),

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#157: FILE: drivers/net/macvtap.c:49:
+/*
+ * Minor number matches netdev->ifindex, so need a potentially

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#170: FILE: drivers/net/macvtap.c:62:
+/*
+ * RCU usage:

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#198: FILE: drivers/net/macvtap.c:90:
+/*
+ * Choose the next free queue, for now there is only one

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#201: FILE: drivers/net/macvtap.c:93:
+static int macvtap_set_queue(struct net_device *dev, struct file *file,
+				struct macvtap_queue *q)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#223: FILE: drivers/net/macvtap.c:115:
+/*
+ * We must destroy each queue exactly once, when either

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#252: FILE: drivers/net/macvtap.c:144:
+/*
+ * Since we only support one queue, just dereference the pointer.

WARNING:LINE_SPACING: Missing a blank line after declarations
#265: FILE: drivers/net/macvtap.c:157:
+	struct macvlan_dev *vlan = netdev_priv(dev);
+	macvtap_del_queue(&vlan->tap);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#280: FILE: drivers/net/macvtap.c:172:
+/*
+ * Forward happens for data that gets sent from one macvlan

WARNING:LINE_SPACING: Missing a blank line after declarations
#287: FILE: drivers/net/macvtap.c:179:
+	struct macvtap_queue *q = macvtap_get_queue(dev, skb);
+	if (!q)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#296: FILE: drivers/net/macvtap.c:188:
+/*
+ * Receive is for data from the external interface (lowerdev),

CHECK:LINE_SPACING: Please don't use multiple blank lines
#349: FILE: drivers/net/macvtap.c:241:
+
+

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#356: FILE: drivers/net/macvtap.c:248:
+	if (sk->sk_sleep && waitqueue_active(sk->sk_sleep))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#403: FILE: drivers/net/macvtap.c:295:
+static unsigned int macvtap_poll(struct file *file, poll_table * wait)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#473: FILE: drivers/net/macvtap.c:365:
+	result = macvtap_get_user(q, iv, iov_length(iv, count),
+			      file->f_flags & O_NONBLOCK);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#550: FILE: drivers/net/macvtap.c:442:
+/*
+ * provide compatibility with generic tun/tap interface

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#598: FILE: drivers/net/macvtap.c:490:
+		/* TODO: add support for these, so far we don't
+			 support any offload */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#598: FILE: drivers/net/macvtap.c:490:
+			 support any offload */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#637: FILE: drivers/net/macvtap.c:529:
+	err = alloc_chrdev_region(&macvtap_major, 0,
+				MACVTAP_NUM_DEVS, "macvtap");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000019105.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 17 warnings, 4 checks, 604 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000019105.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
