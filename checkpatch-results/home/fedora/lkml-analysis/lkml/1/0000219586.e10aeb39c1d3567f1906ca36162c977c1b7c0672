WARNING:TYPO_SPELLING: 'kenrel' may be misspelled - perhaps 'kernel'?
#39: 
and also stored in a hash table (indexed by its physical kenrel address).
                                                         ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#128: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#133: FILE: checkpoint/objhash.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:BIT_MACRO: Prefer using the BIT macro
#162: FILE: checkpoint/objhash.c:30:
+#define CR_OBJHASH_TOTAL  (1UL << CR_OBJHASH_NBITS)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: No space is necessary after a cast
#168: FILE: checkpoint/objhash.c:36:
+		fput((struct file *) obj->ptr);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#171: FILE: checkpoint/objhash.c:39:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: No space is necessary after a cast
#179: FILE: checkpoint/objhash.c:47:
+		get_file((struct file *) obj->ptr);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#182: FILE: checkpoint/objhash.c:50:
+		BUG();

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#221: FILE: checkpoint/objhash.c:89:
+	head = kzalloc(CR_OBJHASH_TOTAL * sizeof(*head), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:SPACING: No space is necessary after a cast
#253: FILE: checkpoint/objhash.c:121:
+	h = &ctx->objhash->head[hash_ptr((void *) objref, CR_OBJHASH_NBITS)];

CHECK:SPACING: No space is necessary after a cast
#289: FILE: checkpoint/objhash.c:157:
+		i = hash_ptr((void *) objref, CR_OBJHASH_NBITS);

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#292: FILE: checkpoint/objhash.c:160:
+		obj->objref = ctx->objhash->next_free_objref++;;

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#328: FILE: checkpoint/objhash.c:196:
+			return -ENOMEM;
+		else

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#449: FILE: include/linux/checkpoint.h:57:
+extern void cr_objhash_free(struct cr_ctx *ctx);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#450: FILE: include/linux/checkpoint.h:58:
+extern int cr_objhash_alloc(struct cr_ctx *ctx);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#451: FILE: include/linux/checkpoint.h:59:
+extern void *cr_obj_get_by_ref(struct cr_ctx *ctx,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#453: FILE: include/linux/checkpoint.h:61:
+extern int cr_obj_get_by_ptr(struct cr_ctx *ctx,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#455: FILE: include/linux/checkpoint.h:63:
+extern int cr_obj_add_ptr(struct cr_ctx *ctx, void *ptr, int *objref,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#457: FILE: include/linux/checkpoint.h:65:
+extern int cr_obj_add_ref(struct cr_ctx *ctx, void *ptr, int objref,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000219586.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 11 checks, 376 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000219586.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
