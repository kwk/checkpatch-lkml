ERROR:CODE_INDENT: code indent should use tabs where possible
#62: FILE: include/linux/workqueue.h:85:
+                (_work)->prio = -1;                                     \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#62: FILE: include/linux/workqueue.h:85:
+                (_work)->prio = -1;                                     \$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#85: FILE: kernel/workqueue.c:43:
+	DECLARE_BITMAP(bitmap, MAX_RT_PRIO+1); /* +1 bit for delimiter */
 	                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#124: FILE: kernel/workqueue.c:107:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#125: FILE: kernel/workqueue.c:108:
+	for (i=0; i<MAX_RT_PRIO; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#125: FILE: kernel/workqueue.c:108:
+	for (i=0; i<MAX_RT_PRIO; i++)
 	           ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#129: FILE: kernel/workqueue.c:112:
+static struct work_struct* prio_array_dequeue(struct prio_array *array)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#134: FILE: kernel/workqueue.c:117:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#137: FILE: kernel/workqueue.c:120:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#139: FILE: kernel/workqueue.c:122:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#141: FILE: kernel/workqueue.c:124:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#143: FILE: kernel/workqueue.c:126:
+	BUG_ON(!head);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#144: FILE: kernel/workqueue.c:127:
+	BUG_ON(list_empty(head));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#145: FILE: kernel/workqueue.c:128:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#147: FILE: kernel/workqueue.c:130:
+	BUG_ON(!work);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#148: FILE: kernel/workqueue.c:131:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#151: FILE: kernel/workqueue.c:134:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#154: FILE: kernel/workqueue.c:137:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#164: FILE: kernel/workqueue.c:147:
+	BUG_ON(prio < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#165: FILE: kernel/workqueue.c:148:
+	BUG_ON(prio > MAX_RT_PRIO);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#226: FILE: kernel/workqueue.c:249:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#235: FILE: kernel/workqueue.c:368:
+static struct work_struct* cwq_dequeue(struct cpu_workqueue_struct *cwq)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#238: FILE: kernel/workqueue.c:371:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#247: FILE: kernel/workqueue.c:380:
+			BUG_ON(!work);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000397696.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 15 errors, 7 warnings, 2 checks, 294 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000397696.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
