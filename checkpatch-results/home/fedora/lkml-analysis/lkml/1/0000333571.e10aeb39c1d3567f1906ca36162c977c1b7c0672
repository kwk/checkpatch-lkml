CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#66: FILE: fs/ext4/inode.c:2670:
 }
+static blkcnt_t ext4_inode_blocks(struct ext4_inode *raw_inode,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#67: FILE: fs/ext4/inode.c:2671:
+static blkcnt_t ext4_inode_blocks(struct ext4_inode *raw_inode,
+					struct ext4_inode_info *ei)

WARNING:SPACING: space prohibited before semicolon
#69: FILE: fs/ext4/inode.c:2673:
+	blkcnt_t i_blocks ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#73: FILE: fs/ext4/inode.c:2677:
+	if (EXT4_HAS_RO_COMPAT_FEATURE(sb,
+				EXT4_FEATURE_RO_COMPAT_HUGE_FILE)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#100: FILE: fs/ext4/inode.c:2819:
+static int ext4_inode_blocks_set(handle_t *handle,
+				struct ext4_inode *raw_inode,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ei->vfs_inode
#103: FILE: fs/ext4/inode.c:2822:
+	struct inode *inode = &(ei->vfs_inode);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TYPO_SPELLING: 'represnted' may be misspelled - perhaps 'represented'?
#110: FILE: fs/ext4/inode.c:2829:
+		 * i_blocks can be represnted in a 32 bit variable
 		                   ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#121: FILE: fs/ext4/inode.c:2840:
+		err = ext4_update_rocompat_feature(handle, sb,
+					    EXT4_FEATURE_RO_COMPAT_HUGE_FILE);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#128: FILE: fs/ext4/inode.c:2847:
+		ext4_error(sb, __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#129: FILE: fs/ext4/inode.c:2848:
+		ext4_error(sb, __FUNCTION__,
+				"Wrong inode i_blocks count  %llu\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#201: FILE: fs/ext4/super.c:1644:
+	meta_blocks += 1 + (1LL << (bits-2));
 	                                ^

WARNING:TYPO_SPELLING: 'tripple' may be misspelled - perhaps 'triple'?
#202: FILE: fs/ext4/super.c:1645:
+	/* tripple indirect blocks */
 	   ^^^^^^^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#203: FILE: fs/ext4/super.c:1646:
+	meta_blocks += 1 + (1LL << (bits-2)) + (1LL << (2*(bits-2)));
 	                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#203: FILE: fs/ext4/super.c:1646:
+	meta_blocks += 1 + (1LL << (bits-2)) + (1LL << (2*(bits-2)));
 	                                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#203: FILE: fs/ext4/super.c:1646:
+	meta_blocks += 1 + (1LL << (bits-2)) + (1LL << (2*(bits-2)));
 	                                                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#231: FILE: fs/ext4/super.c:1835:
+		if (sizeof(root->i_blocks) < sizeof(u64) &&
+				!(sb->s_flags & MS_RDONLY)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#232: FILE: fs/ext4/super.c:1836:
+			printk(KERN_ERR "EXT4-fs: %s: Filesystem with huge "

WARNING:SPLIT_STRING: quoted string split across lines
#233: FILE: fs/ext4/super.c:1837:
+			printk(KERN_ERR "EXT4-fs: %s: Filesystem with huge "
+					"files cannot be mounted read-write "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#234: FILE: fs/ext4/super.c:1838:
+					"files cannot be mounted read-write "
+					"without CONFIG_LSF.\n", sb->s_id);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000333571.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 12 checks, 214 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000333571.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
