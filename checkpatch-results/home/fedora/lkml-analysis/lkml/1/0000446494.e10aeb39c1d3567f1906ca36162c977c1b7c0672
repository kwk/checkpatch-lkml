WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
[PATCH] sysfs: implement sysfs_dirent active reference and immediate disconnect

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#199: FILE: fs/sysfs/sysfs.h:94:
+static inline struct sysfs_dirent * sysfs_get(struct sysfs_dirent * sd)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#199: FILE: fs/sysfs/sysfs.h:94:
+static inline struct sysfs_dirent * sysfs_get(struct sysfs_dirent * sd)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#211: FILE: fs/sysfs/sysfs.h:103:
+static inline void sysfs_put(struct sysfs_dirent * sd)

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#601: FILE: fs/sysfs/file.c:333:
+		if (!(set = inode->i_private = kmalloc(sizeof(struct sysfs_buffer_collection), GFP_KERNEL)))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#601: FILE: fs/sysfs/file.c:333:
+		if (!(set = inode->i_private = kmalloc(sizeof(struct sysfs_buffer_collection), GFP_KERNEL)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*inode->i_private)...) over kmalloc(sizeof(struct sysfs_buffer_collection)...)
#601: FILE: fs/sysfs/file.c:333:
+		if (!(set = inode->i_private = kmalloc(sizeof(struct sysfs_buffer_collection), GFP_KERNEL)))

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#721: FILE: fs/sysfs/file.c:442:
+	return POLLERR|POLLPRI;
 	              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000446494.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 2 warnings, 2 checks, 604 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000446494.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
