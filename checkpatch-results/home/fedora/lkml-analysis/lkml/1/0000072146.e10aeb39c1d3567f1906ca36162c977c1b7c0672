WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#37: FILE: Makefile:4:
+EXTRAVERSION = .7
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#75: FILE: arch/sparc/kernel/irq_64.c:905:
+static void __cpuinit notrace register_one_mondo(unsigned long paddr, unsigned long type, unsigned long qmask)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#108: FILE: arch/sparc/kernel/ktlb.S:171:
+	ba,pt		%xcc, 2f
 	^^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#199: FILE: arch/sparc/mm/init_64.c:1926:
+	extern unsigned int valid_addr_bitmap_insn[];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#200: FILE: arch/sparc/mm/init_64.c:1927:
+	extern unsigned int valid_addr_bitmap_patch[];

WARNING:MEMORY_BARRIER: memory barrier without comment
#203: FILE: arch/sparc/mm/init_64.c:1930:
+	mb();

WARNING:LINE_SPACING: Missing a blank line after declarations
#242: FILE: arch/sparc/mm/init_64.c:1955:
+		int i;
+		for_each_online_node(i) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#260: FILE: arch/sparc/mm/init_64.h:8:
+#define MAX_PHYS_ADDRESS	(1UL << 41UL)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:SPLIT_STRING: quoted string split across lines
#527: FILE: drivers/md/dm-snap-persistent.c:338:
+		DMWARN("chunk size %llu in device metadata overrides "
+		       "table chunk size of %llu.",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#619: FILE: drivers/net/ppp_generic.c:1435:
+				flen = totlen/nfree	;
 				             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited before semicolon
#619: FILE: drivers/net/ppp_generic.c:1435:
+				flen = totlen/nfree	;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#625: FILE: drivers/net/ppp_generic.c:1441:
+				flen = (((totfree - nzero)*(totlen + hdrlen*totfree)) /
 				                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#625: FILE: drivers/net/ppp_generic.c:1441:
+				flen = (((totfree - nzero)*(totlen + hdrlen*totfree)) /
 				                                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#626: FILE: drivers/net/ppp_generic.c:1442:
+					((totspeed*totfree)/pch->speed)) - hdrlen;
 					          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#626: FILE: drivers/net/ppp_generic.c:1442:
+					((totspeed*totfree)/pch->speed)) - hdrlen;
 					                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#628: FILE: drivers/net/ppp_generic.c:1444:
+					flen += ((totfree - nzero)*pch->speed)/totspeed;
 					                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#628: FILE: drivers/net/ppp_generic.c:1444:
+					flen += ((totfree - nzero)*pch->speed)/totspeed;
 					                                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#629: FILE: drivers/net/ppp_generic.c:1445:
+					nbigger -= ((totfree - nzero)*pch->speed)/
 					                             ^

CHECK:SPACING: space preferred before that '/' (ctx:VxE)
#629: FILE: drivers/net/ppp_generic.c:1445:
+					nbigger -= ((totfree - nzero)*pch->speed)/
 					                                         ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nfree <= 0'
#643: FILE: drivers/net/ppp_generic.c:1457:
+		if ((nfree <= 0) || (flen > len))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'flen > len'
#643: FILE: drivers/net/ppp_generic.c:1457:
+		if ((nfree <= 0) || (flen > len))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#710: FILE: drivers/pci/pci.h:237:
+extern int pci_sriov_resource_alignment(struct pci_dev *dev, int resno);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#938: FILE: net/core/net_namespace.c:501:
+	memcpy(&ng->ptr, &old_ng->ptr, old_ng->len * sizeof(void*));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000072146.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 10 warnings, 13 checks, 791 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000072146.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
