WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#45: FILE: include/linux/percpu.h:446:
+static inline unsigned long __this_cpu_cmpxchg_generic(volatile void *pptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#46: FILE: include/linux/percpu.h:447:
+static inline unsigned long __this_cpu_cmpxchg_generic(volatile void *pptr,
+		unsigned long old, unsigned long new, int size)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#49: FILE: include/linux/percpu.h:450:
+	volatile void * ptr = __this_cpu_ptr(pptr);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#49: FILE: include/linux/percpu.h:450:
+	volatile void * ptr = __this_cpu_ptr(pptr);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#52: FILE: include/linux/percpu.h:453:
+	case 1: prev = *(u8 *)ptr;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#56: FILE: include/linux/percpu.h:457:
+	case 2: prev = *(u16 *)ptr;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#60: FILE: include/linux/percpu.h:461:
+	case 4: prev = *(u32 *)ptr;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#64: FILE: include/linux/percpu.h:465:
+	case 8: prev = *(u64 *)ptr;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#74: FILE: include/linux/percpu.h:475:
+static inline unsigned long this_cpu_cmpxchg_generic(volatile void *ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#75: FILE: include/linux/percpu.h:476:
+static inline unsigned long this_cpu_cmpxchg_generic(volatile void *ptr,
+		unsigned long old, unsigned long new, int size)

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#121: FILE: include/linux/percpu.h:666:
+# define __this_cpu_cmpxchg(pcp, old, new) __pcpu_size_call_return(__this_cpu_cmpxchg_, (old), (new))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#131: FILE: include/linux/percpu.h:784:
+static inline unsigned long irqsafe_cpu_cmpxchg_generic(volatile void *ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#132: FILE: include/linux/percpu.h:785:
+static inline unsigned long irqsafe_cpu_cmpxchg_generic(volatile void *ptr,
+		unsigned long old, unsigned long new, int size)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#144: FILE: include/linux/percpu.h:797:
+#  define irqsafe_cpu_cmpxchg_1(pcp, old, new) irqsafe_cpu_cmpxchg_generic(((pcp), (old), (new), 1)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#147: FILE: include/linux/percpu.h:800:
+#  define irqsafe_cpu_cmpxchg_2(pcp, old, new) irqsafe_cpu_cmpxchg_generic(((pcp), (old), (new), 2)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#150: FILE: include/linux/percpu.h:803:
+#  define irqsafe_cpu_cmpxchg_4(pcp, old, new) irqsafe_cpu_cmpxchg_generic(((pcp), (old), (new), 4)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#153: FILE: include/linux/percpu.h:806:
+#  define irqsafe_cpu_cmpxchg_8(pcp, old, new) irqsafe_cpu_cmpxchg_generic(((pcp), (old), (new), 8)

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#155: FILE: include/linux/percpu.h:808:
+# define irqsafe_cpu_cmpxchg(pcp, old, new) __pcpu_size_call_return(irqsafe_cpu_cmpxchg_, (old), (new))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000031957.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 6 warnings, 3 checks, 115 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000031957.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
