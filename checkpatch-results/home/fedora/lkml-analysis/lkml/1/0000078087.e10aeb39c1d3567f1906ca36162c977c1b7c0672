WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#48: 
        # kbuild trick to avoid linker error. Can be omitted if a module is built.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#788: FILE: tools/vm/page-types.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#807: FILE: tools/vm/page-types.c:20:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#867: FILE: tools/vm/page-types.c:80:
+	[KPF_UPTODATE]		= "U:uptodate",
 	              		     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#901: FILE: tools/vm/page-types.c:114:
+
+

CHECK:BIT_MACRO: Prefer using the BIT macro
#928: FILE: tools/vm/page-types.c:141:
+#define HASH_SIZE	(1 << HASH_SHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'flags' may be better as '(flags)' to avoid precedence issues
#930: FILE: tools/vm/page-types.c:143:
+#define HASH_KEY(flags)	(flags & HASH_MASK)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#934: FILE: tools/vm/page-types.c:147:
+static uint64_t ^Ipage_flags[HASH_SIZE];$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#936: FILE: tools/vm/page-types.c:149:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#963: FILE: tools/vm/page-types.c:176:
+
+

WARNING:TYPO_SPELLING: 'unkown' may be misspelled - perhaps 'unknown'?
#978: FILE: tools/vm/page-types.c:191:
+				fatal("unkown flag bit %d\n", i);
 				       ^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1006: FILE: tools/vm/page-types.c:219:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1024: FILE: tools/vm/page-types.c:237:
+		printf("%lu\t%lu\t%s\n",
+				index, count, page_flag_name(flags0));

WARNING:SPLIT_STRING: quoted string split across lines
#1041: FILE: tools/vm/page-types.c:254:
+	printf("             flags\tpage-count       MB"
+		"  symbolic-flags\t\t\tlong-symbolic-flags\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1046: FILE: tools/vm/page-types.c:259:
+			printf("0x%016llx\t%10lu %8lu  %s\t%s\n",
+				(unsigned long long)page_flags[i],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1054: FILE: tools/vm/page-types.c:267:
+	printf("             total\t%10lu %8lu\n",
+			total_pages, pages2mb(total_pages));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1057: FILE: tools/vm/page-types.c:270:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1110: FILE: tools/vm/page-types.c:323:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1213: FILE: tools/vm/page-types.c:426:
+
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1231: FILE: tools/vm/page-types.c:444:
+	printf(

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1236: FILE: tools/vm/page-types.c:449:
+#if 0 /* planned features */

WARNING:TYPO_SPELLING: 'summay' may be misspelled - perhaps 'summary'?
#1242: FILE: tools/vm/page-types.c:455:
+"            -N|--no-summary           Don't show summay info\n"
                                                   ^^^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'usage', this function's name, in a string
#1243: FILE: tools/vm/page-types.c:456:
+"            -h|--help                 Show this usage message\n"

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1262: FILE: tools/vm/page-types.c:475:
+		printf("%16s%s", page_flag_names[i] + 2,
+				 page_flag_type(1ULL << i));

WARNING:SPLIT_STRING: quoted string split across lines
#1269: FILE: tools/vm/page-types.c:482:
+	printf("\n                                   "
+		"(r) raw mode bits  (o) overloaded bits\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#1318: FILE: tools/vm/page-types.c:531:
+		if (p[1] == '\0')
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1320: FILE: tools/vm/page-types.c:533:
+		else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1325: FILE: tools/vm/page-types.c:538:
+					fatal("invalid range: %lu,%lu\n",
+							offset, size);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1410: FILE: tools/vm/page-types.c:623:
+
+

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1412: FILE: tools/vm/page-types.c:625:
+	{ "raw"       , 0, NULL, 'r' },
 	              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1413: FILE: tools/vm/page-types.c:626:
+	{ "pid"       , 1, NULL, 'p' },
 	              ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1414: FILE: tools/vm/page-types.c:627:
+	{ "file"      , 1, NULL, 'f' },
 	              ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1415: FILE: tools/vm/page-types.c:628:
+	{ "addr"      , 1, NULL, 'a' },
 	              ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1416: FILE: tools/vm/page-types.c:629:
+	{ "bits"      , 1, NULL, 'b' },
 	              ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1417: FILE: tools/vm/page-types.c:630:
+	{ "list"      , 0, NULL, 'l' },
 	              ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1418: FILE: tools/vm/page-types.c:631:
+	{ "list-each" , 0, NULL, 'L' },
 	              ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1420: FILE: tools/vm/page-types.c:633:
+	{ "help"      , 0, NULL, 'h' },
 	              ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1421: FILE: tools/vm/page-types.c:634:
+	{ NULL        , 0, NULL, 0 }
 	              ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078087.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 10 warnings, 19 checks, 714 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078087.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
