WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
Gitweb:     http://git.kernel.org/tip/caff2befffe899e63df5cc760b7ed01cfd902685

WARNING:TYPO_SPELLING: 'chello' may be misspelled - perhaps 'cello'?
#34: 
Author:     Peter Zijlstra <a.p.zijlstra@chello.nl>
                                         ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'suport' may be misspelled - perhaps 'support'?
#41: 
Implement simple suport Intel Last-Branch-Record, it supports all
                 ^^^^^^

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#183: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#188: FILE: arch/x86/kernel/cpu/perf_event_intel_lbr.c:1:
+#ifdef CONFIG_CPU_SUP_INTEL

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#202: FILE: arch/x86/kernel/cpu/perf_event_intel_lbr.c:15:
+#define X86_DEBUGCTL_LBR               ^I^I(1 << 0)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#202: FILE: arch/x86/kernel/cpu/perf_event_intel_lbr.c:15:
+#define X86_DEBUGCTL_LBR               		(1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#203: FILE: arch/x86/kernel/cpu/perf_event_intel_lbr.c:16:
+#define X86_DEBUGCTL_FREEZE_LBRS_ON_PMI		(1 << 11)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#281: FILE: arch/x86/kernel/cpu/perf_event_intel_lbr.c:94:
+	BUG_ON(cpuc->lbr_users < 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#335: FILE: arch/x86/kernel/cpu/perf_event_intel_lbr.c:148:
+#define LBR_FROM_FLAG_MISPRED  (1ULL << 63)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000002043.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 3 checks, 343 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000002043.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
