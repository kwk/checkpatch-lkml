WARNING:EMAIL_SUBJECT: A patch subject line should describe the change not the tool that found it
#19: 
Subject: [PATCH 16/20] percpu: update embedding first chunk allocator to handle sparse units

Naming the tool that found the issue is not very useful in the
subject line.  A good subject line summarizes the change that
the patch brings.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#81: FILE: include/linux/percpu.h:113:
+extern int __init pcpu_embed_first_chunk(size_t reserved_size, ssize_t dyn_size,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#82: FILE: include/linux/percpu.h:114:
+extern int __init pcpu_embed_first_chunk(size_t reserved_size, ssize_t dyn_size,
+				size_t atom_size,

WARNING:TYPO_SPELLING: 'funtion' may be misspelled - perhaps 'function'?
#100: FILE: mm/percpu.c:1753:
+ * @free_fn: funtion to free percpu page
              ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#180: FILE: mm/percpu.c:1810:
+		unsigned int cpu = NR_CPUS;

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#183: FILE: mm/percpu.c:1813:
+		for (i = 0; i < gi->nr_units && cpu == NR_CPUS; i++)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#185: FILE: mm/percpu.c:1815:
+		BUG_ON(cpu == NR_CPUS);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#185: FILE: mm/percpu.c:1815:
+		BUG_ON(cpu == NR_CPUS);

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#200: FILE: mm/percpu.c:1828:
+			if (gi->cpu_map[i] == NR_CPUS) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000094402.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 2 checks, 189 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000094402.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
