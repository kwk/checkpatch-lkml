WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#73: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#78: FILE: include/xen/interface/platform.h:1:
+/******************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: include/xen/interface/platform.h:41:
+    uint32_t secs;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#118: FILE: include/xen/interface/platform.h:41:
+    uint32_t secs;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: include/xen/interface/platform.h:42:
+    uint32_t nsecs;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#119: FILE: include/xen/interface/platform.h:42:
+    uint32_t nsecs;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: include/xen/interface/platform.h:43:
+    uint64_t system_time;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#120: FILE: include/xen/interface/platform.h:43:
+    uint64_t system_time;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#122: FILE: include/xen/interface/platform.h:45:
+};
+typedef struct xenpf_settime xenpf_settime_t;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NEW_TYPEDEFS: do not add new typedefs
#122: FILE: include/xen/interface/platform.h:45:
+typedef struct xenpf_settime xenpf_settime_t;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: include/xen/interface/platform.h:58:
+    unsigned long mfn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: include/xen/interface/platform.h:59:
+    uint64_t nr_mfns;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#136: FILE: include/xen/interface/platform.h:59:
+    uint64_t nr_mfns;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: include/xen/interface/platform.h:60:
+    uint32_t type;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#137: FILE: include/xen/interface/platform.h:60:
+    uint32_t type;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: include/xen/interface/platform.h:62:
+    uint32_t handle;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#139: FILE: include/xen/interface/platform.h:62:
+    uint32_t handle;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: include/xen/interface/platform.h:63:
+    uint32_t reg;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#140: FILE: include/xen/interface/platform.h:63:
+    uint32_t reg;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#142: FILE: include/xen/interface/platform.h:65:
+};
+typedef struct xenpf_add_memtype xenpf_add_memtype_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#142: FILE: include/xen/interface/platform.h:65:
+typedef struct xenpf_add_memtype xenpf_add_memtype_t;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: include/xen/interface/platform.h:78:
+    uint32_t handle;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#155: FILE: include/xen/interface/platform.h:78:
+    uint32_t handle;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: include/xen/interface/platform.h:79:
+    uint32_t reg;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#156: FILE: include/xen/interface/platform.h:79:
+    uint32_t reg;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#158: FILE: include/xen/interface/platform.h:81:
+};
+typedef struct xenpf_del_memtype xenpf_del_memtype_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#158: FILE: include/xen/interface/platform.h:81:
+typedef struct xenpf_del_memtype xenpf_del_memtype_t;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: include/xen/interface/platform.h:88:
+    uint32_t reg;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#165: FILE: include/xen/interface/platform.h:88:
+    uint32_t reg;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: include/xen/interface/platform.h:90:
+    unsigned long mfn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: include/xen/interface/platform.h:91:
+    uint64_t nr_mfns;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#168: FILE: include/xen/interface/platform.h:91:
+    uint64_t nr_mfns;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: include/xen/interface/platform.h:92:
+    uint32_t type;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#169: FILE: include/xen/interface/platform.h:92:
+    uint32_t type;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#171: FILE: include/xen/interface/platform.h:94:
+};
+typedef struct xenpf_read_memtype xenpf_read_memtype_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#171: FILE: include/xen/interface/platform.h:94:
+typedef struct xenpf_read_memtype xenpf_read_memtype_t;

CHECK:SPACING: No space is necessary after a cast
#177: FILE: include/xen/interface/platform.h:100:
+    GUEST_HANDLE(void) data;          /* Pointer to microcode data */

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: include/xen/interface/platform.h:100:
+    GUEST_HANDLE(void) data;          /* Pointer to microcode data */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: include/xen/interface/platform.h:101:
+    uint32_t length;                  /* Length of microcode data. */$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#178: FILE: include/xen/interface/platform.h:101:
+    uint32_t length;                  /* Length of microcode data. */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#180: FILE: include/xen/interface/platform.h:103:
+};
+typedef struct xenpf_microcode_update xenpf_microcode_update_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#180: FILE: include/xen/interface/platform.h:103:
+typedef struct xenpf_microcode_update xenpf_microcode_update_t;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: include/xen/interface/platform.h:112:
+    uint32_t quirk_id;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#189: FILE: include/xen/interface/platform.h:112:
+    uint32_t quirk_id;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#191: FILE: include/xen/interface/platform.h:114:
+};
+typedef struct xenpf_platform_quirk xenpf_platform_quirk_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#191: FILE: include/xen/interface/platform.h:114:
+typedef struct xenpf_platform_quirk xenpf_platform_quirk_t;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#200: FILE: include/xen/interface/platform.h:123:
+	uint32_t type;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#201: FILE: include/xen/interface/platform.h:124:
+	uint32_t index;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#206: FILE: include/xen/interface/platform.h:129:
+			uint8_t device;                   /* %dl: bios device number */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#207: FILE: include/xen/interface/platform.h:130:
+			uint8_t version;                  /* %ah: major version      */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#208: FILE: include/xen/interface/platform.h:131:
+			uint16_t interface_support;       /* %cx: support bitmap     */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#210: FILE: include/xen/interface/platform.h:133:
+			uint16_t legacy_max_cylinder;     /* %cl[7:6]:%ch: max cyl # */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#211: FILE: include/xen/interface/platform.h:134:
+			uint8_t legacy_max_head;          /* %dh: max head #         */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#212: FILE: include/xen/interface/platform.h:135:
+			uint8_t legacy_sectors_per_track; /* %cl[5:0]: max sector #  */

CHECK:SPACING: No space is necessary after a cast
#215: FILE: include/xen/interface/platform.h:138:
+			GUEST_HANDLE(void) edd_params;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#218: FILE: include/xen/interface/platform.h:141:
+			uint8_t device;                   /* bios device number  */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#219: FILE: include/xen/interface/platform.h:142:
+			uint32_t mbr_signature;           /* offset 0x1b8 in mbr */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#223: FILE: include/xen/interface/platform.h:146:
+			uint8_t capabilities;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#224: FILE: include/xen/interface/platform.h:147:
+			uint8_t edid_transfer_time;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#230: FILE: include/xen/interface/platform.h:153:
+};
+typedef struct xenpf_firmware_info xenpf_firmware_info_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#230: FILE: include/xen/interface/platform.h:153:
+typedef struct xenpf_firmware_info xenpf_firmware_info_t;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#236: FILE: include/xen/interface/platform.h:159:
+	uint16_t pm1a_cnt_val;      /* PM1a control value. */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#237: FILE: include/xen/interface/platform.h:160:
+	uint16_t pm1b_cnt_val;      /* PM1b control value. */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#238: FILE: include/xen/interface/platform.h:161:
+	uint32_t sleep_state;       /* Which state to enter (Sn). */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#239: FILE: include/xen/interface/platform.h:162:
+	uint32_t flags;             /* Must be zero. */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#241: FILE: include/xen/interface/platform.h:164:
+};
+typedef struct xenpf_enter_acpi_sleep xenpf_enter_acpi_sleep_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#241: FILE: include/xen/interface/platform.h:164:
+typedef struct xenpf_enter_acpi_sleep xenpf_enter_acpi_sleep_t;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#247: FILE: include/xen/interface/platform.h:170:
+	uint32_t flags; /* Must be zero. */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#248: FILE: include/xen/interface/platform.h:171:
+	uint32_t cpu;   /* Physical cpu. */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#249: FILE: include/xen/interface/platform.h:172:
+	uint64_t freq;  /* New frequency (Hz). */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#251: FILE: include/xen/interface/platform.h:174:
+};
+typedef struct xenpf_change_freq xenpf_change_freq_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#251: FILE: include/xen/interface/platform.h:174:
+typedef struct xenpf_change_freq xenpf_change_freq_t;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#269: FILE: include/xen/interface/platform.h:192:
+	uint32_t cpumap_nr_cpus;

CHECK:SPACING: No space is necessary after a cast
#271: FILE: include/xen/interface/platform.h:194:
+	GUEST_HANDLE(uint64_t) idletime;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#274: FILE: include/xen/interface/platform.h:197:
+	uint64_t now;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#276: FILE: include/xen/interface/platform.h:199:
+};
+typedef struct xenpf_getidletime xenpf_getidletime_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#276: FILE: include/xen/interface/platform.h:199:
+typedef struct xenpf_getidletime xenpf_getidletime_t;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#280: FILE: include/xen/interface/platform.h:203:
+	uint32_t cmd;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#281: FILE: include/xen/interface/platform.h:204:
+	uint32_t interface_version; /* XENPF_INTERFACE_VERSION */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#293: FILE: include/xen/interface/platform.h:216:
+		uint8_t                        pad[128];

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#296: FILE: include/xen/interface/platform.h:219:
+};
+typedef struct xen_platform_op xen_platform_op_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#296: FILE: include/xen/interface/platform.h:219:
+typedef struct xen_platform_op xen_platform_op_t;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000125793.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 30 warnings, 52 checks, 250 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000125793.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
