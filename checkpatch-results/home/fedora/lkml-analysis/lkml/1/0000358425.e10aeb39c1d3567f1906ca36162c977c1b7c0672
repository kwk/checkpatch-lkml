CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#70: FILE: include/linux/marker.h:66:
 		__attribute__((section("__markers_strings")))		\
+		= #name "\0" format;					\

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Shdr>
#149: FILE: scripts/mod/modpost.c:1258:
+	const Elf_Shdr *sh = &info->sechdrs[info->markers_strings_sec];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: No space is necessary after a cast
#150: FILE: scripts/mod/modpost.c:1259:
+	const char *strings = (const char *) info->hdr + sh->sh_offset;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Sym>
#151: FILE: scripts/mod/modpost.c:1260:
+	const Elf_Sym *sym, *first_sym, *last_sym;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#163: FILE: scripts/mod/modpost.c:1272:
+	first_sym = last_sym = NULL;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!first_sym"
#170: FILE: scripts/mod/modpost.c:1279:
+			if (first_sym == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SIZEOF_PARENTHESIS: sizeof mod->markers[0] should be sizeof(mod->markers[0])
#185: FILE: scripts/mod/modpost.c:1294:
+	mod->markers = NOFAIL(malloc(sizeof mod->markers[0] * n));

WARNING:LINE_SPACING: Missing a blank line after declarations
#197: FILE: scripts/mod/modpost.c:1306:
+			char *line = NULL;
+			asprintf(&line, "%s\t%s\t%s\n", name, mod->name, fmt);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#222: FILE: scripts/mod/modpost.c:1717:
+	char *line = NULL;
+	asprintf(&line, "%s\t%s\t%s\n", name, mod->name, fmt);

WARNING:SIZEOF_PARENTHESIS: sizeof mod->markers[0] should be sizeof(mod->markers[0])
#226: FILE: scripts/mod/modpost.c:1721:
+						     sizeof mod->markers[0])));

CHECK:SPACING: No space is necessary after a cast
#272: FILE: scripts/mod/modpost.c:1767:
+	return strcmp(*(const char **) a, *(const char **) b);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "mod->markers"
#282: FILE: scripts/mod/modpost.c:1777:
+		if ((!external_module || !mod->skip) && mod->markers != NULL) {

WARNING:SIZEOF_PARENTHESIS: sizeof mod->markers[0] should be sizeof(mod->markers[0])
#288: FILE: scripts/mod/modpost.c:1783:
+			      sizeof mod->markers[0], &compare_strings);

WARNING:LINE_SPACING: Missing a blank line after declarations
#291: FILE: scripts/mod/modpost.c:1786:
+				char *line = mod->markers[i];
+				buf_write(&buf, line, strlen(line));

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Section>
#364: FILE: scripts/mod/modpost.h:129:
+	Elf_Section  markers_strings_sec;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000358425.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 9 checks, 282 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000358425.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
