WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#65: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#70: FILE: drivers/regulator/wm831x-ldo.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#275: FILE: drivers/regulator/wm831x-ldo.c:206:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#354: FILE: drivers/regulator/wm831x-ldo.c:285:
+
+

WARNING:CONST_STRUCT: struct regulator_ops should normally be const
#355: FILE: drivers/regulator/wm831x-ldo.c:286:
+static struct regulator_ops wm831x_gp_ldo_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#370: FILE: drivers/regulator/wm831x-ldo.c:301:
+static __devinit int wm831x_gp_ldo_probe(struct platform_device *pdev)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pdata"
#381: FILE: drivers/regulator/wm831x-ldo.c:312:
+	if (pdata == NULL || pdata->ldo[id] == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pdata->ldo[id]"
#381: FILE: drivers/regulator/wm831x-ldo.c:312:
+	if (pdata == NULL || pdata->ldo[id] == NULL)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ldo)...) over kzalloc(sizeof(struct wm831x_ldo)...)
#384: FILE: drivers/regulator/wm831x-ldo.c:315:
+	ldo = kzalloc(sizeof(struct wm831x_ldo), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ldo"
#385: FILE: drivers/regulator/wm831x-ldo.c:316:
+	if (ldo == NULL) {

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#386: FILE: drivers/regulator/wm831x-ldo.c:317:
+	if (ldo == NULL) {
+		dev_err(&pdev->dev, "Unable to allocate private data\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!res"
#393: FILE: drivers/regulator/wm831x-ldo.c:324:
+	if (res == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#409: FILE: drivers/regulator/wm831x-ldo.c:340:
+	ldo->regulator = regulator_register(&ldo->desc, &pdev->dev,
+					     pdata->ldo[id], ldo);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#438: FILE: drivers/regulator/wm831x-ldo.c:369:
+static __devexit int wm831x_gp_ldo_remove(struct platform_device *pdev)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#462: FILE: drivers/regulator/wm831x-ldo.c:393:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#467: FILE: drivers/regulator/wm831x-ldo.c:398:
+static int wm831x_aldo_list_voltage(struct regulator_dev *rdev,
+				      unsigned int selector)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#480: FILE: drivers/regulator/wm831x-ldo.c:411:
+static int wm831x_aldo_set_voltage_int(struct regulator_dev *rdev, int reg,
+					 int min_uV, int max_uV)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#504: FILE: drivers/regulator/wm831x-ldo.c:435:
+static int wm831x_aldo_set_voltage(struct regulator_dev *rdev,
+				     int min_uV, int max_uV)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#513: FILE: drivers/regulator/wm831x-ldo.c:444:
+static int wm831x_aldo_set_suspend_voltage(struct regulator_dev *rdev,
+					     int uV)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#555: FILE: drivers/regulator/wm831x-ldo.c:486:
+static int wm831x_aldo_set_mode(struct regulator_dev *rdev,
+				  unsigned int mode)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#563: FILE: drivers/regulator/wm831x-ldo.c:494:
+
+

WARNING:CONST_STRUCT: struct regulator_ops should normally be const
#613: FILE: drivers/regulator/wm831x-ldo.c:544:
+static struct regulator_ops wm831x_aldo_ops = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#627: FILE: drivers/regulator/wm831x-ldo.c:558:
+static __devinit int wm831x_aldo_probe(struct platform_device *pdev)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pdata"
#638: FILE: drivers/regulator/wm831x-ldo.c:569:
+	if (pdata == NULL || pdata->ldo[id] == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pdata->ldo[id]"
#638: FILE: drivers/regulator/wm831x-ldo.c:569:
+	if (pdata == NULL || pdata->ldo[id] == NULL)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ldo)...) over kzalloc(sizeof(struct wm831x_ldo)...)
#641: FILE: drivers/regulator/wm831x-ldo.c:572:
+	ldo = kzalloc(sizeof(struct wm831x_ldo), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ldo"
#642: FILE: drivers/regulator/wm831x-ldo.c:573:
+	if (ldo == NULL) {

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#643: FILE: drivers/regulator/wm831x-ldo.c:574:
+	if (ldo == NULL) {
+		dev_err(&pdev->dev, "Unable to allocate private data\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!res"
#650: FILE: drivers/regulator/wm831x-ldo.c:581:
+	if (res == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#666: FILE: drivers/regulator/wm831x-ldo.c:597:
+	ldo->regulator = regulator_register(&ldo->desc, &pdev->dev,
+					     pdata->ldo[id], ldo);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#695: FILE: drivers/regulator/wm831x-ldo.c:626:
+static __devexit int wm831x_aldo_remove(struct platform_device *pdev)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#722: FILE: drivers/regulator/wm831x-ldo.c:653:
+static int wm831x_alive_ldo_list_voltage(struct regulator_dev *rdev,
+				      unsigned int selector)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#750: FILE: drivers/regulator/wm831x-ldo.c:681:
+static int wm831x_alive_ldo_set_voltage(struct regulator_dev *rdev,
+				     int min_uV, int max_uV)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#759: FILE: drivers/regulator/wm831x-ldo.c:690:
+static int wm831x_alive_ldo_set_suspend_voltage(struct regulator_dev *rdev,
+					     int uV)

WARNING:CONST_STRUCT: struct regulator_ops should normally be const
#800: FILE: drivers/regulator/wm831x-ldo.c:731:
+static struct regulator_ops wm831x_alive_ldo_ops = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#812: FILE: drivers/regulator/wm831x-ldo.c:743:
+static __devinit int wm831x_alive_ldo_probe(struct platform_device *pdev)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pdata"
#823: FILE: drivers/regulator/wm831x-ldo.c:754:
+	if (pdata == NULL || pdata->ldo[id] == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pdata->ldo[id]"
#823: FILE: drivers/regulator/wm831x-ldo.c:754:
+	if (pdata == NULL || pdata->ldo[id] == NULL)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ldo)...) over kzalloc(sizeof(struct wm831x_ldo)...)
#826: FILE: drivers/regulator/wm831x-ldo.c:757:
+	ldo = kzalloc(sizeof(struct wm831x_ldo), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ldo"
#827: FILE: drivers/regulator/wm831x-ldo.c:758:
+	if (ldo == NULL) {

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#828: FILE: drivers/regulator/wm831x-ldo.c:759:
+	if (ldo == NULL) {
+		dev_err(&pdev->dev, "Unable to allocate private data\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!res"
#835: FILE: drivers/regulator/wm831x-ldo.c:766:
+	if (res == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#851: FILE: drivers/regulator/wm831x-ldo.c:782:
+	ldo->regulator = regulator_register(&ldo->desc, &pdev->dev,
+					     pdata->ldo[id], ldo);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#868: FILE: drivers/regulator/wm831x-ldo.c:799:
+static __devexit int wm831x_alive_ldo_remove(struct platform_device *pdev)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000091672.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 14 warnings, 30 checks, 1497 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000091672.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
