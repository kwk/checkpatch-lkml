WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#46: FILE: fs/logfs/segment.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#47: FILE: fs/logfs/segment.c:2:
+ * fs/logfs/segment.c	- Handling the Object Store

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#73: FILE: fs/logfs/segment.c:28:
+static s32 __logfs_get_free_bytes(struct logfs_area *area, u64 ino, u64 pos,
+		size_t bytes)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#79: FILE: fs/logfs/segment.c:34:
+	BUG_ON(ret>0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#79: FILE: fs/logfs/segment.c:34:
+	BUG_ON(ret>0);
 	          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#85: FILE: fs/logfs/segment.c:40:
+	BUG_ON(area->a_used_bytes >= logfs_super(area->a_sb)->s_segsize);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#113: FILE: fs/logfs/segment.c:68:
+	BUG_ON(li->li_used_bytes + bytes < bytes);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#125: FILE: fs/logfs/segment.c:80:
+	BUG_ON(li->li_used_bytes < bytes);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#180: FILE: fs/logfs/segment.c:135:
+	BUG_ON(level >= LOGFS_MAX_LEVELS);

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#183: FILE: fs/logfs/segment.c:138:
+		/* ifile has seperate areas */
 		             ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: fs/logfs/segment.c:150:
+static s64 __logfs_segment_write(struct inode *inode, void *buf, u64 pos,
+		int level, int alloc, int len, int compr)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#219: FILE: fs/logfs/segment.c:174:
+	BUG_ON(err);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#223: FILE: fs/logfs/segment.c:178:
+		int acc_len = (level==0) ? len : sb->s_blocksize;
 		                    ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#224: FILE: fs/logfs/segment.c:179:
+		int acc_len = (level==0) ? len : sb->s_blocksize;
+		logfs_consume_bytes(inode, acc_len + LOGFS_HEADERSIZE);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#234: FILE: fs/logfs/segment.c:189:
+s64 logfs_segment_write(struct inode *inode, void *buf, u64 pos, int level,
+		int alloc)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#251: FILE: fs/logfs/segment.c:206:
+		ofs = __logfs_segment_write(inode, compressor_buf, pos, level,
+				alloc, compr_len, COMPR_ZLIB);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#254: FILE: fs/logfs/segment.c:209:
+		ofs = __logfs_segment_write(inode, buf, pos, level, alloc, bs,
+				COMPR_NONE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#262: FILE: fs/logfs/segment.c:217:
+static void fixup_from_wbuf(struct super_block *sb, struct logfs_area *area,
+		void *read, u64 ofs, size_t readlen)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#303: FILE: fs/logfs/segment.c:258:
+	for (i=0; i<LOGFS_NO_AREAS; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#303: FILE: fs/logfs/segment.c:258:
+	for (i=0; i<LOGFS_NO_AREAS; i++) {
 	           ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#323: FILE: fs/logfs/segment.c:278:
+	h = (void*)compressor_buf;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#332: FILE: fs/logfs/segment.c:287:
+		err = logfs_uncompress(compressor_buf + LOGFS_HEADERSIZE, buf,
+				len, bs);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#333: FILE: fs/logfs/segment.c:288:
+		BUG_ON(err);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#345: FILE: fs/logfs/segment.c:300:
+	~(I1_BLOCKS-1),
 	           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#346: FILE: fs/logfs/segment.c:301:
+	~(I2_BLOCKS-1),
 	           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#347: FILE: fs/logfs/segment.c:302:
+	~(I3_BLOCKS-1)
 	           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#357: FILE: fs/logfs/segment.c:312:
+	LOGFS_BUG_ON(	(pos1 & logfs_block_mask[level]) !=

CHECK:LINE_SPACING: Please don't use multiple blank lines
#368: FILE: fs/logfs/segment.c:323:
+
+

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#372: FILE: fs/logfs/segment.c:327:
+	h = (void*)compressor_buf;

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#378: FILE: fs/logfs/segment.c:333:
+	len = (level==0) ? len : sb->s_blocksize;
 	            ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#419: FILE: fs/logfs/segment.c:374:
+	BUG_ON(list_empty(&super->s_free_list));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#434: FILE: fs/logfs/segment.c:389:
+	BUG_ON(err);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*super->s_journal_area)...) over kzalloc(sizeof(struct logfs_area)...)
#543: FILE: fs/logfs/segment.c:498:
+	super->s_journal_area = kzalloc(sizeof(struct logfs_area), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#548: FILE: fs/logfs/segment.c:503:
+	for (i=0; i<LOGFS_NO_AREAS; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#548: FILE: fs/logfs/segment.c:503:
+	for (i=0; i<LOGFS_NO_AREAS; i++) {
 	           ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#556: FILE: fs/logfs/segment.c:511:
+	for (i--; i>=0; i--)
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#566: FILE: fs/logfs/segment.c:521:
+	for (i=0; i<LOGFS_NO_AREAS; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#566: FILE: fs/logfs/segment.c:521:
+	for (i=0; i<LOGFS_NO_AREAS; i++)
 	           ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000423171.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 13 errors, 14 warnings, 12 checks, 524 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000423171.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
