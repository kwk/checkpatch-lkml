WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#139: FILE: arch/x86/mm/restart.c:276:
+		info.useable = desc.avl;
 		     ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: No space is necessary after a cast
#143: FILE: arch/x86/mm/restart.c:280:
+		ret = sys_modify_ldt(1, (struct user_desc __user *) &info,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#174: FILE: checkpoint/checkpoint_arch.h:12:
+extern int cr_read_mm_context(struct cr_ctx *ctx,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#271: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#276: FILE: checkpoint/rstr_mem.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: No space is necessary after a cast
#421: FILE: checkpoint/rstr_mem.c:146:
+		pr_debug("nr_pages %ld\n", (unsigned long) hh->nr_pages);

CHECK:BRACES: braces {} should be used on all arms of this statement
#493: FILE: checkpoint/rstr_mem.c:218:
+	if (parent < 0) {
[...]
+	} else if (parent != 0)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#499: FILE: checkpoint/rstr_mem.c:224:
+	pr_debug("vma %#lx-%#lx type %d\n", (unsigned long) hh->vm_start,

CHECK:SPACING: No space is necessary after a cast
#500: FILE: checkpoint/rstr_mem.c:225:
+		 (unsigned long) hh->vm_end, (int) hh->vma_type);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#512: FILE: checkpoint/rstr_mem.c:237:
+	switch (hh->vma_type) {
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#539: FILE: checkpoint/rstr_mem.c:264:
+
+	}

CHECK:SPACING: No space is necessary after a cast
#554: FILE: checkpoint/rstr_mem.c:279:
+	if (IS_ERR((void *) addr))

CHECK:SPACING: No space is necessary after a cast
#555: FILE: checkpoint/rstr_mem.c:280:
+		return PTR_ERR((void *) addr);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#591: FILE: checkpoint/rstr_mem.c:316:
+		ret = do_munmap(mm, vma->vm_start, vma->vm_end-vma->vm_start);
 		                                              ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#613: FILE: checkpoint/rstr_mem.c:338:
+#if 0	/* activate when containers are used */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#667: FILE: include/linux/checkpoint.h:62:
+extern int cr_read_fname(struct cr_ctx *ctx, char *fname, int n);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#668: FILE: include/linux/checkpoint.h:63:
+extern struct file *cr_read_open_fname(struct cr_ctx *ctx,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000189376.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 13 checks, 555 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000189376.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
