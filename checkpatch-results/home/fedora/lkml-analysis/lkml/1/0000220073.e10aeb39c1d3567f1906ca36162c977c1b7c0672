WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
This patch introduces two new files named hw_breakpoint.[ch] inside x86 specific

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#50: FILE: arch/x86/kernel/hw_breakpoint.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#62: FILE: arch/x86/kernel/hw_breakpoint.c:13:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#63: FILE: arch/x86/kernel/hw_breakpoint.c:14:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#89: FILE: arch/x86/kernel/hw_breakpoint.c:40:
+#include <asm/processor.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#126: FILE: arch/x86/kernel/hw_breakpoint.c:77:
+static void arch_update_thbi(struct thread_hw_breakpoint *thbi,
+		struct kernel_bp_data *thr_kbpdata)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#179: FILE: arch/x86/kernel/hw_breakpoint.c:130:
+static void arch_store_thread_bp_array(struct thread_hw_breakpoint *thbi,
+		struct hw_breakpoint *bp, int i)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#184: FILE: arch/x86/kernel/hw_breakpoint.c:135:
+int pre_handler_allowed(unsigned type)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#192: FILE: arch/x86/kernel/hw_breakpoint.c:143:
+int post_handler_allowed(unsigned type)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#202: FILE: arch/x86/kernel/hw_breakpoint.c:153:
+static void arch_store_info(struct hw_breakpoint *bp,
+		unsigned long address, unsigned len, unsigned type)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#202: FILE: arch/x86/kernel/hw_breakpoint.c:153:
+		unsigned long address, unsigned len, unsigned type)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#202: FILE: arch/x86/kernel/hw_breakpoint.c:153:
+		unsigned long address, unsigned len, unsigned type)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#213: FILE: arch/x86/kernel/hw_breakpoint.c:164:
+static int arch_validate_hwbkpt_settings(struct hw_breakpoint *bp,
+			unsigned long address, unsigned len, unsigned int type,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#213: FILE: arch/x86/kernel/hw_breakpoint.c:164:
+			unsigned long address, unsigned len, unsigned int type,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bp->pre_handler'
#247: FILE: arch/x86/kernel/hw_breakpoint.c:198:
+	if ((pre_handler_allowed(type) && (bp->pre_handler)) ||
+		(post_handler_allowed(type) && (bp->post_handler))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bp->post_handler'
#247: FILE: arch/x86/kernel/hw_breakpoint.c:198:
+	if ((pre_handler_allowed(type) && (bp->pre_handler)) ||
+		(post_handler_allowed(type) && (bp->post_handler))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#248: FILE: arch/x86/kernel/hw_breakpoint.c:199:
+	if ((pre_handler_allowed(type) && (bp->pre_handler)) ||
+		(post_handler_allowed(type) && (bp->post_handler))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#259: FILE: arch/x86/kernel/hw_breakpoint.c:210:
+static int arch_check_va_in_userspace(unsigned long va,
+		struct task_struct *tsk)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#282: FILE: arch/x86/kernel/hw_breakpoint.c:233:
+static unsigned long encode_dr7(int drnum, unsigned len, unsigned type)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#282: FILE: arch/x86/kernel/hw_breakpoint.c:233:
+static unsigned long encode_dr7(int drnum, unsigned len, unsigned type)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#322: FILE: arch/x86/kernel/hw_breakpoint.c:273:
+	list_for_each_entry(bp, bp_list, node) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#339: FILE: arch/x86/kernel/hw_breakpoint.c:290:
+static void arch_register_user_hw_breakpoint(struct hw_breakpoint *bp,
+		struct thread_hw_breakpoint *thbi)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#356: FILE: arch/x86/kernel/hw_breakpoint.c:307:
+static void arch_unregister_user_hw_breakpoint(struct hw_breakpoint *bp,
+		struct thread_hw_breakpoint *thbi)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#364: FILE: arch/x86/kernel/hw_breakpoint.c:315:
+static void arch_register_kernel_hw_breakpoint(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#373: FILE: arch/x86/kernel/hw_breakpoint.c:324:
+static void arch_unregister_kernel_hw_breakpoint(

CHECK:LINE_SPACING: Please don't use multiple blank lines
#379: FILE: arch/x86/kernel/hw_breakpoint.c:330:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#382: FILE: arch/x86/kernel/hw_breakpoint.c:333:
+
+

WARNING:SIZEOF_PARENTHESIS: sizeof u_debugreg should be sizeof(u_debugreg)
#393: FILE: arch/x86/kernel/hw_breakpoint.c:344:
+	memset(u_debugreg, 0, sizeof u_debugreg);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#406: FILE: arch/x86/kernel/hw_breakpoint.c:357:
+static struct thread_hw_breakpoint *alloc_thread_hw_breakpoint(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#409: FILE: arch/x86/kernel/hw_breakpoint.c:360:
+static int __register_user_hw_breakpoint(struct task_struct *tsk,
+		struct hw_breakpoint *bp,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#410: FILE: arch/x86/kernel/hw_breakpoint.c:361:
+		unsigned long address, unsigned len, unsigned type);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#410: FILE: arch/x86/kernel/hw_breakpoint.c:361:
+		unsigned long address, unsigned len, unsigned type);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#412: FILE: arch/x86/kernel/hw_breakpoint.c:363:
+static void __unregister_user_hw_breakpoint(struct task_struct *tsk,
+		struct hw_breakpoint *bp);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#456: FILE: arch/x86/kernel/hw_breakpoint.c:407:
+static int decode_dr7(unsigned long dr7, int bpnum, unsigned *len,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#457: FILE: arch/x86/kernel/hw_breakpoint.c:408:
+static int decode_dr7(unsigned long dr7, int bpnum, unsigned *len,
+		unsigned *type)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#457: FILE: arch/x86/kernel/hw_breakpoint.c:408:
+		unsigned *type)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#470: FILE: arch/x86/kernel/hw_breakpoint.c:421:
+static int ptrace_write_dr7(struct task_struct *tsk,
+		struct thread_hw_breakpoint *thbi, unsigned long data)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#487: FILE: arch/x86/kernel/hw_breakpoint.c:438:
+		unsigned len, type;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#509: FILE: arch/x86/kernel/hw_breakpoint.c:460:
+			if (rc == 0 && __register_user_hw_breakpoint(tsk, bp,
+					bp->info.address, len, type) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#549: FILE: arch/x86/kernel/hw_breakpoint.c:500:
+	else if ((thbi = alloc_thread_hw_breakpoint(tsk)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#565: FILE: arch/x86/kernel/hw_breakpoint.c:516:
+			rc = __register_user_hw_breakpoint(tsk, bp,
+					val, bp->info.len, bp->info.type);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#568: FILE: arch/x86/kernel/hw_breakpoint.c:519:
+				__register_user_hw_breakpoint(tsk, bp,
+						old_addr,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#585: FILE: arch/x86/kernel/hw_breakpoint.c:536:
+
+

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#618: FILE: arch/x86/kernel/hw_breakpoint.c:569:
+	if ((!(DR6 & (DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3))) &&
 	                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#618: FILE: arch/x86/kernel/hw_breakpoint.c:569:
+	if ((!(DR6 & (DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3))) &&
 	                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#618: FILE: arch/x86/kernel/hw_breakpoint.c:569:
+	if ((!(DR6 & (DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3))) &&
 	                                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#619: FILE: arch/x86/kernel/hw_breakpoint.c:570:
+	if ((!(DR6 & (DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3))) &&
+						(DR6 & DR_STEP)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (last_hit_bp->post_handler)
#622: FILE: arch/x86/kernel/hw_breakpoint.c:573:
+		(last_hit_bp->post_handler)(last_hit_bp, args->regs);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#627: FILE: arch/x86/kernel/hw_breakpoint.c:578:
+		current->thread.vdr6 &= ~(DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3);
 		                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#627: FILE: arch/x86/kernel/hw_breakpoint.c:578:
+		current->thread.vdr6 &= ~(DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3);
 		                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#627: FILE: arch/x86/kernel/hw_breakpoint.c:578:
+		current->thread.vdr6 &= ~(DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3);
 		                                                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#636: FILE: arch/x86/kernel/hw_breakpoint.c:587:
+	current->thread.vdr6 &= ~(DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3);
 	                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#636: FILE: arch/x86/kernel/hw_breakpoint.c:587:
+	current->thread.vdr6 &= ~(DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3);
 	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#636: FILE: arch/x86/kernel/hw_breakpoint.c:587:
+	current->thread.vdr6 &= ~(DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3);
 	                                                    ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#639: FILE: arch/x86/kernel/hw_breakpoint.c:590:
+	if (!chbi->bp_task)
[...]
+	else if (chbi->bp_task != current) {
[...]
+	} else {
[...]

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#642: FILE: arch/x86/kernel/hw_breakpoint.c:593:
+	else if (chbi->bp_task != current) {
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (bp->pre_handler)
#671: FILE: arch/x86/kernel/hw_breakpoint.c:622:
+					(bp->pre_handler)(bp, args->regs);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (bp->post_handler)
#685: FILE: arch/x86/kernel/hw_breakpoint.c:636:
+					(bp->post_handler)(bp, args->regs);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#696: FILE: arch/x86/kernel/hw_breakpoint.c:647:
+	if (!(DR6 & ~(DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3)))
 	                      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#696: FILE: arch/x86/kernel/hw_breakpoint.c:647:
+	if (!(DR6 & ~(DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3)))
 	                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#696: FILE: arch/x86/kernel/hw_breakpoint.c:647:
+	if (!(DR6 & ~(DR_TRAP0|DR_TRAP1|DR_TRAP2|DR_TRAP3)))
 	                                        ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#706: FILE: arch/x86/kernel/hw_breakpoint.c:657:
+static int __kprobes hw_breakpoint_exceptions_notify(

CHECK:LINE_SPACING: Please don't use multiple blank lines
#730: FILE: arch/x86/kernel/hw_breakpoint.c:681:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#739: FILE: include/asm-x86/hw_breakpoint.h:1:
+#ifndef	_I386_HW_BREAKPOINT_H

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#749: FILE: include/asm-x86/hw_breakpoint.h:11:
+} __attribute__((packed));

CHECK:SPACING: No space is necessary after a cast
#756: FILE: include/asm-x86/hw_breakpoint.h:18:
+	return (const void *) bp->info.address;

CHECK:SPACING: No space is necessary after a cast
#762: FILE: include/asm-x86/hw_breakpoint.h:24:
+	return (const void __user *) bp->info.address;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#765: FILE: include/asm-x86/hw_breakpoint.h:27:
+static inline unsigned hw_breakpoint_get_len(struct hw_breakpoint *bp)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#770: FILE: include/asm-x86/hw_breakpoint.h:32:
+static inline unsigned hw_breakpoint_get_type(struct hw_breakpoint *bp)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#791: FILE: include/asm-x86/hw_breakpoint.h:53:
+struct thread_hw_breakpoint {
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#798: FILE: include/asm-x86/hw_breakpoint.h:60:
+	unsigned		gennum;		/* update-generation number */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#807: FILE: include/asm-x86/hw_breakpoint.h:69:
+	struct hw_breakpoint	vdr_bps[HB_NUM];	/* Breakpoints
+			representing virtualized debug registers 0 - 3 */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#807: FILE: include/asm-x86/hw_breakpoint.h:69:
+			representing virtualized debug registers 0 - 3 */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#814: FILE: include/asm-x86/hw_breakpoint.h:76:
+	unsigned		gennum;		/* Generation number */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#826: FILE: include/asm-x86/hw_breakpoint.h:88:
+	struct task_struct	*bp_task;	/* The thread whose bps
+			are currently loaded in the debug registers */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#826: FILE: include/asm-x86/hw_breakpoint.h:88:
+			are currently loaded in the debug registers */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000220073.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 25 warnings, 48 checks, 813 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000220073.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
