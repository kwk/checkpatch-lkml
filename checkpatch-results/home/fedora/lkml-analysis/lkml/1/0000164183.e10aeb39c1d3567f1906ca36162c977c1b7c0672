CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#91: FILE: include/linux/kernel.h:181:
+extern int esprintf(const struct sprintf_type *types, char *buf,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(3, 4) over __attribute__((format(printf, 3, 4)))
#93: FILE: include/linux/kernel.h:183:
+	__attribute__ ((format (printf, 3, 4)));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#96: FILE: include/linux/kernel.h:186:
+extern int evsprintf(const struct sprintf_type *types, char *buf,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#96: FILE: include/linux/kernel.h:186:
+extern int evsprintf(const struct sprintf_type *types, char *buf,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(3, 0) over __attribute__((format(printf, 3, 0)))
#98: FILE: include/linux/kernel.h:188:
+	__attribute__ ((format (printf, 3, 0)));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#101: FILE: include/linux/kernel.h:191:
+extern int esnprintf(const struct sprintf_type *types, char *buf,

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(4, 5) over __attribute__((format(printf, 4, 5)))
#103: FILE: include/linux/kernel.h:193:
+	__attribute__ ((format (printf, 4, 5)));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#106: FILE: include/linux/kernel.h:196:
+extern int evsnprintf(const struct sprintf_type *types, char *buf,

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(4, 0) over __attribute__((format(printf, 4, 0)))
#108: FILE: include/linux/kernel.h:198:
+	__attribute__ ((format (printf, 4, 0)));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#111: FILE: include/linux/kernel.h:201:
+extern int escnprintf(const struct sprintf_type *types, char *buf,

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(4, 5) over __attribute__((format(printf, 4, 5)))
#113: FILE: include/linux/kernel.h:203:
+	__attribute__ ((format (printf, 4, 5)));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#116: FILE: include/linux/kernel.h:206:
+extern int evscnprintf(const struct sprintf_type *types, char *buf,

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(4, 0) over __attribute__((format(printf, 4, 0)))
#118: FILE: include/linux/kernel.h:208:
+	__attribute__ ((format (printf, 4, 0)));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#121: FILE: include/linux/kernel.h:211:
+extern char *keasprintf(const struct sprintf_type *types, gfp_t gfp,

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(3, 4) over __attribute__((format(printf, 3, 4)))
#123: FILE: include/linux/kernel.h:213:
+	__attribute__ ((format (printf, 3, 4)));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#125: FILE: include/linux/kernel.h:215:
+extern char *kevasprintf(const struct sprintf_type *types, gfp_t gfp,

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(2, 0) over __attribute__((format(printf, 2, 0)))
#136: FILE: include/linux/kernel.h:262:
+	__attribute__ ((format (printf, 2, 0)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(2, 3) over __attribute__((format(printf, 2, 3)))
#139: FILE: include/linux/kernel.h:265:
+	__attribute__ ((format (printf, 2, 3))) __cold;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(2, 0) over __attribute__((format(printf, 2, 0)))
#149: FILE: include/linux/kernel.h:285:
+	__attribute__ ((format (printf, 2, 0)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(2, 3) over __attribute__((format(printf, 2, 3)))
#152: FILE: include/linux/kernel.h:288:
+	__attribute__ ((format (printf, 2, 3)));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#159: FILE: include/linux/sprintf_type.h:1:
+#ifndef _SPRINTF_TYPE_H_

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#250: FILE: lib/kasprintf.c:28:
+	evsnprintf(types, p, len+1, fmt, ap);
 	                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#292: FILE: lib/vsprintf.c:649:
+	const struct sprintf_type *type;
+	if (!*fmt)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000164183.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 14 warnings, 9 checks, 405 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000164183.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
