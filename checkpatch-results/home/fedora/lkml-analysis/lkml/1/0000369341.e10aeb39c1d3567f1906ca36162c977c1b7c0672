WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#57: 
> >  security/commoncap.c       |   37 +++++++++++++++++++++++++++++--------

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: fs/proc/array.c:291:
+    return buffer + sprintf(buffer, "CapInh:\t%016lx\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: include/linux/capability.h:40:
+        __u64 effective;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: include/linux/capability.h:40:
+        __u64 effective;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: include/linux/capability.h:41:
+        __u64 permitted;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: include/linux/capability.h:41:
+        __u64 permitted;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: include/linux/capability.h:42:
+        __u64 inheritable;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: include/linux/capability.h:42:
+        __u64 inheritable;$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#239: FILE: include/linux/capability.h:48:
+#define XATTR_CAPS_SZ_1 (3*sizeof(__le32))
                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#240: FILE: include/linux/capability.h:49:
+#define XATTR_CAPS_SZ_2 (2*sizeof(__le64) + sizeof(__le32))
                           ^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#265: FILE: include/linux/capability.h:72:
+typedef struct vfs_cap_data_v2 vfs_cap_data;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#330: FILE: security/commoncap.c:217:
+		bprm->cap_permitted = to_cap_t(

CHECK:SPACING: No space is necessary after a cast
#331: FILE: security/commoncap.c:218:
+			(__u64) le32_to_cpu(caps->v1.permitted) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#331: FILE: security/commoncap.c:218:
+			(__u64) le32_to_cpu(caps->v1.permitted) );

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#332: FILE: security/commoncap.c:219:
+		bprm->cap_inheritable = to_cap_t(

CHECK:SPACING: No space is necessary after a cast
#333: FILE: security/commoncap.c:220:
+			(__u64) le32_to_cpu(caps->v1.inheritable) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#333: FILE: security/commoncap.c:220:
+			(__u64) le32_to_cpu(caps->v1.inheritable) );

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#344: FILE: security/commoncap.c:229:
+		bprm->cap_permitted = to_cap_t(

ERROR:SPACING: space prohibited before that close parenthesis ')'
#345: FILE: security/commoncap.c:230:
+			le64_to_cpu(caps->v2.permitted) );

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#346: FILE: security/commoncap.c:231:
+		bprm->cap_inheritable = to_cap_t(

ERROR:SPACING: space prohibited before that close parenthesis ')'
#347: FILE: security/commoncap.c:232:
+			le64_to_cpu(caps->v2.inheritable) );

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000369341.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 6 warnings, 8 checks, 156 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000369341.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
