CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#75: FILE: arch/s390/hypfs/hypfs.h:31:
+extern int hypfs_diag_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#76: FILE: arch/s390/hypfs/hypfs.h:32:
+extern void hypfs_diag_exit(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#77: FILE: arch/s390/hypfs/hypfs.h:33:
+extern int hypfs_diag_create_files(struct super_block *sb, struct dentry *root);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#80: FILE: arch/s390/hypfs/hypfs.h:36:
+extern int hypfs_vm_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#81: FILE: arch/s390/hypfs/hypfs.h:37:
+extern int hypfs_vm_create_files(struct super_block *sb, struct dentry *root);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#88: FILE: arch/s390/hypfs/hypfs_vm.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#104: FILE: arch/s390/hypfs/hypfs_vm.c:17:
+static char local_guest[] = "        ";

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#105: FILE: arch/s390/hypfs/hypfs_vm.c:18:
+static char all_guests[] = "*       ";

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#140: FILE: arch/s390/hypfs/hypfs_vm.c:53:
+static int diag2fc(int size, char* query, void *addr)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#148: FILE: arch/s390/hypfs/hypfs_vm.c:61:
+	parm_list.addr = (unsigned long) addr ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited before semicolon
#148: FILE: arch/s390/hypfs/hypfs_vm.c:61:
+	parm_list.addr = (unsigned long) addr ;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#154: FILE: arch/s390/hypfs/hypfs_vm.c:67:
+	asm volatile(

ERROR:SPACING: space required after that ',' (ctx:VxV)
#157: FILE: arch/s390/hypfs/hypfs_vm.c:70:
+		EX_TABLE(0b,0b)
 		           ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#160: FILE: arch/s390/hypfs/hypfs_vm.c:73:
+	if ((rc != 0 ) && (rc != -2))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rc != 0'
#160: FILE: arch/s390/hypfs/hypfs_vm.c:73:
+	if ((rc != 0 ) && (rc != -2))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#192: FILE: arch/s390/hypfs/hypfs_vm.c:105:
+#define ATTRIBUTE(sb, dir, name, member) \
+do { \
+	void *rc; \
+	rc = hypfs_create_u64(sb, dir, name, member); \
+	if (IS_ERR(rc)) \
+		return PTR_ERR(rc); \
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#198: FILE: arch/s390/hypfs/hypfs_vm.c:111:
+} while(0)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around data[i]
#296: FILE: arch/s390/hypfs/hypfs_vm.c:209:
+		rc = hpyfs_vm_create_guest(sb, dir, &(data[i]));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000474278.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 5 warnings, 9 checks, 316 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000474278.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
