WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'intc_suspend', this function's name, in a string
#127: FILE: arch/avr32/mach-at32ap/intc.c:157:
+		pr_err("intc_suspend: called with interrupts enabled\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'intc_suspend', this function's name, in a string
#132: FILE: arch/avr32/mach-at32ap/intc.c:162:
+		pr_err("intc_suspend: suspend_ipr not initialized\n");

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#293: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#298: FILE: arch/avr32/mach-at32ap/pm.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#311: FILE: arch/avr32/mach-at32ap/pm.c:14:
+#include <asm/cacheflush.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#325: FILE: arch/avr32/mach-at32ap/pm.c:28:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct platform_suspend_ops should normally be const
#478: FILE: arch/avr32/mach-at32ap/pm.c:181:
+static struct platform_suspend_ops avr32_pm_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#485: FILE: arch/avr32/mach-at32ap/pm.c:188:
+	extern u8 pm_exception[];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#492: FILE: arch/avr32/mach-at32ap/pm.c:195:
+	extern u8 pm_exception[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#493: FILE: arch/avr32/mach-at32ap/pm.c:196:
+	extern u8 pm_irq0[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#494: FILE: arch/avr32/mach-at32ap/pm.c:197:
+	extern u8 pm_standby[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#495: FILE: arch/avr32/mach-at32ap/pm.c:198:
+	extern u8 pm_suspend_to_ram[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#496: FILE: arch/avr32/mach-at32ap/pm.c:199:
+	extern u8 pm_sram_end[];

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#531: FILE: arch/avr32/mach-at32ap/pm.c:234:
+	printk("AVR32 AP Power Management enabled\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#549: FILE: arch/avr32/mach-at32ap/sdramc.h:1:
+/*

ERROR:SPACING: space prohibited after that open parenthesis '('
#572: FILE: arch/avr32/mach-at32ap/sdramc.h:24:
+#define SDRAMC_MR_MODE_NORMAL		(  0 <<  0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#573: FILE: arch/avr32/mach-at32ap/sdramc.h:25:
+#define SDRAMC_MR_MODE_NOP		(  1 <<  0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#573: FILE: arch/avr32/mach-at32ap/sdramc.h:25:
+#define SDRAMC_MR_MODE_NOP		(  1 <<  0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

ERROR:SPACING: space prohibited after that open parenthesis '('
#574: FILE: arch/avr32/mach-at32ap/sdramc.h:26:
+#define SDRAMC_MR_MODE_BANKS_PRECHARGE	(  2 <<  0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#575: FILE: arch/avr32/mach-at32ap/sdramc.h:27:
+#define SDRAMC_MR_MODE_LOAD_MODE	(  3 <<  0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#576: FILE: arch/avr32/mach-at32ap/sdramc.h:28:
+#define SDRAMC_MR_MODE_AUTO_REFRESH	(  4 <<  0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#577: FILE: arch/avr32/mach-at32ap/sdramc.h:29:
+#define SDRAMC_MR_MODE_EXT_LOAD_MODE	(  5 <<  0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#578: FILE: arch/avr32/mach-at32ap/sdramc.h:30:
+#define SDRAMC_MR_MODE_POWER_DOWN	(  6 <<  0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#581: FILE: arch/avr32/mach-at32ap/sdramc.h:33:
+#define SDRAMC_CR_NC_8_BITS		(  0 <<  0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#582: FILE: arch/avr32/mach-at32ap/sdramc.h:34:
+#define SDRAMC_CR_NC_9_BITS		(  1 <<  0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#582: FILE: arch/avr32/mach-at32ap/sdramc.h:34:
+#define SDRAMC_CR_NC_9_BITS		(  1 <<  0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#583: FILE: arch/avr32/mach-at32ap/sdramc.h:35:
+#define SDRAMC_CR_NC_10_BITS		(  2 <<  0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#584: FILE: arch/avr32/mach-at32ap/sdramc.h:36:
+#define SDRAMC_CR_NC_11_BITS		(  3 <<  0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#585: FILE: arch/avr32/mach-at32ap/sdramc.h:37:
+#define SDRAMC_CR_NR_11_BITS		(  0 <<  2)

ERROR:SPACING: space prohibited after that open parenthesis '('
#586: FILE: arch/avr32/mach-at32ap/sdramc.h:38:
+#define SDRAMC_CR_NR_12_BITS		(  1 <<  2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#586: FILE: arch/avr32/mach-at32ap/sdramc.h:38:
+#define SDRAMC_CR_NR_12_BITS		(  1 <<  2)

ERROR:SPACING: space prohibited after that open parenthesis '('
#587: FILE: arch/avr32/mach-at32ap/sdramc.h:39:
+#define SDRAMC_CR_NR_13_BITS		(  2 <<  2)

ERROR:SPACING: space prohibited after that open parenthesis '('
#588: FILE: arch/avr32/mach-at32ap/sdramc.h:40:
+#define SDRAMC_CR_NB_2_BANKS		(  0 <<  4)

ERROR:SPACING: space prohibited after that open parenthesis '('
#589: FILE: arch/avr32/mach-at32ap/sdramc.h:41:
+#define SDRAMC_CR_NB_4_BANKS		(  1 <<  4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#589: FILE: arch/avr32/mach-at32ap/sdramc.h:41:
+#define SDRAMC_CR_NB_4_BANKS		(  1 <<  4)

ERROR:SPACING: space prohibited after that open parenthesis '('
#591: FILE: arch/avr32/mach-at32ap/sdramc.h:43:
+#define SDRAMC_CR_DBW_32_BITS		(  0 <<  7)

ERROR:SPACING: space prohibited after that open parenthesis '('
#592: FILE: arch/avr32/mach-at32ap/sdramc.h:44:
+#define SDRAMC_CR_DBW_16_BITS		(  1 <<  7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#592: FILE: arch/avr32/mach-at32ap/sdramc.h:44:
+#define SDRAMC_CR_DBW_16_BITS		(  1 <<  7)

ERROR:SPACING: space prohibited after that open parenthesis '('
#601: FILE: arch/avr32/mach-at32ap/sdramc.h:53:
+#define SDRAMC_HSR_DA			(  1 <<  0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#601: FILE: arch/avr32/mach-at32ap/sdramc.h:53:
+#define SDRAMC_HSR_DA			(  1 <<  0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#604: FILE: arch/avr32/mach-at32ap/sdramc.h:56:
+#define SDRAMC_LPR_LPCB_INHIBIT		(  0 <<  0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#605: FILE: arch/avr32/mach-at32ap/sdramc.h:57:
+#define SDRAMC_LPR_LPCB_SELF_RFR	(  1 <<  0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#605: FILE: arch/avr32/mach-at32ap/sdramc.h:57:
+#define SDRAMC_LPR_LPCB_SELF_RFR	(  1 <<  0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#606: FILE: arch/avr32/mach-at32ap/sdramc.h:58:
+#define SDRAMC_LPR_LPCB_PDOWN		(  2 <<  0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#607: FILE: arch/avr32/mach-at32ap/sdramc.h:59:
+#define SDRAMC_LPR_LPCB_DEEP_PDOWN	(  3 <<  0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#614: FILE: arch/avr32/mach-at32ap/sdramc.h:66:
+#define SDRAMC_ISR_RES			(  1 <<  0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#614: FILE: arch/avr32/mach-at32ap/sdramc.h:66:
+#define SDRAMC_ISR_RES			(  1 <<  0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#617: FILE: arch/avr32/mach-at32ap/sdramc.h:69:
+#define SDRAMC_MDR_MD_SDRAM		(  0 <<  0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#618: FILE: arch/avr32/mach-at32ap/sdramc.h:70:
+#define SDRAMC_MDR_MD_LOW_PWR_SDRAM	(  1 <<  0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#618: FILE: arch/avr32/mach-at32ap/sdramc.h:70:
+#define SDRAMC_MDR_MD_LOW_PWR_SDRAM	(  1 <<  0)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#633: FILE: include/asm-avr32/arch-at32ap/pm.h:22:
+extern void cpu_enter_standby(unsigned long sdramc_base);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000261225.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 26 errors, 13 warnings, 12 checks, 546 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000261225.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
