WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#46: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#51: FILE: arch/microblaze/include/asm/exceptions.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:BIT_MACRO: Prefer using the BIT macro
#71: FILE: arch/microblaze/include/asm/exceptions.h:21:
+#define HWEX_MSR_BIT (1 << 8)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#74: FILE: arch/microblaze/include/asm/exceptions.h:24:
+#define __enable_hw_exceptions()					\
+	__asm__ __volatile__ ("	msrset	r0, %0;				\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#75: FILE: arch/microblaze/include/asm/exceptions.h:25:
+	__asm__ __volatile__ ("	msrset	r0, %0;				\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#76: FILE: arch/microblaze/include/asm/exceptions.h:26:
+				nop;"					\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#76: FILE: arch/microblaze/include/asm/exceptions.h:26:
+				nop;"					\

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#81: FILE: arch/microblaze/include/asm/exceptions.h:31:
+#define __disable_hw_exceptions()					\
+	__asm__ __volatile__ ("	msrclr r0, %0;				\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#82: FILE: arch/microblaze/include/asm/exceptions.h:32:
+	__asm__ __volatile__ ("	msrclr r0, %0;				\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#83: FILE: arch/microblaze/include/asm/exceptions.h:33:
+				nop;"					\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#83: FILE: arch/microblaze/include/asm/exceptions.h:33:
+				nop;"					\

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#88: FILE: arch/microblaze/include/asm/exceptions.h:38:
+#define __enable_hw_exceptions()					\
+	__asm__ __volatile__ ("						\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#89: FILE: arch/microblaze/include/asm/exceptions.h:39:
+	__asm__ __volatile__ ("						\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#94: FILE: arch/microblaze/include/asm/exceptions.h:44:
+				nop;"					\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#94: FILE: arch/microblaze/include/asm/exceptions.h:44:
+				nop;"					\

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#99: FILE: arch/microblaze/include/asm/exceptions.h:49:
+#define __disable_hw_exceptions()					\
+	__asm__ __volatile__ ("						\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#100: FILE: arch/microblaze/include/asm/exceptions.h:50:
+	__asm__ __volatile__ ("						\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#105: FILE: arch/microblaze/include/asm/exceptions.h:55:
+				nop;"					\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#105: FILE: arch/microblaze/include/asm/exceptions.h:55:
+				nop;"					\

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#122: FILE: arch/microblaze/kernel/exceptions.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#123: FILE: arch/microblaze/kernel/exceptions.c:2:
+ *	arch/microblaze/kernel/exceptions.c - HW exception handling

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#146: FILE: arch/microblaze/kernel/exceptions.c:25:
+#include <asm/uaccess.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#153: FILE: arch/microblaze/kernel/exceptions.c:32:
+extern int xmon_bpt(struct pt_regs *regs);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#154: FILE: arch/microblaze/kernel/exceptions.c:33:
+extern int xmon_sstep(struct pt_regs *regs);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#155: FILE: arch/microblaze/kernel/exceptions.c:34:
+extern int xmon_iabr_match(struct pt_regs *regs);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#156: FILE: arch/microblaze/kernel/exceptions.c:35:
+extern int xmon_dabr_match(struct pt_regs *regs);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#157: FILE: arch/microblaze/kernel/exceptions.c:36:
+extern void (*xmon_fault_handler)(struct pt_regs *regs);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#194: FILE: arch/microblaze/kernel/exceptions.c:73:
+void die(const char* str, struct pt_regs* fp, long err)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#194: FILE: arch/microblaze/kernel/exceptions.c:73:
+void die(const char* str, struct pt_regs* fp, long err)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#198: FILE: arch/microblaze/kernel/exceptions.c:77:
+	printk("Oops: %s, sig: %ld\n", str, err);

CHECK:SPACING: No space is necessary after a cast
#218: FILE: arch/microblaze/kernel/exceptions.c:97:
+	info.si_addr = (void __user *) addr;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#224: FILE: arch/microblaze/kernel/exceptions.c:103:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#225: FILE: arch/microblaze/kernel/exceptions.c:104:
+	printk(KERN_WARNING "Exception %02x in %s mode, FSR=%08x PC=%08x ESR=%08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#226: FILE: arch/microblaze/kernel/exceptions.c:105:
+	printk(KERN_WARNING "Exception %02x in %s mode, FSR=%08x PC=%08x ESR=%08x\n",
+			type, user_mode(regs) ? "user" : "kernel", fsr,

CHECK:SPACING: No space is necessary after a cast
#227: FILE: arch/microblaze/kernel/exceptions.c:106:
+			(unsigned int) regs->pc, (unsigned int) regs->esr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#236: FILE: arch/microblaze/kernel/exceptions.c:115:
+			printk("Instruction bus error exception in user mode.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#240: FILE: arch/microblaze/kernel/exceptions.c:119:
+		printk("Instruction bus error exception in kernel mode.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#245: FILE: arch/microblaze/kernel/exceptions.c:124:
+			printk("Data bus error exception in user mode.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#249: FILE: arch/microblaze/kernel/exceptions.c:128:
+		printk("Data bus error exception in kernel mode.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#253: FILE: arch/microblaze/kernel/exceptions.c:132:
+		printk("Divide by zero exception\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#274: FILE: arch/microblaze/kernel/exceptions.c:153:
+		printk(KERN_WARNING "Unexpected exception %02x in %s mode, PC=%08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: arch/microblaze/kernel/exceptions.c:154:
+		printk(KERN_WARNING "Unexpected exception %02x in %s mode, PC=%08x\n",
+			type, kernel_mode(regs) ? "kernel" : "user",(unsigned int) addr);

CHECK:SPACING: No space is necessary after a cast
#275: FILE: arch/microblaze/kernel/exceptions.c:154:
+			type, kernel_mode(regs) ? "kernel" : "user",(unsigned int) addr);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#275: FILE: arch/microblaze/kernel/exceptions.c:154:
+			type, kernel_mode(regs) ? "kernel" : "user",(unsigned int) addr);
 			                                           ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#278: FILE: arch/microblaze/kernel/exceptions.c:157:
+	return;
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#285: FILE: arch/microblaze/kernel/hw_exception_handler.S:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#286: FILE: arch/microblaze/kernel/hw_exception_handler.S:2:
+ * arch/microblaze/kernel/hw_exception_handler.S

WARNING:TYPO_SPELLING: 'Rewriten' may be misspelled - perhaps 'Rewritten'?
#290: FILE: arch/microblaze/kernel/hw_exception_handler.S:6:
+ * Rewriten interrupt handling
    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LONG_LINE_COMMENT: line length of 111 exceeds 100 columns
#338: FILE: arch/microblaze/kernel/hw_exception_handler.S:54:
+ * This handlers use r3,r4,r5,r6 and optionally r[current] to work therefore these registers are saved/restored

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#377: FILE: arch/microblaze/kernel/hw_exception_handler.S:93:
+/* FIXME this is weird - for noMMU kernel is not possible to use brid $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000152872.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 35 warnings, 7 checks, 692 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000152872.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
