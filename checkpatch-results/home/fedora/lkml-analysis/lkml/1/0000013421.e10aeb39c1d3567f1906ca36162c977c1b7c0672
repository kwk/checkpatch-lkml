WARNING:BAD_SIGN_OFF: Non-standard signature: 'Sigend-off-by:' - perhaps 'Signed-off-by:'?
#34: 
Sigend-off-by: Jeff Dike <jdike@c2.user-mode-linux.org>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#54: FILE: include/linux/netdevice.h:493:
+	unsigned	flags;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct netdev_page_ctor *' should also have an identifier name
#56: FILE: include/linux/netdevice.h:495:
+	struct skb_user_page	*(*ctor)(struct netdev_page_ctor *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sk_buff *' should also have an identifier name
#56: FILE: include/linux/netdevice.h:495:
+	struct skb_user_page	*(*ctor)(struct netdev_page_ctor *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#56: FILE: include/linux/netdevice.h:495:
+	struct skb_user_page	*(*ctor)(struct netdev_page_ctor *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#57: FILE: include/linux/netdevice.h:496:
+	struct skb_user_page	*(*ctor)(struct netdev_page_ctor *,
+				struct sk_buff *, int);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#68: FILE: include/linux/netdevice.h:650:
+	int			(*ndo_page_ctor_prep)(struct net_device *dev,
+						struct netdev_page_ctor *ctor);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#86: FILE: include/linux/netdevice.h:2031:
+static inline int netdev_page_ctor_prep(struct net_device *dev,
+		struct netdev_page_ctor *ctor)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#109: FILE: include/linux/netdevice.h:2054:
+	if (npages <= 0 || npages > MAX_SKB_FRAGS ||
+			(data_len < PAGE_SIZE * (npages - 1) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#121: FILE: include/linux/netdevice.h:2066:
+static inline int netdev_page_ctor_attach(struct net_device *dev,
+		struct netdev_page_ctor *ctor)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct skb_user_page *' should also have an identifier name
#159: FILE: include/linux/skbuff.h:217:
+	void		(*dtor)(struct skb_user_page *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#190: FILE: include/linux/skbuff.h:1520:
+extern struct skb_user_page *netdev_alloc_user_pages(struct net_device *dev,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#191: FILE: include/linux/skbuff.h:1521:
+extern struct skb_user_page *netdev_alloc_user_pages(struct net_device *dev,
+			struct sk_buff *skb, int npages);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#193: FILE: include/linux/skbuff.h:1523:
+extern int netdev_use_ps_feature(struct net_device *dev);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#195: FILE: include/linux/skbuff.h:1525:
+static inline struct skb_user_page *netdev_alloc_user_page(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#220: FILE: net/core/dev.c:2269:
+static inline struct sk_buff *handle_user_space_buf(struct sk_buff *skb,
+					struct packet_type **pt_prev,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#239: FILE: net/core/dev.c:2288:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#290: FILE: net/core/skbuff.c:191:
+		data = kmalloc_node_track_caller(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#296: FILE: net/core/skbuff.c:197:
+			data = kmalloc_node_track_caller(

CHECK:BRACES: Unbalanced braces around else statement
#299: FILE: net/core/skbuff.c:200:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#313: FILE: net/core/skbuff.c:228:
+		memcpy(user->ushinfo, skb_shinfo(skb),
+				sizeof(struct skb_shared_info));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#342: FILE: net/core/skbuff.c:304:
+struct skb_user_page *netdev_alloc_user_pages(struct net_device *dev,
+			struct sk_buff *skb, int npages)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#352: FILE: net/core/skbuff.c:314:
+	BUG_ON(npages > ctor->npages);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000013421.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 16 checks, 321 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000013421.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
