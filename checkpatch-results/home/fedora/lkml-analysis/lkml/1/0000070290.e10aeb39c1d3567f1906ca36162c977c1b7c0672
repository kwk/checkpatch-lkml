WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#50: 
The patch adds the core se_portal_group_t functionality that is used internally by

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#57: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#62: FILE: drivers/target/target_core_tpg.c:1:
+/*******************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#85: FILE: drivers/target/target_core_tpg.c:24:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#86: FILE: drivers/target/target_core_tpg.c:25:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#90: FILE: drivers/target/target_core_tpg.c:29:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#119: FILE: drivers/target/target_core_tpg.c:58:
+static void core_clear_initiator_node_from_tpg(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#136: FILE: drivers/target/target_core_tpg.c:75:
+			printk(KERN_ERR "%s device entries device pointer is"

WARNING:SPLIT_STRING: quoted string split across lines
#137: FILE: drivers/target/target_core_tpg.c:76:
+			printk(KERN_ERR "%s device entries device pointer is"
+				" NULL, but Initiator has access.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#145: FILE: drivers/target/target_core_tpg.c:84:
+		core_update_device_list_for_node(lun, NULL, deve->mapped_lun,
+			TRANSPORT_LUNFLAGS_NO_ACCESS, nacl, tpg, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#149: FILE: drivers/target/target_core_tpg.c:88:
+		list_for_each_entry_safe(acl, acl_tmp,
+					&lun->lun_acl_list, lacl_list) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'acl->mapped_lun == deve->mapped_lun'
#150: FILE: drivers/target/target_core_tpg.c:89:
+			if (!(strcmp(acl->initiatorname,
+					nacl->initiatorname)) &&
+			     (acl->mapped_lun == deve->mapped_lun))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: drivers/target/target_core_tpg.c:90:
+			if (!(strcmp(acl->initiatorname,
+					nacl->initiatorname)) &&

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#157: FILE: drivers/target/target_core_tpg.c:96:
+			printk(KERN_ERR "Unable to locate se_lun_acl_t for %s,"

WARNING:SPLIT_STRING: quoted string split across lines
#158: FILE: drivers/target/target_core_tpg.c:97:
+			printk(KERN_ERR "Unable to locate se_lun_acl_t for %s,"
+				" mapped_lun: %u\n", nacl->initiatorname,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#178: FILE: drivers/target/target_core_tpg.c:117:
+static se_node_acl_t *__core_tpg_get_initiator_node_acl(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#196: FILE: drivers/target/target_core_tpg.c:135:
+se_node_acl_t *core_tpg_get_initiator_node_acl(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: drivers/target/target_core_tpg.c:144:
+		if (!(strcmp(acl->initiatorname, initiatorname)) &&
+		   (!(acl->nodeacl_flags & NAF_DYNAMIC_NODE_ACL))) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#219: FILE: drivers/target/target_core_tpg.c:158:
+void core_tpg_add_node_to_devs(

CHECK:BRACES: braces {} should be used on all arms of this statement
#239: FILE: drivers/target/target_core_tpg.c:178:
+			if (LUN_OBJ_API(lun)->get_device_access) {
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#240: FILE: drivers/target/target_core_tpg.c:179:
+				if (LUN_OBJ_API(lun)->get_device_access(

CHECK:BRACES: Unbalanced braces around else statement
#247: FILE: drivers/target/target_core_tpg.c:186:
+			} else

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#254: FILE: drivers/target/target_core_tpg.c:193:
+			if (LUN_OBJ_API(lun)->get_device_type(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#261: FILE: drivers/target/target_core_tpg.c:200:
+		printk(KERN_INFO "TARGET_CORE[%s]->TPG[%u]_LUN[%u] - Adding %s"

WARNING:SPLIT_STRING: quoted string split across lines
#262: FILE: drivers/target/target_core_tpg.c:201:
+		printk(KERN_INFO "TARGET_CORE[%s]->TPG[%u]_LUN[%u] - Adding %s"
+			" access for LUN in Demo Mode\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#269: FILE: drivers/target/target_core_tpg.c:208:
+		core_update_device_list_for_node(lun, NULL, lun->unpacked_lun,
+				lun_access, acl, tpg, 1);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#279: FILE: drivers/target/target_core_tpg.c:218:
+static int core_set_queue_depth_for_node(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#284: FILE: drivers/target/target_core_tpg.c:223:
+		printk(KERN_ERR "Queue depth for %s Initiator Node: %s is 0,"

WARNING:SPLIT_STRING: quoted string split across lines
#285: FILE: drivers/target/target_core_tpg.c:224:
+		printk(KERN_ERR "Queue depth for %s Initiator Node: %s is 0,"
+			"defaulting to 1.\n", TPG_TFO(tpg)->get_fabric_name(),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#305: FILE: drivers/target/target_core_tpg.c:244:
+		printk(KERN_ERR "Unable to allocate memory for"

WARNING:SPLIT_STRING: quoted string split across lines
#306: FILE: drivers/target/target_core_tpg.c:245:
+		printk(KERN_ERR "Unable to allocate memory for"
+			" se_node_acl_t->device_list\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#325: FILE: drivers/target/target_core_tpg.c:264:
+se_node_acl_t *core_tpg_check_initiator_node_acl(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#340: FILE: drivers/target/target_core_tpg.c:279:
+		printk(KERN_ERR "Unable to allocate memory for"

WARNING:SPLIT_STRING: quoted string split across lines
#341: FILE: drivers/target/target_core_tpg.c:280:
+		printk(KERN_ERR "Unable to allocate memory for"
+			" se_node_acl_t.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#358: FILE: drivers/target/target_core_tpg.c:297:
+	acl->fabric_acl_ptr = TPG_TFO(tpg)->tpg_alloc_fabric_acl(tpg,
+			acl);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#385: FILE: drivers/target/target_core_tpg.c:324:
+	printk("%s_TPG[%u] - Added DYNAMIC ACL with TCQ Depth: %d for %s"

WARNING:SPLIT_STRING: quoted string split across lines
#386: FILE: drivers/target/target_core_tpg.c:325:
+	printk("%s_TPG[%u] - Added DYNAMIC ACL with TCQ Depth: %d for %s"
+		" Initiator Node: %s\n", TPG_TFO(tpg)->get_fabric_name(),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lun->lun_status != TRANSPORT_LUN_STATUS_ACTIVE'
#427: FILE: drivers/target/target_core_tpg.c:366:
+		if ((lun->lun_status != TRANSPORT_LUN_STATUS_ACTIVE) ||
+		    (lun->lun_type_ptr == NULL))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lun->lun_type_ptr == NULL'
#427: FILE: drivers/target/target_core_tpg.c:366:
+		if ((lun->lun_status != TRANSPORT_LUN_STATUS_ACTIVE) ||
+		    (lun->lun_type_ptr == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lun->lun_type_ptr"
#428: FILE: drivers/target/target_core_tpg.c:367:
+		    (lun->lun_type_ptr == NULL))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#443: FILE: drivers/target/target_core_tpg.c:382:
+se_node_acl_t *core_tpg_add_initiator_node_acl(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#455: FILE: drivers/target/target_core_tpg.c:394:
+			printk(KERN_INFO "%s_TPG[%u] - Replacing dynamic ACL"

WARNING:SPLIT_STRING: quoted string split across lines
#456: FILE: drivers/target/target_core_tpg.c:395:
+			printk(KERN_INFO "%s_TPG[%u] - Replacing dynamic ACL"
+				" for %s\n", TPG_TFO(tpg)->get_fabric_name(),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#462: FILE: drivers/target/target_core_tpg.c:401:
+		printk(KERN_ERR "ACL entry for %s Initiator"

WARNING:SPLIT_STRING: quoted string split across lines
#463: FILE: drivers/target/target_core_tpg.c:402:
+		printk(KERN_ERR "ACL entry for %s Initiator"
+			" Node %s already exists for TPG %u, ignoring"

WARNING:SPLIT_STRING: quoted string split across lines
#464: FILE: drivers/target/target_core_tpg.c:403:
+			" Node %s already exists for TPG %u, ignoring"
+			" request.\n",  TPG_TFO(tpg)->get_fabric_name(),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#473: FILE: drivers/target/target_core_tpg.c:412:
+		printk(KERN_ERR "Unable to allocate memory for senode_acl_t.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#489: FILE: drivers/target/target_core_tpg.c:428:
+	acl->fabric_acl_ptr = TPG_TFO(tpg)->tpg_alloc_fabric_acl(tpg,
+			acl);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#515: FILE: drivers/target/target_core_tpg.c:454:
+	printk(KERN_INFO "%s_TPG[%hu] - Added ACL with TCQ Depth: %d for %s"

WARNING:SPLIT_STRING: quoted string split across lines
#516: FILE: drivers/target/target_core_tpg.c:455:
+	printk(KERN_INFO "%s_TPG[%hu] - Added ACL with TCQ Depth: %d for %s"
+		" Initiator Node: %s\n", TPG_TFO(tpg)->get_fabric_name(),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#528: FILE: drivers/target/target_core_tpg.c:467:
+int core_tpg_del_initiator_node_acl(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#540: FILE: drivers/target/target_core_tpg.c:479:
+		printk(KERN_ERR "Access Control List entry for %s Initiator"

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#540: FILE: drivers/target/target_core_tpg.c:479:
+		printk(KERN_ERR "Access Control List entry for %s Initiator"
+			" Node %s does not exists for TPG %hu, ignoring"
+			" request.\n", TPG_TFO(tpg)->get_fabric_name(),
+			initiatorname, TPG_TFO(tpg)->tpg_get_tag(tpg));

WARNING:SPLIT_STRING: quoted string split across lines
#541: FILE: drivers/target/target_core_tpg.c:480:
+		printk(KERN_ERR "Access Control List entry for %s Initiator"
+			" Node %s does not exists for TPG %hu, ignoring"

WARNING:SPLIT_STRING: quoted string split across lines
#542: FILE: drivers/target/target_core_tpg.c:481:
+			" Node %s does not exists for TPG %hu, ignoring"
+			" request.\n", TPG_TFO(tpg)->get_fabric_name(),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#557: FILE: drivers/target/target_core_tpg.c:496:
+	list_for_each_entry_safe(sess, sess_tmp,
+				&tpg->tpg_sess_list, sess_list) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#583: FILE: drivers/target/target_core_tpg.c:522:
+	printk(KERN_INFO "%s_TPG[%hu] - Deleted ACL with TCQ Depth: %d for %s"

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#583: FILE: drivers/target/target_core_tpg.c:522:
+	printk(KERN_INFO "%s_TPG[%hu] - Deleted ACL with TCQ Depth: %d for %s"
+		" Initiator Node: %s\n", TPG_TFO(tpg)->get_fabric_name(),
+		TPG_TFO(tpg)->tpg_get_tag(tpg), acl->queue_depth,
+		TPG_TFO(tpg)->get_fabric_name(), initiatorname);

WARNING:SPLIT_STRING: quoted string split across lines
#584: FILE: drivers/target/target_core_tpg.c:523:
+	printk(KERN_INFO "%s_TPG[%hu] - Deleted ACL with TCQ Depth: %d for %s"
+		" Initiator Node: %s\n", TPG_TFO(tpg)->get_fabric_name(),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#597: FILE: drivers/target/target_core_tpg.c:536:
+int core_tpg_set_initiator_node_queue_depth(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#610: FILE: drivers/target/target_core_tpg.c:549:
+		printk(KERN_ERR "Access Control List entry for %s Initiator"

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#610: FILE: drivers/target/target_core_tpg.c:549:
+		printk(KERN_ERR "Access Control List entry for %s Initiator"
+			" Node %s does not exists for TPG %hu, ignoring"
+			" request.\n", TPG_TFO(tpg)->get_fabric_name(),
+			initiatorname, TPG_TFO(tpg)->tpg_get_tag(tpg));

WARNING:SPLIT_STRING: quoted string split across lines
#611: FILE: drivers/target/target_core_tpg.c:550:
+		printk(KERN_ERR "Access Control List entry for %s Initiator"
+			" Node %s does not exists for TPG %hu, ignoring"

WARNING:SPLIT_STRING: quoted string split across lines
#612: FILE: drivers/target/target_core_tpg.c:551:
+			" Node %s does not exists for TPG %hu, ignoring"
+			" request.\n", TPG_TFO(tpg)->get_fabric_name(),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#629: FILE: drivers/target/target_core_tpg.c:568:
+			printk(KERN_ERR "Unable to change queue depth for %s"

WARNING:SPLIT_STRING: quoted string split across lines
#630: FILE: drivers/target/target_core_tpg.c:569:
+			printk(KERN_ERR "Unable to change queue depth for %s"
+				" Initiator Node: %s while session is"

WARNING:SPLIT_STRING: quoted string split across lines
#631: FILE: drivers/target/target_core_tpg.c:570:
+				" Initiator Node: %s while session is"
+				" operational.  To forcefully change the queue"

WARNING:SPLIT_STRING: quoted string split across lines
#632: FILE: drivers/target/target_core_tpg.c:571:
+				" operational.  To forcefully change the queue"
+				" depth and force session reinstatement"

WARNING:SPLIT_STRING: quoted string split across lines
#633: FILE: drivers/target/target_core_tpg.c:572:
+				" depth and force session reinstatement"
+				" use the \"force=1\" parameter.\n",

WARNING:TYPO_SPELLING: 'Successfuly' may be misspelled - perhaps 'Successfully'?
#689: FILE: drivers/target/target_core_tpg.c:628:
+	printk(KERN_INFO "Successfuly changed queue depth to: %d for Initiator"
 	                  ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#689: FILE: drivers/target/target_core_tpg.c:628:
+	printk(KERN_INFO "Successfuly changed queue depth to: %d for Initiator"

WARNING:SPLIT_STRING: quoted string split across lines
#690: FILE: drivers/target/target_core_tpg.c:629:
+	printk(KERN_INFO "Successfuly changed queue depth to: %d for Initiator"
+		" Node: %s on %s Target Portal Group: %u\n", queue_depth,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#703: FILE: drivers/target/target_core_tpg.c:642:
+se_portal_group_t *core_tpg_register(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#714: FILE: drivers/target/target_core_tpg.c:653:
+		printk(KERN_ERR "Unable to allocate se_portal_group_t\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#721: FILE: drivers/target/target_core_tpg.c:660:
+		printk(KERN_ERR "Unable to allocate se_portal_group_t->"

WARNING:SPLIT_STRING: quoted string split across lines
#722: FILE: drivers/target/target_core_tpg.c:661:
+		printk(KERN_ERR "Unable to allocate se_portal_group_t->"
+				"tpg_lun_list\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#754: FILE: drivers/target/target_core_tpg.c:693:
+	printk(KERN_INFO "TARGET_CORE[%s]: Allocated %s se_portal_group_t for"

WARNING:SPLIT_STRING: quoted string split across lines
#755: FILE: drivers/target/target_core_tpg.c:694:
+	printk(KERN_INFO "TARGET_CORE[%s]: Allocated %s se_portal_group_t for"
+		" endpoint: %s, Portal Tag: %u\n", tfo->get_fabric_name(),

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tfo->tpg_get_wwn"
#757: FILE: drivers/target/target_core_tpg.c:696:
+		"Normal" : "Discovery", (tfo->tpg_get_wwn(se_tpg) == NULL) ?

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#766: FILE: drivers/target/target_core_tpg.c:705:
+	printk(KERN_INFO "TARGET_CORE[%s]: Deallocating %s se_portal_group_t"

WARNING:SPLIT_STRING: quoted string split across lines
#767: FILE: drivers/target/target_core_tpg.c:706:
+	printk(KERN_INFO "TARGET_CORE[%s]: Deallocating %s se_portal_group_t"
+		" for endpoint: %s Portal Tag %u\n",

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#784: FILE: drivers/target/target_core_tpg.c:723:
+se_lun_t *core_tpg_pre_addlun(

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#790: FILE: drivers/target/target_core_tpg.c:729:
+	if (unpacked_lun > (TRANSPORT_MAX_LUNS_PER_TPG-1)) {
 	                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#791: FILE: drivers/target/target_core_tpg.c:730:
+		printk(KERN_ERR "%s LUN: %u exceeds TRANSPORT_MAX_LUNS_PER_TPG"

WARNING:SPLIT_STRING: quoted string split across lines
#792: FILE: drivers/target/target_core_tpg.c:731:
+		printk(KERN_ERR "%s LUN: %u exceeds TRANSPORT_MAX_LUNS_PER_TPG"
+			"-1: %u for Target Portal Group: %u\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#794: FILE: drivers/target/target_core_tpg.c:733:
+			unpacked_lun, TRANSPORT_MAX_LUNS_PER_TPG-1,
 			                                        ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#802: FILE: drivers/target/target_core_tpg.c:741:
+		printk(KERN_ERR "TPG Logical Unit Number: %u is already active"

WARNING:SPLIT_STRING: quoted string split across lines
#803: FILE: drivers/target/target_core_tpg.c:742:
+		printk(KERN_ERR "TPG Logical Unit Number: %u is already active"
+			" on %s Target Portal Group: %u, ignoring request.\n",

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#815: FILE: drivers/target/target_core_tpg.c:754:
+int core_tpg_post_addlun(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#841: FILE: drivers/target/target_core_tpg.c:780:
+se_lun_t *core_tpg_pre_dellun(

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#849: FILE: drivers/target/target_core_tpg.c:788:
+	if (unpacked_lun > (TRANSPORT_MAX_LUNS_PER_TPG-1)) {
 	                                              ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#850: FILE: drivers/target/target_core_tpg.c:789:
+		printk(KERN_ERR "%s LUN: %u exceeds TRANSPORT_MAX_LUNS_PER_TPG"

WARNING:SPLIT_STRING: quoted string split across lines
#851: FILE: drivers/target/target_core_tpg.c:790:
+		printk(KERN_ERR "%s LUN: %u exceeds TRANSPORT_MAX_LUNS_PER_TPG"
+			"-1: %u for Target Portal Group: %u\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#853: FILE: drivers/target/target_core_tpg.c:792:
+			TRANSPORT_MAX_LUNS_PER_TPG-1,
 			                          ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#861: FILE: drivers/target/target_core_tpg.c:800:
+		printk(KERN_ERR "%s Logical Unit Number: %u is not active on"

WARNING:SPLIT_STRING: quoted string split across lines
#862: FILE: drivers/target/target_core_tpg.c:801:
+		printk(KERN_ERR "%s Logical Unit Number: %u is not active on"
+			" Target Portal Group: %u, ignoring request.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#870: FILE: drivers/target/target_core_tpg.c:809:
+		printk(KERN_ERR "%s Logical Unit Number: %u type: %d does not"

WARNING:SPLIT_STRING: quoted string split across lines
#871: FILE: drivers/target/target_core_tpg.c:810:
+		printk(KERN_ERR "%s Logical Unit Number: %u type: %d does not"
+			" match passed type: %d\n",

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#885: FILE: drivers/target/target_core_tpg.c:824:
+int core_tpg_post_dellun(

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#917: FILE: include/target/target_core_tpg.h:1:
+/*******************************************************************************

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#940: FILE: include/target/target_core_tpg.h:24:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#941: FILE: include/target/target_core_tpg.h:25:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#945: FILE: include/target/target_core_tpg.h:29:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#951: FILE: include/target/target_core_tpg.h:35:
+extern se_node_acl_t *core_tpg_get_initiator_node_acl(se_portal_group_t *tpg,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#951: FILE: include/target/target_core_tpg.h:35:
+extern se_node_acl_t *core_tpg_get_initiator_node_acl(se_portal_group_t *tpg,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#952: FILE: include/target/target_core_tpg.h:36:
+extern se_node_acl_t *core_tpg_get_initiator_node_acl(se_portal_group_t *tpg,
+						unsigned char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#953: FILE: include/target/target_core_tpg.h:37:
+extern void core_tpg_add_node_to_devs(struct se_node_acl_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_node_acl_s *' should also have an identifier name
#953: FILE: include/target/target_core_tpg.h:37:
+extern void core_tpg_add_node_to_devs(struct se_node_acl_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#953: FILE: include/target/target_core_tpg.h:37:
+extern void core_tpg_add_node_to_devs(struct se_node_acl_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#954: FILE: include/target/target_core_tpg.h:38:
+extern void core_tpg_add_node_to_devs(struct se_node_acl_s *,
+						struct se_portal_group_s *);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#955: FILE: include/target/target_core_tpg.h:39:
+extern struct se_node_acl_s *core_tpg_check_initiator_node_acl(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#955: FILE: include/target/target_core_tpg.h:39:
+extern struct se_node_acl_s *core_tpg_check_initiator_node_acl(

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#955: FILE: include/target/target_core_tpg.h:39:
+extern struct se_node_acl_s *core_tpg_check_initiator_node_acl(

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#955: FILE: include/target/target_core_tpg.h:39:
+extern struct se_node_acl_s *core_tpg_check_initiator_node_acl(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#958: FILE: include/target/target_core_tpg.h:42:
+extern void core_tpg_free_node_acls(struct se_portal_group_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#958: FILE: include/target/target_core_tpg.h:42:
+extern void core_tpg_free_node_acls(struct se_portal_group_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#959: FILE: include/target/target_core_tpg.h:43:
+extern void core_tpg_clear_object_luns(struct se_portal_group_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#959: FILE: include/target/target_core_tpg.h:43:
+extern void core_tpg_clear_object_luns(struct se_portal_group_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#960: FILE: include/target/target_core_tpg.h:44:
+extern se_node_acl_t *core_tpg_add_initiator_node_acl(se_portal_group_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_portal_group_t *' should also have an identifier name
#960: FILE: include/target/target_core_tpg.h:44:
+extern se_node_acl_t *core_tpg_add_initiator_node_acl(se_portal_group_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#960: FILE: include/target/target_core_tpg.h:44:
+extern se_node_acl_t *core_tpg_add_initiator_node_acl(se_portal_group_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#960: FILE: include/target/target_core_tpg.h:44:
+extern se_node_acl_t *core_tpg_add_initiator_node_acl(se_portal_group_t *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#961: FILE: include/target/target_core_tpg.h:45:
+extern se_node_acl_t *core_tpg_add_initiator_node_acl(se_portal_group_t *,
+						const char *, u32);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#962: FILE: include/target/target_core_tpg.h:46:
+extern int core_tpg_del_initiator_node_acl(se_portal_group_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_portal_group_t *' should also have an identifier name
#962: FILE: include/target/target_core_tpg.h:46:
+extern int core_tpg_del_initiator_node_acl(se_portal_group_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#962: FILE: include/target/target_core_tpg.h:46:
+extern int core_tpg_del_initiator_node_acl(se_portal_group_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#962: FILE: include/target/target_core_tpg.h:46:
+extern int core_tpg_del_initiator_node_acl(se_portal_group_t *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#963: FILE: include/target/target_core_tpg.h:47:
+extern int core_tpg_del_initiator_node_acl(se_portal_group_t *,
+						const char *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#964: FILE: include/target/target_core_tpg.h:48:
+extern int core_tpg_set_initiator_node_queue_depth(se_portal_group_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_portal_group_t *' should also have an identifier name
#964: FILE: include/target/target_core_tpg.h:48:
+extern int core_tpg_set_initiator_node_queue_depth(se_portal_group_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#964: FILE: include/target/target_core_tpg.h:48:
+extern int core_tpg_set_initiator_node_queue_depth(se_portal_group_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#964: FILE: include/target/target_core_tpg.h:48:
+extern int core_tpg_set_initiator_node_queue_depth(se_portal_group_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#964: FILE: include/target/target_core_tpg.h:48:
+extern int core_tpg_set_initiator_node_queue_depth(se_portal_group_t *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#965: FILE: include/target/target_core_tpg.h:49:
+extern int core_tpg_set_initiator_node_queue_depth(se_portal_group_t *,
+						unsigned char *, u32, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#966: FILE: include/target/target_core_tpg.h:50:
+extern se_portal_group_t *core_tpg_register(struct target_core_fabric_ops *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct target_core_fabric_ops *' should also have an identifier name
#966: FILE: include/target/target_core_tpg.h:50:
+extern se_portal_group_t *core_tpg_register(struct target_core_fabric_ops *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#966: FILE: include/target/target_core_tpg.h:50:
+extern se_portal_group_t *core_tpg_register(struct target_core_fabric_ops *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#966: FILE: include/target/target_core_tpg.h:50:
+extern se_portal_group_t *core_tpg_register(struct target_core_fabric_ops *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#967: FILE: include/target/target_core_tpg.h:51:
+extern se_portal_group_t *core_tpg_register(struct target_core_fabric_ops *,
+					void *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#968: FILE: include/target/target_core_tpg.h:52:
+extern int core_tpg_deregister(struct se_portal_group_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#968: FILE: include/target/target_core_tpg.h:52:
+extern int core_tpg_deregister(struct se_portal_group_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#969: FILE: include/target/target_core_tpg.h:53:
+extern se_lun_t *core_tpg_pre_addlun(se_portal_group_t *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_portal_group_t *' should also have an identifier name
#969: FILE: include/target/target_core_tpg.h:53:
+extern se_lun_t *core_tpg_pre_addlun(se_portal_group_t *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#969: FILE: include/target/target_core_tpg.h:53:
+extern se_lun_t *core_tpg_pre_addlun(se_portal_group_t *, u32);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#970: FILE: include/target/target_core_tpg.h:54:
+extern int core_tpg_post_addlun(se_portal_group_t *, se_lun_t *, int, u32,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_portal_group_t *' should also have an identifier name
#970: FILE: include/target/target_core_tpg.h:54:
+extern int core_tpg_post_addlun(se_portal_group_t *, se_lun_t *, int, u32,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_lun_t *' should also have an identifier name
#970: FILE: include/target/target_core_tpg.h:54:
+extern int core_tpg_post_addlun(se_portal_group_t *, se_lun_t *, int, u32,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#970: FILE: include/target/target_core_tpg.h:54:
+extern int core_tpg_post_addlun(se_portal_group_t *, se_lun_t *, int, u32,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#970: FILE: include/target/target_core_tpg.h:54:
+extern int core_tpg_post_addlun(se_portal_group_t *, se_lun_t *, int, u32,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#970: FILE: include/target/target_core_tpg.h:54:
+extern int core_tpg_post_addlun(se_portal_group_t *, se_lun_t *, int, u32,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_obj_lun_type_s *' should also have an identifier name
#970: FILE: include/target/target_core_tpg.h:54:
+extern int core_tpg_post_addlun(se_portal_group_t *, se_lun_t *, int, u32,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#972: FILE: include/target/target_core_tpg.h:56:
+extern se_lun_t *core_tpg_pre_dellun(se_portal_group_t *, u32, int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_portal_group_t *' should also have an identifier name
#972: FILE: include/target/target_core_tpg.h:56:
+extern se_lun_t *core_tpg_pre_dellun(se_portal_group_t *, u32, int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#972: FILE: include/target/target_core_tpg.h:56:
+extern se_lun_t *core_tpg_pre_dellun(se_portal_group_t *, u32, int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#972: FILE: include/target/target_core_tpg.h:56:
+extern se_lun_t *core_tpg_pre_dellun(se_portal_group_t *, u32, int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#972: FILE: include/target/target_core_tpg.h:56:
+extern se_lun_t *core_tpg_pre_dellun(se_portal_group_t *, u32, int, int *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#973: FILE: include/target/target_core_tpg.h:57:
+extern int core_tpg_post_dellun(se_portal_group_t *, se_lun_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_portal_group_t *' should also have an identifier name
#973: FILE: include/target/target_core_tpg.h:57:
+extern int core_tpg_post_dellun(se_portal_group_t *, se_lun_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_lun_t *' should also have an identifier name
#973: FILE: include/target/target_core_tpg.h:57:
+extern int core_tpg_post_dellun(se_portal_group_t *, se_lun_t *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000070290.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 97 warnings, 58 checks, 908 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000070290.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
