WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
master.kernel.org:/pub/scm/linux/kernel/git/jgarzik/netdev-2.6.git upstream2-davem

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#231: FILE: drivers/net/ax88796.c:156:
+			dev_warn(&ax->dev->dev, "%s: %s did not complete.\n",
 			       __FUNCTION__, dev->name);

WARNING:SPLIT_STRING: quoted string split across lines
#245: FILE: drivers/net/ax88796.c:175:
+		dev_err(&ax->dev->dev, "%s: DMAing conflict in %s "
+			"[DMAstat:%d][irqlock:%d].\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#266: FILE: drivers/net/ax88796.c:218:
+			dev->name, __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#308: FILE: drivers/net/ax88796.c:439:
+		__FUNCTION__, dev, phy_addr, reg, value);

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#326: FILE: drivers/net/ax88796.c:765:
+			 ei_status.word16 ? 16:8, dev->irq, dev->base_addr,
 			                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#455: FILE: drivers/net/e1000e/ethtool.c:1635:
+^I                 WAKE_BCAST | WAKE_MAGIC |$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#456: FILE: drivers/net/e1000e/ethtool.c:1636:
+^I                 WAKE_PHY | WAKE_ARP;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#513: FILE: drivers/net/e1000e/netdev.c:958:
+		ndev_err(netdev,
+		       "Unable to allocate %s interrupt (return: %d)\n",

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#514: FILE: drivers/net/e1000e/netdev.c:959:
+			adapter->flags & FLAG_MSI_ENABLED ? "MSI":"INTx",
 			                                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#652: FILE: drivers/net/ehea/ehea_main.c:537:
+				skb_copy_to_linear_data(skb, ((char *)cqe) + 64,
 						 cqe->num_bytes_transfered - 4);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#763: FILE: drivers/net/ehea/ehea_main.c:1801:
+		for (i = 0, k_mcl_entry = dev->mc_list; i < dev->mc_count; i++,
+			     k_mcl_entry = k_mcl_entry->next)

CHECK:BRACES: Unbalanced braces around else statement
#782: FILE: drivers/net/ehea/ehea_main.c:1938:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1142: FILE: drivers/net/ehea/ehea_phyp.c:456:
+				 adapter_handle	      ,		 /* R4 */
 				               	      ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#1288: FILE: drivers/net/ehea/ehea_qmr.c:66:
+	queue->queue_pages = kmalloc(nr_of_pages * sizeof(void *), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hret != H_SUCCESS'
#1322: FILE: drivers/net/ehea/ehea_qmr.c:302:
+			if ((hret != H_SUCCESS) || (vpage))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hret != H_PAGE_REGISTERED'
#1328: FILE: drivers/net/ehea/ehea_qmr.c:306:
+			if ((hret != H_PAGE_REGISTERED) || (!vpage))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!vpage'
#1328: FILE: drivers/net/ehea/ehea_qmr.c:306:
+			if ((hret != H_PAGE_REGISTERED) || (!vpage))

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1446: FILE: drivers/net/ibmlana.c:904:
+static char *ibmlana_adapter_names[] __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1452: FILE: drivers/net/ibmlana.c:909:
+static int __devinit ibmlana_init_one(struct device *kdev)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1530: FILE: drivers/net/mipsnet.c:19:
+/*
+ * Net status/control block as seen by sw in the core.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1534: FILE: drivers/net/mipsnet.c:23:
+	/*
+	 * Device info for probing, reads as MIPSNET%d where %d is some

CHECK:CAMELCASE: Avoid CamelCase: <devId>
#1537: FILE: drivers/net/mipsnet.c:26:
+	u64 devId;		/*0x00 */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1541: FILE: drivers/net/mipsnet.c:29:
+	/*
+	 * read only busy flag.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1549: FILE: drivers/net/mipsnet.c:36:
+	/*
+	 * Set by the Net Device.

CHECK:CAMELCASE: Avoid CamelCase: <rxDataCount>
#1555: FILE: drivers/net/mipsnet.c:42:
+	u32 rxDataCount;	/*0x0c */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1556: FILE: drivers/net/mipsnet.c:43:
+#define MIPSNET_MAX_RXTX_DATACOUNT (1 << 16)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1559: FILE: drivers/net/mipsnet.c:46:
+	/*
+	 * Settable from the MIPS core, cleared by the Net Device.

CHECK:CAMELCASE: Avoid CamelCase: <txDataCount>
#1565: FILE: drivers/net/mipsnet.c:52:
+	u32 txDataCount;	/*0x10 */

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1568: FILE: drivers/net/mipsnet.c:55:
+	/*
+	 * Interrupt control

CHECK:CAMELCASE: Avoid CamelCase: <interruptControl>
#1581: FILE: drivers/net/mipsnet.c:68:
+	u32 interruptControl;	/*0x14 */

CHECK:BIT_MACRO: Prefer using the BIT macro
#1582: FILE: drivers/net/mipsnet.c:69:
+#define MIPSNET_INTCTL_TXDONE     (1u << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1583: FILE: drivers/net/mipsnet.c:70:
+#define MIPSNET_INTCTL_RXDONE     (1u << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1584: FILE: drivers/net/mipsnet.c:71:
+#define MIPSNET_INTCTL_TESTBIT    (1u << 31)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1587: FILE: drivers/net/mipsnet.c:74:
+	/*
+	 * Readonly core-specific interrupt info for the device to signal

CHECK:CAMELCASE: Avoid CamelCase: <interruptInfo>
#1596: FILE: drivers/net/mipsnet.c:83:
+	u32 interruptInfo;	/*0x18 */

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1599: FILE: drivers/net/mipsnet.c:86:
+	/*
+	 * This is where the received data is read out.

CHECK:CAMELCASE: Avoid CamelCase: <rxDataBuffer>
#1603: FILE: drivers/net/mipsnet.c:90:
+	u32 rxDataBuffer;	/*0x1c */

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1606: FILE: drivers/net/mipsnet.c:93:
+	/*
+	 * This is where the data to transmit is written.

CHECK:CAMELCASE: Avoid CamelCase: <txDataBuffer>
#1611: FILE: drivers/net/mipsnet.c:98:
+	u32 txDataBuffer;	/*0x20 */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dev' may be better as '(dev)' to avoid precedence issues
#1614: FILE: drivers/net/mipsnet.c:101:
+#define regaddr(dev, field) \
+  (dev->base_addr + offsetof(struct mipsnet_regs, field))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1615: FILE: drivers/net/mipsnet.c:102:
+  (dev->base_addr + offsetof(struct mipsnet_regs, field))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1638: FILE: drivers/net/mipsnet.c:119:
+static inline void mipsnet_put_todevice(struct net_device *dev,
 	struct sk_buff *skb)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1758: FILE: drivers/net/mipsnet.c:205:
+	printk(KERN_INFO "%s: %s(): irq %d for unknown device\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1759: FILE: drivers/net/mipsnet.c:206:
+	       dev->name, __FUNCTION__, irq);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2289: FILE: drivers/net/pasemi_mac.c:1490:
+		pasemi_mac_replenish_rx_ring(dev, RX_RING_SIZE-1);
 		                                              ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2299: FILE: drivers/net/pasemi_mac.c:1500:
 static int __devinit

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2365: FILE: drivers/net/phy/broadcom.c:145:
+    .phy_id^I^I= 0x0143bcb0,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2375: FILE: drivers/net/phy/broadcom.c:155:
+^I.driver ^I= { .owner = THIS_MODULE },$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2442: FILE: drivers/net/s2io.c:7388:
+						queue_rx_frame(lro->parent,
+							lro->vlan_tag);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2452: FILE: drivers/net/s2io.c:7400:
+						queue_rx_frame(lro->parent,
+							lro->vlan_tag);

CHECK:BRACES: Unbalanced braces around else statement
#2461: FILE: drivers/net/s2io.c:7426:
+	} else

CHECK:CAMELCASE: Avoid CamelCase: <Control_2>
#2487: FILE: drivers/net/s2io.c:7431:
+	queue_rx_frame(skb, RXD_GET_VLAN_TAG(rxdp->Control_2));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'l2_type == 0'
#2524: FILE: drivers/net/s2io.c:8074:
+	if ((l2_type == 0)
+		|| (l2_type == 4)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'l2_type == 4'
#2524: FILE: drivers/net/s2io.c:8074:
+	if ((l2_type == 0)
+		|| (l2_type == 4)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2525: FILE: drivers/net/s2io.c:8075:
+	if ((l2_type == 0)
+		|| (l2_type == 4)) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2528: FILE: drivers/net/s2io.c:8078:
+		/*
+		 * If vlan stripping is disabled and the frame is VLAN tagged,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!vlan_strip_flag'
#2531: FILE: drivers/net/s2io.c:8081:
+		if ((!vlan_strip_flag) &&
+			(rxdp->Control_1 & RXD_FRAME_VLAN_TAG))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2532: FILE: drivers/net/s2io.c:8082:
+		if ((!vlan_strip_flag) &&
+			(rxdp->Control_1 & RXD_FRAME_VLAN_TAG))

CHECK:CAMELCASE: Avoid CamelCase: <Control_1>
#2532: FILE: drivers/net/s2io.c:8082:
+			(rxdp->Control_1 & RXD_FRAME_VLAN_TAG))

WARNING:LINE_SPACING: Missing a blank line after declarations
#2568: FILE: drivers/net/s2io.c:8131:
+		__be32 *ptr;
+		ptr = (__be32 *)(tcp+1);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2568: FILE: drivers/net/s2io.c:8131:
+		ptr = (__be32 *)(tcp+1);
 		                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2571: FILE: drivers/net/s2io.c:8133:
+		lro->cur_tsval = ntohl(*(ptr+1));
 		                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2593: FILE: drivers/net/s2io.c:8186:
+		ptr = (__be32 *)(tcp+1);
 		                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2594: FILE: drivers/net/s2io.c:8187:
+		lro->cur_tsval = ntohl(*(ptr+1));
 		                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2603: FILE: drivers/net/s2io.c:8238:
+			if (l_lro->cur_tsval > ntohl(*((__be32 *)(ptr+2))))
 			                                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2608: FILE: drivers/net/s2io.c:8242:
+		if (*((__be32 *)(ptr+6)) == 0)
 		                    ^

CHECK:BRACES: Unbalanced braces around else statement
#2624: FILE: drivers/net/s2io.c:8262:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2638: FILE: drivers/net/s2io.c:8326:
+			initiate_new_session(*lro, buffer, ip, tcph, *tcp_len,
+								vlan_tag);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2658: FILE: drivers/net/s2io.c:8361:
+	if (sp->vlgrp && vlan_tag
+		&& (vlan_strip_flag)) {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2718: FILE: drivers/net/sunbmac.c:1078:
+static int __devinit bigmac_ether_init(struct sbus_dev *qec_sdev)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2731: FILE: drivers/net/sunqe.c:750:
+static u8 __devinit qec_get_burst(struct device_node *dp)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2740: FILE: drivers/net/sunqe.c:770:
+static struct sunqec * __devinit get_qec(struct sbus_dev *child_sdev)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2749: FILE: drivers/net/sunqe.c:826:
+static int __devinit qec_ether_init(struct sbus_dev *sdev)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2762: FILE: drivers/net/sunvnet.c:1133:
+static void __devinit print_version(void)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2775: FILE: drivers/net/tokenring/olympic.c:437:
+static int __devinit olympic_open(struct net_device *dev) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2775: FILE: drivers/net/tokenring/olympic.c:437:
+static int __devinit olympic_open(struct net_device *dev) 

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2812: FILE: drivers/net/ucc_geth.c:3671:
+/*
+ * Polling 'interrupt' - used by things like netconsole to send skbs

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2885: FILE: drivers/net/via-rhine.c:609:
+static void __devinit rhine_hw_init(struct net_device *dev, long pioaddr)

CHECK:CAMELCASE: Avoid CamelCase: <RDBaseLo>
#2915: FILE: drivers/net/via-velocity.c:779:
+		writel(vptr->rd_pool_dma, &regs->RDBaseLo);

CHECK:CAMELCASE: Avoid CamelCase: <TDBaseLo>
#2924: FILE: drivers/net/via-velocity.c:787:
+			writel(vptr->td_pool_dma[i], &regs->TDBaseLo[i]);

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#3006: FILE: drivers/net/via-velocity.c:1875:
+			pci_unmap_single(vptr->pdev, tdinfo->skb_dma[i], le16_to_cpu(td->tdesc1.len), PCI_DMA_TODEVICE);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3068: FILE: drivers/net/via-velocity.c:2120:
+			tdinfo->skb_dma[i] = pci_map_single(vptr->pdev, skb->data,
+						skb_headlen(skb), PCI_DMA_TODEVICE);

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_le16 should be cpu_to_le16
#3276: FILE: drivers/net/via-velocity.h:186:
+	RX_INTEN = __constant_cpu_to_le16(0x8000)

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_le16 should be cpu_to_le16
#3321: FILE: drivers/net/via-velocity.h:213:
+	TD_QUEUE = __constant_cpu_to_le16(0x8000)

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_le16 should be cpu_to_le16
#3341: FILE: drivers/net/via-velocity.h:247:
+	OWNED_BY_NIC = __constant_cpu_to_le16(0x8000)

CHECK:CAMELCASE: Avoid CamelCase: <CR0Set>
#3351: FILE: drivers/net/via-velocity.h:983:
+	volatile __le32 CR0Set;		/* 0x08 */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3351: FILE: drivers/net/via-velocity.h:983:
+	volatile __le32 CR0Set;		/* 0x08 */

CHECK:CAMELCASE: Avoid CamelCase: <CR0Clr>
#3352: FILE: drivers/net/via-velocity.h:984:
+	volatile __le32 CR0Clr;		/* 0x0C */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3352: FILE: drivers/net/via-velocity.h:984:
+	volatile __le32 CR0Clr;		/* 0x0C */

CHECK:CAMELCASE: Avoid CamelCase: <DecBaseHi>
#3359: FILE: drivers/net/via-velocity.h:988:
+	volatile __le32 DecBaseHi;	/* 0x18 */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3359: FILE: drivers/net/via-velocity.h:988:
+	volatile __le32 DecBaseHi;	/* 0x18 */

CHECK:CAMELCASE: Avoid CamelCase: <DbfBaseHi>
#3360: FILE: drivers/net/via-velocity.h:989:
+	volatile __le16 DbfBaseHi;	/* 0x1C */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3360: FILE: drivers/net/via-velocity.h:989:
+	volatile __le16 DbfBaseHi;	/* 0x1C */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3361: FILE: drivers/net/via-velocity.h:990:
+	volatile __le16 reserved_1E;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3364: FILE: drivers/net/via-velocity.h:992:
+	volatile __le16 ISRCTL;		/* 0x20 */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3370: FILE: drivers/net/via-velocity.h:996:
+	volatile __le32 ISR;		/* 0x24 */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3371: FILE: drivers/net/via-velocity.h:997:
+	volatile __le32 IMR;

CHECK:CAMELCASE: Avoid CamelCase: <TDStatusPort>
#3374: FILE: drivers/net/via-velocity.h:999:
+	volatile __le32 TDStatusPort;	/* 0x2C */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3374: FILE: drivers/net/via-velocity.h:999:
+	volatile __le32 TDStatusPort;	/* 0x2C */

CHECK:CAMELCASE: Avoid CamelCase: <TDCSRSet>
#3377: FILE: drivers/net/via-velocity.h:1001:
+	volatile __le16 TDCSRSet;	/* 0x30 */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3377: FILE: drivers/net/via-velocity.h:1001:
+	volatile __le16 TDCSRSet;	/* 0x30 */

CHECK:CAMELCASE: Avoid CamelCase: <TDCSRClr>
#3381: FILE: drivers/net/via-velocity.h:1004:
+	volatile __le16 TDCSRClr;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3381: FILE: drivers/net/via-velocity.h:1004:
+	volatile __le16 TDCSRClr;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3388: FILE: drivers/net/via-velocity.h:1008:
+	volatile __le32 RDBaseLo;	/* 0x38 */

CHECK:CAMELCASE: Avoid CamelCase: <RDIdx>
#3389: FILE: drivers/net/via-velocity.h:1009:
+	volatile __le16 RDIdx;		/* 0x3C */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3389: FILE: drivers/net/via-velocity.h:1009:
+	volatile __le16 RDIdx;		/* 0x3C */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3390: FILE: drivers/net/via-velocity.h:1010:
+	volatile __le16 reserved_3E;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3393: FILE: drivers/net/via-velocity.h:1012:
+	volatile __le32 TDBaseLo[4];	/* 0x40 */

CHECK:CAMELCASE: Avoid CamelCase: <RDCSize>
#3400: FILE: drivers/net/via-velocity.h:1014:
+	volatile __le16 RDCSize;	/* 0x50 */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3400: FILE: drivers/net/via-velocity.h:1014:
+	volatile __le16 RDCSize;	/* 0x50 */

CHECK:CAMELCASE: Avoid CamelCase: <TDCSize>
#3401: FILE: drivers/net/via-velocity.h:1015:
+	volatile __le16 TDCSize;	/* 0x52 */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3401: FILE: drivers/net/via-velocity.h:1015:
+	volatile __le16 TDCSize;	/* 0x52 */

CHECK:CAMELCASE: Avoid CamelCase: <TDIdx>
#3402: FILE: drivers/net/via-velocity.h:1016:
+	volatile __le16 TDIdx[4];	/* 0x54 */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3402: FILE: drivers/net/via-velocity.h:1016:
+	volatile __le16 TDIdx[4];	/* 0x54 */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3403: FILE: drivers/net/via-velocity.h:1017:
+	volatile __le16 tx_pause_timer;	/* 0x5C */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3404: FILE: drivers/net/via-velocity.h:1018:
+	volatile __le16 RBRDU;		/* 0x5E */

CHECK:CAMELCASE: Avoid CamelCase: <FIFOTest0>
#3408: FILE: drivers/net/via-velocity.h:1020:
+	volatile __le32 FIFOTest0;	/* 0x60 */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3408: FILE: drivers/net/via-velocity.h:1020:
+	volatile __le32 FIFOTest0;	/* 0x60 */

CHECK:CAMELCASE: Avoid CamelCase: <FIFOTest1>
#3409: FILE: drivers/net/via-velocity.h:1021:
+	volatile __le32 FIFOTest1;	/* 0x64 */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3409: FILE: drivers/net/via-velocity.h:1021:
+	volatile __le32 FIFOTest1;	/* 0x64 */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3418: FILE: drivers/net/via-velocity.h:1034:
+	volatile __le16 MIIDATA;

CHECK:CAMELCASE: Avoid CamelCase: <SoftTimer0>
#3422: FILE: drivers/net/via-velocity.h:1036:
+	volatile __le16 SoftTimer0;	/* 0x74 */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3422: FILE: drivers/net/via-velocity.h:1036:
+	volatile __le16 SoftTimer0;	/* 0x74 */

CHECK:CAMELCASE: Avoid CamelCase: <SoftTimer1>
#3423: FILE: drivers/net/via-velocity.h:1037:
+	volatile __le16 SoftTimer1;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3423: FILE: drivers/net/via-velocity.h:1037:
+	volatile __le16 SoftTimer1;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3432: FILE: drivers/net/via-velocity.h:1044:
+	volatile __le16 DCFG;		/* 0x7C */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3433: FILE: drivers/net/via-velocity.h:1045:
+	volatile __le16 MCFG;

CHECK:CAMELCASE: Avoid CamelCase: <MIBData>
#3442: FILE: drivers/net/via-velocity.h:1057:
+	volatile __le32 MIBData;	/* 0x88 */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3442: FILE: drivers/net/via-velocity.h:1057:
+	volatile __le32 MIBData;	/* 0x88 */

CHECK:CAMELCASE: Avoid CamelCase: <EEWrData>
#3445: FILE: drivers/net/via-velocity.h:1059:
+	volatile __le16 EEWrData;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3445: FILE: drivers/net/via-velocity.h:1059:
+	volatile __le16 EEWrData;

CHECK:CAMELCASE: Avoid CamelCase: <EERdData>
#3454: FILE: drivers/net/via-velocity.h:1069:
+	volatile __le16 EERdData;	/* 0x94 */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3454: FILE: drivers/net/via-velocity.h:1069:
+	volatile __le16 EERdData;	/* 0x94 */

CHECK:CAMELCASE: Avoid CamelCase: <WOLCRSet>
#3463: FILE: drivers/net/via-velocity.h:1083:
+	volatile __le16 WOLCRSet;	/* 0xA0 */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3463: FILE: drivers/net/via-velocity.h:1083:
+	volatile __le16 WOLCRSet;	/* 0xA0 */

CHECK:CAMELCASE: Avoid CamelCase: <WOLCRClr>
#3468: FILE: drivers/net/via-velocity.h:1087:
+	volatile __le16 WOLCRClr;	/* 0xA4 */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3468: FILE: drivers/net/via-velocity.h:1087:
+	volatile __le16 WOLCRClr;	/* 0xA4 */

CHECK:CAMELCASE: Avoid CamelCase: <WOLSRSet>
#3474: FILE: drivers/net/via-velocity.h:1091:
+	volatile __le16 WOLSRSet;	/* 0xA8 */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3474: FILE: drivers/net/via-velocity.h:1091:
+	volatile __le16 WOLSRSet;	/* 0xA8 */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3475: FILE: drivers/net/via-velocity.h:1092:
+	volatile __le16 reserved_AA;

CHECK:CAMELCASE: Avoid CamelCase: <WOLSRClr>
#3479: FILE: drivers/net/via-velocity.h:1094:
+	volatile __le16 WOLSRClr;	/* 0xAC */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3479: FILE: drivers/net/via-velocity.h:1094:
+	volatile __le16 WOLSRClr;	/* 0xAC */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3480: FILE: drivers/net/via-velocity.h:1095:
+	volatile __le16 reserved_AE;

CHECK:CAMELCASE: Avoid CamelCase: <PatternCRC>
#3484: FILE: drivers/net/via-velocity.h:1097:
+	volatile __le16 PatternCRC[8];	/* 0xB0 */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3484: FILE: drivers/net/via-velocity.h:1097:
+	volatile __le16 PatternCRC[8];	/* 0xB0 */

CHECK:CAMELCASE: Avoid CamelCase: <ByteMask>
#3485: FILE: drivers/net/via-velocity.h:1098:
+	volatile __le32 ByteMask[4][4];	/* 0xC0 */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3485: FILE: drivers/net/via-velocity.h:1098:
+	volatile __le32 ByteMask[4][4];	/* 0xC0 */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000327960.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 74 warnings, 70 checks, 2922 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000327960.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
