WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#64: FILE: include/linux/relay_debugfs.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#83: FILE: include/linux/relay_debugfs.h:20:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#84: FILE: include/linux/relay_debugfs.h:21:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#148: FILE: include/linux/relay_debugfs.h:85:
+	spinlock_t relay_lock;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#177: FILE: include/linux/relay_debugfs.h:114:
+}
+struct relay_info *relay_setup(const char *root, const char *name,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#183: FILE: include/linux/relay_debugfs.h:120:
+int relay_exists(const char *parent_dir, const char *dir,
+					struct relay_info **ti);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#187: FILE: include/linux/relay_debugfs.h:124:
+int relay_dump(struct relay_printk_data *dpk, const void *output,
+							const int output_len);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#195: FILE: include/linux/relay_debugfs.h:132:
+}
+static inline int relay_start(struct relay_info *relay) { return -EINVAL; }

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#200: FILE: include/linux/relay_debugfs.h:137:
+static inline int relay_exists(const char *parent_dir, const char *dir,
+				struct relay_info **ti)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#204: FILE: include/linux/relay_debugfs.h:141:
+}
+static inline void relay_cleanup_all(const char *parent_dir) {}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#206: FILE: include/linux/relay_debugfs.h:143:
+static inline int relay_printk(struct relay_printk_data *dpk, char *format,
+				...)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#210: FILE: include/linux/relay_debugfs.h:147:
+}
+int relay_dump(struct relay_printk_data *dpk, const void *output,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: include/linux/relay_debugfs.h:148:
+int relay_dump(struct relay_printk_data *dpk, const void *output,
+							const int output_len)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#328: FILE: kernel/relay_debugfs.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#346: FILE: kernel/relay_debugfs.c:19:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#347: FILE: kernel/relay_debugfs.c:20:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#362: FILE: kernel/relay_debugfs.c:35:
+static int state_open(struct inode *inode, struct file *filp)
                                                         ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#368: FILE: kernel/relay_debugfs.c:41:
+static ssize_t state_read(struct file *filp, char __user *buffer,
                                        ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#381: FILE: kernel/relay_debugfs.c:54:
+static ssize_t state_write(struct file *filp, const char __user *buffer,
                                         ^^^^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#397: FILE: kernel/relay_debugfs.c:70:
+	buf[count-1] = '\0';
 	         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#399: FILE: kernel/relay_debugfs.c:72:
+	if (strcmp(buf, "start") == 0) {
[...]
+	} else if (strcmp(buf, "stop") == 0)
[...]
+	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:CONST_STRUCT: struct file_operations should normally be const
#411: FILE: kernel/relay_debugfs.c:84:
+static struct file_operations state_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*r)...) over kzalloc(sizeof(struct relay_root)...)
#466: FILE: kernel/relay_debugfs.c:139:
+	r = kzalloc(sizeof(struct relay_root), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#470: FILE: kernel/relay_debugfs.c:143:
+	strlcpy(r->name, root, sizeof(r->name));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!root"
#486: FILE: kernel/relay_debugfs.c:159:
+	if (root == NULL || name == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!name"
#486: FILE: kernel/relay_debugfs.c:159:
+	if (root == NULL || name == NULL)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*temp)...) over kzalloc(sizeof(struct relay_dir)...)
#489: FILE: kernel/relay_debugfs.c:162:
+	temp = kzalloc(sizeof(struct relay_dir), GFP_KERNEL);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'temp == NULL'
#490: FILE: kernel/relay_debugfs.c:163:
+	if ((temp == NULL) || (strlen(name) > RELAY_NAME_SIZE))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!temp"
#490: FILE: kernel/relay_debugfs.c:163:
+	if ((temp == NULL) || (strlen(name) > RELAY_NAME_SIZE))

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#493: FILE: kernel/relay_debugfs.c:166:
+	strlcpy(temp->relay_dir_name, name, sizeof(temp->relay_dir_name));

CHECK:BRACES: braces {} should be used on all arms of this statement
#506: FILE: kernel/relay_debugfs.c:179:
+	if (IS_ERR(temp->relay_dir))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#508: FILE: kernel/relay_debugfs.c:181:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#520: FILE: kernel/relay_debugfs.c:193:
+int relay_exists(const char *parent_dir, const char *dir,
+					struct relay_info **ti)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#546: FILE: kernel/relay_debugfs.c:219:
+static int dropped_open(struct inode *inode, struct file *filp)
                                                           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#553: FILE: kernel/relay_debugfs.c:226:
+static ssize_t dropped_read(struct file *filp, char __user *buffer,
                                          ^^^^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#564: FILE: kernel/relay_debugfs.c:237:
+static struct file_operations dropped_fops = {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#570: FILE: kernel/relay_debugfs.c:243:
+static int reset_consumed_open(struct inode *inode, struct file *filp)
                                                                  ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#577: FILE: kernel/relay_debugfs.c:250:
+static ssize_t reset_consumed_write(struct file *filp,
                                                  ^^^^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#603: FILE: kernel/relay_debugfs.c:276:
+static struct file_operations reset_consumed_fops = {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#609: FILE: kernel/relay_debugfs.c:282:
+static int sub_size_open(struct inode *inode, struct file *filp)
                                                            ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#616: FILE: kernel/relay_debugfs.c:289:
+static ssize_t sub_size_read(struct file *filp, char __user *buffer,
                                           ^^^^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#627: FILE: kernel/relay_debugfs.c:300:
+static struct file_operations sub_size_fops = {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#633: FILE: kernel/relay_debugfs.c:306:
+static int nr_sub_open(struct inode *inode, struct file *filp)
                                                          ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#639: FILE: kernel/relay_debugfs.c:312:
+static ssize_t nr_sub_read(struct file *filp, char __user *buffer,
                                         ^^^^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#650: FILE: kernel/relay_debugfs.c:323:
+static struct file_operations nr_sub_fops = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#709: FILE: kernel/relay_debugfs.c:382:
+};
+static struct rchan_callbacks relay_callbacks_global = {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#748: FILE: kernel/relay_debugfs.c:421:
+	relay->state_file = debugfs_create_file("state", 0444, relay->dir,
+						 relay, &state_fops);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#768: FILE: kernel/relay_debugfs.c:441:
+		relay->reset_consumed_file = debugfs_create_file("rewind", 0444,
+							relay->dir, relay,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#806: FILE: kernel/relay_debugfs.c:479:
+static int relay_setup_channel(struct relay_info *relay, u32 buf_size,
+				u32 buf_nr, u32 flags)

WARNING:REPEATED_WORD: Possible repeated word: 'relay'
#829: FILE: kernel/relay_debugfs.c:502:
+ *	relay_setup - create a new relay relay handle

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#915: FILE: kernel/relay_debugfs.c:588:
+		synchronize_sched();

Usage of a deprecated RCU API is detected.  It is recommended to replace
old flavourful RCU APIs by their new vanilla-RCU counterparts.

The full list of available RCU APIs can be viewed from the kernel docs.

See: https://www.kernel.org/doc/html/latest/RCU/whatisRCU.html#full-list-of-rcu-apis

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#954: FILE: kernel/relay_debugfs.c:627:
+		if (!strncmp(parent_dir, temp->relay_root->d_iname, \

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#965: FILE: kernel/relay_debugfs.c:638:
+static int relay_printf(struct relay_info *trace, const char *format,
+								va_list ap)

WARNING:LINE_SPACING: Missing a blank line after declarations
#985: FILE: kernel/relay_debugfs.c:658:
+	int ret = 0;
+	tpk->exists = relay_exists(tpk->parent_dir, tpk->dir, &tpk->ti);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#988: FILE: kernel/relay_debugfs.c:661:
+	switch (tpk->exists) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#996: FILE: kernel/relay_debugfs.c:669:
+		tpk->ti = relay_setup(tpk->parent_dir, tpk->dir,
+				tpk->buf_size, tpk->sub_buf_size, tpk->flags);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#997: FILE: kernel/relay_debugfs.c:670:
+		printk(KERN_INFO "Trace interface %s setup\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#998: FILE: kernel/relay_debugfs.c:671:
+		printk(KERN_INFO "Trace interface %s setup\n",
+							tpk->ti->dir->d_iname);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1000: FILE: kernel/relay_debugfs.c:673:
+			printk(KERN_ERR "Error initialising %s interface\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1001: FILE: kernel/relay_debugfs.c:674:
+			printk(KERN_ERR "Error initialising %s interface\n",
+							tpk->ti->dir->d_iname);

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1004: FILE: kernel/relay_debugfs.c:677:
+	/* Fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:LINE_SPACING: Missing a blank line after declarations
#1024: FILE: kernel/relay_debugfs.c:697:
+	int ret = 0;
+	va_list(ap);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1056: FILE: kernel/relay_debugfs.c:729:
+int relay_dump(struct relay_printk_data *tpk, const void *output,
+							const int output_len)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1073: FILE: kernel/relay_debugfs.c:746:
+	if (record && relay_running(tpk->ti))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1075: FILE: kernel/relay_debugfs.c:748:
+	else {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1733: FILE: samples/relay/fork_trace.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1750: FILE: samples/relay/fork_trace.c:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1751: FILE: samples/relay/fork_trace.c:19:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1839: FILE: samples/relay/fork_trace.c:107:
+	kprobes_relay = relay_setup("relay_example", PROBE_POINT,
+				     1024, 8, flags);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1852: FILE: samples/relay/fork_trace.c:120:
+		printk(KERN_ERR "fork_trace: register_kprobe failed\n");

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#2022: FILE: samples/Kconfig:36:
+config SAMPLE_RELAY
+	tristate "Build relay debugfs example -- loadable modules only"
+	depends on RELAY && KPROBES && m
 	help
+	  This builds a relay debugfs example module.
+	  This builds a relay debugfs example module.
 

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2078: FILE: samples/trace/fork_new_trace.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2095: FILE: samples/trace/fork_new_trace.c:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2096: FILE: samples/trace/fork_new_trace.c:19:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2141: FILE: samples/trace/fork_new_trace.c:64:
+		printk(KERN_ERR "fork_trace: register_kprobe failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2164: FILE: samples/trace/fork_new_trace.c:87:
+		printk(KERN_ERR "Unable to find required free memory. "

WARNING:SPLIT_STRING: quoted string split across lines
#2165: FILE: samples/trace/fork_new_trace.c:88:
+		printk(KERN_ERR "Unable to find required free memory. "
+				"Trace new sample module loading aborted");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000245299.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 35 warnings, 34 checks, 1240 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000245299.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
