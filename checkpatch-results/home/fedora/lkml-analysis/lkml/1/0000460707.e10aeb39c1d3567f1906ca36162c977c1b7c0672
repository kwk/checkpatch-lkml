WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#59: FILE: arch/blackfin/kernel/asm-offsets.c:48:
+#if 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: arch/blackfin/kernel/ptrace.c:401:
+#if 0^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#104: FILE: arch/blackfin/kernel/ptrace.c:401:
+#if 0	

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#131: FILE: include/asm-blackfin/thread_info.h:140:
+#define _TIF_SINGLESTEP		(1<<TIF_SINGLESTEP)
                        		  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#131: FILE: include/asm-blackfin/thread_info.h:140:
+#define _TIF_SINGLESTEP		(1<<TIF_SINGLESTEP)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#139: FILE: include/asm-blackfin/tracehook.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:DEFINE_ARCH_HAS: #define of 'ARCH_HAS_SINGLE_STEP' is wrong - use Kconfig variables or standard guards instead
#163: FILE: include/asm-blackfin/tracehook.h:25:
+#define ARCH_HAS_SINGLE_STEP	(1)

The ARCH_HAS_xyz and ARCH_HAVE_xyz patterns are wrong.

For big conceptual features use Kconfig symbols instead.  And for
smaller things where we have compatibility fallback functions but
want architectures able to override them with optimized ones, we
should either use weak functions (appropriate for some cases), or
the symbol that protects them should be the same symbol we use.

See: https://lore.kernel.org/lkml/CA+55aFycQ9XJvEOsiM3txHL5bjUc8CeKWJNR_H+MiicaddB42Q@mail.gmail.com/

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#168: FILE: include/asm-blackfin/tracehook.h:30:
+#if 0

WARNING:BRACES: braces {} are not necessary for single statement blocks
#171: FILE: include/asm-blackfin/tracehook.h:33:
+	if (regs != NULL) {
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "regs"
#171: FILE: include/asm-blackfin/tracehook.h:33:
+	if (regs != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: include/asm-blackfin/tracehook.h:35:
+#endif $

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#180: FILE: include/asm-blackfin/tracehook.h:42:
+#if 0

WARNING:BRACES: braces {} are not necessary for single statement blocks
#183: FILE: include/asm-blackfin/tracehook.h:45:
+	if (regs != NULL) {
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "regs"
#183: FILE: include/asm-blackfin/tracehook.h:45:
+	if (regs != NULL) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#189: FILE: include/asm-blackfin/tracehook.h:51:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000460707.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 7 warnings, 5 checks, 146 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000460707.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
