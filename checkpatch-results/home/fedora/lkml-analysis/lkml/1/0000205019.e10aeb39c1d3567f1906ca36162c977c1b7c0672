WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#97: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#102: FILE: fs/notify/access.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#117: FILE: fs/notify/access.c:16:
+ *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#120: FILE: fs/notify/access.c:19:
+#include <asm/atomic.h>

WARNING:LINE_SPACING: Missing a blank line after declarations
#159: FILE: fs/notify/access.c:58:
+	int ret;
+	ret = wait_event_interruptible_timeout(group->access_waitq,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#160: FILE: fs/notify/access.c:59:
+	ret = wait_event_interruptible_timeout(group->access_waitq,
+						event->response,

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#202: FILE: fs/notify/access.c:101:
+int fanotify_process_access_response(struct fanotify_group *group, unsigned long cookie, unsigned int response)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:TYPO_SPELLING: 'responce' may be misspelled - perhaps 'response'?
#209: FILE: fs/notify/access.c:108:
+	 * userspace can send a valid responce or we will clean it up after the
 	                              ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LONG_LINE_COMMENT: line length of 128 exceeds 100 columns
#325: FILE: fs/notify/fanotify.c:111:
+				/* put on access_list first so userspace can't be so fast responding it isn't on the list yet */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#385: FILE: fs/notify/fanotify.h:102:
+extern int fanotify_add_event_to_access(struct fanotify_group *group, struct fanotify_event *event);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#386: FILE: fs/notify/fanotify.h:103:
+extern int fanotify_get_response_from_access(struct fanotify_group *group, struct fanotify_event *event);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#386: FILE: fs/notify/fanotify.h:103:
+extern int fanotify_get_response_from_access(struct fanotify_group *group, struct fanotify_event *event);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#387: FILE: fs/notify/fanotify.h:104:
+extern void fanotify_access_clear_group(struct fanotify_group *group);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#539: FILE: include/linux/fanotify.h:115:
+extern int fanotify(struct file *file, unsigned int mask);

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#547: FILE: include/linux/fanotify.h:125:
+extern int fanotify_process_access_response(struct fanotify_group *group, unsigned long cookie, unsigned int response);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#547: FILE: include/linux/fanotify.h:125:
+extern int fanotify_process_access_response(struct fanotify_group *group, unsigned long cookie, unsigned int response);

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#564: FILE: include/linux/fanotify.h:159:
+static inline int fanotify_process_access_response(struct fanotify_group *group, unsigned long cookie, unsigned int response)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000205019.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 10 warnings, 6 checks, 452 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000205019.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
