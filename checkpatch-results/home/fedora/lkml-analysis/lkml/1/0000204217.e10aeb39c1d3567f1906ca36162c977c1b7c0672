WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#55: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#60: FILE: fs/ceph/mds_client.c:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#76: FILE: fs/ceph/mds_client.c:17:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#89: FILE: fs/ceph/mds_client.c:30:
+
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#131: FILE: fs/ceph/mds_client.c:72:
+	ceph_decode_need(p, end, 3*sizeof(u16), bad);
 	                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#145: FILE: fs/ceph/mds_client.c:86:
+					 2*sizeof(*info->trace_ilease) +
 					  ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info->trace_in"
#150: FILE: fs/ceph/mds_client.c:91:
+	if (info->trace_in == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#192: FILE: fs/ceph/mds_client.c:133:
+		sizeof(u32)*le32_to_cpu(info->trace_dir[numd]->ndist);
 		           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#222: FILE: fs/ceph/mds_client.c:163:
+		sizeof(u32)*le32_to_cpu(info->dir_dir->ndist);
 		           ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info->dir_in"
#238: FILE: fs/ceph/mds_client.c:179:
+	if (info->dir_in == NULL) {

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#253: FILE: fs/ceph/mds_client.c:194:
+		dout(20, "parsed dir dname '%.*s'\n", info->dir_dname_len[i],
 		^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#295: FILE: fs/ceph/mds_client.c:236:
+		err = parse_reply_info_trace(&p, p+len, info);
 		                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#303: FILE: fs/ceph/mds_client.c:244:
+		err = parse_reply_info_dir(&p, p+len, info);
 		                                ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#331: FILE: fs/ceph/mds_client.c:272:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mdsc->sessions[mds]"
#356: FILE: fs/ceph/mds_client.c:297:
+	if (mds >= mdsc->max_sessions || mdsc->sessions[mds] == NULL)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#359: FILE: fs/ceph/mds_client.c:300:
+	dout(30, "get_mds_session %p %d -> %d\n", session,
 	^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#360: FILE: fs/ceph/mds_client.c:301:
+	     atomic_read(&session->s_ref), atomic_read(&session->s_ref)+1);
 	                                                               ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#367: FILE: fs/ceph/mds_client.c:308:
+	dout(30, "put_mds_session %p %d -> %d\n", s,
 	^^^^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#368: FILE: fs/ceph/mds_client.c:309:
+	     atomic_read(&s->s_ref), atomic_read(&s->s_ref)-1);
 	                                                   ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#399: FILE: fs/ceph/mds_client.c:340:
+	dout(10, "register_session mds%d\n", mds);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'register_session', this function's name, in a string
#399: FILE: fs/ceph/mds_client.c:340:
+	dout(10, "register_session mds%d\n", mds);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#401: FILE: fs/ceph/mds_client.c:342:
+		int newmax = 1 << get_count_order(mds+1);
 		                                     ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#404: FILE: fs/ceph/mds_client.c:345:
+		dout(50, "register_session realloc to %d\n", newmax);
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'register_session', this function's name, in a string
#404: FILE: fs/ceph/mds_client.c:345:
+		dout(50, "register_session realloc to %d\n", newmax);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#405: FILE: fs/ceph/mds_client.c:346:
+		sa = kzalloc(newmax * sizeof(void *), GFP_NOFS);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sa"
#406: FILE: fs/ceph/mds_client.c:347:
+		if (sa == NULL)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#426: FILE: fs/ceph/mds_client.c:367:
+	dout(10, "unregister_session mds%d %p\n", mds, mdsc->sessions[mds]);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'unregister_session', this function's name, in a string
#426: FILE: fs/ceph/mds_client.c:367:
+	dout(10, "unregister_session mds%d %p\n", mds, mdsc->sessions[mds]);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#431: FILE: fs/ceph/mds_client.c:372:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#455: FILE: fs/ceph/mds_client.c:396:
+	dout(10, "put_request %p %d -> %d\n", req,
 	^^^^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#456: FILE: fs/ceph/mds_client.c:397:
+	     atomic_read(&req->r_ref), atomic_read(&req->r_ref)-1);
 	                                                       ^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#467: FILE: fs/ceph/mds_client.c:408:
+			iput(req->r_last_inode);
 			^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#484: FILE: fs/ceph/mds_client.c:425:
+static struct ceph_mds_request *__get_request(struct ceph_mds_client *mdsc,
+					     u64 tid)

WARNING:LINE_SPACING: Missing a blank line after declarations
#487: FILE: fs/ceph/mds_client.c:428:
+	struct ceph_mds_request *req;
+	req = radix_tree_lookup(&mdsc->request_tree, tid);

WARNING:LINE_SPACING: Missing a blank line after declarations
#518: FILE: fs/ceph/mds_client.c:459:
+	struct ceph_mds_request_head *head = req->r_request->front.iov_base;
+	req->r_tid = ++mdsc->last_tid;

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#520: FILE: fs/ceph/mds_client.c:461:
+	dout(30, "__register_request %p tid %lld\n", req, req->r_tid);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__register_request', this function's name, in a string
#520: FILE: fs/ceph/mds_client.c:461:
+	dout(30, "__register_request %p tid %lld\n", req, req->r_tid);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#528: FILE: fs/ceph/mds_client.c:469:
+	dout(30, "__unregister_request %p tid %lld\n", req, req->r_tid);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__unregister_request', this function's name, in a string
#528: FILE: fs/ceph/mds_client.c:469:
+	dout(30, "__unregister_request %p tid %lld\n", req, req->r_tid);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#540: FILE: fs/ceph/mds_client.c:481:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#565: FILE: fs/ceph/mds_client.c:506:
+		dout(20, "choose_mds using resend_mds mds%d\n",
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#573: FILE: fs/ceph/mds_client.c:514:
+			dout(20, "choose_mds %p %llx.%llx mds%d (cap)\n",
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#610: FILE: fs/ceph/mds_client.c:551:
+					dout(20, "choose_mds %p %llx.%llx "
 					^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#611: FILE: fs/ceph/mds_client.c:552:
+					dout(20, "choose_mds %p %llx.%llx "
+					     "frag %u mds%d (%d/%d)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#620: FILE: fs/ceph/mds_client.c:561:
+				 * look for the authoritative mds. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#625: FILE: fs/ceph/mds_client.c:566:
+					dout(20, "choose_mds %p %llx.%llx "
 					^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#626: FILE: fs/ceph/mds_client.c:567:
+					dout(20, "choose_mds %p %llx.%llx "
+					     "frag %u mds%d (auth)\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#638: FILE: fs/ceph/mds_client.c:579:
+		 * for the child's dentry name */

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#647: FILE: fs/ceph/mds_client.c:588:
+	dout(20, "choose_mds chose random mds%d\n", mds);
 	^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#651: FILE: fs/ceph/mds_client.c:592:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#678: FILE: fs/ceph/mds_client.c:619:
+static int wait_for_new_map(struct ceph_mds_client *mdsc,
+			     unsigned long timeout)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#683: FILE: fs/ceph/mds_client.c:624:
+	dout(30, "wait_for_new_map enter\n");
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'wait_for_new_map', this function's name, in a string
#683: FILE: fs/ceph/mds_client.c:624:
+	dout(30, "wait_for_new_map enter\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#686: FILE: fs/ceph/mds_client.c:627:
+	ceph_monc_request_mdsmap(&mdsc->client->monc, have+1);
 	                                                  ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#697: FILE: fs/ceph/mds_client.c:638:
+	dout(30, "wait_for_new_map err %d\n", err);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'wait_for_new_map', this function's name, in a string
#697: FILE: fs/ceph/mds_client.c:638:
+	dout(30, "wait_for_new_map err %d\n", err);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#717: FILE: fs/ceph/mds_client.c:658:
+	dout(10, "open_session to mds%d, state %d\n", mds, mstate);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'open_session', this function's name, in a string
#717: FILE: fs/ceph/mds_client.c:658:
+	dout(10, "open_session to mds%d, state %d\n", mds, mstate);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#724: FILE: fs/ceph/mds_client.c:665:
+			dout(30, "open_session mds%d now %d still not active\n",
 			^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'open_session', this function's name, in a string
#724: FILE: fs/ceph/mds_client.c:665:
+			dout(30, "open_session mds%d now %d still not active\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#741: FILE: fs/ceph/mds_client.c:682:
+	dout(30, "open_session waiting on session %p\n", session);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'open_session', this function's name, in a string
#741: FILE: fs/ceph/mds_client.c:682:
+	dout(30, "open_session waiting on session %p\n", session);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#752: FILE: fs/ceph/mds_client.c:693:
+	dout(30, "open_session done waiting on session %p, state %d\n",
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'open_session', this function's name, in a string
#752: FILE: fs/ceph/mds_client.c:693:
+	dout(30, "open_session done waiting on session %p, state %d\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#767: FILE: fs/ceph/mds_client.c:708:
+	dout(10, "remove_session_caps on %p\n", session);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'remove_session_caps', this function's name, in a string
#767: FILE: fs/ceph/mds_client.c:708:
+	dout(10, "remove_session_caps on %p\n", session);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#772: FILE: fs/ceph/mds_client.c:713:
+		dout(10, "removing cap %p, ci is %p, inode is %p\n",
 		^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#776: FILE: fs/ceph/mds_client.c:717:
+	BUG_ON(session->s_nr_caps > 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#807: FILE: fs/ceph/mds_client.c:748:
+	dout(10, "revoke_inode_lease on inode %p, mask %d -> %d\n",
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'revoke_inode_lease', this function's name, in a string
#807: FILE: fs/ceph/mds_client.c:748:
+	dout(10, "revoke_inode_lease on inode %p, mask %d -> %d\n",

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#819: FILE: fs/ceph/mds_client.c:760:
+		iput(inode);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#835: FILE: fs/ceph/mds_client.c:776:
+	dout(20, "trim_session_leases on session %p\n", session);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'trim_session_leases', this function's name, in a string
#835: FILE: fs/ceph/mds_client.c:776:
+	dout(20, "trim_session_leases on session %p\n", session);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#847: FILE: fs/ceph/mds_client.c:788:
+		dout(20, "trim_session_leases inode %p mask %d\n",
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'trim_session_leases', this function's name, in a string
#847: FILE: fs/ceph/mds_client.c:788:
+		dout(20, "trim_session_leases inode %p mask %d\n",

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#853: FILE: fs/ceph/mds_client.c:794:
+		iput(inode);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#866: FILE: fs/ceph/mds_client.c:807:
+		dout(20, "trim_session_leases dentry %p\n", dentry);
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'trim_session_leases', this function's name, in a string
#866: FILE: fs/ceph/mds_client.c:807:
+		dout(20, "trim_session_leases dentry %p\n", dentry);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#883: FILE: fs/ceph/mds_client.c:824:
+	dout(10, "remove_session_leases on %p\n", session);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'remove_session_leases', this function's name, in a string
#883: FILE: fs/ceph/mds_client.c:824:
+	dout(10, "remove_session_leases on %p\n", session);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#889: FILE: fs/ceph/mds_client.c:830:
+		dout(10, "removing lease from inode %p\n", &ci->vfs_inode);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#897: FILE: fs/ceph/mds_client.c:838:
+		dout(10, "removing lease from dentry %p\n", di->dentry);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#912: FILE: fs/ceph/mds_client.c:853:
+	dout(10, "wake_up_session_caps %p mds%d\n", session, session->s_mds);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'wake_up_session_caps', this function's name, in a string
#912: FILE: fs/ceph/mds_client.c:853:
+	dout(10, "wake_up_session_caps %p mds%d\n", session, session->s_mds);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#930: FILE: fs/ceph/mds_client.c:871:
+	dout(20, "kick_requests mds%d\n", mds);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'kick_requests', this function's name, in a string
#930: FILE: fs/ceph/mds_client.c:871:
+	dout(20, "kick_requests mds%d\n", mds);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#936: FILE: fs/ceph/mds_client.c:877:
+		nexttid = reqs[got-1]->r_tid + 1;
 		                  ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#942: FILE: fs/ceph/mds_client.c:883:
+				dout(10, " kicking tid %llu\n", reqs[i]->r_tid);
 				^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#963: FILE: fs/ceph/mds_client.c:904:
+		dout(1, "mds%d session caps stale\n", session->s_mds);
 		^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#966: FILE: fs/ceph/mds_client.c:907:
+	 * with its clients. */

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#969: FILE: fs/ceph/mds_client.c:910:
+		dout(10, "send_renew_caps ignoring mds%d\n", session->s_mds);
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'send_renew_caps', this function's name, in a string
#969: FILE: fs/ceph/mds_client.c:910:
+		dout(10, "send_renew_caps ignoring mds%d\n", session->s_mds);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#973: FILE: fs/ceph/mds_client.c:914:
+	dout(10, "send_renew_caps to mds%d\n", session->s_mds);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'send_renew_caps', this function's name, in a string
#973: FILE: fs/ceph/mds_client.c:914:
+	dout(10, "send_renew_caps to mds%d\n", session->s_mds);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#986: FILE: fs/ceph/mds_client.c:927:
+static void renewed_caps(struct ceph_mds_client *mdsc,
+		  struct ceph_mds_session *session, int is_renew)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#996: FILE: fs/ceph/mds_client.c:937:
+		mdsc->mdsmap->m_session_timeout*HZ;
 		                               ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1000: FILE: fs/ceph/mds_client.c:941:
+			dout(1, "mds%d caps renewed\n", session->s_mds);
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1003: FILE: fs/ceph/mds_client.c:944:
+			dout(1, "mds%d caps still stale\n", session->s_mds);
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1006: FILE: fs/ceph/mds_client.c:947:
+	dout(10, "renewed_caps mds%d ttl now %lu, was %s, now %s\n",
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'renewed_caps', this function's name, in a string
#1006: FILE: fs/ceph/mds_client.c:947:
+	dout(10, "renewed_caps mds%d ttl now %lu, was %s, now %s\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1015: FILE: fs/ceph/mds_client.c:956:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1037: FILE: fs/ceph/mds_client.c:978:
+static void check_all_caps(struct ceph_mds_client *mdsc,
+			 struct ceph_mds_session *session)

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1050: FILE: fs/ceph/mds_client.c:991:
+		iput(inode);
 		^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1058: FILE: fs/ceph/mds_client.c:999:
+static int __close_session(struct ceph_mds_client *mdsc,
+			 struct ceph_mds_session *session)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1063: FILE: fs/ceph/mds_client.c:1004:
+	dout(10, "close_session mds%d state=%s\n", mds,
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1086: FILE: fs/ceph/mds_client.c:1027:
+	dout(10, "flushed_all_caps for mds%d state %s\n", session->s_mds,
 	^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1094: FILE: fs/ceph/mds_client.c:1035:
+
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1121: FILE: fs/ceph/mds_client.c:1062:
+		session->s_ttl = jiffies + HZ*mdsc->mdsmap->m_session_autoclose;
 		                             ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1125: FILE: fs/ceph/mds_client.c:1066:
+		dout(10, "handle_session no session for mds%d\n", mds);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1131: FILE: fs/ceph/mds_client.c:1072:
+	dout(2, "handle_session mds%d %s %p state %s seq %llu\n",
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1157: FILE: fs/ceph/mds_client.c:1098:
+		dout(1, "mds%d caps went stale, renewing\n", session->s_mds);
 		^^^^

WARNING:RETURN_VOID: void function return statements are not generally useful
#1178: FILE: fs/ceph/mds_client.c:1119:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1180: FILE: fs/ceph/mds_client.c:1121:
+
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1201: FILE: fs/ceph/mds_client.c:1142:
+		pathlen = sizeof(u32) + ino1*sizeof(struct ceph_inopath_item);
 		                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1203: FILE: fs/ceph/mds_client.c:1144:
+		pathlen = 2*(sizeof(ino1) + sizeof(u32));
 		           ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1245: FILE: fs/ceph/mds_client.c:1186:
+			dout(10, "create_request path1 %llx/%s\n",
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1248: FILE: fs/ceph/mds_client.c:1189:
+			dout(10, "create_request path2 %llx/%s\n",
 			^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1252: FILE: fs/ceph/mds_client.c:1193:
+	dout_flag(10, DOUT_MASK_PROTOCOL, "create_request op %d=%s -> %p\n", op,
+	     ceph_mds_op_name(op), req);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1254: FILE: fs/ceph/mds_client.c:1195:
+	BUG_ON(p != end);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1266: FILE: fs/ceph/mds_client.c:1207:
+	struct ceph_mds_request *first;
+	if (radix_tree_gang_lookup(&mdsc->request_tree,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1284: FILE: fs/ceph/mds_client.c:1225:
+	dout(30, "do_request on %p\n", req);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1293: FILE: fs/ceph/mds_client.c:1234:
+		dout(10, "do_request timed out\n");
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1301: FILE: fs/ceph/mds_client.c:1242:
+		dout(30, "do_request no mds or not active, waiting for map\n");
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1312: FILE: fs/ceph/mds_client.c:1253:
+	dout(30, "do_request mds%d session %p state %s\n", mds, session,
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1322: FILE: fs/ceph/mds_client.c:1263:
+		dout(30, "do_request session %p not open, state=%s\n",
 		^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1328: FILE: fs/ceph/mds_client.c:1269:
+	BUG_ON(req->r_session);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1341: FILE: fs/ceph/mds_client.c:1282:
+	dout(10, "do_request %p %lld r_expected_cap=%p\n", req, req->r_tid,
 	^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1346: FILE: fs/ceph/mds_client.c:1287:
+	 * it. */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!req->r_reply"
#1364: FILE: fs/ceph/mds_client.c:1305:
+	if (req->r_reply == NULL && !err) {

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1382: FILE: fs/ceph/mds_client.c:1323:
+	dout(30, "do_request %p done, result %d\n", req, err);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1416: FILE: fs/ceph/mds_client.c:1357:
+		dout(1, "handle_reply on unknown tid %llu\n", tid);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1420: FILE: fs/ceph/mds_client.c:1361:
+	dout(10, "handle_reply %p expected_cap=%p\n", req, req->r_expected_cap);
 	^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!req->r_session"
#1432: FILE: fs/ceph/mds_client.c:1373:
+	if (req->r_session == NULL) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1439: FILE: fs/ceph/mds_client.c:1380:
+	BUG_ON(req->r_reply);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1459: FILE: fs/ceph/mds_client.c:1400:
+	dout(10, "handle_reply tid %lld result %d\n", tid, result);
 	^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1486: FILE: fs/ceph/mds_client.c:1427:
+				 * change anyway. */

WARNING:RETURN_VOID: void function return statements are not generally useful
#1519: FILE: fs/ceph/mds_client.c:1460:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1521: FILE: fs/ceph/mds_client.c:1462:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1543: FILE: fs/ceph/mds_client.c:1484:
+	ceph_decode_need(&p, end, sizeof(u64)+2*sizeof(u32), bad);
 	                                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1543: FILE: fs/ceph/mds_client.c:1484:
+	ceph_decode_need(&p, end, sizeof(u64)+2*sizeof(u32), bad);
 	                                       ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1552: FILE: fs/ceph/mds_client.c:1493:
+		dout(10, "forward %llu dne\n", tid);
 		^^^^

WARNING:TYPO_SPELLING: 'dne' may be misspelled - perhaps 'done'?
#1552: FILE: fs/ceph/mds_client.c:1493:
+		dout(10, "forward %llu dne\n", tid);
 		                       ^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1557: FILE: fs/ceph/mds_client.c:1498:
+		dout(10, "forward %llu to mds%d - old seq %d <= %d\n",
 		^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1563: FILE: fs/ceph/mds_client.c:1504:
+		 * forwarded our message for us. */

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1564: FILE: fs/ceph/mds_client.c:1505:
+		dout(10, "forward %llu to mds%d (mds%d fwded)\n", tid, next_mds,
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1573: FILE: fs/ceph/mds_client.c:1514:
+		dout(10, "forward %llu to mds%d (we resend)\n", tid, next_mds);
 		^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1588: FILE: fs/ceph/mds_client.c:1529:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1619: FILE: fs/ceph/mds_client.c:1560:
+	dout(1, "reconnect to recovering mds%d\n", mds);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1631: FILE: fs/ceph/mds_client.c:1572:
+		dout(40, "estimating i need %d bytes for %d caps\n",
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1634: FILE: fs/ceph/mds_client.c:1575:
+		dout(20, "no session for mds%d, will send short reconnect\n",
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1659: FILE: fs/ceph/mds_client.c:1600:
+	dout(10, "session %p state %s\n", session,
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1674: FILE: fs/ceph/mds_client.c:1615:
+		dout(10, " adding cap %p on ino %llx.%llx inode %p\n", cap,
 		^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1685: FILE: fs/ceph/mds_client.c:1626:
+				BUG_ON(err);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1691: FILE: fs/ceph/mds_client.c:1632:
+		ceph_decode_need(&p, end, pathlen+4, needmore);
 		                                 ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1697: FILE: fs/ceph/mds_client.c:1638:
+		BUG_ON(p > end);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1727: FILE: fs/ceph/mds_client.c:1668:
+		struct ceph_mds_snaprealm_reconnect *sr_rec;
+		got = radix_tree_gang_lookup(&mdsc->snap_realms,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1732: FILE: fs/ceph/mds_client.c:1673:
+		dout(10, " adding snap realm %llx seq %lld parent %llx\n",
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1748: FILE: fs/ceph/mds_client.c:1689:
+	dout(10, "final len was %u (guessed %d)\n",
 	^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1749: FILE: fs/ceph/mds_client.c:1690:
+	     (unsigned)reply->front.iov_len, len);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1772: FILE: fs/ceph/mds_client.c:1713:
+	newlen = (len * (session->s_nr_caps+3)) / (num_caps + 1);
 	                                   ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1773: FILE: fs/ceph/mds_client.c:1714:
+	dout(30, "i guessed %d, and did %d of %d caps, retrying with %d\n",
 	^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1780: FILE: fs/ceph/mds_client.c:1721:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1790: FILE: fs/ceph/mds_client.c:1731:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1806: FILE: fs/ceph/mds_client.c:1747:
+	dout(20, "check_new_map new %u old %u\n",
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'check_new_map', this function's name, in a string
#1806: FILE: fs/ceph/mds_client.c:1747:
+	dout(20, "check_new_map new %u old %u\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mdsc->sessions[i]"
#1810: FILE: fs/ceph/mds_client.c:1751:
+		if (mdsc->sessions[i] == NULL)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1816: FILE: fs/ceph/mds_client.c:1757:
+		dout(20, "check_new_map mds%d state %d -> %d (session %s)\n",
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'check_new_map', this function's name, in a string
#1816: FILE: fs/ceph/mds_client.c:1757:
+		dout(20, "check_new_map mds%d state %d -> %d (session %s)\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1821: FILE: fs/ceph/mds_client.c:1762:
+			 * recovering in its place. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1823: FILE: fs/ceph/mds_client.c:1764:
+			 * socket. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1829: FILE: fs/ceph/mds_client.c:1770:
+				 * out now */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1854: FILE: fs/ceph/mds_client.c:1795:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1876: FILE: fs/ceph/mds_client.c:1817:
+	dout(10, "handle_lease from mds%d\n", mds);
 	^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1886: FILE: fs/ceph/mds_client.c:1827:
+	if (dname.len != le32_to_cpu(*(__le32 *)(h+1)))
 	                                          ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1903: FILE: fs/ceph/mds_client.c:1844:
+	dout(20, "handle_lease action is %d, mask %d, ino %llx %p\n", h->action,
 	^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!inode"
#1905: FILE: fs/ceph/mds_client.c:1846:
+	if (inode == NULL) {

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1906: FILE: fs/ceph/mds_client.c:1847:
+		dout(10, "handle_lease no inode %llx\n", vino.ino);
 		^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1910: FILE: fs/ceph/mds_client.c:1851:
+	BUG_ON(h->action != CEPH_MDS_LEASE_REVOKE);  /* for now */

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1920: FILE: fs/ceph/mds_client.c:1861:
+			dout(10, "no parent dentry on inode %p\n", inode);
 			^^^^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1934: FILE: fs/ceph/mds_client.c:1875:
+	iput(inode);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1944: FILE: fs/ceph/mds_client.c:1885:
+	dout(0, "corrupt lease message\n");
 	^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1947: FILE: fs/ceph/mds_client.c:1888:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1964: FILE: fs/ceph/mds_client.c:1905:
+	BUG_ON(inode == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!inode"
#1964: FILE: fs/ceph/mds_client.c:1905:
+	BUG_ON(inode == NULL);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2009: FILE: fs/ceph/mds_client.c:1950:
+		dout(10, "lease_release inode %p (%d) dentry %p -- "
 		^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#2010: FILE: fs/ceph/mds_client.c:1951:
+		dout(10, "lease_release inode %p (%d) dentry %p -- "
+		     "no lease on %d\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2014: FILE: fs/ceph/mds_client.c:1955:
+	BUG_ON(mds < 0);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2016: FILE: fs/ceph/mds_client.c:1957:
+	dout(10, "lease_release inode %p dentry %p %d mask %d to mds%d\n",
 	^^^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2025: FILE: fs/ceph/mds_client.c:1966:
+	lease->first = lease->last = cpu_to_le64(ceph_vino(inode).snap);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2033: FILE: fs/ceph/mds_client.c:1974:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2040: FILE: fs/ceph/mds_client.c:1981:
+	unsigned hz = round_jiffies_relative(HZ * delay);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2041: FILE: fs/ceph/mds_client.c:1982:
+	unsigned hz = round_jiffies_relative(HZ * delay);
+	schedule_delayed_work(&mdsc->delayed_work, hz);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2053: FILE: fs/ceph/mds_client.c:1994:
+	dout(30, "delayed_work\n");
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'delayed_work', this function's name, in a string
#2053: FILE: fs/ceph/mds_client.c:1994:
+	dout(30, "delayed_work\n");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2058: FILE: fs/ceph/mds_client.c:1999:
+	renew_caps = time_after_eq(jiffies, HZ*renew_interval +
 	                                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2065: FILE: fs/ceph/mds_client.c:2006:
+		struct ceph_mds_session *s = __ceph_get_mds_session(mdsc, i);
+		if (s == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!s"
#2065: FILE: fs/ceph/mds_client.c:2006:
+		if (s == NULL)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2068: FILE: fs/ceph/mds_client.c:2009:
+			dout(10, "resending session close request for mds%d\n",
 			^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#2075: FILE: fs/ceph/mds_client.c:2016:
+			derr(1, "mds%d session probably timed out, "
+			     "requesting mds map\n", s->s_mds);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2102: FILE: fs/ceph/mds_client.c:2043:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2132: FILE: fs/ceph/mds_client.c:2073:
+	dout(10, "drop_leases\n");
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'drop_leases', this function's name, in a string
#2132: FILE: fs/ceph/mds_client.c:2073:
+	dout(10, "drop_leases\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#2136: FILE: fs/ceph/mds_client.c:2077:
+		struct ceph_mds_session *s = __ceph_get_mds_session(mdsc, i);
+		if (!s)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2169: FILE: fs/ceph/mds_client.c:2110:
+	dout(10, "close_sessions\n");
 	^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2179: FILE: fs/ceph/mds_client.c:2120:
+		struct ceph_inode_info *ci;
+		ci = list_first_entry(&mdsc->cap_delay_list,

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#2184: FILE: fs/ceph/mds_client.c:2125:
+		iput(&ci->vfs_inode);
 		^^^^

WARNING:TYPO_SPELLING: 'nastyness' may be misspelled - perhaps 'nastiness'?
#2195: FILE: fs/ceph/mds_client.c:2136:
+	 * and other nastyness.
 	             ^^^^^^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2199: FILE: fs/ceph/mds_client.c:2140:
+		dout(10, "closing sessions\n");
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2219: FILE: fs/ceph/mds_client.c:2160:
+		dout(10, "waiting for sessions to close\n");
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2232: FILE: fs/ceph/mds_client.c:2173:
+	dout(10, "stopped\n");
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2237: FILE: fs/ceph/mds_client.c:2178:
+	dout(10, "stop\n");
 	^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2244: FILE: fs/ceph/mds_client.c:2185:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2264: FILE: fs/ceph/mds_client.c:2205:
+	ceph_decode_need(&p, end, sizeof(fsid)+2*sizeof(u32), bad);
 	                                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2264: FILE: fs/ceph/mds_client.c:2205:
+	ceph_decode_need(&p, end, sizeof(fsid)+2*sizeof(u32), bad);
 	                                        ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2273: FILE: fs/ceph/mds_client.c:2214:
+	dout(2, "handle_map epoch %u len %d\n", epoch, (int)maplen);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2279: FILE: fs/ceph/mds_client.c:2220:
+		dout(2, "handle_map epoch %u <= our %u\n",
 		^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2300: FILE: fs/ceph/mds_client.c:2241:
+		 * to reconnect. */

WARNING:RETURN_VOID: void function return statements are not generally useful
#2317: FILE: fs/ceph/mds_client.c:2258:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2319: FILE: fs/ceph/mds_client.c:2260:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2327: FILE: fs/ceph/mds_client.h:1:
+#ifndef _FS_CEPH_MDS_CLIENT_H

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2418: FILE: fs/ceph/mds_client.h:92:
+	/* encoded blob describing snapshot contexts for certain
+	   operations (e.g., open) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2418: FILE: fs/ceph/mds_client.h:92:
+	   operations (e.g., open) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2475: FILE: fs/ceph/mds_client.h:149:
+	unsigned long r_request_started; /* start time for mds request only,
+					    used to measure lease durations */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2475: FILE: fs/ceph/mds_client.h:149:
+					    used to measure lease durations */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2485: FILE: fs/ceph/mds_client.h:159:
+	 * the reply handler */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2535: FILE: fs/ceph/mds_client.h:209:
+extern const char *ceph_mds_op_name(int op);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2537: FILE: fs/ceph/mds_client.h:211:
+extern struct ceph_mds_session *__ceph_get_mds_session(struct ceph_mds_client *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ceph_mds_client *' should also have an identifier name
#2537: FILE: fs/ceph/mds_client.h:211:
+extern struct ceph_mds_session *__ceph_get_mds_session(struct ceph_mds_client *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2539: FILE: fs/ceph/mds_client.h:213:
+extern void ceph_put_mds_session(struct ceph_mds_session *s);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2541: FILE: fs/ceph/mds_client.h:215:
+extern void ceph_send_msg_mds(struct ceph_mds_client *mdsc,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2544: FILE: fs/ceph/mds_client.h:218:
+extern void ceph_mdsc_init(struct ceph_mds_client *mdsc,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2546: FILE: fs/ceph/mds_client.h:220:
+extern void ceph_mdsc_close_sessions(struct ceph_mds_client *mdsc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2547: FILE: fs/ceph/mds_client.h:221:
+extern void ceph_mdsc_stop(struct ceph_mds_client *mdsc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2549: FILE: fs/ceph/mds_client.h:223:
+extern void ceph_mdsc_handle_map(struct ceph_mds_client *mdsc,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2551: FILE: fs/ceph/mds_client.h:225:
+extern void ceph_mdsc_handle_session(struct ceph_mds_client *mdsc,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2553: FILE: fs/ceph/mds_client.h:227:
+extern void ceph_mdsc_handle_reply(struct ceph_mds_client *mdsc,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2555: FILE: fs/ceph/mds_client.h:229:
+extern void ceph_mdsc_handle_forward(struct ceph_mds_client *mdsc,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2558: FILE: fs/ceph/mds_client.h:232:
+extern void ceph_mdsc_handle_lease(struct ceph_mds_client *mdsc,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2561: FILE: fs/ceph/mds_client.h:235:
+extern void ceph_mdsc_lease_release(struct ceph_mds_client *mdsc,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2570: FILE: fs/ceph/mds_client.h:244:
+extern int ceph_mdsc_do_request(struct ceph_mds_client *mdsc,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2572: FILE: fs/ceph/mds_client.h:246:
+extern void ceph_mdsc_put_request(struct ceph_mds_request *req);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2574: FILE: fs/ceph/mds_client.h:248:
+extern void ceph_mdsc_pre_umount(struct ceph_mds_client *mdsc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2576: FILE: fs/ceph/mds_client.h:250:
+extern void ceph_mdsc_handle_reset(struct ceph_mds_client *mdsc, int mds);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2578: FILE: fs/ceph/mds_client.h:252:
+extern void ceph_mdsc_flushed_all_caps(struct ceph_mds_client *mdsc,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2588: FILE: fs/ceph/mdsmap.c:1:
+#include <linux/bug.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2606: FILE: fs/ceph/mdsmap.c:19:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!m"
#2646: FILE: fs/ceph/mdsmap.c:59:
+	if (m == NULL)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2649: FILE: fs/ceph/mdsmap.c:62:
+	ceph_decode_need(p, end, 10*sizeof(u32), bad);
 	                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2660: FILE: fs/ceph/mdsmap.c:73:
+	m->m_addr = kmalloc(m->m_max_mds*sizeof(*m->m_addr), GFP_NOFS);
 	                                ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#2660: FILE: fs/ceph/mdsmap.c:73:
+	m->m_addr = kmalloc(m->m_max_mds*sizeof(*m->m_addr), GFP_NOFS);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2661: FILE: fs/ceph/mdsmap.c:74:
+	m->m_state = kzalloc(m->m_max_mds*sizeof(*m->m_state), GFP_NOFS);
 	                                 ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#2661: FILE: fs/ceph/mdsmap.c:74:
+	m->m_state = kzalloc(m->m_max_mds*sizeof(*m->m_state), GFP_NOFS);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!m->m_addr"
#2662: FILE: fs/ceph/mdsmap.c:75:
+	if (m->m_addr == NULL || m->m_state == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!m->m_state"
#2662: FILE: fs/ceph/mdsmap.c:75:
+	if (m->m_addr == NULL || m->m_state == NULL)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2667: FILE: fs/ceph/mdsmap.c:80:
+	ceph_decode_need(p, end, n*2*sizeof(u32), bad);
 	                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2667: FILE: fs/ceph/mdsmap.c:80:
+	ceph_decode_need(p, end, n*2*sizeof(u32), bad);
 	                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2677: FILE: fs/ceph/mdsmap.c:90:
+	*p += n*(sizeof(u32)+sizeof(u64));
 	       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2677: FILE: fs/ceph/mdsmap.c:90:
+	*p += n*(sizeof(u32)+sizeof(u64));
 	                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2682: FILE: fs/ceph/mdsmap.c:95:
+			 n*(sizeof(u32)+sizeof(struct ceph_entity_name)+
 			  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2682: FILE: fs/ceph/mdsmap.c:95:
+			 n*(sizeof(u32)+sizeof(struct ceph_entity_name)+
 			               ^

CHECK:SPACING: space preferred before that '+' (ctx:VxE)
#2682: FILE: fs/ceph/mdsmap.c:95:
+			 n*(sizeof(u32)+sizeof(struct ceph_entity_name)+
 			                                               ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2694: FILE: fs/ceph/mdsmap.c:107:
+	dout(30, "mdsmap_decode success epoch %u\n", m->m_epoch);
 	^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2717: FILE: fs/ceph/mdsmap.h:1:
+#ifndef _FS_CEPH_MDSMAP_H

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2747: FILE: fs/ceph/mdsmap.h:31:
+	BUG_ON(w < 0);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2753: FILE: fs/ceph/mdsmap.h:37:
+extern int ceph_mdsmap_get_random_mds(struct ceph_mdsmap *m);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2754: FILE: fs/ceph/mdsmap.h:38:
+extern struct ceph_mdsmap *ceph_mdsmap_decode(void **p, void *end);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2755: FILE: fs/ceph/mdsmap.h:39:
+extern void ceph_mdsmap_destroy(struct ceph_mdsmap *m);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000204217.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 172 warnings, 95 checks, 2680 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000204217.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
