WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#56: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#61: FILE: arch/i386/kernel/geode.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#73: FILE: arch/i386/kernel/geode.c:13:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#100: FILE: arch/i386/kernel/geode.c:40:
+			printk(KERN_ERR "geode:  Couldn't initialize '%s'\n", lbars[i].name);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#106: FILE: arch/i386/kernel/geode.c:46:
+	BUG_ON(dev >= ARRAY_SIZE(lbars));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#170: FILE: arch/i386/kernel/geode.c:110:
+EXPORT_SYMBOL_GPL(geode_gpio_set_irq);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#205: FILE: arch/i386/kernel/geode.c:145:
+EXPORT_SYMBOL_GPL(geode_gpio_setup_event);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#223: FILE: include/asm-i386/geode.h:1:
+/*

WARNING:INCLUDE_LINUX: Use #include <linux/processor.h> instead of <asm/processor.h>
#235: FILE: include/asm-i386/geode.h:13:
+#include <asm/processor.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#236: FILE: include/asm-i386/geode.h:14:
+#include <asm/io.h>

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#245: FILE: include/asm-i386/geode.h:23:
+extern int geode_get_dev_base(unsigned int dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#344: FILE: include/asm-i386/geode.h:122:
+extern void geode_gpio_set(unsigned int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#344: FILE: include/asm-i386/geode.h:122:
+extern void geode_gpio_set(unsigned int, unsigned int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#344: FILE: include/asm-i386/geode.h:122:
+extern void geode_gpio_set(unsigned int, unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#345: FILE: include/asm-i386/geode.h:123:
+extern void geode_gpio_clear(unsigned int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#345: FILE: include/asm-i386/geode.h:123:
+extern void geode_gpio_clear(unsigned int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#345: FILE: include/asm-i386/geode.h:123:
+extern void geode_gpio_clear(unsigned int, unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#346: FILE: include/asm-i386/geode.h:124:
+extern int geode_gpio_isset(unsigned int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#346: FILE: include/asm-i386/geode.h:124:
+extern int geode_gpio_isset(unsigned int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#346: FILE: include/asm-i386/geode.h:124:
+extern int geode_gpio_isset(unsigned int, unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#347: FILE: include/asm-i386/geode.h:125:
+extern void geode_gpio_setup_event(unsigned int, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#347: FILE: include/asm-i386/geode.h:125:
+extern void geode_gpio_setup_event(unsigned int, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#347: FILE: include/asm-i386/geode.h:125:
+extern void geode_gpio_setup_event(unsigned int, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#347: FILE: include/asm-i386/geode.h:125:
+extern void geode_gpio_setup_event(unsigned int, int, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#348: FILE: include/asm-i386/geode.h:126:
+extern void geode_gpio_set_irq(unsigned int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#348: FILE: include/asm-i386/geode.h:126:
+extern void geode_gpio_set_irq(unsigned int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#348: FILE: include/asm-i386/geode.h:126:
+extern void geode_gpio_set_irq(unsigned int, unsigned int);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000410138.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 20 warnings, 7 checks, 322 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000410138.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
