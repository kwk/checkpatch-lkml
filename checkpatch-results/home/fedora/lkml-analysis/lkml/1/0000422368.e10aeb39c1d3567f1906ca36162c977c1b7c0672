WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
On Tue, 05 Jun 2007 14:05:36 +0200 Zoltan Boszormenyi <zboszor@dunaweb.hu> wrote:

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: drivers/ata/sata_nv.c:196:
+ ^INV_INT_BACKOUT_MCP55^I^I= 0x10,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#99: FILE: drivers/ata/sata_nv.c:196:
+ ^INV_INT_BACKOUT_MCP55^I^I= 0x10,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: drivers/ata/sata_nv.c:196:
+ ^INV_INT_BACKOUT_MCP55^I^I= 0x10,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: drivers/ata/sata_nv.c:197:
+ ^INV_INT_SDBFIS_MCP55^I^I= 0x20,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#100: FILE: drivers/ata/sata_nv.c:197:
+ ^INV_INT_SDBFIS_MCP55^I^I= 0x20,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: drivers/ata/sata_nv.c:197:
+ ^INV_INT_SDBFIS_MCP55^I^I= 0x20,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: drivers/ata/sata_nv.c:198:
+ ^INV_INT_DHREGFIS_MCP55^I^I= 0x40,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#101: FILE: drivers/ata/sata_nv.c:198:
+ ^INV_INT_DHREGFIS_MCP55^I^I= 0x40,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: drivers/ata/sata_nv.c:198:
+ ^INV_INT_DHREGFIS_MCP55^I^I= 0x40,$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#125: FILE: drivers/ata/sata_nv.c:309:
+static void ncq_sactive_start (struct ata_queued_cmd *qc);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#126: FILE: drivers/ata/sata_nv.c:310:
+static u32 ncq_sactive_value (struct ata_port *ap);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#132: FILE: drivers/ata/sata_nv.c:316:
+static u32 ncq_ownfisintr_value (struct ata_port *ap);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#133: FILE: drivers/ata/sata_nv.c:317:
+void ncq_hotplug(struct ata_port *ap, u32 fis);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scsi_cmnd *' should also have an identifier name
#137: FILE: drivers/ata/sata_nv.c:321:
+			    void (*done)(struct scsi_cmnd *));

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#142: FILE: drivers/ata/sata_nv.c:326:
+#define NPRINTK(fmt, args...) printk(KERN_ERR "%s: " fmt, __FUNCTION__, ## args)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#142: FILE: drivers/ata/sata_nv.c:326:
+#define NPRINTK(fmt, args...) printk(KERN_ERR "%s: " fmt, __FUNCTION__, ## args)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#144: FILE: drivers/ata/sata_nv.c:328:
+#define NVPRINTK(fmt, args...) printk(KERN_ERR "%s: " fmt, __FUNCTION__, ## args)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#144: FILE: drivers/ata/sata_nv.c:328:
+#define NVPRINTK(fmt, args...) printk(KERN_ERR "%s: " fmt, __FUNCTION__, ## args)

ERROR:SPACING: space required before the open parenthesis '('
#146: FILE: drivers/ata/sata_nv.c:330:
+#define NVPRINTK(fmt, args...) do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#149: FILE: drivers/ata/sata_nv.c:333:
+#define NPRINTK(fmt, args...) do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#150: FILE: drivers/ata/sata_nv.c:334:
+#define NVPRINTK(fmt, args...) do { } while(0)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#154: FILE: drivers/ata/sata_nv.c:338:
+/*    cmd_stop
+ |_byte 3__||__byte 2____||__byte 1___||__byte 0_____|

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#168: FILE: drivers/ata/sata_nv.c:352:
+	u32		dhfis_flags;/* each bit is responding to one cmd,
+					if receiving dh fis ,bit set one.*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#168: FILE: drivers/ata/sata_nv.c:352:
+					if receiving dh fis ,bit set one.*/

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: drivers/ata/sata_nv.c:357:
+ ^Iconst^Istruct nv_ncq_operations^I*ops;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#173: FILE: drivers/ata/sata_nv.c:357:
+ ^Iconst^Istruct nv_ncq_operations^I*ops;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: drivers/ata/sata_nv.c:357:
+ ^Iconst^Istruct nv_ncq_operations^I*ops;$

WARNING:SPACING: missing space after struct definition
#177: FILE: drivers/ata/sata_nv.c:361:
+struct  nv_ncq_operations{

WARNING:SPACING: Unnecessary space before function pointer arguments
#179: FILE: drivers/ata/sata_nv.c:363:
+	void	(*sactive_start) (struct ata_queued_cmd *qc);

WARNING:SPACING: Unnecessary space before function pointer arguments
#180: FILE: drivers/ata/sata_nv.c:364:
+	u32	(*sactive_value) (struct ata_port *ap);

WARNING:SPACING: Unnecessary space before function pointer arguments
#181: FILE: drivers/ata/sata_nv.c:365:
+	u32	(*tag_value) (struct ata_port *ap);

WARNING:SPACING: Unnecessary space before function pointer arguments
#182: FILE: drivers/ata/sata_nv.c:366:
+	u32	(*check_ownfis) (struct ata_port *ap);/* get the channel 's fis value */

WARNING:SPACING: Unnecessary space before function pointer arguments
#183: FILE: drivers/ata/sata_nv.c:367:
+	void	(*clear_singlefis) (struct ata_port *ap,u32 flag);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#183: FILE: drivers/ata/sata_nv.c:367:
+	void	(*clear_singlefis) (struct ata_port *ap,u32 flag);
 	    	                                       ^

WARNING:SPACING: Unnecessary space before function pointer arguments
#184: FILE: drivers/ata/sata_nv.c:368:
+	int	(*qc_defer) (struct ata_port *ap);

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#194: FILE: drivers/ata/sata_nv.c:378:
+	.check_ownfis		= ncq_ownfisintr_value ,
 	             		                       ^

WARNING:SPACING: space prohibited before semicolon
#208: FILE: drivers/ata/sata_nv.c:392:
+	pp->cmd_stop |= ((val + 1) << 8) ;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#245: FILE: drivers/ata/sata_nv.c:423:
+	{ PCI_VDEVICE(NVIDIA, PCI_DEVICE_ID_NVIDIA_NFORCE_MCP55_SATA2),MCP55 },
 	                                                              ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#318: FILE: drivers/ata/sata_nv.c:683:
+		.flags	        = ATA_FLAG_SATA | ATA_FLAG_NO_LEGACY ,
 		      	                                             ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#332: FILE: drivers/ata/sata_nv.c:699:
+static int ncq_enabled = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#340: FILE: drivers/ata/sata_nv.c:955:
+static struct ata_device * ata_find_dev(struct ata_port *ap, int id)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#364: FILE: drivers/ata/sata_nv.c:979:
+static struct ata_device * __ata_scsi_find_dev(struct ata_port *ap,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#365: FILE: drivers/ata/sata_nv.c:980:
+static struct ata_device * __ata_scsi_find_dev(struct ata_port *ap,
+					const struct scsi_device *scsidev)

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#391: FILE: drivers/ata/sata_nv.c:1006:
+	struct Scsi_Host *shost = scsidev->host;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#402: FILE: drivers/ata/sata_nv.c:1017:
+			switch (cmd->cmnd[0]) {
+				case READ_6:
+				case READ_10:
+				case READ_16:
[...]
+				case WRITE_6:
+				case WRITE_10:
+				case WRITE_16: 	flag=1;break;
+				default: 	flag=0;break;

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#409: FILE: drivers/ata/sata_nv.c:1024:
+^I^I^I^Icase WRITE_16: ^Iflag=1;break;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#409: FILE: drivers/ata/sata_nv.c:1024:
+				case WRITE_16: 	flag=1;break;
 				               	    ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#409: FILE: drivers/ata/sata_nv.c:1024:
+				case WRITE_16: 	flag=1;break;
 				               	      ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#409: FILE: drivers/ata/sata_nv.c:1024:
+				case WRITE_16: 	flag=1;break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#410: FILE: drivers/ata/sata_nv.c:1025:
+^I^I^I^Idefault: ^Iflag=0;break;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#410: FILE: drivers/ata/sata_nv.c:1025:
+				default: 	flag=0;break;
 				         	    ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#410: FILE: drivers/ata/sata_nv.c:1025:
+				default: 	flag=0;break;
 				         	      ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#410: FILE: drivers/ata/sata_nv.c:1025:
+				default: 	flag=0;break;

WARNING:SPACING: space prohibited before semicolon
#440: FILE: drivers/ata/sata_nv.c:1678:
+	struct nv_port_priv *pp ;

WARNING:LINE_SPACING: Missing a blank line after declarations
#445: FILE: drivers/ata/sata_nv.c:1683:
+	u32 irq_stat;
+	spin_lock_irqsave(&host->lock, flags);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#452: FILE: drivers/ata/sata_nv.c:1690:
+		if (ap && !(ap->flags & ATA_FLAG_DISABLED) ) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#458: FILE: drivers/ata/sata_nv.c:1696:
+			} else {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#460: FILE: drivers/ata/sata_nv.c:1698:
+					pp->ops->clear_singlefis(ap, 0xfff0); //reserve Hotplug and INT intr

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:LINE_SPACING: Please don't use multiple blank lines
#465: FILE: drivers/ata/sata_nv.c:1703:
+
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#466: FILE: drivers/ata/sata_nv.c:1704:
+
+		}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#543: FILE: drivers/ata/sata_nv.c:1904:
+
+

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#549: FILE: drivers/ata/sata_nv.c:1910:
+	NPRINTK("shost->host_failed :%x shost->host_busy:%x \n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#550: FILE: drivers/ata/sata_nv.c:1911:
+	NPRINTK("shost->host_failed :%x shost->host_busy:%x \n",
+						ap->scsi_host->host_failed,

WARNING:SPLIT_STRING: quoted string split across lines
#554: FILE: drivers/ata/sata_nv.c:1915:
+	NPRINTK("ap->qc_active:%x, pp->qc_active:%x defer_bits:%x cmd_stop:%x "
+					"current_tag:%x dhfis_flags:%x \n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#554: FILE: drivers/ata/sata_nv.c:1915:
+					"current_tag:%x dhfis_flags:%x \n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#590: FILE: drivers/ata/sata_nv.c:1951:
+	ata_bmdma_drive_eh(ap, nv_std_prereset, ata_std_softreset,
+				nv_hardreset, ata_std_postreset);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#596: FILE: drivers/ata/sata_nv.c:1957:
+
+}

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#620: FILE: drivers/ata/sata_nv.c:1981:
+	     pdev->device == PCI_DEVICE_ID_NVIDIA_NFORCE_MCP55_SATA2)
+		&&  rev < 0xa2)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#626: FILE: drivers/ata/sata_nv.c:1987:
+	if(ncq_enabled){
+	writel(flags | NV_CTL_PRI_SWNCQ | NV_CTL_SEC_SWNCQ, mmio + NV_CTL_MCP55);

ERROR:SPACING: space required before the open brace '{'
#626: FILE: drivers/ata/sata_nv.c:1987:
+	if(ncq_enabled){

ERROR:SPACING: space required before the open parenthesis '('
#626: FILE: drivers/ata/sata_nv.c:1987:
+	if(ncq_enabled){

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#629: FILE: drivers/ata/sata_nv.c:1990:
+	for (i = 0; i < host->n_ports; i++)
+	    host->ports[i]->flags |= ATA_FLAG_NCQ;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#648: FILE: drivers/ata/sata_nv.c:2009:
+		writeb(readb(mmio + ATA_DMA_CMD) & ~ATA_DMA_START,
+			mmio + ATA_DMA_CMD);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#652: FILE: drivers/ata/sata_nv.c:2013:
+		iowrite8(ioread8(ap->ioaddr.bmdma_addr + ATA_DMA_CMD) & ~ATA_DMA_START,
+			ap->ioaddr.bmdma_addr + ATA_DMA_CMD);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#658: FILE: drivers/ata/sata_nv.c:2019:
+/**
+*	nv_std_qc_defer

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#705: FILE: drivers/ata/sata_nv.c:2066:
+	pp->prd = dma_alloc_coherent(dev, ATA_PRD_TBL_SZ*ATA_MAX_QUEUE, &pp->prd_dma, GFP_KERNEL);
 	                                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#728: FILE: drivers/ata/sata_nv.c:2089:
+	dma_free_coherent(dev, ATA_PRD_TBL_SZ*ATA_MAX_QUEUE, pp->prd, pp->prd_dma);
 	                                     ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!qc->__sg"
#751: FILE: drivers/ata/sata_nv.c:2112:
+	WARN_ON(qc->__sg == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#754: FILE: drivers/ata/sata_nv.c:2115:
+	prd = (struct ata_prd*)((long)pp->prd + ATA_PRD_TBL_SZ*qc->tag);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#754: FILE: drivers/ata/sata_nv.c:2115:
+	prd = (struct ata_prd*)((long)pp->prd + ATA_PRD_TBL_SZ*qc->tag);
 	                                                      ^

CHECK:SPACING: No space is necessary after a cast
#765: FILE: drivers/ata/sata_nv.c:2126:
+		addr = (u32) sg_dma_address(sg);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#787: FILE: drivers/ata/sata_nv.c:2148:
+static void ncq_sactive_start (struct ata_queued_cmd *qc)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#800: FILE: drivers/ata/sata_nv.c:2161:
+static u32 ncq_sactive_value (struct ata_port *ap)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#810: FILE: drivers/ata/sata_nv.c:2171:
+static u32 ncq_ownfisintr_value (struct ata_port *ap)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around qc->tf
#833: FILE: drivers/ata/sata_nv.c:2194:
+	struct ata_taskfile	*tf = &(qc->tf);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#858: FILE: drivers/ata/sata_nv.c:2219:
+
+		}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#868: FILE: drivers/ata/sata_nv.c:2229:
+
+

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#880: FILE: drivers/ata/sata_nv.c:2241:
+	NVPRINTK("id:0x%x sactive stat0:%x, stat1:%x tag:%x \n", ap->id, stat0, stat1, qc->tag);

WARNING:SPACING: space prohibited before semicolon
#885: FILE: drivers/ata/sata_nv.c:2246:
+	pp->dhfis_flags &= ~(1 << qc->tag) ;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#898: FILE: drivers/ata/sata_nv.c:2259:
+	if (defer_byte(pp->cmd_stop)) {
+		NPRINTK("ERRCMD_STOP\n");
+	}

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#917: FILE: drivers/ata/sata_nv.c:2278:
+		NPRINTK("NOT DHFIS intr  dhfis_flags:%x pp->qc_active:%x\n",pp->dhfis_flags, pp->qc_active);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#917: FILE: drivers/ata/sata_nv.c:2278:
+		NPRINTK("NOT DHFIS intr  dhfis_flags:%x pp->qc_active:%x\n",pp->dhfis_flags, pp->qc_active);
 		                                                           ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#922: FILE: drivers/ata/sata_nv.c:2283:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#934: FILE: drivers/ata/sata_nv.c:2295:
+^Itag ^I^I= pp->ops->tag_value(ap);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#936: FILE: drivers/ata/sata_nv.c:2297:
+
+

WARNING:SPLIT_STRING: quoted string split across lines
#938: FILE: drivers/ata/sata_nv.c:2299:
+	NPRINTK("id:0x%x cmd_sended:%x fis:0x%X dma_stat:0x%X "
+		"sactive:0x%X cmd_stop:0x%X apsactive:%x tag:%X ",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#951: FILE: drivers/ata/sata_nv.c:2312:
+	printk("SErr:0x%x SStat:0x%x SCtl:0x%x ", serror, sstatus, sctl);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#953: FILE: drivers/ata/sata_nv.c:2314:
+			printk(" backout");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#956: FILE: drivers/ata/sata_nv.c:2317:
+			printk(" dhfis");

ERROR:SPACING: space required before the open parenthesis '('
#958: FILE: drivers/ata/sata_nv.c:2319:
+		if(fis & NV_INT_DMASETUP_MCP55)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#959: FILE: drivers/ata/sata_nv.c:2320:
+			printk(" dmasetup");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#962: FILE: drivers/ata/sata_nv.c:2323:
+			printk(" sdbfis");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#964: FILE: drivers/ata/sata_nv.c:2325:
+			printk("\n");

WARNING:RETURN_VOID: void function return statements are not generally useful
#967: FILE: drivers/ata/sata_nv.c:2328:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#973: FILE: drivers/ata/sata_nv.c:2334:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1018: FILE: drivers/ata/sata_nv.c:2379:
+
+

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#1026: FILE: drivers/ata/sata_nv.c:2387:
+	if (fis &NV_INT_BACKOUT_MCP55) {
 	        ^

WARNING:SPACING: space prohibited before semicolon
#1028: FILE: drivers/ata/sata_nv.c:2389:
+		pp->retry++ ;

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1030: FILE: drivers/ata/sata_nv.c:2391:
+		NPRINTK("BACK OUT FIS:%x \n", fis);

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#1039: FILE: drivers/ata/sata_nv.c:2400:
+	if (fis &NV_INT_DHREGFIS_MCP55) {
 	        ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1065: FILE: drivers/ata/sata_nv.c:2426:
+
+

WARNING:SPLIT_STRING: quoted string split across lines
#1067: FILE: drivers/ata/sata_nv.c:2428:
+	NPRINTK("id:0x%x retry:%x ap->qc_active:0x%x pp->qc_active:0x%x "
+		"defer_bits:0x%x cmd_stop:0x%x current_tag:%X pp->dhfis_flags:0x%x\n",

WARNING:RETURN_VOID: void function return statements are not generally useful
#1078: FILE: drivers/ata/sata_nv.c:2439:
+	return;
+}

WARNING:SPLIT_STRING: quoted string split across lines
#1102: FILE: drivers/ata/sata_nv.c:2463:
+		ata_port_printk(ap, KERN_ERR, "illegal qc_active transition "
+				"(%08x->%08x)\n", ap->qc_active, sactive);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1111: FILE: drivers/ata/sata_nv.c:2472:
+		if ((qc = ata_qc_from_tag(ap, i))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1135: FILE: drivers/ata/sata_nv.c:2496:
+	if (ap->qc_active > 0 && pp->qc_active == (1 << pp->current_tag) &&
+			back_byte(pp->cmd_stop)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1136: FILE: drivers/ata/sata_nv.c:2497:
+			back_byte(pp->cmd_stop)) {
+

WARNING:SPACING: space prohibited before semicolon
#1178: FILE: drivers/ata/sata_nv.c:2539:
+	unsigned int rw ;

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1194: FILE: drivers/ata/sata_nv.c:2555:
+	iowrite32(pp->prd_dma + ATA_PRD_TBL_SZ*(qc->tag), ap->ioaddr.bmdma_addr + ATA_DMA_TABLE_OFS);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1194: FILE: drivers/ata/sata_nv.c:2555:
+	iowrite32(pp->prd_dma + ATA_PRD_TBL_SZ*(qc->tag), ap->ioaddr.bmdma_addr + ATA_DMA_TABLE_OFS);
 	                                      ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around qc->tag
#1194: FILE: drivers/ata/sata_nv.c:2555:
+	iowrite32(pp->prd_dma + ATA_PRD_TBL_SZ*(qc->tag), ap->ioaddr.bmdma_addr + ATA_DMA_TABLE_OFS);

ERROR:SPACING: space required after that close brace '}'
#1233: FILE: drivers/ata/sata_nv.c:2640:
+	}else if (type == MCP55)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000422368.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 29 errors, 63 warnings, 31 checks, 1165 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000422368.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
