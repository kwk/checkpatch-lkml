ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#469: FILE: drivers/ide/ide-iops.c:524:
+		if (OK_STAT((stat = hwif->INB(IDE_STATUS_REG)), good, bad)) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#485: FILE: drivers/ide/ide-iops.c:538:
+int ide_wait_stat(ide_startstop_t *startstop, ide_drive_t *drive, u8 good, u8 bad, unsigned long timeout)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'drive->failures > drive->max_failures'
#491: FILE: drivers/ide/ide-iops.c:544:
+	if (drive->max_failures && (drive->failures > drive->max_failures)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#576: FILE: drivers/ide/ide-iops.c:814:
+				BUSY_STAT|DRQ_STAT|ERR_STAT,
 				         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#576: FILE: drivers/ide/ide-iops.c:814:
+				BUSY_STAT|DRQ_STAT|ERR_STAT,
 				                  ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hwif->set_pio_mode"
#612: FILE: drivers/ide/ide-lib.c:385:
+	if (hwif->set_pio_mode == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hwif->set_dma_mode"
#619: FILE: drivers/ide/ide-lib.c:392:
+	if (hwif->set_dma_mode == NULL) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#629: FILE: drivers/ide/ide-lib.c:402:
+		return 0;
+	} else {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hwif->set_dma_mode"
#639: FILE: drivers/ide/ide-lib.c:412:
+	if (hwif->set_dma_mode == NULL)

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#647: FILE: drivers/ide/ide-lib.c:420:
+		return 0;
+	} else {

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#653: FILE: drivers/ide/ide-lib.c:426:
+EXPORT_SYMBOL_GPL(ide_set_dma_mode);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hwif->set_dma_mode"
#674: FILE: drivers/ide/ide-lib.c:442:
+	if (hwif->set_dma_mode == NULL)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#754: FILE: drivers/ide/legacy/ide_platform.c:68:
+	hwif->chipset = hwif->hw.chipset = ide_generic;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1230: FILE: drivers/ide/pci/cs5520.c:141:
 static void __devinit init_hwif_cs5520(ide_hwif_t *hwif)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1246: FILE: drivers/ide/pci/cs5520.c:147:
+		hwif->drives[1].autotune = hwif->drives[0].autotune = 1;

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1325: FILE: drivers/ide/pci/cs5530.c:65:
+	outl(cs5530_pio_timings[format][pio], basereg + ((drive->dn & 1)<<3));
 	                                                                ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1376: FILE: drivers/ide/pci/cs5530.c:313:
 static int __devinit cs5530_init_one(struct pci_dev *dev, const struct pci_device_id *id)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1424: FILE: drivers/ide/pci/cs5535.c:191:
 static void __devinit init_hwif_cs5535(ide_hwif_t *hwif)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1434: FILE: drivers/ide/pci/cs5535.c:198:
+	hwif->drives[1].autotune = hwif->drives[0].autotune = 1;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1451: FILE: drivers/ide/pci/cs5535.c:214:
+	hwif->drives[1].autodma = hwif->drives[0].autodma = hwif->autodma;

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1454: FILE: drivers/ide/pci/cs5535.c:217:
 static ide_pci_device_t cs5535_chipset __devinitdata = {

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#1680: FILE: drivers/ide/pci/it821x.c:249:
+	static u16 pio_timings[]= { 0xAA88, 0xA382, 0xA181, 0x3332, 0x3121 };
 	                        ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1776: FILE: drivers/ide/pci/it821x.c:599:
+	if (idev->smart == 0) {
[...]
 		hwif->dma_start = &it821x_dma_start;
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1786: FILE: drivers/ide/pci/it821x.c:606:
+	} else

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1824: FILE: drivers/ide/pci/jmicron.c:127:
 static void __devinit init_hwif_jmicron(ide_hwif_t *hwif)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2052: FILE: drivers/ide/pci/piix.c:247:
+		default:		return;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2370: FILE: drivers/ide/pci/sgiioc4.c:624:
 static int __devinit

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2619: FILE: drivers/ide/pci/slc90e66.c:122:
+		default:		return;

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2719: FILE: drivers/ide/pci/triflex.c:109:
 static void __devinit init_hwif_triflex(ide_hwif_t *hwif)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2820: FILE: drivers/ide/ppc/pmac.c:395:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:CAMELCASE: Avoid CamelCase: <accessTicks>
#2960: FILE: drivers/ide/ppc/pmac.c:579:
+			(accessTicks << TR_66_PIO_ACCESS_SHIFT) |

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <recTicks>
#2961: FILE: drivers/ide/ppc/pmac.c:580:
+			(recTicks << TR_66_PIO_RECOVERY_SHIFT);

ERROR:CODE_INDENT: code indent should use tabs where possible
#3016: FILE: drivers/ide/ppc/pmac.c:689:
+^I^I ^Iu8 speed)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3016: FILE: drivers/ide/ppc/pmac.c:689:
+^I^I ^Iu8 speed)$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3029: FILE: drivers/ide/ppc/pmac.c:703:
+			BUG();

CHECK:CAMELCASE: Avoid CamelCase: <cycleTime>
#3038: FILE: drivers/ide/ppc/pmac.c:709:
+		cycleTime = max_t(int, id->eide_dma_time, cycleTime);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3154: FILE: drivers/ide/ppc/pmac.c:875:
+^Ipmac_ide_do_update_timings(drive);^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#3329: FILE: drivers/ide/ppc/pmac.c:1828:
+	hwif->drives[1].autodma = hwif->drives[0].autodma = hwif->autodma;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#3356: FILE: include/linux/ide.h:708:
+	void	(*set_dma_mode)(ide_drive_t *, const u8);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const u8' should also have an identifier name
#3356: FILE: include/linux/ide.h:708:
+	void	(*set_dma_mode)(ide_drive_t *, const u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_startstop_t *' should also have an identifier name
#3374: FILE: include/linux/ide.h:1082:
+int ide_wait_stat(ide_startstop_t *, ide_drive_t *, u8, u8, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#3374: FILE: include/linux/ide.h:1082:
+int ide_wait_stat(ide_startstop_t *, ide_drive_t *, u8, u8, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#3374: FILE: include/linux/ide.h:1082:
+int ide_wait_stat(ide_startstop_t *, ide_drive_t *, u8, u8, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#3374: FILE: include/linux/ide.h:1082:
+int ide_wait_stat(ide_startstop_t *, ide_drive_t *, u8, u8, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#3374: FILE: include/linux/ide.h:1082:
+int ide_wait_stat(ide_startstop_t *, ide_drive_t *, u8, u8, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#3423: FILE: include/linux/ide.h:1421:
+int ide_set_pio_mode(ide_drive_t *, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#3423: FILE: include/linux/ide.h:1421:
+int ide_set_pio_mode(ide_drive_t *, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#3424: FILE: include/linux/ide.h:1422:
+int ide_set_dma_mode(ide_drive_t *, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#3424: FILE: include/linux/ide.h:1422:
+int ide_set_dma_mode(ide_drive_t *, u8);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000370627.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 25 warnings, 18 checks, 2938 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000370627.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
