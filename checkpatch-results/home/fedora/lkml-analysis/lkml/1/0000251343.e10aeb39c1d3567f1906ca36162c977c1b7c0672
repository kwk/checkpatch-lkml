WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
controller can be used to schedule and shape traffic belonging to the task(s)

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
# make a cgroup of file transfer processes and assign it a uniqe classid

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:TYPO_SPELLING: 'uniqe' may be misspelled - perhaps 'unique'?
#51: 
# make a cgroup of file transfer processes and assign it a uniqe classid
                                                           ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
# of 0x10 - this will be used lated to direct packets.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
# Now create a HTB class that rate limits traffic to 100mbits and attach

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
# a filter to direct all traffic from cgroup file_transfer to this new class.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#83: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#88: FILE: include/linux/cgroup_tc.h:1:
+#ifndef __LINUX_CGROUP_TC_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#101: FILE: include/linux/cgroup_tc.h:14:
+#define cgroup_tc_set_skb_classid(sk, skb) \
+	skb->cgroup_classid = sk->sk_cgroup_classid

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'sk' may be better as '(sk)' to avoid precedence issues
#101: FILE: include/linux/cgroup_tc.h:14:
+#define cgroup_tc_set_skb_classid(sk, skb) \
+	skb->cgroup_classid = sk->sk_cgroup_classid

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'skb' may be better as '(skb)' to avoid precedence issues
#101: FILE: include/linux/cgroup_tc.h:14:
+#define cgroup_tc_set_skb_classid(sk, skb) \
+	skb->cgroup_classid = sk->sk_cgroup_classid

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#194: FILE: kernel/tc_cgroup.c:1:
+/*

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#212: FILE: kernel/tc_cgroup.c:19:
+static inline struct tc_cgroup *cgroup_to_tc(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: kernel/tc_cgroup.c:32:
+	tc_classid =  container_of(task_subsys_state(tsk, tc_subsys_id),
+					 struct tc_cgroup, css)->classid;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: kernel/tc_cgroup.c:44:
+static struct cgroup_subsys_state *tc_create(struct cgroup_subsys *ss,
+						struct cgroup *cgroup)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#254: FILE: kernel/tc_cgroup.c:61:
+static void tc_destroy(struct cgroup_subsys *ss,
+			struct cgroup *cgroup)

CHECK:SPACING: No space is necessary after a cast
#269: FILE: kernel/tc_cgroup.c:76:
+	tc->classid = (unsigned int) (val & 0xffffffff);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#277: FILE: kernel/tc_cgroup.c:84:
+	struct tc_cgroup *tc = cgroup_to_tc(cont);
+	return tc->classid;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#291: FILE: kernel/tc_cgroup.c:98:
+	int err;
+	err = cgroup_add_files(cont, ss, tc_files, ARRAY_SIZE(tc_files));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000251343.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 11 warnings, 7 checks, 318 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000251343.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
