WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#386: FILE: drivers/ide/ide-xfer-mode.c:1:
+#include <linux/types.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#393: FILE: drivers/ide/ide-xfer-mode.c:8:
+static const char *udma_str[] =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#394: FILE: drivers/ide/ide-xfer-mode.c:9:
+static const char *udma_str[] =
+	 { "UDMA/16", "UDMA/25",  "UDMA/33",  "UDMA/44",

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#396: FILE: drivers/ide/ide-xfer-mode.c:11:
+static const char *mwdma_str[] =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#397: FILE: drivers/ide/ide-xfer-mode.c:12:
+static const char *mwdma_str[] =
+	{ "MWDMA0", "MWDMA1", "MWDMA2" };

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#398: FILE: drivers/ide/ide-xfer-mode.c:13:
+static const char *swdma_str[] =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#399: FILE: drivers/ide/ide-xfer-mode.c:14:
+static const char *swdma_str[] =
+	{ "SWDMA0", "SWDMA1", "SWDMA2" };

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#400: FILE: drivers/ide/ide-xfer-mode.c:15:
+static const char *pio_str[] =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#401: FILE: drivers/ide/ide-xfer-mode.c:16:
+static const char *pio_str[] =
+	{ "PIO0", "PIO1", "PIO2", "PIO3", "PIO4", "PIO5" };

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#458: FILE: drivers/ide/ide-xfer-mode.c:73:
+		printk(KERN_INFO "%s: is on PIO blacklist\n", drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#481: FILE: drivers/ide/ide-xfer-mode.c:96:
+			printk(KERN_INFO "%s: tPIO > 2, assuming tPIO = 2\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#482: FILE: drivers/ide/ide-xfer-mode.c:97:
+			printk(KERN_INFO "%s: tPIO > 2, assuming tPIO = 2\n",
+					 drive->name);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_ops"
#500: FILE: drivers/ide/ide-xfer-mode.c:115:
+	if (port_ops == NULL || port_ops->set_pio_mode == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_ops->set_pio_mode"
#500: FILE: drivers/ide/ide-xfer-mode.c:115:
+	if (port_ops == NULL || port_ops->set_pio_mode == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_ops->set_dma_mode"
#507: FILE: drivers/ide/ide-xfer-mode.c:122:
+	if (port_ops->set_dma_mode == NULL) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#517: FILE: drivers/ide/ide-xfer-mode.c:132:
+		return 0;
+	} else {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_ops"
#531: FILE: drivers/ide/ide-xfer-mode.c:146:
+	if (port_ops == NULL || port_ops->set_dma_mode == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_ops->set_dma_mode"
#531: FILE: drivers/ide/ide-xfer-mode.c:146:
+	if (port_ops == NULL || port_ops->set_dma_mode == NULL)

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#539: FILE: drivers/ide/ide-xfer-mode.c:154:
+		return 0;
+	} else {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_ops"
#553: FILE: drivers/ide/ide-xfer-mode.c:168:
+	if (port_ops == NULL || port_ops->set_pio_mode == NULL ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_ops->set_pio_mode"
#553: FILE: drivers/ide/ide-xfer-mode.c:168:
+	if (port_ops == NULL || port_ops->set_pio_mode == NULL ||

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#557: FILE: drivers/ide/ide-xfer-mode.c:172:
+	BUG_ON(hwif->pio_mask == 0x00);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#568: FILE: drivers/ide/ide-xfer-mode.c:183:
+	printk(KERN_DEBUG "%s: host max PIO%d wanted PIO%d%s selected PIO%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#569: FILE: drivers/ide/ide-xfer-mode.c:184:
+	printk(KERN_DEBUG "%s: host max PIO%d wanted PIO%d%s selected PIO%d\n",
+			  drive->name, host_pio, req_pio,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_ops"
#619: FILE: drivers/ide/ide-xfer-mode.c:234:
+	if (port_ops == NULL || port_ops->set_dma_mode == NULL ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port_ops->set_dma_mode"
#619: FILE: drivers/ide/ide-xfer-mode.c:234:
+	if (port_ops == NULL || port_ops->set_dma_mode == NULL ||

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#625: FILE: drivers/ide/ide-xfer-mode.c:240:
+	BUG_ON(rate < XFER_PIO_0);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#653: FILE: include/linux/ide.h:1573:
+const char *ide_xfer_verbose(u8);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#660: FILE: include/linux/ide.h:1578:
+int ide_set_xfer_rate(ide_drive_t *, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#660: FILE: include/linux/ide.h:1578:
+int ide_set_xfer_rate(ide_drive_t *, u8);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000180139.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 15 warnings, 11 checks, 579 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000180139.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
