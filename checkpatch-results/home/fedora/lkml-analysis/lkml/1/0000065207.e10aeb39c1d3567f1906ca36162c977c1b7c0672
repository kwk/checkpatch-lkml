WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
http://downloadcenter.intel.com/SearchResult.aspx?lang=eng&ProductFamily=Server+Products&ProductLine=Intel%C2%AE+Storage+Systems&ProductProduct=Intel%C2%AE+Entry+Storage+System+SS4200-E&OSVersion=OS+Independent

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#118: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#123: FILE: drivers/leds/leds-ss4200.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#138: FILE: drivers/leds/leds-ss4200.c:16:
+ * this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#139: FILE: drivers/leds/leds-ss4200.c:17:
+ * 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#192: FILE: drivers/leds/leds-ss4200.c:70:
+static struct pci_device_id ich7_lpc_pci_id[] =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:MISPLACED_INIT: __initdata should be placed after nodetect
#207: FILE: drivers/leds/leds-ss4200.c:85:
+static unsigned int __initdata nodetect;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:MISPLACED_INIT: __initdata should be placed after nas_led_whitelist[]
#220: FILE: drivers/leds/leds-ss4200.c:98:
+static struct dmi_system_id __initdata nas_led_whitelist[] = {

WARNING:LINE_SPACING: Missing a blank line after declarations
#282: FILE: drivers/leds/leds-ss4200.c:160:
+	int i;
+	for (i = 0; i < ARRAY_SIZE(nasgpio_leds); i++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#310: FILE: drivers/leds/leds-ss4200.c:188:
+		gpio_out |= (1<<led->gpio_bit);
 		              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#312: FILE: drivers/leds/leds-ss4200.c:190:
+		gpio_out &= ~(1<<led->gpio_bit);
 		               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#333: FILE: drivers/leds/leds-ss4200.c:211:
+	if (gpio_in & (1<<led->gpio_bit))
 	                ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#347: FILE: drivers/leds/leds-ss4200.c:225:
+	u32 setting = 0;
+	if (brightness >= LED_HALF)

WARNING:LINE_SPACING: Missing a blank line after declarations
#370: FILE: drivers/leds/leds-ss4200.c:248:
+	u32 setting = 1;
+	if (!(*delay_on == 0 && *delay_off == 0) &&

CHECK:LINE_SPACING: Please don't use multiple blank lines
#384: FILE: drivers/leds/leds-ss4200.c:262:
+
+

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#390: FILE: drivers/leds/leds-ss4200.c:268:
+static int __devinit ich7_gpio_init(struct device *dev)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#397: FILE: drivers/leds/leds-ss4200.c:275:
+		all_nas_led |= (1<<nasgpio_leds[i].gpio_bit);
 		                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#421: FILE: drivers/leds/leds-ss4200.c:299:
+	dev_dbg(dev, ": Data read from GP_IO_SEL = 0x%08x\n",
+					config_data);

WARNING:TYPO_SPELLING: 'retrive' may be misspelled - perhaps 'retrieve'?
#466: FILE: drivers/leds/leds-ss4200.c:344:
+ * so we can retrive the required operational information and prepare the GPIO.
              ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#469: FILE: drivers/leds/leds-ss4200.c:347:
+static int __devinit ich7_lpc_probe(struct pci_dev *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#487: FILE: drivers/leds/leds-ss4200.c:365:
+		dev_info(&dev->dev,
+			   "ERROR: The LPC GPIO Block has not been enabled.\n");

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#492: FILE: drivers/leds/leds-ss4200.c:370:
+	if (0 > status) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#504: FILE: drivers/leds/leds-ss4200.c:382:
+	if (NULL == gp_gpio_resource) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#547: FILE: drivers/leds/leds-ss4200.c:425:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#569: FILE: drivers/leds/leds-ss4200.c:447:
+	int blinking = 0;
+	if (nasgpio_led_get_attr(led, GPO_BLINK))

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#582: FILE: drivers/leds/leds-ss4200.c:460:
+	ret = strict_strtoul(buf, 10, &blink_state);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'nas_led_blink_show' to 'blink_show' 'nas_led_blink_store' to 'blink_store'
#589: FILE: drivers/leds/leds-ss4200.c:467:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:LINE_SPACING: Missing a blank line after declarations
#617: FILE: drivers/leds/leds-ss4200.c:495:
+	struct led_classdev *led = get_classdev_for_led_nr(led_nr);
+	led_classdev_unregister(led);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#620: FILE: drivers/leds/leds-ss4200.c:498:
+}
+/*

WARNING:LINE_SPACING: Missing a blank line after declarations
#670: FILE: drivers/leds/leds-ss4200.c:548:
+	int i;
+	pr_info("Unregistering driver\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000065207.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 18 warnings, 9 checks, 577 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000065207.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
