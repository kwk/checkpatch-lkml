WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
is it possible to have this driver in the -mm tree for testing purposes until

WARNING:TYPO_SPELLING: 'developped' may be misspelled - perhaps 'developed'?
#25: 
v4l library will be developped and image resize with bayer->rgb conversion
                    ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#64: FILE: MAINTAINERS:3530:
+P:	Jiri Slaby
+M:	jirislaby@gmail.com

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#78: FILE: drivers/media/video/Kconfig:812:
+config USB_STK11XX
+	tristate "Syntek chip based webcams"
+	depends on VIDEO_V4L2
+	---help---
+	  This will add support for Syntek webcams such as dc1125, stk1135 and
+	  DC NEW. Some notebooks have these cards built-in in their displays.
+
+	  If you choose to build this as module, it will be called stk11xx.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#118: FILE: drivers/media/video/stk1125.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#237: FILE: drivers/media/video/stk1125.c:120:
+	/*      0,    1,    2,    3,    4,    5,    6,    7,    8,    9,
+		10,   11 */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#237: FILE: drivers/media/video/stk1125.c:120:
+		10,   11 */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#301: FILE: drivers/media/video/stk1125.c:184:
+	dev_dbg(&dev->udev->dev, "%s: %u\n", __FUNCTION__, step);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#307: FILE: drivers/media/video/stk1125.c:190:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#479: FILE: drivers/media/video/stk1125.c:362:
+ * ^I^I  0x02)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#518: FILE: drivers/media/video/stk1125.c:401:
+	dev_dbg(&dev->udev->dev, "set contrast: %d, whiteness: %d, ",
+			dev->vsettings.contrast, dev->vsettings.whiteness);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#791: FILE: drivers/media/video/stk1135.c:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#878: FILE: drivers/media/video/stk1135.c:88:
+	/*      0,    1,    2,    3,    4,    5,    6,    7,    8,    9,
+		10,   11,   12,   13 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#878: FILE: drivers/media/video/stk1135.c:88:
+		10,   11,   12,   13 */

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'stk1135_dev_configure', this function's name, in a string
#934: FILE: drivers/media/video/stk1135.c:144:
+	dev_dbg(&dev->udev->dev, "stk1135_dev_configure: %d\n", step);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1346: FILE: drivers/media/video/stk11xx-core.c:1:
+/*

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1400: FILE: drivers/media/video/stk11xx-core.c:55:
+	result = usb_control_msg(udev, usb_rcvctrlpipe(udev, 0), 0x00,
+			USB_DIR_IN | USB_TYPE_VENDOR | USB_RECIP_DEVICE, 0x00,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1417: FILE: drivers/media/video/stk11xx-core.c:72:
+	result = usb_control_msg(udev, usb_sndctrlpipe(udev, 0), 0x01,
+			USB_DIR_OUT | USB_TYPE_VENDOR | USB_RECIP_DEVICE, value,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1422: FILE: drivers/media/video/stk11xx-core.c:77:
+		dev_err(&udev->dev, "Write registry fails %02X = %02X\n", index,
+				value);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1447: FILE: drivers/media/video/stk11xx-core.c:102:
+int stk11xx_process_table(struct stk11xx *dev,
+		const struct stk11xx_table *table)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1476: FILE: drivers/media/video/stk11xx-core.c:131:
+#define STK11XX_AVG2(x, y) (u8)(((int)x + (int)y) / 2)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1476: FILE: drivers/media/video/stk11xx-core.c:131:
+#define STK11XX_AVG2(x, y) (u8)(((int)x + (int)y) / 2)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1477: FILE: drivers/media/video/stk11xx-core.c:132:
+#define STK11XX_AVG4(a, b, c, d) (u8)(((int)a + (int)b + (int)c + (int)d) / 4)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#1477: FILE: drivers/media/video/stk11xx-core.c:132:
+#define STK11XX_AVG4(a, b, c, d) (u8)(((int)a + (int)b + (int)c + (int)d) / 4)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'b' may be better as '(b)' to avoid precedence issues
#1477: FILE: drivers/media/video/stk11xx-core.c:132:
+#define STK11XX_AVG4(a, b, c, d) (u8)(((int)a + (int)b + (int)c + (int)d) / 4)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'c' may be better as '(c)' to avoid precedence issues
#1477: FILE: drivers/media/video/stk11xx-core.c:132:
+#define STK11XX_AVG4(a, b, c, d) (u8)(((int)a + (int)b + (int)c + (int)d) / 4)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1480: FILE: drivers/media/video/stk11xx-core.c:135:
+static void stk11xx_bayer_to_rgb(u8 *rgb, const u8 *bayer,
+		  unsigned int width, unsigned int height, unsigned int factor)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1508: FILE: drivers/media/video/stk11xx-core.c:163:
+		for (x = factor; x < width - factor; x += factor, pos += factor,
+				dst += 3) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#1515: FILE: drivers/media/video/stk11xx-core.c:170:
+					dst[2] = STK11XX_AVG2( /* R */

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#1517: FILE: drivers/media/video/stk11xx-core.c:172:
+					dst[0] = STK11XX_AVG2( /* B */

ERROR:SPACING: space prohibited after that open parenthesis '('
#1520: FILE: drivers/media/video/stk11xx-core.c:175:
+					dst[2] = STK11XX_AVG4( /* R */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1521: FILE: drivers/media/video/stk11xx-core.c:176:
+						bayer[above-1],	bayer[above+1],
 						           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1521: FILE: drivers/media/video/stk11xx-core.c:176:
+						bayer[above-1],	bayer[above+1],
 						               	           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1522: FILE: drivers/media/video/stk11xx-core.c:177:
+						bayer[below-1],	bayer[below+1]);
 						           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1522: FILE: drivers/media/video/stk11xx-core.c:177:
+						bayer[below-1],	bayer[below+1]);
 						               	           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1523: FILE: drivers/media/video/stk11xx-core.c:178:
+					dst[1] = STK11XX_AVG4( /* G */

ERROR:SPACING: space prohibited after that open parenthesis '('
#1530: FILE: drivers/media/video/stk11xx-core.c:185:
+					dst[0] = STK11XX_AVG4( /* B */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1531: FILE: drivers/media/video/stk11xx-core.c:186:
+						bayer[above-1],	bayer[above+1],
 						           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1531: FILE: drivers/media/video/stk11xx-core.c:186:
+						bayer[above-1],	bayer[above+1],
 						               	           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1532: FILE: drivers/media/video/stk11xx-core.c:187:
+						bayer[below-1],	bayer[below+1]);
 						           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1532: FILE: drivers/media/video/stk11xx-core.c:187:
+						bayer[below-1],	bayer[below+1]);
 						               	           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1533: FILE: drivers/media/video/stk11xx-core.c:188:
+					dst[1] = STK11XX_AVG4( /* G */

ERROR:SPACING: space prohibited after that open parenthesis '('
#1537: FILE: drivers/media/video/stk11xx-core.c:192:
+					dst[0] = STK11XX_AVG2( /* B */

ERROR:SPACING: space prohibited after that open parenthesis '('
#1539: FILE: drivers/media/video/stk11xx-core.c:194:
+					dst[2] = STK11XX_AVG2( /* R */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!framebuf"
#1553: FILE: drivers/media/video/stk11xx-core.c:208:
+	if (framebuf == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->fill_frame"
#1628: FILE: drivers/media/video/stk11xx-core.c:283:
+	if (dev->fill_frame != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->full_frames"
#1629: FILE: drivers/media/video/stk11xx-core.c:284:
+		if (dev->full_frames == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->empty_frames"
#1638: FILE: drivers/media/video/stk11xx-core.c:293:
+	if (dev->empty_frames != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->full_frames"
#1642: FILE: drivers/media/video/stk11xx-core.c:297:
+		if (dev->full_frames == NULL) {

WARNING:SPLIT_STRING: quoted string split across lines
#1644: FILE: drivers/media/video/stk11xx-core.c:299:
+			dev_err(&dev->udev->dev, "neither empty or full frames "
+					"available!\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'transfert' may be misspelled - perhaps 'transfer'?
#1663: FILE: drivers/media/video/stk11xx-core.c:318:
+ * This function is called as an URB transfert is complete (Isochronous pipe).
                                      ^^^^^^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#1677: FILE: drivers/media/video/stk11xx-core.c:332:
+	if (dev == NULL) {

WARNING:SPLIT_STRING: quoted string split across lines
#1679: FILE: drivers/media/video/stk11xx-core.c:334:
+		dev_err(&dev->udev->dev, "isoc_handler called with NULL "
+				"device\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1693: FILE: drivers/media/video/stk11xx-core.c:348:
+		dev_warn(&dev->udev->dev, "unknown urb status %d\n",
+				urb->status);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1695: FILE: drivers/media/video/stk11xx-core.c:350:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!framebuf"
#1698: FILE: drivers/media/video/stk11xx-core.c:353:
+	if (framebuf == NULL) {

WARNING:SPLIT_STRING: quoted string split across lines
#1700: FILE: drivers/media/video/stk11xx-core.c:355:
+		dev_err(&dev->udev->dev, "isoc_handler without valid fill "
+				"frame\n");

WARNING:SPLIT_STRING: quoted string split across lines
#1709: FILE: drivers/media/video/stk11xx-core.c:364:
+			dev_err(&dev->udev->dev, "error (%d) re-submitting urb "
+					"in isoc_handler\n", ret);

WARNING:SPLIT_STRING: quoted string split across lines
#1740: FILE: drivers/media/video/stk11xx-core.c:395:
+					dev_err(&dev->udev->dev, "frame buffer "
+							"overflow\n");

WARNING:SPLIT_STRING: quoted string split across lines
#1751: FILE: drivers/media/video/stk11xx-core.c:406:
+			STK_STREAM("URB : Length = %d - Skip = %d - Buffer "
+					"size = %d\n", framelen, skip,

CHECK:BRACES: Unbalanced braces around else statement
#1764: FILE: drivers/media/video/stk11xx-core.c:419:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1766: FILE: drivers/media/video/stk11xx-core.c:421:
+			dev_err(&dev->udev->dev, "iso frame %d has error %d\n",
+					i, framestatus);

WARNING:SPLIT_STRING: quoted string split across lines
#1777: FILE: drivers/media/video/stk11xx-core.c:432:
+		dev_err(&dev->udev->dev, "error (%d) re-submitting urb in "
+				"isoc_handler.\n", ret);

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#1805: FILE: drivers/media/video/stk11xx-core.c:460:
+	clear_bit(STK11XX_STAT_ISOC, dev->status);;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!urb"
#1822: FILE: drivers/media/video/stk11xx-core.c:477:
+		if (urb == NULL) {

CHECK:CAMELCASE: Avoid CamelCase: <isoc_in_endpointAddr>
#1836: FILE: drivers/media/video/stk11xx-core.c:491:
+		urb->pipe = usb_rcvisocpipe(udev, dev->isoc_in_endpointAddr);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SPLIT_STRING: quoted string split across lines
#1853: FILE: drivers/media/video/stk11xx-core.c:508:
+			dev_err(&udev->dev, "isoc_init submit_urb %d "
+					"failed with error %d\n", i, ret);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1859: FILE: drivers/media/video/stk11xx-core.c:514:
+	dev_dbg(&udev->dev, "isoc_in_endpointAddr = %x\n",
+			dev->isoc_in_endpointAddr);

WARNING:SPLIT_STRING: quoted string split across lines
#1900: FILE: drivers/media/video/stk11xx-core.c:555:
+			dev_err(&dev->udev->dev, "check device return error "
+					"(0x201 = %02X)\n", value);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1946: FILE: drivers/media/video/stk11xx-core.c:601:
+		dev_err(&dev->udev->dev, "Error: Register 0x0001 = %02X\n",
+				value);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1952: FILE: drivers/media/video/stk11xx-core.c:607:
+int stk11xx_check_image_size(struct stk11xx *dev, unsigned int *width,
+		unsigned int *height)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1958: FILE: drivers/media/video/stk11xx-core.c:613:
+		if (*width == stk11xx_image_sizes[a].x &&
+				*height == stk11xx_image_sizes[a].y)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1983: FILE: drivers/media/video/stk11xx-core.c:638:
+	 * resolution ! */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'width < stk11xx_image_sizes[0].x'
#1984: FILE: drivers/media/video/stk11xx-core.c:639:
+	if ((width < stk11xx_image_sizes[0].x) ||
+			(height < stk11xx_image_sizes[0].y))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'height < stk11xx_image_sizes[0].y'
#1984: FILE: drivers/media/video/stk11xx-core.c:639:
+	if ((width < stk11xx_image_sizes[0].x) ||
+			(height < stk11xx_image_sizes[0].y))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1985: FILE: drivers/media/video/stk11xx-core.c:640:
+	if ((width < stk11xx_image_sizes[0].x) ||
+			(height < stk11xx_image_sizes[0].y))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1994: FILE: drivers/media/video/stk11xx-core.c:649:
+			if (stk11xx_image_sizes[i].x <= width &&
+					stk11xx_image_sizes[i].y <= height)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2002: FILE: drivers/media/video/stk11xx-core.c:657:
+			if (stk11xx_image_sizes[i].x <= width &&
+					stk11xx_image_sizes[i].y <= height)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2015: FILE: drivers/media/video/stk11xx-core.c:670:
+	dev_dbg(&dev->udev->dev, "set mode %d [%dx%d]\n", dev->resolution,
+			stk11xx_image_sizes[dev->resolution].x,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2045: FILE: drivers/media/video/stk11xx-core.c:700:
+
+

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#2064: FILE: drivers/media/video/stk11xx-core.c:719:
+static CLASS_DEVICE_ATTR(contrast, S_IRUGO, show_contrast, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#2065: FILE: drivers/media/video/stk11xx-core.c:720:
+static CLASS_DEVICE_ATTR(whitebalance, S_IRUGO, show_whitebalance, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2068: FILE: drivers/media/video/stk11xx-core.c:723:
+static inline int stk11xx_create_sysfs_file(const struct stk11xx *dev,
+		const struct class_device_attribute *cda)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2075: FILE: drivers/media/video/stk11xx-core.c:730:
+		dev_err(&dev->udev->dev, "can't create sysfs file %s: %d\n",
+				attr_name(*cda), ret);

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceNumber>
#2097: FILE: drivers/media/video/stk11xx-core.c:752:
+	if (interface->cur_altsetting->desc.bInterfaceNumber > 0) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dev)...) over kzalloc(sizeof(struct stk11xx)...)
#2102: FILE: drivers/media/video/stk11xx-core.c:757:
+	dev = kzalloc(sizeof(struct stk11xx), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#2103: FILE: drivers/media/video/stk11xx-core.c:758:
+	if (dev == NULL) {

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#2104: FILE: drivers/media/video/stk11xx-core.c:759:
+	if (dev == NULL) {
+		dev_err(&udev->dev, "can't alloc device info!\n");

WARNING:TYPO_SPELLING: 'usefull' may be misspelled - perhaps 'useful'?
#2121: FILE: drivers/media/video/stk11xx-core.c:776:
+/* NICKLAS: Claiming the interface is usefull when the driver want manage
                                       ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2122: FILE: drivers/media/video/stk11xx-core.c:777:
+ * severals interfaces. */

CHECK:CAMELCASE: Avoid CamelCase: <bNumEndpoints>
#2131: FILE: drivers/media/video/stk11xx-core.c:786:
+	for (i = 0; i < iface_desc->desc.bNumEndpoints; ++i) {

CHECK:CAMELCASE: Avoid CamelCase: <bEndpointAddress>
#2134: FILE: drivers/media/video/stk11xx-core.c:789:
+		if (!dev->isoc_in_endpointAddr && ((endpoint->bEndpointAddress &

CHECK:CAMELCASE: Avoid CamelCase: <bmAttributes>
#2136: FILE: drivers/media/video/stk11xx-core.c:791:
+				((endpoint->bmAttributes &

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->vdev"
#2154: FILE: drivers/media/video/stk11xx-core.c:809:
+	if (dev->vdev == NULL) {

WARNING:SPLIT_STRING: quoted string split across lines
#2179: FILE: drivers/media/video/stk11xx-core.c:834:
+	dev_info(&udev->dev, "Syntek USB2.0 - STK-%s based webcam found and "
+		"ready\n", dev->model->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2196: FILE: drivers/media/video/stk11xx-core.c:851:
+	class_device_remove_file(&dev->vdev->class_dev,
+					&class_device_attr_contrast);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2198: FILE: drivers/media/video/stk11xx-core.c:853:
+	class_device_remove_file(&dev->vdev->class_dev,
+					&class_device_attr_whitebalance);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2283: FILE: drivers/media/video/stk11xx-core.c:938:
+		printk(KERN_ERR "stk11xx: framerate out of bounds "

WARNING:SPLIT_STRING: quoted string split across lines
#2284: FILE: drivers/media/video/stk11xx-core.c:939:
+		printk(KERN_ERR "stk11xx: framerate out of bounds "
+				"[10-30]\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2290: FILE: drivers/media/video/stk11xx-core.c:945:
+		printk(KERN_ERR "stk11xx: usb_register failed!\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2314: FILE: drivers/media/video/stk11xx-v4l.c:1:
+/*

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2345: FILE: drivers/media/video/stk11xx-v4l.c:32:
+	dev_dbg(&dev->udev->dev, "%s\n", __FUNCTION__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->isobuf[i].data"
#2349: FILE: drivers/media/video/stk11xx-v4l.c:36:
+		if (dev->isobuf[i].data == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2351: FILE: drivers/media/video/stk11xx-v4l.c:38:
+			dev->isobuf[i].data = kzalloc(ISO_BUFFER_SIZE,
+					GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->isobuf[i].data"
#2352: FILE: drivers/media/video/stk11xx-v4l.c:39:
+			if (dev->isobuf[i].data == NULL) {

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#2353: FILE: drivers/media/video/stk11xx-v4l.c:40:
+			if (dev->isobuf[i].data == NULL) {
+				dev_err(&dev->udev->dev, "failed to allocate "

WARNING:SPLIT_STRING: quoted string split across lines
#2354: FILE: drivers/media/video/stk11xx-v4l.c:41:
+				dev_err(&dev->udev->dev, "failed to allocate "
+					"iso buffer %d\n", i);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->framebuf[i].data"
#2361: FILE: drivers/media/video/stk11xx-v4l.c:48:
+		if (dev->framebuf[i].data == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->framebuf[i].data"
#2363: FILE: drivers/media/video/stk11xx-v4l.c:50:
+			if (dev->framebuf[i].data == NULL) {

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#2364: FILE: drivers/media/video/stk11xx-v4l.c:51:
+			if (dev->framebuf[i].data == NULL) {
+				dev_err(&dev->udev->dev, "failed to allocate "

WARNING:SPLIT_STRING: quoted string split across lines
#2365: FILE: drivers/media/video/stk11xx-v4l.c:52:
+				dev_err(&dev->udev->dev, "failed to allocate "
+						"frame buffer %d\n", i);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->image_data"
#2374: FILE: drivers/media/video/stk11xx-v4l.c:61:
+	if (dev->image_data == NULL) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2376: FILE: drivers/media/video/stk11xx-v4l.c:63:
+			"needed (%lu)\n", STK11XX_MAX_IMAGES*STK11XX_IMAGE_LEN);
 			                                    ^

WARNING:SPLIT_STRING: quoted string split across lines
#2376: FILE: drivers/media/video/stk11xx-v4l.c:63:
+		dev_err(&dev->udev->dev, "failed to allocate image buffer(s). "
+			"needed (%lu)\n", STK11XX_MAX_IMAGES*STK11XX_IMAGE_LEN);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2393: FILE: drivers/media/video/stk11xx-v4l.c:80:
+	dev_dbg(&dev->udev->dev, "%s\n", __FUNCTION__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#2395: FILE: drivers/media/video/stk11xx-v4l.c:82:
+	if (WARN_ON(dev == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->isobuf[i].data"
#2400: FILE: drivers/media/video/stk11xx-v4l.c:87:
+		if (dev->isobuf[i].data != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->framebuf[i].data"
#2407: FILE: drivers/media/video/stk11xx-v4l.c:94:
+		if (dev->framebuf[i].data != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->image_data"
#2413: FILE: drivers/media/video/stk11xx-v4l.c:100:
+	if (dev->image_data != NULL)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2424: FILE: drivers/media/video/stk11xx-v4l.c:111:
+	dev_dbg(&dev->udev->dev, "%s\n", __FUNCTION__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->read_frame"
#2468: FILE: drivers/media/video/stk11xx-v4l.c:155:
+	if (dev->read_frame != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->full_frames"
#2473: FILE: drivers/media/video/stk11xx-v4l.c:160:
+	if (dev->full_frames != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->read_frame"
#2479: FILE: drivers/media/video/stk11xx-v4l.c:166:
+	if (dev->read_frame != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->empty_frames"
#2484: FILE: drivers/media/video/stk11xx-v4l.c:171:
+		if (dev->empty_frames == NULL) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2511: FILE: drivers/media/video/stk11xx-v4l.c:198:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2522: FILE: drivers/media/video/stk11xx-v4l.c:209:
+	BUG_ON(dev == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#2522: FILE: drivers/media/video/stk11xx-v4l.c:209:
+	BUG_ON(dev == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2582: FILE: drivers/media/video/stk11xx-v4l.c:269:
+	BUG_ON(dev == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#2582: FILE: drivers/media/video/stk11xx-v4l.c:269:
+	BUG_ON(dev == NULL);

WARNING:SPLIT_STRING: quoted string split across lines
#2587: FILE: drivers/media/video/stk11xx-v4l.c:274:
+		dev_warn(&dev->udev->dev, "v4l_release called on closed "
+				"device\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2609: FILE: drivers/media/video/stk11xx-v4l.c:296:
+static ssize_t stk11xx_read(struct file *fp, char __user *buf, size_t count,
+		loff_t *f_pos)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->full_frames"
#2618: FILE: drivers/media/video/stk11xx-v4l.c:305:
+		if ((fp->f_flags & O_NONBLOCK) && dev->full_frames == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2622: FILE: drivers/media/video/stk11xx-v4l.c:309:
+		retval = wait_event_interruptible(dev->wait_frame,
+			dev->full_frames != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->full_frames"
#2622: FILE: drivers/media/video/stk11xx-v4l.c:309:
+			dev->full_frames != NULL);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2653: FILE: drivers/media/video/stk11xx-v4l.c:340:
+static unsigned int stk11xx_poll(struct file *fp, poll_table * wait)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->full_frames"
#2661: FILE: drivers/media/video/stk11xx-v4l.c:348:
+	if (dev->full_frames != NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2688: FILE: drivers/media/video/stk11xx-v4l.c:375:
+	if (size > STK11XX_IMAGE_LEN && (i > 0 || (i == 0 &&
+				size != STK11XX_MAX_IMAGES*STK11XX_IMAGE_LEN)))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2688: FILE: drivers/media/video/stk11xx-v4l.c:375:
+				size != STK11XX_MAX_IMAGES*STK11XX_IMAGE_LEN)))
 				                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2722: FILE: drivers/media/video/stk11xx-v4l.c:409:
+static int stk11xx_querycap(struct file *file, void *fh,
+		struct v4l2_capability *cap)

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#2726: FILE: drivers/media/video/stk11xx-v4l.c:413:
+	strlcpy(cap->driver, "stk11xx", sizeof(cap->driver));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#2731: FILE: drivers/media/video/stk11xx-v4l.c:418:
+	strlcpy(cap->card, dev->vdev->name, sizeof(cap->card));

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#2734: FILE: drivers/media/video/stk11xx-v4l.c:421:
+		strlcpy(cap->bus_info, dev->vdev->name, sizeof(cap->bus_info));

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2738: FILE: drivers/media/video/stk11xx-v4l.c:425:
+}
+static int stk11xx_enum_input(struct file *file, void *fh, struct v4l2_input *i)

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#2743: FILE: drivers/media/video/stk11xx-v4l.c:430:
+	strlcpy(i->name, "USB", sizeof(i->name));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2761: FILE: drivers/media/video/stk11xx-v4l.c:448:
+static int stk11xx_queryctrl(struct file *file, void *fh,
+		struct v4l2_queryctrl *c)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2820: FILE: drivers/media/video/stk11xx-v4l.c:507:
+static int stk11xx_enum_fmt_cap(struct file *file, void *fh,
+		struct v4l2_fmtdesc *fmtd)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2836: FILE: drivers/media/video/stk11xx-v4l.c:523:
+static int stk11xx_g_fmt_cap(struct file *file, void *fh,
+		struct v4l2_format *fmtd)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2854: FILE: drivers/media/video/stk11xx-v4l.c:541:
+static int stk11xx_s_fmt_cap(struct file *file, void *fh,
+		struct v4l2_format *fmtd)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2860: FILE: drivers/media/video/stk11xx-v4l.c:547:
+	dev_dbg(&dev->udev->dev, "set width=%d, height=%d\n", pix->width,
+			pix->height);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2892: FILE: drivers/media/video/stk11xx-v4l.c:579:
+static int stk11xx_try_fmt_cap(struct file *file, void *fh,
+		struct v4l2_format *fmtd)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2916: FILE: drivers/media/video/stk11xx-v4l.c:603:
+static int stk11xx_reqbufs(struct file *file, void *fh,
+		struct v4l2_requestbuffers *rb)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2927: FILE: drivers/media/video/stk11xx-v4l.c:614:
+static int stk11xx_querybuf(struct file *file, void *fh,
+		struct v4l2_buffer *buf)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->full_frames"
#2947: FILE: drivers/media/video/stk11xx-v4l.c:634:
+	if (dev->full_frames != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->full_frames"
#2982: FILE: drivers/media/video/stk11xx-v4l.c:669:
+	if (dev->full_frames == NULL && (file->f_flags & O_NONBLOCK))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2986: FILE: drivers/media/video/stk11xx-v4l.c:673:
+	retval = wait_event_interruptible(dev->wait_frame,
+			dev->full_frames != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->full_frames"
#2986: FILE: drivers/media/video/stk11xx-v4l.c:673:
+			dev->full_frames != NULL);

ERROR:SPACING: spaces required around that ':' (ctx:VxO)
#3014: FILE: drivers/media/video/stk11xx-v4l.c:701:
+	return i == V4L2_BUF_TYPE_VIDEO_CAPTURE ? stk11xx_isoc_init(fh):-EINVAL;
 	                                                               ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#3014: FILE: drivers/media/video/stk11xx-v4l.c:701:
+	return i == V4L2_BUF_TYPE_VIDEO_CAPTURE ? stk11xx_isoc_init(fh):-EINVAL;
 	                                                                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3024: FILE: drivers/media/video/stk11xx-v4l.c:711:
+static int stk11xx_g_parm(struct file *file, void *fh,
+		struct v4l2_streamparm *sp)

WARNING:TYPO_SPELLING: 'PARM' may be misspelled - perhaps 'PARAM'?
#3026: FILE: drivers/media/video/stk11xx-v4l.c:713:
+	pr_debug("GET PARM %d\n", sp->type);
 	              ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#3031: FILE: drivers/media/video/stk11xx-v4l.c:718:
+	sp->parm.capture.capability = 0;
 	    ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#3032: FILE: drivers/media/video/stk11xx-v4l.c:719:
+	sp->parm.capture.capturemode = 0;
 	    ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#3033: FILE: drivers/media/video/stk11xx-v4l.c:720:
+	sp->parm.capture.timeperframe.numerator = 1;
 	    ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#3034: FILE: drivers/media/video/stk11xx-v4l.c:721:
+	sp->parm.capture.timeperframe.denominator = 30;
 	    ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#3035: FILE: drivers/media/video/stk11xx-v4l.c:722:
+	sp->parm.capture.readbuffers = 2;
 	    ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#3036: FILE: drivers/media/video/stk11xx-v4l.c:723:
+	sp->parm.capture.extendedmode = 0;
 	    ^^^^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#3061: FILE: drivers/media/video/stk11xx-v4l.c:748:
+static struct file_operations stk11xx_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3110: FILE: drivers/media/video/stk11xx.h:1:
+/*

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3154: FILE: drivers/media/video/stk11xx.h:45:
+#define ISO_MAX_FRAME_SIZE	3 * 1024

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3171: FILE: drivers/media/video/stk11xx.h:62:
+#define STK_STREAM(str, args...)	printk(KERN_DEBUG "stk11xx: " str, \

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct stk11xx *' should also have an identifier name
#3237: FILE: drivers/media/video/stk11xx.h:128:
+	int (*dev_init)(struct stk11xx *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct stk11xx *' should also have an identifier name
#3238: FILE: drivers/media/video/stk11xx.h:129:
+	int (*dev_configure)(struct stk11xx *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#3238: FILE: drivers/media/video/stk11xx.h:129:
+	int (*dev_configure)(struct stk11xx *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct stk11xx *' should also have an identifier name
#3240: FILE: drivers/media/video/stk11xx.h:131:
+	int (*cam_init)(struct stk11xx *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct stk11xx *' should also have an identifier name
#3241: FILE: drivers/media/video/stk11xx.h:132:
+	int (*cam_setting)(struct stk11xx *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct stk11xx *' should also have an identifier name
#3242: FILE: drivers/media/video/stk11xx.h:133:
+	int (*cam_asleep)(struct stk11xx *);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3244: FILE: drivers/media/video/stk11xx.h:135:
+	 * device */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct stk11xx *' should also have an identifier name
#3245: FILE: drivers/media/video/stk11xx.h:136:
+	int (*cam_reconf)(struct stk11xx *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct stk11xx *' should also have an identifier name
#3251: FILE: drivers/media/video/stk11xx.h:142:
+	int (*stream_start)(struct stk11xx *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct stk11xx *' should also have an identifier name
#3252: FILE: drivers/media/video/stk11xx.h:143:
+	int (*stream_stop)(struct stk11xx *);

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#3269: FILE: drivers/media/video/stk11xx.h:160:
+	struct mutex open_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#3273: FILE: drivers/media/video/stk11xx.h:164:
+	spinlock_t spinlock;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3300: FILE: drivers/media/video/stk11xx.h:191:
+extern int stk11xx_decompress(struct stk11xx *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct stk11xx *' should also have an identifier name
#3300: FILE: drivers/media/video/stk11xx.h:191:
+extern int stk11xx_decompress(struct stk11xx *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3301: FILE: drivers/media/video/stk11xx.h:192:
+extern int stk11xx_check_image_size(struct stk11xx *, unsigned int *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct stk11xx *' should also have an identifier name
#3301: FILE: drivers/media/video/stk11xx.h:192:
+extern int stk11xx_check_image_size(struct stk11xx *, unsigned int *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int *' should also have an identifier name
#3301: FILE: drivers/media/video/stk11xx.h:192:
+extern int stk11xx_check_image_size(struct stk11xx *, unsigned int *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int *' should also have an identifier name
#3301: FILE: drivers/media/video/stk11xx.h:192:
+extern int stk11xx_check_image_size(struct stk11xx *, unsigned int *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3302: FILE: drivers/media/video/stk11xx.h:193:
+extern int stk11xx_check_image_size(struct stk11xx *, unsigned int *,
+		unsigned int *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3303: FILE: drivers/media/video/stk11xx.h:194:
+extern int stk11xx_select_video_mode(struct stk11xx *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct stk11xx *' should also have an identifier name
#3303: FILE: drivers/media/video/stk11xx.h:194:
+extern int stk11xx_select_video_mode(struct stk11xx *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#3303: FILE: drivers/media/video/stk11xx.h:194:
+extern int stk11xx_select_video_mode(struct stk11xx *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#3303: FILE: drivers/media/video/stk11xx.h:194:
+extern int stk11xx_select_video_mode(struct stk11xx *, int, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3305: FILE: drivers/media/video/stk11xx.h:196:
+extern int stk11xx_isoc_init(struct stk11xx *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct stk11xx *' should also have an identifier name
#3305: FILE: drivers/media/video/stk11xx.h:196:
+extern int stk11xx_isoc_init(struct stk11xx *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3306: FILE: drivers/media/video/stk11xx.h:197:
+extern void stk11xx_isoc_cleanup(struct stk11xx *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct stk11xx *' should also have an identifier name
#3306: FILE: drivers/media/video/stk11xx.h:197:
+extern void stk11xx_isoc_cleanup(struct stk11xx *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3308: FILE: drivers/media/video/stk11xx.h:199:
+extern int stk11xx_read_reg(struct stk11xx *, u16, u8 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct stk11xx *' should also have an identifier name
#3308: FILE: drivers/media/video/stk11xx.h:199:
+extern int stk11xx_read_reg(struct stk11xx *, u16, u8 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16' should also have an identifier name
#3308: FILE: drivers/media/video/stk11xx.h:199:
+extern int stk11xx_read_reg(struct stk11xx *, u16, u8 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8 *' should also have an identifier name
#3308: FILE: drivers/media/video/stk11xx.h:199:
+extern int stk11xx_read_reg(struct stk11xx *, u16, u8 *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3309: FILE: drivers/media/video/stk11xx.h:200:
+extern int stk11xx_write_reg(struct stk11xx *, u16, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct stk11xx *' should also have an identifier name
#3309: FILE: drivers/media/video/stk11xx.h:200:
+extern int stk11xx_write_reg(struct stk11xx *, u16, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16' should also have an identifier name
#3309: FILE: drivers/media/video/stk11xx.h:200:
+extern int stk11xx_write_reg(struct stk11xx *, u16, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16' should also have an identifier name
#3309: FILE: drivers/media/video/stk11xx.h:200:
+extern int stk11xx_write_reg(struct stk11xx *, u16, u16);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3310: FILE: drivers/media/video/stk11xx.h:201:
+extern int stk11xx_process_table(struct stk11xx *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct stk11xx *' should also have an identifier name
#3310: FILE: drivers/media/video/stk11xx.h:201:
+extern int stk11xx_process_table(struct stk11xx *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct stk11xx_table *' should also have an identifier name
#3310: FILE: drivers/media/video/stk11xx.h:201:
+extern int stk11xx_process_table(struct stk11xx *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3311: FILE: drivers/media/video/stk11xx.h:202:
+extern int stk11xx_process_table(struct stk11xx *,
+		const struct stk11xx_table *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3312: FILE: drivers/media/video/stk11xx.h:203:
+extern int stk11xx_check_device(struct stk11xx *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct stk11xx *' should also have an identifier name
#3312: FILE: drivers/media/video/stk11xx.h:203:
+extern int stk11xx_check_device(struct stk11xx *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#3312: FILE: drivers/media/video/stk11xx.h:203:
+extern int stk11xx_check_device(struct stk11xx *, unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3313: FILE: drivers/media/video/stk11xx.h:204:
+extern int stk11xx_set_feature(struct stk11xx *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct stk11xx *' should also have an identifier name
#3313: FILE: drivers/media/video/stk11xx.h:204:
+extern int stk11xx_set_feature(struct stk11xx *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#3313: FILE: drivers/media/video/stk11xx.h:204:
+extern int stk11xx_set_feature(struct stk11xx *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3315: FILE: drivers/media/video/stk11xx.h:206:
+extern int stk11xx_cam_on(struct stk11xx *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct stk11xx *' should also have an identifier name
#3315: FILE: drivers/media/video/stk11xx.h:206:
+extern int stk11xx_cam_on(struct stk11xx *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3316: FILE: drivers/media/video/stk11xx.h:207:
+extern int stk11xx_cam_off(struct stk11xx *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct stk11xx *' should also have an identifier name
#3316: FILE: drivers/media/video/stk11xx.h:207:
+extern int stk11xx_cam_off(struct stk11xx *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3317: FILE: drivers/media/video/stk11xx.h:208:
+extern int stk11xx_cam_watchdog(struct stk11xx *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct stk11xx *' should also have an identifier name
#3317: FILE: drivers/media/video/stk11xx.h:208:
+extern int stk11xx_cam_watchdog(struct stk11xx *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3333: FILE: drivers/media/video/stkdcnew.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3425: FILE: drivers/media/video/stkdcnew.c:93:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3459: FILE: drivers/media/video/stkdcnew.c:127:
+	/*      0,    1,    2,    3,    4,    5,    6,    7,    8,    9,
+		10,   11,   12,   13,   14,   15,   16 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3459: FILE: drivers/media/video/stkdcnew.c:127:
+		10,   11,   12,   13,   14,   15,   16 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3514: FILE: drivers/media/video/stkdcnew.c:182:
+		{ 0x0100, vals_0100[step], 2 },/* { 0x0200, 0x80, 2 },
+		{ 0x0200, 0x00, 2 }, */{ 0x02ff, 0x00, 2 },

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3729: FILE: drivers/media/video/stkdcnew.c:397:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3867: FILE: drivers/media/video/stkdcnew.c:535:
+/*	unsigned int i;
+	int value;*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3867: FILE: drivers/media/video/stkdcnew.c:535:
+	int value;*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3871: FILE: drivers/media/video/stkdcnew.c:539:
+/*	const struct stk11xx_table table_1[] = {
+		{ 0x0000, 0x24, 2 }, { 0x0002, 0x78, 2 }, { 0x0003, 0x80, 2 },

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3918: FILE: drivers/media/video/stkdcnew.c:586:
+	};*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3921: FILE: drivers/media/video/stkdcnew.c:589:
+/*		{ 0x0000, 0x25, 2 }, { 0x0000, 0x20, 2 }, { 0x0002, 0x7f, 2 },
+		{ 0x0000, 0x24, 2 }, { 0x0000, 0x20, 2 }, { 0x0117, 0x00, 2 },

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#3940: FILE: drivers/media/video/stkdcnew.c:608:
+#if 0

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3981: FILE: drivers/media/video/stkdcnew.c:649:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000386756.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 14 errors, 105 warnings, 115 checks, 3896 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000386756.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
