WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#56: 
      [S390] vmur: allocate single record buffers instead of one big data buffer

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#129: FILE: drivers/s390/char/monwriter.c:45:
+	struct mutex thread_mutex;

CHECK:SPACING: No space is necessary after a cast
#189: FILE: drivers/s390/char/vmur.c:147:
+		kfree((void *)(addr_t) ptr->cda);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'alloc_chan_prog', this function's name, in a string
#218: FILE: drivers/s390/char/vmur.c:168:
+	TRACE("alloc_chan_prog(%p, %i, %i)\n", ubuf, rec_count, reclen);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:SPACING: No space is necessary after a cast
#246: FILE: drivers/s390/char/vmur.c:189:
+		cpa[i].cda = (u32)(addr_t) kbuf;

CHECK:SPACING: No space is necessary after a cast
#317: FILE: drivers/s390/char/vmur.c:475:
+	buf = (char *) __get_free_page(GFP_KERNEL | GFP_DMA);

CHECK:SPACING: No space is necessary after a cast
#326: FILE: drivers/s390/char/vmur.c:502:
+	free_page((unsigned long) buf);

CHECK:SPACING: No space is necessary after a cast
#358: FILE: drivers/s390/char/vmur.c:567:
+	buf = (char *) __get_free_page(GFP_KERNEL | GFP_DMA);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rc != 0'
#364: FILE: drivers/s390/char/vmur.c:573:
+	if ((rc != 0) && (rc != -ENODATA)) /* EOF does not hurt */

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: No space is necessary after a cast
#378: FILE: drivers/s390/char/vmur.c:587:
+	free_page((unsigned long) buf);

CHECK:SPACING: No space is necessary after a cast
#518: FILE: drivers/s390/cio/qdio.c:1626:
+			free_page((unsigned long) q->slib);

CHECK:SPACING: No space is necessary after a cast
#523: FILE: drivers/s390/cio/qdio.c:1631:
+			free_page((unsigned long) q->slib);

CHECK:SPACING: No space is necessary after a cast
#528: FILE: drivers/s390/cio/qdio.c:1635:
+	free_page((unsigned long) irq_ptr->qdr);

CHECK:SPACING: No space is necessary after a cast
#552: FILE: drivers/s390/cio/qdio.c:1689:
+		q->slib = (struct slib *) __get_free_page(GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#576: FILE: drivers/s390/cio/qdio.c:1703:
+		q->slib = (struct slib *) __get_free_page(GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#607: FILE: drivers/s390/cio/qdio.c:2985:
+	irq_ptr->qdr = (struct qdr *) __get_free_page(GFP_KERNEL | GFP_DMA);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000395198.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 14 checks, 536 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000395198.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
