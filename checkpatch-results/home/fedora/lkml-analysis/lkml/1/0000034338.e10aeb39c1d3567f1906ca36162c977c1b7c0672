WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
Gitweb:     http://git.kernel.org/tip/4b9c0c596ea826ef784eb83f663c5351ed01ba6d

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#94: FILE: tools/perf/builtin-trace.c:277:
+#define for_each_lang(scripts_dir, lang_dirent, lang_next)		\
+	while (!readdir_r(scripts_dir, &lang_dirent, &lang_next) &&	\
+	       lang_next)						\
+		if (lang_dirent.d_type == DT_DIR &&			\
+		    (strcmp(lang_dirent.d_name, ".")) &&		\
+		    (strcmp(lang_dirent.d_name, "..")))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lang_dirent' - possible side-effects?
#94: FILE: tools/perf/builtin-trace.c:277:
+#define for_each_lang(scripts_dir, lang_dirent, lang_next)		\
+	while (!readdir_r(scripts_dir, &lang_dirent, &lang_next) &&	\
+	       lang_next)						\
+		if (lang_dirent.d_type == DT_DIR &&			\
+		    (strcmp(lang_dirent.d_name, ".")) &&		\
+		    (strcmp(lang_dirent.d_name, "..")))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'lang_dirent' may be better as '(lang_dirent)' to avoid precedence issues
#94: FILE: tools/perf/builtin-trace.c:277:
+#define for_each_lang(scripts_dir, lang_dirent, lang_next)		\
+	while (!readdir_r(scripts_dir, &lang_dirent, &lang_next) &&	\
+	       lang_next)						\
+		if (lang_dirent.d_type == DT_DIR &&			\
+		    (strcmp(lang_dirent.d_name, ".")) &&		\
+		    (strcmp(lang_dirent.d_name, "..")))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lang_next' - possible side-effects?
#94: FILE: tools/perf/builtin-trace.c:277:
+#define for_each_lang(scripts_dir, lang_dirent, lang_next)		\
+	while (!readdir_r(scripts_dir, &lang_dirent, &lang_next) &&	\
+	       lang_next)						\
+		if (lang_dirent.d_type == DT_DIR &&			\
+		    (strcmp(lang_dirent.d_name, ".")) &&		\
+		    (strcmp(lang_dirent.d_name, "..")))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'lang_next' may be better as '(lang_next)' to avoid precedence issues
#94: FILE: tools/perf/builtin-trace.c:277:
+#define for_each_lang(scripts_dir, lang_dirent, lang_next)		\
+	while (!readdir_r(scripts_dir, &lang_dirent, &lang_next) &&	\
+	       lang_next)						\
+		if (lang_dirent.d_type == DT_DIR &&			\
+		    (strcmp(lang_dirent.d_name, ".")) &&		\
+		    (strcmp(lang_dirent.d_name, "..")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#101: FILE: tools/perf/builtin-trace.c:284:
+#define for_each_script(lang_dir, script_dirent, script_next)		\
+	while (!readdir_r(lang_dir, &script_dirent, &script_next) &&	\
+	       script_next)						\
+		if (script_dirent.d_type != DT_DIR)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'script_dirent' - possible side-effects?
#101: FILE: tools/perf/builtin-trace.c:284:
+#define for_each_script(lang_dir, script_dirent, script_next)		\
+	while (!readdir_r(lang_dir, &script_dirent, &script_next) &&	\
+	       script_next)						\
+		if (script_dirent.d_type != DT_DIR)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'script_dirent' may be better as '(script_dirent)' to avoid precedence issues
#101: FILE: tools/perf/builtin-trace.c:284:
+#define for_each_script(lang_dir, script_dirent, script_next)		\
+	while (!readdir_r(lang_dir, &script_dirent, &script_next) &&	\
+	       script_next)						\
+		if (script_dirent.d_type != DT_DIR)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'script_next' - possible side-effects?
#101: FILE: tools/perf/builtin-trace.c:284:
+#define for_each_script(lang_dir, script_dirent, script_next)		\
+	while (!readdir_r(lang_dir, &script_dirent, &script_next) &&	\
+	       script_next)						\
+		if (script_dirent.d_type != DT_DIR)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'script_next' may be better as '(script_next)' to avoid precedence issues
#101: FILE: tools/perf/builtin-trace.c:284:
+#define for_each_script(lang_dir, script_dirent, script_next)		\
+	while (!readdir_r(lang_dir, &script_dirent, &script_next) &&	\
+	       script_next)						\
+		if (script_dirent.d_type != DT_DIR)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#106: FILE: tools/perf/builtin-trace.c:289:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "s"
#123: FILE: tools/perf/builtin-trace.c:306:
+	if (s != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 2
#310: FILE: tools/perf/scripts/perl/bin/check-perf-trace-report:2:
+# description: useless but exhaustive test script

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 2
#320: FILE: tools/perf/scripts/perl/bin/rw-by-file-report:2:
+# description: r/w activity for a program, by file

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 2
#331: FILE: tools/perf/scripts/perl/bin/rw-by-pid-report:2:
+# description: system-wide r/w activity

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 2
#341: FILE: tools/perf/scripts/perl/bin/wakeup-latency-report:2:
+# description: system-wide min/max/avg wakeup latency

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 2
#351: FILE: tools/perf/scripts/perl/bin/workqueue-stats-report:2:
+# description: workqueue stats (ins/exe/create/destroy)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000034338.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 6 warnings, 10 checks, 238 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000034338.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
