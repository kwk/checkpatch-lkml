WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#564: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#568: FILE: include/linux/tainted.h:1:
+#ifndef __TAINTED_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#571: FILE: include/linux/tainted.h:4:
+#define TAINT_PROPRIETARY_MODULE	(1<<0)
                                 	  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#571: FILE: include/linux/tainted.h:4:
+#define TAINT_PROPRIETARY_MODULE	(1<<0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#572: FILE: include/linux/tainted.h:5:
+#define TAINT_FORCED_MODULE		(1<<1)
                            		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#572: FILE: include/linux/tainted.h:5:
+#define TAINT_FORCED_MODULE		(1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#573: FILE: include/linux/tainted.h:6:
+#define TAINT_UNSAFE_SMP		(1<<2)
                         		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#573: FILE: include/linux/tainted.h:6:
+#define TAINT_UNSAFE_SMP		(1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#574: FILE: include/linux/tainted.h:7:
+#define TAINT_FORCED_RMMOD		(1<<3)
                           		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#574: FILE: include/linux/tainted.h:7:
+#define TAINT_FORCED_RMMOD		(1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#575: FILE: include/linux/tainted.h:8:
+#define TAINT_MACHINE_CHECK		(1<<4)
                            		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#575: FILE: include/linux/tainted.h:8:
+#define TAINT_MACHINE_CHECK		(1<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#576: FILE: include/linux/tainted.h:9:
+#define TAINT_BAD_PAGE			(1<<5)
                       			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#576: FILE: include/linux/tainted.h:9:
+#define TAINT_BAD_PAGE			(1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#577: FILE: include/linux/tainted.h:10:
+#define TAINT_USER			(1<<6)
                   			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#577: FILE: include/linux/tainted.h:10:
+#define TAINT_USER			(1<<6)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#578: FILE: include/linux/tainted.h:11:
+#define TAINT_DIE			(1<<7)
                  			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#578: FILE: include/linux/tainted.h:11:
+#define TAINT_DIE			(1<<7)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#579: FILE: include/linux/tainted.h:12:
+#define TAINT_OVERRIDDEN_ACPI_TABLE	(1<<8)
                                    	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#579: FILE: include/linux/tainted.h:12:
+#define TAINT_OVERRIDDEN_ACPI_TABLE	(1<<8)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#580: FILE: include/linux/tainted.h:13:
+#define TAINT_WARN			(1<<9)
                   			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#580: FILE: include/linux/tainted.h:13:
+#define TAINT_WARN			(1<<9)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#585: FILE: include/linux/tainted.h:18:
+void add_taint(unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#585: FILE: include/linux/tainted.h:18:
+void add_taint(unsigned);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#702: FILE: kernel/tainted.c:1:
+#include <linux/debug_locks.h>

CHECK:BRACES: braces {} should be used on all arms of this statement
#728: FILE: kernel/tainted.c:27:
+	if (tainted) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#730: FILE: kernel/tainted.c:29:
+		snprintf(buf, sizeof(buf), "Tainted: %c%c%c%c%c%c%c%c%c%c",
+			tainted & TAINT_PROPRIETARY_MODULE ? 'P' : 'G',

CHECK:BRACES: Unbalanced braces around else statement
#740: FILE: kernel/tainted.c:39:
+	} else

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#745: FILE: kernel/tainted.c:44:
+void add_taint(unsigned flag)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000223638.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 23 checks, 503 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000223638.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
