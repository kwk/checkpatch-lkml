WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#28: FILE: fs/logfs/dev_mtd.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#29: FILE: fs/logfs/dev_mtd.c:2:
+ * fs/logfs/dev_mtd.c	- Device access methods for MTD

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#39: FILE: fs/logfs/dev_mtd.c:12:
+#define PAGE_OFS(ofs) ((ofs) & (PAGE_SIZE-1))
                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#57: FILE: fs/logfs/dev_mtd.c:30:
+	BUG_ON(ret == -EINVAL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#80: FILE: fs/logfs/dev_mtd.c:53:
+	BUG_ON((ofs >= mtd->size) || (len > mtd->size - ofs));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#81: FILE: fs/logfs/dev_mtd.c:54:
+	BUG_ON(ofs != (ofs >> super->s_writeshift) << super->s_writeshift);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#82: FILE: fs/logfs/dev_mtd.c:55:
+	BUG_ON(len > PAGE_CACHE_SIZE);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'retlen != len'
#86: FILE: fs/logfs/dev_mtd.c:59:
+	if (ret || (retlen != len))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TYPO_SPELLING: 'excercise' may be misspelled - perhaps 'exercise'?
#98: FILE: fs/logfs/dev_mtd.c:71:
+ * from mtd_erase().  What an excercise in futility!
                               ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#113: FILE: fs/logfs/dev_mtd.c:86:
+	BUG_ON(len % mtd->erasesize);

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#170: FILE: fs/logfs/dev_mtd.c:143:
+		page = find_or_create_page(inode->i_mapping, ofs>>PAGE_SHIFT,
 		                                                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#171: FILE: fs/logfs/dev_mtd.c:144:
+		page = find_or_create_page(inode->i_mapping, ofs>>PAGE_SHIFT,
+				GFP_NOIO);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#177: FILE: fs/logfs/dev_mtd.c:150:
+			err = mtd_read(sb, ofs&PAGE_MASK, PAGE_SIZE, buf0);
 			                      ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#215: FILE: fs/logfs/dev_mtd.c:188:
+		page = find_or_create_page(inode->i_mapping, ofs>>PAGE_SHIFT,
 		                                                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#216: FILE: fs/logfs/dev_mtd.c:189:
+		page = find_or_create_page(inode->i_mapping, ofs>>PAGE_SHIFT,
+				GFP_NOIO);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'len < PAGE_SIZE'
#220: FILE: fs/logfs/dev_mtd.c:193:
+		if (!PageUptodate(page) &&
+				(PAGE_OFS(ofs) || (len < PAGE_SIZE))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#221: FILE: fs/logfs/dev_mtd.c:194:
+		if (!PageUptodate(page) &&
+				(PAGE_OFS(ofs) || (len < PAGE_SIZE))) {

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#223: FILE: fs/logfs/dev_mtd.c:196:
+			err = mtd_read(sb, ofs&PAGE_MASK, PAGE_SIZE, buf0);
 			                      ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#268: FILE: fs/logfs/dev_mtd.c:241:
+		page = find_get_page(inode->i_mapping, ofs>>PAGE_SHIFT);
 		                                          ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#292: FILE: fs/logfs/dev_mtd.c:265:
+	BUG_ON(PAGE_OFS(ofs) || PAGE_OFS(len));

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#299: FILE: fs/logfs/dev_mtd.c:272:
+		page = find_get_page(inode->i_mapping, ofs>>PAGE_SHIFT);
 		                                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#320: FILE: fs/logfs/dev_mtd.c:293:
+int logfs_get_sb_mtd(struct file_system_type *type, int flags,
+		int mtdnr, struct vfsmount *mnt)

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#335: FILE: fs/logfs/dev_mtd.c:308:
+			iput(inode);
 			^^^^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#352: FILE: fs/logfs/dev_mtd.c:325:
+		iput(&mi->vfs_inode);
 		^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#379: FILE: fs/logfs/dev_mtd.c:352:
+static int mtd_get_sb(struct file_system_type *fs_type, int flags,
+		const char *dev_name, void *data, struct vfsmount *mnt)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#404: FILE: fs/logfs/dev_mtd.c:377:
+	mtd_cache = kmem_cache_create("mtd_cache", sizeof(struct mtd_inode), 0,
+			(SLAB_HWCACHE_ALIGN|SLAB_RECLAIM_ACCOUNT|

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#404: FILE: fs/logfs/dev_mtd.c:377:
+			(SLAB_HWCACHE_ALIGN|SLAB_RECLAIM_ACCOUNT|
 			                   ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#404: FILE: fs/logfs/dev_mtd.c:377:
+			(SLAB_HWCACHE_ALIGN|SLAB_RECLAIM_ACCOUNT|
 			                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#405: FILE: fs/logfs/dev_mtd.c:378:
+			 SLAB_MEM_SPREAD|SLAB_PANIC),
 			                ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000299551.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 12 warnings, 18 checks, 406 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000299551.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
