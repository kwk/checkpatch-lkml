WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#53: FILE: drivers/edac/i5100_edac.c:28:
+#define ^II5100_MC_SCRBEN_MASK^I(1 << 7)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#53: FILE: drivers/edac/i5100_edac.c:28:
+#define 	I5100_MC_SCRBEN_MASK	(1 << 7)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#54: FILE: drivers/edac/i5100_edac.c:29:
+#define ^II5100_MC_SCRBDONE_MASK^I(1 << 4)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#54: FILE: drivers/edac/i5100_edac.c:29:
+#define 	I5100_MC_SCRBDONE_MASK	(1 << 4)

WARNING:TYPO_SPELLING: 'enqueing' may be misspelled - perhaps 'enqueuing'?
#103: FILE: drivers/edac/i5100_edac.c:554:
+ * set a done bit. Continuous scrubbing is achieved by enqueing
                                                        ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#121: FILE: drivers/edac/i5100_edac.c:572:
+	if (priv->scrub_enable) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around priv->i5100_scrubbing
#130: FILE: drivers/edac/i5100_edac.c:581:
+		schedule_delayed_work(&(priv->i5100_scrubbing),

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#134: FILE: drivers/edac/i5100_edac.c:585:
+}
+/*

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#138: FILE: drivers/edac/i5100_edac.c:589:
+static int i5100_set_scrub_rate(struct mem_ctl_info *mci,
+				       u32 *bandwidth)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around priv->i5100_scrubbing
#147: FILE: drivers/edac/i5100_edac.c:598:
+		schedule_delayed_work(&(priv->i5100_scrubbing),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around priv->i5100_scrubbing
#152: FILE: drivers/edac/i5100_edac.c:603:
+		cancel_delayed_work(&(priv->i5100_scrubbing));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around priv->i5100_scrubbing
#183: FILE: drivers/edac/i5100_edac.c:962:
+	INIT_DELAYED_WORK(&(priv->i5100_scrubbing), i5100_refresh_scrubbing);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around priv->i5100_scrubbing
#189: FILE: drivers/edac/i5100_edac.c:968:
+		schedule_delayed_work(&(priv->i5100_scrubbing),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around priv->i5100_scrubbing
#218: FILE: drivers/edac/i5100_edac.c:1009:
+	cancel_delayed_work_sync(&(priv->i5100_scrubbing));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around priv->i5100_scrubbing
#228: FILE: drivers/edac/i5100_edac.c:1044:
+	cancel_delayed_work_sync(&(priv->i5100_scrubbing));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000067339.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 12 checks, 175 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000067339.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
