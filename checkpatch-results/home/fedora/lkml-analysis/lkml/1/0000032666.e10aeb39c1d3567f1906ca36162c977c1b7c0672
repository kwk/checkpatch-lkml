CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#50: FILE: include/linux/hw_breakpoint.h:57:
+extern int register_user_hbp_by_pid(struct perf_event_attr *attr,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#51: FILE: include/linux/hw_breakpoint.h:58:
+extern int register_user_hbp_by_pid(struct perf_event_attr *attr,
+			 perf_overflow_handler_t triggered,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#53: FILE: include/linux/hw_breakpoint.h:60:
+extern void unregister_user_hbp_by_pid(pid_t pid);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#61: FILE: include/linux/hw_breakpoint.h:98:
+int register_user_hbp_by_pid(struct perf_event_attr *attr,
+			 perf_overflow_handler_t triggered,
+			 pid_t pid)	{ return 0; }

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#62: FILE: include/linux/hw_breakpoint.h:99:
+int register_user_hbp_by_pid(struct perf_event_attr *attr,
+			 perf_overflow_handler_t triggered,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#81: FILE: kernel/hw_breakpoint.c:306:
+static inline void __unregister_user_hbp_for_threads(struct task_struct *start,
+						struct task_struct *end)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#105: FILE: kernel/hw_breakpoint.c:330:
+int register_user_hbp_by_pid(struct perf_event_attr *attr,
+			 perf_overflow_handler_t triggered,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#111: FILE: kernel/hw_breakpoint.c:336:
+	t1 = t2 = find_task_by_vpid(pid);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!t1"
#112: FILE: kernel/hw_breakpoint.c:337:
+	if (t1 == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'propogates' may be misspelled - perhaps 'propagates'?
#116: FILE: kernel/hw_breakpoint.c:341:
+	 * Ensure that the breakpoint propogates to every new thread created in
 	                              ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#153: FILE: kernel/hw_breakpoint.c:378:
+ * unregister_hbp_by_pid - unregister a user-space hardware breakpoint previously registered using a pid

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#160: FILE: kernel/hw_breakpoint.c:385:
+	t1 = t2 = find_task_by_vpid(pid);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!t1"
#161: FILE: kernel/hw_breakpoint.c:386:
+	if (t1 == NULL)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000032666.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 2 warnings, 10 checks, 118 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000032666.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
