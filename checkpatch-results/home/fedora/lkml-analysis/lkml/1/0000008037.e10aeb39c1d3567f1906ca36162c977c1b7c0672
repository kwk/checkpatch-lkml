WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#78: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#91: FILE: drivers/pps/clients/Kconfig:9:
+config PPS_CLIENT_PARPORT
+	tristate "Parallel port PPS client"
+	depends on PPS && PARPORT
+	help
+	  If you say yes here you get support for a PPS source connected
+	  with the interrupt pin of your parallel port.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_CFLAGS is deprecated, please use `ccflags-y instead.
#112: FILE: drivers/pps/clients/Makefile:8:
+EXTRA_CFLAGS += -DDEBUG

EXTRA_{A,C,CPP,LD}FLAGS are deprecated and should be replaced by the new
flags added via commit f77bf01425b1 ("kbuild: introduce ccflags-y,
asflags-y and ldflags-y").

The following conversion scheme maybe used::

  EXTRA_AFLAGS    ->  asflags-y
  EXTRA_CFLAGS    ->  ccflags-y
  EXTRA_CPPFLAGS  ->  cppflags-y
  EXTRA_LDFLAGS   ->  ldflags-y

See:

  1. https://lore.kernel.org/lkml/20070930191054.GA15876@uranus.ravnborg.org/
  2. https://lore.kernel.org/lkml/1313384834-24433-12-git-send-email-lacombar@gmail.com/
  3. https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#compilation-flags

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#120: FILE: drivers/pps/clients/pps_parport.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#137: FILE: drivers/pps/clients/pps_parport.c:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#138: FILE: drivers/pps/clients/pps_parport.c:19:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#141: FILE: drivers/pps/clients/pps_parport.c:22:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'port' - possible side-effects?
#170: FILE: drivers/pps/clients/pps_parport.c:51:
+#define SIGNAL_IS_SET(port) \
+	((port->ops->read_status(port) & PARPORT_STATUS_ACK) != 0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'port' may be better as '(port)' to avoid precedence issues
#170: FILE: drivers/pps/clients/pps_parport.c:51:
+#define SIGNAL_IS_SET(port) \
+	((port->ops->read_status(port) & PARPORT_STATUS_ACK) != 0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#202: FILE: drivers/pps/clients/pps_parport.c:83:
+			pps_event(dev->source, &ts_assert,
+					PPS_CAPTUREASSERT, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: drivers/pps/clients/pps_parport.c:86:
+			pps_event(dev->source, &ts_clear,
+					PPS_CAPTURECLEAR, NULL);

WARNING:SPLIT_STRING: quoted string split across lines
#213: FILE: drivers/pps/clients/pps_parport.c:94:
+	pr_err(DRVNAME ": timeout in interrupt handler while waiting"
+			" for signal clear\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#231: FILE: drivers/pps/clients/pps_parport.c:112:
+		.mode		= PPS_CAPTUREBOTH | \

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#235: FILE: drivers/pps/clients/pps_parport.c:116:
+^I^I.echo ^I^I= pps_echo,$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*device)...) over kzalloc(sizeof(struct pps_client_pp)...)
#239: FILE: drivers/pps/clients/pps_parport.c:120:
+	device = kzalloc(sizeof(struct pps_client_pp), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#241: FILE: drivers/pps/clients/pps_parport.c:122:
+	if (!device) {
+		pr_err(DRVNAME ": memory allocation failed, not attaching\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: drivers/pps/clients/pps_parport.c:127:
+	device->pardev = parport_register_device(port, DRVNAME,
+			NULL, NULL, parport_irq, 0, device);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#258: FILE: drivers/pps/clients/pps_parport.c:139:
+	device->source = pps_register_source(&info,
+			PPS_CAPTUREBOTH | PPS_OFFSETASSERT | PPS_OFFSETCLEAR);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000008037.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 8 warnings, 8 checks, 251 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000008037.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
