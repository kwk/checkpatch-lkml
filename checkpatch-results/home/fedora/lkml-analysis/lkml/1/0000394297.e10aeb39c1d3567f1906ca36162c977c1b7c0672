CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#83: FILE: include/scsi/scsi_device.h:289:
+extern int scsi_device_event_notify(struct scsi_device *sdev,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#84: FILE: include/scsi/scsi_device.h:290:
+extern int scsi_device_event_notify(struct scsi_device *sdev,
+				enum scsi_device_event event);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#97: FILE: drivers/scsi/scsi_lib.c:68:
+static char * scsi_device_event_strings[] = {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#108: FILE: drivers/scsi/scsi_lib.c:2015:
+ * ^Iscsi_device_set_event - Add a new Async event to the event list$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#112: FILE: drivers/scsi/scsi_lib.c:2019:
+ * ^IAdd a new scsi_device_event_info struct to the scsi_device_event_list$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#113: FILE: drivers/scsi/scsi_lib.c:2020:
+ * ^Iqueue.  This may be called from interrupt context.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#115: FILE: drivers/scsi/scsi_lib.c:2022:
+ * ^IReturns 0 if successful, -ENOMEM otherwise.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#135: FILE: drivers/scsi/scsi_lib.c:2042:
+ * ^Iscsi_device_event_notify_thread - send a uevent for each scsi event$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#138: FILE: drivers/scsi/scsi_lib.c:2045:
+ * ^ITraverse the queue of scsi device events, dequeue each event and$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#139: FILE: drivers/scsi/scsi_lib.c:2046:
+ * ^Isend a uevent.  Frees event.  May not be called from interrupt.$

WARNING:STATIC_CONST_CHAR_ARRAY: char * array declaration might be better as static const
#144: FILE: drivers/scsi/scsi_lib.c:2051:
+	char *envp[] = { NULL, NULL };

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#157: FILE: drivers/scsi/scsi_lib.c:2064:
+		envp[0] = scsi_device_event_strings[sdev_event->event-1];
 		                                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#164: FILE: drivers/scsi/scsi_lib.c:2071:
+ * ^Iscsi_device_event_notify - store event info and send an event$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#168: FILE: drivers/scsi/scsi_lib.c:2075:
+ * ^IStore the event information and then switch process context$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#169: FILE: drivers/scsi/scsi_lib.c:2076:
+ * ^Iso that the event may be sent to user space.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#170: FILE: drivers/scsi/scsi_lib.c:2077:
+ * ^IThis may be called from interrupt context.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#172: FILE: drivers/scsi/scsi_lib.c:2079:
+ * ^IReturns 0 if successful, -ENOMEM otherwise.$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: drivers/scsi/scsi_sysfs.c:580:
+sdev_show_media_change_notify(struct device *dev, struct device_attribute *attr,
+				char *buf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#214: FILE: drivers/scsi/scsi_sysfs.c:583:
+	struct scsi_device *sdev = to_scsi_device(dev);
+	if (sdev->media_change_notify)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'sdev_show_media_change_notify' to 'media_change_notify_show'
#218: FILE: drivers/scsi/scsi_sysfs.c:587:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#219: FILE: drivers/scsi/scsi_sysfs.c:588:
+static DEVICE_ATTR(media_change_notify, S_IRUGO, sdev_show_media_change_notify, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000394297.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 16 warnings, 4 checks, 166 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000394297.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
