WARNING:TYPO_SPELLING: 'physcial' may be misspelled - perhaps 'physical'?
#52: FILE: drivers/pci/intel-iommu.c:137:
+ * 12-63: Host physcial address
                ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#57: FILE: drivers/pci/intel-iommu.c:142:
+};
+#define dma_clear_pte(p)	do {(p).val = 0;} while (0)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ';' (ctx:VxV)
#57: FILE: drivers/pci/intel-iommu.c:142:
+#define dma_clear_pte(p)	do {(p).val = 0;} while (0)
                         	               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#57: FILE: drivers/pci/intel-iommu.c:142:
+#define dma_clear_pte(p)	do {(p).val = 0;} while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

ERROR:SPACING: space required after that ';' (ctx:VxV)
#59: FILE: drivers/pci/intel-iommu.c:144:
+#define dma_set_pte_readable(p) do {(p).val |= DMA_PTE_READ;} while (0)
                                                            ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#59: FILE: drivers/pci/intel-iommu.c:144:
+#define dma_set_pte_readable(p) do {(p).val |= DMA_PTE_READ;} while (0)

ERROR:SPACING: space required after that ';' (ctx:VxV)
#60: FILE: drivers/pci/intel-iommu.c:145:
+#define dma_set_pte_writable(p) do {(p).val |= DMA_PTE_WRITE;} while (0)
                                                             ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#60: FILE: drivers/pci/intel-iommu.c:145:
+#define dma_set_pte_writable(p) do {(p).val |= DMA_PTE_WRITE;} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#61: FILE: drivers/pci/intel-iommu.c:146:
+#define dma_set_pte_prot(p, prot) \
+		do {(p).val = ((p).val & ~3) | ((prot) & 3); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#61: FILE: drivers/pci/intel-iommu.c:146:
+#define dma_set_pte_prot(p, prot) \
+		do {(p).val = ((p).val & ~3) | ((prot) & 3); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#64: FILE: drivers/pci/intel-iommu.c:149:
+#define dma_set_pte_addr(p, addr) do {\
+		(p).val |= ((addr) & VTD_PAGE_MASK); } while (0)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#65: FILE: drivers/pci/intel-iommu.c:150:
+		(p).val |= ((addr) & VTD_PAGE_MASK); } while (0)

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000201613.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 6 warnings, 2 checks, 59 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000201613.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
