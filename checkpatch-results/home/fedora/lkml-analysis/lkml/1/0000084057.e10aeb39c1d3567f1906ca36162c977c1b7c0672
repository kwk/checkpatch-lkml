WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
Gitweb:     http://git.kernel.org/tip/83a0944fa919fb2ebcfc1f8933d86e437b597ca6

WARNING:TYPO_SPELLING: 'chello' may be misspelled - perhaps 'cello'?
#105: 
Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
                                 ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#460: FILE: tools/perf/builtin-top.c:123:
+	char command[PATH_MAX*2];
 	                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#474: FILE: tools/perf/builtin-top.c:494:
+		syme = rb_entry(nd, struct sym_entry, rb_node);
 		                ^^

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#657: FILE: tools/perf/util/config.c:622:
 		switch (contents[offset]) {
[...]
+			default: break;

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#660: FILE: tools/perf/util/config.c:625:
+			default: break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#728: FILE: tools/perf/util/parse-events.c:54:
+static const char *hw_event_names[] = {

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#737: FILE: tools/perf/util/parse-events.c:64:
+static const char *sw_event_names[] = {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#812: FILE: tools/perf/util/parse-events.h:12:
+extern const char *event_name(int ctr);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#813: FILE: tools/perf/util/parse-events.h:13:
+extern const char *__event_name(int type, u64 config);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'syms' - possible side-effects?
#1036: FILE: tools/perf/util/symbol.c:311:
+#define elf_symtab__for_each_symbol(syms, nr_syms, idx, sym) \
+	for (idx = 0, gelf_getsym(syms, idx, &sym);\
+	     idx < nr_syms; \
+	     idx++, gelf_getsym(syms, idx, &sym))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'nr_syms' may be better as '(nr_syms)' to avoid precedence issues
#1036: FILE: tools/perf/util/symbol.c:311:
+#define elf_symtab__for_each_symbol(syms, nr_syms, idx, sym) \
+	for (idx = 0, gelf_getsym(syms, idx, &sym);\
+	     idx < nr_syms; \
+	     idx++, gelf_getsym(syms, idx, &sym))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'idx' - possible side-effects?
#1036: FILE: tools/perf/util/symbol.c:311:
+#define elf_symtab__for_each_symbol(syms, nr_syms, idx, sym) \
+	for (idx = 0, gelf_getsym(syms, idx, &sym);\
+	     idx < nr_syms; \
+	     idx++, gelf_getsym(syms, idx, &sym))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'sym' - possible side-effects?
#1036: FILE: tools/perf/util/symbol.c:311:
+#define elf_symtab__for_each_symbol(syms, nr_syms, idx, sym) \
+	for (idx = 0, gelf_getsym(syms, idx, &sym);\
+	     idx < nr_syms; \
+	     idx++, gelf_getsym(syms, idx, &sym))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'sym' may be better as '(sym)' to avoid precedence issues
#1036: FILE: tools/perf/util/symbol.c:311:
+#define elf_symtab__for_each_symbol(syms, nr_syms, idx, sym) \
+	for (idx = 0, gelf_getsym(syms, idx, &sym);\
+	     idx < nr_syms; \
+	     idx++, gelf_getsym(syms, idx, &sym))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000084057.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 5 warnings, 8 checks, 1075 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000084057.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
