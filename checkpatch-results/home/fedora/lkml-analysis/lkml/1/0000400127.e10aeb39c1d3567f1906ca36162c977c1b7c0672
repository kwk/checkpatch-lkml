WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#59: FILE: mm/nonresident.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#60: FILE: mm/nonresident.c:2:
+ * mm/nonresident.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#92: FILE: mm/nonresident.c:34:
+#define NUM_NR ((NR_BUCKET_BYTES - sizeof(atomic_t))/sizeof(atomic_t))
                                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#95: FILE: mm/nonresident.c:37:
+struct nr_bucket
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:MISPLACED_INIT: __initdata should be placed after nonresident_factor
#198: FILE: mm/nonresident.c:140:
+static __initdata unsigned long nonresident_factor = 100;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#212: FILE: mm/nonresident.c:154:
+	nonres_table = alloc_large_system_hash("Non-resident page tracking",
+					sizeof(struct nr_bucket),

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#228: FILE: mm/nonresident.c:170:
+	nonresident_factor = simple_strtoul(str, &str, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#231: FILE: mm/nonresident.c:173:
+__setup("nonresident_factor=", set_nonresident_factor);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#237: FILE: include/linux/nonresident.h:1:
+#ifndef _LINUX_NONRESIDENT_H_

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#244: FILE: include/linux/nonresident.h:8:
+extern void nonresident_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#245: FILE: include/linux/nonresident.h:9:
+extern unsigned long nonresident_get(struct address_space *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct address_space *' should also have an identifier name
#245: FILE: include/linux/nonresident.h:9:
+extern unsigned long nonresident_get(struct address_space *, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#245: FILE: include/linux/nonresident.h:9:
+extern unsigned long nonresident_get(struct address_space *, unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#246: FILE: include/linux/nonresident.h:10:
+extern u32 nonresident_put(struct address_space *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct address_space *' should also have an identifier name
#246: FILE: include/linux/nonresident.h:10:
+extern u32 nonresident_put(struct address_space *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#246: FILE: include/linux/nonresident.h:10:
+extern u32 nonresident_put(struct address_space *, unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#247: FILE: include/linux/nonresident.h:11:
+extern unsigned long nonresident_total(void);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#368: FILE: mm/Kconfig:161:
+config MM_NONRESIDENT
+	bool "Track nonresident pages"
+	def_bool y
+

Kconfig symbols should have a help text which fully describes
it.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000400127.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 10 warnings, 7 checks, 291 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000400127.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
