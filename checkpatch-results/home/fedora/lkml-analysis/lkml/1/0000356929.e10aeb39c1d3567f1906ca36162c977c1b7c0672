WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: arch/s390/kernel/setup.c:925:
+   printk(KERN_INFO "cpu %d "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#72: FILE: arch/s390/kernel/setup.c:925:
+   printk(KERN_INFO "cpu %d "

CHECK:SPACING: No space is necessary after a cast
#130: FILE: arch/s390/kernel/smp.c:403:
+	__cpu_logical_map[CPU_INIT_NO] = (__u16) phy_cpu;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#179: FILE: arch/s390/kernel/smp.c:455:
+		disabled_wait((unsigned long) __builtin_return_address(0));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#225: FILE: arch/s390/kernel/smp.c:494:
+	printk(KERN_INFO "CPUs: %d configured, %d standby\n",

CHECK:SPACING: No space is necessary after a cast
#227: FILE: arch/s390/kernel/smp.c:496:
+	free_bootmem((unsigned long) info, sizeof(*info));

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#246: FILE: arch/s390/kernel/smp.c:515:
+	if (logical_cpu == NR_CPUS)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#257: FILE: arch/s390/kernel/smp.c:526:
+		if (logical_cpu == NR_CPUS)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#270: FILE: arch/s390/kernel/smp.c:539:
+	if (logical_cpu == NR_CPUS)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#294: FILE: arch/s390/kernel/smp.c:563:
+		if (logical_cpu == NR_CPUS)

CHECK:SPACING: No space is necessary after a cast
#301: FILE: arch/s390/kernel/smp.c:570:
+		free_bootmem((unsigned long) info, sizeof(*info));

CHECK:SPACING: No space is necessary after a cast
#381: FILE: arch/s390/kernel/smp.c:687:
+		       (unsigned int) NR_CPUS);

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#381: FILE: arch/s390/kernel/smp.c:687:
+		       (unsigned int) NR_CPUS);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#402: FILE: arch/s390/kernel/smp.c:748:
+	printk(KERN_INFO "Processor %d spun down\n", cpu);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#486: FILE: arch/s390/kernel/smp.c:902:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#639: FILE: drivers/s390/char/sclp_cmd.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#640: FILE: drivers/s390/char/sclp_cmd.c:2:
+ *  drivers/s390/char/sclp_cmd.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#675: FILE: drivers/s390/char/sclp_cmd.c:37:
+} __attribute__((packed, aligned(PAGE_SIZE)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(PAGE_SIZE) over __attribute__((aligned(PAGE_SIZE)))
#675: FILE: drivers/s390/char/sclp_cmd.c:37:
+} __attribute__((packed, aligned(PAGE_SIZE)));

WARNING:MISPLACED_INIT: __initdata should be placed after early_read_info_sccb
#677: FILE: drivers/s390/char/sclp_cmd.c:39:
+static struct read_info_sccb __initdata early_read_info_sccb;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:MISPLACED_INIT: __initdata should be placed after early_read_info_sccb_valid
#678: FILE: drivers/s390/char/sclp_cmd.c:40:
+static int __initdata early_read_info_sccb_valid;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#804: FILE: drivers/s390/char/sclp_cmd.c:166:
+		printk(KERN_WARNING TAG "sync request failed "

WARNING:SPLIT_STRING: quoted string split across lines
#805: FILE: drivers/s390/char/sclp_cmd.c:167:
+		printk(KERN_WARNING TAG "sync request failed "
+		       "(cmd=0x%08x, status=0x%02x)\n", cmd, request->status);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#828: FILE: drivers/s390/char/sclp_cmd.c:190:
+} __attribute__((packed, aligned(PAGE_SIZE)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(PAGE_SIZE) over __attribute__((aligned(PAGE_SIZE)))
#828: FILE: drivers/s390/char/sclp_cmd.c:190:
+} __attribute__((packed, aligned(PAGE_SIZE)));

WARNING:MISPLACED_INIT: __initdata should be placed after early_read_cpu_info_sccb
#830: FILE: drivers/s390/char/sclp_cmd.c:192:
+static struct read_cpu_info_sccb __initdata early_read_cpu_info_sccb;

WARNING:MISPLACED_INIT: __initdata should be placed after sclp_cpu_info
#831: FILE: drivers/s390/char/sclp_cmd.c:193:
+static struct sclp_cpu_info __initdata sclp_cpu_info;

CHECK:SPACING: No space is necessary after a cast
#836: FILE: drivers/s390/char/sclp_cmd.c:198:
+	char *page = (char *) sccb;

CHECK:SPACING: No space is necessary after a cast
#884: FILE: drivers/s390/char/sclp_cmd.c:246:
+	sccb = (struct read_cpu_info_sccb *)  __get_free_page(GFP_KERNEL

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#894: FILE: drivers/s390/char/sclp_cmd.c:256:
+		printk(KERN_WARNING TAG "readcpuinfo failed "

WARNING:SPLIT_STRING: quoted string split across lines
#895: FILE: drivers/s390/char/sclp_cmd.c:257:
+		printk(KERN_WARNING TAG "readcpuinfo failed "
+		       "(response=0x%04x)\n", sccb->header.response_code);

CHECK:SPACING: No space is necessary after a cast
#901: FILE: drivers/s390/char/sclp_cmd.c:263:
+	free_page((unsigned long) sccb);

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#914: FILE: drivers/s390/char/sclp_cmd.c:276:
+} __attribute__((packed, aligned(8)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#914: FILE: drivers/s390/char/sclp_cmd.c:276:
+} __attribute__((packed, aligned(8)));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#939: FILE: drivers/s390/char/sclp_cmd.c:301:
+		printk(KERN_WARNING TAG "configure cpu failed (cmd=0x%08x, "

WARNING:SPLIT_STRING: quoted string split across lines
#940: FILE: drivers/s390/char/sclp_cmd.c:302:
+		printk(KERN_WARNING TAG "configure cpu failed (cmd=0x%08x, "
+		       "response=0x%04x)\n", cmd, sccb->header.response_code);

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1112: FILE: include/asm-s390/sclp.h:35:
+} __attribute__((packed));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000356929.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 28 warnings, 9 checks, 917 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000356929.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
