WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#99: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#104: FILE: include/linux/kvm_xinterface.h:1:
+#ifndef __KVM_XINTERFACE_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kvm_xinterface *' should also have an identifier name
#128: FILE: include/linux/kvm_xinterface.h:25:
+	void (*release)(struct kvm_xinterface *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:MEMORY_BARRIER: memory barrier without comment
#152: FILE: include/linux/kvm_xinterface.h:49:
+	rmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#203: FILE: include/linux/kvm_xinterface.h:100:
+	rmb();

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#275: FILE: virt/kvm/xinterface.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#293: FILE: virt/kvm/xinterface.c:19:
+ * along with this program; if not, write to the Free Software Foundation,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#294: FILE: virt/kvm/xinterface.c:20:
+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'gfn' may be better as '(gfn)' to avoid precedence issues
#325: FILE: virt/kvm/xinterface.c:51:
+#define _gfn_to_hva(gfn, memslot) \
+	(memslot->userspace_addr + (gfn - memslot->base_gfn) * PAGE_SIZE)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'memslot' - possible side-effects?
#325: FILE: virt/kvm/xinterface.c:51:
+#define _gfn_to_hva(gfn, memslot) \
+	(memslot->userspace_addr + (gfn - memslot->base_gfn) * PAGE_SIZE)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'memslot' may be better as '(memslot)' to avoid precedence issues
#325: FILE: virt/kvm/xinterface.c:51:
+#define _gfn_to_hva(gfn, memslot) \
+	(memslot->userspace_addr + (gfn - memslot->base_gfn) * PAGE_SIZE)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#347: FILE: virt/kvm/xinterface.c:73:
+	if (!memslot
+	    || gfn < memslot->base_gfn

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#348: FILE: virt/kvm/xinterface.c:74:
+	    || gfn < memslot->base_gfn
+	    || gfn >= memslot->base_gfn + memslot->npages) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#349: FILE: virt/kvm/xinterface.c:75:
+	    || gfn >= memslot->base_gfn + memslot->npages) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: virt/kvm/xinterface.c:95:
+      unsigned long npages)$

CHECK:SPACING: No space is necessary after a cast
#380: FILE: virt/kvm/xinterface.c:106:
+	page_list = (struct page **) __get_free_page(GFP_KERNEL);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:STATIC_CONST: Move const after static - use 'static const struct kvm_xvmap_ops '
#425: FILE: virt/kvm/xinterface.c:151:
+const static struct kvm_xvmap_ops _xvmap_ops = {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#437: FILE: virt/kvm/xinterface.c:163:
+_slow_copy_to_user(struct _xinterface *_intf, unsigned long dst,
+		    const void *src, unsigned long n)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000064611.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 8 warnings, 8 checks, 580 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000064611.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
