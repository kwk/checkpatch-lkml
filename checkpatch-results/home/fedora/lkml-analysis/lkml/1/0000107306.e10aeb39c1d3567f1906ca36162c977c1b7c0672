WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#241: FILE: mm/filemap.c:121:
+	 * if we're uptodate, flush out into the precache, otherwise
 	            ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#256: FILE: include/linux/precache.h:1:
+#ifndef _LINUX_PRECACHE_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#262: FILE: include/linux/precache.h:7:
+extern void precache_init(struct super_block *sb);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#263: FILE: include/linux/precache.h:8:
+extern void shared_precache_init(struct super_block *sb, char *uuid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#264: FILE: include/linux/precache.h:9:
+extern int precache_get(struct address_space *mapping, unsigned long index,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#265: FILE: include/linux/precache.h:10:
+extern int precache_get(struct address_space *mapping, unsigned long index,
+	       struct page *empty_page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#266: FILE: include/linux/precache.h:11:
+extern int precache_put(struct address_space *mapping, unsigned long index,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#267: FILE: include/linux/precache.h:12:
+extern int precache_put(struct address_space *mapping, unsigned long index,
+		struct page *page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#268: FILE: include/linux/precache.h:13:
+extern int precache_flush(struct address_space *mapping, unsigned long index);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#269: FILE: include/linux/precache.h:14:
+extern int precache_flush_inode(struct address_space *mapping);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#270: FILE: include/linux/precache.h:15:
+extern int precache_flush_filesystem(struct super_block *s);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#281: FILE: include/linux/precache.h:26:
+static inline int precache_get(struct address_space *mapping,
+		unsigned long index, struct page *empty_page)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#287: FILE: include/linux/precache.h:32:
+static inline int precache_put(struct address_space *mapping,
+		unsigned long index, struct page *page)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#293: FILE: include/linux/precache.h:38:
+static inline int precache_flush(struct address_space *mapping,
+		unsigned long index)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#314: FILE: mm/precache.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#315: FILE: mm/precache.c:2:
+ * linux/mm/precache.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#353: FILE: mm/precache.c:40:
+int precache_put(struct address_space *mapping, unsigned long index,
+ struct page *page)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: mm/precache.c:40:
+ struct page *page)$

CHECK:SPACING: No space is necessary after a cast
#356: FILE: mm/precache.c:43:
+	u64 obj = (unsigned long) mapping->host->i_ino;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#357: FILE: mm/precache.c:44:
+	u32 ind = (u32) index;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tmem_ops"
#365: FILE: mm/precache.c:52:
+		if (tmem_ops == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#370: FILE: mm/precache.c:57:
+		printk(KERN_INFO

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#382: FILE: mm/precache.c:69:
+int precache_get(struct address_space *mapping, unsigned long index,
+ struct page *empty_page)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: mm/precache.c:69:
+ struct page *empty_page)$

CHECK:SPACING: No space is necessary after a cast
#385: FILE: mm/precache.c:72:
+	u64 obj = (unsigned long) mapping->host->i_ino;

CHECK:SPACING: No space is necessary after a cast
#386: FILE: mm/precache.c:73:
+	u32 ind = (u32) index;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (tmem_ops->get_page)
#394: FILE: mm/precache.c:81:
+	return (tmem_ops->get_page)(tmem_pool, obj, ind, pfn);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: No space is necessary after a cast
#401: FILE: mm/precache.c:88:
+	u64 obj = (unsigned long) mapping->host->i_ino;

CHECK:SPACING: No space is necessary after a cast
#402: FILE: mm/precache.c:89:
+	u32 ind = (u32) index;

CHECK:SPACING: No space is necessary after a cast
#416: FILE: mm/precache.c:103:
+	u64 obj = (unsigned long) mapping->host->i_ino;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#435: FILE: mm/precache.c:122:
+	printk(KERN_INFO

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tmem_ops"
#445: FILE: mm/precache.c:132:
+	if (tmem_ops != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tmem_ops"
#455: FILE: mm/precache.c:142:
+	if (tmem_ops != NULL)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#456: FILE: mm/precache.c:143:
+		sb->precache_poolid =(*tmem_ops->new_pool)(uuid_lo, uuid_hi,
 		                    ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000107306.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 9 warnings, 25 checks, 377 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000107306.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
