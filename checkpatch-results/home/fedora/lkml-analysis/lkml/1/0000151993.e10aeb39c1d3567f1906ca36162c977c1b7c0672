WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#55: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#60: FILE: arch/microblaze/kernel/intc.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'SIE' may be misspelled - perhaps 'SIZE'?
#91: FILE: arch/microblaze/kernel/intc.c:32:
+#define SIE 0x10			/* Set Interrupt Enable bits */
         ^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#96: FILE: arch/microblaze/kernel/intc.c:37:
+#define MER_ME (1<<0)
                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#96: FILE: arch/microblaze/kernel/intc.c:37:
+#define MER_ME (1<<0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#97: FILE: arch/microblaze/kernel/intc.c:38:
+#define MER_HIE (1<<1)
                   ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#97: FILE: arch/microblaze/kernel/intc.c:38:
+#define MER_HIE (1<<1)

WARNING:TYPO_SPELLING: 'SIE' may be misspelled - perhaps 'SIZE'?
#102: FILE: arch/microblaze/kernel/intc.c:43:
+	out_be32(INTC_BASE + SIE, 1 << irq);
 	                     ^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#120: FILE: arch/microblaze/kernel/intc.c:61:
+	unsigned long mask = 1 << irq;
+	pr_debug("disable_and_ack: %d\n", irq);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#128: FILE: arch/microblaze/kernel/intc.c:69:
+	unsigned long mask = 1 << irq;
+	pr_debug("end: %d\n", irq);

WARNING:TYPO_SPELLING: 'SIE' may be misspelled - perhaps 'SIZE'?
#130: FILE: arch/microblaze/kernel/intc.c:71:
+		out_be32(INTC_BASE + SIE, mask);
 		                     ^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_irq', this function's name, in a string
#156: FILE: arch/microblaze/kernel/intc.c:97:
+	pr_debug("get_irq: %d\n", irq);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:STATIC_CONST_CHAR_ARRAY: char * array declaration might be better as static const
#176: FILE: arch/microblaze/kernel/intc.c:117:
+	static char *intc_list[] = {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "intc_list[j]"
#184: FILE: arch/microblaze/kernel/intc.c:125:
+	for (j = 0; intc_list[j] != NULL; j++) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#190: FILE: arch/microblaze/kernel/intc.c:131:
+	intc_baseaddr = *(int *) of_get_property(intc, "reg", NULL);

CHECK:SPACING: No space is necessary after a cast
#191: FILE: arch/microblaze/kernel/intc.c:132:
+	intc_baseaddr = (unsigned long) ioremap(intc_baseaddr, PAGE_SIZE);

CHECK:SPACING: No space is necessary after a cast
#192: FILE: arch/microblaze/kernel/intc.c:133:
+	nr_irq = *(int *) of_get_property(intc, "xlnx,num-intr-inputs", NULL);

CHECK:SPACING: No space is necessary after a cast
#195: FILE: arch/microblaze/kernel/intc.c:136:
+		*(int *) of_get_property(intc, "xlnx,kind-of-intr", NULL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#197: FILE: arch/microblaze/kernel/intc.c:138:
+		printk(KERN_INFO " ERROR: Mishmash in king-of-intr param\n");

CHECK:SPACING: No space is necessary after a cast
#200: FILE: arch/microblaze/kernel/intc.c:141:
+	selfmod_function((int *) arr_func, intc_baseaddr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#202: FILE: arch/microblaze/kernel/intc.c:143:
+	printk(KERN_INFO "%s #0 at 0x%08x, num_irq=%d, edge=0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: arch/microblaze/kernel/intc.c:144:
+	printk(KERN_INFO "%s #0 at 0x%08x, num_irq=%d, edge=0x%x\n",
+		intc_list[j], intc_baseaddr, nr_irq, intr_type);

WARNING:TYPO_SPELLING: 'explicity' may be misspelled - perhaps 'explicitly'?
#207: FILE: arch/microblaze/kernel/intc.c:148:
+	 * explicity requested.
 	   ^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#220: FILE: arch/microblaze/kernel/intc.c:161:
+			set_irq_chip_and_handler_name(i, &intc_dev,
+				handle_edge_irq, intc_dev.name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#224: FILE: arch/microblaze/kernel/intc.c:165:
+			set_irq_chip_and_handler_name(i, &intc_dev,
+				handle_level_irq, intc_dev.name);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000151993.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 12 warnings, 13 checks, 186 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000151993.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
