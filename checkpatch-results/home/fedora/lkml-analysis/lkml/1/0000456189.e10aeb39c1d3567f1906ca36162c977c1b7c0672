WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#36: FILE: drivers/mtd/ubi/sysfs.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#50: FILE: drivers/mtd/ubi/sysfs.c:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#51: FILE: drivers/mtd/ubi/sysfs.c:16:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#70: FILE: drivers/mtd/ubi/sysfs.c:35:
+	__ATTR(version, S_IRUGO, ubi_version_show, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#126: FILE: drivers/mtd/ubi/sysfs.c:91:
+	__ATTR(eraseblock_size, S_IRUGO, dev_attribute_show, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#128: FILE: drivers/mtd/ubi/sysfs.c:93:
+	__ATTR(avail_eraseblocks, S_IRUGO, dev_attribute_show, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#130: FILE: drivers/mtd/ubi/sysfs.c:95:
+	__ATTR(total_eraseblocks, S_IRUGO, dev_attribute_show, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#132: FILE: drivers/mtd/ubi/sysfs.c:97:
+	__ATTR(volumes_count, S_IRUGO, dev_attribute_show, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#134: FILE: drivers/mtd/ubi/sysfs.c:99:
+	__ATTR(max_ec, S_IRUGO, dev_attribute_show, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#136: FILE: drivers/mtd/ubi/sysfs.c:101:
+	__ATTR(reserved_for_bad, S_IRUGO, dev_attribute_show, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#138: FILE: drivers/mtd/ubi/sysfs.c:103:
+	__ATTR(bad_peb_count, S_IRUGO, dev_attribute_show, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#140: FILE: drivers/mtd/ubi/sysfs.c:105:
+	__ATTR(max_vol_count, S_IRUGO, dev_attribute_show, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#142: FILE: drivers/mtd/ubi/sysfs.c:107:
+	__ATTR(min_io_size, S_IRUGO, dev_attribute_show, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#144: FILE: drivers/mtd/ubi/sysfs.c:109:
+	__ATTR(bgt_enabled, S_IRUGO, dev_attribute_show, NULL);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#152: FILE: drivers/mtd/ubi/sysfs.c:117:
+	if (attr == &dev_eraseblock_size)
[...]
+	else if (attr == &dev_avail_eraseblocks)
[...]
+	else if (attr == &dev_total_eraseblocks)
[...]
+	else if (attr == &dev_volumes_count)
[...]
+	else if (attr == &dev_max_ec)
[...]
+	else if (attr == &dev_reserved_for_bad)
[...]
+	else if (attr == &dev_bad_peb_count)
[...]
+	else if (attr == &dev_max_vol_count)
[...]
+	else if (attr == &dev_min_io_size)
[...]
+	else if (attr == &dev_bgt_enabled) {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:RETURN_VOID: void function return statements are not generally useful
#181: FILE: drivers/mtd/ubi/sysfs.c:146:
+	return;
+}

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#198: FILE: drivers/mtd/ubi/sysfs.c:163:
+	sprintf(&ubi->uif.dev.bus_id[0], UBI_STRING_NAME"%d", ubi->ubi_num);

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#299: FILE: drivers/mtd/ubi/sysfs.c:264:
+	__ATTR(reserved_ebs, S_IRUGO, vol_attribute_show, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#301: FILE: drivers/mtd/ubi/sysfs.c:266:
+	__ATTR(type, S_IRUGO, vol_attribute_show, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#303: FILE: drivers/mtd/ubi/sysfs.c:268:
+	__ATTR(name, S_IRUGO, vol_attribute_show, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#305: FILE: drivers/mtd/ubi/sysfs.c:270:
+	__ATTR(corrupted, S_IRUGO, vol_attribute_show, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#307: FILE: drivers/mtd/ubi/sysfs.c:272:
+	__ATTR(alignment, S_IRUGO, vol_attribute_show, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#309: FILE: drivers/mtd/ubi/sysfs.c:274:
+	__ATTR(usable_eb_size, S_IRUGO, vol_attribute_show, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#311: FILE: drivers/mtd/ubi/sysfs.c:276:
+	__ATTR(data_bytes, S_IRUGO, vol_attribute_show, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#313: FILE: drivers/mtd/ubi/sysfs.c:278:
+	__ATTR(upd_marker, S_IRUGO, vol_attribute_show, NULL);

CHECK:BRACES: braces {} should be used on all arms of this statement
#343: FILE: drivers/mtd/ubi/sysfs.c:308:
+	if (attr == &vol_reserved_ebs)
[...]
+	else if (attr == &vol_type) {
[...]
+	} else if (attr == &vol_name)
[...]
+	else if (attr == &vol_corrupted)
[...]
+	else if (attr == &vol_alignment)
[...]
+	else if (attr == &vol_usable_eb_size) {
[...]
+	} else if (attr == &vol_data_bytes)
[...]
+	else if (attr == &vol_upd_marker)
[...]

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000456189.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 22 warnings, 2 checks, 408 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000456189.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
