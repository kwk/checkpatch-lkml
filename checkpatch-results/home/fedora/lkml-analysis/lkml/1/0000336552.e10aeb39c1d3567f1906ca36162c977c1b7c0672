WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#107: FILE: arch/x86/mm/init_32.c:325:
+	printk("set_highmem_pages_init(bad_ppro:%d)\n", bad_ppro);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_highmem_pages_init', this function's name, in a string
#107: FILE: arch/x86/mm/init_32.c:325:
+	printk("set_highmem_pages_init(bad_ppro:%d)\n", bad_ppro);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#108: FILE: arch/x86/mm/init_32.c:326:
+	printk("sizeof(struct page):        %d\n", sizeof(struct page));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#109: FILE: arch/x86/mm/init_32.c:327:
+	printk("sizeof(struct mem_section): %d\n", sizeof(struct mem_section));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#110: FILE: arch/x86/mm/init_32.c:328:
+	printk("PFN_SECTION_SHIFT:          %d\n", PFN_SECTION_SHIFT);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#112: FILE: arch/x86/mm/init_32.c:330:
+	printk("mem_map: %p\n", mem_map);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#113: FILE: arch/x86/mm/init_32.c:331:
+	printk("  highstart_pfn: %9ld [page: %p]\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: arch/x86/mm/init_32.c:332:
+	printk("  highstart_pfn: %9ld [page: %p]\n",
+		highstart_pfn, pfn_to_page(highstart_pfn));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#115: FILE: arch/x86/mm/init_32.c:333:
+	printk("    highend_pfn: %9ld [page: %p]\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#116: FILE: arch/x86/mm/init_32.c:334:
+	printk("    highend_pfn: %9ld [page: %p]\n",
+		highend_pfn, pfn_to_page(highend_pfn));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#117: FILE: arch/x86/mm/init_32.c:335:
+	printk("  highend_pfn-1: %9ld [page: %p]\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#118: FILE: arch/x86/mm/init_32.c:336:
+	printk("  highend_pfn-1: %9ld [page: %p]\n",
+		highend_pfn-1, pfn_to_page(highend_pfn-1));

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#118: FILE: arch/x86/mm/init_32.c:336:
+		highend_pfn-1, pfn_to_page(highend_pfn-1));
 		           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#118: FILE: arch/x86/mm/init_32.c:336:
+		highend_pfn-1, pfn_to_page(highend_pfn-1));
 		                                      ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#120: FILE: arch/x86/mm/init_32.c:338:
+	printk("NR_MEM_SECTIONS: %ld\n", NR_MEM_SECTIONS);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#121: FILE: arch/x86/mm/init_32.c:339:
+	printk("pfn_to_section_nr(highstart_pfn): %9ld\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: arch/x86/mm/init_32.c:340:
+	printk("pfn_to_section_nr(highstart_pfn): %9ld\n",
+		pfn_to_section_nr(highstart_pfn));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#123: FILE: arch/x86/mm/init_32.c:341:
+	printk("pfn_to_section_nr(highend_pfn):   %9ld\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#124: FILE: arch/x86/mm/init_32.c:342:
+	printk("pfn_to_section_nr(highend_pfn):   %9ld\n",
+		pfn_to_section_nr(highend_pfn));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#125: FILE: arch/x86/mm/init_32.c:343:
+	printk("pfn_to_section_nr(highend_pfn-1): %9ld\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#126: FILE: arch/x86/mm/init_32.c:344:
+	printk("pfn_to_section_nr(highend_pfn-1): %9ld\n",
+		pfn_to_section_nr(highend_pfn-1));

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#126: FILE: arch/x86/mm/init_32.c:344:
+		pfn_to_section_nr(highend_pfn-1));
 		                             ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#128: FILE: arch/x86/mm/init_32.c:346:
+	printk("totalhigh_pages: %9ld\n", totalhigh_pages);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#129: FILE: arch/x86/mm/init_32.c:347:
+	printk(" totalram_pages: %9ld\n", totalram_pages);

CHECK:BRACES: braces {} should be used on all arms of this statement
#132: FILE: arch/x86/mm/init_32.c:350:
+		if (pfn_valid(pfn))
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#134: FILE: arch/x86/mm/init_32.c:352:
+		else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#136: FILE: arch/x86/mm/init_32.c:354:
+				printk("bad pfn: %d\n", pfn);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#141: FILE: arch/x86/mm/init_32.c:359:
+	printk("totalhigh_pages: %9ld\n", totalhigh_pages);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#142: FILE: arch/x86/mm/init_32.c:360:
+	printk(" totalram_pages: %9ld\n", totalram_pages);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#144: FILE: arch/x86/mm/init_32.c:362:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#160: FILE: mm/sparse.c:298:
+	printk("sparse_init()\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sparse_init', this function's name, in a string
#160: FILE: mm/sparse.c:298:
+	printk("sparse_init()\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#163: FILE: mm/sparse.c:300:
+		printk("section %2ld: ", pnum);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#165: FILE: mm/sparse.c:302:
+			printk("!present\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#175: FILE: mm/sparse.c:316:
+		printk("map: %p, usemap: %p [content: %08lx]\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#176: FILE: mm/sparse.c:317:
+		printk("map: %p, usemap: %p [content: %08lx]\n",
+			map, usemap, __nr_to_section(pnum)->section_mem_map);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000336552.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 23 warnings, 13 checks, 73 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000336552.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
