WARNING:EMAIL_SUBJECT: A patch subject line should describe the change not the tool that found it
#13: 
Subject: [PATCH] Fix sparse annotation of spin unlock macros in one case

Naming the tool that found the issue is not very useful in the
subject line.  A good subject line summarizes the change that
the patch brings.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lock' - possible side-effects?
#54: FILE: include/linux/spinlock.h:231:
+# define spin_unlock(lock) \
+    do {__raw_spin_unlock(&(lock)->raw_lock); __release(lock); } while (0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#55: FILE: include/linux/spinlock.h:232:
+    do {__raw_spin_unlock(&(lock)->raw_lock); __release(lock); } while (0)$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lock' - possible side-effects?
#56: FILE: include/linux/spinlock.h:233:
+# define read_unlock(lock) \
+    do {__raw_read_unlock(&(lock)->raw_lock); __release(lock); } while (0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#57: FILE: include/linux/spinlock.h:234:
+    do {__raw_read_unlock(&(lock)->raw_lock); __release(lock); } while (0)$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lock' - possible side-effects?
#58: FILE: include/linux/spinlock.h:235:
+# define write_unlock(lock) \
+    do {__raw_write_unlock(&(lock)->raw_lock); __release(lock); } while (0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: include/linux/spinlock.h:236:
+    do {__raw_write_unlock(&(lock)->raw_lock); __release(lock); } while (0)$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lock' - possible side-effects?
#60: FILE: include/linux/spinlock.h:237:
+# define spin_unlock_irq(lock)			\
+do {						\
+	__raw_spin_unlock(&(lock)->raw_lock);	\
+	local_irq_enable();			\
+	__release(lock);			\
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lock' - possible side-effects?
#66: FILE: include/linux/spinlock.h:243:
+# define read_unlock_irq(lock)			\
+do {						\
+	__raw_read_unlock(&(lock)->raw_lock);	\
+	local_irq_enable();			\
+	__release(lock);			\
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lock' - possible side-effects?
#72: FILE: include/linux/spinlock.h:249:
+# define write_unlock_irq(lock)			\
+do {						\
+	__raw_write_unlock(&(lock)->raw_lock);	\
+	local_irq_enable();			\
+	__release(lock);			\
+} while (0)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000473286.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 6 checks, 39 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000473286.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
