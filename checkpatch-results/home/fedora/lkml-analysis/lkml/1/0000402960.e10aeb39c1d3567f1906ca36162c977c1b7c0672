WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
master.kernel.org:/pub/scm/linux/kernel/git/jgarzik/libata-dev.git upstream-linus

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#164: FILE: drivers/ata/ahci.c:560:
+		dev_printk(KERN_INFO, &pdev->dev,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#177: FILE: drivers/ata/ahci.c:638:
+static unsigned ahci_scr_offset(struct ata_port *ap, unsigned int sc_reg)

CHECK:BRACES: braces {} should be used on all arms of this statement
#317: FILE: drivers/ata/ahci.c:1030:
+	if (timeout_msec) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#324: FILE: drivers/ata/ahci.c:1037:
+	} else

WARNING:SPLIT_STRING: quoted string split across lines
#544: FILE: drivers/ata/ahci.c:1781:
 		"flags: "
+		"%s%s%s%s%s%s%s"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#545: FILE: drivers/ata/ahci.c:1782:
+		"%s%s%s%s%s%s%s"
+		"%s%s%s%s%s%s%s\n"

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#748: FILE: drivers/ata/libata-core.c:6967:
+EXPORT_SYMBOL_GPL(__ata_ehi_push_desc);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#750: FILE: drivers/ata/libata-core.c:6969:
+EXPORT_SYMBOL_GPL(ata_ehi_clear_desc);

WARNING:LINE_SPACING: Missing a blank line after declarations
#887: FILE: drivers/ata/libata-eh.c:618:
+			struct ata_queued_cmd *qc = ata_qc_from_tag(ap, tag);
+			if (qc)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:REPEATED_WORD: Possible repeated word: 'in'
#911: FILE: drivers/ata/libata-eh.c:642:
+ *	that EH kicks in in timely manner.

WARNING:SPLIT_STRING: quoted string split across lines
#1016: FILE: drivers/ata/libata-eh.c:1718:
 			"res %02x/%02x:%02x:%02x:%02x:%02x/%02x:%02x:%02x:%02x:%02x/%02x "
+			"Emask 0x%x (%s)%s\n",

WARNING:SPLIT_STRING: quoted string split across lines
#1174: FILE: drivers/ata/libata-scsi.c:3008:
+		ata_port_printk(ap, KERN_ERR, "WARNING: synchronous SCSI scan "
+				"failed without making any progress,\n"

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1234: FILE: drivers/ata/libata.h:115:
+extern void ata_scsi_scan_host(struct ata_port *ap, int sync);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1242: FILE: drivers/ata/libata.h:154:
+extern void ata_eh_fastdrain_timerfn(unsigned long arg);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1288: FILE: drivers/ata/pata_scc.c:266:
+		printk(KERN_INFO "%s: limit ATAPI UDMA to UDMA4\n", DRV_NAME);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1321: FILE: drivers/ata/pata_scc.c:762:
+				printk(KERN_WARNING "ata%u: operation failed (transfer data loss)\n",

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1348: FILE: drivers/ata/sata_inic162x.c:193:
+static int inic_scr_read(struct ata_port *ap, unsigned sc_reg, u32 *val)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1371: FILE: drivers/ata/sata_inic162x.c:210:
+static int inic_scr_write(struct ata_port *ap, unsigned sc_reg, u32 val)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1573: FILE: drivers/ata/sata_mv.c:981:
+	if (ofs != 0xffffffffU) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1576: FILE: drivers/ata/sata_mv.c:984:
+	} else

CHECK:BRACES: Unbalanced braces around else statement
#1589: FILE: drivers/ata/sata_mv.c:995:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#1747: FILE: drivers/ata/sata_mv.c:1765:
+	if (ofs != 0xffffffffU) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1750: FILE: drivers/ata/sata_mv.c:1768:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#1762: FILE: drivers/ata/sata_mv.c:1778:
+	if (ofs != 0xffffffffU) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1765: FILE: drivers/ata/sata_mv.c:1781:
+	} else

WARNING:SPLIT_STRING: quoted string split across lines
#1785: FILE: drivers/ata/sata_mv.c:2168:
+		DPRINTK("S-regs after ATA_RST: SStat 0x%08x SErr 0x%08x "
+			"SCtrl 0x%08x\n", status, serror, scontrol);

WARNING:SPLIT_STRING: quoted string split across lines
#1806: FILE: drivers/ata/sata_mv.c:2202:
+		DPRINTK("S-regs after PHY wake: SStat 0x%08x SErr 0x%08x "
+			"SCtrl 0x%08x\n", sstatus, serror, scontrol);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1831: FILE: drivers/ata/sata_nv.c:239:
+static int nv_scr_read (struct ata_port *ap, unsigned int sc_reg, u32 *val);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1832: FILE: drivers/ata/sata_nv.c:240:
+static int nv_scr_write (struct ata_port *ap, unsigned int sc_reg, u32 val);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1841: FILE: drivers/ata/sata_nv.c:718:
+		__ata_ehi_push_desc(ehi, "CPB resp_flags 0x%x: ", flags );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1866: FILE: drivers/ata/sata_nv.c:858:
+				__ata_ehi_push_desc(ehi, "ADMA status 0x%08x: ", status );

CHECK:BRACES: Unbalanced braces around else statement
#1884: FILE: drivers/ata/sata_nv.c:871:
+				} else

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2091: FILE: drivers/ata/sata_sil24.c:329:
+static int sil24_scr_read(struct ata_port *ap, unsigned sc_reg, u32 *val);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2092: FILE: drivers/ata/sata_sil24.c:330:
+static int sil24_scr_write(struct ata_port *ap, unsigned sc_reg, u32 val);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2122: FILE: drivers/ata/sata_sil24.c:491:
+static int sil24_scr_read(struct ata_port *ap, unsigned sc_reg, u32 *val)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2138: FILE: drivers/ata/sata_sil24.c:504:
+static int sil24_scr_write(struct ata_port *ap, unsigned sc_reg, u32 val)

CHECK:BRACES: braces {} should be used on all arms of this statement
#2188: FILE: drivers/ata/sata_sil24.c:568:
+	if (irq_stat & PORT_IRQ_COMPLETE)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2190: FILE: drivers/ata/sata_sil24.c:570:
+	else {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2355: FILE: drivers/ata/sata_sis.c:67:
+static int sis_scr_read (struct ata_port *ap, unsigned int sc_reg, u32 *val);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2356: FILE: drivers/ata/sata_sis.c:68:
+static int sis_scr_write (struct ata_port *ap, unsigned int sc_reg, u32 val);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2456: FILE: drivers/ata/sata_uli.c:60:
+static int uli_scr_read (struct ata_port *ap, unsigned int sc_reg, u32 *val);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2457: FILE: drivers/ata/sata_uli.c:61:
+static int uli_scr_write (struct ata_port *ap, unsigned int sc_reg, u32 val);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2466: FILE: drivers/ata/sata_uli.c:167:
+static int uli_scr_read (struct ata_port *ap, unsigned int sc_reg, u32 *val)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2478: FILE: drivers/ata/sata_uli.c:176:
+static int uli_scr_write (struct ata_port *ap, unsigned int sc_reg, u32 val)

WARNING:SPACING: Unnecessary space before function pointer arguments
#2632: FILE: include/linux/libata.h:627:
+	int (*scr_read) (struct ata_port *ap, unsigned int sc_reg, u32 *val);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2633: FILE: include/linux/libata.h:628:
+	int (*scr_write) (struct ata_port *ap, unsigned int sc_reg, u32 val);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2642: FILE: include/linux/libata.h:771:
+extern void ata_tf_to_fis(const struct ata_taskfile *tf,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2663: FILE: include/linux/libata.h:917:
+extern void __ata_ehi_push_desc(struct ata_eh_info *ehi, const char *fmt, ...);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2664: FILE: include/linux/libata.h:918:
+extern void ata_ehi_push_desc(struct ata_eh_info *ehi, const char *fmt, ...);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2665: FILE: include/linux/libata.h:919:
+extern void ata_ehi_clear_desc(struct ata_eh_info *ehi);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000402960.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 31 warnings, 18 checks, 2362 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000402960.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
