WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
master.kernel.org:/pub/scm/linux/kernel/git/jgarzik/misc-2.6.git irq-upstream

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: drivers/atm/horizon.c:1387:
+  hrz_dev *dev = dev_id;$

CHECK:CAMELCASE: Avoid CamelCase: <pcName>
#162: FILE: drivers/char/ip2/ip2main.c:755:
+					pcName, i2BoardPtrTable[i]);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <i2BoardPtrTable>
#162: FILE: drivers/char/ip2/ip2main.c:755:
+					pcName, i2BoardPtrTable[i]);

CHECK:CAMELCASE: Avoid CamelCase: <i2eBordStrPtr>
#173: FILE: drivers/char/ip2/ip2main.c:1170:
+ip2_irq_work(i2eBordStrPtr pB)

ERROR:SPACING: space prohibited after that open parenthesis '('
#176: FILE: drivers/char/ip2/ip2main.c:1173:
+	if (NO_MAIL_HERE != ( pB->i2eStartMail = iiGetMail(pB))) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#176: FILE: drivers/char/ip2/ip2main.c:1173:
+	if (NO_MAIL_HERE != ( pB->i2eStartMail = iiGetMail(pB))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:CAMELCASE: Avoid CamelCase: <pB>
#176: FILE: drivers/char/ip2/ip2main.c:1173:
+	if (NO_MAIL_HERE != ( pB->i2eStartMail = iiGetMail(pB))) {

CHECK:CAMELCASE: Avoid CamelCase: <i2eStartMail>
#176: FILE: drivers/char/ip2/ip2main.c:1173:
+	if (NO_MAIL_HERE != ( pB->i2eStartMail = iiGetMail(pB))) {

CHECK:CAMELCASE: Avoid CamelCase: <iiGetMail>
#176: FILE: drivers/char/ip2/ip2main.c:1173:
+	if (NO_MAIL_HERE != ( pB->i2eStartMail = iiGetMail(pB))) {

CHECK:CAMELCASE: Avoid CamelCase: <iiDisableMailIrq>
#179: FILE: drivers/char/ip2/ip2main.c:1176:
+		iiDisableMailIrq(pB);

ERROR:SPACING: space prohibited after that open parenthesis '('
#192: FILE: drivers/char/ip2/ip2main.c:1189:
+	i2ServiceBoard( pB );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#192: FILE: drivers/char/ip2/ip2main.c:1189:
+	i2ServiceBoard( pB );

CHECK:CAMELCASE: Avoid CamelCase: <i2ServiceBoard>
#192: FILE: drivers/char/ip2/ip2main.c:1189:
+	i2ServiceBoard( pB );

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#225: FILE: drivers/char/ip2/ip2main.c:1217:
+	ip2trace (ITRC_NO_PORT, ITRC_INTR, ITRC_RETURN, 0 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#225: FILE: drivers/char/ip2/ip2main.c:1217:
+	ip2trace (ITRC_NO_PORT, ITRC_INTR, ITRC_RETURN, 0 );

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#243: FILE: drivers/char/ip2/ip2main.c:1225:
+	ip2trace (ITRC_NO_PORT, ITRC_INTR, 99, 1, pB->i2eUsingIrq );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#243: FILE: drivers/char/ip2/ip2main.c:1225:
+	ip2trace (ITRC_NO_PORT, ITRC_INTR, 99, 1, pB->i2eUsingIrq );

CHECK:CAMELCASE: Avoid CamelCase: <i2eUsingIrq>
#243: FILE: drivers/char/ip2/ip2main.c:1225:
+	ip2trace (ITRC_NO_PORT, ITRC_INTR, 99, 1, pB->i2eUsingIrq );

CHECK:LINE_SPACING: Please don't use multiple blank lines
#341: FILE: drivers/char/pcmcia/synclink_cs.c:252:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#395: FILE: drivers/char/pcmcia/synclink_cs.c:343:
+		 (unsigned char) (read_reg(info, (reg)) | (mask)))

CHECK:SPACING: No space is necessary after a cast
#399: FILE: drivers/char/pcmcia/synclink_cs.c:346:
+		 (unsigned char) (read_reg(info, (reg)) & ~(mask)))

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#414: FILE: drivers/char/pcmcia/synclink_cs.c:360:
 }
+static void irq_enable(MGSLPC_INFO *info, unsigned char channel, unsigned short mask)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: drivers/char/pcmcia/synclink_cs.c:561:
+    info->idle_mode = HDLC_TXIDLE_FLAGS;$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#487: FILE: drivers/char/pcmcia/synclink_cs.c:782:
+		printk("tx_pause(%s)\n",info->device_name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#487: FILE: drivers/char/pcmcia/synclink_cs.c:782:
+		printk("tx_pause(%s)\n",info->device_name);
 		                       ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tx_pause', this function's name, in a string
#487: FILE: drivers/char/pcmcia/synclink_cs.c:782:
+		printk("tx_pause(%s)\n",info->device_name);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#503: FILE: drivers/char/pcmcia/synclink_cs.c:798:
+		printk("tx_release(%s)\n",info->device_name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#503: FILE: drivers/char/pcmcia/synclink_cs.c:798:
+		printk("tx_release(%s)\n",info->device_name);
 		                         ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tx_release', this function's name, in a string
#503: FILE: drivers/char/pcmcia/synclink_cs.c:798:
+		printk("tx_release(%s)\n",info->device_name);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#544: FILE: drivers/char/pcmcia/synclink_cs.c:853:
 	while((action = bh_action(info)) != 0) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#552: FILE: drivers/char/pcmcia/synclink_cs.c:860:
 		switch (action) {
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#743: FILE: drivers/char/pcmcia/synclink_cs.c:1320:
+		if ( debug_level >= DEBUG_LEVEL_ISR )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#743: FILE: drivers/char/pcmcia/synclink_cs.c:1320:
+		if ( debug_level >= DEBUG_LEVEL_ISR )

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#930: FILE: drivers/char/pcmcia/synclink_cs.c:1534:
+		info->timeout = (32*HZ*bits_per_char) /
 		                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#930: FILE: drivers/char/pcmcia/synclink_cs.c:1534:
+		info->timeout = (32*HZ*bits_per_char) /
 		                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1093: FILE: drivers/char/pcmcia/synclink_cs.c:1756:
+	spin_lock_irqsave(&info->lock,flags);
 	                             ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1269: FILE: drivers/char/pcmcia/synclink_cs.c:2075:
+
+

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1381: FILE: drivers/char/pcmcia/synclink_cs.c:2383:
 	if ((tty->termios->c_cflag == old_termios->c_cflag)
+	    && (RELEVANT_IFLAG(tty->termios->c_iflag)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1396: FILE: drivers/char/pcmcia/synclink_cs.c:2402:
+ ^I^Iif (!(tty->termios->c_cflag & CRTSCTS) ||$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1396: FILE: drivers/char/pcmcia/synclink_cs.c:2402:
+ ^I^Iif (!(tty->termios->c_cflag & CRTSCTS) ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1396: FILE: drivers/char/pcmcia/synclink_cs.c:2402:
+ ^I^Iif (!(tty->termios->c_cflag & CRTSCTS) ||$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1397: FILE: drivers/char/pcmcia/synclink_cs.c:2403:
+ 		if (!(tty->termios->c_cflag & CRTSCTS) ||
  		    !test_bit(TTY_THROTTLED, &tty->flags)) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1730: FILE: drivers/char/pcmcia/synclink_cs.c:2808:
+			ret += sprintf(buf+ret, " rxshort:%d", info->icount.rxshort);
 			                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1739: FILE: drivers/char/pcmcia/synclink_cs.c:2823:
+			ret += sprintf(buf+ret, " brk:%d", info->icount.brk);
 			                  ^

CHECK:BRACES: Unbalanced braces around else statement
#1805: FILE: drivers/char/pcmcia/synclink_cs.c:2937:
+	else {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2568: FILE: drivers/char/ppdev.c:270:
+static void pp_irq (void *private)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2592: FILE: drivers/char/riscom8.c:539:
+static irqreturn_t rc_interrupt(int dummy, void * dev_id)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2611: FILE: drivers/char/riscom8.c:603:
+static int rc_setup_board(struct riscom_board * bp)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2709: FILE: drivers/isdn/act2000/act2000_isa.c:83:
+		printk(KERN_DEBUG "act2000: ?IRQ %d %02x\n", card->irq, istatus);

CHECK:SPACING: No space is necessary after a cast
#2745: FILE: drivers/isdn/sc/init.c:338:
+				(void *)(unsigned long) cinst))

CHECK:SPACING: No space is necessary after a cast
#2780: FILE: drivers/isdn/sc/interrupt.c:32:
+	int card = (int)(unsigned long) card_inst;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2942: FILE: drivers/net/plip.c:383:
+		plip_interrupt (nl->dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3043: FILE: drivers/parport/ieee1284.c:574:
+void parport_ieee1284_interrupt (void *handle)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3151: FILE: drivers/parport/parport_gsc.c:321:
+		if (request_irq (p->irq, parport_irq_handler,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3214: FILE: drivers/parport/parport_pc.c:2297:
+		if (request_irq (p->irq, parport_irq_handler,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#3240: FILE: drivers/parport/parport_sunbpp.c:321:
+	if ((err = request_irq(p->irq, parport_irq_handler,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3254: FILE: drivers/parport/probe.c:258:
+	struct pardevice *dev = parport_open (devnum, "Device ID probe");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3267: FILE: drivers/parport/share.c:527:
+^I^I^Ivoid (*irq_func)(void *), $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#3333: FILE: include/linux/parport.h:233:
+	void (*irq_func)(void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3342: FILE: include/linux/parport.h:371:
+extern irqreturn_t parport_irq_handler(int irq, void *dev_id);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3352: FILE: include/linux/parport.h:386:
+^I^I^I  void (*irq_func)(void *), $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3361: FILE: include/linux/parport.h:468:
+extern void parport_ieee1284_interrupt (void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3361: FILE: include/linux/parport.h:468:
+extern void parport_ieee1284_interrupt (void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#3361: FILE: include/linux/parport.h:468:
+extern void parport_ieee1284_interrupt (void *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3374: FILE: include/linux/parport.h:510:
+extern struct pardevice *parport_open (int devnum, const char *name);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3374: FILE: include/linux/parport.h:510:
+extern struct pardevice *parport_open (int devnum, const char *name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3385: FILE: include/linux/parport.h:519:
+	parport_ieee1284_interrupt (port);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000366412.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 17 errors, 23 warnings, 28 checks, 2936 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000366412.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
