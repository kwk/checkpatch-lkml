WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
i386 optimization of the immediate values which uses a movl with code patching

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#42: FILE: include/asm-i386/immediate.h:1:
+#ifndef _ASM_I386_IMMEDIATE_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:SPACING: space prohibited after that open parenthesis '('
#64: FILE: include/asm-i386/immediate.h:23:
+		asm (	".section __immediate, \"a\", @progbits;\n\t"	\

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#71: FILE: include/asm-i386/immediate.h:30:
+				  "m" (*(char*)flags),			\

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'flags' - possible side-effects?
#82: FILE: include/asm-i386/immediate.h:41:
+#define _immediate(flags, var)						\
+({									\
+	(((flags) & IF_LOCKDEP) && ((flags) & IF_OPTIMIZED)) ?		\
+		immediate_optimized(flags, var) :			\
+		immediate_generic(flags, var);				\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'var' - possible side-effects?
#82: FILE: include/asm-i386/immediate.h:41:
+#define _immediate(flags, var)						\
+({									\
+	(((flags) & IF_LOCKDEP) && ((flags) & IF_OPTIMIZED)) ?		\
+		immediate_optimized(flags, var) :			\
+		immediate_generic(flags, var);				\
+})

WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#93: FILE: include/asm-i386/immediate.h:52:
+ * Architecture dependant immediate information, used internally for immediate
                 ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#107: FILE: include/asm-i386/immediate.h:66:
+	(*(IMMEDIATE_OPTIMIZED_ENABLE_TYPE*)				\

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#108: FILE: include/asm-i386/immediate.h:67:
+		((char*)(a)+IMMEDIATE_OPTIMIZED_ENABLE_IMMEDIATE_OFFSET))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#108: FILE: include/asm-i386/immediate.h:67:
+		((char*)(a)+IMMEDIATE_OPTIMIZED_ENABLE_IMMEDIATE_OFFSET))
 		           ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#110: FILE: include/asm-i386/immediate.h:69:
+extern int immediate_optimized_set_enable(void *address, char enable);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#130: FILE: arch/i386/kernel/immediate.c:1:
+/*

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#208: FILE: arch/i386/kernel/immediate.c:79:
+#include <asm/cacheflush.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#231: FILE: arch/i386/kernel/immediate.c:102:
+static int immediate_notifier(struct notifier_block *nb,
+	unsigned long val, void *data)

CHECK:SPACING: No space is necessary after a cast
#233: FILE: arch/i386/kernel/immediate.c:104:
+	enum die_val die_val = (enum die_val) val;

WARNING:MEMORY_BARRIER: memory barrier without comment
#272: FILE: arch/i386/kernel/immediate.c:143:
+	wmb();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#278: FILE: arch/i386/kernel/immediate.c:149:
+	BUG_ON(ret != 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:MEMORY_BARRIER: memory barrier without comment
#281: FILE: arch/i386/kernel/immediate.c:152:
+	wmb();

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#294: FILE: arch/i386/kernel/immediate.c:165:
+	synchronize_sched();

Usage of a deprecated RCU API is detected.  It is recommended to replace
old flavourful RCU APIs by their new vanilla-RCU counterparts.

The full list of available RCU APIs can be viewed from the kernel docs.

See: https://www.kernel.org/doc/html/latest/RCU/whatisRCU.html#full-list-of-rcu-apis

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#328: FILE: arch/i386/kernel/traps.c:858:
+	 * interrupts disabled. Normal trap handlers don't. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000410954.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 9 warnings, 7 checks, 275 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000410954.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
