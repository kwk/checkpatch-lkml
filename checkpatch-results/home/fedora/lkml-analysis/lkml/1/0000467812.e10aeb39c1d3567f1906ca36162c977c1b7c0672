WARNING:TYPO_SPELLING: 'cacheing' may be misspelled - perhaps 'caching'?
#26: 
write cacheing in support of read/write exclusive mounts.  This feature
      ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BAD_SIGN_OFF: Non-standard signature: 'Signed-of-by:' - perhaps 'Signed-off-by:'?
#33: 
Signed-of-by: Eric Van Hensbergen <ericvh@gmail.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#72: FILE: fs/9p/9p.h:373:
+		 u32 count, const char __user * data, char * kdata,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#72: FILE: fs/9p/9p.h:373:
+		 u32 count, const char __user * data, char * kdata,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#84: FILE: fs/9p/conv.c:462:
+v9fs_put_kernel_data(struct cbuf *bufp, char * kdata, int count,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#85: FILE: fs/9p/conv.c:463:
+v9fs_put_kernel_data(struct cbuf *bufp, char * kdata, int count,
+		   unsigned char **pdata)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#100: FILE: fs/9p/conv.c:735:
+				      const char __user * data, char * kdata)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#100: FILE: fs/9p/conv.c:735:
+				      const char __user * data, char * kdata)

ERROR:SPACING: space required before the open parenthesis '('
#109: FILE: fs/9p/conv.c:750:
+	if(data) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: fs/9p/conv.c:751:
+^I^Ierr = v9fs_put_user_data(bufp, data, count, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: fs/9p/conv.c:752:
+^I^I^I^I^I^I&fc->params.twrite.data); $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#111: FILE: fs/9p/conv.c:752:
+		err = v9fs_put_user_data(bufp, data, count, 
+						&fc->params.twrite.data); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#113: FILE: fs/9p/conv.c:754:
+^I^Ierr = v9fs_put_kernel_data(bufp, kdata, count, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: fs/9p/conv.c:755:
+^I^I^I^I^I^I&fc->params.twrite.data); $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: fs/9p/conv.c:755:
+		err = v9fs_put_kernel_data(bufp, kdata, count, 
+						&fc->params.twrite.data); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#115: FILE: fs/9p/conv.c:756:
+^I}^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#140: FILE: fs/9p/fcall.c:396:
+ * @data: userspace data $

CHECK:SPACING: No space is necessary after a cast
#178: FILE: fs/9p/fid.c:45:
+	struct list_head *fid_list= (struct list_head *) *priv;

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#178: FILE: fs/9p/fid.c:45:
+	struct list_head *fid_list= (struct list_head *) *priv;
 	                          ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fid_list"
#180: FILE: fs/9p/fid.c:47:
+	if (fid_list == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!priv"
#184: FILE: fs/9p/fid.c:50:
+		if (*priv == NULL) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#197: FILE: fs/9p/fid.c:82:
+	new->filp = NULL;
 	     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#227: FILE: fs/9p/v9fs_vfs.h:56:
+ssize_t v9fs_write(struct file *filp, const char __user * data, char * kdata, size_t count, loff_t * offset);
                                 ^^^^

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#227: FILE: fs/9p/v9fs_vfs.h:56:
+ssize_t v9fs_write(struct file *filp, const char __user * data, char * kdata, size_t count, loff_t * offset);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#227: FILE: fs/9p/v9fs_vfs.h:56:
+ssize_t v9fs_write(struct file *filp, const char __user * data, char * kdata, size_t count, loff_t * offset);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#227: FILE: fs/9p/v9fs_vfs.h:56:
+ssize_t v9fs_write(struct file *filp, const char __user * data, char * kdata, size_t count, loff_t * offset);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#227: FILE: fs/9p/v9fs_vfs.h:56:
+ssize_t v9fs_write(struct file *filp, const char __user * data, char * kdata, size_t count, loff_t * offset);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#256: FILE: fs/9p/vfs_addr.c:54:
+static int v9fs_vfs_readpage_worker(struct file *filp, struct page *page)
                                                  ^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#276: FILE: fs/9p/vfs_addr.c:78:
+			printk(KERN_ERR "v9fs_t_read returned %d\n", result);

WARNING:INDENTED_LABEL: labels should not be indented
#293: FILE: fs/9p/vfs_addr.c:103:
+      io_error:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#304: FILE: fs/9p/vfs_addr.c:114:
+ * @from: starting offset $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#307: FILE: fs/9p/vfs_addr.c:117:
+ * This is mostly just a $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#312: FILE: fs/9p/vfs_addr.c:122:
+		       unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#312: FILE: fs/9p/vfs_addr.c:122:
+		       unsigned from, unsigned to)

WARNING:LINE_SPACING: Missing a blank line after declarations
#317: FILE: fs/9p/vfs_addr.c:127:
+			void *kaddr = kmap_atomic(page, KM_USER0);
+			memset(kaddr, 0, from);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'to == PAGE_CACHE_SIZE'
#325: FILE: fs/9p/vfs_addr.c:135:
+	if ((to == PAGE_CACHE_SIZE) && (from == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'from == 0'
#325: FILE: fs/9p/vfs_addr.c:135:
+	if ((to == PAGE_CACHE_SIZE) && (from == 0))

WARNING:BRACES: braces {} are not necessary for single statement blocks
#328: FILE: fs/9p/vfs_addr.c:138:
+	if ((file->f_flags & O_ACCMODE) != O_WRONLY) {
+		v9fs_vfs_readpage_worker(file, page);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#343: FILE: fs/9p/vfs_addr.c:153:
+static int v9fs_vfs_readpage(struct file *filp, struct page *page)
                                           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#349: FILE: fs/9p/vfs_addr.c:159:
+	retval = v9fs_vfs_readpage_worker(filp, page);
 	                                  ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#358: FILE: fs/9p/vfs_addr.c:168:
+ * $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#377: FILE: fs/9p/vfs_addr.c:187:
+		return fid->filp;
 		            ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#379: FILE: fs/9p/vfs_addr.c:189:
+	dprintk(DEBUG_VFS, " filp not found for page: %p\n", page);
 	                     ^^^^

WARNING:TYPO_SPELLING: 'mmaped' may be misspelled - perhaps 'mapped'?
#384: FILE: fs/9p/vfs_addr.c:194:
+ * v9fs_vfs_writepage - write a mmaped page to server
                                 ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#387: FILE: fs/9p/vfs_addr.c:197:
+ * $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#399: FILE: fs/9p/vfs_addr.c:209:
+	struct file *filp = v9fs_find_file(page);
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#404: FILE: fs/9p/vfs_addr.c:214:
+	if ((!inode) || (!filp))
 	                  ^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!inode'
#404: FILE: fs/9p/vfs_addr.c:214:
+	if ((!inode) || (!filp))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!filp'
#404: FILE: fs/9p/vfs_addr.c:214:
+	if ((!inode) || (!filp))

CHECK:CAMELCASE: Avoid CamelCase: <UnlockPage>
#405: FILE: fs/9p/vfs_addr.c:215:
+		goto UnlockPage;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: No space is necessary after a cast
#419: FILE: fs/9p/vfs_addr.c:229:
+	offset = ((loff_t) page->index << PAGE_CACHE_SHIFT) + pageoffset;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#423: FILE: fs/9p/vfs_addr.c:233:
+	retval = v9fs_write(filp, NULL, buffer, count, &offset);
 	                    ^^^^

CHECK:CAMELCASE: Avoid CamelCase: <UnmapPage>
#428: FILE: fs/9p/vfs_addr.c:238:
+		goto UnmapPage;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#431: FILE: fs/9p/vfs_addr.c:241:
+	if (retval < count) {
+		dprintk(DEBUG_ERROR, "Short write\n");
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#435: FILE: fs/9p/vfs_addr.c:245:
+	if (offset > inode->i_size) {
+		inode->i_size = offset;
+	}

WARNING:INDENTED_LABEL: labels should not be indented
#445: FILE: fs/9p/vfs_addr.c:255:
+      UnmapPage:

WARNING:INDENTED_LABEL: labels should not be indented
#447: FILE: fs/9p/vfs_addr.c:257:
+      UnlockPage:

ERROR:CODE_INDENT: code indent should use tabs where possible
#470: FILE: fs/9p/vfs_dir.c:200:
+ ^I^Iv9fs_fid_destroy(fid);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#470: FILE: fs/9p/vfs_dir.c:200:
+ ^I^Iv9fs_fid_destroy(fid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: fs/9p/vfs_dir.c:200:
+ ^I^Iv9fs_fid_destroy(fid);$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#484: FILE: fs/9p/vfs_file.c:82:
+	if((vfid->qid.version) && (v9ses->cache) && !(file->f_flags&O_APPEND)) {
 	                                                           ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vfid->qid.version'
#484: FILE: fs/9p/vfs_file.c:82:
+	if((vfid->qid.version) && (v9ses->cache) && !(file->f_flags&O_APPEND)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'v9ses->cache'
#484: FILE: fs/9p/vfs_file.c:82:
+	if((vfid->qid.version) && (v9ses->cache) && !(file->f_flags&O_APPEND)) {

ERROR:SPACING: space required before the open parenthesis '('
#484: FILE: fs/9p/vfs_file.c:82:
+	if((vfid->qid.version) && (v9ses->cache) && !(file->f_flags&O_APPEND)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#490: FILE: fs/9p/vfs_file.c:88:
+         v9fs_fid_insert(vfid, &inode->i_private);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: fs/9p/vfs_file.c:88:
+         v9fs_fid_insert(vfid, &inode->i_private);$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#514: FILE: fs/9p/vfs_file.c:201:
+v9fs_write(struct file *filp, const char __user * data,
                         ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#514: FILE: fs/9p/vfs_file.c:201:
+v9fs_write(struct file *filp, const char __user * data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#515: FILE: fs/9p/vfs_file.c:202:
+v9fs_write(struct file *filp, const char __user * data,
+		char* kdata, size_t count, loff_t * offset)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#515: FILE: fs/9p/vfs_file.c:202:
+		char* kdata, size_t count, loff_t * offset)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#515: FILE: fs/9p/vfs_file.c:202:
+		char* kdata, size_t count, loff_t * offset)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#525: FILE: fs/9p/vfs_file.c:213:
+^Idprintk(DEBUG_VFS, "count %d offset %x\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#526: FILE: fs/9p/vfs_file.c:214:
+	dprintk(DEBUG_VFS, "count %d offset %x\n", 
+			(int)count, (int)*offset);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#535: FILE: fs/9p/vfs_file.c:223:
+^I^Iresult = v9fs_t_write(v9ses, fid, *offset, rsize, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#536: FILE: fs/9p/vfs_file.c:224:
+		result = v9fs_t_write(v9ses, fid, *offset, rsize, 
+						data, kdata, &fcall);

ERROR:SPACING: space required before the open parenthesis '('
#545: FILE: fs/9p/vfs_file.c:243:
+		if(data)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#556: FILE: fs/9p/vfs_file.c:253:
 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#558: FILE: fs/9p/vfs_file.c:255:
+ * v9fs_file_write - write to a file $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#567: FILE: fs/9p/vfs_file.c:264:
+v9fs_file_write(struct file *filp, const char __user * data,
                              ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#567: FILE: fs/9p/vfs_file.c:264:
+v9fs_file_write(struct file *filp, const char __user * data,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#568: FILE: fs/9p/vfs_file.c:265:
+		size_t count, loff_t * offset)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#574: FILE: fs/9p/vfs_file.c:271:
+^Idprintk(DEBUG_VFS, "count %d offset %x\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#575: FILE: fs/9p/vfs_file.c:272:
+	dprintk(DEBUG_VFS, "count %d offset %x\n", 
+			(int)count, (int)*offset);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#576: FILE: fs/9p/vfs_file.c:273:
+	ret = v9fs_write(filp, data, NULL, count, offset);
 	                 ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#624: FILE: fs/9p/vfs_inode.c:530:
+^I        if((vfid->qid.version) && (v9ses->cache) && $

ERROR:CODE_INDENT: code indent should use tabs where possible
#624: FILE: fs/9p/vfs_inode.c:530:
+^I        if((vfid->qid.version) && (v9ses->cache) && $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vfid->qid.version'
#624: FILE: fs/9p/vfs_inode.c:530:
+	        if((vfid->qid.version) && (v9ses->cache) && 
+		  !(flags & O_APPEND)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'v9ses->cache'
#624: FILE: fs/9p/vfs_inode.c:530:
+	        if((vfid->qid.version) && (v9ses->cache) && 
+		  !(flags & O_APPEND)) {

ERROR:SPACING: space required before the open parenthesis '('
#624: FILE: fs/9p/vfs_inode.c:530:
+	        if((vfid->qid.version) && (v9ses->cache) && 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#625: FILE: fs/9p/vfs_inode.c:531:
+	        if((vfid->qid.version) && (v9ses->cache) && 
+		  !(flags & O_APPEND)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#626: FILE: fs/9p/vfs_inode.c:532:
+                ^I/* enable cached file options */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#626: FILE: fs/9p/vfs_inode.c:532:
+                ^I/* enable cached file options */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#626: FILE: fs/9p/vfs_inode.c:532:
+                ^I/* enable cached file options */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#627: FILE: fs/9p/vfs_inode.c:533:
+                ^Iif(filp->f_op == &v9fs_file_operations)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#627: FILE: fs/9p/vfs_inode.c:533:
+                ^Iif(filp->f_op == &v9fs_file_operations)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#627: FILE: fs/9p/vfs_inode.c:533:
+                ^Iif(filp->f_op == &v9fs_file_operations)$

ERROR:SPACING: space required before the open parenthesis '('
#627: FILE: fs/9p/vfs_inode.c:533:
+                	if(filp->f_op == &v9fs_file_operations)

ERROR:CODE_INDENT: code indent should use tabs where possible
#628: FILE: fs/9p/vfs_inode.c:534:
+                        ^Ifilp->f_op = &v9fs_cached_file_operations;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#628: FILE: fs/9p/vfs_inode.c:534:
+                        ^Ifilp->f_op = &v9fs_cached_file_operations;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: fs/9p/vfs_inode.c:534:
+                        ^Ifilp->f_op = &v9fs_cached_file_operations;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#629: FILE: fs/9p/vfs_inode.c:535:
+        ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#629: FILE: fs/9p/vfs_inode.c:535:
+        ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#629: FILE: fs/9p/vfs_inode.c:535:
+        ^I}$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000467812.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 41 errors, 38 warnings, 24 checks, 532 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000467812.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
