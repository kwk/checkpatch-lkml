WARNING:TYPO_SPELLING: 'artifical' may be misspelled - perhaps 'artificial'?
#34: 
name space instead of using an artifical name like core_spin,
                               ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#103: FILE: arch/alpha/include/asm/spinlock.h:20:
+static inline void __raw_spin_unlock(arch_spinlock_t * lock)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#110: FILE: arch/alpha/include/asm/spinlock.h:26:
+static inline void __raw_spin_lock(arch_spinlock_t * lock)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#638: FILE: arch/powerpc/include/asm/spinlock.h:99:
+extern void __spin_yield(arch_spinlock_t *lock);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#674: FILE: arch/powerpc/include/asm/spinlock.h:152:
+extern void __raw_spin_unlock_wait(arch_spinlock_t *lock);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#738: FILE: arch/powerpc/platforms/pasemi/setup.c:77:
 static void __devinit pas_give_timebase(void)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#751: FILE: arch/s390/include/asm/spinlock.h:60:
+extern void _raw_spin_lock_wait(arch_spinlock_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'arch_spinlock_t *' should also have an identifier name
#751: FILE: arch/s390/include/asm/spinlock.h:60:
+extern void _raw_spin_lock_wait(arch_spinlock_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#752: FILE: arch/s390/include/asm/spinlock.h:61:
+extern void _raw_spin_lock_wait_flags(arch_spinlock_t *, unsigned long flags);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'arch_spinlock_t *' should also have an identifier name
#752: FILE: arch/s390/include/asm/spinlock.h:61:
+extern void _raw_spin_lock_wait_flags(arch_spinlock_t *, unsigned long flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#753: FILE: arch/s390/include/asm/spinlock.h:62:
+extern int _raw_spin_trylock_retry(arch_spinlock_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'arch_spinlock_t *' should also have an identifier name
#753: FILE: arch/s390/include/asm/spinlock.h:62:
+extern int _raw_spin_trylock_retry(arch_spinlock_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#754: FILE: arch/s390/include/asm/spinlock.h:63:
+extern void _raw_spin_relax(arch_spinlock_t *lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#797: FILE: arch/s390/include/asm/spinlock_types.h:10:
+} __attribute__ ((aligned (4))) arch_spinlock_t;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(4) over __attribute__((aligned(4)))
#797: FILE: arch/s390/include/asm/spinlock_types.h:10:
+} __attribute__ ((aligned (4))) arch_spinlock_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1173: FILE: arch/x86/include/asm/spinlock_types.h:8:
+typedef struct arch_spinlock {

WARNING:MISPLACED_INIT: __cpuinitdata should be placed after sync_lock
#1215: FILE: arch/x86/kernel/tsc_sync.c:36:
+static __cpuinitdata arch_spinlock_t sync_lock = __RAW_SPIN_LOCK_UNLOCKED;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1368: FILE: include/linux/spinlock_types_up.h:25:
+typedef struct { } arch_spinlock_t;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000038712.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 10 warnings, 6 checks, 1160 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000038712.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
