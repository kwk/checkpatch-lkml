WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#99: FILE: ltt/ltt-kprobes.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#101: FILE: ltt/ltt-kprobes.c:3:
+ * ^I^IMathieu Desnoyers (mathieu.desnoyers@polymtl.ca)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#118: FILE: ltt/ltt-kprobes.c:20:
+#define LTT_KPROBES_DIR ^I"kprobes"$

CHECK:BIT_MACRO: Prefer using the BIT macro
#127: FILE: ltt/ltt-kprobes.c:29:
+#define LTT_KPROBE_TABLE_SIZE	(1 << LTT_KPROBE_HASH_BITS)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#143: FILE: ltt/ltt-kprobes.c:45:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#160: FILE: ltt/ltt-kprobes.c:62:
+		__trace_mark(0, kprobe_state, kprobe_table,
+			call_data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#174: FILE: ltt/ltt-kprobes.c:76:
+	ltt_specialized_trace(marker, marker->single.probe_private,
+		&data, sizeof(data), sizeof(data));

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#193: FILE: ltt/ltt-kprobes.c:95:
+	if (sscanf(key, "%li", &addr) != 1)
+		addr = 0;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#211: FILE: ltt/ltt-kprobes.c:113:
+		symbol_name[symbol_len-1] = '\0';
 		                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#214: FILE: ltt/ltt-kprobes.c:116:
+			if (sscanf(symbol_end, "%i", &offset) != 1)
+				offset = 0;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#219: FILE: ltt/ltt-kprobes.c:121:
+	hash = jhash(key, key_len-1, 0);
 	                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#220: FILE: ltt/ltt-kprobes.c:122:
+	head = &ltt_kprobe_table[hash & ((1 << LTT_KPROBE_HASH_BITS)-1)];
 	                                                            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#223: FILE: ltt/ltt-kprobes.c:125:
+			printk(KERN_NOTICE "Kprobe %s busy\n", key);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*e)...) over kzalloc(sizeof(struct kprobe_entry)...)
#232: FILE: ltt/ltt-kprobes.c:134:
+	e = kzalloc(sizeof(struct kprobe_entry) + key_len, GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#266: FILE: ltt/ltt-kprobes.c:168:
+	hash = jhash(key, key_len-1, 0);
 	                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#267: FILE: ltt/ltt-kprobes.c:169:
+	head = &ltt_kprobe_table[hash & ((1 << LTT_KPROBE_HASH_BITS)-1)];
 	                                                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#308: FILE: ltt/ltt-kprobes.c:210:
+static ssize_t enable_op_write(struct file *file,
+	const char __user *user_buf, size_t count, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#344: FILE: ltt/ltt-kprobes.c:246:
+static ssize_t disable_op_write(struct file *file,
+	const char __user *user_buf, size_t count, loff_t *ppos)

WARNING:LINE_SPACING: Missing a blank line after declarations
#438: FILE: ltt/ltt-kprobes.c:340:
+	struct kprobe_entry *e = m->private;
+	seq_printf(m, "%s\n", e->key);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#494: FILE: ltt/ltt-kprobes.c:396:
+	printk(KERN_INFO "LTT : ltt-kprobes init\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#505: FILE: ltt/ltt-kprobes.c:407:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ltt_kprobes_init', this function's name, in a string
#506: FILE: ltt/ltt-kprobes.c:408:
+		       "ltt_kprobes_init: failed to create dir %s\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#513: FILE: ltt/ltt-kprobes.c:415:
+	ltt_kprobes_enable_dentry = debugfs_create_file(LTT_KPROBES_ENABLE,
+		S_IWUSR, ltt_kprobes_dir, NULL,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#513: FILE: ltt/ltt-kprobes.c:415:
+		S_IWUSR, ltt_kprobes_dir, NULL,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#516: FILE: ltt/ltt-kprobes.c:418:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ltt_kprobes_init', this function's name, in a string
#517: FILE: ltt/ltt-kprobes.c:419:
+		       "ltt_kprobes_init: failed to create file %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#524: FILE: ltt/ltt-kprobes.c:426:
+	ltt_kprobes_disable_dentry = debugfs_create_file(LTT_KPROBES_DISABLE,
+		S_IWUSR, ltt_kprobes_dir, NULL,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#524: FILE: ltt/ltt-kprobes.c:426:
+		S_IWUSR, ltt_kprobes_dir, NULL,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#527: FILE: ltt/ltt-kprobes.c:429:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ltt_kprobes_init', this function's name, in a string
#528: FILE: ltt/ltt-kprobes.c:430:
+		       "ltt_kprobes_init: failed to create file %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#535: FILE: ltt/ltt-kprobes.c:437:
+	ltt_kprobes_list_dentry = debugfs_create_file(LTT_KPROBES_LIST,
+		S_IWUSR, ltt_kprobes_dir, NULL,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#535: FILE: ltt/ltt-kprobes.c:437:
+		S_IWUSR, ltt_kprobes_dir, NULL,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#538: FILE: ltt/ltt-kprobes.c:440:
+		printk(KERN_ERR

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ltt_kprobes_init', this function's name, in a string
#539: FILE: ltt/ltt-kprobes.c:441:
+		       "ltt_kprobes_init: failed to create file %s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#563: FILE: ltt/ltt-kprobes.c:465:
+	printk(KERN_INFO "LTT : ltt-kprobes exit\n");

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#587: FILE: include/linux/ltt-tracer.h:676:
+extern void ltt_dump_kprobes_table(void *call_data);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000158726.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 20 warnings, 16 checks, 523 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000158726.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
