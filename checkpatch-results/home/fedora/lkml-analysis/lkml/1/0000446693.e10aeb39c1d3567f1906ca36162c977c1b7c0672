WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
For all of you that think cciss should be a scsi driver here is the patch that

CHECK:CAMELCASE: Avoid CamelCase: <CommandList_struct>
#95: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2366:
+static inline int evaluate_target_status(CommandList_struct *cmd)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <ScsiStatus>
#100: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2371:
+	if (cmd->err_info->ScsiStatus != 0x02) { /* not check condition? */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#102: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2373:
+			printk(KERN_WARNING "cciss: cmd %p "

WARNING:SPLIT_STRING: quoted string split across lines
#103: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2374:
+			printk(KERN_WARNING "cciss: cmd %p "
+			       "has SCSI Status 0x%x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:CAMELCASE: Avoid CamelCase: <SenseInfo>
#109: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2380:
+	sense_key = 0xf & cmd->err_info->SenseInfo[2];

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sense_key == 0x0'
#111: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2382:
+	if ((sense_key == 0x0) || (sense_key == 0x1))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sense_key == 0x1'
#111: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2382:
+	if ((sense_key == 0x0) || (sense_key == 0x1))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#116: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2387:
+			printk(KERN_WARNING "cciss: cmd %p has CHECK CONDITION"

WARNING:SPLIT_STRING: quoted string split across lines
#117: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2388:
+			printk(KERN_WARNING "cciss: cmd %p has CHECK CONDITION"
+			       " sense key = 0x%x\n", cmd, sense_key);

CHECK:BRACES: braces {} should be used on all arms of this statement
#122: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2393:
+	if (cmd->rq->sense) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <SenseLen>
#123: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2394:
+		if (cmd->rq->sense_len > cmd->err_info->SenseLen)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#126: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2397:
+		memcpy(cmd->rq->sense, cmd->err_info->SenseInfo,
+			cmd->rq->sense_len);

CHECK:BRACES: Unbalanced braces around else statement
#127: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2398:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#168: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2426:
+			printk(KERN_WARNING "cciss: cmd %p has"

WARNING:SPLIT_STRING: quoted string split across lines
#169: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2427:
+			printk(KERN_WARNING "cciss: cmd %p has"
+			       " completed with data underrun "

WARNING:SPLIT_STRING: quoted string split across lines
#170: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2428:
+			       " completed with data underrun "
+			       "reported\n", cmd);

CHECK:CAMELCASE: Avoid CamelCase: <ResidualCnt>
#171: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2429:
+			cmd->rq->data_len = cmd->err_info->ResidualCnt;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#179: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2434:
+			printk(KERN_WARNING "cciss: cmd %p has"

WARNING:SPLIT_STRING: quoted string split across lines
#180: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2435:
+			printk(KERN_WARNING "cciss: cmd %p has"
+			       " completed with data overrun "

WARNING:SPLIT_STRING: quoted string split across lines
#181: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2436:
+			       " completed with data overrun "
+			       "reported\n", cmd);

ERROR:SPACING: space required before the open parenthesis '('
#212: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2597:
+		if(h->cciss_read == CCISS_READ_10) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Request>
#213: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2598:
+			c->Request.CDB[1] = 0;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#221: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2606:
+			c->Request.CDB[9] = c->Request.CDB[11] = c->Request.CDB[12] = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:CAMELCASE: Avoid CamelCase: <CDBLen>
#223: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2608:
+			c->Request.CDBLen = 16;

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#224: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2609:
+			c->Request.CDB[1]= 0;
 			                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#225: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2610:
+			c->Request.CDB[2]= (start_blk >> 56) & 0xff;	//MSB
 			                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#226: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2611:
+			c->Request.CDB[3]= (start_blk >> 48) & 0xff;
 			                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#227: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2612:
+			c->Request.CDB[4]= (start_blk >> 40) & 0xff;
 			                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#228: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2613:
+			c->Request.CDB[5]= (start_blk >> 32) & 0xff;
 			                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#229: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2614:
+			c->Request.CDB[6]= (start_blk >> 24) & 0xff;
 			                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#230: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2615:
+			c->Request.CDB[7]= (start_blk >> 16) & 0xff;
 			                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#231: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2616:
+			c->Request.CDB[8]= (start_blk >>  8) & 0xff;
 			                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#232: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2617:
+			c->Request.CDB[9]= start_blk & 0xff;
 			                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#233: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2618:
+			c->Request.CDB[10]= (creq->nr_sectors >>  24) & 0xff;
 			                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#234: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2619:
+			c->Request.CDB[11]= (creq->nr_sectors >>  16) & 0xff;
 			                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#235: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2620:
+			c->Request.CDB[12]= (creq->nr_sectors >>  8) & 0xff;
 			                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#236: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2621:
+			c->Request.CDB[13]= creq->nr_sectors & 0xff;
 			                  ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#237: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2622:
+			c->Request.CDB[14] = c->Request.CDB[15] = 0;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#258: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2628:
+		printk(KERN_WARNING "cciss%d: bad request type %d\n", h->ctlr, creq->cmd_type);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#259: FILE: linux-2.6.21-rc6/drivers/block/cciss.c:2629:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000446693.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 14 errors, 13 warnings, 14 checks, 207 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000446693.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
