WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
In addition, the SPEC is available in VX800 Programming guide (Device 13 Function 0) on http://linux.via.com.tw

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#81: FILE: drivers/mmc/host/via-sdmmc.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#82: FILE: drivers/mmc/host/via-sdmmc.c:2:
+ *  drivers/mmc/host/via-sdmmc.c - VIA SD/MMC Card Reader driver

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#136: FILE: drivers/mmc/host/via-sdmmc.c:56:
+#define VIA_CRDR_SDCARG ^I0x4$

WARNING:TYPO_SPELLING: 'maximun' may be misspelled - perhaps 'maximum'?
#148: FILE: drivers/mmc/host/via-sdmmc.c:68:
+ * Bit 16 - Bit 31 : Block count. So, the maximun block count should be 65536.
                                           ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#307: FILE: drivers/mmc/host/via-sdmmc.c:227:
+ * 1 : Power on
+  * NOTE : No mater what the actual value should be, this bit always

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#308: FILE: drivers/mmc/host/via-sdmmc.c:228:
+  * NOTE : No mater what the actual value should be, this bit always
+ * read as 0. This is a hardware bug.

CHECK:CAMELCASE: Avoid CamelCase: <Resv>
#369: FILE: drivers/mmc/host/via-sdmmc.c:289:
+	u8 Resv;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#390: FILE: drivers/mmc/host/via-sdmmc.c:310:
+	spinlock_t lock;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around host->pm_pcictrl_reg
#439: FILE: drivers/mmc/host/via-sdmmc.c:359:
+	pm_pcictrl_reg = &(host->pm_pcictrl_reg);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around host->pm_pcictrl_reg
#458: FILE: drivers/mmc/host/via-sdmmc.c:378:
+	pm_pcictrl_reg = &(host->pm_pcictrl_reg);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#466: FILE: drivers/mmc/host/via-sdmmc.c:386:
+	writeb(pm_pcictrl_reg->pciintstatus_reg,
+		addrbase + VIA_CRDR_PCIINTSTATUS);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around host->pm_sdhc_reg
#475: FILE: drivers/mmc/host/via-sdmmc.c:395:
+	pm_sdhc_reg = &(host->pm_sdhc_reg);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around host->pm_sdhc_reg
#495: FILE: drivers/mmc/host/via-sdmmc.c:415:
+	pm_sdhc_reg = &(host->pm_sdhc_reg);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#545: FILE: drivers/mmc/host/via-sdmmc.c:465:
+	BUG_ON(data->blksz > host->mmc->max_blk_size);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#546: FILE: drivers/mmc/host/via-sdmmc.c:466:
+	BUG_ON(data->blocks > host->mmc->max_blk_count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#551: FILE: drivers/mmc/host/via-sdmmc.c:471:
+	count = dma_map_sg(mmc_dev(host->mmc), data->sg, data->sg_len,
+		((data->flags & MMC_DATA_READ) ?

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#553: FILE: drivers/mmc/host/via-sdmmc.c:473:
+	BUG_ON(count != 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#556: FILE: drivers/mmc/host/via-sdmmc.c:476:
+	via_set_ddma(host, sg_dma_address(data->sg), sg_dma_len(data->sg),
+		(data->flags & MMC_DATA_WRITE) ? 1 : 0, 1);

CHECK:SPACING: No space is necessary after a cast
#577: FILE: drivers/mmc/host/via-sdmmc.c:497:
+		cmd->resp[0] = ((u8) (dwdata1)) |

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#578: FILE: drivers/mmc/host/via-sdmmc.c:498:
+		    (((u8) (dwdata0 >> 24)) << 8) |

CHECK:SPACING: No space is necessary after a cast
#579: FILE: drivers/mmc/host/via-sdmmc.c:499:
+		    (((u8) (dwdata0 >> 16)) << 16) |

CHECK:SPACING: No space is necessary after a cast
#580: FILE: drivers/mmc/host/via-sdmmc.c:500:
+		    (((u8) (dwdata0 >> 8)) << 24);

CHECK:SPACING: No space is necessary after a cast
#582: FILE: drivers/mmc/host/via-sdmmc.c:502:
+		cmd->resp[1] = ((u8) (dwdata2)) |

CHECK:SPACING: No space is necessary after a cast
#583: FILE: drivers/mmc/host/via-sdmmc.c:503:
+		    (((u8) (dwdata1 >> 24)) << 8) |

CHECK:SPACING: No space is necessary after a cast
#584: FILE: drivers/mmc/host/via-sdmmc.c:504:
+		    (((u8) (dwdata1 >> 16)) << 16) |

CHECK:SPACING: No space is necessary after a cast
#585: FILE: drivers/mmc/host/via-sdmmc.c:505:
+		    (((u8) (dwdata1 >> 8)) << 24);

CHECK:SPACING: No space is necessary after a cast
#587: FILE: drivers/mmc/host/via-sdmmc.c:507:
+		cmd->resp[2] = ((u8) (dwdata3)) |

CHECK:SPACING: No space is necessary after a cast
#588: FILE: drivers/mmc/host/via-sdmmc.c:508:
+		    (((u8) (dwdata2 >> 24)) << 8) |

CHECK:SPACING: No space is necessary after a cast
#589: FILE: drivers/mmc/host/via-sdmmc.c:509:
+		    (((u8) (dwdata2 >> 16)) << 16) |

CHECK:SPACING: No space is necessary after a cast
#590: FILE: drivers/mmc/host/via-sdmmc.c:510:
+		    (((u8) (dwdata2 >> 8)) << 24);

CHECK:SPACING: No space is necessary after a cast
#593: FILE: drivers/mmc/host/via-sdmmc.c:513:
+		    ((((u8) (dwdata3 >> 24))) << 8) |

CHECK:SPACING: No space is necessary after a cast
#594: FILE: drivers/mmc/host/via-sdmmc.c:514:
+		    (((u8) (dwdata3 >> 16)) << 16) |

CHECK:SPACING: No space is necessary after a cast
#595: FILE: drivers/mmc/host/via-sdmmc.c:515:
+		    (((u8) (dwdata3 >> 8)) << 24);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#684: FILE: drivers/mmc/host/via-sdmmc.c:604:
+	BUG_ON(!host->data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#695: FILE: drivers/mmc/host/via-sdmmc.c:615:
+	dma_unmap_sg(mmc_dev(host->mmc), data->sg, data->sg_len,
+		((data->flags & MMC_DATA_READ) ?

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "host->mrq"
#734: FILE: drivers/mmc/host/via-sdmmc.c:654:
+	WARN_ON(host->mrq != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#750: FILE: drivers/mmc/host/via-sdmmc.c:670:
+static void via_sdc_set_power(struct via_crdr_mmc_host *host,
+	unsigned short power)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#766: FILE: drivers/mmc/host/via-sdmmc.c:686:
+		BUG();

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#785: FILE: drivers/mmc/host/via-sdmmc.c:705:
+	msleep(3);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#883: FILE: drivers/mmc/host/via-sdmmc.c:803:
+	msleep(3);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#886: FILE: drivers/mmc/host/via-sdmmc.c:806:
+	msleep(3);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#899: FILE: drivers/mmc/host/via-sdmmc.c:819:
+	BUG_ON(intmask == 0);

WARNING:SPLIT_STRING: quoted string split across lines
#903: FILE: drivers/mmc/host/via-sdmmc.c:823:
+		pr_err("%s: Got command interrupt 0x%x even "
+		       "though no command operation was in progress.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#921: FILE: drivers/mmc/host/via-sdmmc.c:841:
+	BUG_ON(intmask == 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#962: FILE: drivers/mmc/host/via-sdmmc.c:882:
+		writew(sd_status & VIA_CRDR_SDSTS_CIR,
+			addrbase + VIA_CRDR_SDSTATUS);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#970: FILE: drivers/mmc/host/via-sdmmc.c:890:
+		writew(sd_status & VIA_CRDR_SDSTS_CMD_MASK,
+			addrbase + VIA_CRDR_SDSTATUS);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#975: FILE: drivers/mmc/host/via-sdmmc.c:895:
+		writew(sd_status & VIA_CRDR_SDSTS_DATA_MASK,
+			addrbase + VIA_CRDR_SDSTATUS);

WARNING:SPLIT_STRING: quoted string split across lines
#1006: FILE: drivers/mmc/host/via-sdmmc.c:926:
+		pr_err("%s: Timeout waiting for hardware interrupt."
+		       "cmd:0x%x\n", mmc_hostname(sdhost->mmc),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1011: FILE: drivers/mmc/host/via-sdmmc.c:931:
+			writel(VIA_CRDR_DMACTRL_SFTRST,
+				sdhost->ddma_mmiobase + VIA_CRDR_DMACTRL);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1128: FILE: drivers/mmc/host/via-sdmmc.c:1048:
+	msleep(1);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1144: FILE: drivers/mmc/host/via-sdmmc.c:1064:
+	msleep(1);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1147: FILE: drivers/mmc/host/via-sdmmc.c:1067:
+static int __devinit via_sd_probe(struct pci_dev *pcidev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1148: FILE: drivers/mmc/host/via-sdmmc.c:1068:
+static int __devinit via_sd_probe(struct pci_dev *pcidev,
+				    const struct pci_device_id *id)

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1202: FILE: drivers/mmc/host/via-sdmmc.c:1122:
+	msleep(3);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1205: FILE: drivers/mmc/host/via-sdmmc.c:1125:
+	msleep(3);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1237: FILE: drivers/mmc/host/via-sdmmc.c:1157:
+static void __devexit via_sd_remove(struct pci_dev *pcidev)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around host->pm_sdhc_reg
#1279: FILE: drivers/mmc/host/via-sdmmc.c:1199:
+	pm_sdhcreg = &(host->pm_sdhc_reg);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1338: FILE: drivers/mmc/host/via-sdmmc.c:1258:
+	msleep(3);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1341: FILE: drivers/mmc/host/via-sdmmc.c:1261:
+	msleep(3);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000146386.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 27 warnings, 33 checks, 1334 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000146386.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
