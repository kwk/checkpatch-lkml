WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
When looking for a shortcut to avoid the rebuild/reboot cycle when hacking the  

WARNING:TYPO_SPELLING: 'omiting' may be misspelled - perhaps 'omitting'?
#51: 
[3] I wrote few helpers to handle return values of different sizes but omiting 
                                                                       ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
#include <linux/kernel.h>

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
#include <linux/module.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
#include <linux/kprobes.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
#include <linux/blkdev.h>

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#136: FILE: arch/x86/kernel/kprobes.c:349:
+		memcpy(p->ainsn.insn, p->addr,
+				MAX_INSN_SIZE * sizeof(kprobe_opcode_t));

WARNING:LINE_SPACING: Missing a blank line after declarations
#163: FILE: arch/x86/kernel/kprobes.c:1033:
+	struct kprobe_ctlblk *kcb = get_kprobe_ctlblk();
+	kcb->jprobe_saved_regs.ax = ax;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#178: FILE: include/linux/kprobes.h:205:
+extern int arch_prepare_kprobe(struct kprobe *p, int replace);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#193: FILE: include/linux/kprobes.h:250:
+void set_ax(unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#202: FILE: kernel/kprobes.c:268:
dirty)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:BRACES: braces {} should be used on all arms of this statement
#260: FILE: kernel/kprobes.c:847:
+	if (!kernel_text_address(addr))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#262: FILE: kernel/kprobes.c:849:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#267: FILE: kernel/kprobes.c:854:
+		ret = __register_kprobe(&jp->kp,
+				(unsigned long)__builtin_return_address(0), 1);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#300: FILE: kernel/kprobes.c:1362:
+EXPORT_SYMBOL_GPL(unregister_kreplace);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000201254.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 9 warnings, 5 checks, 159 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000201254.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
