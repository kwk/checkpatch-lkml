CHECK:LINE_SPACING: Please don't use multiple blank lines
#157: FILE: drivers/base/power/main.c:40:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#173: FILE: drivers/base/power/main.c:77:
+static int resume_device(struct device * dev)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#183: FILE: drivers/base/power/main.c:87:
+		dev_dbg(dev,"resuming\n");
 		           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#188: FILE: drivers/base/power/main.c:92:
+		dev_dbg(dev,"resuming\n");
 		           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#193: FILE: drivers/base/power/main.c:97:
+		dev_dbg(dev,"class resume\n");
 		           ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#203: FILE: drivers/base/power/main.c:107:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#204: FILE: drivers/base/power/main.c:108:
+static int resume_device_early(struct device * dev)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#211: FILE: drivers/base/power/main.c:115:
+		dev_dbg(dev,"EARLY resume\n");
 		           ^

ERROR:SPACING: space required before the open parenthesis '('
#226: FILE: drivers/base/power/main.c:130:
+	while(!list_empty(&dpm_off)) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#227: FILE: drivers/base/power/main.c:131:
+		struct list_head * entry = dpm_off.next;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#228: FILE: drivers/base/power/main.c:132:
+		struct device * dev = to_device(entry);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#241: FILE: drivers/base/power/main.c:145:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#257: FILE: drivers/base/power/main.c:161:
+EXPORT_SYMBOL_GPL(device_resume);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#259: FILE: drivers/base/power/main.c:163:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#273: FILE: drivers/base/power/main.c:177:
+	while(!list_empty(&dpm_off_irq)) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#274: FILE: drivers/base/power/main.c:178:
+		struct list_head * entry = dpm_off_irq.next;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#275: FILE: drivers/base/power/main.c:179:
+		struct device * dev = to_device(entry);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#282: FILE: drivers/base/power/main.c:186:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#297: FILE: drivers/base/power/main.c:201:
+EXPORT_SYMBOL_GPL(device_power_up);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#299: FILE: drivers/base/power/main.c:203:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#327: FILE: drivers/base/power/main.c:231:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#342: FILE: drivers/base/power/main.c:246:
+static int suspend_device(struct device * dev, pm_message_t state)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#373: FILE: drivers/base/power/main.c:277:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#418: FILE: drivers/base/power/main.c:322:
+		struct list_head * entry = dpm_active.prev;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#419: FILE: drivers/base/power/main.c:323:
+		struct device * dev = to_device(entry);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#435: FILE: drivers/base/power/main.c:339:
+			printk(KERN_ERR "Could not suspend device %s: "

WARNING:SPLIT_STRING: quoted string split across lines
#436: FILE: drivers/base/power/main.c:340:
+			printk(KERN_ERR "Could not suspend device %s: "
+				"error %d%s\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#449: FILE: drivers/base/power/main.c:353:
+EXPORT_SYMBOL_GPL(device_suspend);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#463: FILE: drivers/base/power/main.c:367:
+	struct device * dev;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#466: FILE: drivers/base/power/main.c:370:
+		struct list_head * entry = dpm_off.prev;

CHECK:CAMELCASE: Avoid CamelCase: <Error>
#471: FILE: drivers/base/power/main.c:375:
+			goto Error;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Done>
#476: FILE: drivers/base/power/main.c:380:
+ Done:

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#479: FILE: drivers/base/power/main.c:383:
+	printk(KERN_ERR "Could not power down device %s: "

WARNING:SPLIT_STRING: quoted string split across lines
#480: FILE: drivers/base/power/main.c:384:
+	printk(KERN_ERR "Could not power down device %s: "
+		"error %d\n", kobject_name(&dev->kobj), error);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#485: FILE: drivers/base/power/main.c:389:
+EXPORT_SYMBOL_GPL(device_power_down);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#490: FILE: drivers/base/power/main.c:394:
+		printk(KERN_ERR "%s(): ", function);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#492: FILE: drivers/base/power/main.c:396:
+		printk("%d\n", ret);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#550: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000370833.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 17 errors, 11 warnings, 10 checks, 415 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000370833.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
