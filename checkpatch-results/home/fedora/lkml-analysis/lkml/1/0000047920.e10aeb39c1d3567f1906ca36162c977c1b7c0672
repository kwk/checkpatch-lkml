WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
v6: address Kenji's request (new pci_bus_release...). and change applying order

CHECK:LINE_SPACING: Please don't use multiple blank lines
#71: FILE: drivers/pci/setup-bus.c:30:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#73: FILE: drivers/pci/setup-bus.c:32:
+static void add_to_failed_list(struct resource_list *head, struct pci_dev *dev,
+				 struct resource *res)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'add_to_failed_list', this function's name, in a string
#81: FILE: drivers/pci/setup-bus.c:40:
+		pr_warning("add_to_failed_list: kmalloc() failed!\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#81: FILE: drivers/pci/setup-bus.c:40:
+	if (!tmp) {
+		pr_warning("add_to_failed_list: kmalloc() failed!\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#166: FILE: drivers/pci/setup-bus.c:219:
+}
+static void pci_setup_bridge_mmio(struct pci_bus *bus)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#180: FILE: drivers/pci/setup-bus.c:240:
+}
+static void pci_setup_bridge_mmio_pref(struct pci_bus *bus)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#195: FILE: drivers/pci/setup-bus.c:280:
+}
+static void __pci_setup_bridge(struct pci_bus *bus, unsigned long type)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#234: FILE: drivers/pci/setup-bus.c:631:
+static void __ref __pci_bus_assign_resources(const struct pci_bus *bus,
+					 struct resource_list *fail_head)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#272: FILE: drivers/pci/setup-bus.c:677:
+		printk(KERN_DEBUG "PCI: release child resource %pRt\n", p);

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#306: FILE: drivers/pci/setup-bus.c:711:
+			dev_printk(KERN_DEBUG, &dev->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#307: FILE: drivers/pci/setup-bus.c:712:
+			dev_printk(KERN_DEBUG, &dev->dev,
+				 "resource %d %pRt released\n", idx, r);

WARNING:LINE_SPACING: Missing a blank line after declarations
#338: FILE: drivers/pci/setup-bus.c:743:
+		struct pci_bus *b = dev->subordinate;
+		if (!b)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#351: FILE: drivers/pci/setup-bus.c:756:
+				pci_bus_release_unused_bridge_res(b, type,
+							 check_leaf);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'failed_type == IORESOURCE_IO'
#434: FILE: drivers/pci/setup-bus.c:854:
+	if ((failed_type == IORESOURCE_IO) || (tried_times >= pci_try_num)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tried_times >= pci_try_num'
#434: FILE: drivers/pci/setup-bus.c:854:
+	if ((failed_type == IORESOURCE_IO) || (tried_times >= pci_try_num)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#439: FILE: drivers/pci/setup-bus.c:859:
+	printk(KERN_DEBUG "PCI: No. %d try to assign unassigned res\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#440: FILE: drivers/pci/setup-bus.c:860:
+	printk(KERN_DEBUG "PCI: No. %d try to assign unassigned res\n",
+			 tried_times + 1);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000047920.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 11 checks, 413 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000047920.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
