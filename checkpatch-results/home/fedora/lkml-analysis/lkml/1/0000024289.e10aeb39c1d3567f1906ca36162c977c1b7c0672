WARNING:TYPO_SPELLING: 'sucession' may be misspelled - perhaps 'succession'?
#39: 
sucession, or if we don't use modules at all, right Peter? ;-)
^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'chello' may be misspelled - perhaps 'cello'?
#54: 
Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
                                 ^^^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#142: FILE: tools/perf/util/event.c:160:
+	struct rb_node *nd;
 	                ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#145: FILE: tools/perf/util/event.c:163:
+	perf_session__for_each_module_map(session, pos, nd) {
 	                                                ^^

WARNING:SPACING: space prohibited before semicolon
#177: FILE: tools/perf/util/event.c:255:
+	ev.mmap.len   = session->vmlinux_maps[MAP__FUNCTION]->end - ev.mmap.start ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!name"
#207: FILE: tools/perf/util/event.c:328:
+			if (name == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dot"
#212: FILE: tools/perf/util/event.c:333:
+			if (dot == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!map"
#222: FILE: tools/perf/util/event.c:343:
+			if (map == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!name"
#226: FILE: tools/perf/util/event.c:347:
+			if (name == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!kernel"
#241: FILE: tools/perf/util/event.c:362:
+			if (kernel == NULL)

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#250: FILE: tools/perf/util/event.c:371:
+			session->vmlinux_maps[MAP__FUNCTION]->end   = self->mmap.start + self->mmap.len;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dso"
#307: FILE: tools/perf/util/session.c:268:
+		if (dso != NULL) {

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#323: FILE: tools/perf/util/session.h:72:
+#define perf_session__for_each_module_map(self, pos, nd)		      \
                                                      ^^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#323: FILE: tools/perf/util/session.h:72:
+#define perf_session__for_each_module_map(self, pos, nd)		      \
+	rb_for_each_entry(pos, nd, &self->kmaps.maps[MAP__FUNCTION], rb_node) \
+		if (pos->dso->kernel) continue; else

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'self' may be better as '(self)' to avoid precedence issues
#323: FILE: tools/perf/util/session.h:72:
+#define perf_session__for_each_module_map(self, pos, nd)		      \
+	rb_for_each_entry(pos, nd, &self->kmaps.maps[MAP__FUNCTION], rb_node) \
+		if (pos->dso->kernel) continue; else

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pos' - possible side-effects?
#323: FILE: tools/perf/util/session.h:72:
+#define perf_session__for_each_module_map(self, pos, nd)		      \
+	rb_for_each_entry(pos, nd, &self->kmaps.maps[MAP__FUNCTION], rb_node) \
+		if (pos->dso->kernel) continue; else

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#324: FILE: tools/perf/util/session.h:73:
+	rb_for_each_entry(pos, nd, &self->kmaps.maps[MAP__FUNCTION], rb_node) \
 	                       ^^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#325: FILE: tools/perf/util/session.h:74:
+		if (pos->dso->kernel) continue; else

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#360: FILE: tools/perf/util/symbol.c:505:
+^I^I^I^I^I         "inconsistency while looking "$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPLIT_STRING: quoted string split across lines
#360: FILE: tools/perf/util/symbol.c:505:
 					pr_debug("/proc/{kallsyms,modules} "
+					         "inconsistency while looking "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#361: FILE: tools/perf/util/symbol.c:506:
+					         "inconsistency while looking "
+						 "for \"%s\" module!\n", module);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dso"
#422: FILE: tools/perf/util/symbol.c:1467:
+	if (dso == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!map"
#426: FILE: tools/perf/util/symbol.c:1471:
+	if (map == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!map"
#458: FILE: tools/perf/util/symbol.c:1518:
+		if (map == NULL)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#487: FILE: tools/perf/util/symbol.c:1606:
+		if (sysfs__read_build_id("/sys/kernel/notes", kallsyms_build_id,
[...]
+		is_kallsyms = dso__build_id_equal(self, kallsyms_build_id);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!kernel"
#534: FILE: tools/perf/util/symbol.c:1762:
+	if (kernel == NULL)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000024289.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 11 warnings, 12 checks, 439 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000024289.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
