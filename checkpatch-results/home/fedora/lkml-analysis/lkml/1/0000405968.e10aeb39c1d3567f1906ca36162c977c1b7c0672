WARNING:TYPO_SPELLING: 'endianess' may be misspelled - perhaps 'endianness'?
#44: 
 - add endianess check
       ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#76: FILE: MAINTAINERS:759:
+P:	Bryan Wu
+M:	bryan.wu@analog.com

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'S:' before 'W:'
#79: FILE: MAINTAINERS:762:
+W:	http://blackfin.uclinux.org
+S:	Supported

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#103: FILE: drivers/net/Kconfig:852:
+config BFIN_MAC_USE_L1
+	bool "Use L1 memory for rx/tx packets"
+	depends on BFIN_MAC && BF537
+	default y
+	help
+	  To get maximum network performace, you should use L1 memory as rx/tx buffers.
+	  Say N here if you want to reserve L1 memory for other uses.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:TYPO_SPELLING: 'performace' may be misspelled - perhaps 'performance'?
#108: FILE: drivers/net/Kconfig:857:
+	  To get maximum network performace, you should use L1 memory as rx/tx buffers.
 	                         ^^^^^^^^^^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#129: FILE: drivers/net/Kconfig:878:
+config BFIN_MAC_RMII
+	bool "RMII PHY Interface (EXPERIMENTAL)"
+	depends on BFIN_MAC && EXPERIMENTAL
+	default n
+	help
+	  Use Reduced PHY MII Interface
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#157: FILE: drivers/net/bfin_mac.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#158: FILE: drivers/net/bfin_mac.c:2:
+ * File:	drivers/net/bfin_mac.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#161: FILE: drivers/net/bfin_mac.c:5:
+ * ^I^IBryan Wu <bryan.wu@analog.com>$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#164: FILE: drivers/net/bfin_mac.c:8:
+ * ^I^ILuke Yang <luke.yang@analog.com>$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#186: FILE: drivers/net/bfin_mac.c:30:
+ * If not, write to the Free Software Foundation,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#187: FILE: drivers/net/bfin_mac.c:31:
+ * 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#220: FILE: drivers/net/bfin_mac.c:64:
+#include <asm/cacheflush.h>

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#239: FILE: drivers/net/bfin_mac.c:83:
+# define bfin_mac_free(dma_handle, ptr) \
+	dma_free_coherent(NULL, sizeof(*ptr), ptr, dma_handle)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ptr' may be better as '(ptr)' to avoid precedence issues
#239: FILE: drivers/net/bfin_mac.c:83:
+# define bfin_mac_free(dma_handle, ptr) \
+	dma_free_coherent(NULL, sizeof(*ptr), ptr, dma_handle)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#267: FILE: drivers/net/bfin_mac.c:111:
+	/*
+	 * This dma_handle is useless in Blackfin dma_alloc_coherent().

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tx_desc"
#277: FILE: drivers/net/bfin_mac.c:121:
+	if (tx_desc == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rx_desc"
#284: FILE: drivers/net/bfin_mac.c:128:
+	if (rx_desc == NULL)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#289: FILE: drivers/net/bfin_mac.c:133:
+	for (i = 0; i < CONFIG_BFIN_TX_DESC_NUM; i++) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tmp_desc_tx->desc_b
#309: FILE: drivers/net/bfin_mac.c:153:
+		tmp_desc_tx->desc_a.next_dma_desc = &(tmp_desc_tx->desc_b);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tmp_desc_tx->status
#312: FILE: drivers/net/bfin_mac.c:156:
+		    (unsigned long)(&(tmp_desc_tx->status));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tmp_desc_tx->desc_a
#327: FILE: drivers/net/bfin_mac.c:171:
+		tx_list_tail->desc_b.next_dma_desc = &(tmp_desc_tx->desc_a);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tx_list_head->desc_a
#333: FILE: drivers/net/bfin_mac.c:177:
+	tx_list_tail->desc_b.next_dma_desc = &(tx_list_head->desc_a);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#338: FILE: drivers/net/bfin_mac.c:182:
+	for (i = 0; i < CONFIG_BFIN_RX_DESC_NUM; i++) {
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#349: FILE: drivers/net/bfin_mac.c:193:
+			printk(KERN_NOTICE DRV_NAME

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#349: FILE: drivers/net/bfin_mac.c:193:
+		if (!new_skb) {
+			printk(KERN_NOTICE DRV_NAME

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tmp_desc_rx->desc_b
#369: FILE: drivers/net/bfin_mac.c:213:
+		tmp_desc_rx->desc_a.next_dma_desc = &(tmp_desc_rx->desc_b);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tmp_desc_rx->status
#372: FILE: drivers/net/bfin_mac.c:216:
+		    (unsigned long)(&(tmp_desc_rx->status));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tmp_desc_rx->desc_a
#385: FILE: drivers/net/bfin_mac.c:229:
+		rx_list_tail->desc_b.next_dma_desc = &(tmp_desc_rx->desc_a);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around rx_list_head->desc_a
#391: FILE: drivers/net/bfin_mac.c:235:
+	rx_list_tail->desc_b.next_dma_desc = &(rx_list_head->desc_a);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#398: FILE: drivers/net/bfin_mac.c:242:
+	printk(KERN_ERR DRV_NAME ": kmalloc failed\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tx_desc"
#411: FILE: drivers/net/bfin_mac.c:255:
+	if (tx_desc != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tmp_desc_tx"
#414: FILE: drivers/net/bfin_mac.c:258:
+			if (tmp_desc_tx != NULL) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#420: FILE: drivers/net/bfin_mac.c:264:
+
+			}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rx_desc"
#426: FILE: drivers/net/bfin_mac.c:270:
+	if (rx_desc != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tmp_desc_rx"
#429: FILE: drivers/net/bfin_mac.c:273:
+			if (tmp_desc_rx != NULL) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#444: FILE: drivers/net/bfin_mac.c:288:
+/*
+ * Set FER regs to MUX in Ethernet pins

ERROR:TRAILING_WHITESPACE: trailing whitespace
#446: FILE: drivers/net/bfin_mac.c:290:
+ * NOTES: silicon anomaly, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#455: FILE: drivers/net/bfin_mac.c:299:
+	/*
+	 * FER reg bug work-around

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#480: FILE: drivers/net/bfin_mac.c:324:
+			printk(KERN_ERR DRV_NAME

CHECK:CAMELCASE: Avoid CamelCase: <PHYAddr>
#488: FILE: drivers/net/bfin_mac.c:332:
+static u16 read_phy_reg(u16 PHYAddr, u16 RegAddr)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <RegAddr>
#488: FILE: drivers/net/bfin_mac.c:332:
+static u16 read_phy_reg(u16 PHYAddr, u16 RegAddr)

CHECK:SPACING: No space is necessary after a cast
#497: FILE: drivers/net/bfin_mac.c:341:
+	return (u16) bfin_read_EMAC_STADAT();

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Data>
#501: FILE: drivers/net/bfin_mac.c:345:
+static void raw_write_phy_reg(u16 PHYAddr, u16 RegAddr, u32 Data)

CHECK:CAMELCASE: Avoid CamelCase: <PhyAddr>
#530: FILE: drivers/net/bfin_mac.c:374:
+	raw_write_phy_reg(lp->PhyAddr, PHYREG_MODECTL, 0x8000);

CHECK:CAMELCASE: Avoid CamelCase: <Negotiate>
#543: FILE: drivers/net/bfin_mac.c:387:
+	if (lp->Negotiate) {

CHECK:CAMELCASE: Avoid CamelCase: <FullDuplex>
#546: FILE: drivers/net/bfin_mac.c:390:
+		if (lp->FullDuplex) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#546: FILE: drivers/net/bfin_mac.c:390:
+		if (lp->FullDuplex) {
[...]
+		} else {
[...]

CHECK:CAMELCASE: Avoid CamelCase: <Port10>
#551: FILE: drivers/net/bfin_mac.c:395:
+		if (!lp->Port10) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#551: FILE: drivers/net/bfin_mac.c:395:
+		if (!lp->Port10) {
[...]
+		} else {
[...]

CHECK:CAMELCASE: Avoid CamelCase: <Loopback>
#558: FILE: drivers/net/bfin_mac.c:402:
+	if (lp->Loopback)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#567: FILE: drivers/net/bfin_mac.c:411:
+	if ((read_phy_reg(lp->PhyAddr, PHYREG_PHYID1) == 0x7) &&
+	((read_phy_reg(lp->PhyAddr, PHYREG_PHYID2) & 0xfff0) == 0xC0A0)) {

WARNING:TYPO_SPELLING: 'reqest' may be misspelled - perhaps 'request'?
#569: FILE: drivers/net/bfin_mac.c:413:
+		 * we have SMSC PHY so reqest interrupt
 		                       ^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#569: FILE: drivers/net/bfin_mac.c:413:
+		/*
+		 * we have SMSC PHY so reqest interrupt

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#614: FILE: drivers/net/bfin_mac.c:458:
+			printk(KERN_NOTICE DRV_NAME ": Link is down\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#615: FILE: drivers/net/bfin_mac.c:459:
+			printk(KERN_NOTICE DRV_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#628: FILE: drivers/net/bfin_mac.c:472:
+		printk(KERN_INFO DRV_NAME

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#653: FILE: drivers/net/bfin_mac.c:497:
+void setup_mac_addr(u8 * mac_addr)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#655: FILE: drivers/net/bfin_mac.c:499:
+	u32 addr_low = le32_to_cpu(*(__le32 *) & mac_addr[0]);

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#655: FILE: drivers/net/bfin_mac.c:499:
+	u32 addr_low = le32_to_cpu(*(__le32 *) & mac_addr[0]);
 	                                       ^

CHECK:SPACING: No space is necessary after a cast
#656: FILE: drivers/net/bfin_mac.c:500:
+	u16 addr_hi = le16_to_cpu(*(__le16 *) & mac_addr[4]);

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#656: FILE: drivers/net/bfin_mac.c:500:
+	u16 addr_hi = le16_to_cpu(*(__le16 *) & mac_addr[4]);
 	                                      ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#668: FILE: drivers/net/bfin_mac.c:512:
+	if (tx_list_head->status.status_word != 0
+	    && current_tx_ptr != tx_list_head) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#673: FILE: drivers/net/bfin_mac.c:517:
+	/*
+	 * if nothing released, check wait condition

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#681: FILE: drivers/net/bfin_mac.c:525:
+			if (tx_list_head->status.status_word != 0
+			    || !(bfin_read_DMA2_IRQ_STATUS() & 0x08)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#685: FILE: drivers/net/bfin_mac.c:529:
+				printk(KERN_ERR DRV_NAME

WARNING:BRACES: braces {} are not necessary for single statement blocks
#690: FILE: drivers/net/bfin_mac.c:534:
+		if (tx_list_head->status.status_word != 0) {
+			goto adjust_head;
+		}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#705: FILE: drivers/net/bfin_mac.c:549:
+			printk(KERN_ERR DRV_NAME

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#710: FILE: drivers/net/bfin_mac.c:554:
+	} while (tx_list_head->status.status_word != 0
+		 && current_tx_ptr != tx_list_head);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#713: FILE: drivers/net/bfin_mac.c:557:
+
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#716: FILE: drivers/net/bfin_mac.c:560:
+static int bf537mac_hard_start_xmit(struct sk_buff *skb,
+				struct net_device *dev)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#724: FILE: drivers/net/bfin_mac.c:568:
+	/*
+	 * Is skb->data always 16-bit aligned?

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'skb->data'
#727: FILE: drivers/net/bfin_mac.c:571:
+	if ((((unsigned int)(skb->data)) & 0x02) == 2) {

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'current_tx_ptr->packet'
#745: FILE: drivers/net/bfin_mac.c:589:
+		blackfin_dcache_flush_range((unsigned int)current_tx_ptr->
+					    packet,

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'current_tx_ptr->packet'
#747: FILE: drivers/net/bfin_mac.c:591:
+					    (unsigned int)(current_tx_ptr->
+							   packet + skb->len) +

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around current_tx_ptr->desc_a
#759: FILE: drivers/net/bfin_mac.c:603:
+		bfin_write_DMA2_NEXT_DESC_PTR(&(current_tx_ptr->desc_a));

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#763: FILE: drivers/net/bfin_mac.c:607:
+		bfin_write_EMAC_OPMODE(bfin_read_EMAC_OPMODE() | TE);
 		                                                 ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#785: FILE: drivers/net/bfin_mac.c:629:
+		printk(KERN_NOTICE DRV_NAME

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#859: FILE: drivers/net/bfin_mac.c:703:
+	opmode &= (~TE);
 	            ^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#865: FILE: drivers/net/bfin_mac.c:709:
+/*
+ * Enable Interrupts, Receive, and Transmit

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#871: FILE: drivers/net/bfin_mac.c:715:
+	pr_debug("%s: %s\n", dev->name, __FUNCTION__);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around rx_list_head->desc_a
#874: FILE: drivers/net/bfin_mac.c:718:
+	bfin_write_DMA1_NEXT_DESC_PTR(&(rx_list_head->desc_a));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#882: FILE: drivers/net/bfin_mac.c:726:
+	/* ASTP   : Enable Automatic Pad Stripping
+	   PR     : Promiscuous Mode for test

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#886: FILE: drivers/net/bfin_mac.c:730:
+	   RE     : Receiver Enable */

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#897: FILE: drivers/net/bfin_mac.c:741:
+	opmode |= TE;
 	          ^^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#909: FILE: drivers/net/bfin_mac.c:753:
+	pr_debug("%s: %s\n", dev->name, __FUNCTION__);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#924: FILE: drivers/net/bfin_mac.c:768:
+/*
+ * Get the current statistics.

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#932: FILE: drivers/net/bfin_mac.c:776:
+	pr_debug("%s: %s\n", dev->name, __FUNCTION__);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#938: FILE: drivers/net/bfin_mac.c:782:
+/*
+ * This routine will, depending on the values passed to it,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#948: FILE: drivers/net/bfin_mac.c:792:
+		printk(KERN_INFO "%s: set to promisc mode\n", dev->name);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#968: FILE: drivers/net/bfin_mac.c:812:
+/*
+ * this puts the device in an inactive state

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#980: FILE: drivers/net/bfin_mac.c:824:
+/*
+ * Open and Initialize the interface

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#986: FILE: drivers/net/bfin_mac.c:830:
+	pr_debug("%s: %s\n", dev->name, __FUNCTION__);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#989: FILE: drivers/net/bfin_mac.c:833:
+	/*
+	 * Check that the address is valid.  If its not, refuse

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#994: FILE: drivers/net/bfin_mac.c:838:
+		printk(KERN_WARNING DRV_NAME ": no valid ethernet hw addr\n");

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1014: FILE: drivers/net/bfin_mac.c:858:
+/*
+ *

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1021: FILE: drivers/net/bfin_mac.c:865:
+	pr_debug("%s: %s\n", dev->name, __FUNCTION__);

CHECK:SPACING: No space is necessary after a cast
#1041: FILE: drivers/net/bfin_mac.c:885:
+	*(__le32 *) (&(dev->dev_addr[0])) = cpu_to_le32(bfin_read_EMAC_ADDRLO());

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around dev->dev_addr[0]
#1041: FILE: drivers/net/bfin_mac.c:885:
+	*(__le32 *) (&(dev->dev_addr[0])) = cpu_to_le32(bfin_read_EMAC_ADDRLO());

CHECK:SPACING: No space is necessary after a cast
#1042: FILE: drivers/net/bfin_mac.c:886:
+	*(__le16 *) (&(dev->dev_addr[4])) = cpu_to_le16((u16) bfin_read_EMAC_ADDRHI());

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around dev->dev_addr[4]
#1042: FILE: drivers/net/bfin_mac.c:886:
+	*(__le16 *) (&(dev->dev_addr[4])) = cpu_to_le16((u16) bfin_read_EMAC_ADDRHI());

WARNING:TYPO_SPELLING: 'proble' may be misspelled - perhaps 'probe'?
#1045: FILE: drivers/net/bfin_mac.c:889:
+	/*todo: how to proble? which is revision_register */
 	               ^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1056: FILE: drivers/net/bfin_mac.c:900:
+		/* Grab the MAC from the board somehow - this is done in the
+		   arch/blackfin/mach-bf537/boards/eth_mac.c */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1056: FILE: drivers/net/bfin_mac.c:900:
+		   arch/blackfin/mach-bf537/boards/eth_mac.c */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1061: FILE: drivers/net/bfin_mac.c:905:
+	if (!is_valid_ether_addr(dev->dev_addr)) {
+		random_ether_addr(dev->dev_addr);
+	}

CHECK:CAMELCASE: Avoid CamelCase: <FlowControl>
#1086: FILE: drivers/net/bfin_mac.c:930:
+	lp->FlowControl = 0;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1097: FILE: drivers/net/bfin_mac.c:941:
+		printk(KERN_WARNING DRV_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1109: FILE: drivers/net/bfin_mac.c:953:
+		printk(KERN_INFO "%s: Version %s, %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1110: FILE: drivers/net/bfin_mac.c:954:
+		printk(KERN_INFO "%s: Version %s, %s\n",
+			 DRV_NAME, DRV_VERSION, DRV_DESC);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1123: FILE: drivers/net/bfin_mac.c:967:
+		printk(KERN_WARNING DRV_NAME ": could not allocate device\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1135: FILE: drivers/net/bfin_mac.c:979:
+		printk(KERN_WARNING DRV_NAME ": not found\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1196: FILE: drivers/net/bfin_mac.h:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1200: FILE: drivers/net/bfin_mac.h:5:
+ * ^I^IBryan Wu <bryan.wu@analog.com>$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1203: FILE: drivers/net/bfin_mac.h:8:
+ * ^I^ILuke Yang <luke.yang@analog.com>$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1225: FILE: drivers/net/bfin_mac.h:30:
+ * If not, write to the Free Software Foundation,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1226: FILE: drivers/net/bfin_mac.h:31:
+ * 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1230: FILE: drivers/net/bfin_mac.h:35:
+/*
+ * PHY REGISTER NAMES

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1298: FILE: drivers/net/bfin_mac.h:103:
+	/*
+	 * these are things that the kernel wants me to keep, so users

CHECK:CAMELCASE: Avoid CamelCase: <FlowEnabled>
#1306: FILE: drivers/net/bfin_mac.h:111:
+	int FlowEnabled;	/* record if data flow is active */

CHECK:CAMELCASE: Avoid CamelCase: <EtherIntIVG>
#1307: FILE: drivers/net/bfin_mac.h:112:
+	int EtherIntIVG;	/* IVG for the ethernet interrupt */

CHECK:CAMELCASE: Avoid CamelCase: <OpMode>
#1311: FILE: drivers/net/bfin_mac.h:116:
+	int OpMode;		/* set these bits n the OPMODE regs */

CHECK:CAMELCASE: Avoid CamelCase: <GenChksums>
#1313: FILE: drivers/net/bfin_mac.h:118:
+	int GenChksums;		/* IP checksums to be calculated */

CHECK:CAMELCASE: Avoid CamelCase: <NoRcveLnth>
#1314: FILE: drivers/net/bfin_mac.h:119:
+	int NoRcveLnth;		/* dont insert recv length at start of buffer */

CHECK:CAMELCASE: Avoid CamelCase: <StripPads>
#1315: FILE: drivers/net/bfin_mac.h:120:
+	int StripPads;		/* remove trailing pad bytes */

CHECK:CAMELCASE: Avoid CamelCase: <Cache>
#1319: FILE: drivers/net/bfin_mac.h:124:
+	int Cache;		/* Buffers may be cached */

CHECK:CAMELCASE: Avoid CamelCase: <IntMask>
#1322: FILE: drivers/net/bfin_mac.h:127:
+	unsigned short IntMask;	/* interrupt mask */

CHECK:CAMELCASE: Avoid CamelCase: <Mac>
#1323: FILE: drivers/net/bfin_mac.h:128:
+	unsigned char Mac[6];	/* MAC address of the board */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1327: FILE: drivers/net/bfin_mac.h:132:
+extern void get_bf537_ether_addr(char *addr);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000405968.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 65 warnings, 55 checks, 1235 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000405968.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
