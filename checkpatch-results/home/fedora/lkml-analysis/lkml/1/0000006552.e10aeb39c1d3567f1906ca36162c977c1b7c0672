WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
   git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip.git x86-cpu-for-linus

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#80: FILE: arch/x86/include/asm/cpufeature.h:171:
+#define X86_FEATURE_NPT		(8*32+5)  /* AMD Nested Page Table support */
                        		  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#80: FILE: arch/x86/include/asm/cpufeature.h:171:
+#define X86_FEATURE_NPT		(8*32+5)  /* AMD Nested Page Table support */
                        		     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#81: FILE: arch/x86/include/asm/cpufeature.h:172:
+#define X86_FEATURE_LBRV	(8*32+6)  /* AMD LBR Virtualization support */
                         	  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#81: FILE: arch/x86/include/asm/cpufeature.h:172:
+#define X86_FEATURE_LBRV	(8*32+6)  /* AMD LBR Virtualization support */
                         	     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#82: FILE: arch/x86/include/asm/cpufeature.h:173:
+#define X86_FEATURE_SVML	(8*32+7)  /* "svm_lock" AMD SVM locking MSR */
                         	  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#82: FILE: arch/x86/include/asm/cpufeature.h:173:
+#define X86_FEATURE_SVML	(8*32+7)  /* "svm_lock" AMD SVM locking MSR */
                         	     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#83: FILE: arch/x86/include/asm/cpufeature.h:174:
+#define X86_FEATURE_NRIPS	(8*32+8)  /* "nrip_save" AMD SVM next_rip save */
                          	  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#83: FILE: arch/x86/include/asm/cpufeature.h:174:
+#define X86_FEATURE_NRIPS	(8*32+8)  /* "nrip_save" AMD SVM next_rip save */
                          	     ^

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/smp.h> instead of <asm/smp.h>
#137: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:21:
+#include <asm/smp.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct _cpuid4_info *' should also have an identifier name
#167: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:298:
+	ssize_t (*show)(struct _cpuid4_info *, char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#167: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:298:
+	ssize_t (*show)(struct _cpuid4_info *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct _cpuid4_info *' should also have an identifier name
#168: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:299:
+	ssize_t (*store)(struct _cpuid4_info *, const char *, size_t count);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#168: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:299:
+	ssize_t (*store)(struct _cpuid4_info *, const char *, size_t count);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'boot_cpu_data.x86 == 0x10'
#205: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:336:
+	if ((boot_cpu_data.x86 == 0x10) &&
+	    ((boot_cpu_data.x86_model < 0x8) ||
+	     (boot_cpu_data.x86_mask  < 0x1)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'boot_cpu_data.x86_model < 0x8'
#205: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:336:
+	if ((boot_cpu_data.x86 == 0x10) &&
+	    ((boot_cpu_data.x86_model < 0x8) ||
+	     (boot_cpu_data.x86_mask  < 0x1)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'boot_cpu_data.x86_mask  < 0x1'
#205: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:336:
+	if ((boot_cpu_data.x86 == 0x10) &&
+	    ((boot_cpu_data.x86_model < 0x8) ||
+	     (boot_cpu_data.x86_mask  < 0x1)))

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#239: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:369:
+}
+SHOW_CACHE_DISABLE(0)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#243: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:373:
+static ssize_t store_cache_disable(struct _cpuid4_info *this_leaf,
+	const char *buf, size_t count, unsigned int index)

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#262: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:392:
+	if (strict_strtoul(buf, 10, &val) < 0)

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#288: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:418:
 }
+STORE_CACHE_DISABLE(0)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#396: FILE: arch/x86/kernel/cpu/intel_cacheinfo.c:852:
+#define DEFAULT_SYSFS_CACHE_ATTRS	\
+	&type.attr,			\
+	&level.attr,			\
+	&coherency_line_size.attr,	\
+	&physical_line_partition.attr,	\
+	&ways_of_associativity.attr,	\
+	&number_of_sets.attr,		\
+	&size.attr,			\
+	&shared_cpu_map.attr,		\
+	&shared_cpu_list.attr

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#467: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#472: FILE: arch/x86/lib/cache-smp.c:1:
+#include <linux/smp.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/smp.h> instead of <asm/smp.h>
#499: FILE: drivers/char/agp/intel-agp.c:11:
+#include <asm/smp.h>

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#528: FILE: drivers/char/agp/intel-agp.c:838:
+		printk(KERN_ERR "Timed out waiting for cache flush.\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000006552.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 10 warnings, 15 checks, 413 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000006552.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
