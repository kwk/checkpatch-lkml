CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#120: FILE: drivers/net/bonding/bond_main.c:2718:
+	pr_debug("arp: hln %d p_t %d hrd %x pro %x pln %d\n",
+	       arp->ar_hln, skb->pkt_type, ntohs(arp->ar_hrd),

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#162: FILE: drivers/net/bonding/bond_main.c:2749:
+/*
+ * Called by core packet processing in netif_receive_skb and in VLAN fast

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#192: FILE: drivers/net/bonding/bond_main.c:2779:
+		    skb->protocol == __constant_htons(ETH_P_ARP))

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#203: FILE: drivers/net/bonding/bond_main.c:2790:
+		    skb->protocol == __constant_htons(ETH_P_SLOW))

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#216: FILE: drivers/net/bonding/bond_main.c:3729:
+#if 0

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#229: FILE: drivers/net/bonding/bond_main.c:3744:
+#if 0

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#309: FILE: drivers/net/bonding/bonding.h:287:
+static inline void bond_fix_slave_validate_flag(struct bonding *bond,
+					       struct slave *slave)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#348: FILE: include/linux/netdevice.h:1877:
+#if 0

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#357: FILE: include/linux/netdevice.h:1911:
+extern int skb_bond_should_drop(struct sk_buff *skb);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#369: FILE: net/core/dev.c:2101:
+#if defined(CONFIG_BONDING) || defined(CONFIG_BONDING_MODULE)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#371: FILE: net/core/dev.c:2103:
+EXPORT_SYMBOL_GPL(bond_handle_frame_hook);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#387: FILE: net/core/dev.c:2119:
+#if 0

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#393: FILE: net/core/dev.c:2125:
+			    skb->protocol == __constant_htons(ETH_P_ARP))

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#402: FILE: net/core/dev.c:2134:
+			    skb->protocol == __constant_htons(ETH_P_SLOW))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000135601.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 11 warnings, 3 checks, 339 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000135601.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
