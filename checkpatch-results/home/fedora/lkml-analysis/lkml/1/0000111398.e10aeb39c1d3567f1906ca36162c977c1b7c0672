WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
* Improved Host Protected Area handling [ http://lwn.net/Articles/335913/ ].

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#350: FILE: drivers/ide/cs5520.c:110:
 static int __devinit cs5520_init_one(struct pci_dev *dev, const struct pci_device_id *id)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#378: FILE: drivers/ide/delkin_cb.c:74:
 static int __devinit

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: drivers/ide/gayle.c:128:
+    struct ide_hw hw[GAYLE_NUM_HWIFS], *hws[GAYLE_NUM_HWIFS];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#485: FILE: drivers/ide/gayle.c:173:
+    rc = ide_host_add(&gayle_port_info, hws, i, NULL);$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#676: FILE: drivers/ide/icside.c:353:
 static int __devinit

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#707: FILE: drivers/ide/icside.c:407:
 static int __devinit

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#786: FILE: drivers/ide/ide-cs.c:167:
+    struct ide_hw hw, *hws[] = { &hw };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#798: FILE: drivers/ide/ide-cs.c:187:
+    rc = ide_host_add(&idecs_port_info, hws, 1, &host);$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#888: FILE: drivers/ide/ide-disk.c:401:
+		drive->probed_capacity = drive->capacity64 = 1ULL << 28;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1141: FILE: drivers/ide/ide-io.c:200:
+	printk(KERN_DEBUG "%s: %s: 0x%02x\n", drive->name, __func__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1142: FILE: drivers/ide/ide-io.c:201:
+	printk(KERN_DEBUG "%s: %s: 0x%02x\n", drive->name, __func__,
+		drive->special_flags);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1155: FILE: drivers/ide/ide-io.c:212:
+	if (drive->special_flags & IDE_SFLAG_SET_GEOMETRY) {
[...]
-	} else if (s->b.recalibrate) {
[...]
+		drive->special_flags &= ~IDE_SFLAG_RECALIBRATE;
[...]
-		s->b.set_multmode = 0;
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1174: FILE: drivers/ide/ide-io.c:221:
+	} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1175: FILE: drivers/ide/ide-io.c:222:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#1247: FILE: drivers/ide/ide-iops.c:285:
+static const char *nien_quirk_list[] = {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "list"
#1263: FILE: drivers/ide/ide-iops.c:301:
+	for (list = nien_quirk_list; *list != NULL; list++)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "strstr"
#1264: FILE: drivers/ide/ide-iops.c:302:
+		if (strstr(m, *list) != NULL) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1432: FILE: drivers/ide/ide-probe.c:688:
+	if (rc == -ENODEV) {
[...]
+	} else if (rc == -EBUSY)
[...]
+	else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1433: FILE: drivers/ide/ide-probe.c:689:
+		printk(KERN_INFO "%s: no devices on the port\n", hwif->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1436: FILE: drivers/ide/ide-probe.c:692:
+		printk(KERN_ERR "%s: not ready before the probe\n", hwif->name);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!drive->id"
#1565: FILE: drivers/ide/ide-probe.c:1257:
+		if (drive->id == NULL)

CHECK:BRACES: Unbalanced braces around else statement
#1728: FILE: drivers/ide/ide-tape.c:680:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1927: FILE: drivers/ide/ide.c:290:
+		printk(KERN_INFO "ide: disabling Host Protected Area for %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1928: FILE: drivers/ide/ide.c:291:
+		printk(KERN_INFO "ide: disabling Host Protected Area for %s\n",
+				 drive->name);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1943: FILE: drivers/ide/ide_platform.c:24:
+static void __devinit plat_ide_setup_ports(struct ide_hw *hw,

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1960: FILE: drivers/ide/ide_platform.c:50:
 static int __devinit plat_ide_probe(struct platform_device *pdev)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2266: FILE: drivers/ide/pmac.c:1026:
+static int __devinit pmac_ide_setup_device(pmac_ide_hwif_t *pmif,

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2292: FILE: drivers/ide/pmac.c:1128:
+static void __devinit pmac_ide_init_ports(struct ide_hw *hw, unsigned long base)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2324: FILE: drivers/ide/q40ide.c:55:
+static void q40_ide_setup_ports(struct ide_hw *hw, unsigned long base,
 			ide_ack_intr_t *ack_intr,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2354: FILE: drivers/ide/q40ide.c:138:
+    struct ide_hw hw[Q40IDE_NUM_HWIFS], *hws[] = { NULL, NULL };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2363: FILE: drivers/ide/q40ide.c:165:
+    return ide_host_add(&q40ide_port_info, hws, Q40IDE_NUM_HWIFS, NULL);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2679: FILE: drivers/ide/sl82c105.c:149:
+	printk(KERN_WARNING "sl82c105: lost IRQ, resetting host\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2687: FILE: drivers/ide/sl82c105.c:156:
+		printk(KERN_INFO "sl82c105: drive was requesting IRQ, "

WARNING:SPLIT_STRING: quoted string split across lines
#2688: FILE: drivers/ide/sl82c105.c:157:
+		printk(KERN_INFO "sl82c105: drive was requesting IRQ, "
+		       "but host lost it\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2697: FILE: drivers/ide/sl82c105.c:166:
+		printk(KERN_INFO "sl82c105: DMA was enabled\n");

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#2778: FILE: fs/partitions/check.c:574:
+			struct block_device_operations *bdops = disk->fops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#2789: FILE: fs/partitions/check.c:583:
+				printk(KERN_CONT "enabling native capacity\n");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#2789: FILE: fs/partitions/check.c:583:
+				printk(KERN_CONT "enabling native capacity\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#2805: FILE: fs/partitions/check.c:599:
+				printk(KERN_CONT "limited to end of disk\n");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#2805: FILE: fs/partitions/check.c:599:
+				printk(KERN_CONT "limited to end of disk\n");

WARNING:SPACING: Unnecessary space before function pointer arguments
#2819: FILE: include/linux/blkdev.h:1229:
+	unsigned long long (*set_capacity) (struct gendisk *,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct gendisk *' should also have an identifier name
#2819: FILE: include/linux/blkdev.h:1229:
+	unsigned long long (*set_capacity) (struct gendisk *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long long' should also have an identifier name
#2819: FILE: include/linux/blkdev.h:1229:
+	unsigned long long (*set_capacity) (struct gendisk *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2820: FILE: include/linux/blkdev.h:1230:
+	unsigned long long (*set_capacity) (struct gendisk *,
+						unsigned long long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_drive_s *' should also have an identifier name
#2895: FILE: include/linux/ide.h:384:
+	u64		(*set_capacity)(struct ide_drive_s *, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#2895: FILE: include/linux/ide.h:384:
+	u64		(*set_capacity)(struct ide_drive_s *, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#2955: FILE: include/linux/ide.h:1456:
+void ide_check_nien_quirk_list(ide_drive_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct ide_port_info *' should also have an identifier name
#2962: FILE: include/linux/ide.h:1462:
+struct ide_host *ide_host_alloc(const struct ide_port_info *, struct ide_hw **,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_hw **' should also have an identifier name
#2962: FILE: include/linux/ide.h:1462:
+struct ide_host *ide_host_alloc(const struct ide_port_info *, struct ide_hw **,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#2962: FILE: include/linux/ide.h:1462:
+struct ide_host *ide_host_alloc(const struct ide_port_info *, struct ide_hw **,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct ide_port_info *' should also have an identifier name
#2969: FILE: include/linux/ide.h:1467:
+int ide_host_add(const struct ide_port_info *, struct ide_hw **, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_hw **' should also have an identifier name
#2969: FILE: include/linux/ide.h:1467:
+int ide_host_add(const struct ide_port_info *, struct ide_hw **, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#2969: FILE: include/linux/ide.h:1467:
+int ide_host_add(const struct ide_port_info *, struct ide_hw **, unsigned int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ide_host **' should also have an identifier name
#2969: FILE: include/linux/ide.h:1467:
+int ide_host_add(const struct ide_port_info *, struct ide_hw **, unsigned int,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000111398.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 43 warnings, 12 checks, 2426 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000111398.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
