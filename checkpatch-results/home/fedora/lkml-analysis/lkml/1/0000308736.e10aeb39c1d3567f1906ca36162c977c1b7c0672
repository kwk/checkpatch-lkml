WARNING:TYPO_SPELLING: 'concensus' may be misspelled - perhaps 'consensus'?
#64: 
Can we get concensus on doing the optimization in generic code?
           ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#150: FILE: include/asm-arm/bitops.h:161:
+extern unsigned long _find_next_zero_bit_le(const unsigned long * p,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#150: FILE: include/asm-arm/bitops.h:161:
+extern unsigned long _find_next_zero_bit_le(const unsigned long * p,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: include/asm-arm/bitops.h:162:
+extern unsigned long _find_next_zero_bit_le(const unsigned long * p,
+		unsigned long size, unsigned long offset);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#154: FILE: include/asm-arm/bitops.h:164:
+extern unsigned long _find_next_bit_le(const unsigned long *p,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#155: FILE: include/asm-arm/bitops.h:165:
+extern unsigned long _find_next_bit_le(const unsigned long *p,
+		unsigned long size, unsigned long offset);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#164: FILE: include/asm-arm/bitops.h:177:
+extern unsigned long _find_next_zero_bit_be(const unsigned long * p,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#164: FILE: include/asm-arm/bitops.h:177:
+extern unsigned long _find_next_zero_bit_be(const unsigned long * p,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#165: FILE: include/asm-arm/bitops.h:178:
+extern unsigned long _find_next_zero_bit_be(const unsigned long * p,
+		unsigned long size, unsigned long offset);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#168: FILE: include/asm-arm/bitops.h:180:
+extern unsigned long _find_next_bit_be(const unsigned long *p,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#169: FILE: include/asm-arm/bitops.h:181:
+extern unsigned long _find_next_bit_be(const unsigned long *p,
+		unsigned long size, unsigned long offset);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#178: FILE: include/asm-arm/bitops.h:215:
+#define __find_next_zero_bit(p,sz,off)	_find_next_zero_bit_le(p,sz,off)
                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#178: FILE: include/asm-arm/bitops.h:215:
+#define __find_next_zero_bit(p,sz,off)	_find_next_zero_bit_le(p,sz,off)
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#178: FILE: include/asm-arm/bitops.h:215:
+#define __find_next_zero_bit(p,sz,off)	_find_next_zero_bit_le(p,sz,off)
                                       	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#178: FILE: include/asm-arm/bitops.h:215:
+#define __find_next_zero_bit(p,sz,off)	_find_next_zero_bit_le(p,sz,off)
                                       	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#181: FILE: include/asm-arm/bitops.h:217:
+#define __find_next_bit(p,sz,off)	_find_next_bit_le(p,sz,off)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#181: FILE: include/asm-arm/bitops.h:217:
+#define __find_next_bit(p,sz,off)	_find_next_bit_le(p,sz,off)
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#181: FILE: include/asm-arm/bitops.h:217:
+#define __find_next_bit(p,sz,off)	_find_next_bit_le(p,sz,off)
                                  	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#181: FILE: include/asm-arm/bitops.h:217:
+#define __find_next_bit(p,sz,off)	_find_next_bit_le(p,sz,off)
                                  	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#190: FILE: include/asm-arm/bitops.h:233:
+#define __find_next_zero_bit(p,sz,off)	_find_next_zero_bit_be(p,sz,off)
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#190: FILE: include/asm-arm/bitops.h:233:
+#define __find_next_zero_bit(p,sz,off)	_find_next_zero_bit_be(p,sz,off)
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#190: FILE: include/asm-arm/bitops.h:233:
+#define __find_next_zero_bit(p,sz,off)	_find_next_zero_bit_be(p,sz,off)
                                       	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#190: FILE: include/asm-arm/bitops.h:233:
+#define __find_next_zero_bit(p,sz,off)	_find_next_zero_bit_be(p,sz,off)
                                       	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#193: FILE: include/asm-arm/bitops.h:235:
+#define __find_next_bit(p,sz,off)	_find_next_bit_be(p,sz,off)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#193: FILE: include/asm-arm/bitops.h:235:
+#define __find_next_bit(p,sz,off)	_find_next_bit_be(p,sz,off)
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#193: FILE: include/asm-arm/bitops.h:235:
+#define __find_next_bit(p,sz,off)	_find_next_bit_be(p,sz,off)
                                  	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#193: FILE: include/asm-arm/bitops.h:235:
+#define __find_next_bit(p,sz,off)	_find_next_bit_be(p,sz,off)
                                  	                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#208: FILE: include/asm-m68k/bitops.h:203:
+static inline unsigned long __find_next_zero_bit(const unsigned long *vaddr,
+		unsigned long size, unsigned long offset)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: include/asm-m68k/bitops.h:250:
+static inline unsigned long __find_next_bit(const unsigned long *vaddr,
+		unsigned long size, unsigned long offset)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#256: FILE: include/asm-s390/bitops.h:694:
+static inline unsigned long __find_next_zero_bit(const unsigned long * addr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#269: FILE: include/asm-s390/bitops.h:730:
+static inline unsigned long __find_next_bit(const unsigned long * addr,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000308736.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 20 errors, 1 warnings, 10 checks, 166 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000308736.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
