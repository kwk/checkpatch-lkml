CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#82: FILE: fs/autofs4/autofs_i.h:107:
+#define AUTOFS_INF_REHASH	(1<<3) /* dentry in transit to ->lookup() */
                          	  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#82: FILE: fs/autofs4/autofs_i.h:107:
+#define AUTOFS_INF_REHASH	(1<<3) /* dentry in transit to ->lookup() */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:RETURN_VOID: void function return statements are not generally useful
#158: FILE: fs/autofs4/root.c:114:
+	return;
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#164: FILE: fs/autofs4/root.c:120:
+	struct rehash_entry *entry;
+	list_for_each_entry(entry, head, list) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:RETURN_VOID: void function return statements are not generally useful
#172: FILE: fs/autofs4/root.c:128:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#198: FILE: fs/autofs4/root.c:154:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#224: FILE: fs/autofs4/root.c:180:
+	return;
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#230: FILE: fs/autofs4/root.c:186:
+	struct autofs_info *ino = autofs4_dentry_ino(dentry);
+	if (ino->flags & AUTOFS_INF_REHASH) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#233: FILE: fs/autofs4/root.c:189:
+		if (list_empty(&ino->rehash_list)) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#238: FILE: fs/autofs4/root.c:194:
+		} else

WARNING:RETURN_VOID: void function return statements are not generally useful
#242: FILE: fs/autofs4/root.c:198:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#264: FILE: fs/autofs4/root.c:253:
+	DPRINTK("waiting for mount name=%.*s",
+		 dentry->d_name.len, dentry->d_name.name);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*entry)...) over kmalloc(sizeof(struct rehash_entry)...)
#355: FILE: fs/autofs4/root.c:376:
+	entry = kmalloc(sizeof(struct rehash_entry), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LINE_SPACING: Missing a blank line after declarations
#485: FILE: fs/autofs4/root.c:488:
+	struct rehash_entry *entry, *next;
+	list_for_each_entry_safe(entry, next, head, list) {

CHECK:SPACING: No space is necessary after a cast
#670: FILE: fs/autofs4/root.c:732:
+			return (struct dentry *) ino;

WARNING:LINE_SPACING: Missing a blank line after declarations
#750: FILE: fs/autofs4/root.c:784:
+		struct dentry *new;
+		new = d_lookup(dentry->d_parent, &dentry->d_name);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#755: FILE: fs/autofs4/root.c:789:
+			return new;
+		} else {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000065817.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 10 warnings, 7 checks, 722 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000065817.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
