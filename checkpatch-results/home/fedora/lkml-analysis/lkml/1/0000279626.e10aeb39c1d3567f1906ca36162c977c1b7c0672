WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#48: FILE: drivers/char/hw_random/Kconfig:62:
+config HW_RANDOM_N2RNG
+	tristate "Niagara2 Random Number Generator support"
+	depends on HW_RANDOM && SPARC64
+	default HW_RANDOM
+	---help---
+	  This driver provides kernel-side support for the Random Number
+	  Generator hardware found on Niagara2 cpus.
+
+	  To compile this driver as a module, choose M here: the
+	  module will be called n2-rng.
+
+	  If unsure, say Y.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#78: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#83: FILE: drivers/char/hw_random/n2-asm.S:1:
+/* n2-asm.S: Niagara2 RNG hypervisor call assembler.

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#182: FILE: drivers/char/hw_random/n2-drv.c:1:
+/* n2-drv.c: Niagara-2 RNG driver.

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#209: FILE: drivers/char/hw_random/n2-drv.c:28:
+static char version[] __devinitdata =

WARNING:TYPO_SPELLING: 'seperately' may be misspelled - perhaps 'separately'?
#255: FILE: drivers/char/hw_random/n2-drv.c:74:
+ * seperately.  This is why 4 control register values must be provided
    ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: braces {} should be used on all arms of this statement
#304: FILE: drivers/char/hw_random/n2-drv.c:123:
+		if (hv_err == HV_EBUSY) {
[...]
+		} else if (hv_err == HV_EWOULDBLOCK) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#314: FILE: drivers/char/hw_random/n2-drv.c:133:
+		} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#367: FILE: drivers/char/hw_random/n2-drv.c:186:
+		if (hv_err == HV_EWOULDBLOCK) {
[...]
+		} else if (hv_err == HV_ENOACCESS) {
[...]
+		} else if (hv_err == HV_EIO) {
[...]
+		} else
[...]

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#376: FILE: drivers/char/hw_random/n2-drv.c:195:
+			udelay(10000);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:LONG_UDELAY: long udelay - prefer mdelay; see arch/arm/include/asm/delay.h
#376: FILE: drivers/char/hw_random/n2-drv.c:195:
+			udelay(10000);

CHECK:BRACES: Unbalanced braces around else statement
#377: FILE: drivers/char/hw_random/n2-drv.c:196:
+		} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#416: FILE: drivers/char/hw_random/n2-drv.c:235:
+		if (hv_err == HV_EWOULDBLOCK) {
[...]
+		} else if (hv_err == HV_ENOACCESS) {
[...]
+		} else if (hv_err == HV_EIO) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#424: FILE: drivers/char/hw_random/n2-drv.c:243:
+		} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#429: FILE: drivers/char/hw_random/n2-drv.c:248:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#444: FILE: drivers/char/hw_random/n2-drv.c:263:
+		if (hv_err == HV_EWOULDBLOCK) {
[...]
+		} else if (hv_err == HV_EBUSY) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#452: FILE: drivers/char/hw_random/n2-drv.c:271:
+		} else

CHECK:SPACING: No space is necessary after a cast
#571: FILE: drivers/char/hw_random/n2-drv.c:390:
+	struct n2rng *np = (struct n2rng *) rng->priv;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#583: FILE: drivers/char/hw_random/n2-drv.c:402:
+		int err = n2rng_generic_read_data(ra);
+		if (!err) {

WARNING:TYPO_SPELLING: 'restesting' may be misspelled - perhaps 'retesting'?
#588: FILE: drivers/char/hw_random/n2-drv.c:407:
+			dev_err(&np->op->dev, "RNG error, restesting\n");
 			                                  ^^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#628: FILE: drivers/char/hw_random/n2-drv.c:447:
+	(void) n2rng_generic_write_control(np, post_ctl_ra, unit,

CHECK:BRACES: braces {} should be used on all arms of this statement
#684: FILE: drivers/char/hw_random/n2-drv.c:503:
+	if (limit >= SELFTEST_LOOPS_MAX) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#688: FILE: drivers/char/hw_random/n2-drv.c:507:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#705: FILE: drivers/char/hw_random/n2-drv.c:524:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#724: FILE: drivers/char/hw_random/n2-drv.c:543:
+		int err = n2rng_control_selftest(np, i);
+		if (err)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#795: FILE: drivers/char/hw_random/n2-drv.c:614:
+static void __devinit n2rng_driver_version(void)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#803: FILE: drivers/char/hw_random/n2-drv.c:622:
+static int __devinit n2rng_probe(struct of_device *op,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "match->data"
#806: FILE: drivers/char/hw_random/n2-drv.c:625:
+	int victoria_falls = (match->data != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPLIT_STRING: quoted string split across lines
#832: FILE: drivers/char/hw_random/n2-drv.c:651:
+			dev_err(&op->dev, "Cannot register suitable "
+				"HVAPI version.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:BRACES: braces {} should be used on all arms of this statement
#837: FILE: drivers/char/hw_random/n2-drv.c:656:
+	if (np->flags & N2RNG_FLAG_VF) {
[...]
+	} else
[...]

WARNING:SPLIT_STRING: quoted string split across lines
#840: FILE: drivers/char/hw_random/n2-drv.c:659:
+			dev_err(&op->dev, "VF RNG requires HVAPI major "
+				"version 2 or later, got %lu\n",

CHECK:BRACES: Unbalanced braces around else statement
#850: FILE: drivers/char/hw_random/n2-drv.c:669:
+	} else

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*np->units)...) over kzalloc(sizeof(struct n2rng_unit)...)
#856: FILE: drivers/char/hw_random/n2-drv.c:675:
+	np->units = kzalloc(sizeof(struct n2rng_unit) * np->num_units,

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#856: FILE: drivers/char/hw_random/n2-drv.c:675:
+	np->units = kzalloc(sizeof(struct n2rng_unit) * np->num_units,
+			    GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:SPACING: No space is necessary after a cast
#873: FILE: drivers/char/hw_random/n2-drv.c:692:
+	np->hwrng.priv = (unsigned long) np;

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#898: FILE: drivers/char/hw_random/n2-drv.c:717:
+static int __devexit n2rng_remove(struct of_device *op)

WARNING:CONST_STRUCT: struct of_device_id should normally be const
#920: FILE: drivers/char/hw_random/n2-drv.c:739:
+static struct of_device_id n2rng_match[] = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:SPACING: No space is necessary after a cast
#928: FILE: drivers/char/hw_random/n2-drv.c:747:
+		.data		= (void *) 1,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#959: FILE: drivers/char/hw_random/n2rng.h:1:
+/* n2rng.h: Niagara2 RNG defines.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#993: FILE: drivers/char/hw_random/n2rng.h:35:
+extern unsigned long sun4v_rng_get_diag_ctl(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#994: FILE: drivers/char/hw_random/n2rng.h:36:
+extern unsigned long sun4v_rng_ctl_read_v1(unsigned long ctl_regs_ra,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#997: FILE: drivers/char/hw_random/n2rng.h:39:
+extern unsigned long sun4v_rng_ctl_read_v2(unsigned long ctl_regs_ra,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1003: FILE: drivers/char/hw_random/n2rng.h:45:
+extern unsigned long sun4v_rng_ctl_write_v1(unsigned long ctl_regs_ra,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1007: FILE: drivers/char/hw_random/n2rng.h:49:
+extern unsigned long sun4v_rng_ctl_write_v2(unsigned long ctl_regs_ra,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1011: FILE: drivers/char/hw_random/n2rng.h:53:
+extern unsigned long sun4v_rng_data_read_diag_v1(unsigned long data_ra,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1014: FILE: drivers/char/hw_random/n2rng.h:56:
+extern unsigned long sun4v_rng_data_read_diag_v2(unsigned long data_ra,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1018: FILE: drivers/char/hw_random/n2rng.h:60:
+extern unsigned long sun4v_rng_data_read(unsigned long data_ra,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000279626.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 19 warnings, 29 checks, 1009 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000279626.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
