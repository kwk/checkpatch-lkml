CHECK:LINE_SPACING: Please don't use multiple blank lines
#161: FILE: drivers/serial/8250.c:1759:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#163: FILE: drivers/serial/8250.c:1761:
+static void serial8250_put_poll_char(struct uart_port *port,
+			 unsigned char c)

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#242: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#247: FILE: drivers/serial/kgdboc.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#248: FILE: drivers/serial/kgdboc.c:2:
+ * drivers/serial/kgdboc.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:TYPO_SPELLING: 'inteface' may be misspelled - perhaps 'interface'?
#251: FILE: drivers/serial/kgdboc.c:5:
+ * driver uses a serial polling api to implement a gdb serial inteface
                                                               ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONST_STRUCT: struct kgdb_io should normally be const
#269: FILE: drivers/serial/kgdboc.c:23:
+static struct kgdb_io kgdboc_io_ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#288: FILE: drivers/serial/kgdboc.c:42:
+		printk(KERN_ERR "kgdboc: config string too long\n");

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#294: FILE: drivers/serial/kgdboc.c:48:
+__setup("kgdboc=", kgdboc_option_setup);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#316: FILE: drivers/serial/kgdboc.c:70:
+		tty_line = simple_strtoul(str, &str, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#323: FILE: drivers/serial/kgdboc.c:77:
+		if (tty_line >= 0 && tty_line <= p->num &&
+			p->poll_init && !p->poll_init(p, tty_line, str)) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#345: FILE: drivers/serial/kgdboc.c:99:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#375: FILE: drivers/serial/kgdboc.c:129:
+static int param_set_kgdboc_var(const char *kmessage,
+		struct kernel_param *kp)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#378: FILE: drivers/serial/kgdboc.c:132:
+		printk(KERN_ERR "kgdboc: config string too long\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#389: FILE: drivers/serial/kgdboc.c:143:
+		printk(KERN_ERR "kgdboc: Cannot reconfigure while KGDB is "

WARNING:SPLIT_STRING: quoted string split across lines
#390: FILE: drivers/serial/kgdboc.c:144:
+		printk(KERN_ERR "kgdboc: Cannot reconfigure while KGDB is "
+				"connected.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:CONST_STRUCT: struct kgdb_io should normally be const
#417: FILE: drivers/serial/kgdboc.c:171:
+static struct kgdb_io kgdboc_io_ops = {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#473: FILE: drivers/serial/serial_core.c:2208:
+static int uart_poll_init(struct tty_driver *driver,
+		int line, char *options)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#488: FILE: drivers/serial/serial_core.c:2223:
+	if (!(port->ops->poll_get_char &&
+		  port->ops->poll_put_char))

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#493: FILE: drivers/serial/serial_core.c:2228:
+		return(uart_set_options(port, 0, baud, parity, bits, flow));

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#498: FILE: drivers/serial/serial_core.c:2233:
+}
+static int uart_poll_get_char(struct tty_driver *driver, int line)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#512: FILE: drivers/serial/serial_core.c:2247:
+static void uart_poll_put_char(struct tty_driver *driver,
+		int line, char ch)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct uart_port *' should also have an identifier name
#551: FILE: include/linux/serial_core.h:216:
+	int		(*poll_get_char)(struct uart_port *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#601: FILE: lib/Kconfig.kgdb:55:
+config KGDBOC
+	tristate "Shared serial console and kgdb port"
+	depends on KGDB
+	select SERIAL_POLL
+	select MAGIC_SYSRQ
+	help
+	  Share a serial console with kgdb.  The sysrq-g must be used
+	  to break in initially.
1.5.4

Kconfig symbols should have a help text which fully describes
it.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000324126.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 13 warnings, 10 checks, 468 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000324126.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
