WARNING:TYPO_SPELLING: 'againt' may be misspelled - perhaps 'against'?
#40: 
Patch againt 2.6.28-rc6.
      ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: drivers/block/pktcdvd.c:2882:
+^I^I  ^I^Isizeof(struct pkt_rb_node), "pkt_rb");$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#89: FILE: drivers/block/pktcdvd.c:2882:
+^I^I  ^I^Isizeof(struct pkt_rb_node), "pkt_rb");$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#191: FILE: drivers/md/raid10.c:1640:
+	conf->r10buf_pool = mempool_create(buffs, r10buf_pool_alloc, r10buf_pool_free, conf,
+		"md_r10buf", MEMPOOL_PRIVATE);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#255: FILE: fs/proc/Kconfig:71:
+config PROC_MEMPOOL
+	default y
+	bool "Enable /proc mempool"
+	help
+	  Display mempool created and usage

Kconfig symbols should have a help text which fully describes
it.

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#276: FILE: include/linux/mempool.h:22:
+	char* name;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#298: FILE: include/linux/mempool.h:43:
+^Imempool_free_t *free_fn, void *pool_data, const char *name, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#302: FILE: include/linux/mempool.h:46:
+^Imempool_free_t *free_fn, void *pool_data, int nid, const char *name, $

CHECK:SPACING: No space is necessary after a cast
#314: FILE: include/linux/mempool.h:65:
+			      (void *) kc, name, MEMPOOL_SLAB);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#324: FILE: include/linux/mempool.h:76:
+static inline mempool_t *mempool_create_kmalloc_pool(int min_nr, size_t size,
+	const char* name)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#324: FILE: include/linux/mempool.h:76:
+	const char* name)

CHECK:SPACING: No space is necessary after a cast
#328: FILE: include/linux/mempool.h:79:
+			      (void *) size, name, MEMPOOL_KMALLOC);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#331: FILE: include/linux/mempool.h:81:
+static inline mempool_t *mempool_create_kzalloc_pool(int min_nr, size_t size, $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#331: FILE: include/linux/mempool.h:81:
 }
+static inline mempool_t *mempool_create_kzalloc_pool(int min_nr, size_t size, 

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#332: FILE: include/linux/mempool.h:82:
+static inline mempool_t *mempool_create_kzalloc_pool(int min_nr, size_t size, 
+	const char* name)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#332: FILE: include/linux/mempool.h:82:
+	const char* name)

CHECK:SPACING: No space is necessary after a cast
#336: FILE: include/linux/mempool.h:85:
+			      (void *) size, name, MEMPOOL_KMALLOC);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#346: FILE: include/linux/mempool.h:95:
+static inline mempool_t *mempool_create_page_pool(int min_nr, int order,
+	const char* name)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#346: FILE: include/linux/mempool.h:95:
+	const char* name)

CHECK:SPACING: No space is necessary after a cast
#371: FILE: mm/bounce.c:83:
+	       mempool_free_pages, (void *) 0, "isa_page_pool", MEMPOOL_PAGE);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#402: FILE: mm/mempool.c:60:
+^Imempool_free_t *free_fn, void *pool_data, const char *name, $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#406: FILE: mm/mempool.c:63:
+	return  mempool_create_node(min_nr,alloc_fn,free_fn, pool_data,-1, name, type);
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#406: FILE: mm/mempool.c:63:
+	return  mempool_create_node(min_nr,alloc_fn,free_fn, pool_data,-1, name, type);
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#406: FILE: mm/mempool.c:63:
+	return  mempool_create_node(min_nr,alloc_fn,free_fn, pool_data,-1, name, type);
 	                                                              ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#406: FILE: mm/mempool.c:63:
+	return  mempool_create_node(min_nr,alloc_fn,free_fn, pool_data,-1, name, type);
 	                                                               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#412: FILE: mm/mempool.c:68:
+^Imempool_free_t *free_fn, void *pool_data, int node_id, const char *name, $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pool->name"
#426: FILE: mm/mempool.c:106:
+	if (pool->name == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#434: FILE: mm/mempool.c:114:
+		pool->size = (int)(long) pool_data;

CHECK:SPACING: No space is necessary after a cast
#436: FILE: mm/mempool.c:116:
+		pool->size = (int)(PAGE_SIZE << (int)(long) pool_data);

WARNING:LINE_SPACING: Missing a blank line after declarations
#439: FILE: mm/mempool.c:119:
+		struct kmem_cache *kc = pool_data;
+		pool->size = kmem_cache_size(kc);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000198156.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 14 errors, 4 warnings, 12 checks, 309 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000198156.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
