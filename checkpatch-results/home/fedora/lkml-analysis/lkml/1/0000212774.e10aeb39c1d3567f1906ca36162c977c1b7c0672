WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#81: FILE: fs/namei.c:1781:
+	error = may_open(&nd.path, acc_mode, flag);
 	                  ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#94: FILE: fs/nfsctl.c:39:
+		error = may_open(&nd.path, MAY_READ|MAY_WRITE,
 		                  ^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#94: FILE: fs/nfsctl.c:39:
+		error = may_open(&nd.path, MAY_READ|MAY_WRITE,
 		                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#95: FILE: fs/nfsctl.c:40:
+		error = may_open(&nd.path, MAY_READ|MAY_WRITE,
+					   FMODE_READ|FMODE_WRITE);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#95: FILE: fs/nfsctl.c:40:
+					   FMODE_READ|FMODE_WRITE);
 					             ^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#98: FILE: fs/nfsctl.c:42:
+		error = may_open(&nd.path, MAY_WRITE, FMODE_WRITE);
 		                  ^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#111: FILE: include/linux/fs.h:1868:
+extern int may_open(struct path *, int, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct path *' should also have an identifier name
#111: FILE: include/linux/fs.h:1868:
+extern int may_open(struct path *, int, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#111: FILE: include/linux/fs.h:1868:
+extern int may_open(struct path *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#111: FILE: include/linux/fs.h:1868:
+extern int may_open(struct path *, int, int);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000212774.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 4 checks, 65 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000212774.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
