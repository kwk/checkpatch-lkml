WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#53: 
> +int security_ptrace (struct task_struct * parent, struct task_struct * child);

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#83: 
--- a/include/linux/security.h~security-convert-lsm-into-a-static-interface-fix

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#93: FILE: include/linux/security.h:1419:
+int security_capget(struct task_struct *target,
 		     kernel_cap_t *effective,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#98: FILE: include/linux/security.h:1423:
+int security_capset_check(struct task_struct *target,
 			   kernel_cap_t *effective,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#103: FILE: include/linux/security.h:1427:
+void security_capset_set(struct task_struct *target,
 			  kernel_cap_t *effective,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#142: FILE: include/linux/security.h:1450:
+int security_sb_mount(char *dev_name, struct nameidata *nd,
                                                         ^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#143: FILE: include/linux/security.h:1451:
+int security_sb_mount(char *dev_name, struct nameidata *nd,
                        char *type, unsigned long flags, void *data);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#156: FILE: include/linux/security.h:1452:
+int security_sb_check_sb(struct vfsmount *mnt, struct nameidata *nd);
                                                                  ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#168: FILE: include/linux/security.h:1464:
+int security_inode_init_security(struct inode *inode, struct inode *dir,
 				  char **name, void **value, size_t *len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#173: FILE: include/linux/security.h:1467:
+int security_inode_link(struct dentry *old_dentry, struct inode *dir,
 			 struct dentry *new_dentry);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#178: FILE: include/linux/security.h:1470:
+int security_inode_symlink(struct inode *dir, struct dentry *dentry,
 			    const char *old_name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#187: FILE: include/linux/security.h:1475:
+int security_inode_rename(struct inode *old_dir, struct dentry *old_dentry,
 			   struct inode *new_dir, struct dentry *new_dentry);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#196: FILE: include/linux/security.h:1477:
+int security_inode_follow_link(struct dentry *dentry, struct nameidata *nd);
                                                                         ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#197: FILE: include/linux/security.h:1478:
+int security_inode_permission(struct inode *inode, int mask, struct nameidata *nd);
                                                                                ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#202: FILE: include/linux/security.h:1483:
+int security_inode_setxattr(struct dentry *dentry, char *name,
 			     void *value, size_t size, int flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: include/linux/security.h:1485:
+void security_inode_post_setxattr(struct dentry *dentry, char *name,
 				   void *value, size_t size, int flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#226: FILE: include/linux/security.h:1498:
+int security_file_mmap(struct file *file, unsigned long reqprot,
 			unsigned long prot, unsigned long flags,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#230: FILE: include/linux/security.h:1501:
+int security_file_mprotect(struct vm_area_struct *vma, unsigned long reqprot,
 			    unsigned long prot);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: include/linux/security.h:1506:
+int security_file_send_sigiotask(struct task_struct *tsk,
 				  struct fown_struct *fown, int sig);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#252: FILE: include/linux/security.h:1513:
+int security_task_post_setuid(uid_t old_ruid, uid_t old_euid,
 			       uid_t old_suid, int flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: include/linux/security.h:1525:
+int security_task_setscheduler(struct task_struct *p,
 				int policy, struct sched_param *lp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#282: FILE: include/linux/security.h:1529:
+int security_task_kill(struct task_struct *p, struct siginfo *info,
 			int sig, u32 secid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#287: FILE: include/linux/security.h:1532:
+int security_task_prctl(int option, unsigned long arg2, unsigned long arg3,
 			 unsigned long arg4, unsigned long arg5);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#320: FILE: include/linux/security.h:1543:
+int security_msg_queue_msgsnd(struct msg_queue *msq,
+			       struct msg_msg *msg, int msqflg);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#322: FILE: include/linux/security.h:1545:
+int security_msg_queue_msgrcv(struct msg_queue *msq, struct msg_msg *msg,
+			       struct task_struct *target, long type, int mode);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#333: FILE: include/linux/security.h:1556:
+int security_sem_semop(struct sem_array *sma, struct sembuf *sops,
 			unsigned nsops, int alter);

ERROR:POINTER_LOCATION: "foo*bar" should be "foo *bar"
#394: FILE: include/linux/security.h:2260:
+void security_sock_graft(struct sock*sk, struct socket *parent);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#414: FILE: security/security.c:182:
+int security_capget(struct task_struct *target,
 		     kernel_cap_t *effective,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#424: FILE: security/security.c:190:
+int security_capset_check(struct task_struct *target,
 			   kernel_cap_t *effective,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#434: FILE: security/security.c:198:
+void security_capset_set(struct task_struct *target,
 			  kernel_cap_t *effective,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#563: FILE: security/security.c:306:
+int security_sb_mount(char *dev_name, struct nameidata *nd,
                                                         ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#564: FILE: security/security.c:307:
+int security_sb_mount(char *dev_name, struct nameidata *nd,
                        char *type, unsigned long flags, void *data)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#567: FILE: security/security.c:309:
+	return security_ops->sb_mount(dev_name, nd, type, flags, data);
 	                                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#571: FILE: security/security.c:312:
+int security_sb_check_sb(struct vfsmount *mnt, struct nameidata *nd)
                                                                  ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#574: FILE: security/security.c:314:
+	return security_ops->sb_check_sb(mnt, nd);
 	                                      ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#650: FILE: security/security.c:369:
+int security_inode_init_security(struct inode *inode, struct inode *dir,
 				  char **name, void **value, size_t *len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#672: FILE: security/security.c:385:
+int security_inode_link(struct dentry *old_dentry, struct inode *dir,
 			 struct dentry *new_dentry)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#693: FILE: security/security.c:400:
+int security_inode_symlink(struct inode *dir, struct dentry *dentry,
 			    const char *old_name)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#734: FILE: security/security.c:429:
+int security_inode_rename(struct inode *old_dir, struct dentry *old_dentry,
 			   struct inode *new_dir, struct dentry *new_dentry)

ERROR:CODE_INDENT: code indent should use tabs where possible
#738: FILE: security/security.c:431:
+        if (unlikely(IS_PRIVATE(old_dentry->d_inode) ||$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#738: FILE: security/security.c:431:
+        if (unlikely(IS_PRIVATE(old_dentry->d_inode) ||$

ERROR:CODE_INDENT: code indent should use tabs where possible
#739: FILE: security/security.c:432:
+            (new_dentry->d_inode && IS_PRIVATE(new_dentry->d_inode))))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#739: FILE: security/security.c:432:
+        if (unlikely(IS_PRIVATE(old_dentry->d_inode) ||
+            (new_dentry->d_inode && IS_PRIVATE(new_dentry->d_inode))))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#739: FILE: security/security.c:432:
+            (new_dentry->d_inode && IS_PRIVATE(new_dentry->d_inode))))$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#757: FILE: security/security.c:445:
+int security_inode_follow_link(struct dentry *dentry, struct nameidata *nd)
                                                                         ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#763: FILE: security/security.c:449:
+	return security_ops->inode_follow_link(dentry, nd);
 	                                               ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#767: FILE: security/security.c:452:
+int security_inode_permission(struct inode *inode, int mask, struct nameidata *nd)
                                                                                ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#773: FILE: security/security.c:456:
+	return security_ops->inode_permission(inode, mask, nd);
 	                                                   ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#808: FILE: security/security.c:481:
+int security_inode_setxattr(struct dentry *dentry, char *name,
 			     void *value, size_t size, int flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#819: FILE: security/security.c:489:
+void security_inode_post_setxattr(struct dentry *dentry, char *name,
 				   void *value, size_t size, int flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#915: FILE: security/security.c:564:
+int security_file_mmap(struct file *file, unsigned long reqprot,
 			unsigned long prot, unsigned long flags,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#924: FILE: security/security.c:571:
+int security_file_mprotect(struct vm_area_struct *vma, unsigned long reqprot,
 			    unsigned long prot)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#953: FILE: security/security.c:592:
+int security_file_send_sigiotask(struct task_struct *tsk,
 				  struct fown_struct *fown, int sig)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#996: FILE: security/security.c:623:
+int security_task_post_setuid(uid_t old_ruid, uid_t old_euid,
 			       uid_t old_suid, int flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1075: FILE: security/security.c:680:
+int security_task_setscheduler(struct task_struct *p,
 				int policy, struct sched_param *lp)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1097: FILE: security/security.c:696:
+int security_task_kill(struct task_struct *p, struct siginfo *info,
 			int sig, u32 secid)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1112: FILE: security/security.c:707:
+int security_task_prctl(int option, unsigned long arg2, unsigned long arg3,
 			 unsigned long arg4, unsigned long arg5)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1181: FILE: security/security.c:758:
+int security_msg_queue_msgsnd(struct msg_queue *msq,
+			       struct msg_msg *msg, int msqflg)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1190: FILE: security/security.c:764:
+int security_msg_queue_msgrcv(struct msg_queue *msq, struct msg_msg *msg,
+			       struct task_struct *target, long type, int mode)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1258: FILE: security/security.c:815:
+int security_sem_semop(struct sem_array *sma, struct sembuf *sops,
 			unsigned nsops, int alter)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000404024.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 15 warnings, 41 checks, 1314 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000404024.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
