WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#151: FILE: fs/utimes.c:128:
+	struct nameidata nd;
 	                 ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#158: FILE: fs/utimes.c:135:
+	error = __user_walk_fd(dfd, filename, lookup_flags, &nd);
 	                                                     ^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#162: FILE: fs/utimes.c:139:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#164: FILE: fs/utimes.c:141:
+		struct inode *inode = nd.path.dentry->d_inode;
 		                      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#188: FILE: fs/utimes.c:148:
+			error = vfs_permission(&nd, MAY_WRITE);
 			                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#204: FILE: fs/utimes.c:153:
+	error = utimes_common(&nd.path, times);
 	                       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#207: FILE: fs/utimes.c:156:
+	path_put(&nd.path);
 	          ^^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#211: FILE: fs/utimes.c:160:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!filename"
#235: FILE: fs/utimes.c:184:
+	if (filename == NULL && dfd != AT_FDCWD) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#255: FILE: include/linux/time.h:112:
+extern int do_utimes(int dfd, char __user *filename, struct timespec *times,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000279845.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 4 checks, 210 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000279845.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
