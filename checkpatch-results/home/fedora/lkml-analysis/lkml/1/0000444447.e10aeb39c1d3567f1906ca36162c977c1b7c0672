WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
I've been told to send this patch to you for inclusion in your patchset, and

WARNING:TYPO_SPELLING: 'availble' may be misspelled - perhaps 'available'?
#91: 
   symbol of course). (If U+FFFD isn't availble and hence an inverse
                                       ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#136: FILE: drivers/char/vt.c:1942:
+	uint32_t first;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#137: FILE: drivers/char/vt.c:1943:
+	uint32_t last;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#140: FILE: drivers/char/vt.c:1946:
+static int bisearch(uint32_t ucs, const struct interval *table, int max)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#179: FILE: drivers/char/vt.c:1994:
+	uint8_t rescan;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#180: FILE: drivers/char/vt.c:1995:
+	uint8_t inverse;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#181: FILE: drivers/char/vt.c:1996:
+	uint8_t width;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#196: FILE: drivers/char/vt.c:2066:
 		} else if (vc->vc_utf && !vc->vc_disp_ctrl) {
[...]
+		    if ((c & 0xc0) == 0x80) {

WARNING:TABSTOP: Statements should start on a tabstop
#204: FILE: drivers/char/vt.c:2071:
+		    if ((c & 0xc0) == 0x80) {

WARNING:LONG_LINE: line length of 145 exceeds 100 columns
#206: FILE: drivers/char/vt.c:2073:
+			static const uint32_t utf8_length_changes[] = { 0x0000007f, 0x000007ff, 0x0000ffff, 0x001fffff, 0x03ffffff, 0x7fffffff };

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#206: FILE: drivers/char/vt.c:2073:
+			static const uint32_t utf8_length_changes[] = { 0x0000007f, 0x000007ff, 0x0000ffff, 0x001fffff, 0x03ffffff, 0x7fffffff };

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#207: FILE: drivers/char/vt.c:2074:
 			if (vc->vc_utf_count) {
+			    vc->vc_utf_char = (vc->vc_utf_char << 6) | (c & 0x3f);

WARNING:TABSTOP: Statements should start on a tabstop
#238: FILE: drivers/char/vt.c:2077:
+			    if (--vc->vc_utf_count) {

WARNING:TABSTOP: Statements should start on a tabstop
#242: FILE: drivers/char/vt.c:2080:
+			    }

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#246: FILE: drivers/char/vt.c:2084:
+			    if (c <= utf8_length_changes[vc->vc_npar - 1] || c > utf8_length_changes[vc->vc_npar]) {

WARNING:TABSTOP: Statements should start on a tabstop
#246: FILE: drivers/char/vt.c:2084:
+			    if (c <= utf8_length_changes[vc->vc_npar - 1] || c > utf8_length_changes[vc->vc_npar]) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#246: FILE: drivers/char/vt.c:2084:
+			    if (c <= utf8_length_changes[vc->vc_npar - 1] || c > utf8_length_changes[vc->vc_npar]) {
+				c = 0xfffd;
+			    }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TABSTOP: Statements should start on a tabstop
#248: FILE: drivers/char/vt.c:2086:
+			    }

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#249: FILE: drivers/char/vt.c:2087:
+			} else {
[...]
+			    vc->vc_utf_count = 0;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#259: FILE: drivers/char/vt.c:2094:
+			if (vc->vc_utf_count) {
[...]
+			    rescan = 1;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#264: FILE: drivers/char/vt.c:2099:
+			} else if (c > 0x7f) {
[...]
+			    vc->vc_npar = 0;

WARNING:TABSTOP: Statements should start on a tabstop
#267: FILE: drivers/char/vt.c:2102:
+			    if ((c & 0xe0) == 0xc0) {

WARNING:TABSTOP: Statements should start on a tabstop
#270: FILE: drivers/char/vt.c:2105:
+			    } else if ((c & 0xf0) == 0xe0) {

WARNING:TABSTOP: Statements should start on a tabstop
#273: FILE: drivers/char/vt.c:2108:
+			    } else if ((c & 0xf8) == 0xf0) {

WARNING:TABSTOP: Statements should start on a tabstop
#276: FILE: drivers/char/vt.c:2111:
+			    } else if ((c & 0xfc) == 0xf8) {

WARNING:TABSTOP: Statements should start on a tabstop
#279: FILE: drivers/char/vt.c:2114:
+			    } else if ((c & 0xfe) == 0xfc) {

WARNING:TABSTOP: Statements should start on a tabstop
#282: FILE: drivers/char/vt.c:2117:
+			    } else {

WARNING:TABSTOP: Statements should start on a tabstop
#285: FILE: drivers/char/vt.c:2120:
+			    }

WARNING:TABSTOP: Statements should start on a tabstop
#286: FILE: drivers/char/vt.c:2121:
+			    if (vc->vc_utf_count) {

WARNING:TABSTOP: Statements should start on a tabstop
#289: FILE: drivers/char/vt.c:2124:
+			    }

WARNING:TABSTOP: Statements should start on a tabstop
#296: FILE: drivers/char/vt.c:2131:
+		    if ((c >= 0xd800 && c <= 0xdfff) || c == 0xfffe || c == 0xffff)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#307: FILE: drivers/char/vt.c:2156:
+				if (is_double_width(c)) {
+					width = 2;
+				}

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 36)
#329: FILE: drivers/char/vt.c:2163:
+				if (tc == -1 || tc == -2) {
+				    continue; /* nothing to display */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#329: FILE: drivers/char/vt.c:2163:
+				if (tc == -1 || tc == -2) {
+				    continue; /* nothing to display */
+				}

WARNING:TABSTOP: Statements should start on a tabstop
#330: FILE: drivers/char/vt.c:2164:
+				    continue; /* nothing to display */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 36)
#333: FILE: drivers/char/vt.c:2167:
+				if (!(vc->vc_utf && !vc->vc_disp_ctrl) && !(c & ~charmask)) {
[...]
+				    tc = c;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#335: FILE: drivers/char/vt.c:2169:
+				    /* In legacy mode use the glyph we get by a 1:1 mapping.
+				       This would make absolutely no sense with Unicode in mind. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#335: FILE: drivers/char/vt.c:2169:
+				       This would make absolutely no sense with Unicode in mind. */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 36)
#337: FILE: drivers/char/vt.c:2171:
+				} else {
[...]
+				    tc = conv_uni_to_pc(vc, 0xfffd);

WARNING:LONG_LINE_COMMENT: line length of 110 exceeds 100 columns
#338: FILE: drivers/char/vt.c:2172:
+				    /* Display U+FFFD. If it's not found, display an inverse question mark. */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:TABSTOP: Statements should start on a tabstop
#340: FILE: drivers/char/vt.c:2174:
+				    if (tc < 0) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#343: FILE: drivers/char/vt.c:2177:
+					if (tc < 0) tc = '?';

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:TABSTOP: Statements should start on a tabstop
#344: FILE: drivers/char/vt.c:2178:
+				    }

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#374: FILE: drivers/char/vt.c:2186:
+				if (!vc->vc_can_do_color) {
[...]
+				} else if (vc->vc_hi_font_mask == 0x100) {
[...]
+				} else {
[...]

WARNING:LONG_LINE: line length of 137 exceeds 100 columns
#377: FILE: drivers/char/vt.c:2189:
+					vc_attr = ((vc->vc_attr) & 0x11) | (((vc->vc_attr) & 0xe0) >> 4) | (((vc->vc_attr) & 0x0e) << 4);

WARNING:LONG_LINE: line length of 137 exceeds 100 columns
#379: FILE: drivers/char/vt.c:2191:
+					vc_attr = ((vc->vc_attr) & 0x88) | (((vc->vc_attr) & 0x70) >> 4) | (((vc->vc_attr) & 0x07) << 4);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#389: FILE: drivers/char/vt.c:2197:
+					FLUSH
+				if (vc->vc_need_wrap) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#397: FILE: drivers/char/vt.c:2205:
+					     ((vc_attr << 8) & ~himask) + ((tc & 0x100) ? himask : 0) + (tc & 0xff) :

CHECK:SPACING: No space is necessary after a cast
#399: FILE: drivers/char/vt.c:2207:
+					   (u16 *) vc->vc_pos);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#413: FILE: drivers/char/vt.c:2220:
+				if (!--width) break;

WARNING:LONG_LINE_COMMENT: line length of 107 exceeds 100 columns
#415: FILE: drivers/char/vt.c:2222:
+				tc = conv_uni_to_pc(vc, ' '); /* A space is printed in the second column */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#416: FILE: drivers/char/vt.c:2223:
+				if (tc < 0) tc = ' ';

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000444447.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 41 warnings, 8 checks, 308 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000444447.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
