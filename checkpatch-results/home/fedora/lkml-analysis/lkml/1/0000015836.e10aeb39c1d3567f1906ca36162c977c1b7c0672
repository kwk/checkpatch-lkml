WARNING:TYPO_SPELLING: 'syncronization' may be misspelled - perhaps 'synchronization'?
#34: 
towards very fast syncronization and maximum stickness to PPS signal.
                  ^^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#71: FILE: include/linux/timex.h:277:
+extern void hardpps(const struct timespec *, s64);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct timespec *' should also have an identifier name
#71: FILE: include/linux/timex.h:277:
+extern void hardpps(const struct timespec *, s64);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 's64' should also have an identifier name
#71: FILE: include/linux/timex.h:277:
+extern void hardpps(const struct timespec *, s64);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#83: FILE: kernel/time/Kconfig:30:
+config NTP_PPS
+	bool "PPS kernel consumer support"
+	depends on PPS
+	help
+	  This option adds support for direct in-kernel time
+	  syncronization using an external PPS signal.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:TYPO_SPELLING: 'syncronization' may be misspelled - perhaps 'synchronization'?
#88: FILE: kernel/time/Kconfig:35:
+	  syncronization using an external PPS signal.
 	  ^^^^^^^^^^^^^^

CHECK:BRACES: Unbalanced braces around else statement
#179: FILE: kernel/time/ntp.c:297:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#183: FILE: kernel/time/ntp.c:301:
+		s64 delta;
+		delta		 =

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#205: FILE: kernel/time/ntp.c:426:
+		/* the PPS calibration interval may end
+		   surprisingly early */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#205: FILE: kernel/time/ntp.c:426:
+		   surprisingly early */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#227: FILE: kernel/time/ntp.c:572:
+	if ((time_status & (STA_UNSYNC|STA_CLOCKERR))
 	                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#232: FILE: kernel/time/ntp.c:577:
+	     */
+	    || ((time_status & (STA_PPSFREQ|STA_PPSTIME))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#232: FILE: kernel/time/ntp.c:577:
+	    || ((time_status & (STA_PPSFREQ|STA_PPSTIME))
 	                                   ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#233: FILE: kernel/time/ntp.c:578:
+	    || ((time_status & (STA_PPSFREQ|STA_PPSTIME))
+		&& !(time_status & STA_PPSSIGNAL))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#235: FILE: kernel/time/ntp.c:580:
+	    /* PPS jitter exceeded when PPS time synchronization requested */
+	    || ((time_status & (STA_PPSTIME|STA_PPSJITTER))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#235: FILE: kernel/time/ntp.c:580:
+	    || ((time_status & (STA_PPSTIME|STA_PPSJITTER))
 	                                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#236: FILE: kernel/time/ntp.c:581:
+		== (STA_PPSTIME|STA_PPSJITTER))
 		               ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#240: FILE: kernel/time/ntp.c:585:
+	     */
+	    || ((time_status & STA_PPSFREQ)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#241: FILE: kernel/time/ntp.c:586:
+	    || ((time_status & STA_PPSFREQ)
+		&& (time_status & (STA_PPSWANDER|STA_PPSERROR)))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#241: FILE: kernel/time/ntp.c:586:
+		&& (time_status & (STA_PPSWANDER|STA_PPSERROR)))
 		                                ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#282: FILE: kernel/time/ntp.c:641:
+/* normalize the timestamp so that nsec is in the
+   ( -NSEC_PER_SEC / 2, NSEC_PER_SEC / 2 ] interval */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#282: FILE: kernel/time/ntp.c:641:
+   ( -NSEC_PER_SEC / 2, NSEC_PER_SEC / 2 ] interval */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#357: FILE: kernel/time/ntp.c:716:
+		pr_err("hardpps: PPSERROR: interval too long - %ld s\n",
+				freq_norm.tv_sec);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#419: FILE: kernel/time/ntp.c:778:
+	 * next line */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#431: FILE: kernel/time/ntp.c:790:
+		pr_warning("hardpps: PPSJITTER: jitter=%ld, limit=%ld\n",
+		       jitter, (pps_jitter << PPS_POPCORN));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#437: FILE: kernel/time/ntp.c:796:
+		time_offset = div_s64(((s64)correction) << NTP_SCALE_SHIFT,
+				NTP_INTERVAL_FREQ);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#494: FILE: kernel/time/ntp.c:853:
+	if ((nsec < NSEC_PER_SEC - MAXFREQ) ||
+			(freq_norm.tv_nsec > MAXFREQ * freq_norm.tv_sec) ||

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hardpps', this function's name, in a string
#499: FILE: kernel/time/ntp.c:858:
+		pr_err("hardpps: PPSJITTER: bad pulse\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000015836.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 12 warnings, 16 checks, 436 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000015836.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
