WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#37: FILE: drivers/mtd/ubi/cdev.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#51: FILE: drivers/mtd/ubi/cdev.c:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#52: FILE: drivers/mtd/ubi/cdev.c:16:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#69: FILE: drivers/mtd/ubi/cdev.c:33:
+#include <asm/uaccess.h>

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#88: FILE: drivers/mtd/ubi/cdev.c:52:
+			     size_t count, loff_t * offp);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct file_operations should normally be const
#101: FILE: drivers/mtd/ubi/cdev.c:65:
+static struct file_operations vol_cdev_operations = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct file_operations should normally be const
#139: FILE: drivers/mtd/ubi/cdev.c:103:
+static struct file_operations ubi_cdev_operations = {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#184: FILE: drivers/mtd/ubi/cdev.c:148:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#318: FILE: drivers/mtd/ubi/cdev.c:282:
+			     size_t count, loff_t * offp)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#328: FILE: drivers/mtd/ubi/cdev.c:292:
+	uint64_t tmp;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#357: FILE: drivers/mtd/ubi/cdev.c:321:
+		count_save = count = vtr->used_bytes - *offp;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: braces {} should be used on all arms of this statement
#378: FILE: drivers/mtd/ubi/cdev.c:342:
+	if (count > tbuf_size) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#387: FILE: drivers/mtd/ubi/cdev.c:351:
+	} else

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#515: FILE: drivers/mtd/ubi/cdev.c:479:
+	switch (cmd) {
+

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's64' over 'int64_t'
#519: FILE: drivers/mtd/ubi/cdev.c:483:
+		int64_t bytes, rsvd_bytes;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#566: FILE: drivers/mtd/ubi/cdev.c:530:
+		int32_t lnum;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#657: FILE: drivers/mtd/ubi/cdev.c:621:
+	switch (cmd) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#701: FILE: drivers/mtd/ubi/cdev.c:665:
+		dbg_cdev("create volume ID %d, size %d, type %d, name %s",
+		     req.vol_id, vtr.reserved_pebs, vtr.vol_type,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#716: FILE: drivers/mtd/ubi/cdev.c:680:
+		err = __copy_to_user(argp, &req,
+				       sizeof(struct ubi_mkvol_req));

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#734: FILE: drivers/mtd/ubi/cdev.c:698:
+		int32_t vol_id;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#765: FILE: drivers/mtd/ubi/cdev.c:729:
+		uint64_t tmp;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#829: FILE: drivers/mtd/ubi/cdev.c:793:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#848: FILE: drivers/mtd/ubi/cdev.c:812:
+	uint64_t bytes;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#982: FILE: drivers/mtd/ubi/cdev.c:946:
+	uint64_t tmp;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1008: FILE: drivers/mtd/ubi/cdev.c:972:
+		count_save = count = vtr->used_bytes - *offp;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000466264.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 5 warnings, 16 checks, 1033 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000466264.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
