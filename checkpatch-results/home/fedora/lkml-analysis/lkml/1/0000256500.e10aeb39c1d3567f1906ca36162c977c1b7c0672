WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#48: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#53: FILE: include/linux/regulator/consumer.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#198: FILE: include/linux/regulator/consumer.h:146:
+int regulator_set_current_limit(struct regulator *regulator,
+			       int min_uA, int max_uA);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#207: FILE: include/linux/regulator/consumer.h:155:
+int regulator_register_notifier(struct regulator *regulator,
+			      struct notifier_block *nb);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#209: FILE: include/linux/regulator/consumer.h:157:
+int regulator_unregister_notifier(struct regulator *regulator,
+				struct notifier_block *nb);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#230: FILE: include/linux/regulator/consumer.h:178:
+}
+static inline void regulator_put(struct regulator *regulator)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#285: FILE: include/linux/regulator/consumer.h:233:
+static inline int regulator_set_current_limit(struct regulator *regulator,
+					     int min_uA, int max_uA)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#296: FILE: include/linux/regulator/consumer.h:244:
+static inline int regulator_set_mode(struct regulator *regulator,
+	unsigned int mode)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#307: FILE: include/linux/regulator/consumer.h:255:
+static inline int regulator_set_optimum_mode(struct regulator *regulator,
+					int load_uA)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#313: FILE: include/linux/regulator/consumer.h:261:
+static inline int regulator_register_notifier(struct regulator *regulator,
+			      struct notifier_block *nb)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#319: FILE: include/linux/regulator/consumer.h:267:
+static inline int regulator_unregister_notifier(struct regulator *regulator,
+				struct notifier_block *nb)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#330: FILE: include/linux/regulator/consumer.h:278:
+static inline void regulator_set_drvdata(struct regulator *regulator,
+	void *data)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000256500.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 10 checks, 284 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000256500.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
