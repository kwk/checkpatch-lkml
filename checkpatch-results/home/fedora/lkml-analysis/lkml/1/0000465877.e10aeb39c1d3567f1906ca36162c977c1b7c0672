WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
The executable is oom'ed only when the container it is running in, is overlimit

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#73: FILE: include/linux/memctlr.h:37:
+extern int memctlr_mm_overlimit(struct mm_struct *mm, void *sc_cont);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#97: FILE: include/linux/rmap.h:93:
+int try_to_unmap(struct page *, int ignore_refs, void *container);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#127: FILE: include/linux/swap.h:192:
+extern unsigned long memctlr_shrink_mapped_memory(unsigned long nr_pages,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#128: FILE: include/linux/swap.h:193:
+extern unsigned long memctlr_shrink_mapped_memory(unsigned long nr_pages,
+							void *container);

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: mm/memctlr.c:74:
+ ^I * Regular reclaim, let it proceed as usual$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#187: FILE: mm/memctlr.c:74:
+ ^I * Regular reclaim, let it proceed as usual$

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: mm/memctlr.c:75:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#188: FILE: mm/memctlr.c:75:
+ ^I */$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'usage > limit'
#199: FILE: mm/memctlr.c:86:
+	if (limit && (usage > limit))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#214: FILE: mm/memctlr.c:129:
+static int memctlr_check_and_reclaim(struct container *cont, long usage,
+					long limit)

ERROR:CODE_INDENT: code indent should use tabs where possible
#241: FILE: mm/memctlr.c:156:
+ ^I^I * Resample usage and limit after reclaim$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#241: FILE: mm/memctlr.c:156:
+ ^I^I * Resample usage and limit after reclaim$

ERROR:CODE_INDENT: code indent should use tabs where possible
#242: FILE: mm/memctlr.c:157:
+ ^I^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#242: FILE: mm/memctlr.c:157:
+ ^I^I */$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'usage > limit'
#248: FILE: mm/memctlr.c:163:
+	if (limit && (usage > limit))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'usage > limit'
#303: FILE: mm/memctlr.c:258:
+	if (limit && (usage > limit)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#320: FILE: mm/memctlr.c:336:
+int memctlr_can_attach(struct container_subsys *ss, struct container *cont,
+			struct task_struct *p)

ERROR:CODE_INDENT: code indent should use tabs where possible
#338: FILE: mm/memctlr.c:361:
+ ^I * See if this can be stopped at the upper layer$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#338: FILE: mm/memctlr.c:361:
+ ^I * See if this can be stopped at the upper layer$

ERROR:CODE_INDENT: code indent should use tabs where possible
#339: FILE: mm/memctlr.c:362:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#339: FILE: mm/memctlr.c:362:
+ ^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#383: FILE: mm/rmap.c:807:
+ ^I^I * When reclaiming memory on behalf of overlimit containers$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#383: FILE: mm/rmap.c:807:
+ ^I^I * When reclaiming memory on behalf of overlimit containers$

ERROR:CODE_INDENT: code indent should use tabs where possible
#384: FILE: mm/rmap.c:808:
+ ^I^I * shared pages are spared, they are only unmapped from$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#384: FILE: mm/rmap.c:808:
+ ^I^I * shared pages are spared, they are only unmapped from$

ERROR:CODE_INDENT: code indent should use tabs where possible
#385: FILE: mm/rmap.c:809:
+ ^I^I * the vma's (mm's) whose containers are over limit$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#385: FILE: mm/rmap.c:809:
+ ^I^I * the vma's (mm's) whose containers are over limit$

ERROR:CODE_INDENT: code indent should use tabs where possible
#386: FILE: mm/rmap.c:810:
+ ^I^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#386: FILE: mm/rmap.c:810:
+ ^I^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#406: FILE: mm/rmap.c:845:
+ ^I^I * If we are reclaiming memory due to containers being overlimit$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#406: FILE: mm/rmap.c:845:
+ ^I^I * If we are reclaiming memory due to containers being overlimit$

ERROR:CODE_INDENT: code indent should use tabs where possible
#407: FILE: mm/rmap.c:846:
+ ^I^I * and this mm is not over it's limit, spare the page$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#407: FILE: mm/rmap.c:846:
+ ^I^I * and this mm is not over it's limit, spare the page$

ERROR:CODE_INDENT: code indent should use tabs where possible
#408: FILE: mm/rmap.c:847:
+ ^I^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#408: FILE: mm/rmap.c:847:
+ ^I^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#482: FILE: mm/rmap.c:989:
+ ^I^I * Check if the page belongs to the container and it is overlimit$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#482: FILE: mm/rmap.c:989:
+ ^I^I * Check if the page belongs to the container and it is overlimit$

ERROR:CODE_INDENT: code indent should use tabs where possible
#483: FILE: mm/rmap.c:990:
+ ^I^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#483: FILE: mm/rmap.c:990:
+ ^I^I */$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#493: FILE: mm/rmap.c:1000:
+	list_for_each_entry(vma, &mapping->i_mmap_nonlinear,
+						shared.vm_set.list)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#562: FILE: mm/vmscan.c:636:
+	for (scan = 0, vscan = 0; scan < nr_to_scan && (vscan < max_scan) &&
+					!list_empty(src); scan++, vscan++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#571: FILE: mm/vmscan.c:646:
+ ^I^I * For containers, do not scan the page unless it$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#571: FILE: mm/vmscan.c:646:
+ ^I^I * For containers, do not scan the page unless it$

ERROR:CODE_INDENT: code indent should use tabs where possible
#572: FILE: mm/vmscan.c:647:
+ ^I^I * belongs to the container we are reclaiming for$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#572: FILE: mm/vmscan.c:647:
+ ^I^I * belongs to the container we are reclaiming for$

ERROR:CODE_INDENT: code indent should use tabs where possible
#573: FILE: mm/vmscan.c:648:
+ ^I^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#573: FILE: mm/vmscan.c:648:
+ ^I^I */$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000465877.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 18 errors, 20 warnings, 10 checks, 607 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000465877.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
