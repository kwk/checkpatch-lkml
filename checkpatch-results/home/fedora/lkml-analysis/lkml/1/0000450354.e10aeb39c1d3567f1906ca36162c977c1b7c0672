WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#105: FILE: fs/signalfd.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#106: FILE: fs/signalfd.c:2:
+ *  fs/signalfd.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:TYPO_SPELLING: 'strcture' may be misspelled - perhaps 'structure'?
#111: FILE: fs/signalfd.c:7:
+ *      Changed ->read() to return a siginfo strcture instead of signal number.
                                              ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#133: FILE: fs/signalfd.c:29:
+#include <asm/uaccess.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#135: FILE: fs/signalfd.c:31:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#148: FILE: fs/signalfd.c:44:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "lk->tsk"
#163: FILE: fs/signalfd.c:59:
+	if (likely(lk->tsk != NULL))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sighand"
#172: FILE: fs/signalfd.c:68:
+	return sighand != NULL;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#188: FILE: fs/signalfd.c:84:
+	BUG_ON(!sig);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: braces {} should be used on all arms of this statement
#243: FILE: fs/signalfd.c:139:
+	if (signalfd_lock(ctx, &lk)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#249: FILE: fs/signalfd.c:145:
+	} else

WARNING:TYPO_SPELLING: 'memebers' may be misspelled - perhaps 'members'?
#266: FILE: fs/signalfd.c:162:
+	 * Unused memebers should be zero ...
 	          ^^^^^^^^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#316: FILE: fs/signalfd.c:212:
+	return err ? -EFAULT: sizeof(*uinfo);
 	                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#373: FILE: fs/signalfd.c:269:
+		res = signalfd_copyinfo((struct signalfd_siginfo __user *) buf,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#379: FILE: fs/signalfd.c:275:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#386: FILE: fs/signalfd.c:282:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#519: FILE: include/linux/signalfd.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#520: FILE: include/linux/signalfd.h:2:
+ *  include/linux/signalfd.h

CHECK:LINE_SPACING: Please don't use multiple blank lines
#529: FILE: include/linux/signalfd.h:11:
+
+

WARNING:TYPO_SPELLING: 'strcture' may be misspelled - perhaps 'structure'?
#549: FILE: include/linux/signalfd.h:31:
+	 * Pad strcture to 128 bytes. Remember to update the
 	       ^^^^^^^^

WARNING:TYPO_SPELLING: 'memebers' may be misspelled - perhaps 'members'?
#550: FILE: include/linux/signalfd.h:32:
+	 * pad size when you add new memebers. We use a fixed
 	                             ^^^^^^^^

WARNING:TYPO_SPELLING: 'strcture' may be misspelled - perhaps 'structure'?
#553: FILE: include/linux/signalfd.h:35:
+	 * members. We use fixed size members because this strcture
 	                                                   ^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#560: FILE: include/linux/signalfd.h:42:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#755: FILE: include/linux/signal.h:236:
+extern int next_signal(struct sigpending *pending, sigset_t *mask);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#791: FILE: init/Kconfig:476:
+config SIGNALFD
+	bool "Eanble signalfd() system call" if EMBEDDED
+	depends on ANON_INODES
+	default y
+	help
+	  Enable the signalfd() system call that allows to receive signals
+	  on a file descriptor.
+
+	  If unsure, say Y.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:TYPO_SPELLING: 'Eanble' may be misspelled - perhaps 'Enable'?
#792: FILE: init/Kconfig:477:
+	bool "Eanble signalfd() system call" if EMBEDDED
 	      ^^^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000450354.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 13 warnings, 12 checks, 631 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000450354.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
