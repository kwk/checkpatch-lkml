WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#53: 
Signed-off-by:  Douglas Thompson <dougthompson@xmission.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#71: FILE: drivers/edac/edac_device.c:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#98: FILE: drivers/edac/edac_device.c:28:
+#include <asm/uaccess.h>

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#107: FILE: drivers/edac/edac_device.c:36:
LIST_HEAD_INIT(edac_device_list);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#109: FILE: drivers/edac/edac_device.c:38:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#120: FILE: drivers/edac/edac_device.c:49:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#125: FILE: drivers/edac/edac_device.c:53:
+	debugf3("\tedac_dev = %p dev_idx=%d \n", edac_dev,edac_dev->dev_idx);
 	                                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#125: FILE: drivers/edac/edac_device.c:53:
+	debugf3("\tedac_dev = %p dev_idx=%d \n", edac_dev,edac_dev->dev_idx);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#140: FILE: drivers/edac/edac_device.c:67:
+struct edac_device_ctl_info *edac_device_alloc_ctl_info(

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#141: FILE: drivers/edac/edac_device.c:68:
+	unsigned sz_private,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#143: FILE: drivers/edac/edac_device.c:70:
+	unsigned nr_instances,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#145: FILE: drivers/edac/edac_device.c:72:
+	unsigned nr_blocks,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#146: FILE: drivers/edac/edac_device.c:73:
+	unsigned offset_value,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#148: FILE: drivers/edac/edac_device.c:75:
+	unsigned nr_attribs)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#154: FILE: drivers/edac/edac_device.c:81:
+	unsigned total_size;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#155: FILE: drivers/edac/edac_device.c:82:
+	unsigned count;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#156: FILE: drivers/edac/edac_device.c:83:
+	unsigned instance, block, attr;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#160: FILE: drivers/edac/edac_device.c:87:
+		__func__,nr_instances,nr_blocks);
 		        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#160: FILE: drivers/edac/edac_device.c:87:
+		__func__,nr_instances,nr_blocks);
 		                     ^

CHECK:SPACING: No space is necessary after a cast
#168: FILE: drivers/edac/edac_device.c:94:
+	dev_ctl = (struct edac_device_ctl_info *) 0;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#172: FILE: drivers/edac/edac_device.c:98:
+			edac_align_ptr(&dev_ctl[1],sizeof(*dev_inst));
 			                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#176: FILE: drivers/edac/edac_device.c:102:
+			edac_align_ptr(&dev_inst[nr_instances],sizeof(*dev_blk));
 			                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#181: FILE: drivers/edac/edac_device.c:107:
+			edac_align_ptr(&dev_blk[count],sizeof(*dev_attrib));
 			                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#188: FILE: drivers/edac/edac_device.c:114:
+	pvt = edac_align_ptr(&dev_attrib[count],sz_private);
 	                                       ^

CHECK:SPACING: No space is necessary after a cast
#189: FILE: drivers/edac/edac_device.c:115:
+	total_size = ((unsigned long) pvt) + sz_private;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#192: FILE: drivers/edac/edac_device.c:118:
+	if ((dev_ctl = kmalloc(total_size, GFP_KERNEL)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: No space is necessary after a cast
#199: FILE: drivers/edac/edac_device.c:125:
+			(((char *) dev_ctl) + ((unsigned long) dev_inst));

CHECK:SPACING: No space is necessary after a cast
#201: FILE: drivers/edac/edac_device.c:127:
+			(((char *) dev_ctl) + ((unsigned long) dev_blk));

CHECK:SPACING: No space is necessary after a cast
#203: FILE: drivers/edac/edac_device.c:129:
+			(((char *) dev_ctl) + ((unsigned long) dev_attrib));

CHECK:SPACING: No space is necessary after a cast
#205: FILE: drivers/edac/edac_device.c:131:
+			(((char *) dev_ctl) + ((unsigned long) pvt)) : NULL;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#213: FILE: drivers/edac/edac_device.c:139:
+	snprintf(dev_ctl->name,sizeof(dev_ctl->name),"%s", edac_device_name);
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#213: FILE: drivers/edac/edac_device.c:139:
+	snprintf(dev_ctl->name,sizeof(dev_ctl->name),"%s", edac_device_name);
 	                                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#214: FILE: drivers/edac/edac_device.c:140:
+	dev_ctl->name[sizeof(dev_ctl->name)-1] = '\0';
 	                                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#226: FILE: drivers/edac/edac_device.c:152:
+		snprintf(inst->name, sizeof(inst->name),
+			"%s%u", edac_device_name, instance);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#227: FILE: drivers/edac/edac_device.c:153:
+		inst->name[sizeof(inst->name)-1] = '\0';
 		                             ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#230: FILE: drivers/edac/edac_device.c:156:
+		for (		block = 0;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: drivers/edac/edac_device.c:165:
+			snprintf(blk->name, sizeof(blk->name),
+				"%s%d", edac_block_name,block+1);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#239: FILE: drivers/edac/edac_device.c:165:
+				"%s%d", edac_block_name,block+1);
 				                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#239: FILE: drivers/edac/edac_device.c:165:
+				"%s%d", edac_block_name,block+1);
 				                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#240: FILE: drivers/edac/edac_device.c:166:
+			blk->name[sizeof(blk->name)-1] = '\0';
 			                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#243: FILE: drivers/edac/edac_device.c:169:
+				__func__, instance,block,blk->name);
 				                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#243: FILE: drivers/edac/edac_device.c:169:
+				__func__, instance,block,blk->name);
 				                        ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "attrib_spec"
#245: FILE: drivers/edac/edac_device.c:171:
+			if (attrib_spec != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#255: FILE: drivers/edac/edac_device.c:181:
+^I^I^I^I ^I */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#255: FILE: drivers/edac/edac_device.c:181:
+^I^I^I^I ^I */$

ERROR:SPACING: space prohibited after that open parenthesis '('
#274: FILE: drivers/edac/edac_device.c:200:
+void edac_device_free_ctl_info( struct edac_device_ctl_info *ctl_info)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#280: FILE: drivers/edac/edac_device.c:205:
+
+

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#292: FILE: drivers/edac/edac_device.c:217:
+	debugf3("%s()\n", __func__);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#312: FILE: drivers/edac/edac_device.c:237:
+static int add_edac_dev_to_global_list (struct edac_device_ctl_info

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#321: FILE: drivers/edac/edac_device.c:245:
+	if (unlikely((rover = find_edac_device_by_dev(edac_dev->dev)) !=

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#343: FILE: drivers/edac/edac_device.c:266:
+	edac_printk(KERN_WARNING, EDAC_MC,
+		"%s (%s) %s %s already assigned %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#350: FILE: drivers/edac/edac_device.c:273:
+	edac_printk(KERN_WARNING, EDAC_MC,
+		"bug in low-level driver: attempt to assign\n"

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#370: FILE: drivers/edac/edac_device.c:293:
+static void del_edac_device_from_global_list(

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#388: FILE: drivers/edac/edac_device.c:311:
+struct edac_device_ctl_info * edac_device_find(int idx)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#410: FILE: drivers/edac/edac_device.c:333:
+
+

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#415: FILE: drivers/edac/edac_device.c:338:
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,20))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#415: FILE: drivers/edac/edac_device.c:338:
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,20))
                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#415: FILE: drivers/edac/edac_device.c:338:
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,20))
                                              ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#415: FILE: drivers/edac/edac_device.c:338:
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,20))

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:SPACING: No space is necessary after a cast
#418: FILE: drivers/edac/edac_device.c:341:
+	struct delayed_work *d_work = (struct delayed_work*) work_req;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#418: FILE: drivers/edac/edac_device.c:341:
+	struct delayed_work *d_work = (struct delayed_work*) work_req;

CHECK:SPACING: No space is necessary after a cast
#425: FILE: drivers/edac/edac_device.c:348:
+		(struct edac_device_ctl_info *) ptr;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'edac_dev->op_state == OP_RUNNING_POLL'
#432: FILE: drivers/edac/edac_device.c:355:
+	if ((edac_dev->op_state == OP_RUNNING_POLL) &&
+					(edac_dev->edac_check != NULL)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'edac_dev->edac_check != NULL'
#432: FILE: drivers/edac/edac_device.c:355:
+	if ((edac_dev->op_state == OP_RUNNING_POLL) &&
+					(edac_dev->edac_check != NULL)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#433: FILE: drivers/edac/edac_device.c:356:
+	if ((edac_dev->op_state == OP_RUNNING_POLL) &&
+					(edac_dev->edac_check != NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "edac_dev->edac_check"
#433: FILE: drivers/edac/edac_device.c:356:
+					(edac_dev->edac_check != NULL)) {

ERROR:SPACING: space required after that ',' (ctx:VxO)
#440: FILE: drivers/edac/edac_device.c:363:
+	queue_delayed_work(edac_workqueue,&edac_dev->work, edac_dev->delay);
 	                                 ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#440: FILE: drivers/edac/edac_device.c:363:
+	queue_delayed_work(edac_workqueue,&edac_dev->work, edac_dev->delay);
 	                                  ^

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#451: FILE: drivers/edac/edac_device.c:373:
+	debugf0("%s()\n", __func__);

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#456: FILE: drivers/edac/edac_device.c:378:
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,20))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#456: FILE: drivers/edac/edac_device.c:378:
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,20))
                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#456: FILE: drivers/edac/edac_device.c:378:
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,20))
                                              ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#456: FILE: drivers/edac/edac_device.c:378:
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,20))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#457: FILE: drivers/edac/edac_device.c:379:
+	INIT_DELAYED_WORK(&edac_dev->work,edac_workq_function);
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#459: FILE: drivers/edac/edac_device.c:381:
+	INIT_WORK(&edac_dev->work,edac_workq_function,edac_dev);
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#459: FILE: drivers/edac/edac_device.c:381:
+	INIT_WORK(&edac_dev->work,edac_workq_function,edac_dev);
 	                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#461: FILE: drivers/edac/edac_device.c:383:
+	queue_delayed_work(edac_workqueue,&edac_dev->work, edac_dev->delay);
 	                                 ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#461: FILE: drivers/edac/edac_device.c:383:
+	queue_delayed_work(edac_workqueue,&edac_dev->work, edac_dev->delay);
 	                                  ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#483: FILE: drivers/edac/edac_device.c:405:
+void edac_device_reset_delay_period(

CHECK:CAMELCASE: Avoid CamelCase: <edac_op_state_toString>
#501: FILE: drivers/edac/edac_device.c:423:
+static char *edac_op_state_toString(struct edac_device_ctl_info

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#536: FILE: drivers/edac/edac_device.c:455:
+	debugf0("%s()\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#554: FILE: drivers/edac/edac_device.c:473:
+		edac_device_printk(edac_dev, KERN_WARNING,
+			"failed to create sysfs device\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "edac_dev->edac_check"
#559: FILE: drivers/edac/edac_device.c:478:
+	if (edac_dev->edac_check != NULL) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#569: FILE: drivers/edac/edac_device.c:488:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#572: FILE: drivers/edac/edac_device.c:491:
+	edac_device_printk(edac_dev, KERN_INFO,
+		"Giving out device to module '%s' controller '%s': DEV '%s' (%s)\n",

WARNING:TYPO_SPELLING: 'lsit' may be misspelled - perhaps 'list'?
#583: FILE: drivers/edac/edac_device.c:502:
+	/* Some error, so remove the entry from the lsit */
 	                                            ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#605: FILE: drivers/edac/edac_device.c:524:
+struct edac_device_ctl_info * edac_device_del_device(struct device

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#614: FILE: drivers/edac/edac_device.c:532:
+	if ((edac_dev = find_edac_device_by_dev(dev)) == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#634: FILE: drivers/edac/edac_device.c:552:
+	edac_printk(KERN_INFO, EDAC_MC,
+		"Removed device %d for %s %s: DEV %s\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#644: FILE: drivers/edac/edac_device.c:562:
+
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#657: FILE: drivers/edac/edac_device.c:573:
+static inline int edac_device_get_panic_on_ue(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#668: FILE: drivers/edac/edac_device.c:584:
+void edac_device_handle_ce(struct edac_device_ctl_info *edac_dev,
+		int inst_nr, int block_nr, const char *msg)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'inst_nr >= edac_dev->nr_instances'
#673: FILE: drivers/edac/edac_device.c:589:
+	if ((inst_nr >= edac_dev->nr_instances) || (inst_nr < 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'inst_nr < 0'
#673: FILE: drivers/edac/edac_device.c:589:
+	if ((inst_nr >= edac_dev->nr_instances) || (inst_nr < 0)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#675: FILE: drivers/edac/edac_device.c:591:
+		edac_device_printk(edac_dev, KERN_ERR,
+			"INTERNAL ERROR: 'instance' out of range "

WARNING:SPLIT_STRING: quoted string split across lines
#676: FILE: drivers/edac/edac_device.c:592:
+			"INTERNAL ERROR: 'instance' out of range "
+			"(%d >= %d)\n", inst_nr, edac_dev->nr_instances);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'block_nr >= instance->nr_blocks'
#682: FILE: drivers/edac/edac_device.c:598:
+	if ((block_nr >= instance->nr_blocks) || (block_nr < 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'block_nr < 0'
#682: FILE: drivers/edac/edac_device.c:598:
+	if ((block_nr >= instance->nr_blocks) || (block_nr < 0)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#684: FILE: drivers/edac/edac_device.c:600:
+		edac_device_printk(edac_dev, KERN_ERR,
+			"INTERNAL ERROR: instance %d 'block' out of range "

WARNING:SPLIT_STRING: quoted string split across lines
#685: FILE: drivers/edac/edac_device.c:601:
+			"INTERNAL ERROR: instance %d 'block' out of range "
+			"(%d >= %d)\n", inst_nr, block_nr, instance->nr_blocks);

WARNING:TYPO_SPELLING: 'Propogate' may be misspelled - perhaps 'Propagate'?
#694: FILE: drivers/edac/edac_device.c:610:
+	/* Propogate the count up the 'totals' tree */
 	   ^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#700: FILE: drivers/edac/edac_device.c:616:
+		edac_device_printk(edac_dev, KERN_WARNING,
+		"CE ctl: %s, instance: %s, block: %s: %s\n",

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#708: FILE: drivers/edac/edac_device.c:624:
+ *	perform a common output and handling of an 'edac_dev' UE event
   	                                                      ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#711: FILE: drivers/edac/edac_device.c:627:
+void edac_device_handle_ue(struct edac_device_ctl_info *edac_dev,
+		int inst_nr, int block_nr, const char *msg)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'inst_nr >= edac_dev->nr_instances'
#716: FILE: drivers/edac/edac_device.c:632:
+	if ((inst_nr >= edac_dev->nr_instances) || (inst_nr < 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'inst_nr < 0'
#716: FILE: drivers/edac/edac_device.c:632:
+	if ((inst_nr >= edac_dev->nr_instances) || (inst_nr < 0)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#718: FILE: drivers/edac/edac_device.c:634:
+		edac_device_printk(edac_dev, KERN_ERR,
+			"INTERNAL ERROR: 'instance' out of range "

WARNING:SPLIT_STRING: quoted string split across lines
#719: FILE: drivers/edac/edac_device.c:635:
+			"INTERNAL ERROR: 'instance' out of range "
+			"(%d >= %d)\n", inst_nr, edac_dev->nr_instances);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'block_nr >= instance->nr_blocks'
#725: FILE: drivers/edac/edac_device.c:641:
+	if ((block_nr >= instance->nr_blocks) || (block_nr < 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'block_nr < 0'
#725: FILE: drivers/edac/edac_device.c:641:
+	if ((block_nr >= instance->nr_blocks) || (block_nr < 0)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#727: FILE: drivers/edac/edac_device.c:643:
+		edac_device_printk(edac_dev, KERN_ERR,
+			"INTERNAL ERROR: instance %d 'block' out of range "

WARNING:SPLIT_STRING: quoted string split across lines
#728: FILE: drivers/edac/edac_device.c:644:
+			"INTERNAL ERROR: instance %d 'block' out of range "
+			"(%d >= %d)\n", inst_nr, block_nr, instance->nr_blocks);

WARNING:TYPO_SPELLING: 'Propogate' may be misspelled - perhaps 'Propagate'?
#737: FILE: drivers/edac/edac_device.c:653:
+	/* Propogate the count up the 'totals' tree */
 	   ^^^^^^^^^

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#743: FILE: drivers/edac/edac_device.c:659:
+		"UE ctl: %s, instance: %s, block: %s: %s\n",
 		 ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#743: FILE: drivers/edac/edac_device.c:659:
+		edac_device_printk(edac_dev, KERN_EMERG,
+		"UE ctl: %s, instance: %s, block: %s: %s\n",

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#748: FILE: drivers/edac/edac_device.c:664:
+		panic("EDAC %s: UE instance: %s, block %s: %s\n",
 		                ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#749: FILE: drivers/edac/edac_device.c:665:
+		panic("EDAC %s: UE instance: %s, block %s: %s\n",
+			edac_dev->ctl_name, instance->name,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#782: FILE: drivers/edac/edac_mc.c:91:
+char * edac_align_ptr(void *ptr, unsigned size)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#782: FILE: drivers/edac/edac_mc.c:91:
+char * edac_align_ptr(void *ptr, unsigned size)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ctl' may be better as '(ctl)' to avoid precedence issues
#825: FILE: drivers/edac/edac_core.h:60:
+#define edac_device_printk(ctl, level, fmt, arg...) \
+	printk(level "EDAC DEVICE%d: " fmt, ctl->dev_idx, ##arg)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#826: FILE: drivers/edac/edac_core.h:61:
+	printk(level "EDAC DEVICE%d: " fmt, ctl->dev_idx, ##arg)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#845: FILE: drivers/edac/edac_core.h:207:
+extern char * edac_align_ptr(void *ptr, unsigned size);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#845: FILE: drivers/edac/edac_core.h:207:
+extern char * edac_align_ptr(void *ptr, unsigned size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#845: FILE: drivers/edac/edac_core.h:207:
+extern char * edac_align_ptr(void *ptr, unsigned size);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:TYPO_SPELLING: 'swithces' may be misspelled - perhaps 'switches'?
#862: FILE: drivers/edac/edac_core.h:398:
+ * Core CPU swithces
             ^^^^^^^^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'cnt' may be better as '(cnt)' to avoid precedence issues
#898: FILE: drivers/edac/edac_core.h:434:
+#define INC_COUNTER(cnt)	(cnt++)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#912: FILE: drivers/edac/edac_core.h:448:
+
+

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#934: FILE: drivers/edac/edac_core.h:470:
+	struct edac_device_counter counters;	/* basic UE and CE counters */
 	                                    	         ^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#959: FILE: drivers/edac/edac_core.h:495:
+
+

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#973: FILE: drivers/edac/edac_core.h:509:
+	int panic_on_ue;	/* boolean for panic'ing on an UE */
 	                	                               ^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#974: FILE: drivers/edac/edac_core.h:510:
+	unsigned poll_msec;	/* number of milliseconds to poll interval */

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#988: FILE: drivers/edac/edac_core.h:524:
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,20))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#988: FILE: drivers/edac/edac_core.h:524:
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,20))
                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#988: FILE: drivers/edac/edac_core.h:524:
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,20))
                                              ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#988: FILE: drivers/edac/edac_core.h:524:
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,20))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#999: FILE: drivers/edac/edac_core.h:535:
+	void (*edac_check) (struct edac_device_ctl_info * edac_dev);

WARNING:SPACING: Unnecessary space before function pointer arguments
#999: FILE: drivers/edac/edac_core.h:535:
+	void (*edac_check) (struct edac_device_ctl_info * edac_dev);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1043: FILE: drivers/edac/edac_core.h:578:
+/* To get from the instance's wq to the beginning of the ctl structure
+#define to_edac_device_ctl_work(w) \

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1047: FILE: drivers/edac/edac_core.h:582:
+static inline void edac_device_calc_delay(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1060: FILE: drivers/edac/edac_core.h:594:
+extern struct edac_device_ctl_info *edac_device_alloc_ctl_info(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1060: FILE: drivers/edac/edac_core.h:594:
+extern struct edac_device_ctl_info *edac_device_alloc_ctl_info(

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1061: FILE: drivers/edac/edac_core.h:595:
+	unsigned sizeof_private,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1063: FILE: drivers/edac/edac_core.h:597:
+	unsigned nr_instances,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1065: FILE: drivers/edac/edac_core.h:599:
+	unsigned nr_blocks,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1066: FILE: drivers/edac/edac_core.h:600:
+	unsigned offset_value,

CHECK:SPACING: No space is necessary after a cast
#1077: FILE: drivers/edac/edac_core.h:611:
+#define	BLOCK_OFFSET_VALUE_OFF	((unsigned) -1)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1077: FILE: drivers/edac/edac_core.h:611:
+#define	BLOCK_OFFSET_VALUE_OFF	((unsigned) -1)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1079: FILE: drivers/edac/edac_core.h:613:
+extern void edac_device_free_ctl_info( struct edac_device_ctl_info

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1079: FILE: drivers/edac/edac_core.h:613:
+extern void edac_device_free_ctl_info( struct edac_device_ctl_info

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1099: FILE: drivers/edac/edac_core.h:710:
+extern int edac_device_add_device(struct edac_device_ctl_info

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1101: FILE: drivers/edac/edac_core.h:711:
+extern struct edac_device_ctl_info * edac_device_del_device(struct

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1101: FILE: drivers/edac/edac_core.h:711:
+extern struct edac_device_ctl_info * edac_device_del_device(struct

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1103: FILE: drivers/edac/edac_core.h:712:
+extern void edac_device_handle_ue(struct edac_device_ctl_info

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1106: FILE: drivers/edac/edac_core.h:714:
+extern void edac_device_handle_ce(struct edac_device_ctl_info

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1117: FILE: drivers/edac/edac_device_sysfs.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1135: FILE: drivers/edac/edac_device_sysfs.c:19:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1149: FILE: drivers/edac/edac_device_sysfs.c:30:
+	return sprintf(data,"%d\n", edac_dev->ue_count);
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1156: FILE: drivers/edac/edac_device_sysfs.c:36:
+	return sprintf(data,"%d\n", edac_dev->ce_count);
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1163: FILE: drivers/edac/edac_device_sysfs.c:42:
+	return sprintf(data,"%ld\n", (jiffies - edac_dev->start_time) / HZ);
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1170: FILE: drivers/edac/edac_device_sysfs.c:48:
+	return sprintf(data,"%s\n", edac_dev->ctl_name);
 	                   ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1173: FILE: drivers/edac/edac_device_sysfs.c:51:
+
+

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1176: FILE: drivers/edac/edac_device_sysfs.c:54:
+	ssize_t (*show)(struct edac_device_ctl_info *,char *);
 	                                             ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct edac_device_ctl_info *' should also have an identifier name
#1176: FILE: drivers/edac/edac_device_sysfs.c:54:
+	ssize_t (*show)(struct edac_device_ctl_info *,char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1176: FILE: drivers/edac/edac_device_sysfs.c:54:
+	ssize_t (*show)(struct edac_device_ctl_info *,char *);

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1177: FILE: drivers/edac/edac_device_sysfs.c:55:
+	ssize_t (*store)(struct edac_device_ctl_info *, const char *,size_t);
 	                                                            ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct edac_device_ctl_info *' should also have an identifier name
#1177: FILE: drivers/edac/edac_device_sysfs.c:55:
+	ssize_t (*store)(struct edac_device_ctl_info *, const char *,size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#1177: FILE: drivers/edac/edac_device_sysfs.c:55:
+	ssize_t (*store)(struct edac_device_ctl_info *, const char *,size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#1177: FILE: drivers/edac/edac_device_sysfs.c:55:
+	ssize_t (*store)(struct edac_device_ctl_info *, const char *,size_t);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1180: FILE: drivers/edac/edac_device_sysfs.c:58:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1187: FILE: drivers/edac/edac_device_sysfs.c:64:
+	struct edacdev_attribute * edacdev_attr = to_edacdev_attr(attr);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1200: FILE: drivers/edac/edac_device_sysfs.c:76:
+	struct edacdev_attribute * edacdev_attr = to_edacdev_attr(attr);

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#1208: FILE: drivers/edac/edac_device_sysfs.c:84:
+static struct sysfs_ops edac_dev_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1213: FILE: drivers/edac/edac_device_sysfs.c:89:
+#define EDACDEV_ATTR(_name,_mode,_show,_store)			\
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1213: FILE: drivers/edac/edac_device_sysfs.c:89:
+#define EDACDEV_ATTR(_name,_mode,_show,_store)			\
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1213: FILE: drivers/edac/edac_device_sysfs.c:89:
+#define EDACDEV_ATTR(_name,_mode,_show,_store)			\
                                       ^

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1213: FILE: drivers/edac/edac_device_sysfs.c:89:
+#define EDACDEV_ATTR(_name,_mode,_show,_store)			\
+static struct edacdev_attribute edac_dev_attr_##_name = {			\
+	.attr = {.name = __stringify(_name), .mode = _mode },	\
+	.show   = _show,					\
+	.store  = _store,					\
+};

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1221: FILE: drivers/edac/edac_device_sysfs.c:97:
+EDACDEV_ATTR(reset_counters,S_IWUSR,NULL,edac_dev_reset_counters_store);
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1221: FILE: drivers/edac/edac_device_sysfs.c:97:
+EDACDEV_ATTR(reset_counters,S_IWUSR,NULL,edac_dev_reset_counters_store);
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1221: FILE: drivers/edac/edac_device_sysfs.c:97:
+EDACDEV_ATTR(reset_counters,S_IWUSR,NULL,edac_dev_reset_counters_store);
                                         ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#1221: FILE: drivers/edac/edac_device_sysfs.c:97:
+EDACDEV_ATTR(reset_counters,S_IWUSR,NULL,edac_dev_reset_counters_store);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1224: FILE: drivers/edac/edac_device_sysfs.c:100:
+EDACDEV_ATTR(mc_name,S_IRUGO,edac_dev_ctl_name_show,NULL);
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1224: FILE: drivers/edac/edac_device_sysfs.c:100:
+EDACDEV_ATTR(mc_name,S_IRUGO,edac_dev_ctl_name_show,NULL);
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1224: FILE: drivers/edac/edac_device_sysfs.c:100:
+EDACDEV_ATTR(mc_name,S_IRUGO,edac_dev_ctl_name_show,NULL);
                                                    ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1224: FILE: drivers/edac/edac_device_sysfs.c:100:
+EDACDEV_ATTR(mc_name,S_IRUGO,edac_dev_ctl_name_show,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1225: FILE: drivers/edac/edac_device_sysfs.c:101:
+EDACDEV_ATTR(seconds_since_reset,S_IRUGO,edac_dev_seconds_show,NULL);
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1225: FILE: drivers/edac/edac_device_sysfs.c:101:
+EDACDEV_ATTR(seconds_since_reset,S_IRUGO,edac_dev_seconds_show,NULL);
                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1225: FILE: drivers/edac/edac_device_sysfs.c:101:
+EDACDEV_ATTR(seconds_since_reset,S_IRUGO,edac_dev_seconds_show,NULL);
                                                               ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1225: FILE: drivers/edac/edac_device_sysfs.c:101:
+EDACDEV_ATTR(seconds_since_reset,S_IRUGO,edac_dev_seconds_show,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1226: FILE: drivers/edac/edac_device_sysfs.c:102:
+EDACDEV_ATTR(ue_count,S_IRUGO,edac_dev_ue_count_show,NULL);
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1226: FILE: drivers/edac/edac_device_sysfs.c:102:
+EDACDEV_ATTR(ue_count,S_IRUGO,edac_dev_ue_count_show,NULL);
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1226: FILE: drivers/edac/edac_device_sysfs.c:102:
+EDACDEV_ATTR(ue_count,S_IRUGO,edac_dev_ue_count_show,NULL);
                                                     ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1226: FILE: drivers/edac/edac_device_sysfs.c:102:
+EDACDEV_ATTR(ue_count,S_IRUGO,edac_dev_ue_count_show,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1227: FILE: drivers/edac/edac_device_sysfs.c:103:
+EDACDEV_ATTR(ce_count,S_IRUGO,edac_dev_ce_count_show,NULL);
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1227: FILE: drivers/edac/edac_device_sysfs.c:103:
+EDACDEV_ATTR(ce_count,S_IRUGO,edac_dev_ce_count_show,NULL);
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1227: FILE: drivers/edac/edac_device_sysfs.c:103:
+EDACDEV_ATTR(ce_count,S_IRUGO,edac_dev_ce_count_show,NULL);
                                                     ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1227: FILE: drivers/edac/edac_device_sysfs.c:103:
+EDACDEV_ATTR(ce_count,S_IRUGO,edac_dev_ce_count_show,NULL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1229: FILE: drivers/edac/edac_device_sysfs.c:105:
+
+

CHECK:SPACING: No space is necessary after a cast
#1254: FILE: drivers/edac/edac_device_sysfs.c:130:
+	.default_attrs = (struct attribute **) edacdev_attr,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1261: FILE: drivers/edac/edac_device_sysfs.c:136:
+/************************** edac_device sysfs code and data
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1267: FILE: drivers/edac/edac_device_sysfs.c:142:
+static ssize_t edac_device_ctl_log_ue_show(

ERROR:CODE_INDENT: code indent should use tabs where possible
#1270: FILE: drivers/edac/edac_device_sysfs.c:145:
+        return sprintf(data,"%u\n", ctl_info->log_ue);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1270: FILE: drivers/edac/edac_device_sysfs.c:145:
+        return sprintf(data,"%u\n", ctl_info->log_ue);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1270: FILE: drivers/edac/edac_device_sysfs.c:145:
+        return sprintf(data,"%u\n", ctl_info->log_ue);
                            ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1273: FILE: drivers/edac/edac_device_sysfs.c:148:
+static ssize_t edac_device_ctl_log_ue_store(

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1275: FILE: drivers/edac/edac_device_sysfs.c:150:
+			const char *data,size_t count)
 			                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1278: FILE: drivers/edac/edac_device_sysfs.c:153:
+	ctl_info->log_ue = (simple_strtoul(data,NULL,0) != 0);
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1278: FILE: drivers/edac/edac_device_sysfs.c:153:
+	ctl_info->log_ue = (simple_strtoul(data,NULL,0) != 0);
 	                                            ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1278: FILE: drivers/edac/edac_device_sysfs.c:153:
+	ctl_info->log_ue = (simple_strtoul(data,NULL,0) != 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:CODE_INDENT: code indent should use tabs where possible
#1280: FILE: drivers/edac/edac_device_sysfs.c:155:
+        return count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1280: FILE: drivers/edac/edac_device_sysfs.c:155:
+        return count;$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1284: FILE: drivers/edac/edac_device_sysfs.c:159:
+static ssize_t edac_device_ctl_log_ce_show(

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1285: FILE: drivers/edac/edac_device_sysfs.c:160:
+		struct edac_device_ctl_info *ctl_info,char *data)
 		                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1287: FILE: drivers/edac/edac_device_sysfs.c:162:
+        return sprintf(data,"%u\n", ctl_info->log_ce);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1287: FILE: drivers/edac/edac_device_sysfs.c:162:
+        return sprintf(data,"%u\n", ctl_info->log_ce);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1287: FILE: drivers/edac/edac_device_sysfs.c:162:
+        return sprintf(data,"%u\n", ctl_info->log_ce);
                            ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1290: FILE: drivers/edac/edac_device_sysfs.c:165:
+static ssize_t edac_device_ctl_log_ce_store(

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1292: FILE: drivers/edac/edac_device_sysfs.c:167:
+			const char *data,size_t count)
 			                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1295: FILE: drivers/edac/edac_device_sysfs.c:170:
+	ctl_info->log_ce = (simple_strtoul(data,NULL,0) != 0);
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1295: FILE: drivers/edac/edac_device_sysfs.c:170:
+	ctl_info->log_ce = (simple_strtoul(data,NULL,0) != 0);
 	                                            ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1295: FILE: drivers/edac/edac_device_sysfs.c:170:
+	ctl_info->log_ce = (simple_strtoul(data,NULL,0) != 0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1297: FILE: drivers/edac/edac_device_sysfs.c:172:
+        return count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1297: FILE: drivers/edac/edac_device_sysfs.c:172:
+        return count;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1300: FILE: drivers/edac/edac_device_sysfs.c:175:
+
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1302: FILE: drivers/edac/edac_device_sysfs.c:177:
+static ssize_t edac_device_ctl_panic_on_ue_show(

ERROR:CODE_INDENT: code indent should use tabs where possible
#1305: FILE: drivers/edac/edac_device_sysfs.c:180:
+        return sprintf(data,"%u\n", ctl_info->panic_on_ue);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1305: FILE: drivers/edac/edac_device_sysfs.c:180:
+        return sprintf(data,"%u\n", ctl_info->panic_on_ue);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1305: FILE: drivers/edac/edac_device_sysfs.c:180:
+        return sprintf(data,"%u\n", ctl_info->panic_on_ue);
                            ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1308: FILE: drivers/edac/edac_device_sysfs.c:183:
+static ssize_t edac_device_ctl_panic_on_ue_store(

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1310: FILE: drivers/edac/edac_device_sysfs.c:185:
+			const char *data,size_t count)
 			                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1313: FILE: drivers/edac/edac_device_sysfs.c:188:
+	ctl_info->panic_on_ue = (simple_strtoul(data,NULL,0) != 0);
 	                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1313: FILE: drivers/edac/edac_device_sysfs.c:188:
+	ctl_info->panic_on_ue = (simple_strtoul(data,NULL,0) != 0);
 	                                                 ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1313: FILE: drivers/edac/edac_device_sysfs.c:188:
+	ctl_info->panic_on_ue = (simple_strtoul(data,NULL,0) != 0);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1319: FILE: drivers/edac/edac_device_sysfs.c:194:
+static ssize_t edac_device_ctl_poll_msec_show(

ERROR:CODE_INDENT: code indent should use tabs where possible
#1322: FILE: drivers/edac/edac_device_sysfs.c:197:
+        return sprintf(data,"%u\n", ctl_info->poll_msec);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1322: FILE: drivers/edac/edac_device_sysfs.c:197:
+        return sprintf(data,"%u\n", ctl_info->poll_msec);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1322: FILE: drivers/edac/edac_device_sysfs.c:197:
+        return sprintf(data,"%u\n", ctl_info->poll_msec);
                            ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1325: FILE: drivers/edac/edac_device_sysfs.c:200:
+static ssize_t edac_device_ctl_poll_msec_store(

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1327: FILE: drivers/edac/edac_device_sysfs.c:202:
+		const char *data,size_t count)
 		                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1336: FILE: drivers/edac/edac_device_sysfs.c:211:
+	value = simple_strtoul(data,NULL,0);
 	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1336: FILE: drivers/edac/edac_device_sysfs.c:211:
+	value = simple_strtoul(data,NULL,0);
 	                                ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1336: FILE: drivers/edac/edac_device_sysfs.c:211:
+	value = simple_strtoul(data,NULL,0);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1337: FILE: drivers/edac/edac_device_sysfs.c:212:
+	edac_device_reset_delay_period(ctl_info,value);
 	                                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1339: FILE: drivers/edac/edac_device_sysfs.c:214:
+        return count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1339: FILE: drivers/edac/edac_device_sysfs.c:214:
+        return count;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1342: FILE: drivers/edac/edac_device_sysfs.c:217:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1345: FILE: drivers/edac/edac_device_sysfs.c:220:
+        struct attribute attr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1345: FILE: drivers/edac/edac_device_sysfs.c:220:
+        struct attribute attr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1346: FILE: drivers/edac/edac_device_sysfs.c:221:
+        ssize_t (*show)(struct edac_device_ctl_info *,char *);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1346: FILE: drivers/edac/edac_device_sysfs.c:221:
+        ssize_t (*show)(struct edac_device_ctl_info *,char *);$

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1346: FILE: drivers/edac/edac_device_sysfs.c:221:
+        ssize_t (*show)(struct edac_device_ctl_info *,char *);
                                                      ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct edac_device_ctl_info *' should also have an identifier name
#1346: FILE: drivers/edac/edac_device_sysfs.c:221:
+        ssize_t (*show)(struct edac_device_ctl_info *,char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1346: FILE: drivers/edac/edac_device_sysfs.c:221:
+        ssize_t (*show)(struct edac_device_ctl_info *,char *);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1347: FILE: drivers/edac/edac_device_sysfs.c:222:
+        ssize_t (*store)(struct edac_device_ctl_info *,const char$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1347: FILE: drivers/edac/edac_device_sysfs.c:222:
+        ssize_t (*store)(struct edac_device_ctl_info *,const char$

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1347: FILE: drivers/edac/edac_device_sysfs.c:222:
+        ssize_t (*store)(struct edac_device_ctl_info *,const char
                                                       ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct edac_device_ctl_info *' should also have an identifier name
#1347: FILE: drivers/edac/edac_device_sysfs.c:222:
+        ssize_t (*store)(struct edac_device_ctl_info *,const char

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char' should also have an identifier name
#1347: FILE: drivers/edac/edac_device_sysfs.c:222:
+        ssize_t (*store)(struct edac_device_ctl_info *,const char

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#1347: FILE: drivers/edac/edac_device_sysfs.c:222:
+        ssize_t (*store)(struct edac_device_ctl_info *,const char

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1353: FILE: drivers/edac/edac_device_sysfs.c:226:
+#define to_ctl_info_attr(a) container_of(a,struct
                                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1358: FILE: drivers/edac/edac_device_sysfs.c:230:
+                        struct attribute *attr,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1358: FILE: drivers/edac/edac_device_sysfs.c:230:
+static ssize_t edac_dev_ctl_info_show(struct kobject *kobj,
+                        struct attribute *attr,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1358: FILE: drivers/edac/edac_device_sysfs.c:230:
+                        struct attribute *attr,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1359: FILE: drivers/edac/edac_device_sysfs.c:231:
+                        char *buffer)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1359: FILE: drivers/edac/edac_device_sysfs.c:231:
+                        char *buffer)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1361: FILE: drivers/edac/edac_device_sysfs.c:233:
+        struct edac_device_ctl_info *edac_dev = to_ctl_info(kobj);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1361: FILE: drivers/edac/edac_device_sysfs.c:233:
+        struct edac_device_ctl_info *edac_dev = to_ctl_info(kobj);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1362: FILE: drivers/edac/edac_device_sysfs.c:234:
+        struct ctl_info_attribute *ctl_info_attr =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1362: FILE: drivers/edac/edac_device_sysfs.c:234:
+        struct ctl_info_attribute *ctl_info_attr =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1365: FILE: drivers/edac/edac_device_sysfs.c:236:
+        if (ctl_info_attr->show)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1365: FILE: drivers/edac/edac_device_sysfs.c:236:
+        if (ctl_info_attr->show)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1366: FILE: drivers/edac/edac_device_sysfs.c:237:
+                return ctl_info_attr->show(edac_dev,buffer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1366: FILE: drivers/edac/edac_device_sysfs.c:237:
+                return ctl_info_attr->show(edac_dev,buffer);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1366: FILE: drivers/edac/edac_device_sysfs.c:237:
+                return ctl_info_attr->show(edac_dev,buffer);
                                                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1367: FILE: drivers/edac/edac_device_sysfs.c:238:
+        return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1367: FILE: drivers/edac/edac_device_sysfs.c:238:
+        return -EIO;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1372: FILE: drivers/edac/edac_device_sysfs.c:242:
+/* Function to 'store' fields into the edac_dev 'ctl_info' structure
+static ssize_t edac_dev_ctl_info_store(struct kobject *kobj,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1373: FILE: drivers/edac/edac_device_sysfs.c:243:
+                        struct attribute *attr,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1374: FILE: drivers/edac/edac_device_sysfs.c:244:
+                ^Iconst char *buffer, size_t count)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1374: FILE: drivers/edac/edac_device_sysfs.c:244:
+                ^Iconst char *buffer, size_t count)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1376: FILE: drivers/edac/edac_device_sysfs.c:246:
+        struct edac_device_ctl_info *edac_dev = to_ctl_info(kobj);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1377: FILE: drivers/edac/edac_device_sysfs.c:247:
+        struct ctl_info_attribute *ctl_info_attr =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1380: FILE: drivers/edac/edac_device_sysfs.c:249:
+        if (ctl_info_attr->store)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1381: FILE: drivers/edac/edac_device_sysfs.c:250:
+                return ctl_info_attr->store(edac_dev, buffer, count);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1382: FILE: drivers/edac/edac_device_sysfs.c:251:
+        return -EIO;$

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#1386: FILE: drivers/edac/edac_device_sysfs.c:255:
+static struct sysfs_ops device_ctl_info_ops = {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1391: FILE: drivers/edac/edac_device_sysfs.c:260:
+#define CTL_INFO_ATTR(_name,_mode,_show,_store)        \
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1391: FILE: drivers/edac/edac_device_sysfs.c:260:
+#define CTL_INFO_ATTR(_name,_mode,_show,_store)        \
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1391: FILE: drivers/edac/edac_device_sysfs.c:260:
+#define CTL_INFO_ATTR(_name,_mode,_show,_store)        \
                                        ^

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1391: FILE: drivers/edac/edac_device_sysfs.c:260:
+#define CTL_INFO_ATTR(_name,_mode,_show,_store)        \
+static struct ctl_info_attribute attr_ctl_info_##_name = {      \
+        .attr = {.name = __stringify(_name), .mode = _mode },   \
+        .show   = _show,                                        \
+        .store  = _store,                                       \
+};

ERROR:CODE_INDENT: code indent should use tabs where possible
#1393: FILE: drivers/edac/edac_device_sysfs.c:262:
+        .attr = {.name = __stringify(_name), .mode = _mode },   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1393: FILE: drivers/edac/edac_device_sysfs.c:262:
+        .attr = {.name = __stringify(_name), .mode = _mode },   \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1394: FILE: drivers/edac/edac_device_sysfs.c:263:
+        .show   = _show,                                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1394: FILE: drivers/edac/edac_device_sysfs.c:263:
+        .show   = _show,                                        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1395: FILE: drivers/edac/edac_device_sysfs.c:264:
+        .store  = _store,                                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1395: FILE: drivers/edac/edac_device_sysfs.c:264:
+        .store  = _store,                                       \$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1398: FILE: drivers/edac/edac_device_sysfs.c:267:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1401: FILE: drivers/edac/edac_device_sysfs.c:269:
+/* Declare the various ctl_info attributes here and their respective
+CTL_INFO_ATTR(log_ue,S_IRUGO|S_IWUSR,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1414: FILE: drivers/edac/edac_device_sysfs.c:282:
+
+

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1431: FILE: drivers/edac/edac_device_sysfs.c:299:
+	debugf1("%s()\n", __func__);

CHECK:SPACING: No space is necessary after a cast
#1438: FILE: drivers/edac/edac_device_sysfs.c:306:
+	.default_attrs = (struct attribute **) device_ctrl_attr,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1441: FILE: drivers/edac/edac_device_sysfs.c:309:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1444: FILE: drivers/edac/edac_device_sysfs.c:311:
+/**************** edac_device main kobj ctor/dtor code
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1453: FILE: drivers/edac/edac_device_sysfs.c:320:
+static int edac_device_register_main_kobj(

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1459: FILE: drivers/edac/edac_device_sysfs.c:326:
+	debugf1("%s()\n", __func__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1461: FILE: drivers/edac/edac_device_sysfs.c:328:
+        /* get the /sys/devices/system/edac reference */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1462: FILE: drivers/edac/edac_device_sysfs.c:329:
+        edac_class = edac_get_edac_class();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1462: FILE: drivers/edac/edac_device_sysfs.c:329:
+        edac_class = edac_get_edac_class();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1463: FILE: drivers/edac/edac_device_sysfs.c:330:
+        if (edac_class == NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1463: FILE: drivers/edac/edac_device_sysfs.c:330:
+        if (edac_class == NULL) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!edac_class"
#1463: FILE: drivers/edac/edac_device_sysfs.c:330:
+        if (edac_class == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1464: FILE: drivers/edac/edac_device_sysfs.c:331:
+                debugf1("%s() no edac_class error=%d\n", __func__,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1464: FILE: drivers/edac/edac_device_sysfs.c:331:
+                debugf1("%s() no edac_class error=%d\n", __func__,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1466: FILE: drivers/edac/edac_device_sysfs.c:332:
+                return err;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1466: FILE: drivers/edac/edac_device_sysfs.c:332:
+                debugf1("%s() no edac_class error=%d\n", __func__,
+                return err;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1466: FILE: drivers/edac/edac_device_sysfs.c:332:
+                return err;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1467: FILE: drivers/edac/edac_device_sysfs.c:333:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1467: FILE: drivers/edac/edac_device_sysfs.c:333:
+        }$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1482: FILE: drivers/edac/edac_device_sysfs.c:348:
+	err = kobject_set_name(&edac_dev->kobj,"%s",edac_dev->name);
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1482: FILE: drivers/edac/edac_device_sysfs.c:348:
+	err = kobject_set_name(&edac_dev->kobj,"%s",edac_dev->name);
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1488: FILE: drivers/edac/edac_device_sysfs.c:354:
+			__func__,edac_dev->name);
 			        ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1502: FILE: drivers/edac/edac_device_sysfs.c:368:
+static void edac_device_unregister_main_kobj(

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1505: FILE: drivers/edac/edac_device_sysfs.c:371:
+	debugf0("%s()\n", __func__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1519: FILE: drivers/edac/edac_device_sysfs.c:385:
+
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1525: FILE: drivers/edac/edac_device_sysfs.c:391:
+static ssize_t instance_ue_count_show(

ERROR:CODE_INDENT: code indent should use tabs where possible
#1528: FILE: drivers/edac/edac_device_sysfs.c:394:
+        return sprintf(data,"%u\n", instance->counters.ue_count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1528: FILE: drivers/edac/edac_device_sysfs.c:394:
+        return sprintf(data,"%u\n", instance->counters.ue_count);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1528: FILE: drivers/edac/edac_device_sysfs.c:394:
+        return sprintf(data,"%u\n", instance->counters.ue_count);
                            ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1531: FILE: drivers/edac/edac_device_sysfs.c:397:
+static ssize_t instance_ce_count_show(

ERROR:CODE_INDENT: code indent should use tabs where possible
#1534: FILE: drivers/edac/edac_device_sysfs.c:400:
+        return sprintf(data,"%u\n", instance->counters.ce_count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1534: FILE: drivers/edac/edac_device_sysfs.c:400:
+        return sprintf(data,"%u\n", instance->counters.ce_count);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1534: FILE: drivers/edac/edac_device_sysfs.c:400:
+        return sprintf(data,"%u\n", instance->counters.ce_count);
                            ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1537: FILE: drivers/edac/edac_device_sysfs.c:403:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1541: FILE: drivers/edac/edac_device_sysfs.c:406:
+#define to_instance_attr(a) container_of(a,struct
                                           ^

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1549: FILE: drivers/edac/edac_device_sysfs.c:413:
+	debugf1("%s()\n", __func__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1555: FILE: drivers/edac/edac_device_sysfs.c:419:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1558: FILE: drivers/edac/edac_device_sysfs.c:422:
+        struct attribute attr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1558: FILE: drivers/edac/edac_device_sysfs.c:422:
+        struct attribute attr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1559: FILE: drivers/edac/edac_device_sysfs.c:423:
+        ssize_t (*show)(struct edac_device_instance *,char *);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1559: FILE: drivers/edac/edac_device_sysfs.c:423:
+        ssize_t (*show)(struct edac_device_instance *,char *);$

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1559: FILE: drivers/edac/edac_device_sysfs.c:423:
+        ssize_t (*show)(struct edac_device_instance *,char *);
                                                      ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct edac_device_instance *' should also have an identifier name
#1559: FILE: drivers/edac/edac_device_sysfs.c:423:
+        ssize_t (*show)(struct edac_device_instance *,char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1559: FILE: drivers/edac/edac_device_sysfs.c:423:
+        ssize_t (*show)(struct edac_device_instance *,char *);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1560: FILE: drivers/edac/edac_device_sysfs.c:424:
+        ssize_t (*store)(struct edac_device_instance *,const char$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1560: FILE: drivers/edac/edac_device_sysfs.c:424:
+        ssize_t (*store)(struct edac_device_instance *,const char$

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1560: FILE: drivers/edac/edac_device_sysfs.c:424:
+        ssize_t (*store)(struct edac_device_instance *,const char
                                                       ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct edac_device_instance *' should also have an identifier name
#1560: FILE: drivers/edac/edac_device_sysfs.c:424:
+        ssize_t (*store)(struct edac_device_instance *,const char

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char' should also have an identifier name
#1560: FILE: drivers/edac/edac_device_sysfs.c:424:
+        ssize_t (*store)(struct edac_device_instance *,const char

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#1560: FILE: drivers/edac/edac_device_sysfs.c:424:
+        ssize_t (*store)(struct edac_device_instance *,const char

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1564: FILE: drivers/edac/edac_device_sysfs.c:427:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1567: FILE: drivers/edac/edac_device_sysfs.c:430:
+                        struct attribute *attr,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1567: FILE: drivers/edac/edac_device_sysfs.c:430:
+static ssize_t edac_dev_instance_show(struct kobject *kobj,
+                        struct attribute *attr,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1567: FILE: drivers/edac/edac_device_sysfs.c:430:
+                        struct attribute *attr,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1568: FILE: drivers/edac/edac_device_sysfs.c:431:
+                        char *buffer)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1568: FILE: drivers/edac/edac_device_sysfs.c:431:
+                        char *buffer)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1570: FILE: drivers/edac/edac_device_sysfs.c:433:
+        struct edac_device_instance *instance = to_instance(kobj);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1570: FILE: drivers/edac/edac_device_sysfs.c:433:
+        struct edac_device_instance *instance = to_instance(kobj);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1571: FILE: drivers/edac/edac_device_sysfs.c:434:
+        struct instance_attribute *instance_attr =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1571: FILE: drivers/edac/edac_device_sysfs.c:434:
+        struct instance_attribute *instance_attr =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1574: FILE: drivers/edac/edac_device_sysfs.c:436:
+        if (instance_attr->show)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1574: FILE: drivers/edac/edac_device_sysfs.c:436:
+        if (instance_attr->show)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1575: FILE: drivers/edac/edac_device_sysfs.c:437:
+                return instance_attr->show(instance,buffer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1575: FILE: drivers/edac/edac_device_sysfs.c:437:
+                return instance_attr->show(instance,buffer);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1575: FILE: drivers/edac/edac_device_sysfs.c:437:
+                return instance_attr->show(instance,buffer);
                                                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1576: FILE: drivers/edac/edac_device_sysfs.c:438:
+        return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1576: FILE: drivers/edac/edac_device_sysfs.c:438:
+        return -EIO;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1579: FILE: drivers/edac/edac_device_sysfs.c:441:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1582: FILE: drivers/edac/edac_device_sysfs.c:443:
+/* Function to 'store' fields into the edac_dev 'instance' structure
+static ssize_t edac_dev_instance_store(struct kobject *kobj,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1583: FILE: drivers/edac/edac_device_sysfs.c:444:
+                        struct attribute *attr,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1584: FILE: drivers/edac/edac_device_sysfs.c:445:
+                ^Iconst char *buffer, size_t count)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1584: FILE: drivers/edac/edac_device_sysfs.c:445:
+                ^Iconst char *buffer, size_t count)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1586: FILE: drivers/edac/edac_device_sysfs.c:447:
+        struct edac_device_instance *instance = to_instance(kobj);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1587: FILE: drivers/edac/edac_device_sysfs.c:448:
+        struct instance_attribute *instance_attr =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1590: FILE: drivers/edac/edac_device_sysfs.c:450:
+        if (instance_attr->store)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1591: FILE: drivers/edac/edac_device_sysfs.c:451:
+                return instance_attr->store(instance, buffer, count);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1592: FILE: drivers/edac/edac_device_sysfs.c:452:
+        return -EIO;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1595: FILE: drivers/edac/edac_device_sysfs.c:455:
+
+

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#1598: FILE: drivers/edac/edac_device_sysfs.c:458:
+static struct sysfs_ops device_instance_ops = {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1603: FILE: drivers/edac/edac_device_sysfs.c:463:
+#define INSTANCE_ATTR(_name,_mode,_show,_store)        \
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1603: FILE: drivers/edac/edac_device_sysfs.c:463:
+#define INSTANCE_ATTR(_name,_mode,_show,_store)        \
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1603: FILE: drivers/edac/edac_device_sysfs.c:463:
+#define INSTANCE_ATTR(_name,_mode,_show,_store)        \
                                        ^

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1603: FILE: drivers/edac/edac_device_sysfs.c:463:
+#define INSTANCE_ATTR(_name,_mode,_show,_store)        \
+static struct instance_attribute attr_instance_##_name = {      \
+        .attr = {.name = __stringify(_name), .mode = _mode },   \
+        .show   = _show,                                        \
+        .store  = _store,                                       \
+};

ERROR:CODE_INDENT: code indent should use tabs where possible
#1605: FILE: drivers/edac/edac_device_sysfs.c:465:
+        .attr = {.name = __stringify(_name), .mode = _mode },   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1605: FILE: drivers/edac/edac_device_sysfs.c:465:
+        .attr = {.name = __stringify(_name), .mode = _mode },   \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1606: FILE: drivers/edac/edac_device_sysfs.c:466:
+        .show   = _show,                                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1606: FILE: drivers/edac/edac_device_sysfs.c:466:
+        .show   = _show,                                        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1607: FILE: drivers/edac/edac_device_sysfs.c:467:
+        .store  = _store,                                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1607: FILE: drivers/edac/edac_device_sysfs.c:467:
+        .store  = _store,                                       \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1615: FILE: drivers/edac/edac_device_sysfs.c:475:
+INSTANCE_ATTR(ce_count,S_IRUGO,instance_ce_count_show,NULL);
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1615: FILE: drivers/edac/edac_device_sysfs.c:475:
+INSTANCE_ATTR(ce_count,S_IRUGO,instance_ce_count_show,NULL);
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1615: FILE: drivers/edac/edac_device_sysfs.c:475:
+INSTANCE_ATTR(ce_count,S_IRUGO,instance_ce_count_show,NULL);
                                                      ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1615: FILE: drivers/edac/edac_device_sysfs.c:475:
+INSTANCE_ATTR(ce_count,S_IRUGO,instance_ce_count_show,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1616: FILE: drivers/edac/edac_device_sysfs.c:476:
+INSTANCE_ATTR(ue_count,S_IRUGO,instance_ue_count_show,NULL);
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1616: FILE: drivers/edac/edac_device_sysfs.c:476:
+INSTANCE_ATTR(ue_count,S_IRUGO,instance_ue_count_show,NULL);
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1616: FILE: drivers/edac/edac_device_sysfs.c:476:
+INSTANCE_ATTR(ue_count,S_IRUGO,instance_ue_count_show,NULL);
                                                      ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1616: FILE: drivers/edac/edac_device_sysfs.c:476:
+INSTANCE_ATTR(ue_count,S_IRUGO,instance_ue_count_show,NULL);

CHECK:SPACING: No space is necessary after a cast
#1629: FILE: drivers/edac/edac_device_sysfs.c:489:
+	.default_attrs = (struct attribute **) device_instance_attr,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1632: FILE: drivers/edac/edac_device_sysfs.c:492:
+
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1638: FILE: drivers/edac/edac_device_sysfs.c:498:
+static ssize_t block_ue_count_show(

ERROR:CODE_INDENT: code indent should use tabs where possible
#1641: FILE: drivers/edac/edac_device_sysfs.c:501:
+        return sprintf(data,"%u\n", block->counters.ue_count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1641: FILE: drivers/edac/edac_device_sysfs.c:501:
+        return sprintf(data,"%u\n", block->counters.ue_count);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1641: FILE: drivers/edac/edac_device_sysfs.c:501:
+        return sprintf(data,"%u\n", block->counters.ue_count);
                            ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1644: FILE: drivers/edac/edac_device_sysfs.c:504:
+static ssize_t block_ce_count_show(

ERROR:CODE_INDENT: code indent should use tabs where possible
#1647: FILE: drivers/edac/edac_device_sysfs.c:507:
+        return sprintf(data,"%u\n", block->counters.ce_count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1647: FILE: drivers/edac/edac_device_sysfs.c:507:
+        return sprintf(data,"%u\n", block->counters.ce_count);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1647: FILE: drivers/edac/edac_device_sysfs.c:507:
+        return sprintf(data,"%u\n", block->counters.ce_count);
                            ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1650: FILE: drivers/edac/edac_device_sysfs.c:510:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1653: FILE: drivers/edac/edac_device_sysfs.c:513:
+#define to_block_attr(a) container_of(a,struct block_attribute,attr)
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1653: FILE: drivers/edac/edac_device_sysfs.c:513:
+#define to_block_attr(a) container_of(a,struct block_attribute,attr)
                                                               ^

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1660: FILE: drivers/edac/edac_device_sysfs.c:520:
+	debugf1("%s()\n", __func__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1668: FILE: drivers/edac/edac_device_sysfs.c:528:
+        struct attribute attr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1668: FILE: drivers/edac/edac_device_sysfs.c:528:
+        struct attribute attr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1669: FILE: drivers/edac/edac_device_sysfs.c:529:
+        ssize_t (*show)(struct edac_device_block *,char *);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1669: FILE: drivers/edac/edac_device_sysfs.c:529:
+        ssize_t (*show)(struct edac_device_block *,char *);$

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1669: FILE: drivers/edac/edac_device_sysfs.c:529:
+        ssize_t (*show)(struct edac_device_block *,char *);
                                                   ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct edac_device_block *' should also have an identifier name
#1669: FILE: drivers/edac/edac_device_sysfs.c:529:
+        ssize_t (*show)(struct edac_device_block *,char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1669: FILE: drivers/edac/edac_device_sysfs.c:529:
+        ssize_t (*show)(struct edac_device_block *,char *);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1670: FILE: drivers/edac/edac_device_sysfs.c:530:
+        ssize_t (*store)(struct edac_device_block *,const char$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1670: FILE: drivers/edac/edac_device_sysfs.c:530:
+        ssize_t (*store)(struct edac_device_block *,const char$

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1670: FILE: drivers/edac/edac_device_sysfs.c:530:
+        ssize_t (*store)(struct edac_device_block *,const char
                                                    ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct edac_device_block *' should also have an identifier name
#1670: FILE: drivers/edac/edac_device_sysfs.c:530:
+        ssize_t (*store)(struct edac_device_block *,const char

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char' should also have an identifier name
#1670: FILE: drivers/edac/edac_device_sysfs.c:530:
+        ssize_t (*store)(struct edac_device_block *,const char

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#1670: FILE: drivers/edac/edac_device_sysfs.c:530:
+        ssize_t (*store)(struct edac_device_block *,const char

ERROR:CODE_INDENT: code indent should use tabs where possible
#1676: FILE: drivers/edac/edac_device_sysfs.c:535:
+                        struct attribute *attr,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1676: FILE: drivers/edac/edac_device_sysfs.c:535:
+static ssize_t edac_dev_block_show(struct kobject *kobj,
+                        struct attribute *attr,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1676: FILE: drivers/edac/edac_device_sysfs.c:535:
+                        struct attribute *attr,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1677: FILE: drivers/edac/edac_device_sysfs.c:536:
+                        char *buffer)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1677: FILE: drivers/edac/edac_device_sysfs.c:536:
+                        char *buffer)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1679: FILE: drivers/edac/edac_device_sysfs.c:538:
+        struct edac_device_block *block = to_block(kobj);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1679: FILE: drivers/edac/edac_device_sysfs.c:538:
+        struct edac_device_block *block = to_block(kobj);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1680: FILE: drivers/edac/edac_device_sysfs.c:539:
+        struct block_attribute *block_attr = to_block_attr(attr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1680: FILE: drivers/edac/edac_device_sysfs.c:539:
+        struct block_attribute *block_attr = to_block_attr(attr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1682: FILE: drivers/edac/edac_device_sysfs.c:541:
+        if (block_attr->show)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1682: FILE: drivers/edac/edac_device_sysfs.c:541:
+        if (block_attr->show)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1683: FILE: drivers/edac/edac_device_sysfs.c:542:
+                return block_attr->show(block,buffer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1683: FILE: drivers/edac/edac_device_sysfs.c:542:
+                return block_attr->show(block,buffer);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1683: FILE: drivers/edac/edac_device_sysfs.c:542:
+                return block_attr->show(block,buffer);
                                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1684: FILE: drivers/edac/edac_device_sysfs.c:543:
+        return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1684: FILE: drivers/edac/edac_device_sysfs.c:543:
+        return -EIO;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1687: FILE: drivers/edac/edac_device_sysfs.c:546:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1690: FILE: drivers/edac/edac_device_sysfs.c:549:
+                        struct attribute *attr,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1690: FILE: drivers/edac/edac_device_sysfs.c:549:
+static ssize_t edac_dev_block_store(struct kobject *kobj,
+                        struct attribute *attr,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1690: FILE: drivers/edac/edac_device_sysfs.c:549:
+                        struct attribute *attr,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1691: FILE: drivers/edac/edac_device_sysfs.c:550:
+                ^Iconst char *buffer, size_t count)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1691: FILE: drivers/edac/edac_device_sysfs.c:550:
+                ^Iconst char *buffer, size_t count)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1691: FILE: drivers/edac/edac_device_sysfs.c:550:
+                ^Iconst char *buffer, size_t count)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1693: FILE: drivers/edac/edac_device_sysfs.c:552:
+        struct edac_device_block *block = to_block(kobj);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1693: FILE: drivers/edac/edac_device_sysfs.c:552:
+        struct edac_device_block *block = to_block(kobj);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1694: FILE: drivers/edac/edac_device_sysfs.c:553:
+        struct block_attribute *block_attr = to_block_attr(attr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1694: FILE: drivers/edac/edac_device_sysfs.c:553:
+        struct block_attribute *block_attr = to_block_attr(attr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1696: FILE: drivers/edac/edac_device_sysfs.c:555:
+        if (block_attr->store)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1696: FILE: drivers/edac/edac_device_sysfs.c:555:
+        if (block_attr->store)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1697: FILE: drivers/edac/edac_device_sysfs.c:556:
+                return block_attr->store(block, buffer, count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1697: FILE: drivers/edac/edac_device_sysfs.c:556:
+                return block_attr->store(block, buffer, count);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1698: FILE: drivers/edac/edac_device_sysfs.c:557:
+        return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1698: FILE: drivers/edac/edac_device_sysfs.c:557:
+        return -EIO;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1701: FILE: drivers/edac/edac_device_sysfs.c:560:
+
+

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#1703: FILE: drivers/edac/edac_device_sysfs.c:562:
+static struct sysfs_ops device_block_ops = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1708: FILE: drivers/edac/edac_device_sysfs.c:567:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1709: FILE: drivers/edac/edac_device_sysfs.c:568:
+#define BLOCK_ATTR(_name,_mode,_show,_store)        \
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1709: FILE: drivers/edac/edac_device_sysfs.c:568:
+#define BLOCK_ATTR(_name,_mode,_show,_store)        \
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1709: FILE: drivers/edac/edac_device_sysfs.c:568:
+#define BLOCK_ATTR(_name,_mode,_show,_store)        \
                                     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1710: FILE: drivers/edac/edac_device_sysfs.c:569:
+static struct block_attribute attr_block_##_name = {                  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#1712: FILE: drivers/edac/edac_device_sysfs.c:571:
+        .attr = {.name = __stringify(_name), .mode = _mode },   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1712: FILE: drivers/edac/edac_device_sysfs.c:571:
+        .attr = {.name = __stringify(_name), .mode = _mode },   \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1713: FILE: drivers/edac/edac_device_sysfs.c:572:
+        .show   = _show,                                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1713: FILE: drivers/edac/edac_device_sysfs.c:572:
+        .show   = _show,                                        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1714: FILE: drivers/edac/edac_device_sysfs.c:573:
+        .store  = _store,                                       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1714: FILE: drivers/edac/edac_device_sysfs.c:573:
+        .store  = _store,                                       \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1717: FILE: drivers/edac/edac_device_sysfs.c:576:
+BLOCK_ATTR(ce_count,S_IRUGO,block_ce_count_show,NULL);
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1717: FILE: drivers/edac/edac_device_sysfs.c:576:
+BLOCK_ATTR(ce_count,S_IRUGO,block_ce_count_show,NULL);
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1717: FILE: drivers/edac/edac_device_sysfs.c:576:
+BLOCK_ATTR(ce_count,S_IRUGO,block_ce_count_show,NULL);
                                                ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1717: FILE: drivers/edac/edac_device_sysfs.c:576:
+BLOCK_ATTR(ce_count,S_IRUGO,block_ce_count_show,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1718: FILE: drivers/edac/edac_device_sysfs.c:577:
+BLOCK_ATTR(ue_count,S_IRUGO,block_ue_count_show,NULL);
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1718: FILE: drivers/edac/edac_device_sysfs.c:577:
+BLOCK_ATTR(ue_count,S_IRUGO,block_ue_count_show,NULL);
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1718: FILE: drivers/edac/edac_device_sysfs.c:577:
+BLOCK_ATTR(ue_count,S_IRUGO,block_ue_count_show,NULL);
                                                ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1718: FILE: drivers/edac/edac_device_sysfs.c:577:
+BLOCK_ATTR(ue_count,S_IRUGO,block_ue_count_show,NULL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1720: FILE: drivers/edac/edac_device_sysfs.c:579:
+
+

CHECK:SPACING: No space is necessary after a cast
#1732: FILE: drivers/edac/edac_device_sysfs.c:591:
+	.default_attrs = (struct attribute **) device_block_attr,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1735: FILE: drivers/edac/edac_device_sysfs.c:594:
+
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1741: FILE: drivers/edac/edac_device_sysfs.c:600:
+static int edac_device_create_block(

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1752: FILE: drivers/edac/edac_device_sysfs.c:611:
+		__func__,instance->name, idx, block->name);
 		        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1759: FILE: drivers/edac/edac_device_sysfs.c:618:
+	err = kobject_set_name(&block->kobj,"%s",block->name);
 	                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1759: FILE: drivers/edac/edac_device_sysfs.c:618:
+	err = kobject_set_name(&block->kobj,"%s",block->name);
 	                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1766: FILE: drivers/edac/edac_device_sysfs.c:625:
+			__func__,block->name);
 			        ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1776: FILE: drivers/edac/edac_device_sysfs.c:635:
+static void edac_device_delete_block(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1797: FILE: drivers/edac/edac_device_sysfs.c:656:
+static int edac_device_create_instance(

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1813: FILE: drivers/edac/edac_device_sysfs.c:672:
+	err = kobject_set_name(&instance->kobj,"%s",instance->name);
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1813: FILE: drivers/edac/edac_device_sysfs.c:672:
+	err = kobject_set_name(&instance->kobj,"%s",instance->name);
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1820: FILE: drivers/edac/edac_device_sysfs.c:679:
+			__func__,instance->name);
 			        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1825: FILE: drivers/edac/edac_device_sysfs.c:684:
+	debugf1("%s() now register '%d' blocks for instance %d\n",
+			__func__,instance->nr_blocks,idx);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1825: FILE: drivers/edac/edac_device_sysfs.c:684:
+			__func__,instance->nr_blocks,idx);
 			        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1825: FILE: drivers/edac/edac_device_sysfs.c:684:
+			__func__,instance->nr_blocks,idx);
 			                            ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1828: FILE: drivers/edac/edac_device_sysfs.c:687:
+	for (i = 0; i < instance->nr_blocks; i++ ) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1829: FILE: drivers/edac/edac_device_sysfs.c:688:
+		err = edac_device_create_block(edac_dev,instance,i);
 		                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1829: FILE: drivers/edac/edac_device_sysfs.c:688:
+		err = edac_device_create_block(edac_dev,instance,i);
 		                                                ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1831: FILE: drivers/edac/edac_device_sysfs.c:690:
+			for (j = 0; j < i; j++) {
+				edac_device_delete_block(edac_dev,instance,j);
+			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1832: FILE: drivers/edac/edac_device_sysfs.c:691:
+				edac_device_delete_block(edac_dev,instance,j);
 				                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1832: FILE: drivers/edac/edac_device_sysfs.c:691:
+				edac_device_delete_block(edac_dev,instance,j);
 				                                          ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1848: FILE: drivers/edac/edac_device_sysfs.c:707:
+static void edac_device_delete_instance(

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1857: FILE: drivers/edac/edac_device_sysfs.c:716:
+	for (i = 0; i < instance->nr_blocks; i++) {
+		edac_device_delete_block(edac_dev,instance,i);
+	}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1858: FILE: drivers/edac/edac_device_sysfs.c:717:
+		edac_device_delete_block(edac_dev,instance,i);
 		                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1858: FILE: drivers/edac/edac_device_sysfs.c:717:
+		edac_device_delete_block(edac_dev,instance,i);
 		                                          ^

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1878: FILE: drivers/edac/edac_device_sysfs.c:736:
+	debugf0("%s()\n", __func__);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1881: FILE: drivers/edac/edac_device_sysfs.c:739:
+	for (i = 0; i < edac_dev->nr_instances; i++ ) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1882: FILE: drivers/edac/edac_device_sysfs.c:740:
+		err = edac_device_create_instance(edac_dev,i);
 		                                          ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1885: FILE: drivers/edac/edac_device_sysfs.c:743:
+			for (j = 0; j < i; j++) {
+				edac_device_delete_instance(edac_dev,j);
+			}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1886: FILE: drivers/edac/edac_device_sysfs.c:744:
+				edac_device_delete_instance(edac_dev,j);
 				                                    ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1905: FILE: drivers/edac/edac_device_sysfs.c:762:
+	for (i = 0; i < edac_dev->nr_instances; i++ ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1905: FILE: drivers/edac/edac_device_sysfs.c:762:
+	for (i = 0; i < edac_dev->nr_instances; i++ ) {
+		edac_device_delete_instance(edac_dev,i);
+	}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1906: FILE: drivers/edac/edac_device_sysfs.c:763:
+		edac_device_delete_instance(edac_dev,i);
 		                                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#1924: FILE: drivers/edac/edac_device_sysfs.c:781:
+	struct kobject *edac_kobj=&edac_dev->kobj;
 	                         ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1924: FILE: drivers/edac/edac_device_sysfs.c:781:
+	struct kobject *edac_kobj=&edac_dev->kobj;
 	                          ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1950: FILE: drivers/edac/edac_device_sysfs.c:807:
+	if (err) {
+		goto error0;
+	}

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1971: FILE: drivers/edac/edac_device_sysfs.c:828:
+	debugf0("%s()\n", __func__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!edac_class"
#2016: FILE: drivers/edac/edac_mc_sysfs.c:225:
+	if (edac_class == NULL) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2033: FILE: drivers/edac/edac_mc_sysfs.c:238:
+		debugf1("%s() Failed to set name '.../edac/mc'\n", __func__ );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2043: FILE: drivers/edac/edac_mc_sysfs.c:245:
+		debugf1("%s() Failed to register '.../edac/mc'\n", __func__ );

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2049: FILE: drivers/edac/edac_mc_sysfs.c:249:
+	debugf1("%s() Registered '.../edac/mc' kobject\n",__func__);
 	                                                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2093: FILE: drivers/edac/edac_mc_sysfs.c:286:
+static ssize_t csrow_size_show(struct csrow_info *csrow, char *data,
+			int private)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2151: FILE: drivers/edac/edac_mc_sysfs.c:749:
+MCIDEV_ATTR(sdram_scrub_rate,S_IRUGO|S_IWUSR,mci_sdram_scrub_rate_show,\
                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2151: FILE: drivers/edac/edac_mc_sysfs.c:749:
+MCIDEV_ATTR(sdram_scrub_rate,S_IRUGO|S_IWUSR,mci_sdram_scrub_rate_show,\
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2151: FILE: drivers/edac/edac_mc_sysfs.c:749:
+MCIDEV_ATTR(sdram_scrub_rate,S_IRUGO|S_IWUSR,mci_sdram_scrub_rate_show,\
                                             ^

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2151: FILE: drivers/edac/edac_mc_sysfs.c:749:
+MCIDEV_ATTR(sdram_scrub_rate,S_IRUGO|S_IWUSR,mci_sdram_scrub_rate_show,\

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#2151: FILE: drivers/edac/edac_mc_sysfs.c:749:
+MCIDEV_ATTR(sdram_scrub_rate,S_IRUGO|S_IWUSR,mci_sdram_scrub_rate_show,\

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2170: FILE: drivers/edac/edac_module.c:22:
 
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2178: FILE: drivers/edac/edac_module.c:30:
+};
+static int edac_class_valid = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#2178: FILE: drivers/edac/edac_module.c:30:
+static int edac_class_valid = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2187: FILE: drivers/edac/edac_module.c:39:
+	struct sysdev_class *classptr=NULL;
 	                             ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2234: FILE: drivers/edac/edac_module.c:86:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!edac_workqueue"
#2248: FILE: drivers/edac/edac_module.c:131:
+	if (edac_workqueue == NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2267: FILE: drivers/edac/edac_module.c:150:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2289: FILE: drivers/edac/edac_module.c:175:
+		edac_printk(KERN_ERR, EDAC_MC,
+			"Error initializing 'edac' kobject\n");

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2373: FILE: drivers/edac/edac_module.h:38:
+extern void edac_workq_setup(struct edac_device_ctl_info *edac_dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2374: FILE: drivers/edac/edac_module.h:39:
+extern void edac_workq_setup(struct edac_device_ctl_info *edac_dev,
+				unsigned msec);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2374: FILE: drivers/edac/edac_module.h:39:
+				unsigned msec);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2375: FILE: drivers/edac/edac_module.h:40:
+extern void edac_workq_teardown(struct edac_device_ctl_info

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2377: FILE: drivers/edac/edac_module.h:41:
+extern void edac_device_reset_delay_period(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2377: FILE: drivers/edac/edac_module.h:41:
+extern void edac_device_reset_delay_period(

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000423258.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 233 errors, 173 warnings, 132 checks, 2261 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000423258.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
