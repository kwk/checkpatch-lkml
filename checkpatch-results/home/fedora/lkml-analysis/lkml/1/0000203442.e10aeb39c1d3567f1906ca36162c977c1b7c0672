CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*instr)...) over kmalloc(sizeof(struct ustr)...)
#61: FILE: fs/udf/super.c:910:
+	instr = kmalloc(sizeof(struct ustr), GFP_NOFS);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*outstr)...) over kmalloc(sizeof(struct ustr)...)
#65: FILE: fs/udf/super.c:914:
+	outstr = kmalloc(sizeof(struct ustr), GFP_NOFS);

CHECK:CAMELCASE: Avoid CamelCase: <volIdent>
#85: FILE: fs/udf/super.c:937:
+	if (!udf_build_ustr(instr, pvoldesc->volIdent, 32))

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <udf_CS0toUTF8>
#86: FILE: fs/udf/super.c:938:
+		if (udf_CS0toUTF8(outstr, instr)) {

CHECK:CAMELCASE: Avoid CamelCase: <volSetIdent>
#96: FILE: fs/udf/super.c:945:
+	if (!udf_build_ustr(instr, pvoldesc->volSetIdent, 128))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000203442.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 0 warnings, 5 checks, 59 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000203442.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
