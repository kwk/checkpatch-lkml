WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#39: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#44: FILE: include/linux/lsm_audit.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#69: FILE: include/linux/lsm_audit.h:26:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#80: FILE: include/linux/lsm_audit.h:37:
+^Iunion ^I{$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct audit_buffer *' should also have an identifier name
#134: FILE: include/linux/lsm_audit.h:91:
+	void (*lsm_pre_audit)(struct audit_buffer *, void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#134: FILE: include/linux/lsm_audit.h:91:
+	void (*lsm_pre_audit)(struct audit_buffer *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct audit_buffer *' should also have an identifier name
#135: FILE: include/linux/lsm_audit.h:92:
+	void (*lsm_post_audit)(struct audit_buffer *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#135: FILE: include/linux/lsm_audit.h:92:
+	void (*lsm_post_audit)(struct audit_buffer *, void *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#142: FILE: include/linux/lsm_audit.h:99:
+int ipv4_skb_to_auditdata(struct sk_buff *skb,
+		struct common_audit_data *ad, u8 *proto);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#145: FILE: include/linux/lsm_audit.h:102:
+int ipv6_skb_to_auditdata(struct sk_buff *skb,
+		struct common_audit_data *ad, u8 *proto);

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_d' - possible side-effects?
#148: FILE: include/linux/lsm_audit.h:105:
+#define COMMON_AUDIT_DATA_INIT(_d, _t) \
+	{ memset((_d), 0, sizeof(struct common_audit_data)); \
+	 (_d)->type = AVC_AUDIT_DATA_##_t; (_d)->function = __func__; }

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#174: FILE: security/lsm_audit.c:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#179: FILE: security/lsm_audit.c:6:
+ * ^I^I^IJames Morris <jmorris@redhat.com>$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#214: FILE: security/lsm_audit.c:41:
+int ipv4_skb_to_auditdata(struct sk_buff *skb,
+		struct common_audit_data *ad, u8 *proto)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ih"
#220: FILE: security/lsm_audit.c:47:
+	if (ih == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#235: FILE: security/lsm_audit.c:62:
+		struct tcphdr *th = tcp_hdr(skb);
+		if (th == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!th"
#235: FILE: security/lsm_audit.c:62:
+		if (th == NULL)

WARNING:LINE_SPACING: Missing a blank line after declarations
#244: FILE: security/lsm_audit.c:71:
+		struct udphdr *uh = udp_hdr(skb);
+		if (uh == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!uh"
#244: FILE: security/lsm_audit.c:71:
+		if (uh == NULL)

WARNING:LINE_SPACING: Missing a blank line after declarations
#253: FILE: security/lsm_audit.c:80:
+		struct dccp_hdr *dh = dccp_hdr(skb);
+		if (dh == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dh"
#253: FILE: security/lsm_audit.c:80:
+		if (dh == NULL)

WARNING:LINE_SPACING: Missing a blank line after declarations
#262: FILE: security/lsm_audit.c:89:
+		struct sctphdr *sh = sctp_hdr(skb);
+		if (sh == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sh"
#262: FILE: security/lsm_audit.c:89:
+		if (sh == NULL)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#273: FILE: security/lsm_audit.c:100:
+}
+#if defined(CONFIG_IPV6) || defined(CONFIG_IPV6_MODULE)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#283: FILE: security/lsm_audit.c:110:
+int ipv6_skb_to_auditdata(struct sk_buff *skb,
+		struct common_audit_data *ad, u8 *proto)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ip6"
#290: FILE: security/lsm_audit.c:117:
+	if (ip6 == NULL)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#296: FILE: security/lsm_audit.c:123:
+	 * skip them */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!th"
#310: FILE: security/lsm_audit.c:137:
+		if (th == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!uh"
#321: FILE: security/lsm_audit.c:148:
+		if (uh == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dh"
#332: FILE: security/lsm_audit.c:159:
+		if (dh == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sh"
#343: FILE: security/lsm_audit.c:170:
+		if (sh == NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#356: FILE: security/lsm_audit.c:183:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#358: FILE: security/lsm_audit.c:185:
+static inline void avc_print_ipv6_addr(struct audit_buffer *ab,
+			struct in6_addr *addr, __be16 port,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#368: FILE: security/lsm_audit.c:195:
+static inline void avc_print_ipv4_addr(struct audit_buffer *ab, __be32 addr,
+			__be16 port, char *name1, char *name2)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#382: FILE: security/lsm_audit.c:209:
+static void dump_common_audit_data(struct audit_buffer *ab,
+				 struct common_audit_data *a)

WARNING:LINE_SPACING: Missing a blank line after declarations
#404: FILE: security/lsm_audit.c:231:
+			struct dentry *dentry = a->u.fs.path.dentry;
+			if (a->u.fs.path.mnt) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#409: FILE: security/lsm_audit.c:236:
+				audit_log_untrustedstring(ab,
+						 dentry->d_name.name);

WARNING:LINE_SPACING: Missing a blank line after declarations
#414: FILE: security/lsm_audit.c:241:
+			struct dentry *dentry;
+			inode = a->u.fs.inode;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#419: FILE: security/lsm_audit.c:246:
+				audit_log_untrustedstring(ab,
+						 dentry->d_name.name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#425: FILE: security/lsm_audit.c:252:
+			audit_log_format(ab, " dev=%s ino=%lu",
+					inode->i_sb->s_id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#447: FILE: security/lsm_audit.c:274:
+				avc_print_ipv4_addr(ab, inet->rcv_saddr,
+						inet->sport,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#450: FILE: security/lsm_audit.c:277:
+				avc_print_ipv4_addr(ab, inet->daddr,
+						inet->dport,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#459: FILE: security/lsm_audit.c:286:
+				avc_print_ipv6_addr(ab, &inet6->rcv_saddr,
+						inet->sport,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#462: FILE: security/lsm_audit.c:289:
+				avc_print_ipv6_addr(ab, &inet6->daddr,
+						inet->dport,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#474: FILE: security/lsm_audit.c:301:
+					audit_log_d_path(ab, "path=",
+							&path);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#479: FILE: security/lsm_audit.c:306:
+				len = u->addr->len-sizeof(short);
 				                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#493: FILE: security/lsm_audit.c:320:
+			avc_print_ipv4_addr(ab, a->u.net.v4info.saddr,
+						a->u.net.sport,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#496: FILE: security/lsm_audit.c:323:
+			avc_print_ipv4_addr(ab, a->u.net.v4info.daddr,
+						a->u.net.dport,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#501: FILE: security/lsm_audit.c:328:
+			avc_print_ipv6_addr(ab, &a->u.net.v6info.saddr,
+						a->u.net.sport,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#504: FILE: security/lsm_audit.c:331:
+			avc_print_ipv6_addr(ab, &a->u.net.v6info.daddr,
+						a->u.net.dport,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#513: FILE: security/lsm_audit.c:340:
+			dev = dev_get_by_index(&init_net,
+					a->u.net.netif);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#516: FILE: security/lsm_audit.c:343:
+				audit_log_format(ab, " netif=%s",
+						dev->name);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!a"
#544: FILE: security/lsm_audit.c:371:
+	if (a == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ab"
#549: FILE: security/lsm_audit.c:376:
+	if (ab == NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#563: FILE: security/lsm_audit.c:390:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000144060.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 16 warnings, 39 checks, 509 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000144060.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
