WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#62: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#67: FILE: drivers/usb/core/otg.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#68: FILE: drivers/usb/core/otg.c:2:
+ * drivers/usb/core/otg.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#95: FILE: drivers/usb/core/otg.c:29:
+static struct usb_device_id whitelist_table [] = {

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#96: FILE: drivers/usb/core/otg.c:30:
+static struct usb_device_id whitelist_table [] = {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#117: FILE: drivers/usb/core/otg.c:51:
+#if	defined(CONFIG_USB_TEST) || defined(CONFIG_USB_TEST_MODULE)

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#134: FILE: drivers/usb/core/otg.c:68:
+	if ((le16_to_cpu(dev->descriptor.idVendor) == 0x1a0a &&

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#135: FILE: drivers/usb/core/otg.c:69:
+	     le16_to_cpu(dev->descriptor.idProduct) == 0xbadd))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#151: FILE: drivers/usb/core/otg.c:85:
+		/* No need to test id->bcdDevice_lo != 0, since 0 is never
+		   greater than any unsigned number. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#151: FILE: drivers/usb/core/otg.c:85:
+		   greater than any unsigned number. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id->bcdDevice_lo > le16_to_cpu(dev->descriptor.bcdDevice)'
#152: FILE: drivers/usb/core/otg.c:86:
+		if ((id->match_flags & USB_DEVICE_ID_MATCH_DEV_LO) &&
+		    (id->bcdDevice_lo > le16_to_cpu(dev->descriptor.bcdDevice)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:CAMELCASE: Avoid CamelCase: <bcdDevice_lo>
#153: FILE: drivers/usb/core/otg.c:87:
+		    (id->bcdDevice_lo > le16_to_cpu(dev->descriptor.bcdDevice)))

CHECK:CAMELCASE: Avoid CamelCase: <bcdDevice>
#153: FILE: drivers/usb/core/otg.c:87:
+		    (id->bcdDevice_lo > le16_to_cpu(dev->descriptor.bcdDevice)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id->bcdDevice_hi < le16_to_cpu(dev->descriptor.bcdDevice)'
#156: FILE: drivers/usb/core/otg.c:90:
+		if ((id->match_flags & USB_DEVICE_ID_MATCH_DEV_HI) &&
+		    (id->bcdDevice_hi < le16_to_cpu(dev->descriptor.bcdDevice)))

CHECK:CAMELCASE: Avoid CamelCase: <bcdDevice_hi>
#157: FILE: drivers/usb/core/otg.c:91:
+		    (id->bcdDevice_hi < le16_to_cpu(dev->descriptor.bcdDevice)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id->bDeviceClass != dev->descriptor.bDeviceClass'
#160: FILE: drivers/usb/core/otg.c:94:
+		if ((id->match_flags & USB_DEVICE_ID_MATCH_DEV_CLASS) &&
+		    (id->bDeviceClass != dev->descriptor.bDeviceClass))

CHECK:CAMELCASE: Avoid CamelCase: <bDeviceClass>
#161: FILE: drivers/usb/core/otg.c:95:
+		    (id->bDeviceClass != dev->descriptor.bDeviceClass))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id->bDeviceSubClass!= dev->descriptor.bDeviceSubClass'
#164: FILE: drivers/usb/core/otg.c:98:
+		if ((id->match_flags & USB_DEVICE_ID_MATCH_DEV_SUBCLASS) &&
+		    (id->bDeviceSubClass!= dev->descriptor.bDeviceSubClass))

ERROR:SPACING: spaces required around that '!=' (ctx:VxW)
#165: FILE: drivers/usb/core/otg.c:99:
+		    (id->bDeviceSubClass!= dev->descriptor.bDeviceSubClass))
 		                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <bDeviceSubClass>
#165: FILE: drivers/usb/core/otg.c:99:
+		    (id->bDeviceSubClass!= dev->descriptor.bDeviceSubClass))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id->bDeviceProtocol != dev->descriptor.bDeviceProtocol'
#168: FILE: drivers/usb/core/otg.c:102:
+		if ((id->match_flags & USB_DEVICE_ID_MATCH_DEV_PROTOCOL) &&
+		    (id->bDeviceProtocol != dev->descriptor.bDeviceProtocol))

CHECK:CAMELCASE: Avoid CamelCase: <bDeviceProtocol>
#169: FILE: drivers/usb/core/otg.c:103:
+		    (id->bDeviceProtocol != dev->descriptor.bDeviceProtocol))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#177: FILE: drivers/usb/core/otg.c:111:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#291: FILE: drivers/usb/core/otg_whitelist.h:13:
+extern int is_targeted(struct usb_device *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000334320.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 6 warnings, 16 checks, 239 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000334320.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
