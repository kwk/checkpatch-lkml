WARNING:TYPO_SPELLING: 'uncessarily' may be misspelled - perhaps 'unnecessarily'?
#57: 
1. Optimizations to ensure we don't uncessarily get res_counter values
                                    ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#71: 
This patch introduces a RB-Tree for storing memory cgroups that are over their

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: include/linux/res_counter.h:132:
+void res_counter_uncharge(struct res_counter *counter, unsigned long val,
+				bool *was_soft_limit_excess);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#146: FILE: kernel/res_counter.c:59:
+		if (soft_limit_fail_at &&
+			!res_counter_soft_limit_check_locked(c))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#157: FILE: kernel/res_counter.c:89:
+void res_counter_uncharge(struct res_counter *counter, unsigned long val,
+				bool *was_soft_limit_excess)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: mm/memcontrol.c:87:
+__mem_cgroup_stat_reset_safe(struct mem_cgroup_stat_cpu *stat,
+				enum mem_cgroup_stat_index idx)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#212: FILE: mm/memcontrol.c:94:
+__mem_cgroup_stat_read_local(struct mem_cgroup_stat_cpu *stat,
+				enum mem_cgroup_stat_index idx)

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#241: FILE: mm/memcontrol.c:161:
+	spinlock_t lock;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#298: FILE: mm/memcontrol.c:295:
+mem_cgroup_insert_exceeded(struct mem_cgroup *mem,
+				struct mem_cgroup_per_zone *mz,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#313: FILE: mm/memcontrol.c:310:
+		mz_node = rb_entry(parent, struct mem_cgroup_per_zone,
+					tree_node);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#331: FILE: mm/memcontrol.c:328:
+mem_cgroup_remove_exceeded(struct mem_cgroup *mem,
+				struct mem_cgroup_per_zone *mz,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#462: FILE: mm/memcontrol.c:1179:
+		ret = res_counter_charge(&mem->res, PAGE_SIZE, &fail_res,
+						&soft_fail_res);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#644: FILE: mm/memcontrol.c:1861:
+		ret = __mem_cgroup_try_charge(NULL, GFP_KERNEL, &mem, false,
+						page);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000097848.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 11 checks, 579 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000097848.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
