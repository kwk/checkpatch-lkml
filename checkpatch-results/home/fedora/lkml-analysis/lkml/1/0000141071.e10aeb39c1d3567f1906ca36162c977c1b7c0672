WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#50: FILE: drivers/block/drbd/drbd_bitmap.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#51: FILE: drivers/block/drbd/drbd_bitmap.c:2:
+/*
+   drbd_bitmap.c

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#71: FILE: drivers/block/drbd/drbd_bitmap.c:22:
+   the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:TYPO_SPELLING: 'convetion' may be misspelled - perhaps 'convention'?
#83: FILE: drivers/block/drbd/drbd_bitmap.c:34:
+ * convetion:
    ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#104: FILE: drivers/block/drbd/drbd_bitmap.c:55:
+	spinlock_t bm_lock;

WARNING:LINE_SPACING: Missing a blank line after declarations
#142: FILE: drivers/block/drbd/drbd_bitmap.c:93:
+	struct drbd_bitmap *b = mdev->bitmap;
+	if (!__ratelimit(&drbd_ratelimit_state))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'asender' may be misspelled - perhaps 'ascender'?
#146: FILE: drivers/block/drbd/drbd_bitmap.c:97:
+	    current == mdev->asender.task  ? "asender"  :
 	                     ^^^^^^^

WARNING:TYPO_SPELLING: 'asender' may be misspelled - perhaps 'ascender'?
#146: FILE: drivers/block/drbd/drbd_bitmap.c:97:
+	    current == mdev->asender.task  ? "asender"  :
 	                                      ^^^^^^^

WARNING:TYPO_SPELLING: 'asender' may be misspelled - perhaps 'ascender'?
#150: FILE: drivers/block/drbd/drbd_bitmap.c:101:
+	    b->bm_task == mdev->asender.task  ? "asender"  :
 	                        ^^^^^^^

WARNING:TYPO_SPELLING: 'asender' may be misspelled - perhaps 'ascender'?
#150: FILE: drivers/block/drbd/drbd_bitmap.c:101:
+	    b->bm_task == mdev->asender.task  ? "asender"  :
 	                                         ^^^^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'drbd_bm_lock', this function's name, in a string
#160: FILE: drivers/block/drbd/drbd_bitmap.c:111:
+		ERR("FIXME no bitmap in drbd_bm_lock!?\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:TYPO_SPELLING: 'asender' may be misspelled - perhaps 'ascender'?
#169: FILE: drivers/block/drbd/drbd_bitmap.c:120:
+		    current == mdev->asender.task  ? "asender"  :
 		                     ^^^^^^^

WARNING:TYPO_SPELLING: 'asender' may be misspelled - perhaps 'ascender'?
#169: FILE: drivers/block/drbd/drbd_bitmap.c:120:
+		    current == mdev->asender.task  ? "asender"  :
 		                                      ^^^^^^^

WARNING:TYPO_SPELLING: 'asender' may be misspelled - perhaps 'ascender'?
#173: FILE: drivers/block/drbd/drbd_bitmap.c:124:
+		    b->bm_task == mdev->asender.task  ? "asender"  :
 		                        ^^^^^^^

WARNING:TYPO_SPELLING: 'asender' may be misspelled - perhaps 'ascender'?
#173: FILE: drivers/block/drbd/drbd_bitmap.c:124:
+		    b->bm_task == mdev->asender.task  ? "asender"  :
 		                                         ^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#187: FILE: drivers/block/drbd/drbd_bitmap.c:138:
+	struct drbd_bitmap *b = mdev->bitmap;
+	if (!b) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'drbd_bm_unlock', this function's name, in a string
#188: FILE: drivers/block/drbd/drbd_bitmap.c:139:
+		ERR("FIXME no bitmap in drbd_bm_unlock!?\n");

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#201: FILE: drivers/block/drbd/drbd_bitmap.c:152:
+STATIC unsigned long *__bm_map_paddr(struct drbd_bitmap *b, unsigned long offset, const enum km_type km)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#208: FILE: drivers/block/drbd/drbd_bitmap.c:159:
+	BUG_ON(page_nr >= b->bm_number_of_pages);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: No space is necessary after a cast
#211: FILE: drivers/block/drbd/drbd_bitmap.c:162:
+	return (unsigned long *) kmap_atomic(page, km);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#214: FILE: drivers/block/drbd/drbd_bitmap.c:165:
+unsigned long * bm_map_paddr(struct drbd_bitmap *b, unsigned long offset)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#230: FILE: drivers/block/drbd/drbd_bitmap.c:181:
+#define S2W(s)	((s)<<(BM_EXT_SIZE_B-BM_BLOCK_SIZE_B-LN2_BPL))
               	    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#230: FILE: drivers/block/drbd/drbd_bitmap.c:181:
+#define S2W(s)	((s)<<(BM_EXT_SIZE_B-BM_BLOCK_SIZE_B-LN2_BPL))
               	                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#230: FILE: drivers/block/drbd/drbd_bitmap.c:181:
+#define S2W(s)	((s)<<(BM_EXT_SIZE_B-BM_BLOCK_SIZE_B-LN2_BPL))
               	                                    ^

WARNING:TYPO_SPELLING: 'optimze' may be misspelled - perhaps 'optimize'?
#234: FILE: drivers/block/drbd/drbd_bitmap.c:185:
+ hm, well, Philipp thinks gcc might not optimze the % into & (... - 1)
                                         ^^^^^^^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#237: FILE: drivers/block/drbd/drbd_bitmap.c:188:
+#define MLPP(X) ((X) & ((PAGE_SIZE/sizeof(long))-1))
                                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#237: FILE: drivers/block/drbd/drbd_bitmap.c:188:
+#define MLPP(X) ((X) & ((PAGE_SIZE/sizeof(long))-1))
                                                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#240: FILE: drivers/block/drbd/drbd_bitmap.c:191:
+#define LWPP (PAGE_SIZE/sizeof(long))
                        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#251: FILE: drivers/block/drbd/drbd_bitmap.c:202:
+	unsigned long i;
+	if (!pages)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#256: FILE: drivers/block/drbd/drbd_bitmap.c:207:
+			printk(KERN_ALERT "drbd: bm_free_pages tried to free "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'bm_free_pages', this function's name, in a string
#256: FILE: drivers/block/drbd/drbd_bitmap.c:207:
+			printk(KERN_ALERT "drbd: bm_free_pages tried to free "

WARNING:SPLIT_STRING: quoted string split across lines
#257: FILE: drivers/block/drbd/drbd_bitmap.c:208:
+			printk(KERN_ALERT "drbd: bm_free_pages tried to free "
+					  "a NULL pointer; i=%lu n=%lu\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#270: FILE: drivers/block/drbd/drbd_bitmap.c:221:
+STATIC struct page **bm_realloc_pages(struct page **old_pages,
+				       unsigned long have,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#276: FILE: drivers/block/drbd/drbd_bitmap.c:227:
+	BUG_ON(have == 0 && old_pages != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "old_pages"
#276: FILE: drivers/block/drbd/drbd_bitmap.c:227:
+	BUG_ON(have == 0 && old_pages != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#277: FILE: drivers/block/drbd/drbd_bitmap.c:228:
+	BUG_ON(have != 0 && old_pages == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!old_pages"
#277: FILE: drivers/block/drbd/drbd_bitmap.c:228:
+	BUG_ON(have != 0 && old_pages == NULL);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#299: FILE: drivers/block/drbd/drbd_bitmap.c:250:
+	bytes = sizeof(struct page *)*want;
 	                             ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#321: FILE: drivers/block/drbd/drbd_bitmap.c:272:
+		/* NOT HERE, we are outside the spinlock!
+		bm_free_pages(old_pages + want, have - want);

WARNING:LINE_SPACING: Missing a blank line after declarations
#335: FILE: drivers/block/drbd/drbd_bitmap.c:286:
+	struct drbd_bitmap *b = mdev->bitmap;
+	WARN_ON(b != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "b"
#335: FILE: drivers/block/drbd/drbd_bitmap.c:286:
+	WARN_ON(b != NULL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*b)...) over kzalloc(sizeof(struct drbd_bitmap)...)
#336: FILE: drivers/block/drbd/drbd_bitmap.c:287:
+	b = kzalloc(sizeof(struct drbd_bitmap), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#358: FILE: drivers/block/drbd/drbd_bitmap.c:309:
+	ERR_IF (!mdev->bitmap) return;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#372: FILE: drivers/block/drbd/drbd_bitmap.c:323:
+	const unsigned long mask = (1UL << (b->bm_bits & (BITS_PER_LONG-1))) - 1;
 	                                                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#395: FILE: drivers/block/drbd/drbd_bitmap.c:346:
+	const unsigned long mask = (1UL << (b->bm_bits & (BITS_PER_LONG-1))) - 1;
 	                                                               ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#406: FILE: drivers/block/drbd/drbd_bitmap.c:357:
+	if (w < b->bm_words) {
+		*bm = ~(0UL);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#419: FILE: drivers/block/drbd/drbd_bitmap.c:370:
+		i = do_now = min_t(size_t, b->bm_words-offset, LWPP);
 		                                      ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#419: FILE: drivers/block/drbd/drbd_bitmap.c:370:
+		i = do_now = min_t(size_t, b->bm_words-offset, LWPP);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#475: FILE: drivers/block/drbd/drbd_bitmap.c:426:
+#define BM_SECTORS_PER_BIT (BM_BLOCK_SIZE/512)
                                          ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#480: FILE: drivers/block/drbd/drbd_bitmap.c:431:
+		printk(KERN_ALERT "drbd: bm_memset end > bm_words\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'bm_memset', this function's name, in a string
#480: FILE: drivers/block/drbd/drbd_bitmap.c:431:
+		printk(KERN_ALERT "drbd: bm_memset end > bm_words\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#488: FILE: drivers/block/drbd/drbd_bitmap.c:439:
+		if (bm+do_now > p_addr + LWPP) {
 		      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#489: FILE: drivers/block/drbd/drbd_bitmap.c:440:
+			printk(KERN_ALERT "drbd: BUG BUG BUG! p_addr:%p bm:%p do_now:%d\n",

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#501: FILE: drivers/block/drbd/drbd_bitmap.c:452:
+ * if neccessary, resize.
       ^^^^^^^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'drbd_bm_resize', this function's name, in a string
#519: FILE: drivers/block/drbd/drbd_bitmap.c:470:
+	INFO("drbd_bm_resize called with capacity == %llu\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#520: FILE: drivers/block/drbd/drbd_bitmap.c:471:
+	INFO("drbd_bm_resize called with capacity == %llu\n",
+			(unsigned long long)capacity);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#544: FILE: drivers/block/drbd/drbd_bitmap.c:495:
+	/* if we would use
+	   words = ALIGN(bits,BITS_PER_LONG) >> LN2_BPL;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#551: FILE: drivers/block/drbd/drbd_bitmap.c:502:
+		D_ASSERT((u64)bits <= (((u64)mdev->bc->md.md_size_sect-MD_BM_OFFSET) << 12));
 		                                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#556: FILE: drivers/block/drbd/drbd_bitmap.c:507:
+	want = ALIGN((words+1)*sizeof(long), PAGE_SIZE) >> PAGE_SHIFT;
 	                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#556: FILE: drivers/block/drbd/drbd_bitmap.c:507:
+	want = ALIGN((words+1)*sizeof(long), PAGE_SIZE) >> PAGE_SHIFT;
 	                      ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "b->bm_pages"
#559: FILE: drivers/block/drbd/drbd_bitmap.c:510:
+		D_ASSERT(b->bm_pages != NULL);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#589: FILE: drivers/block/drbd/drbd_bitmap.c:540:
+		bm_memset(b, owords, 0xff, words-owords);
 		                                ^

CHECK:CAMELCASE: Avoid CamelCase: <Negotiating>
#632: FILE: drivers/block/drbd/drbd_bitmap.c:583:
+	if (!inc_local_if_state(mdev, Negotiating))

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LINE_SPACING: Missing a blank line after declarations
#650: FILE: drivers/block/drbd/drbd_bitmap.c:601:
+	struct drbd_bitmap *b = mdev->bitmap;
+	ERR_IF(!b) return 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#659: FILE: drivers/block/drbd/drbd_bitmap.c:610:
+	struct drbd_bitmap *b = mdev->bitmap;
+	ERR_IF(!b) return 0;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#670: FILE: drivers/block/drbd/drbd_bitmap.c:621:
+void drbd_bm_merge_lel(struct drbd_conf *mdev, size_t offset, size_t number,
+			unsigned long *buffer)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#688: FILE: drivers/block/drbd/drbd_bitmap.c:639:
+		do_now = min_t(size_t, ALIGN(offset+1, LWPP), end) - offset;
 		                                   ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'offset >= b->bm_words'
#727: FILE: drivers/block/drbd/drbd_bitmap.c:678:
+	if ((offset >= b->bm_words) ||
+	    (end    >  b->bm_words) ||
+	    (number <= 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'end    >  b->bm_words'
#727: FILE: drivers/block/drbd/drbd_bitmap.c:678:
+	if ((offset >= b->bm_words) ||
+	    (end    >  b->bm_words) ||
+	    (number <= 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'number <= 0'
#727: FILE: drivers/block/drbd/drbd_bitmap.c:678:
+	if ((offset >= b->bm_words) ||
+	    (end    >  b->bm_words) ||
+	    (number <= 0))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#731: FILE: drivers/block/drbd/drbd_bitmap.c:682:
+		ERR("offset=%lu number=%lu bm_words=%lu\n",
+			(unsigned long)	offset,

CHECK:SPACING: No space is necessary after a cast
#731: FILE: drivers/block/drbd/drbd_bitmap.c:682:
+			(unsigned long)	offset,

CHECK:SPACING: No space is necessary after a cast
#732: FILE: drivers/block/drbd/drbd_bitmap.c:683:
+			(unsigned long)	number,

CHECK:SPACING: No space is necessary after a cast
#733: FILE: drivers/block/drbd/drbd_bitmap.c:684:
+			(unsigned long) b->bm_words);

CHECK:BRACES: Unbalanced braces around else statement
#734: FILE: drivers/block/drbd/drbd_bitmap.c:685:
+	else {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#736: FILE: drivers/block/drbd/drbd_bitmap.c:687:
+			do_now = min_t(size_t, ALIGN(offset+1, LWPP), end) - offset;
 			                                   ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#752: FILE: drivers/block/drbd/drbd_bitmap.c:703:
+	struct drbd_bitmap *b = mdev->bitmap;
+	ERR_IF(!b) return;

WARNING:LINE_SPACING: Missing a blank line after declarations
#766: FILE: drivers/block/drbd/drbd_bitmap.c:717:
+	struct drbd_bitmap *b = mdev->bitmap;
+	ERR_IF(!b) return;

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#778: FILE: drivers/block/drbd/drbd_bitmap.c:729:
+	int uptodate = bio_flagged(bio, BIO_UPTODATE);
 	    ^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#780: FILE: drivers/block/drbd/drbd_bitmap.c:731:
+
+

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#782: FILE: drivers/block/drbd/drbd_bitmap.c:733:
+	 * fail the request by clearing the uptodate flag,
 	                                    ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#784: FILE: drivers/block/drbd/drbd_bitmap.c:735:
+	 * do we want to WARN() on this? */

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#785: FILE: drivers/block/drbd/drbd_bitmap.c:736:
+	if (!error && !uptodate)
 	               ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#790: FILE: drivers/block/drbd/drbd_bitmap.c:741:
+		 * for now, set all bits, and flag MD_IO_ERROR */

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#799: FILE: drivers/block/drbd/drbd_bitmap.c:750:
+STATIC void bm_page_io_async(struct drbd_conf *mdev, struct drbd_bitmap *b, int page_nr, int rw) __must_hold(local)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#806: FILE: drivers/block/drbd/drbd_bitmap.c:757:
+	on_disk_sector += ((sector_t)page_nr) << (PAGE_SHIFT-9);
 	                                                    ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#809: FILE: drivers/block/drbd/drbd_bitmap.c:760:
+	 * flexible external meta data device */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#811: FILE: drivers/block/drbd/drbd_bitmap.c:762:
+	len = min_t(unsigned int, PAGE_SIZE,
+		(drbd_md_last_sector(mdev->bc) - on_disk_sector + 1)<<9);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#811: FILE: drivers/block/drbd/drbd_bitmap.c:762:
+		(drbd_md_last_sector(mdev->bc) - on_disk_sector + 1)<<9);
 		                                                    ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#836: FILE: drivers/block/drbd/drbd_bitmap.c:787:
+	 * the following is still not optimal, but better than nothing */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#851: FILE: drivers/block/drbd/drbd_bitmap.c:802:
+		for (bm = p_addr; bm < p_addr + PAGE_SIZE/sizeof(long); bm++)
 		                                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#877: FILE: drivers/block/drbd/drbd_bitmap.c:828:
+	num_pages = (bm_words*sizeof(long) + PAGE_SIZE-1) >> PAGE_SHIFT;
 	                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#877: FILE: drivers/block/drbd/drbd_bitmap.c:828:
+	num_pages = (bm_words*sizeof(long) + PAGE_SIZE-1) >> PAGE_SHIFT;
 	                                              ^

CHECK:CAMELCASE: Avoid CamelCase: <TraceTypeMDIO>
#894: FILE: drivers/block/drbd/drbd_bitmap.c:845:
+	MTRACE(TraceTypeMDIO, TraceLvlSummary,

CHECK:CAMELCASE: Avoid CamelCase: <TraceLvlSummary>
#894: FILE: drivers/block/drbd/drbd_bitmap.c:845:
+	MTRACE(TraceTypeMDIO, TraceLvlSummary,

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#913: FILE: drivers/block/drbd/drbd_bitmap.c:864:
+		/* just read, if neccessary adjust endianness */
 		                 ^^^^^^^^^^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#921: FILE: drivers/block/drbd/drbd_bitmap.c:872:
+	     ppsize(ppb, now << (BM_BLOCK_SIZE_B-10)), now);
 	                                        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#970: FILE: drivers/block/drbd/drbd_bitmap.c:921:
+		int i;
+		err = -EIO;

WARNING:SPLIT_STRING: quoted string split across lines
#972: FILE: drivers/block/drbd/drbd_bitmap.c:923:
+		ERR("IO ERROR writing bitmap sector %lu "
+		    "(meta-disk sector %llus)\n",

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#977: FILE: drivers/block/drbd/drbd_bitmap.c:928:
+			drbd_bm_ALe_set_all(mdev, enr*AL_EXT_PER_BM_SECT+i);
 			                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#977: FILE: drivers/block/drbd/drbd_bitmap.c:928:
+			drbd_bm_ALe_set_all(mdev, enr*AL_EXT_PER_BM_SECT+i);
 			                                                ^

CHECK:CAMELCASE: Avoid CamelCase: <drbd_bm_ALe_set_all>
#977: FILE: drivers/block/drbd/drbd_bitmap.c:928:
+			drbd_bm_ALe_set_all(mdev, enr*AL_EXT_PER_BM_SECT+i);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#990: FILE: drivers/block/drbd/drbd_bitmap.c:941:
+#define BPP_MASK ((1UL << (PAGE_SHIFT+3)) - 1)
                                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#992: FILE: drivers/block/drbd/drbd_bitmap.c:943:
+static unsigned long __bm_find_next(struct drbd_conf *mdev, unsigned long bm_fo,
+	const int find_zero_bit, const enum km_type km)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1004: FILE: drivers/block/drbd/drbd_bitmap.c:955:
+			unsigned long offset;
+			bit_offset = bm_fo & ~BPP_MASK; /* bit offset of the page */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1009: FILE: drivers/block/drbd/drbd_bitmap.c:960:
+				i = find_next_zero_bit(p_addr, PAGE_SIZE*8, bm_fo & BPP_MASK);
 				                                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1011: FILE: drivers/block/drbd/drbd_bitmap.c:962:
+				i = find_next_bit(p_addr, PAGE_SIZE*8, bm_fo & BPP_MASK);
 				                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1014: FILE: drivers/block/drbd/drbd_bitmap.c:965:
+			if (i < PAGE_SIZE*8) {
 			                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1020: FILE: drivers/block/drbd/drbd_bitmap.c:971:
+			bm_fo = bit_offset + PAGE_SIZE*8;
 			                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1029: FILE: drivers/block/drbd/drbd_bitmap.c:980:
+static unsigned long bm_find_next(struct drbd_conf *mdev,
+	unsigned long bm_fo, const int find_zero_bit)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1052: FILE: drivers/block/drbd/drbd_bitmap.c:1003:
+#if 0

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1061: FILE: drivers/block/drbd/drbd_bitmap.c:1012:
+ * you must take drbd_bm_lock() first */

WARNING:TYPO_SPELLING: 'positiv' may be misspelled - perhaps 'positive'?
#1075: FILE: drivers/block/drbd/drbd_bitmap.c:1026:
+ * for val != 0, we change 0 -> 1, return code positiv
                                                ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1078: FILE: drivers/block/drbd/drbd_bitmap.c:1029:
+ * Must hold bitmap lock already. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1081: FILE: drivers/block/drbd/drbd_bitmap.c:1032:
+int __bm_change_bits_to(struct drbd_conf *mdev, const unsigned long s,
+	const unsigned long e, int val, const enum km_type km)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1090: FILE: drivers/block/drbd/drbd_bitmap.c:1041:
+		ERR_IF (bitnr >= b->bm_bits) {

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1093: FILE: drivers/block/drbd/drbd_bitmap.c:1044:
+			unsigned long offset = bitnr>>LN2_BPL;
 			                            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1095: FILE: drivers/block/drbd/drbd_bitmap.c:1046:
+			unsigned long page_nr = offset >> (PAGE_SHIFT - LN2_BPL + 3);
+			if (page_nr != last_page_nr) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1102: FILE: drivers/block/drbd/drbd_bitmap.c:1053:
+				c += (0 == __test_and_set_bit(bitnr & BPP_MASK, p_addr));

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1104: FILE: drivers/block/drbd/drbd_bitmap.c:1055:
+				c -= (0 != __test_and_clear_bit(bitnr & BPP_MASK, p_addr));

WARNING:TYPO_SPELLING: 'positiv' may be misspelled - perhaps 'positive'?
#1114: FILE: drivers/block/drbd/drbd_bitmap.c:1065:
+ * for val != 0, we change 0 -> 1, return code positiv
                                                ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1116: FILE: drivers/block/drbd/drbd_bitmap.c:1067:
+ * wants bitnr, not sector */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1118: FILE: drivers/block/drbd/drbd_bitmap.c:1069:
+int bm_change_bits_to(struct drbd_conf *mdev, const unsigned long s,
+	const unsigned long e, int val)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1150: FILE: drivers/block/drbd/drbd_bitmap.c:1101:
+ * you must first drbd_bm_lock(). */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1154: FILE: drivers/block/drbd/drbd_bitmap.c:1105:
+       return __bm_change_bits_to(mdev, s, e, 1, KM_USER0);$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1178: FILE: drivers/block/drbd/drbd_bitmap.c:1129:
+		unsigned long offset = bitnr>>LN2_BPL;
 		                            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1179: FILE: drivers/block/drbd/drbd_bitmap.c:1130:
+		unsigned long offset = bitnr>>LN2_BPL;
+		p_addr = bm_map_paddr(b, offset);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1206: FILE: drivers/block/drbd/drbd_bitmap.c:1157:
+	 * local read there (no bitmap probably implies no disk) */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1219: FILE: drivers/block/drbd/drbd_bitmap.c:1170:
+		ERR_IF (bitnr >= b->bm_bits) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1222: FILE: drivers/block/drbd/drbd_bitmap.c:1173:
+			c += (0 != test_bit(bitnr - (page_nr << (PAGE_SHIFT+3)), p_addr));
 			                                                   ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1222: FILE: drivers/block/drbd/drbd_bitmap.c:1173:
+			c += (0 != test_bit(bitnr - (page_nr << (PAGE_SHIFT+3)), p_addr));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1231: FILE: drivers/block/drbd/drbd_bitmap.c:1182:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1261: FILE: drivers/block/drbd/drbd_bitmap.c:1212:
+	e = min((size_t)S2W(enr+1), b->bm_words);
 	                       ^

WARNING:MINMAX: min() should probably be min_t(size_t, S2W(enr+1), b->bm_words)
#1261: FILE: drivers/block/drbd/drbd_bitmap.c:1212:
+	e = min((size_t)S2W(enr+1), b->bm_words);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1264: FILE: drivers/block/drbd/drbd_bitmap.c:1215:
+		int n = e-s;
 		         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1265: FILE: drivers/block/drbd/drbd_bitmap.c:1216:
+		int n = e-s;
+		p_addr = bm_map_paddr(b, s);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'drbd_bm_e_weight', this function's name, in a string
#1271: FILE: drivers/block/drbd/drbd_bitmap.c:1222:
+		ERR("start offset (%d) too large in drbd_bm_e_weight\n", s);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1284: FILE: drivers/block/drbd/drbd_bitmap.c:1235:
+	int count, s, e, i, do_now;
+	ERR_IF(!b) return 0;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1295: FILE: drivers/block/drbd/drbd_bitmap.c:1246:
+	D_ASSERT((e-1) >> (PAGE_SHIFT - LN2_BPL + 3)
 	           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1299: FILE: drivers/block/drbd/drbd_bitmap.c:1250:
+		i = do_now = e-s;
 		              ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1299: FILE: drivers/block/drbd/drbd_bitmap.c:1250:
+		i = do_now = e-s;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1308: FILE: drivers/block/drbd/drbd_bitmap.c:1259:
+		b->bm_set += do_now*BITS_PER_LONG - count;
 		                   ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'drbd_bm_ALe_set_all', this function's name, in a string
#1312: FILE: drivers/block/drbd/drbd_bitmap.c:1263:
+		ERR("start offset (%d) too large in drbd_bm_ALe_set_all\n", s);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000141071.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 71 warnings, 70 checks, 1268 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000141071.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
