WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
One of the things core_pattern processes might do is interrogate the status of a

WARNING:REPEATED_WORD: Possible repeated word: 'that'
#37: 
crashing process via its /proc/pid directory.  To ensure that that directory is

WARNING:TYPO_SPELLING: 'usefull' may be misspelled - perhaps 'useful'?
#84: FILE: Documentation/sysctl/kernel.txt:132:
+occasionally usefull for the collecting application to gather data about the
              ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'core_pipe_limit < dump_count'
#132: FILE: fs/exec.c:1832:
+		if (core_pipe_limit && (core_pipe_limit < dump_count)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#133: FILE: fs/exec.c:1833:
+			printk(KERN_WARNING "Pid %d(%s) over core_pipe_limit\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#134: FILE: fs/exec.c:1834:
+			printk(KERN_WARNING "Pid %d(%s) over core_pipe_limit\n",
+				     task_tgid_vnr(current), current->comm);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#135: FILE: fs/exec.c:1835:
+			printk(KERN_WARNING "Skipping core dump\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: fs/exec.c:1842:
+ ^I^Iif (call_usermodehelper_pipe(helper_argv[0], helper_argv, NULL,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#144: FILE: fs/exec.c:1842:
+ ^I^Iif (call_usermodehelper_pipe(helper_argv[0], helper_argv, NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: fs/exec.c:1842:
+ ^I^Iif (call_usermodehelper_pipe(helper_argv[0], helper_argv, NULL,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#145: FILE: fs/exec.c:1843:
+ 		if (call_usermodehelper_pipe(helper_argv[0], helper_argv, NULL,
+				&file, &pid) < 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: fs/exec.c:1846:
+ ^I^I^Igoto fail_dropcount;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#149: FILE: fs/exec.c:1846:
+ ^I^I^Igoto fail_dropcount;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: fs/exec.c:1846:
+ ^I^I^Igoto fail_dropcount;$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#214: FILE: include/linux/kmod.h:101:
+				    struct file **filp, pid_t *pid);
 				                  ^^^^

CHECK:BRACES: Unbalanced braces around else statement
#235: FILE: kernel/kmod.c:255:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#275: FILE: kernel/kmod.c:506:
+			     struct file **filp, pid_t *pid)
 			                   ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#280: FILE: kernel/kmod.c:510:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#315: FILE: kernel/sysctl.c:78:
+extern unsigned int core_pipe_limit;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000104044.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 12 warnings, 4 checks, 228 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000104044.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
