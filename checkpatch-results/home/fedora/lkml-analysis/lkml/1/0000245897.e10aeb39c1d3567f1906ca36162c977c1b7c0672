WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#38: FILE: Makefile:4:
+EXTRAVERSION = .14
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#119: FILE: arch/sparc64/kernel/ldc.c:29:
 static char version[] __devinitdata =

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lp->state != LDC_STATE_INIT'
#132: FILE: arch/sparc64/kernel/ldc.c:1238:
+	if (!name ||
+	    (lp->state != LDC_STATE_INIT))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#202: FILE: arch/sparc64/kernel/time.c:888:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#315: FILE: drivers/ata/ahci.c:654:
+		msleep(10);

WARNING:LINE_SPACING: Missing a blank line after declarations
#332: FILE: drivers/ata/ata_generic.c:198:
+		int rc = pcim_enable_device(dev);
+		if (rc < 0)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#349: FILE: drivers/ata/pata_acpi.c:319:
+		int rc = pcim_enable_device(pdev);
+		if (rc < 0)

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be32 should be cpu_to_be32
#389: FILE: drivers/ide/ide-cd.c:1431:
+	case __constant_cpu_to_be32(512):

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be32 should be cpu_to_be32
#390: FILE: drivers/ide/ide-cd.c:1432:
+	case __constant_cpu_to_be32(1024):

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be32 should be cpu_to_be32
#391: FILE: drivers/ide/ide-cd.c:1433:
+	case __constant_cpu_to_be32(2048):

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be32 should be cpu_to_be32
#392: FILE: drivers/ide/ide-cd.c:1434:
+	case __constant_cpu_to_be32(4096):

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#395: FILE: drivers/ide/ide-cd.c:1437:
+		printk(KERN_ERR "%s: weird block size %u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#396: FILE: drivers/ide/ide-cd.c:1438:
+		printk(KERN_ERR "%s: weird block size %u\n",
+			drive->name, capbuf.blocklen);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#397: FILE: drivers/ide/ide-cd.c:1439:
+		printk(KERN_ERR "%s: default to 2kb block size\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#398: FILE: drivers/ide/ide-cd.c:1440:
+		printk(KERN_ERR "%s: default to 2kb block size\n",
+			drive->name);

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be32 should be cpu_to_be32
#399: FILE: drivers/ide/ide-cd.c:1441:
+		capbuf.blocklen = __constant_cpu_to_be32(2048);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#531: FILE: fs/dquot.c:593:
+			printk(KERN_ERR "VFS: cannot write quota structure on "

WARNING:SPLIT_STRING: quoted string split across lines
#532: FILE: fs/dquot.c:594:
+			printk(KERN_ERR "VFS: cannot write quota structure on "
+				"device %s (error %d). Quota may get out of "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#533: FILE: fs/dquot.c:595:
+				"device %s (error %d). Quota may get out of "
+				"sync!\n", dquot->dq_sb->s_id, ret);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#711: FILE: include/asm-arm/bitops.h:280:
+#define __fls(x) \
 	( __builtin_constant_p(x) ? constant_fls(x) : \
 	  ({ int __r; asm("clz\t%0, %1" : "=r"(__r) : "r"(x) : "cc"); 32-__r; }) )

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#742: FILE: include/asm-generic/vmlinux.lds.h:218:
+		*(.text.unlikely)
 		^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#760: FILE: include/asm-powerpc/pgtable-ppc64.h:320:
+       ^Iif ((pte_val(*ptep) & _PAGE_RW) == 0)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#760: FILE: include/asm-powerpc/pgtable-ppc64.h:320:
+       ^Iif ((pte_val(*ptep) & _PAGE_RW) == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#760: FILE: include/asm-powerpc/pgtable-ppc64.h:320:
+       ^Iif ((pte_val(*ptep) & _PAGE_RW) == 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#761: FILE: include/asm-powerpc/pgtable-ppc64.h:321:
+       ^I^Ireturn;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#761: FILE: include/asm-powerpc/pgtable-ppc64.h:321:
+       ^I^Ireturn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#761: FILE: include/asm-powerpc/pgtable-ppc64.h:321:
+       ^I^Ireturn;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000245897.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 20 warnings, 6 checks, 767 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000245897.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
