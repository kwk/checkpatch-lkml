WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#60: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:47:
+#define DPRINTK(fmt, args...) printk(KERN_DEBUG "%s: " fmt, __func__, ## args)

WARNING:LINE_SPACING: Missing a blank line after declarations
#78: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:181:
+	u32 fs_busfreq = 0;
+	node = of_find_node_by_type(NULL, "cpu");

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: arguments for function declarations should follow identifier
#97: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:200:
+unsigned int platform_get_pixel_format

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#106: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:209:
+	arch_monitor = ((*pixis_arch == 0x01) && (monitor_port == 0))? 0 : 1;
 	                                                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#125: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:228:
+	int i;
+	if (monitor_port == 2) {		/* dual link LVDS */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#126: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:229:
+		for (i = 0; i < 256*3; i++)
 		                   ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#136: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:239:
+	static const u8 bdcfg[] = {0xBD, 0xB5, 0xA5};
+	if (monitor_port < 3)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#160: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:263:
+	temp = 1000000000/pixclock;
 	                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#171: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:274:
+	pixval = speed_ccb/pixclock;
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#180: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:283:
+		temp = speed_ccb / ((pixval+i) + 1);
 		                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:285:
+		DPRINTK("DIU test pixval i= %d, pixval=%lu, temp freq. = %u\n",
+							i, pixval, temp);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'temp < minpixclock'
#183: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:286:
+		if ((temp < minpixclock) || (temp > maxpixclock))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'temp > maxpixclock'
#183: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:286:
+		if ((temp < minpixclock) || (temp > maxpixclock))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 18)
#186: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:289:
+		else if (abs(temp - pixclock) < err) {
+		  DPRINTK("Entered the else if block %d\n", i);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#189: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:292:
+			bestval = pixval+i;
 			                ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#230: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:333:
+		printk(KERN_ERR "fsl-diu: cannot allocate %lu bytes\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#231: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:334:
+		printk(KERN_ERR "fsl-diu: cannot allocate %lu bytes\n",
+			diu_size);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#235: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:338:
+	printk(KERN_INFO "%s: diu_mem=%p\n", __func__, diu_mem);

WARNING:TYPO_SPELLING: 'furture' may be misspelled - perhaps 'future'?
#245: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:348:
+ *	rheap and make the furture large allocation fail.
   	                   ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TABSTOP: Statements should start on a tabstop
#250: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:353:
+	 void *virt;

WARNING:TABSTOP: Statements should start on a tabstop
#256: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:359:
+	 if (virt) {

WARNING:TABSTOP: Statements should start on a tabstop
#259: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:362:
+	 }

WARNING:TABSTOP: Statements should start on a tabstop
#261: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:364:
+	 if (!diu_mem) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#262: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:365:
+		printk(KERN_INFO "%s: no diu_mem\n", __func__);

WARNING:TABSTOP: Statements should start on a tabstop
#264: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:367:
+	 }

WARNING:TABSTOP: Statements should start on a tabstop
#267: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:370:
+	 if (virt)

WARNING:TABSTOP: Statements should start on a tabstop
#272: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:375:
+	 return virt;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p >= diu_mem'
#283: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:386:
+	if ((p >= diu_mem) && (p < (diu_mem + diu_size))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#300: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:403:
+	printk(KERN_INFO "%s: diu_size=%lu\n", __func__, diu_size);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#304: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:407:
+}
+early_param("diufb", early_parse_diufb);

CHECK:BRACES: Unbalanced braces around else statement
#335: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:445:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#336: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:446:
+		printk(KERN_ERR "Err: "

WARNING:SPLIT_STRING: quoted string split across lines
#337: FILE: arch/powerpc/platforms/86xx/mpc8610_hpcd.c:447:
+		printk(KERN_ERR "Err: "
+				"can't find device node 'fsl,fpga-pixis'\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000308119.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 20 warnings, 12 checks, 294 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000308119.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
