WARNING:TYPO_SPELLING: 'architecure' may be misspelled - perhaps 'architecture'?
#17: 
Subject: Re: [PATCH 5/13] score - New architecure port to SunplusCT S+CORE
                                      ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'lastest' may be misspelled - perhaps 'latest'?
#30: 
linux/score lastest patch place at 
            ^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
http://www.sunplusct.com/images/linux-score-patch/linux-score-20090324.patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#41: FILE: arch/score/include/asm/setup.h:1:
+#ifndef _SCORE_SETUP_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:SPACING: exactly one space required after that #ifdef
#47: FILE: arch/score/include/asm/setup.h:7:
+#ifdef  __KERNEL__

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#48: FILE: arch/score/include/asm/setup.h:8:
+extern void setup_early_printk(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#50: FILE: arch/score/include/asm/setup.h:10:
+extern void handle_nmi(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#51: FILE: arch/score/include/asm/setup.h:11:
+extern void handle_adelinsn(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#52: FILE: arch/score/include/asm/setup.h:12:
+extern void handle_adedata(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#53: FILE: arch/score/include/asm/setup.h:13:
+extern void handle_ibe(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#54: FILE: arch/score/include/asm/setup.h:14:
+extern void handle_pel(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#55: FILE: arch/score/include/asm/setup.h:15:
+extern void handle_sys(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#56: FILE: arch/score/include/asm/setup.h:16:
+extern void handle_ccu(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#57: FILE: arch/score/include/asm/setup.h:17:
+extern void handle_ri(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#58: FILE: arch/score/include/asm/setup.h:18:
+extern void handle_tr(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#59: FILE: arch/score/include/asm/setup.h:19:
+extern void handle_ades(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#60: FILE: arch/score/include/asm/setup.h:20:
+extern void handle_cee(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#61: FILE: arch/score/include/asm/setup.h:21:
+extern void handle_cpe(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#62: FILE: arch/score/include/asm/setup.h:22:
+extern void handle_dve(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#63: FILE: arch/score/include/asm/setup.h:23:
+extern void handle_dbe(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#64: FILE: arch/score/include/asm/setup.h:24:
+extern void handle_reserved(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#65: FILE: arch/score/include/asm/setup.h:25:
+extern void handle_tlb_refill(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#66: FILE: arch/score/include/asm/setup.h:26:
+extern void handle_tlb_invaild(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#67: FILE: arch/score/include/asm/setup.h:27:
+extern void handle_mod(void);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#68: FILE: arch/score/include/asm/setup.h:28:
+extern void __devinit cpu_cache_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#68: FILE: arch/score/include/asm/setup.h:28:
+extern void __devinit cpu_cache_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#69: FILE: arch/score/include/asm/setup.h:29:
+extern void debug_exception_vector(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#70: FILE: arch/score/include/asm/setup.h:30:
+extern void general_exception_vector(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#82: FILE: arch/score/include/asm/shmbuf.h:1:
+#ifndef _ASM_SHMBUF_H

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: arch/score/include/asm/shmbuf.h:5:
+       struct ipc64_perm       shm_perm;       /* operation perms */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#87: FILE: arch/score/include/asm/shmbuf.h:6:
+       size_t                  shm_segsz;      /* size of segment (bytes) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: arch/score/include/asm/shmbuf.h:6:
+       size_t                  shm_segsz;      /* size of segment (bytes) $

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#88: FILE: arch/score/include/asm/shmbuf.h:6:
*/

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#89: FILE: arch/score/include/asm/shmbuf.h:7:
+       size_t                  shm_segsz;      /* size of segment (bytes) 
+       __kernel_time_t         shm_atime;      /* last attach time */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: arch/score/include/asm/shmbuf.h:8:
+       __kernel_time_t         shm_dtime;      /* last detach time */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: arch/score/include/asm/shmbuf.h:9:
+       __kernel_time_t         shm_ctime;      /* last change time */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: arch/score/include/asm/shmbuf.h:10:
+       __kernel_pid_t          shm_cpid;       /* pid of creator */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: arch/score/include/asm/shmbuf.h:11:
+       __kernel_pid_t          shm_lpid;       /* pid of last operator */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: arch/score/include/asm/shmbuf.h:12:
+       unsigned long           shm_nattch;     /* no. of current attaches $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: arch/score/include/asm/shmbuf.h:12:
+       unsigned long           shm_nattch;     /* no. of current attaches $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#96: FILE: arch/score/include/asm/shmbuf.h:13:
+       unsigned long           shm_nattch;     /* no. of current attaches 
+       unsigned long           __unused1;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#121: FILE: arch/score/include/asm/shmparam.h:1:
+#ifndef _ASM_SHMPARAM_H

ERROR:TRAILING_WHITESPACE: trailing whitespace
#125: FILE: arch/score/include/asm/shmparam.h:5:
+#define        SHMLBA                  0x40000         /* attach addr a $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#127: FILE: arch/score/include/asm/shmparam.h:6:
+#define        SHMLBA                  0x40000         /* attach addr a 
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#137: FILE: arch/score/include/asm/sigcontext.h:1:
+#ifndef _ASM_SIGCONTEXT_H

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: arch/score/include/asm/sigcontext.h:9:
+       unsigned int            sc_regmask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: arch/score/include/asm/sigcontext.h:10:
+       unsigned int            sc_psr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: arch/score/include/asm/sigcontext.h:11:
+       unsigned int            sc_condition;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: arch/score/include/asm/sigcontext.h:12:
+       unsigned long           sc_pc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: arch/score/include/asm/sigcontext.h:13:
+       unsigned long           sc_regs[32];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: arch/score/include/asm/sigcontext.h:14:
+       unsigned int            sc_ssflags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: arch/score/include/asm/sigcontext.h:15:
+       unsigned int            sc_mdceh;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: arch/score/include/asm/sigcontext.h:16:
+       unsigned int            sc_mdcel;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: arch/score/include/asm/sigcontext.h:17:
+       unsigned int            sc_ecr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: arch/score/include/asm/sigcontext.h:18:
+       unsigned long           sc_ema;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: arch/score/include/asm/sigcontext.h:19:
+       unsigned long           sc_sigset[4];$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#167: FILE: arch/score/include/asm/siginfo.h:1:
+#ifndef _ASM_SIGINFO_H

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#170: FILE: arch/score/include/asm/siginfo.h:4:
+#define __ARCH_SIGEV_PREAMBLE_SIZE (sizeof(long) + 2*sizeof(int))
                                                     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#171: FILE: arch/score/include/asm/siginfo.h:5:
+#undef __ARCH_SI_TRAPNO        /* exception code needs to fill this ... $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#173: FILE: arch/score/include/asm/siginfo.h:6:
+#undef __ARCH_SI_TRAPNO        /* exception code needs to fill this ... 
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#186: FILE: arch/score/include/asm/siginfo.h:19:
+typedef struct siginfo {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: arch/score/include/asm/siginfo.h:20:
+       int si_signo;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: arch/score/include/asm/siginfo.h:21:
+       int si_code;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: arch/score/include/asm/siginfo.h:22:
+       int si_errno;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: arch/score/include/asm/siginfo.h:23:
+       int __pad0[SI_MAX_SIZE / sizeof(int) - SI_PAD_SIZE - 3];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: arch/score/include/asm/siginfo.h:25:
+       union {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: arch/score/include/asm/siginfo.h:26:
+               int _pad[SI_PAD_SIZE];$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: arch/score/include/asm/siginfo.h:26:
+               int _pad[SI_PAD_SIZE];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: arch/score/include/asm/siginfo.h:28:
+               /* kill() */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#196: FILE: arch/score/include/asm/siginfo.h:29:
+               struct {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: arch/score/include/asm/siginfo.h:29:
+               struct {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: arch/score/include/asm/siginfo.h:30:
+                       pid_t _pid;             /* sender's pid */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: arch/score/include/asm/siginfo.h:30:
+                       pid_t _pid;             /* sender's pid */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: arch/score/include/asm/siginfo.h:31:
+                       __ARCH_SI_UID_T _uid;   /* sender's uid */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: arch/score/include/asm/siginfo.h:31:
+                       __ARCH_SI_UID_T _uid;   /* sender's uid */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: arch/score/include/asm/siginfo.h:32:
+               } _kill;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: arch/score/include/asm/siginfo.h:32:
+               } _kill;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: arch/score/include/asm/siginfo.h:34:
+               /* POSIX.1b timers */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: arch/score/include/asm/siginfo.h:35:
+               struct {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: arch/score/include/asm/siginfo.h:35:
+               struct {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: arch/score/include/asm/siginfo.h:36:
+                       timer_t _tid;           /* timer id */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: arch/score/include/asm/siginfo.h:36:
+                       timer_t _tid;           /* timer id */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: arch/score/include/asm/siginfo.h:37:
+                       int _overrun;           /* overrun count */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: arch/score/include/asm/siginfo.h:37:
+                       int _overrun;           /* overrun count */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: arch/score/include/asm/siginfo.h:38:
+                       char _pad[sizeof( __ARCH_SI_UID_T) - sizeof(int)];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: arch/score/include/asm/siginfo.h:38:
+                       char _pad[sizeof( __ARCH_SI_UID_T) - sizeof(int)];$

ERROR:SPACING: space prohibited after that open parenthesis '('
#205: FILE: arch/score/include/asm/siginfo.h:38:
+                       char _pad[sizeof( __ARCH_SI_UID_T) - sizeof(int)];

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: arch/score/include/asm/siginfo.h:39:
+                       sigval_t _sigval;       /* same as below */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: arch/score/include/asm/siginfo.h:39:
+                       sigval_t _sigval;       /* same as below */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#207: FILE: arch/score/include/asm/siginfo.h:40:
+                       int _sys_private;       /* not to be passed to $

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: arch/score/include/asm/siginfo.h:40:
+                       int _sys_private;       /* not to be passed to $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: arch/score/include/asm/siginfo.h:40:
+                       int _sys_private;       /* not to be passed to $

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: arch/score/include/asm/siginfo.h:41:
+               } _timer;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#209: FILE: arch/score/include/asm/siginfo.h:41:
+                       int _sys_private;       /* not to be passed to 
+               } _timer;

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: arch/score/include/asm/siginfo.h:43:
+               /* POSIX.1b signals */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: arch/score/include/asm/siginfo.h:44:
+               struct {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: arch/score/include/asm/siginfo.h:44:
+               struct {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: arch/score/include/asm/siginfo.h:45:
+                       pid_t _pid;             /* sender's pid */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: arch/score/include/asm/siginfo.h:45:
+                       pid_t _pid;             /* sender's pid */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: arch/score/include/asm/siginfo.h:46:
+                       __ARCH_SI_UID_T _uid;   /* sender's uid */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: arch/score/include/asm/siginfo.h:46:
+                       __ARCH_SI_UID_T _uid;   /* sender's uid */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: arch/score/include/asm/siginfo.h:47:
+                       sigval_t _sigval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: arch/score/include/asm/siginfo.h:47:
+                       sigval_t _sigval;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: arch/score/include/asm/siginfo.h:48:
+               } _rt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: arch/score/include/asm/siginfo.h:48:
+               } _rt;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: arch/score/include/asm/siginfo.h:50:
+               /* SIGCHLD */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: arch/score/include/asm/siginfo.h:51:
+               struct {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: arch/score/include/asm/siginfo.h:51:
+               struct {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: arch/score/include/asm/siginfo.h:52:
+                       pid_t _pid;             /* which child */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: arch/score/include/asm/siginfo.h:52:
+                       pid_t _pid;             /* which child */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: arch/score/include/asm/siginfo.h:53:
+                       __ARCH_SI_UID_T _uid;   /* sender's uid */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: arch/score/include/asm/siginfo.h:53:
+                       __ARCH_SI_UID_T _uid;   /* sender's uid */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: arch/score/include/asm/siginfo.h:54:
+                       int _status;            /* exit code */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: arch/score/include/asm/siginfo.h:54:
+                       int _status;            /* exit code */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: arch/score/include/asm/siginfo.h:55:
+                       clock_t _utime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: arch/score/include/asm/siginfo.h:55:
+                       clock_t _utime;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#224: FILE: arch/score/include/asm/siginfo.h:56:
+                       clock_t _stime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: arch/score/include/asm/siginfo.h:56:
+                       clock_t _stime;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: arch/score/include/asm/siginfo.h:57:
+               } _sigchld;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: arch/score/include/asm/siginfo.h:57:
+               } _sigchld;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: arch/score/include/asm/siginfo.h:59:
+               /* IRIX SIGCHLD */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#228: FILE: arch/score/include/asm/siginfo.h:60:
+               struct {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: arch/score/include/asm/siginfo.h:60:
+               struct {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: arch/score/include/asm/siginfo.h:61:
+                       pid_t _pid;             /* which child */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: arch/score/include/asm/siginfo.h:61:
+                       pid_t _pid;             /* which child */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: arch/score/include/asm/siginfo.h:62:
+                       clock_t _utime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: arch/score/include/asm/siginfo.h:62:
+                       clock_t _utime;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: arch/score/include/asm/siginfo.h:63:
+                       int _status;            /* exit code */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: arch/score/include/asm/siginfo.h:63:
+                       int _status;            /* exit code */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: arch/score/include/asm/siginfo.h:64:
+                       clock_t _stime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: arch/score/include/asm/siginfo.h:64:
+                       clock_t _stime;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: arch/score/include/asm/siginfo.h:65:
+               } _irix_sigchld;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: arch/score/include/asm/siginfo.h:65:
+               } _irix_sigchld;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: arch/score/include/asm/siginfo.h:67:
+               /* SIGILL, SIGFPE, SIGSEGV, SIGBUS */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: arch/score/include/asm/siginfo.h:68:
+               struct {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: arch/score/include/asm/siginfo.h:68:
+               struct {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#237: FILE: arch/score/include/asm/siginfo.h:69:
+                       void __user *_addr; /* faulting insn/memory ref. $

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: arch/score/include/asm/siginfo.h:69:
+                       void __user *_addr; /* faulting insn/memory ref. $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: arch/score/include/asm/siginfo.h:69:
+                       void __user *_addr; /* faulting insn/memory ref. $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#239: FILE: arch/score/include/asm/siginfo.h:70:
+                       void __user *_addr; /* faulting insn/memory ref. 
+#ifdef __ARCH_SI_TRAPNO

ERROR:TRAILING_WHITESPACE: trailing whitespace
#240: FILE: arch/score/include/asm/siginfo.h:71:
+                       int _trapno;    /* TRAP # which caused the signal $

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: arch/score/include/asm/siginfo.h:71:
+                       int _trapno;    /* TRAP # which caused the signal $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#242: FILE: arch/score/include/asm/siginfo.h:72:
+                       int _trapno;    /* TRAP # which caused the signal 
+#endif

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: arch/score/include/asm/siginfo.h:73:
+               } _sigfault;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#245: FILE: arch/score/include/asm/siginfo.h:75:
+               /* SIGPOLL, SIGXFSZ (To do ...) */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: arch/score/include/asm/siginfo.h:76:
+               struct {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: arch/score/include/asm/siginfo.h:76:
+               struct {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#247: FILE: arch/score/include/asm/siginfo.h:77:
+                       __ARCH_SI_BAND_T _band; /* POLL_IN, POLL_OUT, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: arch/score/include/asm/siginfo.h:77:
+                       __ARCH_SI_BAND_T _band; /* POLL_IN, POLL_OUT, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: arch/score/include/asm/siginfo.h:77:
+                       __ARCH_SI_BAND_T _band; /* POLL_IN, POLL_OUT, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: arch/score/include/asm/siginfo.h:78:
+                       int _fd;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#249: FILE: arch/score/include/asm/siginfo.h:78:
+                       __ARCH_SI_BAND_T _band; /* POLL_IN, POLL_OUT, 
+                       int _fd;

ERROR:CODE_INDENT: code indent should use tabs where possible
#250: FILE: arch/score/include/asm/siginfo.h:79:
+               } _sigpoll;$

WARNING:TYPO_SPELLING: 'choosen' may be misspelled - perhaps 'chosen'?
#256: FILE: arch/score/include/asm/siginfo.h:85:
+ * Again these have been choosen to be IRIX compatible.
                          ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#263: FILE: arch/score/include/asm/siginfo.h:92:
+#define SI_MESGQ __SI_CODE(__SI_MESGQ, -4) /* sent by real time mesq $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#265: FILE: arch/score/include/asm/siginfo.h:93:
+#define SI_MESGQ __SI_CODE(__SI_MESGQ, -4) /* sent by real time mesq 
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: arch/score/include/asm/siginfo.h:103:
+       if (from->si_code < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#275: FILE: arch/score/include/asm/siginfo.h:103:
+       if (from->si_code < 0)
+               memcpy(to, from, sizeof(*to));

ERROR:CODE_INDENT: code indent should use tabs where possible
#276: FILE: arch/score/include/asm/siginfo.h:104:
+               memcpy(to, from, sizeof(*to));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: arch/score/include/asm/siginfo.h:104:
+               memcpy(to, from, sizeof(*to));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: arch/score/include/asm/siginfo.h:105:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#277: FILE: arch/score/include/asm/siginfo.h:105:
+       else
[...]
+               memcpy(to, from, 3 * sizeof(int) +

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: arch/score/include/asm/siginfo.h:106:
+               /* _sigchld is currently the largest know union member */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#279: FILE: arch/score/include/asm/siginfo.h:107:
+               memcpy(to, from, 3 * sizeof(int) +$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: arch/score/include/asm/siginfo.h:107:
+               memcpy(to, from, 3 * sizeof(int) +$

ERROR:CODE_INDENT: code indent should use tabs where possible
#280: FILE: arch/score/include/asm/siginfo.h:108:
+                                sizeof(from->_sifields._sigchld));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: arch/score/include/asm/siginfo.h:108:
+                                sizeof(from->_sifields._sigchld));$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#294: FILE: arch/score/include/asm/signal.h:1:
+#ifndef _ASM_SIGNAL_H

WARNING:NEW_TYPEDEFS: do not add new typedefs
#303: FILE: arch/score/include/asm/signal.h:10:
+typedef struct {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: arch/score/include/asm/signal.h:11:
+       unsigned long sig[_NSIG_WORDS];$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#307: FILE: arch/score/include/asm/signal.h:14:
+typedef unsigned long old_sigset_t;            /* at least 32 bits */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#320: FILE: arch/score/include/asm/signal.h:27:
+#define SIGSEGV                11      /* Segmentation violation (ANSI). $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#322: FILE: arch/score/include/asm/signal.h:28:
+#define SIGSEGV                11      /* Segmentation violation (ANSI). 
+#define SIGSYS         12

ERROR:TRAILING_WHITESPACE: trailing whitespace
#326: FILE: arch/score/include/asm/signal.h:32:
+#define SIGUSR1                16      /* User-defined signal 1 (POSIX). $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#328: FILE: arch/score/include/asm/signal.h:33:
+#define SIGUSR2                17      /* User-defined signal 2 (POSIX). $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#328: FILE: arch/score/include/asm/signal.h:33:
+#define SIGUSR1                16      /* User-defined signal 1 (POSIX). 
+#define SIGUSR2                17      /* User-defined signal 2 (POSIX). 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#330: FILE: arch/score/include/asm/signal.h:34:
+#define SIGCHLD                18      /* Child status has changed $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#330: FILE: arch/score/include/asm/signal.h:34:
+#define SIGUSR2                17      /* User-defined signal 2 (POSIX). 
+#define SIGCHLD                18      /* Child status has changed 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#332: FILE: arch/score/include/asm/signal.h:35:
+#define SIGCHLD                18      /* Child status has changed 
+#define SIGCLD         SIGCHLD /* Same as SIGCHLD (System V). */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#335: FILE: arch/score/include/asm/signal.h:38:
+#define SIGURG         21      /* Urgent condition on socket (4.2 BSD). $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#337: FILE: arch/score/include/asm/signal.h:39:
+#define SIGURG         21      /* Urgent condition on socket (4.2 BSD). 
+#define SIGIO          22      /* I/O now possible (4.2 BSD). */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#338: FILE: arch/score/include/asm/signal.h:40:
+#define SIGPOLL                SIGIO   /* Pollable event occurred (System $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#340: FILE: arch/score/include/asm/signal.h:41:
+#define SIGPOLL                SIGIO   /* Pollable event occurred (System 
+#define SIGSTOP                23      /* Stop, unblockable (POSIX). */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#343: FILE: arch/score/include/asm/signal.h:44:
+#define SIGTTIN                26      /* Background read from tty $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#345: FILE: arch/score/include/asm/signal.h:45:
+#define SIGTTOU                27      /* Background write to tty $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#345: FILE: arch/score/include/asm/signal.h:45:
+#define SIGTTIN                26      /* Background read from tty 
+#define SIGTTOU                27      /* Background write to tty 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#347: FILE: arch/score/include/asm/signal.h:46:
+#define SIGTTOU                27      /* Background write to tty 
+#define SIGVTALRM      28      /* Virtual alarm clock (4.2 BSD). */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#348: FILE: arch/score/include/asm/signal.h:47:
+#define SIGPROF                29      /* Profiling alarm clock (4.2 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#350: FILE: arch/score/include/asm/signal.h:48:
+#define SIGXCPU                30      /* CPU limit exceeded (4.2 BSD). $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#350: FILE: arch/score/include/asm/signal.h:48:
+#define SIGPROF                29      /* Profiling alarm clock (4.2 
+#define SIGXCPU                30      /* CPU limit exceeded (4.2 BSD). 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#352: FILE: arch/score/include/asm/signal.h:49:
+#define SIGXFSZ                31      /* File size limit exceeded (4.2 $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#352: FILE: arch/score/include/asm/signal.h:49:
+#define SIGXCPU                30      /* CPU limit exceeded (4.2 BSD). 
+#define SIGXFSZ                31      /* File size limit exceeded (4.2 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#354: FILE: arch/score/include/asm/signal.h:50:
+#define SIGXFSZ                31      /* File size limit exceeded (4.2 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#363: FILE: arch/score/include/asm/signal.h:59:
+ * SA_RESTART flag to get restarting signals (which were the default long $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#368: FILE: arch/score/include/asm/signal.h:63:
+ * SA_NODEFER prevents the current signal from being masked in the $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: arch/score/include/asm/signal.h:105:
+       unsigned int    sa_flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: arch/score/include/asm/signal.h:106:
+       __sighandler_t  sa_handler;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: arch/score/include/asm/signal.h:107:
+       sigset_t        sa_mask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: arch/score/include/asm/signal.h:111:
+       struct sigaction sa;$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#421: FILE: arch/score/include/asm/signal.h:115:
+typedef struct sigaltstack {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: arch/score/include/asm/signal.h:116:
+       void __user *ss_sp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: arch/score/include/asm/signal.h:117:
+       size_t ss_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: arch/score/include/asm/signal.h:118:
+       int ss_flags;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#443: FILE: arch/score/include/asm/socket.h:1:
+#ifndef _ASM_SOCKET_H

ERROR:CODE_INDENT: code indent should use tabs where possible
#458: FILE: arch/score/include/asm/socket.h:16:
+                                  SIGPIPE when they die. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#458: FILE: arch/score/include/asm/socket.h:16:
+#define SO_KEEPALIVE   0x0008  /* Keep connections alive and send
+                                  SIGPIPE when they die. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#458: FILE: arch/score/include/asm/socket.h:16:
+                                  SIGPIPE when they die. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#461: FILE: arch/score/include/asm/socket.h:19:
+                                  broadcast messages. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#461: FILE: arch/score/include/asm/socket.h:19:
+#define SO_BROADCAST   0x0020  /* Allow transmission of
+                                  broadcast messages. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#461: FILE: arch/score/include/asm/socket.h:19:
+                                  broadcast messages. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#463: FILE: arch/score/include/asm/socket.h:21:
+                                  socket to transmit pending data. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#463: FILE: arch/score/include/asm/socket.h:21:
+#define SO_LINGER      0x0080  /* Block on close of a reliable
+                                  socket to transmit pending data. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#463: FILE: arch/score/include/asm/socket.h:21:
+                                  socket to transmit pending data. */

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#465: FILE: arch/score/include/asm/socket.h:23:
+#if 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#466: FILE: arch/score/include/asm/socket.h:24:
+To add: #define SO_REUSEPORT 0x0200    /* Allow local address and port $

CHECK:CAMELCASE: Avoid CamelCase: <To>
#466: FILE: arch/score/include/asm/socket.h:24:
+To add: #define SO_REUSEPORT 0x0200    /* Allow local address and port 

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#468: FILE: arch/score/include/asm/socket.h:25:
+To add: #define SO_REUSEPORT 0x0200    /* Allow local address and port 
+#endif

ERROR:TRAILING_WHITESPACE: trailing whitespace
#470: FILE: arch/score/include/asm/socket.h:27:
+#define SO_TYPE                0x1008  /* Compatible name for SO_STYLE. $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#472: FILE: arch/score/include/asm/socket.h:28:
+#define SO_TYPE                0x1008  /* Compatible name for SO_STYLE. 
+#define SO_STYLE       SO_TYPE /* Synonym */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#528: FILE: arch/score/include/asm/socket.h:84:
+ *               For writing rarp and other similar things on the user $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#532: FILE: arch/score/include/asm/socket.h:87:
+       SOCK_DGRAM      = 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: arch/score/include/asm/socket.h:88:
+       SOCK_STREAM     = 2,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#534: FILE: arch/score/include/asm/socket.h:89:
+       SOCK_RAW        = 3,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#535: FILE: arch/score/include/asm/socket.h:90:
+       SOCK_RDM        = 4,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#536: FILE: arch/score/include/asm/socket.h:91:
+       SOCK_SEQPACKET  = 5,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#537: FILE: arch/score/include/asm/socket.h:92:
+       SOCK_DCCP       = 6,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#538: FILE: arch/score/include/asm/socket.h:93:
+       SOCK_PACKET     = 10,$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#543: FILE: arch/score/include/asm/socket.h:98:
+ *  * remaining bits are used as flags. */

ERROR:DEFINE_ARCH_HAS: #define of 'ARCH_HAS_SOCKET_TYPES' is wrong - use Kconfig variables or standard guards instead
#550: FILE: arch/score/include/asm/socket.h:105:
+#define ARCH_HAS_SOCKET_TYPES 1

The ARCH_HAS_xyz and ARCH_HAVE_xyz patterns are wrong.

For big conceptual features use Kconfig symbols instead.  And for
smaller things where we have compatibility fallback functions but
want architectures able to override them with optimized ones, we
should either use weak functions (appropriate for some cases), or
the symbol that protects them should be the same symbol we use.

See: https://lore.kernel.org/lkml/CA+55aFycQ9XJvEOsiM3txHL5bjUc8CeKWJNR_H+MiicaddB42Q@mail.gmail.com/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#563: FILE: arch/score/include/asm/sockios.h:1:
+#ifndef _ASM_SOCKIOS_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#588: FILE: arch/score/include/asm/statfs.h:1:
+#ifndef _ASM_STATFS_H

WARNING:NEW_TYPEDEFS: do not add new typedefs
#597: FILE: arch/score/include/asm/statfs.h:10:
+typedef __kernel_fsid_t        fsid_t;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#602: FILE: arch/score/include/asm/statfs.h:15:
+       long            f_type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#604: FILE: arch/score/include/asm/statfs.h:17:
+       long            f_bsize;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#605: FILE: arch/score/include/asm/statfs.h:18:
+       long            f_frsize;       /* Fragment size - unsupported */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#606: FILE: arch/score/include/asm/statfs.h:19:
+       long            f_blocks;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#607: FILE: arch/score/include/asm/statfs.h:20:
+       long            f_bfree;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#608: FILE: arch/score/include/asm/statfs.h:21:
+       long            f_files;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#609: FILE: arch/score/include/asm/statfs.h:22:
+       long            f_ffree;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#610: FILE: arch/score/include/asm/statfs.h:23:
+       long            f_bavail;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#613: FILE: arch/score/include/asm/statfs.h:26:
+       __kernel_fsid_t f_fsid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#614: FILE: arch/score/include/asm/statfs.h:27:
+       long            f_namelen;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#615: FILE: arch/score/include/asm/statfs.h:28:
+       long            f_spare[6];$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#619: FILE: arch/score/include/asm/statfs.h:32:
+ * Unlike the traditional version the LFAPI version has none of the ABI $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#623: FILE: arch/score/include/asm/statfs.h:35:
+       __u32   f_type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: arch/score/include/asm/statfs.h:36:
+       __u32   f_bsize;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: arch/score/include/asm/statfs.h:37:
+       __u32   f_frsize;       /* Fragment size - unsupported */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#626: FILE: arch/score/include/asm/statfs.h:38:
+       __u32   __pad;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#627: FILE: arch/score/include/asm/statfs.h:39:
+       __u64   f_blocks;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: arch/score/include/asm/statfs.h:40:
+       __u64   f_bfree;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#629: FILE: arch/score/include/asm/statfs.h:41:
+       __u64   f_files;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#630: FILE: arch/score/include/asm/statfs.h:42:
+       __u64   f_ffree;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#631: FILE: arch/score/include/asm/statfs.h:43:
+       __u64   f_bavail;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#632: FILE: arch/score/include/asm/statfs.h:44:
+       __kernel_fsid_t f_fsid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#633: FILE: arch/score/include/asm/statfs.h:45:
+       __u32   f_namelen;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#634: FILE: arch/score/include/asm/statfs.h:46:
+       __u32   f_spare[6];$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#646: FILE: arch/score/include/asm/stat.h:1:
+#ifndef _ASM_STAT_H

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#652: FILE: arch/score/include/asm/stat.h:7:
+       unsigned        st_dev;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#652: FILE: arch/score/include/asm/stat.h:7:
+       unsigned        st_dev;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#653: FILE: arch/score/include/asm/stat.h:8:
+       long            st_pad1[3];             /* Reserved for network id $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#653: FILE: arch/score/include/asm/stat.h:8:
+       long            st_pad1[3];             /* Reserved for network id $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#655: FILE: arch/score/include/asm/stat.h:9:
+       long            st_pad1[3];             /* Reserved for network id 
+       ino_t           st_ino;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#665: FILE: arch/score/include/asm/stat.h:19:
+        * Actually this should be timestruc_t st_atime, st_mtime and $

ERROR:CODE_INDENT: code indent should use tabs where possible
#665: FILE: arch/score/include/asm/stat.h:19:
+        * Actually this should be timestruc_t st_atime, st_mtime and $

ERROR:CODE_INDENT: code indent should use tabs where possible
#667: FILE: arch/score/include/asm/stat.h:20:
+        * but we don't have it under Linux.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#668: FILE: arch/score/include/asm/stat.h:21:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#669: FILE: arch/score/include/asm/stat.h:22:
+       time_t          st_atime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#670: FILE: arch/score/include/asm/stat.h:23:
+       long            st_atime_nsec;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#671: FILE: arch/score/include/asm/stat.h:24:
+       time_t          st_mtime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#672: FILE: arch/score/include/asm/stat.h:25:
+       long            st_mtime_nsec;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#673: FILE: arch/score/include/asm/stat.h:26:
+       time_t          st_ctime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#674: FILE: arch/score/include/asm/stat.h:27:
+       long            st_ctime_nsec;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#675: FILE: arch/score/include/asm/stat.h:28:
+       long            st_blksize;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#676: FILE: arch/score/include/asm/stat.h:29:
+       long            st_blocks;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#677: FILE: arch/score/include/asm/stat.h:30:
+       long            st_pad4[14];$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#682: FILE: arch/score/include/asm/stat.h:35:
+ * amounts of padding around dev_t's.  The memory layout is the same as $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#688: FILE: arch/score/include/asm/stat.h:40:
+       unsigned long   st_dev;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#689: FILE: arch/score/include/asm/stat.h:41:
+       unsigned long   st_pad0[3];     /* Reserved for st_dev expansion $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#689: FILE: arch/score/include/asm/stat.h:41:
+       unsigned long   st_pad0[3];     /* Reserved for st_dev expansion $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#691: FILE: arch/score/include/asm/stat.h:42:
+       unsigned long   st_pad0[3];     /* Reserved for st_dev expansion 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#701: FILE: arch/score/include/asm/stat.h:52:
+       unsigned long   st_pad1[3];     /* Reserved for st_rdev expansion $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#703: FILE: arch/score/include/asm/stat.h:53:
+       unsigned long   st_pad1[3];     /* Reserved for st_rdev expansion 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#707: FILE: arch/score/include/asm/stat.h:57:
+        * Actually this should be timestruc_t st_atime, st_mtime and $

ERROR:CODE_INDENT: code indent should use tabs where possible
#707: FILE: arch/score/include/asm/stat.h:57:
+        * Actually this should be timestruc_t st_atime, st_mtime and $

ERROR:CODE_INDENT: code indent should use tabs where possible
#709: FILE: arch/score/include/asm/stat.h:58:
+        * but we don't have it under Linux.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#710: FILE: arch/score/include/asm/stat.h:59:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#711: FILE: arch/score/include/asm/stat.h:60:
+       time_t          st_atime;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#712: FILE: arch/score/include/asm/stat.h:61:
+       unsigned long   st_atime_nsec;  /* Reserved for st_atime expansion $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#712: FILE: arch/score/include/asm/stat.h:61:
+       unsigned long   st_atime_nsec;  /* Reserved for st_atime expansion $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#714: FILE: arch/score/include/asm/stat.h:62:
+       unsigned long   st_atime_nsec;  /* Reserved for st_atime expansion 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#716: FILE: arch/score/include/asm/stat.h:64:
+       unsigned long   st_mtime_nsec;  /* Reserved for st_mtime expansion $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#718: FILE: arch/score/include/asm/stat.h:65:
+       unsigned long   st_mtime_nsec;  /* Reserved for st_mtime expansion 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#720: FILE: arch/score/include/asm/stat.h:67:
+       unsigned long   st_ctime_nsec;  /* Reserved for st_ctime expansion $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#722: FILE: arch/score/include/asm/stat.h:68:
+       unsigned long   st_ctime_nsec;  /* Reserved for st_ctime expansion 
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#738: FILE: arch/score/include/asm/string.h:1:
+#ifndef _ASM_STRING_H

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#741: FILE: arch/score/include/asm/string.h:4:
+extern void *memset(void *__s, int __c, size_t __count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#742: FILE: arch/score/include/asm/string.h:5:
+extern void *memcpy(void *__to, __const__ void *__from, size_t __n);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#743: FILE: arch/score/include/asm/string.h:6:
+extern void *memmove(void *__dest, __const__ void *__src, size_t __n);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#754: FILE: arch/score/include/asm/swab.h:1:
+#ifndef _ASM_SWAB_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#775: FILE: arch/score/include/asm/system.h:1:
+#ifndef _ASM_SYSTEM_H

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#781: FILE: arch/score/include/asm/system.h:7:
+extern void *resume(void *last, void *next, void *next_ti);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'next' - possible side-effects?
#785: FILE: arch/score/include/asm/system.h:11:
+#define switch_to(prev, next, last)                            \
+do {                                                           \
+       (last) = resume(prev, next, task_thread_info(next));    \
+} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#785: FILE: arch/score/include/asm/system.h:11:
+#define switch_to(prev, next, last)                            \
+do {                                                           \
+       (last) = resume(prev, next, task_thread_info(next));    \
+} while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 7)
#786: FILE: arch/score/include/asm/system.h:12:
+do {                                                           \
+       (last) = resume(prev, next, task_thread_info(next));    \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#787: FILE: arch/score/include/asm/system.h:13:
+       (last) = resume(prev, next, task_thread_info(next));    \$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#795: FILE: arch/score/include/asm/system.h:21:
+extern unsigned long arch_align_stack(unsigned long sp);

WARNING:MEMORY_BARRIER: memory barrier without comment
#797: FILE: arch/score/include/asm/system.h:23:
+#define mb()           barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#798: FILE: arch/score/include/asm/system.h:24:
+#define rmb()          barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#799: FILE: arch/score/include/asm/system.h:25:
+#define wmb()          barrier()

ERROR:TRAILING_WHITESPACE: trailing whitespace
#800: FILE: arch/score/include/asm/system.h:26:
+#define smp_mb()       barrier() $

WARNING:MEMORY_BARRIER: memory barrier without comment
#800: FILE: arch/score/include/asm/system.h:26:
+#define smp_mb()       barrier() 

WARNING:MEMORY_BARRIER: memory barrier without comment
#801: FILE: arch/score/include/asm/system.h:27:
+#define smp_rmb()      barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#802: FILE: arch/score/include/asm/system.h:28:
+#define smp_wmb()      barrier()

ERROR:SPACING: space required before the open parenthesis '('
#804: FILE: arch/score/include/asm/system.h:30:
+#define read_barrier_depends()         do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#805: FILE: arch/score/include/asm/system.h:31:
+#define smp_read_barrier_depends()     do {} while(0)

ERROR:SPACING: space required after that ';' (ctx:VxV)
#807: FILE: arch/score/include/asm/system.h:33:
+#define set_mb(var, value)             do {var = value; wmb();} while (0)
                                                              ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#807: FILE: arch/score/include/asm/system.h:33:
+#define set_mb(var, value)             do {var = value; wmb();} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#812: FILE: arch/score/include/asm/system.h:38:
+#define cmpxchg_local(ptr, o, n) \
+       ((__typeof__(*(ptr)))__cmpxchg_local_generic((ptr), (unsigned 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#813: FILE: arch/score/include/asm/system.h:39:
+       ((__typeof__(*(ptr)))__cmpxchg_local_generic((ptr), (unsigned $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#813: FILE: arch/score/include/asm/system.h:39:
+       ((__typeof__(*(ptr)))__cmpxchg_local_generic((ptr), (unsigned $

ERROR:CODE_INDENT: code indent should use tabs where possible
#815: FILE: arch/score/include/asm/system.h:40:
+                       (unsigned long)(n), sizeof(*(ptr))))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#815: FILE: arch/score/include/asm/system.h:40:
+                       (unsigned long)(n), sizeof(*(ptr))))$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#823: FILE: arch/score/include/asm/system.h:48:
+unsigned long __xchg(volatile unsigned long *m, unsigned long val)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#825: FILE: arch/score/include/asm/system.h:50:
+       unsigned long retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#826: FILE: arch/score/include/asm/system.h:51:
+       unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#828: FILE: arch/score/include/asm/system.h:53:
+       local_irq_save(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#829: FILE: arch/score/include/asm/system.h:54:
+       retval = *m;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#830: FILE: arch/score/include/asm/system.h:55:
+       *m = val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#831: FILE: arch/score/include/asm/system.h:56:
+       local_irq_restore(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#832: FILE: arch/score/include/asm/system.h:57:
+       return retval;$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#835: FILE: arch/score/include/asm/system.h:60:
+#define xchg(ptr, v)                                           \
+       ((__typeof__(*(ptr))) __xchg((unsigned long *)(ptr),    \
+                                       (unsigned long)(v)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#836: FILE: arch/score/include/asm/system.h:61:
+       ((__typeof__(*(ptr))) __xchg((unsigned long *)(ptr),    \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#837: FILE: arch/score/include/asm/system.h:62:
+                                       (unsigned long)(v)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#837: FILE: arch/score/include/asm/system.h:62:
+                                       (unsigned long)(v)))$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#839: FILE: arch/score/include/asm/system.h:64:
+static inline unsigned long __cmpxchg(volatile unsigned long *m,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#840: FILE: arch/score/include/asm/system.h:65:
+                                       unsigned long old, unsigned long $

ERROR:CODE_INDENT: code indent should use tabs where possible
#840: FILE: arch/score/include/asm/system.h:65:
+                                       unsigned long old, unsigned long $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#840: FILE: arch/score/include/asm/system.h:65:
+static inline unsigned long __cmpxchg(volatile unsigned long *m,
+                                       unsigned long old, unsigned long 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#840: FILE: arch/score/include/asm/system.h:65:
+                                       unsigned long old, unsigned long $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#841: FILE: arch/score/include/asm/system.h:65:
+static inline unsigned long __cmpxchg(volatile unsigned long *m,
new)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#843: FILE: arch/score/include/asm/system.h:67:
+       unsigned long retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#844: FILE: arch/score/include/asm/system.h:68:
+       unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#846: FILE: arch/score/include/asm/system.h:70:
+       local_irq_save(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#847: FILE: arch/score/include/asm/system.h:71:
+       retval = *m;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#848: FILE: arch/score/include/asm/system.h:72:
+       if (retval == old)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#848: FILE: arch/score/include/asm/system.h:72:
+       if (retval == old)
+               *m = new;

ERROR:CODE_INDENT: code indent should use tabs where possible
#849: FILE: arch/score/include/asm/system.h:73:
+               *m = new;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#849: FILE: arch/score/include/asm/system.h:73:
+               *m = new;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#850: FILE: arch/score/include/asm/system.h:74:
+       local_irq_restore(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#851: FILE: arch/score/include/asm/system.h:75:
+       return retval;$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#854: FILE: arch/score/include/asm/system.h:78:
+#define cmpxchg(ptr, o, n)                                     \
+       ((__typeof__(*(ptr))) __cmpxchg((unsigned long *)(ptr), \
+                                       (unsigned long)(o),     \
+                                       (unsigned long)(n)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#855: FILE: arch/score/include/asm/system.h:79:
+       ((__typeof__(*(ptr))) __cmpxchg((unsigned long *)(ptr), \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#856: FILE: arch/score/include/asm/system.h:80:
+                                       (unsigned long)(o),     \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#856: FILE: arch/score/include/asm/system.h:80:
+                                       (unsigned long)(o),     \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#857: FILE: arch/score/include/asm/system.h:81:
+                                       (unsigned long)(n)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#857: FILE: arch/score/include/asm/system.h:81:
+                                       (unsigned long)(n)))$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#861: FILE: arch/score/include/asm/system.h:85:
+extern void __die(const char *, struct pt_regs *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#861: FILE: arch/score/include/asm/system.h:85:
+extern void __die(const char *, struct pt_regs *, const char *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#861: FILE: arch/score/include/asm/system.h:85:
+extern void __die(const char *, struct pt_regs *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#861: FILE: arch/score/include/asm/system.h:85:
+extern void __die(const char *, struct pt_regs *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#861: FILE: arch/score/include/asm/system.h:85:
+extern void __die(const char *, struct pt_regs *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#861: FILE: arch/score/include/asm/system.h:85:
+extern void __die(const char *, struct pt_regs *, const char *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#862: FILE: arch/score/include/asm/system.h:86:
+extern void __die(const char *, struct pt_regs *, const char *,
+       const char *, unsigned long) __attribute__((noreturn));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#862: FILE: arch/score/include/asm/system.h:86:
+       const char *, unsigned long) __attribute__((noreturn));$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __noreturn over __attribute__((noreturn))
#862: FILE: arch/score/include/asm/system.h:86:
+       const char *, unsigned long) __attribute__((noreturn));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#863: FILE: arch/score/include/asm/system.h:87:
+extern void __die_if_kernel(const char *, struct pt_regs *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#863: FILE: arch/score/include/asm/system.h:87:
+extern void __die_if_kernel(const char *, struct pt_regs *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#863: FILE: arch/score/include/asm/system.h:87:
+extern void __die_if_kernel(const char *, struct pt_regs *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#863: FILE: arch/score/include/asm/system.h:87:
+extern void __die_if_kernel(const char *, struct pt_regs *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#863: FILE: arch/score/include/asm/system.h:87:
+extern void __die_if_kernel(const char *, struct pt_regs *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#863: FILE: arch/score/include/asm/system.h:87:
+extern void __die_if_kernel(const char *, struct pt_regs *, const char *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#864: FILE: arch/score/include/asm/system.h:88:
+extern void __die_if_kernel(const char *, struct pt_regs *, const char *,
+       const char *, unsigned long);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#864: FILE: arch/score/include/asm/system.h:88:
+       const char *, unsigned long);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#867: FILE: arch/score/include/asm/system.h:91:
+       __die(msg, regs, __FILE__ ":", __FUNCTION__, __LINE__)$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#867: FILE: arch/score/include/asm/system.h:91:
+       __die(msg, regs, __FILE__ ":", __FUNCTION__, __LINE__)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#869: FILE: arch/score/include/asm/system.h:93:
+       __die_if_kernel(msg, regs, __FILE__ ":", __FUNCTION__, __LINE__)$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#869: FILE: arch/score/include/asm/system.h:93:
+       __die_if_kernel(msg, regs, __FILE__ ":", __FUNCTION__, __LINE__)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#881: FILE: arch/score/include/asm/termbits.h:1:
+#ifndef __ASM_SCORE_TERMBITS_H

WARNING:NEW_TYPEDEFS: do not add new typedefs
#886: FILE: arch/score/include/asm/termbits.h:6:
+typedef unsigned char  cc_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#887: FILE: arch/score/include/asm/termbits.h:7:
+typedef unsigned int   speed_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#888: FILE: arch/score/include/asm/termbits.h:8:
+typedef unsigned int   tcflag_t;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#892: FILE: arch/score/include/asm/termbits.h:12:
+       tcflag_t c_iflag;               /* input mode flags */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#893: FILE: arch/score/include/asm/termbits.h:13:
+       tcflag_t c_oflag;               /* output mode flags */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#894: FILE: arch/score/include/asm/termbits.h:14:
+       tcflag_t c_cflag;               /* control mode flags */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#895: FILE: arch/score/include/asm/termbits.h:15:
+       tcflag_t c_lflag;               /* local mode flags */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#896: FILE: arch/score/include/asm/termbits.h:16:
+       cc_t c_line;                    /* line discipline */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#897: FILE: arch/score/include/asm/termbits.h:17:
+       cc_t c_cc[NCCS];                /* control characters */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#901: FILE: arch/score/include/asm/termbits.h:21:
+       tcflag_t c_iflag;               /* input mode flags */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#902: FILE: arch/score/include/asm/termbits.h:22:
+       tcflag_t c_oflag;               /* output mode flags */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#903: FILE: arch/score/include/asm/termbits.h:23:
+       tcflag_t c_cflag;               /* control mode flags */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#904: FILE: arch/score/include/asm/termbits.h:24:
+       tcflag_t c_lflag;               /* local mode flags */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#905: FILE: arch/score/include/asm/termbits.h:25:
+       cc_t c_line;                    /* line discipline */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#906: FILE: arch/score/include/asm/termbits.h:26:
+       cc_t c_cc[NCCS];                /* control characters */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#907: FILE: arch/score/include/asm/termbits.h:27:
+       speed_t c_ispeed;               /* input speed */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#908: FILE: arch/score/include/asm/termbits.h:28:
+       speed_t c_ospeed;               /* output speed */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#912: FILE: arch/score/include/asm/termbits.h:32:
+       tcflag_t c_iflag;               /* input mode flags */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#913: FILE: arch/score/include/asm/termbits.h:33:
+       tcflag_t c_oflag;               /* output mode flags */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#914: FILE: arch/score/include/asm/termbits.h:34:
+       tcflag_t c_cflag;               /* control mode flags */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#915: FILE: arch/score/include/asm/termbits.h:35:
+       tcflag_t c_lflag;               /* local mode flags */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#916: FILE: arch/score/include/asm/termbits.h:36:
+       cc_t c_line;                    /* line discipline */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#917: FILE: arch/score/include/asm/termbits.h:37:
+       cc_t c_cc[NCCS];                /* control characters */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#918: FILE: arch/score/include/asm/termbits.h:38:
+       speed_t c_ispeed;               /* input speed */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#919: FILE: arch/score/include/asm/termbits.h:39:
+       speed_t c_ospeed;               /* output speed */$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1084: FILE: arch/score/include/asm/termios.h:1:
+#ifndef _ASM_TERMIOS_H

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1091: FILE: arch/score/include/asm/termios.h:8:
+       char    sg_ispeed;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1092: FILE: arch/score/include/asm/termios.h:9:
+       char    sg_ospeed;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1093: FILE: arch/score/include/asm/termios.h:10:
+       char    sg_erase;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1094: FILE: arch/score/include/asm/termios.h:11:
+       char    sg_kill;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1095: FILE: arch/score/include/asm/termios.h:12:
+       int     sg_flags;       /* SGI special - int, not short */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1099: FILE: arch/score/include/asm/termios.h:16:
+       char    t_intrc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1100: FILE: arch/score/include/asm/termios.h:17:
+       char    t_quitc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1101: FILE: arch/score/include/asm/termios.h:18:
+       char    t_startc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1102: FILE: arch/score/include/asm/termios.h:19:
+       char    t_stopc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1103: FILE: arch/score/include/asm/termios.h:20:
+       char    t_eofc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1104: FILE: arch/score/include/asm/termios.h:21:
+       char    t_brkc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1108: FILE: arch/score/include/asm/termios.h:25:
+       char    t_suspc;        /* stop process signal */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1109: FILE: arch/score/include/asm/termios.h:26:
+       char    t_dsuspc;       /* delayed stop process signal */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1110: FILE: arch/score/include/asm/termios.h:27:
+       char    t_rprntc;       /* reprint line */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1111: FILE: arch/score/include/asm/termios.h:28:
+       char    t_flushc;       /* flush output (toggles) */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1112: FILE: arch/score/include/asm/termios.h:29:
+       char    t_werasc;       /* word erase */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1113: FILE: arch/score/include/asm/termios.h:30:
+       char    t_lnextc;       /* literal next character */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1117: FILE: arch/score/include/asm/termios.h:34:
+/* TIOCGSIZE, TIOCSSIZE not defined yet.  Only needed for SunOS source
+   compatibility anyway ... */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1117: FILE: arch/score/include/asm/termios.h:34:
+   compatibility anyway ... */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1120: FILE: arch/score/include/asm/termios.h:37:
+       unsigned short ws_row;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1121: FILE: arch/score/include/asm/termios.h:38:
+       unsigned short ws_col;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1122: FILE: arch/score/include/asm/termios.h:39:
+       unsigned short ws_xpixel;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1123: FILE: arch/score/include/asm/termios.h:40:
+       unsigned short ws_ypixel;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1128: FILE: arch/score/include/asm/termios.h:45:
+       unsigned short c_iflag;         /* input mode flags */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1129: FILE: arch/score/include/asm/termios.h:46:
+       unsigned short c_oflag;         /* output mode flags */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1130: FILE: arch/score/include/asm/termios.h:47:
+       unsigned short c_cflag;         /* control mode flags */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1131: FILE: arch/score/include/asm/termios.h:48:
+       unsigned short c_lflag;         /* local mode flags */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1132: FILE: arch/score/include/asm/termios.h:49:
+       char c_line;                    /* line discipline */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1133: FILE: arch/score/include/asm/termios.h:50:
+       unsigned char c_cc[NCCS];       /* control characters */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1146: FILE: arch/score/include/asm/termios.h:63:
+#define INIT_C_CC $

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000148749.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 110 errors, 285 warnings, 39 checks, 1017 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000148749.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
