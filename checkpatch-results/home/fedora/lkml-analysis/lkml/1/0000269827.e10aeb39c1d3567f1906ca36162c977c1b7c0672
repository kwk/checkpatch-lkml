WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#52: 
v5: seperate apicid check for bigsmp to another patch
    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#127: FILE: arch/x86/Kconfig:301:
+config X86_SUMMIT
+	bool "Summit/EXA (IBM x440)"
+	depends on X86_32 && SMP
+	help
+	  This option is needed for IBM systems that use the Summit/EXA chipset.
+	  In particular, it is needed for the x440.
 

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#143: FILE: arch/x86/Kconfig:315:
+config X86_BIGSMP
+	bool "Support for big SMP systems with more than 8 CPUs"
+	depends on X86_32 && SMP
+	help
+	  This option is needed for the systems that have more than 8 CPUs
+	  and if the system is not of any sub-arch type above.
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#234: FILE: arch/x86/kernel/mpparse.c:78:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#236: FILE: arch/x86/kernel/mpparse.c:80:
+static inline int mpc_apic_id(struct mpc_config_processor *m,
+			struct mpc_config_translation *translation_record)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#241: FILE: arch/x86/kernel/mpparse.c:85:
+	printk(KERN_DEBUG "Processor #%d %u:%u APIC version %d (quad %d, apic %d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#254: FILE: arch/x86/kernel/mpparse.c:98:
+static void mpc_oem_bus_info(struct mpc_config_bus *m, char *name,
+	struct mpc_config_translation *translation)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#261: FILE: arch/x86/kernel/mpparse.c:105:
+	printk(KERN_INFO "Bus #%d is %s (node %d)\n",

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#265: FILE: arch/x86/kernel/mpparse.c:109:
+int quad_local_to_mp_bus_id [NR_CPUS/4][4];

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#265: FILE: arch/x86/kernel/mpparse.c:109:
+int quad_local_to_mp_bus_id [NR_CPUS/4][4];
                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#267: FILE: arch/x86/kernel/mpparse.c:111:
+static void mpc_oem_pci_bus(struct mpc_config_bus *m,
+	struct mpc_config_translation *translation)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#284: FILE: arch/x86/kernel/mpparse.c:386:
+void numaq_mps_oem_check(struct mp_config_table *mpc, char *oem,
 				 char *productid)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#288: FILE: arch/x86/kernel/mpparse.c:389:
+		printk("Warning!  Not a NUMA-Q system!\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#301: FILE: arch/x86/kernel/mpparse.c:456:
+	if (early) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#305: FILE: arch/x86/kernel/mpparse.c:460:
+	} else

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_CFLAGS is deprecated, please use `ccflags-y instead.
#346: FILE: arch/x86/mach-generic/Makefile:5:
+EXTRA_CFLAGS			:= -Iarch/x86/kernel

EXTRA_{A,C,CPP,LD}FLAGS are deprecated and should be replaced by the new
flags added via commit f77bf01425b1 ("kbuild: introduce ccflags-y,
asflags-y and ldflags-y").

The following conversion scheme maybe used::

  EXTRA_AFLAGS    ->  asflags-y
  EXTRA_CFLAGS    ->  ccflags-y
  EXTRA_CPPFLAGS  ->  cppflags-y
  EXTRA_LDFLAGS   ->  ldflags-y

See:

  1. https://lore.kernel.org/lkml/20070930191054.GA15876@uranus.ravnborg.org/
  2. https://lore.kernel.org/lkml/1313384834-24433-12-git-send-email-lacombar@gmail.com/
  3. https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#compilation-flags

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#409: FILE: arch/x86/mach-generic/probe.c:104:
+int __init mps_oem_check(struct mp_config_table *mpc, char *oem,
+				 char *productid)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#502: FILE: include/asm-x86/mach-generic/mach_mpparse.h:4:
 
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#503: FILE: include/asm-x86/mach-generic/mach_mpparse.h:5:
+extern int mps_oem_check(struct mp_config_table *mpc, char *oem,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#506: FILE: include/asm-x86/mach-generic/mach_mpparse.h:8:
+extern int acpi_madt_oem_check(char *oem_id, char *oem_table_id);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#523: FILE: include/asm-x86/mach-numaq/mach_apic.h:27:
+}
+static inline unsigned long check_apicid_present(int bit)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#590: FILE: include/asm-x86/mach-numaq/mach_mpparse.h:4:
+extern void numaq_mps_oem_check(struct mp_config_table *mpc, char *oem,

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#618: FILE: include/asm-x86/mmzone_32.h:27:
 {
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#700: FILE: arch/x86/mach-generic/numaq.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#722: FILE: arch/x86/mach-generic/numaq.c:23:
+static int mps_oem_check(struct mp_config_table *mpc, char *oem,
+		char *productid)

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#779: FILE: include/asm-x86/mpspec.h:19:
+extern int quad_local_to_mp_bus_id [NR_CPUS/4][4];

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#779: FILE: include/asm-x86/mpspec.h:19:
+extern int quad_local_to_mp_bus_id [NR_CPUS/4][4];
                                            ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000269827.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 8 warnings, 17 checks, 729 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000269827.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
