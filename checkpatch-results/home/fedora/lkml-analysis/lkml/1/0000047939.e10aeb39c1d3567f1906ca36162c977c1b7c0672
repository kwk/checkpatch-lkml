WARNING:EMAIL_SUBJECT: A patch subject line should describe the change not the tool that found it
#24: 
Subject: [PATCH v5 03/12] vsprintf: give it some care to please checkpatch.pl

Naming the tool that found the issue is not very useful in the
subject line.  A good subject line summarizes the change that
the patch brings.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#128: FILE: lib/vsprintf.c:309:
+static char *put_dec_trunc(char *buf, unsigned q)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#146: FILE: lib/vsprintf.c:346:
+static char *put_dec_full(char *buf, unsigned q)

WARNING:LINE_SPACING: Missing a blank line after declarations
#459: FILE: lib/vsprintf.c:1835:
+			char *s = (char *)va_arg(args, char *);
+			if (field_width == -1)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#508: FILE: lib/vsprintf.c:1889:
 		if (!digit
+		    || (base == 16 && !isxdigit(digit))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#509: FILE: lib/vsprintf.c:1890:
+		    || (base == 16 && !isxdigit(digit))
+		    || (base == 10 && !isdigit(digit))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#510: FILE: lib/vsprintf.c:1891:
+		    || (base == 10 && !isdigit(digit))
+		    || (base == 8 && (!isdigit(digit) || digit > '7'))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#511: FILE: lib/vsprintf.c:1892:
+		    || (base == 8 && (!isdigit(digit) || digit > '7'))
+		    || (base == 0 && !isdigit(digit)))

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#521: FILE: lib/vsprintf.c:1899:
+				*s = (signed char)simple_strtol(str, &next, base);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#526: FILE: lib/vsprintf.c:1902:
+				*s = (unsigned char)simple_strtoul(str, &next, base);

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#534: FILE: lib/vsprintf.c:1908:
+				*s = (short)simple_strtol(str, &next, base);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#538: FILE: lib/vsprintf.c:1910:
+				unsigned short *s = (unsigned short *)va_arg(args, unsigned short *);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#539: FILE: lib/vsprintf.c:1911:
+				*s = (unsigned short)simple_strtoul(str, &next, base);

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#547: FILE: lib/vsprintf.c:1917:
+				*l = simple_strtol(str, &next, base);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#552: FILE: lib/vsprintf.c:1920:
+				*l = simple_strtoul(str, &next, base);

WARNING:CONSIDER_KSTRTO: simple_strtoll is obsolete, use kstrtoll instead
#560: FILE: lib/vsprintf.c:1926:
+				*l = simple_strtoll(str, &next, base);

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#564: FILE: lib/vsprintf.c:1928:
+				unsigned long long *l = (unsigned long long *)va_arg(args, unsigned long long *);

WARNING:CONSIDER_KSTRTO: simple_strtoull is obsolete, use kstrtoull instead
#565: FILE: lib/vsprintf.c:1929:
+				*l = simple_strtoull(str, &next, base);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#574: FILE: lib/vsprintf.c:1936:
+			*s = (size_t)simple_strtoul(str, &next, base);

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#582: FILE: lib/vsprintf.c:1942:
+				*i = (int)simple_strtol(str, &next, base);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#587: FILE: lib/vsprintf.c:1945:
+				*i = (unsigned int)simple_strtoul(str, &next, base);

WARNING:NAKED_SSCANF: unchecked sscanf return value
#596: FILE: lib/vsprintf.c:1976:
+int sscanf(const char *buf, const char *fmt, ...)
 {
 	va_list args;
 	int i;
 
+	va_start(args, fmt);
+	va_start(args, fmt);
+	va_start(args, fmt);
+	i = vsscanf(buf, fmt, args);
 	va_end(args);
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000047939.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 18 warnings, 4 checks, 524 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000047939.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
