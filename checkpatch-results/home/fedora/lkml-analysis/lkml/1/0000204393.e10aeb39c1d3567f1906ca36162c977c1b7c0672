ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#80: FILE: drivers/xen/events.c:75:
+struct irq_info
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#144: FILE: drivers/xen/events.c:138:
+static struct irq_info *info_for_irq(unsigned irq)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#151: FILE: drivers/xen/events.c:143:
+static unsigned int evtchn_from_irq(unsigned irq)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#158: FILE: drivers/xen/events.c:148:
+static enum ipi_vector ipi_from_irq(unsigned irq)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#163: FILE: drivers/xen/events.c:152:
+	BUG_ON(info == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info"
#163: FILE: drivers/xen/events.c:152:
+	BUG_ON(info == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#164: FILE: drivers/xen/events.c:153:
+	BUG_ON(info->type != IRQT_IPI);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#169: FILE: drivers/xen/events.c:158:
+static unsigned virq_from_irq(unsigned irq)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#169: FILE: drivers/xen/events.c:158:
+static unsigned virq_from_irq(unsigned irq)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#173: FILE: drivers/xen/events.c:162:
+	BUG_ON(info == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info"
#173: FILE: drivers/xen/events.c:162:
+	BUG_ON(info == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#174: FILE: drivers/xen/events.c:163:
+	BUG_ON(info->type != IRQT_VIRQ);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#179: FILE: drivers/xen/events.c:168:
+static unsigned gsi_from_irq(unsigned irq)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#179: FILE: drivers/xen/events.c:168:
+static unsigned gsi_from_irq(unsigned irq)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#183: FILE: drivers/xen/events.c:172:
+	BUG_ON(info == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info"
#183: FILE: drivers/xen/events.c:172:
+	BUG_ON(info == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#184: FILE: drivers/xen/events.c:173:
+	BUG_ON(info->type != IRQT_PIRQ);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#189: FILE: drivers/xen/events.c:178:
+static unsigned vector_from_irq(unsigned irq)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#189: FILE: drivers/xen/events.c:178:
+static unsigned vector_from_irq(unsigned irq)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#193: FILE: drivers/xen/events.c:182:
+	BUG_ON(info == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info"
#193: FILE: drivers/xen/events.c:182:
+	BUG_ON(info == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#194: FILE: drivers/xen/events.c:183:
+	BUG_ON(info->type != IRQT_PIRQ);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#199: FILE: drivers/xen/events.c:188:
+static enum xen_irq_type type_from_irq(unsigned irq)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#204: FILE: drivers/xen/events.c:193:
+static unsigned cpu_from_irq(unsigned irq)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#204: FILE: drivers/xen/events.c:193:
+static unsigned cpu_from_irq(unsigned irq)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#212: FILE: drivers/xen/events.c:201:
+	unsigned ret = 0;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#353: FILE: drivers/xen/events.c:793:
+		BUG_ON(virq_from_irq(irq) != virq);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#372: FILE: drivers/xen/events.c:822:
+		BUG_ON(ipi_from_irq(irq) != ipi);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000204393.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 23 warnings, 4 checks, 326 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000204393.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
