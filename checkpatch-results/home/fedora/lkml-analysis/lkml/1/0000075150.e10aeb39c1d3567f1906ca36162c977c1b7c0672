WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#92: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#97: FILE: drivers/haptic/Kconfig:1:
+menuconfig HAPTIC
+	bool "HAPTIC support"
+	help
+	  Say Y to enalbe haptic support. It enables the haptic and controlled
+	  from both userspace and kernel
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:TYPO_SPELLING: 'enalbe' may be misspelled - perhaps 'enable'?
#100: FILE: drivers/haptic/Kconfig:4:
+	  Say Y to enalbe haptic support. It enables the haptic and controlled
 	           ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#105: FILE: drivers/haptic/Kconfig:9:
+config HAPTIC_CLASS
+	tristate "Haptic Class Support"
+	help
+	  This option enables the haptic sysfs class in /sys/class/haptic.
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#125: FILE: drivers/haptic/haptic-class.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#162: FILE: drivers/haptic/haptic-class.c:38:
+static ssize_t haptic_value_show(struct device *dev,
+		struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#176: FILE: drivers/haptic/haptic-class.c:52:
+static ssize_t haptic_value_store(struct device *dev,
+		struct device_attribute *attr, const char *buf, size_t size)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#181: FILE: drivers/haptic/haptic-class.c:57:
+	unsigned long state = simple_strtoul(buf, &after, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'haptic_value_show' to 'value_show' 'haptic_value_store' to 'value_store'
#193: FILE: drivers/haptic/haptic-class.c:69:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: drivers/haptic/haptic-class.c:101:
+int haptic_classdev_register(struct device *parent,
+				struct haptic_classdev *haptic_cdev)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#230: FILE: drivers/haptic/haptic-class.c:106:
+	haptic_cdev->dev = device_create(haptic_class, parent, 0,
+				haptic_cdev, "%s", haptic_cdev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#246: FILE: drivers/haptic/haptic-class.c:122:
+	printk(KERN_INFO "Registered haptic device: %s\n", haptic_cdev->name);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#296: FILE: drivers/haptic/haptic.h:1:
+/*

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#316: FILE: drivers/haptic/haptic.h:21:
+static inline void haptic_set_value(struct haptic_classdev *haptic_cdev,
+					enum haptic_value value)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#337: FILE: include/linux/haptic.h:1:
+/*

CHECK:BIT_MACRO: Prefer using the BIT macro
#370: FILE: include/linux/haptic.h:34:
+#define HAPTIC_SUSPENDED		(1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#376: FILE: include/linux/haptic.h:40:
+	void			(*set)(struct haptic_classdev *self,
+					  enum haptic_value value);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#384: FILE: include/linux/haptic.h:48:
+extern int haptic_classdev_register(struct device *parent,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#385: FILE: include/linux/haptic.h:49:
+extern int haptic_classdev_register(struct device *parent,
+				 struct haptic_classdev *haptic_cdev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#386: FILE: include/linux/haptic.h:50:
+extern void haptic_classdev_unregister(struct haptic_classdev *lcd);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#387: FILE: include/linux/haptic.h:51:
+extern void haptic_classdev_suspend(struct haptic_classdev *haptic_cdev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#388: FILE: include/linux/haptic.h:52:
+extern void haptic_classdev_resume(struct haptic_classdev *haptic_cdev);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000075150.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 10 warnings, 12 checks, 305 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000075150.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
