WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
Immediate values are used as read mostly variables that are rarely updated. They

WARNING:TYPO_SPELLING: 'functionnality' may be misspelled - perhaps 'functionality'?
#37: 
functionnality is disabled in the kernel, it falls back to global variables.
^^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'Dont't' may be misspelled - perhaps 'Don't'?
#86: 
- Dont't declare the __imv section in vmlinux.lds.h, just put the content
  ^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#152: FILE: include/linux/module.h:541:
+extern void _module_imv_update(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#153: FILE: include/linux/module.h:542:
+extern void module_imv_update(void);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#191: FILE: kernel/module.c:2242:
+	mod->immediate = section_objs(hdr, sechdrs, secstrings, "__imv",
+					sizeof(*mod->immediate),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: kernel/module.c:3025:
+		imv_update_range(mod->immediate,
+			mod->immediate + mod->num_immediate);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#241: FILE: kernel/immediate.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#255: FILE: kernel/immediate.c:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#256: FILE: kernel/immediate.c:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#265: FILE: kernel/immediate.c:25:
+#include <asm/cacheflush.h>

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#266: FILE: kernel/immediate.c:26:
+#include <asm/atomic.h>

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#275: FILE: kernel/immediate.c:35:
+extern const struct __imv __start___imv[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#276: FILE: kernel/immediate.c:36:
+extern const struct __imv __stop___imv[];

WARNING:MEMORY_BARRIER: memory barrier without comment
#288: FILE: kernel/immediate.c:48:
+			smp_rmb();

CHECK:BRACES: Unbalanced braces around else statement
#346: FILE: kernel/immediate.c:106:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#360: FILE: kernel/immediate.c:120:
+void imv_update_range(const struct __imv *begin,
+		const struct __imv *end)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#369: FILE: kernel/immediate.c:129:
+			printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#371: FILE: kernel/immediate.c:131:
+				"Invalid immediate value. "
+				"Variable at %p, "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#372: FILE: kernel/immediate.c:132:
+				"Variable at %p, "
+				"instruction at %p, size %hu\n",

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#423: FILE: kernel/immediate.c:183:
+__initcall(init_imv);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#475: FILE: include/linux/immediate.h:1:
+#ifndef _LINUX_IMMEDIATE_H

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#498: FILE: include/linux/immediate.h:24:
+} __attribute__ ((packed));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#520: FILE: include/linux/immediate.h:46:
+extern void core_imv_update(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#521: FILE: include/linux/immediate.h:47:
+extern void imv_update_range(const struct __imv *begin,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#522: FILE: include/linux/immediate.h:48:
+extern void imv_update_range(const struct __imv *begin,
+	const struct __imv *end);

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#553: FILE: include/linux/immediate.h:79:
+#define DECLARE_IMV(type, name) extern __typeof__(type) name##__imv

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#554: FILE: include/linux/immediate.h:80:
+#define DEFINE_IMV(type, name)  __typeof__(type) name##__imv

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#556: FILE: include/linux/immediate.h:82:
+#define EXPORT_IMV_SYMBOL(name) EXPORT_SYMBOL(name##__imv)

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#557: FILE: include/linux/immediate.h:83:
+#define EXPORT_IMV_SYMBOL_GPL(name) EXPORT_SYMBOL_GPL(name##__imv)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000067979.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 17 warnings, 9 checks, 414 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000067979.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
