WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#50: FILE: Documentation/filesystems/smount.c:1:
+//

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#68: FILE: Documentation/filesystems/smount.c:19:
+#define MS_SHARED		1<<20	/* Shared */
                  		 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#68: FILE: Documentation/filesystems/smount.c:19:
+#define MS_SHARED		1<<20	/* Shared */

CHECK:BIT_MACRO: Prefer using the BIT macro
#68: FILE: Documentation/filesystems/smount.c:19:
+#define MS_SHARED		1<<20	/* Shared */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#72: FILE: Documentation/filesystems/smount.c:23:
+#define MS_PRIVATE		1<<18	/* Private */
                   		 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#72: FILE: Documentation/filesystems/smount.c:23:
+#define MS_PRIVATE		1<<18	/* Private */

CHECK:BIT_MACRO: Prefer using the BIT macro
#72: FILE: Documentation/filesystems/smount.c:23:
+#define MS_PRIVATE		1<<18	/* Private */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#76: FILE: Documentation/filesystems/smount.c:27:
+#define MS_SLAVE		1<<19	/* Slave */
                 		 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#76: FILE: Documentation/filesystems/smount.c:27:
+#define MS_SLAVE		1<<19	/* Slave */

CHECK:BIT_MACRO: Prefer using the BIT macro
#76: FILE: Documentation/filesystems/smount.c:27:
+#define MS_SLAVE		1<<19	/* Slave */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#80: FILE: Documentation/filesystems/smount.c:31:
+#define MS_UNBINDABLE		1<<17	/* Unbindable */
                      		 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#80: FILE: Documentation/filesystems/smount.c:31:
+#define MS_UNBINDABLE		1<<17	/* Unbindable */

CHECK:BIT_MACRO: Prefer using the BIT macro
#80: FILE: Documentation/filesystems/smount.c:31:
+#define MS_UNBINDABLE		1<<17	/* Unbindable */

WARNING:LINE_SPACING: Missing a blank line after declarations
#86: FILE: Documentation/filesystems/smount.c:37:
+	int type;
+	if(argc != 3) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#86: FILE: Documentation/filesystems/smount.c:37:
+	if(argc != 3) {

WARNING:SPLIT_STRING: quoted string split across lines
#88: FILE: Documentation/filesystems/smount.c:39:
+		fprintf(stderr, "usage: %s dir "
+		"<rshared|rslave|rprivate|runbindable|shared|slave"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#89: FILE: Documentation/filesystems/smount.c:40:
+		"|private|unbindable>\n" , argv[0]);
 		                         ^

WARNING:SPLIT_STRING: quoted string split across lines
#89: FILE: Documentation/filesystems/smount.c:40:
+		"<rshared|rslave|rprivate|runbindable|shared|slave"
+		"|private|unbindable>\n" , argv[0]);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#95: FILE: Documentation/filesystems/smount.c:46:
+	if (strcmp(argv[2],"rshared")==0)
 	                  ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#95: FILE: Documentation/filesystems/smount.c:46:
+	if (strcmp(argv[2],"rshared")==0)
 	                             ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#95: FILE: Documentation/filesystems/smount.c:46:
+	if (strcmp(argv[2],"rshared")==0)
[...]
+	else if (strcmp(argv[2],"rslave")==0)
[...]
+	else if (strcmp(argv[2],"rprivate")==0)
[...]
+	else if (strcmp(argv[2],"runbindable")==0)
[...]
+	else if (strcmp(argv[2],"shared")==0)
[...]
+	else if (strcmp(argv[2],"slave")==0)
[...]
+	else if (strcmp(argv[2],"private")==0)
[...]
+	else if (strcmp(argv[2],"unbindable")==0)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#96: FILE: Documentation/filesystems/smount.c:47:
+		type=(MS_SHARED|MS_REC);
 		    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#96: FILE: Documentation/filesystems/smount.c:47:
+		type=(MS_SHARED|MS_REC);
 		               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#97: FILE: Documentation/filesystems/smount.c:48:
+	else if (strcmp(argv[2],"rslave")==0)
 	                       ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#97: FILE: Documentation/filesystems/smount.c:48:
+	else if (strcmp(argv[2],"rslave")==0)
 	                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#98: FILE: Documentation/filesystems/smount.c:49:
+		type=(MS_SLAVE|MS_REC);
 		    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#98: FILE: Documentation/filesystems/smount.c:49:
+		type=(MS_SLAVE|MS_REC);
 		              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#99: FILE: Documentation/filesystems/smount.c:50:
+	else if (strcmp(argv[2],"rprivate")==0)
 	                       ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#99: FILE: Documentation/filesystems/smount.c:50:
+	else if (strcmp(argv[2],"rprivate")==0)
 	                                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#100: FILE: Documentation/filesystems/smount.c:51:
+		type=(MS_PRIVATE|MS_REC);
 		    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#100: FILE: Documentation/filesystems/smount.c:51:
+		type=(MS_PRIVATE|MS_REC);
 		                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#101: FILE: Documentation/filesystems/smount.c:52:
+	else if (strcmp(argv[2],"runbindable")==0)
 	                       ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#101: FILE: Documentation/filesystems/smount.c:52:
+	else if (strcmp(argv[2],"runbindable")==0)
 	                                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#102: FILE: Documentation/filesystems/smount.c:53:
+		type=(MS_UNBINDABLE|MS_REC);
 		    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#102: FILE: Documentation/filesystems/smount.c:53:
+		type=(MS_UNBINDABLE|MS_REC);
 		                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#103: FILE: Documentation/filesystems/smount.c:54:
+	else if (strcmp(argv[2],"shared")==0)
 	                       ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#103: FILE: Documentation/filesystems/smount.c:54:
+	else if (strcmp(argv[2],"shared")==0)
 	                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#104: FILE: Documentation/filesystems/smount.c:55:
+		type=MS_SHARED;
 		    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#105: FILE: Documentation/filesystems/smount.c:56:
+	else if (strcmp(argv[2],"slave")==0)
 	                       ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#105: FILE: Documentation/filesystems/smount.c:56:
+	else if (strcmp(argv[2],"slave")==0)
 	                                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#106: FILE: Documentation/filesystems/smount.c:57:
+		type=MS_SLAVE;
 		    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#107: FILE: Documentation/filesystems/smount.c:58:
+	else if (strcmp(argv[2],"private")==0)
 	                       ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#107: FILE: Documentation/filesystems/smount.c:58:
+	else if (strcmp(argv[2],"private")==0)
 	                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#108: FILE: Documentation/filesystems/smount.c:59:
+		type=MS_PRIVATE;
 		    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#109: FILE: Documentation/filesystems/smount.c:60:
+	else if (strcmp(argv[2],"unbindable")==0)
 	                       ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#109: FILE: Documentation/filesystems/smount.c:60:
+	else if (strcmp(argv[2],"unbindable")==0)
 	                                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#110: FILE: Documentation/filesystems/smount.c:61:
+		type=MS_UNBINDABLE;
 		    ^

CHECK:BRACES: Unbalanced braces around else statement
#111: FILE: Documentation/filesystems/smount.c:62:
+	else {

ERROR:SPACING: space required before the open parenthesis '('
#117: FILE: Documentation/filesystems/smount.c:68:
+	if(mount("", argv[1], "dontcare", type, "") == -1) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000239010.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 31 errors, 4 warnings, 14 checks, 190 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000239010.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
