WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#44: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:TYPO_SPELLING: 'abolute' may be misspelled - perhaps 'absolute'?
#61: FILE: Documentation/ABI/testing/sysfs-aufs:13:
+		It shows the abolute path of a member directory (which
 		             ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'abolute' may be misspelled - perhaps 'absolute'?
#68: FILE: Documentation/ABI/testing/sysfs-aufs:20:
+		It shows the abolute path of XINO (External Inode Number
 		             ^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#80: FILE: fs/aufs/sysaufs.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:CAMELCASE: Avoid CamelCase: <AuSiAttr>
#102: FILE: fs/aufs/sysaufs.c:23:
+#define AuSiAttr(_name) { \

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#113: FILE: fs/aufs/sysaufs.c:34:
+static struct sysfs_ops au_sbi_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:CAMELCASE: Avoid CamelCase: <SysaufsSiNamePrefix>
#133: FILE: fs/aufs/sysaufs.c:54:
+		 SysaufsSiNamePrefix "%lx", sysaufs_si_id(sbinfo));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#181: FILE: fs/aufs/sysaufs.h:1:
+/*

CHECK:CAMELCASE: Avoid CamelCase: <SysaufsSiNameLen>
#228: FILE: fs/aufs/sysaufs.h:48:
+#define SysaufsSiNameLen	(sizeof(SysaufsSiNamePrefix) + 16)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#242: FILE: fs/aufs/sysaufs.h:62:
+ssize_t sysaufs_si_show(struct kobject *kobj, struct attribute *attr,
+			 char *buf);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#261: FILE: fs/aufs/sysaufs.h:81:
+ssize_t sysaufs_si_show(struct kobject *kobj, struct attribute *attr,
+			 char *buf)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000141187.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 5 checks, 229 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000141187.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
