WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#60: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#65: FILE: arch/arm/mach-u300/include/mach/coh901318.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:BIT_MACRO: Prefer using the BIT macro
#80: FILE: arch/arm/mach-u300/include/mach/coh901318.h:16:
+#define MAX_DMA_PACKET_SIZE (1 << MAX_DMA_PACKET_SIZE_SHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:TYPO_SPELLING: 'addres' may be misspelled - perhaps 'address'?
#94: FILE: arch/arm/mach-u300/include/mach/coh901318.h:30:
+ * @virt_link_addr: virtual addres of next lli (only used by pool_free)
                             ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#106: FILE: arch/arm/mach-u300/include/mach/coh901318.h:42:
+};
+/**

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#119: FILE: arch/arm/mach-u300/include/mach/coh901318.h:55:
+};
+/**

WARNING:TYPO_SPELLING: 'wont' may be misspelled - perhaps 'won't'?
#142: FILE: arch/arm/mach-u300/include/mach/coh901318.h:78:
+ *           0 means dma wont access memory
                          ^^^^

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#153: FILE: arch/arm/mach-u300/include/mach/coh901318.h:89:
+	spinlock_t lock;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#156: FILE: arch/arm/mach-u300/include/mach/coh901318.h:92:
+};
+/**

WARNING:TYPO_SPELLING: 'memeory' may be misspelled - perhaps 'memory'?
#160: FILE: arch/arm/mach-u300/include/mach/coh901318.h:96:
+ * @access_memory_state: requesting DMA memeory access (on / off)
                                         ^^^^^^^

WARNING:TYPO_SPELLING: 'tha' may be misspelled - perhaps 'than'?
#236: FILE: arch/arm/mach-u300/include/mach/coh901318.h:172:
+/* Channel enable activates tha dma job */
                             ^^^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#357: FILE: drivers/dma/Kconfig:112:
+config COH901318
+	bool "ST-Ericsson COH901318 DMA support"
+	select DMA_ENGINE
+	depends on ARCH_U300
+	help
+	  Enable support for ST-Ericsson COH 901 318 DMA.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#382: FILE: drivers/dma/coh901318.c:1:
+/*

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'cohc' may be better as '(cohc)' to avoid precedence issues
#408: FILE: drivers/dma/coh901318.c:27:
+#define COHC_2_DEV(cohc) (&cohc->chan.dev->device)

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#439: FILE: drivers/dma/coh901318.c:58:
+	spinlock_t lock;

WARNING:SPLIT_STRING: quoted string split across lines
#470: FILE: drivers/dma/coh901318.c:89:
+		dev_vdbg(COHC_2_DEV(cohc), "i %d, lli %p, ctrl 0x%x, src 0x%x"
+			 ", dst 0x%x, link 0x%x link_virt 0x%p\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#487: FILE: drivers/dma/coh901318.c:106:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#503: FILE: drivers/dma/coh901318.c:122:
+	dev_buf = kmalloc(4*1024, GFP_KERNEL);
 	                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#544: FILE: drivers/dma/coh901318.c:163:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#547: FILE: drivers/dma/coh901318.c:166:
+{
+

CHECK:SPACING: No space is necessary after a cast
#550: FILE: drivers/dma/coh901318.c:169:
+	(void) debugfs_create_file("status",

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#551: FILE: drivers/dma/coh901318.c:170:
+				   S_IFREG | S_IRUGO,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#610: FILE: drivers/dma/coh901318.c:229:
+}
+static void disable_powersave(struct coh901318_chan *cohc)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#646: FILE: drivers/dma/coh901318.c:265:
+	       COH901318_CX_CFG_SPACING*channel);
 	                               ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#650: FILE: drivers/dma/coh901318.c:269:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#676: FILE: drivers/dma/coh901318.c:295:
+	BUG_ON(readl(virtbase + COH901318_CX_STAT +

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#677: FILE: drivers/dma/coh901318.c:296:
+		     COH901318_CX_STAT_SPACING*channel) &
 		                              ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#696: FILE: drivers/dma/coh901318.c:315:
+}
+static dma_cookie_t

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*desc)...) over kmalloc(sizeof(struct coh901318_desc)...)
#721: FILE: drivers/dma/coh901318.c:340:
+		desc = kmalloc(sizeof(struct coh901318_desc), GFP_NOWAIT);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!desc"
#722: FILE: drivers/dma/coh901318.c:341:
+		if (desc == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#749: FILE: drivers/dma/coh901318.c:368:
+	BUG_ON(cohc->pending_irqs != 0);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#807: FILE: drivers/dma/coh901318.c:426:
+		    COH901318_CX_CTRL+COH901318_CX_CTRL_SPACING *
 		                     ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#816: FILE: drivers/dma/coh901318.c:435:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#818: FILE: drivers/dma/coh901318.c:437:
+/* Stops a transfer without losing data. Enables power save.
+   Use this function in conjunction with coh901318_continue(..)

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'infinit' may be misspelled - perhaps 'infinite'?
#834: FILE: drivers/dma/coh901318.c:453:
+	/* Stopping infinit transfer */
 	            ^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#839: FILE: drivers/dma/coh901318.c:458:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#848: FILE: drivers/dma/coh901318.c:467:
+	while (readl(virtbase + COH901318_CX_STAT+COH901318_CX_STAT_SPACING *
 	                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#853: FILE: drivers/dma/coh901318.c:472:
+	if ((readl(virtbase + COH901318_CX_CTRL+COH901318_CX_CTRL_SPACING *
 	                                       ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#864: FILE: drivers/dma/coh901318.c:483:
+/* Continues a transfer that has been stopped via 300_dma_stop(..).
+   Power save is handled.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#885: FILE: drivers/dma/coh901318.c:504:
+		       COH901318_CX_CFG_SPACING*channel);
 		                               ^

CHECK:SPACING: No space is necessary after a cast
#896: FILE: drivers/dma/coh901318.c:515:
+	unsigned int ch_nr = (unsigned int) chan_id;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cohd_que"
#958: FILE: drivers/dma/coh901318.c:577:
+	if (cohd_que != NULL) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#971: FILE: drivers/dma/coh901318.c:590:
+
+	}

CHECK:SPACING: No space is necessary after a cast
#978: FILE: drivers/dma/coh901318.c:597:
+	struct coh901318_chan *cohc = (struct coh901318_chan *) data;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#989: FILE: drivers/dma/coh901318.c:608:
+	BUG_ON(cohd_fin->pending_irqs == 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#993: FILE: drivers/dma/coh901318.c:612:
+	BUG_ON(cohc->nbr_active_done && cohd_fin == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cohd_fin"
#993: FILE: drivers/dma/coh901318.c:612:
+	BUG_ON(cohc->nbr_active_done && cohd_fin == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cohd_fin"
#998: FILE: drivers/dma/coh901318.c:617:
+	if (cohd_fin == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cohd_fin->sg"
#1001: FILE: drivers/dma/coh901318.c:620:
+	if (cohd_fin->sg != NULL) {

WARNING:SPLIT_STRING: quoted string split across lines
#1012: FILE: drivers/dma/coh901318.c:631:
+	dev_vdbg(COHC_2_DEV(cohc), "[%s] chan_id %d pending_irqs %d"
+		 " nbr_active_done %ld\n", __func__,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1047: FILE: drivers/dma/coh901318.c:666:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1051: FILE: drivers/dma/coh901318.c:670:
+	BUG_ON(!cohc->allocated && (list_empty(&cohc->active) ||

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1057: FILE: drivers/dma/coh901318.c:676:
+	BUG_ON(cohc->pending_irqs == 0);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!coh901318_queue_start"
#1062: FILE: drivers/dma/coh901318.c:681:
+	if (cohc->pending_irqs == 0 && coh901318_queue_start(cohc) == NULL)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1065: FILE: drivers/dma/coh901318.c:684:
+	BUG_ON(list_empty(&cohc->active));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1073: FILE: drivers/dma/coh901318.c:692:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1093: FILE: drivers/dma/coh901318.c:712:
+	 *       minimize interrupt latency */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1110: FILE: drivers/dma/coh901318.c:729:
+			BUG_ON(1);

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#1118: FILE: drivers/dma/coh901318.c:737:
+					 "ignoring interrupt not caused by terminal count on channel %d\n", ch);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1120: FILE: drivers/dma/coh901318.c:739:
+				BUG_ON(1);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1125: FILE: drivers/dma/coh901318.c:744:
+					    COH901318_CX_STAT_SPACING*ch) &
 					                             ^

WARNING:TYPO_SPELLING: 'initate' may be misspelled - perhaps 'initiate'?
#1132: FILE: drivers/dma/coh901318.c:751:
+				 * in case tc_handle initate a new dma job
 				                     ^^^^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1157: FILE: drivers/dma/coh901318.c:776:
+			BUG_ON(1);

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#1164: FILE: drivers/dma/coh901318.c:783:
+					 "ignoring interrupt not caused by terminal count on channel %d\n", ch);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1167: FILE: drivers/dma/coh901318.c:786:
+				BUG_ON(1);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1171: FILE: drivers/dma/coh901318.c:790:
+					    COH901318_CX_STAT_SPACING*ch) &
 					                             ^

WARNING:TYPO_SPELLING: 'initate' may be misspelled - perhaps 'initiate'?
#1177: FILE: drivers/dma/coh901318.c:796:
+				 * in case tc_handle initate a new dma job
 				                     ^^^^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1218: FILE: drivers/dma/coh901318.c:837:
+	       COH901318_CX_CFG_SPACING*channel);
 	                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1220: FILE: drivers/dma/coh901318.c:839:
+	       COH901318_CX_CTRL_SPACING*channel);
 	                                ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1229: FILE: drivers/dma/coh901318.c:848:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#1271: FILE: drivers/dma/coh901318.c:890:
+	if (data == NULL)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1280: FILE: drivers/dma/coh901318.c:899:
+		coh901318_lli_fill_memcpy(

CHECK:BRACES: braces {} should be used on all arms of this statement
#1336: FILE: drivers/dma/coh901318.c:955:
+	if (direction == DMA_TO_DEVICE) {
[...]
+	} else if (direction == DMA_FROM_DEVICE) {
[...]
+	} else
[...]

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1345: FILE: drivers/dma/coh901318.c:964:
+		if (!(flags & DMA_COMPL_SKIP_SRC_UNMAP)) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1358: FILE: drivers/dma/coh901318.c:977:
+		if (!(flags & DMA_COMPL_SKIP_DEST_UNMAP)) {
+

CHECK:BRACES: Unbalanced braces around else statement
#1363: FILE: drivers/dma/coh901318.c:982:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1370: FILE: drivers/dma/coh901318.c:989:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1377: FILE: drivers/dma/coh901318.c:996:
+		unsigned int factor;
+		size = sg_dma_len(sg);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#1393: FILE: drivers/dma/coh901318.c:1012:
+	if (data == NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1507: FILE: drivers/dma/coh901318.c:1126:
+
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1514: FILE: drivers/dma/coh901318.c:1133:
+}
+void coh901318_base_init(struct dma_device *dma, const int *pick_chans,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1524: FILE: drivers/dma/coh901318.c:1143:
+		for (i = pick_chans[chans_i]; i <= pick_chans[chans_i+1]; i++) {
 		                                                     ^

CHECK:SPACING: No space is necessary after a cast
#1546: FILE: drivers/dma/coh901318.c:1165:
+				     (unsigned long) cohc);

CHECK:SPACING: No space is necessary after a cast
#1662: FILE: drivers/dma/coh901318.c:1281:
+		(u32) base->virtbase);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1702: FILE: drivers/dma/coh901318.c:1321:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1730: FILE: drivers/dma/coh901318_lli.c:1:
+/*

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'pool' may be better as '(pool)' to avoid precedence issues
#1748: FILE: drivers/dma/coh901318_lli.c:19:
+#define DEBUGFS_POOL_COUNTER_RESET(pool) (pool->debugfs_pool_counter = 0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'pool' may be better as '(pool)' to avoid precedence issues
#1749: FILE: drivers/dma/coh901318_lli.c:20:
+#define DEBUGFS_POOL_COUNTER_ADD(pool, add) (pool->debugfs_pool_counter += add)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#1758: FILE: drivers/dma/coh901318_lli.c:29:
+	if (data == NULL || data->link_addr == 0)

CHECK:SPACING: No space is necessary after a cast
#1761: FILE: drivers/dma/coh901318_lli.c:32:
+	return (struct coh901318_lli *) data->virt_link_addr;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1778: FILE: drivers/dma/coh901318_lli.c:49:
+{
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!head"
#1799: FILE: drivers/dma/coh901318_lli.c:70:
+	if (head == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lli"
#1812: FILE: drivers/dma/coh901318_lli.c:83:
+		if (lli == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lli"
#1845: FILE: drivers/dma/coh901318_lli.c:116:
+	if (lli == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!l"
#1850: FILE: drivers/dma/coh901318_lli.c:121:
+	if (l == NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1913: FILE: drivers/dma/coh901318_lli.c:184:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1919: FILE: drivers/dma/coh901318_lli.c:190:
+	} else if (dir == DMA_FROM_DEVICE) {
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1928: FILE: drivers/dma/coh901318_lli.c:199:
+		size_t block_size = MAX_DMA_PACKET_SIZE;
+		lli->control = ctrl_chained | MAX_DMA_PACKET_SIZE;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1935: FILE: drivers/dma/coh901318_lli.c:206:
+		 * (MAX_DMA_PACKET_SIZE*N + 1) */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1936: FILE: drivers/dma/coh901318_lli.c:207:
+		if (s < (MAX_DMA_PACKET_SIZE + MAX_DMA_PACKET_SIZE/2))
 		                                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1937: FILE: drivers/dma/coh901318_lli.c:208:
+			block_size = MAX_DMA_PACKET_SIZE/2;
 			                                ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lli"
#1976: FILE: drivers/dma/coh901318_lli.c:247:
+	if (lli == NULL)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1989: FILE: drivers/dma/coh901318_lli.c:260:
+		if (sg_is_chain(sg)) {
[...]
+		} else if (i == nents - 1)
[...]
+		else
[...]

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2000: FILE: drivers/dma/coh901318_lli.c:271:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2033: FILE: drivers/dma/coh901318_lli.c:304:
+			BUG_ON(lli->link_addr & 3);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2039: FILE: drivers/dma/coh901318_lli.c:310:
+
+	}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2053: FILE: drivers/dma/coh901318_lli.h:1:
+/*

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#2070: FILE: drivers/dma/coh901318_lli.h:18:
+	spinlock_t lock;

WARNING:TYPO_SPELLING: 'adress' may be misspelled - perhaps 'address'?
#2085: FILE: drivers/dma/coh901318_lli.h:33:
+ * @algin: adress alignemtn of lli:s
            ^^^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000054764.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 37 warnings, 72 checks, 2084 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000054764.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
