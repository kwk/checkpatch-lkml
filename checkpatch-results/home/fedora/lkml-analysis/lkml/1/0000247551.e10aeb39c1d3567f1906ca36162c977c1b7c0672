WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
SPI driver for analog to digital converters national semiconductor ADC081S101,

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#104: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#109: FILE: drivers/hwmon/adcxx.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#141: FILE: drivers/hwmon/adcxx.c:33:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#142: FILE: drivers/hwmon/adcxx.c:34:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#160: FILE: drivers/hwmon/adcxx.c:52:
+	struct mutex lock;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#167: FILE: drivers/hwmon/adcxx.c:59:
+static ssize_t adcxx_read(struct device *dev,
+		struct device_attribute *devattr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: drivers/hwmon/adcxx.c:74:
+	status = spi_write_then_read(spi, tx_buf, sizeof(tx_buf),
+					rx_buf, sizeof(rx_buf));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: drivers/hwmon/adcxx.c:77:
+		dev_warn(dev, "spi_write_then_read failed with status %d\n",
+				status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#200: FILE: drivers/hwmon/adcxx.c:92:
+static ssize_t adcxx_show_min(struct device *dev,
+		struct device_attribute *devattr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#207: FILE: drivers/hwmon/adcxx.c:99:
+static ssize_t adcxx_show_max(struct device *dev,
+		struct device_attribute *devattr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: drivers/hwmon/adcxx.c:117:
+static ssize_t adcxx_set_max(struct device *dev,
+	struct device_attribute *devattr, const char *buf, size_t count)

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#232: FILE: drivers/hwmon/adcxx.c:124:
+	if (strict_strtoul(buf, 10, &value))

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#255: FILE: drivers/hwmon/adcxx.c:147:
+	SENSOR_ATTR(name, S_IRUGO, adcxx_show_name, NULL, 0),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#258: FILE: drivers/hwmon/adcxx.c:150:
+	SENSOR_ATTR(in_min, S_IRUGO, adcxx_show_min, NULL, 0),

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#259: FILE: drivers/hwmon/adcxx.c:151:
+	SENSOR_ATTR(in_max, S_IWUSR | S_IRUGO, adcxx_show_max,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#260: FILE: drivers/hwmon/adcxx.c:152:
+	SENSOR_ATTR(in_max, S_IWUSR | S_IRUGO, adcxx_show_max,
+					adcxx_set_max, 0),

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#262: FILE: drivers/hwmon/adcxx.c:154:
+	SENSOR_ATTR(in0_input, S_IRUGO, adcxx_read, NULL, 0),

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#263: FILE: drivers/hwmon/adcxx.c:155:
+	SENSOR_ATTR(in1_input, S_IRUGO, adcxx_read, NULL, 1),

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#264: FILE: drivers/hwmon/adcxx.c:156:
+	SENSOR_ATTR(in2_input, S_IRUGO, adcxx_read, NULL, 2),

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#265: FILE: drivers/hwmon/adcxx.c:157:
+	SENSOR_ATTR(in3_input, S_IRUGO, adcxx_read, NULL, 3),

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#270: FILE: drivers/hwmon/adcxx.c:162:
+static int __devinit adcxx_probe(struct spi_device *spi, int channels)

WARNING:SIZEOF_PARENTHESIS: sizeof *adc should be sizeof(*adc)
#276: FILE: drivers/hwmon/adcxx.c:168:
+	adc = kzalloc(sizeof *adc, GFP_KERNEL);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#314: FILE: drivers/hwmon/adcxx.c:206:
+static int __devinit adcxx1s_probe(struct spi_device *spi)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#319: FILE: drivers/hwmon/adcxx.c:211:
+static int __devinit adcxx2s_probe(struct spi_device *spi)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#324: FILE: drivers/hwmon/adcxx.c:216:
+static int __devinit adcxx4s_probe(struct spi_device *spi)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#329: FILE: drivers/hwmon/adcxx.c:221:
+static int __devexit adcxx_remove(struct spi_device *spi)

WARNING:LINE_SPACING: Missing a blank line after declarations
#373: FILE: drivers/hwmon/adcxx.c:265:
+	int status;
+	status = spi_register_driver(&adcxx1s_driver);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000247551.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 18 warnings, 8 checks, 321 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000247551.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
