WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
master.kernel.org:/pub/scm/linux/kernel/git/jgarzik/netdev-2.6.git upstream-linus

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#112: FILE: drivers/net/3c59x.c:884:
+static int __devexit vortex_eisa_remove(struct device *device)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#147: FILE: drivers/net/mv643xx_eth.c:794:
+	mv_read (MV643XX_ETH_INTERRUPT_CAUSE_EXTEND_REG(port_num));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#281: FILE: drivers/net/myri10ge/myri10ge.c:2530:
+			   bridge->device == 0x4002 /* TIOCE pcie-port */ ) {

CHECK:SPACING: No space is necessary after a cast
#319: FILE: drivers/net/netxen/netxen_nic_hw.c:231:
+	       (unsigned long long) adapter->ctx_desc_phys_addr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#328: FILE: drivers/net/netxen/netxen_nic_hw.c:250:
+	printk("cmd_desc_phys_addr: 0x%llx\n",

CHECK:SPACING: No space is necessary after a cast
#329: FILE: drivers/net/netxen/netxen_nic_hw.c:251:
+	       (unsigned long long) hw->cmd_desc_phys_addr);

CHECK:SPACING: No space is necessary after a cast
#366: FILE: drivers/net/r8169.c:1685:
+	tp->timer.data = (unsigned long) dev;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#396: FILE: drivers/net/sky2.c:2181:
+				printk(KERN_NOTICE PFX "%s: hardware receive "

WARNING:SPLIT_STRING: quoted string split across lines
#397: FILE: drivers/net/sky2.c:2182:
+				printk(KERN_NOTICE PFX "%s: hardware receive "
+				       "checksum problem (status = %#x)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LINE_SPACING: Missing a blank line after declarations
#453: FILE: drivers/net/tokenring/ibmtr.c:372:
+	int err = ibmtr_probe(dev);
+	if (!err) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#463: FILE: drivers/net/tokenring/ibmtr.c:382:
 static int __devinit ibmtr_probe1(struct net_device *dev, int PIOaddr)

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#486: FILE: drivers/net/via-rhine.c:111:
 static char version[] __devinitdata =

WARNING:MISPLACED_INIT: __initdata should be placed after rhine_dmi_table[]
#491: FILE: drivers/net/via-rhine.c:1999:
+static struct dmi_system_id __initdata rhine_dmi_table[] = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

CHECK:BRACES: braces {} should be used on all arms of this statement
#515: FILE: drivers/net/via-rhine.c:2023:
+	if (dmi_check_system(rhine_dmi_table)) {
[...]
+	else if (avoid_D3)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#518: FILE: drivers/net/via-rhine.c:2026:
+		printk(KERN_WARNING "%s: Broken BIOS detected, avoid_D3 "

WARNING:SPLIT_STRING: quoted string split across lines
#519: FILE: drivers/net/via-rhine.c:2027:
+		printk(KERN_WARNING "%s: Broken BIOS detected, avoid_D3 "
+				    "enabled.\n",

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#522: FILE: drivers/net/via-rhine.c:2030:
+	}
+	else if (avoid_D3)

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#523: FILE: drivers/net/via-rhine.c:2031:
+		printk(KERN_INFO "%s: avoid_D3 set.\n", DRV_NAME);

ERROR:CODE_INDENT: code indent should use tabs where possible
#587: FILE: drivers/net/wireless/bcm43xx/bcm43xx_phy.c:950:
+^I^I^I          & 0xFF80) | 0x0003);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->freq.e == 0'
#616: FILE: drivers/net/wireless/bcm43xx/bcm43xx_wx.c:115:
+	if ((data->freq.e == 0) &&
+	    (data->freq.m >= 0) && (data->freq.m <= 1000)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->freq.m >= 0'
#616: FILE: drivers/net/wireless/bcm43xx/bcm43xx_wx.c:115:
+	if ((data->freq.e == 0) &&
+	    (data->freq.m >= 0) && (data->freq.m <= 1000)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->freq.m <= 1000'
#616: FILE: drivers/net/wireless/bcm43xx/bcm43xx_wx.c:115:
+	if ((data->freq.e == 0) &&
+	    (data->freq.m >= 0) && (data->freq.m <= 1000)) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000458078.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 13 warnings, 7 checks, 461 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000458078.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
