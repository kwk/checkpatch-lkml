WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#46: FILE: drivers/md/Kconfig:274:
+config DM_IOBAND
+	tristate "I/O bandwidth control (EXPERIMENTAL)"
+	depends on BLK_DEV_DM && EXPERIMENTAL
+	---help---
+	This device-mapper target allows to define how the
+	available bandwidth of a storage device should be
+	shared between processes, cgroups, the partitions or the LUNs.
+
+	Information on how to use dm-ioband is available in:
+	   <file:Documentation/device-mapper/ioband.txt>.
+
+	If unsure, say N.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#83: FILE: drivers/md/dm-ioband-ctl.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#125: FILE: drivers/md/dm-ioband-ctl.c:43:
+static int policy_init(struct ioband_device *dp, char *name,
+						int argc, char **argv)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#166: FILE: drivers/md/dm-ioband-ctl.c:84:
+static struct ioband_device *alloc_ioband_device(char *name,
+					int io_throttle, int io_limit)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*new)...) over kzalloc(sizeof(struct ioband_device)...)
#172: FILE: drivers/md/dm-ioband-ctl.c:90:
+	new = kzalloc(sizeof(struct ioband_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#211: FILE: drivers/md/dm-ioband-ctl.c:129:
+	strlcpy(new->g_name, name, sizeof(new->g_name));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#241: FILE: drivers/md/dm-ioband-ctl.c:159:
+static int is_ioband_device_flushed(struct ioband_device *dp,
+						int wait_completion)

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#247: FILE: drivers/md/dm-ioband-ctl.c:165:
+	if (dp->g_blocked || waitqueue_active(&dp->g_waitq))

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#250: FILE: drivers/md/dm-ioband-ctl.c:168:
+		if (waitqueue_active(&gp->c_waitq))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#256: FILE: drivers/md/dm-ioband-ctl.c:174:
+static void suspend_ioband_device(struct ioband_device *dp,
+				unsigned long flags, int wait_completion)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#281: FILE: drivers/md/dm-ioband-ctl.c:199:
+	wait_event_lock_irq(dp->g_waitq_flush,
+			is_ioband_device_flushed(dp, wait_completion),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#302: FILE: drivers/md/dm-ioband-ctl.c:220:
+static struct ioband_group *ioband_group_find(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#319: FILE: drivers/md/dm-ioband-ctl.c:237:
+static void ioband_group_add_node(struct rb_root *root,
+						struct ioband_group *gp)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#336: FILE: drivers/md/dm-ioband-ctl.c:254:
+static int ioband_group_init(struct ioband_group *gp,
+    struct ioband_group *head, struct ioband_device *dp, int id, char *param)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: drivers/md/dm-ioband-ctl.c:254:
+    struct ioband_group *head, struct ioband_device *dp, int id, char *param)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#381: FILE: drivers/md/dm-ioband-ctl.c:299:
+static void ioband_group_release(struct ioband_group *head,
+						struct ioband_group *gp)

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#463: FILE: drivers/md/dm-ioband-ctl.c:381:
+		r = strict_strtol(p, 0, id);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ioband_ctr', this function's name, in a string
#495: FILE: drivers/md/dm-ioband-ctl.c:413:
+	dprintk(KERN_ERR "ioband_ctr ioband device name:%s\n", argv[1]);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#497: FILE: drivers/md/dm-ioband-ctl.c:415:
+	r = strict_strtol(argv[2], 0, &val);

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#504: FILE: drivers/md/dm-ioband-ctl.c:422:
+	r = strict_strtol(argv[3], 0, &val);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#512: FILE: drivers/md/dm-ioband-ctl.c:430:
+	r = dm_get_device(ti, argv[0], 0, ti->len,
+				dm_table_get_mode(ti->table), &dev);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ioband_ctr', this function's name, in a string
#527: FILE: drivers/md/dm-ioband-ctl.c:445:
+		dprintk(KERN_ERR "ioband_ctr nr_requests:%lu\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#528: FILE: drivers/md/dm-ioband-ctl.c:446:
+		dprintk(KERN_ERR "ioband_ctr nr_requests:%lu\n",
+							q->nr_requests);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ioband_ctr', this function's name, in a string
#534: FILE: drivers/md/dm-ioband-ctl.c:452:
+	dprintk(KERN_ERR "ioband_ctr io_throttle:%d io_limit:%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#535: FILE: drivers/md/dm-ioband-ctl.c:453:
+	dprintk(KERN_ERR "ioband_ctr io_throttle:%d io_limit:%d\n",
+						io_throttle, io_limit);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*gp)...) over kzalloc(sizeof(struct ioband_group)...)
#552: FILE: drivers/md/dm-ioband-ctl.c:470:
+	gp = kzalloc(sizeof(struct ioband_group), GFP_KERNEL);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#638: FILE: drivers/md/dm-ioband-ctl.c:556:
+^I * ^Iit contains urgent I/O requests.$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#652: FILE: drivers/md/dm-ioband-ctl.c:570:
+	if (is_device_blocked(dp)
+	    && dp->g_blocked < dp->g_io_limit[0]+dp->g_io_limit[1]) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#652: FILE: drivers/md/dm-ioband-ctl.c:570:
+	    && dp->g_blocked < dp->g_io_limit[0]+dp->g_io_limit[1]) {
 	                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#703: FILE: drivers/md/dm-ioband-ctl.c:621:
+		wait_event_lock_irq(dp->g_waitq, !device_should_block(gp),
+						dp->g_lock, do_nothing());

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#706: FILE: drivers/md/dm-ioband-ctl.c:624:
+		wait_event_lock_irq(gp->c_waitq, !group_should_block(gp, bio),
+						dp->g_lock, do_nothing());

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#726: FILE: drivers/md/dm-ioband-ctl.c:644:
+	return dp->g_issued[0] < dp->g_io_limit[0]
+		|| dp->g_issued[1] < dp->g_io_limit[1];

WARNING:TYPO_SPELLING: 'currnt' may be misspelled - perhaps 'current'?
#738: FILE: drivers/md/dm-ioband-ctl.c:656:
+		 * file system with the currnt one would be all moved
 		                        ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#777: FILE: drivers/md/dm-ioband-ctl.c:695:
+static void release_urgent_bios(struct ioband_device *dp,
+		struct bio_list *issue_list, struct bio_list *pushback_list)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#794: FILE: drivers/md/dm-ioband-ctl.c:712:
+static int release_prio_bios(struct ioband_group *gp,
+		struct bio_list *issue_list, struct bio_list *pushback_list)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#828: FILE: drivers/md/dm-ioband-ctl.c:746:
+static int release_norm_bios(struct ioband_group *gp,
+		struct bio_list *issue_list, struct bio_list *pushback_list)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#865: FILE: drivers/md/dm-ioband-ctl.c:783:
+static inline void release_bios(struct ioband_group *gp,
+		struct bio_list *issue_list, struct bio_list *pushback_list)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#873: FILE: drivers/md/dm-ioband-ctl.c:791:
+static struct ioband_group *ioband_group_get(struct ioband_group *head,
+							struct bio *bio)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#892: FILE: drivers/md/dm-ioband-ctl.c:810:
+static int ioband_map(struct dm_target *ti, struct bio *bio,
+						union map_info *map_context)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#899: FILE: drivers/md/dm-ioband-ctl.c:817:
+#if 0	/* not supported yet */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#912: FILE: drivers/md/dm-ioband-ctl.c:830:
+		wait_event_lock_irq(dp->g_waitq_suspend,
+			!is_device_suspended(dp), dp->g_lock, do_nothing());

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ioband_map', this function's name, in a string
#934: FILE: drivers/md/dm-ioband-ctl.c:852:
+				dprintk(KERN_ERR "ioband_map: token refilled "

WARNING:SPLIT_STRING: quoted string split across lines
#935: FILE: drivers/md/dm-ioband-ctl.c:853:
+				dprintk(KERN_ERR "ioband_map: token refilled "
+						"gp:%p bio:%p\n", gp, bio);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#964: FILE: drivers/md/dm-ioband-ctl.c:882:
+		if (gp->c_blocked == gp->c_prio_blocked
+			&& !room_for_bio_rw(dp, prio_queue_direct(gp))) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1000: FILE: drivers/md/dm-ioband-ctl.c:918:
+	if (dp->g_blocked
+	    && dp->g_issued[0] + dp->g_issued[1] < dp->g_io_throttle) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ioband_conduct', this function's name, in a string
#1001: FILE: drivers/md/dm-ioband-ctl.c:919:
+		dprintk(KERN_ERR "ioband_conduct: token expired dp:%p "

WARNING:SPLIT_STRING: quoted string split across lines
#1002: FILE: drivers/md/dm-ioband-ctl.c:920:
+		dprintk(KERN_ERR "ioband_conduct: token expired dp:%p "
+			"issued(%d,%d) g_blocked(%d)\n", dp,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1017: FILE: drivers/md/dm-ioband-ctl.c:935:
+static int ioband_end_io(struct dm_target *ti, struct bio *bio,
+				int error, union map_info *map_context)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1040: FILE: drivers/md/dm-ioband-ctl.c:958:
+^I * ^I not to kick the workqueues so often.$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1045: FILE: drivers/md/dm-ioband-ctl.c:963:
+	else if (is_device_suspended(dp)
+				&& dp->g_issued[0] + dp->g_issued[1] == 0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1071: FILE: drivers/md/dm-ioband-ctl.c:989:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1073: FILE: drivers/md/dm-ioband-ctl.c:991:
+static void ioband_group_status(struct ioband_group *gp, int *szp,
+					char *result, unsigned int maxlen)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1084: FILE: drivers/md/dm-ioband-ctl.c:1002:
+		DMEMIT(" %lu %lu %lu",
+			bws->immediate + bws->deferred, bws->deferred,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1091: FILE: drivers/md/dm-ioband-ctl.c:1009:
+static int ioband_status(struct dm_target *ti, status_type_t type,
+					char *result, unsigned int maxlen)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1117: FILE: drivers/md/dm-ioband-ctl.c:1035:
+		DMEMIT("%s %s %d %d %s %s",
+				gp->c_dev->name, dp->g_name,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ioband_set_param', this function's name, in a string
#1171: FILE: drivers/md/dm-ioband-ctl.c:1089:
+			DMWARN("ioband_set_param: id=%ld not found.", id);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ioband_group_attach', this function's name, in a string
#1187: FILE: drivers/md/dm-ioband-ctl.c:1105:
+		DMWARN("ioband_group_attach: invalid id:%d", id);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ioband_group_attach', this function's name, in a string
#1191: FILE: drivers/md/dm-ioband-ctl.c:1109:
+		DMWARN("ioband_group_attach: "

WARNING:SPLIT_STRING: quoted string split across lines
#1192: FILE: drivers/md/dm-ioband-ctl.c:1110:
+		DMWARN("ioband_group_attach: "
+		       "no ioband group type is specified");

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*sub_gp)...) over kzalloc(sizeof(struct ioband_group)...)
#1196: FILE: drivers/md/dm-ioband-ctl.c:1114:
+	sub_gp = kzalloc(sizeof(struct ioband_group), GFP_KERNEL);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ioband_group_detach', this function's name, in a string
#1215: FILE: drivers/md/dm-ioband-ctl.c:1133:
+		DMWARN("ioband_group_detach: invalid id:%d", id);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ioband_group_detach', this function's name, in a string
#1222: FILE: drivers/md/dm-ioband-ctl.c:1140:
+		DMWARN("ioband_group_detach: invalid id:%d", id);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1243: FILE: drivers/md/dm-ioband-ctl.c:1161:
+ * ^I"io_throttle" <value>$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1244: FILE: drivers/md/dm-ioband-ctl.c:1162:
+ * ^I"io_limit"    <value>$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1253: FILE: drivers/md/dm-ioband-ctl.c:1171:
+static int __ioband_message(struct dm_target *ti,
+					unsigned int argc, char **argv)

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#1279: FILE: drivers/md/dm-ioband-ctl.c:1197:
+		r = strict_strtol(argv[1], 0, &val);

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#1285: FILE: drivers/md/dm-ioband-ctl.c:1203:
+		r = strict_strtol(argv[1], 0, &val);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1288: FILE: drivers/md/dm-ioband-ctl.c:1206:
+		if (r || val < 0 ||
+			val > dp->g_io_limit[0] || val > dp->g_io_limit[1]) {

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#1297: FILE: drivers/md/dm-ioband-ctl.c:1215:
+		r = strict_strtol(argv[1], 0, &val);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1315: FILE: drivers/md/dm-ioband-ctl.c:1233:
+		dp->g_io_limit[0] = dp->g_io_limit[1] = val;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#1322: FILE: drivers/md/dm-ioband-ctl.c:1240:
+		r = strict_strtol(argv[1], 0, &val);

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#1327: FILE: drivers/md/dm-ioband-ctl.c:1245:
+		r = strict_strtol(argv[1], 0, &val);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1334: FILE: drivers/md/dm-ioband-ctl.c:1252:
+		return r;
+	} else {

WARNING:SPLIT_STRING: quoted string split across lines
#1396: FILE: drivers/md/dm-ioband-ctl.c:1314:
+MODULE_AUTHOR("Hirokazu Takahashi <taka@valinux.co.jp>, "
+	      "Ryo Tsuruta <ryov@valinux.co.jp");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1402: FILE: drivers/md/dm-ioband-policy.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1422: FILE: drivers/md/dm-ioband-policy.c:21:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1435: FILE: drivers/md/dm-ioband-policy.c:34:
+	dprintk(KERN_ERR "make_epoch %d --> %d\n",
+						dp->g_epoch-1, dp->g_epoch);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1435: FILE: drivers/md/dm-ioband-policy.c:34:
+						dp->g_epoch-1, dp->g_epoch);
 						           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1455: FILE: drivers/md/dm-ioband-policy.c:54:
+	iopri = gp->c_token*IOBAND_IOPRIO_BASE/gp->c_token_init_value + 1;
 	                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1455: FILE: drivers/md/dm-ioband-policy.c:54:
+	iopri = gp->c_token*IOBAND_IOPRIO_BASE/gp->c_token_init_value + 1;
 	                                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1459: FILE: drivers/md/dm-ioband-policy.c:58:
+		iopri += IOBAND_IOPRIO_BASE*2;
 		                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1484: FILE: drivers/md/dm-ioband-policy.c:83:
+		dprintk(KERN_ERR "refill token: yet empty gp:%p token:%d\n",
+							gp, gp->c_token);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1490: FILE: drivers/md/dm-ioband-policy.c:89:
+static int consume_token(struct ioband_group *gp, struct bio *bio,
+					 int count, int flag, int batch)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1493: FILE: drivers/md/dm-ioband-policy.c:92:
+	struct ioband_device *dp = gp->c_banddev;
+	if (gp != dp->g_current) {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#1514: FILE: drivers/md/dm-ioband-policy.c:113:
+	uint64_t tmp;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1520: FILE: drivers/md/dm-ioband-policy.c:119:
+		if (dp->g_weight_total == 0)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1521: FILE: drivers/md/dm-ioband-policy.c:120:
+			p->c_token = p->c_token_init_value = p->c_limit = 1;

CHECK:BRACES: Unbalanced braces around else statement
#1522: FILE: drivers/md/dm-ioband-policy.c:121:
+		else {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1525: FILE: drivers/md/dm-ioband-policy.c:124:
+			p->c_token = p->c_token_init_value = tmp + 1;

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#1541: FILE: drivers/md/dm-ioband-policy.c:140:
+	err = strict_strtol(value, 0, &val);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1548: FILE: drivers/md/dm-ioband-policy.c:147:
+		if (!err && val > 0) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1551: FILE: drivers/md/dm-ioband-policy.c:150:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1578: FILE: drivers/md/dm-ioband-policy.c:177:
+static void policy_weight_show(struct ioband_group *gp, int *szp,
+					char *result, unsigned int maxlen)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1599: FILE: drivers/md/dm-ioband-policy.c:198:
+
+

WARNING:TYPO_SPELLING: 'initalize' may be misspelled - perhaps 'initialize'?
#1619: FILE: drivers/md/dm-ioband-policy.c:218:
+ * g_group_ctr    : To initalize the policy own members of struct ioband_group.
                        ^^^^^^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1634: FILE: drivers/md/dm-ioband-policy.c:233:
+	if (argc < 1)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1636: FILE: drivers/md/dm-ioband-policy.c:235:
+	else {

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#1637: FILE: drivers/md/dm-ioband-policy.c:236:
+		r = strict_strtol(argv[0], 0, &val);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1657: FILE: drivers/md/dm-ioband-policy.c:256:
+}
+/* weight balancing policy based on the number of I/Os. --- End --- */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1659: FILE: drivers/md/dm-ioband-policy.c:258:
+
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1667: FILE: drivers/md/dm-ioband-policy.c:266:
+							TOKEN_BATCH_RATIO<<3);
 							                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1671: FILE: drivers/md/dm-ioband-policy.c:270:
+static int w2_policy_weight_init(struct ioband_device *dp,
+							int argc, char **argv)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1676: FILE: drivers/md/dm-ioband-policy.c:275:
+	if (argc < 1)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1678: FILE: drivers/md/dm-ioband-policy.c:277:
+	else {

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#1679: FILE: drivers/md/dm-ioband-policy.c:278:
+		r = strict_strtol(argv[0], 0, &val);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1693: FILE: drivers/md/dm-ioband-policy.c:292:
+}
+/* weight balancing policy based on I/O size. --- End --- */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1695: FILE: drivers/md/dm-ioband-policy.c:294:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1697: FILE: drivers/md/dm-ioband-policy.c:296:
+static int policy_default_init(struct ioband_device *dp,
+					int argc, char **argv)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1712: FILE: drivers/md/dm-ioband-type.c:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1792: FILE: drivers/md/dm-ioband.h:1:
+/*

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1819: FILE: drivers/md/dm-ioband.h:28:
+	spinlock_t	g_lock;

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#1820: FILE: drivers/md/dm-ioband.h:29:
+	struct mutex	g_lock_device;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ioband_group *' should also have an identifier name
#1832: FILE: drivers/md/dm-ioband.h:41:
+	int	(*g_can_submit)(struct ioband_group *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ioband_group *' should also have an identifier name
#1833: FILE: drivers/md/dm-ioband.h:42:
+	int	(*g_prepare_bio)(struct ioband_group *, struct bio *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#1833: FILE: drivers/md/dm-ioband.h:42:
+	int	(*g_prepare_bio)(struct ioband_group *, struct bio *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1833: FILE: drivers/md/dm-ioband.h:42:
+	int	(*g_prepare_bio)(struct ioband_group *, struct bio *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ioband_device *' should also have an identifier name
#1834: FILE: drivers/md/dm-ioband.h:43:
+	int	(*g_restart_bios)(struct ioband_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ioband_group *' should also have an identifier name
#1835: FILE: drivers/md/dm-ioband.h:44:
+	void	(*g_hold_bio)(struct ioband_group *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#1835: FILE: drivers/md/dm-ioband.h:44:
+	void	(*g_hold_bio)(struct ioband_group *, struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ioband_group *' should also have an identifier name
#1836: FILE: drivers/md/dm-ioband.h:45:
+	struct bio * (*g_pop_bio)(struct ioband_group *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ioband_group *' should also have an identifier name
#1837: FILE: drivers/md/dm-ioband.h:46:
+	int	(*g_group_ctr)(struct ioband_group *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1837: FILE: drivers/md/dm-ioband.h:46:
+	int	(*g_group_ctr)(struct ioband_group *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ioband_group *' should also have an identifier name
#1838: FILE: drivers/md/dm-ioband.h:47:
+	void	(*g_group_dtr)(struct ioband_group *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ioband_group *' should also have an identifier name
#1839: FILE: drivers/md/dm-ioband.h:48:
+	int	(*g_set_param)(struct ioband_group *, char *cmd, char *value);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ioband_group *' should also have an identifier name
#1840: FILE: drivers/md/dm-ioband.h:49:
+	int	(*g_should_block)(struct ioband_group *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ioband_group *' should also have an identifier name
#1841: FILE: drivers/md/dm-ioband.h:50:
+	void	(*g_show)(struct ioband_group *, int *, char *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#1841: FILE: drivers/md/dm-ioband.h:50:
+	void	(*g_show)(struct ioband_group *, int *, char *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1841: FILE: drivers/md/dm-ioband.h:50:
+	void	(*g_show)(struct ioband_group *, int *, char *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1841: FILE: drivers/md/dm-ioband.h:50:
+	void	(*g_show)(struct ioband_group *, int *, char *, unsigned int);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1926: FILE: drivers/md/dm-ioband.h:135:
+	((gp)->c_flags & (IOG_PRIO_QUEUE|IOG_PRIO_BIO_WRITE) == IOG_PRIO_QUEUE)
 	                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1929: FILE: drivers/md/dm-ioband.h:138:
+	((gp)->c_flags |= (IOG_PRIO_QUEUE|IOG_PRIO_BIO_WRITE))
 	                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1931: FILE: drivers/md/dm-ioband.h:140:
+	((gp)->c_flags &= ~(IOG_PRIO_QUEUE|IOG_PRIO_BIO_WRITE))
 	                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1933: FILE: drivers/md/dm-ioband.h:142:
+	((gp)->c_flags & (IOG_PRIO_QUEUE|IOG_PRIO_BIO_WRITE) == \
 	                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1934: FILE: drivers/md/dm-ioband.h:143:
+		(IOG_PRIO_QUEUE|IOG_PRIO_BIO_WRITE))
 		               ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'direct' may be better as '(direct)' to avoid precedence issues
#1936: FILE: drivers/md/dm-ioband.h:145:
+#define set_prio_queue(gp, direct) \
+	((gp)->c_flags |= (IOG_PRIO_QUEUE|direct))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1937: FILE: drivers/md/dm-ioband.h:146:
+	((gp)->c_flags |= (IOG_PRIO_QUEUE|direct))
 	                                 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1942: FILE: drivers/md/dm-ioband.h:151:
+
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ioband_device *' should also have an identifier name
#1945: FILE: drivers/md/dm-ioband.h:154:
+	int	  (*p_policy_init)(struct ioband_device *, int, char **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1945: FILE: drivers/md/dm-ioband.h:154:
+	int	  (*p_policy_init)(struct ioband_device *, int, char **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char **' should also have an identifier name
#1945: FILE: drivers/md/dm-ioband.h:154:
+	int	  (*p_policy_init)(struct ioband_device *, int, char **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#1952: FILE: drivers/md/dm-ioband.h:161:
+	int	  (*t_getid)(struct bio *);

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#1959: FILE: drivers/md/dm-ioband.h:168:
+#define dprintk(format, a...) \
+	if (ioband_debug > 0) ioband_debug--, printk(format, ##a)

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1960: FILE: drivers/md/dm-ioband.h:169:
+	if (ioband_debug > 0) ioband_debug--, printk(format, ##a)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1960: FILE: drivers/md/dm-ioband.h:169:
+	if (ioband_debug > 0) ioband_debug--, printk(format, ##a)

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000259159.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 65 warnings, 77 checks, 1897 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000259159.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
