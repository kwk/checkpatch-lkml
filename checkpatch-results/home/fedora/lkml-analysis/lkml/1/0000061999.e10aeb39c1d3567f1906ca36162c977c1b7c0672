CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#222: FILE: arch/arm/include/asm/highmem.h:26:
+extern void *kmap_atomic(struct page *page);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#223: FILE: arch/arm/include/asm/highmem.h:27:
+extern void kunmap_atomic(void *kvaddr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#224: FILE: arch/arm/include/asm/highmem.h:28:
+extern void *kmap_atomic_pfn(unsigned long pfn);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#240: FILE: arch/arm/include/asm/pgtable.h:266:
+#define pte_offset_map(dir,addr)	(__pte_map(dir) + __pte_index(addr))
                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#241: FILE: arch/arm/include/asm/pgtable.h:267:
+#define pte_offset_map_nested(dir,addr)	(__pte_map(dir) + __pte_index(addr))
                                  ^

CHECK:SPACING: No space is necessary after a cast
#666: FILE: arch/microblaze/include/asm/pgtable.h:481:
+	((pte_t *) kmap_atomic(pmd_page(*(dir))) + pte_index(addr))

CHECK:SPACING: No space is necessary after a cast
#669: FILE: arch/microblaze/include/asm/pgtable.h:483:
+	((pte_t *) kmap_atomic(pmd_page(*(dir))) + pte_index(addr))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#689: FILE: arch/mips/include/asm/highmem.h:50:
+extern void *__kmap_atomic(struct page *page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#690: FILE: arch/mips/include/asm/highmem.h:51:
+extern void __kunmap_atomic(void *kvaddr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#691: FILE: arch/mips/include/asm/highmem.h:52:
+extern void *kmap_atomic_pfn(unsigned long pfn);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#815: FILE: arch/powerpc/include/asm/highmem.h:63:
+extern void *kmap_atomic_prot(struct page *page,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#818: FILE: arch/powerpc/include/asm/highmem.h:65:
+extern void kunmap_atomic(void *kvaddr);

CHECK:SPACING: No space is necessary after a cast
#843: FILE: arch/powerpc/include/asm/pgtable-ppc32.h:311:
+	((pte_t *) kmap_atomic(pmd_page(*(dir))) + pte_index(addr))

CHECK:SPACING: No space is necessary after a cast
#846: FILE: arch/powerpc/include/asm/pgtable-ppc32.h:313:
+	((pte_t *) kmap_atomic(pmd_page(*(dir))) + pte_index(addr))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#971: FILE: arch/sparc/include/asm/highmem.h:73:
+extern void *kmap_atomic(struct page *page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#972: FILE: arch/sparc/include/asm/highmem.h:74:
+extern void kunmap_atomic(void *kvaddr);

CHECK:SPACING: No space is necessary after a cast
#1013: FILE: arch/um/kernel/skas/uaccess.c:71:
+	addr = (unsigned long) kmap_atomic(page) +

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1894: FILE: drivers/gpu/drm/i915/i915_gem_debug.c:60:
+	uint32_t *mem = kmap_atomic(page);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2567: FILE: drivers/scsi/gdth.c:2310:
+            address = kmap_atomic(sg_page(sl)) + sl->offset;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2567: FILE: drivers/scsi/gdth.c:2310:
+            address = kmap_atomic(sg_page(sl)) + sl->offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2571: FILE: drivers/scsi/gdth.c:2313:
+            kunmap_atomic(address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2571: FILE: drivers/scsi/gdth.c:2313:
+            kunmap_atomic(address);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2584: FILE: drivers/scsi/ips.c:1512:
+                buffer = kmap_atomic(sg_page(sg)) + sg->offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2584: FILE: drivers/scsi/ips.c:1512:
+                buffer = kmap_atomic(sg_page(sg)) + sg->offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2588: FILE: drivers/scsi/ips.c:1515:
+                        kunmap_atomic(buffer - sg->offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2588: FILE: drivers/scsi/ips.c:1515:
+                        kunmap_atomic(buffer - sg->offset);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2593: FILE: drivers/scsi/ips.c:1519:
+                kunmap_atomic(buffer - sg->offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2593: FILE: drivers/scsi/ips.c:1519:
+                kunmap_atomic(buffer - sg->offset);$

CHECK:CAMELCASE: Avoid CamelCase: <Packet>
#2893: FILE: drivers/staging/hv/RndisFilter.c:413:
+			pfn_to_page(Packet->PageBuffers[0].Pfn));

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <PageBuffers>
#2893: FILE: drivers/staging/hv/RndisFilter.c:413:
+			pfn_to_page(Packet->PageBuffers[0].Pfn));

CHECK:CAMELCASE: Avoid CamelCase: <Pfn>
#2893: FILE: drivers/staging/hv/RndisFilter.c:413:
+			pfn_to_page(Packet->PageBuffers[0].Pfn));

CHECK:CAMELCASE: Avoid CamelCase: <rndisHeader>
#2902: FILE: drivers/staging/hv/RndisFilter.c:451:
+	kunmap_atomic(rndisHeader - Packet->PageBuffers[0].Offset);

CHECK:CAMELCASE: Avoid CamelCase: <Offset>
#2902: FILE: drivers/staging/hv/RndisFilter.c:451:
+	kunmap_atomic(rndisHeader - Packet->PageBuffers[0].Offset);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#2943: FILE: drivers/staging/hv/storvsc_drv.c:558:
+					bounce_addr = (unsigned long)kmap_atomic(sg_page((&bounce_sgl[j])));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#2976: FILE: drivers/staging/hv/storvsc_drv.c:618:
+					bounce_addr = (unsigned long)kmap_atomic(sg_page((&bounce_sgl[j])));

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#3402: FILE: fs/btrfs/ctree.h:1198:
+	type *p = kmap_atomic(eb->first_page);		\
 	     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#3412: FILE: fs/btrfs/ctree.h:1206:
+	type *p = kmap_atomic(eb->first_page);		\
 	     ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#4352: FILE: fs/nfs/nfs2xdr.c:450:
+	kaddr = p = kmap_atomic(*page);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#4386: FILE: fs/nfs/nfs3xdr.c:540:
+	kaddr = p = kmap_atomic(*page);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#4404: FILE: fs/nfs/nfs3xdr.c:862:
+	kaddr = (char*)kmap_atomic(rcvbuf->pages[0]);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#4420: FILE: fs/nfs/nfs4proc.c:168:
+	start = p = kmap_atomic(*readdir->pages);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#4442: FILE: fs/nfs/nfs4xdr.c:4101:
+	kaddr = p = kmap_atomic(page);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#5499: FILE: fs/ntfs/super.c:2492:
+		kaddr = (u32*)kmap_atomic(page);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#5517: FILE: fs/ntfs/super.c:2563:
+		kaddr = (u32*)kmap_atomic(page);

CHECK:SPACING: No space is necessary after a cast
#5783: FILE: include/linux/bio.h:466:
+	addr = (unsigned long) kmap_atomic(bvec->bv_page);

CHECK:SPACING: No space is necessary after a cast
#5792: FILE: include/linux/bio.h:478:
+	kunmap_atomic((void *) ptr);

CHECK:SPACING: No space is necessary after a cast
#6145: FILE: mm/shmem.c:166:
+	(void) kmap_atomic(ZERO_PAGE(0));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000061999.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 7 warnings, 30 checks, 5149 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000061999.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
