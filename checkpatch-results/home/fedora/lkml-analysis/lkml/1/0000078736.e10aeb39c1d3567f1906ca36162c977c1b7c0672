WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#58: FILE: drivers/scsi/bfa/fcbuild.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#92: FILE: drivers/scsi/bfa/fcbuild.h:35:
+#define fcif_sof_set(_ifhdr, _sof)	(_ifhdr)->sof = FC_ ## _sof

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#93: FILE: drivers/scsi/bfa/fcbuild.h:36:
+#define fcif_eof_set(_ifhdr, _eof)	(_ifhdr)->eof = FC_ ## _eof

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_s' - possible side-effects?
#98: FILE: drivers/scsi/bfa/fcbuild.h:41:
+#define fc_roundup(_l, _s) (((_l) + ((_s) - 1)) & ~((_s) - 1))

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#119: FILE: drivers/scsi/bfa/fcbuild.h:62:
+	switch (speed) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#144: FILE: drivers/scsi/bfa/fcbuild.h:87:
+	switch (op_speed) {
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#161: FILE: drivers/scsi/bfa/fcbuild.h:104:
+}
+enum fc_parse_status {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#188: FILE: drivers/scsi/bfa/fcbuild.h:131:
+u16 fc_flogi_build(struct fchs_s *fchs, struct fc_logi_s *flogi,
+			u32 s_id, u16 ox_id, wwn_t port_name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#192: FILE: drivers/scsi/bfa/fcbuild.h:135:
+u16 fc_fdisc_build(struct fchs_s *buf, struct fc_logi_s *flogi,
+			u32 s_id, u16 ox_id, wwn_t port_name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: drivers/scsi/bfa/fcbuild.h:138:
+u16 fc_flogi_acc_build(struct fchs_s *fchs, struct fc_logi_s *flogi,
+			u32 s_id, u16 ox_id, wwn_t port_name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#199: FILE: drivers/scsi/bfa/fcbuild.h:142:
+u16 fc_plogi_build(struct fchs_s *fchs, void *pld, u32 d_id,
+			u32 s_id, u16 ox_id, wwn_t port_name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: drivers/scsi/bfa/fcbuild.h:146:
+u16 fc_abts_build(struct fchs_s *buf, u32 d_id, u32 s_id,
+			u16 ox_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#206: FILE: drivers/scsi/bfa/fcbuild.h:149:
+u16 fc_rrq_build(struct fchs_s *buf, struct fc_rrq_s *rrq, u32 d_id,
+			u32 s_id, u16 ox_id, u16 rrq_oxid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#209: FILE: drivers/scsi/bfa/fcbuild.h:152:
+u16 fc_rspnid_build(struct fchs_s *fchs, void *pld, u32 s_id,
+			u16 ox_id, u8 *name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: drivers/scsi/bfa/fcbuild.h:154:
+u16 fc_rftid_build(struct fchs_s *fchs, void *pld, u32 s_id,
+			u16 ox_id, enum bfa_port_role role);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#213: FILE: drivers/scsi/bfa/fcbuild.h:156:
+u16 fc_rftid_build_sol(struct fchs_s *fchs, void *pyld, u32 s_id,
+			u16 ox_id, u8 *fc4_bitmap,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#216: FILE: drivers/scsi/bfa/fcbuild.h:159:
+u16 fc_rffid_build(struct fchs_s *fchs, void *pyld, u32 s_id,
+			u16 ox_id, u8 fc4_type, u8 fc4_ftrs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#218: FILE: drivers/scsi/bfa/fcbuild.h:161:
+u16 fc_gidpn_build(struct fchs_s *fchs, void *pyld, u32 s_id,
+			u16 ox_id, wwn_t port_name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#220: FILE: drivers/scsi/bfa/fcbuild.h:163:
+u16 fc_gpnid_build(struct fchs_s *fchs, void *pld, u32 s_id,
+			u16 ox_id, u32 port_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#222: FILE: drivers/scsi/bfa/fcbuild.h:165:
+u16 fc_scr_build(struct fchs_s *fchs, struct fc_scr_s *scr,
+			u8 set_br_reg, u32 s_id, u16 ox_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#224: FILE: drivers/scsi/bfa/fcbuild.h:167:
+u16 fc_plogi_acc_build(struct fchs_s *fchs, void *pld, u32 d_id,
+			u32 s_id, u16 ox_id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#228: FILE: drivers/scsi/bfa/fcbuild.h:171:
+u16 fc_adisc_build(struct fchs_s *fchs, struct fc_adisc_s *adisc,
+			u32 d_id, u32 s_id, u16 ox_id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#231: FILE: drivers/scsi/bfa/fcbuild.h:174:
+enum fc_parse_status fc_adisc_parse(struct fchs_s *fchs, void *pld,
+			u32 host_dap,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#234: FILE: drivers/scsi/bfa/fcbuild.h:177:
+enum fc_parse_status fc_adisc_rsp_parse(struct fc_adisc_s *adisc, int len,
+			wwn_t port_name, wwn_t node_name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#236: FILE: drivers/scsi/bfa/fcbuild.h:179:
+u16 fc_adisc_acc_build(struct fchs_s *fchs, struct fc_adisc_s *adisc,
+			u32 d_id, u32 s_id, u16 ox_id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: drivers/scsi/bfa/fcbuild.h:182:
+u16 fc_ls_rjt_build(struct fchs_s *fchs, struct fc_ls_rjt_s *ls_rjt,
+			u32 d_id, u32 s_id, u16 ox_id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#242: FILE: drivers/scsi/bfa/fcbuild.h:185:
+u16 fc_ls_acc_build(struct fchs_s *fchs, struct fc_els_cmd_s *els_cmd,
+			u32 d_id, u32 s_id, u16 ox_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#244: FILE: drivers/scsi/bfa/fcbuild.h:187:
+u16 fc_prli_build(struct fchs_s *fchs, void *pld, u32 d_id,
+			u32 s_id, u16 ox_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#248: FILE: drivers/scsi/bfa/fcbuild.h:191:
+u16 fc_prli_acc_build(struct fchs_s *fchs, void *pld, u32 d_id,
+			u32 s_id, u16 ox_id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#251: FILE: drivers/scsi/bfa/fcbuild.h:194:
+u16 fc_rnid_build(struct fchs_s *fchs, struct fc_rnid_cmd_s *rnid,
+			u32 d_id, u32 s_id, u16 ox_id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#254: FILE: drivers/scsi/bfa/fcbuild.h:197:
+u16 fc_rnid_acc_build(struct fchs_s *fchs, struct fc_rnid_acc_s *rnid_acc,
+			u32 d_id, u32 s_id, u16 ox_id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#260: FILE: drivers/scsi/bfa/fcbuild.h:203:
+u16 fc_rpsc2_build(struct fchs_s *fchs, struct fc_rpsc2_cmd_s *rps2c,
+			u32 d_id, u32 s_id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#263: FILE: drivers/scsi/bfa/fcbuild.h:206:
+u16 fc_rpsc_build(struct fchs_s *fchs, struct fc_rpsc_cmd_s *rpsc,
+			u32 d_id, u32 s_id, u16 ox_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#265: FILE: drivers/scsi/bfa/fcbuild.h:208:
+u16 fc_rpsc_acc_build(struct fchs_s *fchs, struct fc_rpsc_acc_s *rpsc_acc,
+			u32 d_id, u32 s_id, u16 ox_id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#268: FILE: drivers/scsi/bfa/fcbuild.h:211:
+u16 fc_gid_ft_build(struct fchs_s *fchs, void *pld, u32 s_id,
+			u8 fc4_type);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#270: FILE: drivers/scsi/bfa/fcbuild.h:213:
+u16 fc_rpnid_build(struct fchs_s *fchs, void *pyld, u32 s_id,
+			u32 port_id, wwn_t port_name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#272: FILE: drivers/scsi/bfa/fcbuild.h:215:
+u16 fc_rnnid_build(struct fchs_s *fchs, void *pyld, u32 s_id,
+			u32 port_id, wwn_t node_name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: drivers/scsi/bfa/fcbuild.h:217:
+u16 fc_rcsid_build(struct fchs_s *fchs, void *pyld, u32 s_id,
+			u32 port_id, u32 cos);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#276: FILE: drivers/scsi/bfa/fcbuild.h:219:
+u16 fc_rptid_build(struct fchs_s *fchs, void *pyld, u32 s_id,
+			u32 port_id, u8 port_type);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#278: FILE: drivers/scsi/bfa/fcbuild.h:221:
+u16 fc_ganxt_build(struct fchs_s *fchs, void *pyld, u32 s_id,
+			u32 port_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#280: FILE: drivers/scsi/bfa/fcbuild.h:223:
+u16 fc_logo_build(struct fchs_s *fchs, struct fc_logo_s *logo,
+			u32 d_id, u32 s_id, u16 ox_id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#283: FILE: drivers/scsi/bfa/fcbuild.h:226:
+u16 fc_logo_acc_build(struct fchs_s *fchs, void *pld, u32 d_id,
+			u32 s_id, u16 ox_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#285: FILE: drivers/scsi/bfa/fcbuild.h:228:
+u16 fc_fdmi_reqhdr_build(struct fchs_s *fchs, void *pyld, u32 s_id,
+			u16 cmd_code);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#287: FILE: drivers/scsi/bfa/fcbuild.h:230:
+u16 fc_gmal_req_build(struct fchs_s *fchs, void *pyld, u32 s_id,
+			wwn_t wwn);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#289: FILE: drivers/scsi/bfa/fcbuild.h:232:
+u16 fc_gfn_req_build(struct fchs_s *fchs, void *pyld, u32 s_id,
+			wwn_t wwn);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#292: FILE: drivers/scsi/bfa/fcbuild.h:235:
+void fc_els_req_build(struct fchs_s *fchs, u32 d_id, u32 s_id,
+			u16 ox_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#295: FILE: drivers/scsi/bfa/fcbuild.h:238:
+enum fc_parse_status fc_plogi_rsp_parse(struct fchs_s *fchs, int len,
+			 wwn_t port_name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#298: FILE: drivers/scsi/bfa/fcbuild.h:241:
+enum fc_parse_status fc_pdisc_parse(struct fchs_s *fchs, wwn_t node_name,
+			wwn_t port_name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#300: FILE: drivers/scsi/bfa/fcbuild.h:243:
+u16 fc_ba_acc_build(struct fchs_s *fchs, struct fc_ba_acc_s *ba_acc,
+			u32 d_id, u32 s_id, u16 ox_id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#304: FILE: drivers/scsi/bfa/fcbuild.h:247:
+u16 fc_tprlo_acc_build(struct fchs_s *fchs,
+			struct fc_tprlo_acc_s *tprlo_acc,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#308: FILE: drivers/scsi/bfa/fcbuild.h:251:
+u16 fc_prlo_acc_build(struct fchs_s *fchs, struct fc_prlo_acc_s *prlo_acc,
+			u32 d_id, u32 s_id, u16 ox_id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#312: FILE: drivers/scsi/bfa/fcbuild.h:255:
+u16 fc_pdisc_build(struct fchs_s *fchs, u32 d_id, u32 s_id,
+			u16 ox_id, wwn_t port_name, wwn_t node_name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#316: FILE: drivers/scsi/bfa/fcbuild.h:259:
+u16 fc_prlo_build(struct fchs_s *fchs, u32 d_id, u32 s_id,
+			u16 ox_id, int num_pages);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#319: FILE: drivers/scsi/bfa/fcbuild.h:262:
+u16 fc_tprlo_build(struct fchs_s *fchs, u32 d_id, u32 s_id,
+			u16 ox_id, int num_pages,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#323: FILE: drivers/scsi/bfa/fcbuild.h:266:
+u16 fc_ba_rjt_build(struct fchs_s *fchs, u32 d_id, u32 s_id,
+			u16 ox_id, u32 reason_code,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#326: FILE: drivers/scsi/bfa/fcbuild.h:269:
+u16 fc_gnnid_build(struct fchs_s *fchs, void *pyld, u32 s_id,
+			u16 ox_id, u32 port_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#329: FILE: drivers/scsi/bfa/fcbuild.h:272:
+u16 fc_rscn_build(struct fchs_s *fchs, struct fc_rscn_pl_s *rscn,
+			u32 s_id, u16 ox_id);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#335: FILE: drivers/scsi/bfa/fcpim.c:1:
+/*

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#466: FILE: drivers/scsi/bfa/fcpim.c:132:
+
+}

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#623: FILE: drivers/scsi/bfa/fcpim.c:289:
+		if (bfa_fcs_port_is_online(itnim->rport->port) == BFA_TRUE) {
[...]
+		} else {
[...]

WARNING:TYPO_SPELLING: 'truned' may be misspelled - perhaps 'turned'?
#665: FILE: drivers/scsi/bfa/fcpim.c:331:
+ * This ITN is marked as no_op and is not active and will not be truned into
                                                                  ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#696: FILE: drivers/scsi/bfa/fcpim.c:362:
+
+

CHECK:SPACING: No space is necessary after a cast
#799: FILE: drivers/scsi/bfa/fcpim.c:465:
+	els_cmd = (struct fc_els_cmd_s *) BFA_FCXP_RSP_PLD(fcxp);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#802: FILE: drivers/scsi/bfa/fcpim.c:468:
+		prli_resp = (struct fc_prli_s *) els_cmd;

CHECK:SPACING: No space is necessary after a cast
#834: FILE: drivers/scsi/bfa/fcpim.c:500:
+		ls_rjt = (struct fc_ls_rjt_s *) BFA_FCXP_RSP_PLD(fcxp);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#860: FILE: drivers/scsi/bfa/fcpim.c:526:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#867: FILE: drivers/scsi/bfa/fcpim.c:533:
+ * ^ICalled by rport when a new rport is created.$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!itnim"
#883: FILE: drivers/scsi/bfa/fcpim.c:549:
+	if (itnim == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bfa_itnim"
#900: FILE: drivers/scsi/bfa/fcpim.c:566:
+	if (bfa_itnim == NULL) {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#922: FILE: drivers/scsi/bfa/fcpim.c:588:
+ * ^ICalled by rport to delete  the instance of FCPIM.$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#990: FILE: drivers/scsi/bfa/fcpim.c:656:
+
+	}

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1043: FILE: drivers/scsi/bfa/fcpim.c:709:
+ * ^I^IBFA notification to FCS/driver for second level error recovery.$

WARNING:TYPO_SPELLING: 'Atleast' may be misspelled - perhaps 'At least'?
#1045: FILE: drivers/scsi/bfa/fcpim.c:711:
+ * Atleast one I/O request has timedout and target is unresponsive to
    ^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1063: FILE: drivers/scsi/bfa/fcpim.c:729:
+	struct bfa_fcs_rport_s *rport;
+	rport = bfa_fcs_rport_lookup(port, rpwwn);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rport->itnim"
#1068: FILE: drivers/scsi/bfa/fcpim.c:734:
+	bfa_assert(rport->itnim != NULL);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1069: FILE: drivers/scsi/bfa/fcpim.c:735:
+	return (rport->itnim);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!itnim"
#1080: FILE: drivers/scsi/bfa/fcpim.c:746:
+	if (itnim == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "port"
#1098: FILE: drivers/scsi/bfa/fcpim.c:764:
+	bfa_assert(port != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!itnim"
#1102: FILE: drivers/scsi/bfa/fcpim.c:768:
+	if (itnim == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "port"
#1115: FILE: drivers/scsi/bfa/fcpim.c:781:
+	bfa_assert(port != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!itnim"
#1119: FILE: drivers/scsi/bfa/fcpim.c:785:
+	if (itnim == NULL)

CHECK:SPACING: No space is necessary after a cast
#1137: FILE: drivers/scsi/bfa/fcpim.c:803:
+	els_cmd = (struct fc_els_cmd_s *) (fchs + 1);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1178: FILE: drivers/scsi/bfa/fcpim.c:844:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1183: FILE: drivers/scsi/bfa/fcptm.c:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1255: FILE: drivers/scsi/bfa/fcs.h:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1276: FILE: drivers/scsi/bfa/fcs.h:22:
+
+

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1280: FILE: drivers/scsi/bfa/fcs.h:26:
+#define __fcs_min_cfg(__fcs)       (__fcs)->min_cfg

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1289: FILE: drivers/scsi/bfa/fcs_auth.h:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1310: FILE: drivers/scsi/bfa/fcs_auth.h:22:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1330: FILE: drivers/scsi/bfa/fcs_fabric.h:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1359: FILE: drivers/scsi/bfa/fcs_fabric.h:30:
+/*
+* fcs friend functions: only between fcs modules

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1360: FILE: drivers/scsi/bfa/fcs_fabric.h:31:
+* fcs friend functions: only between fcs modules
+ */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1371: FILE: drivers/scsi/bfa/fcs_fabric.h:42:
+struct bfa_fcs_vport_s *bfa_fcs_fabric_vport_lookup(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1375: FILE: drivers/scsi/bfa/fcs_fabric.h:46:
+void            bfa_fcs_fabric_uf_recv(struct bfa_fcs_fabric_s *fabric,
+			struct fchs_s *fchs, u16 len);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1379: FILE: drivers/scsi/bfa/fcs_fabric.h:50:
+void     ^Ibfa_fcs_fabric_psymb_init(struct bfa_fcs_fabric_s *fabric);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1383: FILE: drivers/scsi/bfa/fcs_fabric.h:54:
+bfa_status_t bfa_fcs_fabric_addvf(struct bfa_fcs_fabric_s *vf,
+			struct bfa_fcs_s *fcs, struct bfa_port_cfg_s *port_cfg,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1386: FILE: drivers/scsi/bfa/fcs_fabric.h:57:
+void bfa_fcs_auth_finished(struct bfa_fcs_fabric_s *fabric,
+			enum auth_status status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1389: FILE: drivers/scsi/bfa/fcs_fabric.h:60:
+void bfa_fcs_fabric_set_fabric_name(struct bfa_fcs_fabric_s *fabric,
+			wwn_t fabric_name);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1395: FILE: drivers/scsi/bfa/fcs_fcpim.h:1:
+/*

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1437: FILE: drivers/scsi/bfa/fcs_fcpim.h:43:
+void bfa_fcs_fcpim_uf_recv(struct bfa_fcs_itnim_s *itnim, struct fchs_s *fchs,
+			u16 len);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1443: FILE: drivers/scsi/bfa/fcs_fcptm.h:1:
+/*

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1475: FILE: drivers/scsi/bfa/fcs_fcptm.h:33:
+void bfa_fcs_tin_rx_prli(struct bfa_fcs_tin_s *tin, struct fchs_s *fchs,
+			u16 len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1485: FILE: drivers/scsi/bfa/fcs_fcptm.h:43:
+void bfa_fcs_fcptm_uf_recv(struct bfa_fcs_tin_s *tin, struct fchs_s *fchs,
+			u16 len);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1492: FILE: drivers/scsi/bfa/fcs_fcxp.h:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1513: FILE: drivers/scsi/bfa/fcs_fcxp.h:22:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1525: FILE: drivers/scsi/bfa/fcs_lport.h:1:
+/*

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'port' may be better as '(port)' to avoid precedence issues
#1578: FILE: drivers/scsi/bfa/fcs_lport.h:54:
+#define	BFA_FCS_VPORT_IS_INITIATOR_MODE(port) \
+		(port->port_cfg.roles & BFA_PORT_ROLE_FCP_IM)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'port' may be better as '(port)' to avoid precedence issues
#1581: FILE: drivers/scsi/bfa/fcs_lport.h:57:
+#define	BFA_FCS_VPORT_IS_TARGET_MODE(port) \
+		(port->port_cfg.roles & BFA_PORT_ROLE_FCP_TM)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'port' may be better as '(port)' to avoid precedence issues
#1584: FILE: drivers/scsi/bfa/fcs_lport.h:60:
+#define	BFA_FCS_VPORT_IS_IPFC_MODE(port) \
+		(port->port_cfg.roles & BFA_PORT_ROLE_FCP_IPFC)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'port' may be better as '(port)' to avoid precedence issues
#1595: FILE: drivers/scsi/bfa/fcs_lport.h:71:
+#define BFA_FCS_GET_HAL_FROM_PORT(port)  (port->fcs->bfa)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'port' may be better as '(port)' to avoid precedence issues
#1596: FILE: drivers/scsi/bfa/fcs_lport.h:72:
+#define BFA_FCS_GET_NS_FROM_PORT(port)  (&port->port_topo.pfab.ns)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'port' may be better as '(port)' to avoid precedence issues
#1597: FILE: drivers/scsi/bfa/fcs_lport.h:73:
+#define BFA_FCS_GET_SCN_FROM_PORT(port)  (&port->port_topo.pfab.scn)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'port' may be better as '(port)' to avoid precedence issues
#1598: FILE: drivers/scsi/bfa/fcs_lport.h:74:
+#define BFA_FCS_GET_MS_FROM_PORT(port)  (&port->port_topo.pfab.ms)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'port' may be better as '(port)' to avoid precedence issues
#1599: FILE: drivers/scsi/bfa/fcs_lport.h:75:
+#define BFA_FCS_GET_FDMI_FROM_PORT(port)  (&port->port_topo.pfab.ms.fdmi)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1605: FILE: drivers/scsi/bfa/fcs_lport.h:81:
+void bfa_fcs_port_uf_recv(struct bfa_fcs_port_s *lport, struct fchs_s *fchs,
+			u16 len);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1622: FILE: drivers/scsi/bfa/fcs_lport.h:98:
+struct bfa_fcs_rport_s *bfa_fcs_port_get_rport_by_pid(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1628: FILE: drivers/scsi/bfa/fcs_lport.h:104:
+struct bfa_fcs_rport_s *bfa_fcs_port_get_rport_by_pwwn(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1630: FILE: drivers/scsi/bfa/fcs_lport.h:106:
+struct bfa_fcs_rport_s *bfa_fcs_port_get_rport_by_nwwn(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1633: FILE: drivers/scsi/bfa/fcs_lport.h:109:
+void bfa_fcs_port_add_rport(struct bfa_fcs_port_s *port,
+			struct bfa_fcs_rport_s *rport);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1635: FILE: drivers/scsi/bfa/fcs_lport.h:111:
+void bfa_fcs_port_del_rport(struct bfa_fcs_port_s *port,
+			struct bfa_fcs_rport_s *rport);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1646: FILE: drivers/scsi/bfa/fcs_ms.h:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1685: FILE: drivers/scsi/bfa/fcs_port.h:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1706: FILE: drivers/scsi/bfa/fcs_port.h:22:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1721: FILE: drivers/scsi/bfa/fcs_rport.h:1:
+/*

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1751: FILE: drivers/scsi/bfa/fcs_rport.h:31:
+void bfa_fcs_rport_uf_recv(struct bfa_fcs_rport_s *rport, struct fchs_s *fchs,
+			u16 len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1755: FILE: drivers/scsi/bfa/fcs_rport.h:35:
+struct bfa_fcs_rport_s *bfa_fcs_rport_create(struct bfa_fcs_port_s *port,
+			u32 pid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1760: FILE: drivers/scsi/bfa/fcs_rport.h:40:
+void bfa_fcs_rport_start(struct bfa_fcs_port_s *port, struct fchs_s *rx_fchs,
+			struct fc_logi_s *plogi_rsp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1762: FILE: drivers/scsi/bfa/fcs_rport.h:42:
+void bfa_fcs_rport_plogi_create(struct bfa_fcs_port_s *port,
+			struct fchs_s *rx_fchs,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1765: FILE: drivers/scsi/bfa/fcs_rport.h:45:
+void bfa_fcs_rport_plogi(struct bfa_fcs_rport_s *rport, struct fchs_s *fchs,
+			struct fc_logi_s *plogi);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1773: FILE: drivers/scsi/bfa/fcs_rport.h:53:
+struct bfa_fcs_rport_s *bfa_fcs_rport_create_by_wwn(struct bfa_fcs_port_s *port,
+			wwn_t wwn);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1775: FILE: drivers/scsi/bfa/fcs_rport.h:55:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1786: FILE: drivers/scsi/bfa/fcs_trcmod.h:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1846: FILE: drivers/scsi/bfa/fcs_uf.h:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1867: FILE: drivers/scsi/bfa/fcs_uf.h:22:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1882: FILE: drivers/scsi/bfa/fcs_vport.h:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1925: FILE: drivers/scsi/bfa/fdmi.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1946: FILE: drivers/scsi/bfa/fdmi.c:22:
+
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1991: FILE: drivers/scsi/bfa/fdmi.c:67:
+static u16 bfa_fcs_port_fdmi_build_rhba_pyld(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1993: FILE: drivers/scsi/bfa/fdmi.c:69:
+static u16 bfa_fcs_port_fdmi_build_rprt_pyld(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1995: FILE: drivers/scsi/bfa/fdmi.c:71:
+static u16 bfa_fcs_port_fdmi_build_rpa_pyld(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1997: FILE: drivers/scsi/bfa/fdmi.c:73:
+static u16 bfa_fcs_port_fdmi_build_portattr_block(

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1999: FILE: drivers/scsi/bfa/fdmi.c:75:
+void bfa_fcs_fdmi_get_hbaattr(struct bfa_fcs_port_fdmi_s *fdmi,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2000: FILE: drivers/scsi/bfa/fdmi.c:76:
+void bfa_fcs_fdmi_get_hbaattr(struct bfa_fcs_port_fdmi_s *fdmi,
+			struct bfa_fcs_fdmi_hba_attr_s *hba_attr);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2001: FILE: drivers/scsi/bfa/fdmi.c:77:
+void bfa_fcs_fdmi_get_portattr(struct bfa_fcs_port_fdmi_s *fdmi,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2002: FILE: drivers/scsi/bfa/fdmi.c:78:
+void bfa_fcs_fdmi_get_portattr(struct bfa_fcs_port_fdmi_s *fdmi,
+			struct bfa_fcs_fdmi_port_attr_s *port_attr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2022: FILE: drivers/scsi/bfa/fdmi.c:98:
+static void bfa_fcs_port_fdmi_sm_offline(struct bfa_fcs_port_fdmi_s *fdmi,
+			enum port_fdmi_event event);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2024: FILE: drivers/scsi/bfa/fdmi.c:100:
+static void bfa_fcs_port_fdmi_sm_sending_rhba(struct bfa_fcs_port_fdmi_s *fdmi,
+			enum port_fdmi_event event);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2026: FILE: drivers/scsi/bfa/fdmi.c:102:
+static void bfa_fcs_port_fdmi_sm_rhba(struct bfa_fcs_port_fdmi_s *fdmi,
+			enum port_fdmi_event event);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2028: FILE: drivers/scsi/bfa/fdmi.c:104:
+static void bfa_fcs_port_fdmi_sm_rhba_retry(struct bfa_fcs_port_fdmi_s *fdmi,
+			enum port_fdmi_event event);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2030: FILE: drivers/scsi/bfa/fdmi.c:106:
+static void bfa_fcs_port_fdmi_sm_sending_rprt(struct bfa_fcs_port_fdmi_s *fdmi,
+			enum port_fdmi_event event);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2032: FILE: drivers/scsi/bfa/fdmi.c:108:
+static void bfa_fcs_port_fdmi_sm_rprt(struct bfa_fcs_port_fdmi_s *fdmi,
+			enum port_fdmi_event event);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2034: FILE: drivers/scsi/bfa/fdmi.c:110:
+static void bfa_fcs_port_fdmi_sm_rprt_retry(struct bfa_fcs_port_fdmi_s *fdmi,
+			enum port_fdmi_event event);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2036: FILE: drivers/scsi/bfa/fdmi.c:112:
+static void bfa_fcs_port_fdmi_sm_sending_rpa(struct bfa_fcs_port_fdmi_s *fdmi,
+			enum port_fdmi_event event);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2038: FILE: drivers/scsi/bfa/fdmi.c:114:
+static void     bfa_fcs_port_fdmi_sm_rpa(struct bfa_fcs_port_fdmi_s *fdmi,
+			enum port_fdmi_event event);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2040: FILE: drivers/scsi/bfa/fdmi.c:116:
+static void     bfa_fcs_port_fdmi_sm_rpa_retry(struct bfa_fcs_port_fdmi_s *fdmi,
+			enum port_fdmi_event event);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2042: FILE: drivers/scsi/bfa/fdmi.c:118:
+static void     bfa_fcs_port_fdmi_sm_online(struct bfa_fcs_port_fdmi_s *fdmi,
+			enum port_fdmi_event event);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2044: FILE: drivers/scsi/bfa/fdmi.c:120:
+ * ^I^IStart in offline state - awaiting MS to send start.$

WARNING:TYPO_SPELLING: 'atribute' may be misspelled - perhaps 'attribute'?
#2069: FILE: drivers/scsi/bfa/fdmi.c:145:
+			 * atribute. The HBA attribute also contains the base
 			   ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2187: FILE: drivers/scsi/bfa/fdmi.c:263:
+/*
+* RPRT : Register Port

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2188: FILE: drivers/scsi/bfa/fdmi.c:264:
+* RPRT : Register Port
+ */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2406: FILE: drivers/scsi/bfa/fdmi.c:482:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2408: FILE: drivers/scsi/bfa/fdmi.c:484:
+/**
+*   RHBA : Register HBA Attributes.

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2409: FILE: drivers/scsi/bfa/fdmi.c:485:
+*   RHBA : Register HBA Attributes.
+ */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2437: FILE: drivers/scsi/bfa/fdmi.c:513:
+	attr_len = bfa_fcs_port_fdmi_build_rhba_pyld(fdmi,
+			(u8 *) ((struct ct_hdr_s *) pyld + 1));

CHECK:SPACING: No space is necessary after a cast
#2437: FILE: drivers/scsi/bfa/fdmi.c:513:
+			(u8 *) ((struct ct_hdr_s *) pyld + 1));

CHECK:SPACING: No space is necessary after a cast
#2454: FILE: drivers/scsi/bfa/fdmi.c:530:
+	struct fdmi_rhba_s    *rhba = (struct fdmi_rhba_s *) pyld;

WARNING:TYPO_SPELLING: 'invididual' may be misspelled - perhaps 'individual'?
#2474: FILE: drivers/scsi/bfa/fdmi.c:550:
+	 * fill out the invididual entries of the HBA attrib Block
 	                ^^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#2476: FILE: drivers/scsi/bfa/fdmi.c:552:
+	curr_ptr = (u8 *) &rhba->hba_attr_blk.hba_attr;

CHECK:SPACING: No space is necessary after a cast
#2481: FILE: drivers/scsi/bfa/fdmi.c:557:
+	attr = (struct fdmi_attr_s *) curr_ptr;

CHECK:SPACING: No space is necessary after a cast
#2495: FILE: drivers/scsi/bfa/fdmi.c:571:
+	attr = (struct fdmi_attr_s *) curr_ptr;

CHECK:SPACING: No space is necessary after a cast
#2497: FILE: drivers/scsi/bfa/fdmi.c:573:
+	attr->len = (u16) strlen(fcs_hba_attr->manufacturer);

CHECK:SPACING: No space is necessary after a cast
#2511: FILE: drivers/scsi/bfa/fdmi.c:587:
+	attr = (struct fdmi_attr_s *) curr_ptr;

CHECK:SPACING: No space is necessary after a cast
#2513: FILE: drivers/scsi/bfa/fdmi.c:589:
+	attr->len = (u16) strlen(fcs_hba_attr->serial_num);

CHECK:SPACING: No space is necessary after a cast
#2527: FILE: drivers/scsi/bfa/fdmi.c:603:
+	attr = (struct fdmi_attr_s *) curr_ptr;

CHECK:SPACING: No space is necessary after a cast
#2529: FILE: drivers/scsi/bfa/fdmi.c:605:
+	attr->len = (u16) strlen(fcs_hba_attr->model);

CHECK:SPACING: No space is necessary after a cast
#2543: FILE: drivers/scsi/bfa/fdmi.c:619:
+	attr = (struct fdmi_attr_s *) curr_ptr;

CHECK:SPACING: No space is necessary after a cast
#2545: FILE: drivers/scsi/bfa/fdmi.c:621:
+	attr->len = (u16) strlen(fcs_hba_attr->model_desc);

CHECK:SPACING: No space is necessary after a cast
#2560: FILE: drivers/scsi/bfa/fdmi.c:636:
+		attr = (struct fdmi_attr_s *) curr_ptr;

CHECK:SPACING: No space is necessary after a cast
#2562: FILE: drivers/scsi/bfa/fdmi.c:638:
+		attr->len = (u16) strlen(fcs_hba_attr->hw_version);

CHECK:SPACING: No space is necessary after a cast
#2577: FILE: drivers/scsi/bfa/fdmi.c:653:
+	attr = (struct fdmi_attr_s *) curr_ptr;

CHECK:SPACING: No space is necessary after a cast
#2579: FILE: drivers/scsi/bfa/fdmi.c:655:
+	attr->len = (u16) strlen(fcs_hba_attr->driver_version);

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#2584: FILE: drivers/scsi/bfa/fdmi.c:660:
+	len += attr->len;;

CHECK:SPACING: No space is necessary after a cast
#2594: FILE: drivers/scsi/bfa/fdmi.c:670:
+		attr = (struct fdmi_attr_s *) curr_ptr;

CHECK:SPACING: No space is necessary after a cast
#2596: FILE: drivers/scsi/bfa/fdmi.c:672:
+		attr->len = (u16) strlen(fcs_hba_attr->option_rom_ver);

CHECK:SPACING: No space is necessary after a cast
#2611: FILE: drivers/scsi/bfa/fdmi.c:687:
+	attr = (struct fdmi_attr_s *) curr_ptr;

CHECK:SPACING: No space is necessary after a cast
#2613: FILE: drivers/scsi/bfa/fdmi.c:689:
+	attr->len = (u16) strlen(fcs_hba_attr->driver_version);

CHECK:SPACING: No space is necessary after a cast
#2628: FILE: drivers/scsi/bfa/fdmi.c:704:
+		attr = (struct fdmi_attr_s *) curr_ptr;

CHECK:SPACING: No space is necessary after a cast
#2630: FILE: drivers/scsi/bfa/fdmi.c:706:
+		attr->len = (u16) strlen(fcs_hba_attr->os_name);

CHECK:SPACING: No space is necessary after a cast
#2645: FILE: drivers/scsi/bfa/fdmi.c:721:
+	attr = (struct fdmi_attr_s *) curr_ptr;

CHECK:SPACING: No space is necessary after a cast
#2685: FILE: drivers/scsi/bfa/fdmi.c:761:
+	cthdr = (struct ct_hdr_s *) BFA_FCXP_RSP_PLD(fcxp);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2699: FILE: drivers/scsi/bfa/fdmi.c:775:
+/**
+*   RPRT : Register Port

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2700: FILE: drivers/scsi/bfa/fdmi.c:776:
+*   RPRT : Register Port
+ */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2728: FILE: drivers/scsi/bfa/fdmi.c:804:
+	attr_len = bfa_fcs_port_fdmi_build_rprt_pyld(fdmi,
+			(u8 *) ((struct ct_hdr_s *) pyld + 1));

CHECK:SPACING: No space is necessary after a cast
#2728: FILE: drivers/scsi/bfa/fdmi.c:804:
+			(u8 *) ((struct ct_hdr_s *) pyld + 1));

CHECK:SPACING: No space is necessary after a cast
#2746: FILE: drivers/scsi/bfa/fdmi.c:822:
+	struct fdmi_port_attr_s *port_attrib = (struct fdmi_port_attr_s *) pyld;

WARNING:TYPO_SPELLING: 'invididual' may be misspelled - perhaps 'individual'?
#2760: FILE: drivers/scsi/bfa/fdmi.c:836:
+	 * fill out the invididual entries
 	                ^^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#2762: FILE: drivers/scsi/bfa/fdmi.c:838:
+	curr_ptr = (u8 *) &port_attrib->port_attr;

CHECK:SPACING: No space is necessary after a cast
#2767: FILE: drivers/scsi/bfa/fdmi.c:843:
+	attr = (struct fdmi_attr_s *) curr_ptr;

CHECK:SPACING: No space is necessary after a cast
#2781: FILE: drivers/scsi/bfa/fdmi.c:857:
+	attr = (struct fdmi_attr_s *) curr_ptr;

CHECK:SPACING: No space is necessary after a cast
#2795: FILE: drivers/scsi/bfa/fdmi.c:871:
+	attr = (struct fdmi_attr_s *) curr_ptr;

CHECK:SPACING: No space is necessary after a cast
#2809: FILE: drivers/scsi/bfa/fdmi.c:885:
+	attr = (struct fdmi_attr_s *) curr_ptr;

CHECK:SPACING: No space is necessary after a cast
#2824: FILE: drivers/scsi/bfa/fdmi.c:900:
+		attr = (struct fdmi_attr_s *) curr_ptr;

CHECK:SPACING: No space is necessary after a cast
#2826: FILE: drivers/scsi/bfa/fdmi.c:902:
+		attr->len = (u16) strlen(fcs_port_attr.os_device_name);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2837: FILE: drivers/scsi/bfa/fdmi.c:913:
+
+	}

CHECK:SPACING: No space is necessary after a cast
#2842: FILE: drivers/scsi/bfa/fdmi.c:918:
+		attr = (struct fdmi_attr_s *) curr_ptr;

CHECK:SPACING: No space is necessary after a cast
#2844: FILE: drivers/scsi/bfa/fdmi.c:920:
+		attr->len = (u16) strlen(fcs_port_attr.host_name);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2855: FILE: drivers/scsi/bfa/fdmi.c:931:
+
+	}

CHECK:SPACING: No space is necessary after a cast
#2870: FILE: drivers/scsi/bfa/fdmi.c:946:
+	struct fdmi_rprt_s    *rprt = (struct fdmi_rprt_s *) pyld;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2877: FILE: drivers/scsi/bfa/fdmi.c:953:
+	len = bfa_fcs_port_fdmi_build_portattr_block(fdmi,
+			(u8 *) &rprt->port_attr_blk);

CHECK:SPACING: No space is necessary after a cast
#2877: FILE: drivers/scsi/bfa/fdmi.c:953:
+			(u8 *) &rprt->port_attr_blk);

CHECK:SPACING: No space is necessary after a cast
#2905: FILE: drivers/scsi/bfa/fdmi.c:981:
+	cthdr = (struct ct_hdr_s *) BFA_FCXP_RSP_PLD(fcxp);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2919: FILE: drivers/scsi/bfa/fdmi.c:995:
+/**
+*   RPA : Register Port Attributes.

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2920: FILE: drivers/scsi/bfa/fdmi.c:996:
+*   RPA : Register Port Attributes.
+ */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2948: FILE: drivers/scsi/bfa/fdmi.c:1024:
+	attr_len = bfa_fcs_port_fdmi_build_rpa_pyld(fdmi,
+			(u8 *) ((struct ct_hdr_s *) pyld + 1));

CHECK:SPACING: No space is necessary after a cast
#2948: FILE: drivers/scsi/bfa/fdmi.c:1024:
+			(u8 *) ((struct ct_hdr_s *) pyld + 1));

CHECK:SPACING: No space is necessary after a cast
#2963: FILE: drivers/scsi/bfa/fdmi.c:1039:
+	struct fdmi_rpa_s     *rpa = (struct fdmi_rpa_s *) pyld;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2969: FILE: drivers/scsi/bfa/fdmi.c:1045:
+	len = bfa_fcs_port_fdmi_build_portattr_block(fdmi,
+			(u8 *) &rpa->port_attr_blk);

CHECK:SPACING: No space is necessary after a cast
#2969: FILE: drivers/scsi/bfa/fdmi.c:1045:
+			(u8 *) &rpa->port_attr_blk);

CHECK:SPACING: No space is necessary after a cast
#2997: FILE: drivers/scsi/bfa/fdmi.c:1073:
+	cthdr = (struct ct_hdr_s *) BFA_FCXP_RSP_PLD(fcxp);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#3070: FILE: drivers/scsi/bfa/fdmi.c:1146:
+
+}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#3119: FILE: drivers/scsi/bfa/fdmi.c:1195:
+
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3121: FILE: drivers/scsi/bfa/fdmi.c:1197:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3152: FILE: drivers/scsi/bfa/loop.c:1:
+/*

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#3212: FILE: drivers/scsi/bfa/loop.c:61:
+bfa_status_t    bfa_fcs_port_loop_send_plogi(struct bfa_fcs_port_s *port,

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#3215: FILE: drivers/scsi/bfa/loop.c:64:
+void            bfa_fcs_port_loop_plogi_response(void *fcsarg,

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#3223: FILE: drivers/scsi/bfa/loop.c:72:
+bfa_status_t    bfa_fcs_port_loop_send_adisc(struct bfa_fcs_port_s *port,

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#3226: FILE: drivers/scsi/bfa/loop.c:75:
+void            bfa_fcs_port_loop_adisc_response(void *fcsarg,

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#3234: FILE: drivers/scsi/bfa/loop.c:83:
+bfa_status_t    bfa_fcs_port_loop_send_plogi_acc(struct bfa_fcs_port_s *port,

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#3237: FILE: drivers/scsi/bfa/loop.c:86:
+void            bfa_fcs_port_loop_plogi_acc_response(void *fcsarg,

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#3245: FILE: drivers/scsi/bfa/loop.c:94:
+bfa_status_t    bfa_fcs_port_loop_send_adisc_acc(struct bfa_fcs_port_s *port,

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#3248: FILE: drivers/scsi/bfa/loop.c:97:
+void            bfa_fcs_port_loop_adisc_acc_response(void *fcsarg,

WARNING:TYPO_SPELLING: 'provate' may be misspelled - perhaps 'private'?
#3256: FILE: drivers/scsi/bfa/loop.c:105:
+ *   Called by port to initializar in provate LOOP topology.
                                       ^^^^^^^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#3269: FILE: drivers/scsi/bfa/loop.c:118:
+{
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3290: FILE: drivers/scsi/bfa/loop.c:139:
+					r_port = bfa_fcs_rport_create(port,
+						alpa_pos_map[ii]);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'port_loop_alpa_map[ii] > 0'
#3298: FILE: drivers/scsi/bfa/loop.c:147:
+				if ((port_loop_alpa_map[ii] > 0)
+				    && (port_loop_alpa_map[ii] != port->pid))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'port_loop_alpa_map[ii] != port->pid'
#3298: FILE: drivers/scsi/bfa/loop.c:147:
+				if ((port_loop_alpa_map[ii] > 0)
+				    && (port_loop_alpa_map[ii] != port->pid))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#3299: FILE: drivers/scsi/bfa/loop.c:148:
+				if ((port_loop_alpa_map[ii] > 0)
+				    && (port_loop_alpa_map[ii] != port->pid))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3301: FILE: drivers/scsi/bfa/loop.c:150:
+					bfa_fcs_port_loop_send_plogi(port,
+						port_loop_alpa_map[ii]);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#3311: FILE: drivers/scsi/bfa/loop.c:160:
+
+}

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#3319: FILE: drivers/scsi/bfa/loop.c:168:
+{
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#3320: FILE: drivers/scsi/bfa/loop.c:169:
+
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3343: FILE: drivers/scsi/bfa/loop.c:192:
+	fcxp = bfa_fcxp_alloc(NULL, port->fcs->bfa, 0, 0, NULL, NULL, NULL,
+				  NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3352: FILE: drivers/scsi/bfa/loop.c:201:
+	bfa_fcxp_send(fcxp, NULL, port->fabric->vf_id, port->lp_tag, BFA_FALSE,
+			  FC_CLASS_3, len, &fchs,

CHECK:SPACING: No space is necessary after a cast
#3368: FILE: drivers/scsi/bfa/loop.c:217:
+	struct bfa_fcs_port_s *port = (struct bfa_fcs_port_s *) cbarg;

CHECK:SPACING: No space is necessary after a cast
#3388: FILE: drivers/scsi/bfa/loop.c:237:
+	els_cmd = (struct fc_els_cmd_s *) BFA_FCXP_RSP_PLD(fcxp);

CHECK:SPACING: No space is necessary after a cast
#3389: FILE: drivers/scsi/bfa/loop.c:238:
+	plogi_resp = (struct fc_logi_s *) els_cmd;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3409: FILE: drivers/scsi/bfa/loop.c:258:
+	fcxp = bfa_fcxp_alloc(NULL, port->fcs->bfa, 0, 0, NULL, NULL, NULL,
+				  NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3418: FILE: drivers/scsi/bfa/loop.c:267:
+	bfa_fcxp_send(fcxp, NULL, port->fabric->vf_id, port->lp_tag, BFA_FALSE,
+				 FC_CLASS_3, len, &fchs,

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#3437: FILE: drivers/scsi/bfa/loop.c:286:
+{
+

CHECK:SPACING: No space is necessary after a cast
#3438: FILE: drivers/scsi/bfa/loop.c:287:
+	struct bfa_fcs_port_s *port = (struct bfa_fcs_port_s *) cbarg;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3461: FILE: drivers/scsi/bfa/loop.c:310:
+	fcxp = bfa_fcxp_alloc(NULL, port->fcs->bfa, 0, 0, NULL, NULL, NULL,
+				  NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3469: FILE: drivers/scsi/bfa/loop.c:318:
+	bfa_fcxp_send(fcxp, NULL, port->fabric->vf_id, port->lp_tag, BFA_FALSE,
+			  FC_CLASS_3, len, &fchs,

CHECK:SPACING: No space is necessary after a cast
#3485: FILE: drivers/scsi/bfa/loop.c:334:
+	struct bfa_fcs_port_s *port = (struct bfa_fcs_port_s *) cbarg;

CHECK:SPACING: No space is necessary after a cast
#3504: FILE: drivers/scsi/bfa/loop.c:353:
+	els_cmd = (struct fc_els_cmd_s *) BFA_FCXP_RSP_PLD(fcxp);

CHECK:SPACING: No space is necessary after a cast
#3505: FILE: drivers/scsi/bfa/loop.c:354:
+	adisc_resp = (struct fc_adisc_s *) els_cmd;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#3520: FILE: drivers/scsi/bfa/loop.c:369:
+
+	}

WARNING:RETURN_VOID: void function return statements are not generally useful
#3522: FILE: drivers/scsi/bfa/loop.c:371:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3534: FILE: drivers/scsi/bfa/loop.c:383:
+	fcxp = bfa_fcxp_alloc(NULL, port->fcs->bfa, 0, 0, NULL, NULL, NULL,
+				  NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3542: FILE: drivers/scsi/bfa/loop.c:391:
+	bfa_fcxp_send(fcxp, NULL, port->fabric->vf_id, port->lp_tag, BFA_FALSE,
+				FC_CLASS_3, len, &fchs,

WARNING:TYPO_SPELLING: 'reponse' may be misspelled - perhaps 'response'?
#3544: FILE: drivers/scsi/bfa/loop.c:393:
+				(void *)port, FC_MAX_PDUSZ, 0); /* no reponse
 				                                      ^^^^^^^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#3561: FILE: drivers/scsi/bfa/loop.c:410:
+{
+

CHECK:SPACING: No space is necessary after a cast
#3562: FILE: drivers/scsi/bfa/loop.c:411:
+	struct bfa_fcs_port_s *port = (struct bfa_fcs_port_s *) cbarg;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3578: FILE: drivers/scsi/bfa/lport_api.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3609: FILE: drivers/scsi/bfa/lport_api.c:32:
+
+

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#3623: FILE: drivers/scsi/bfa/lport_api.c:46:
+	return (&fcs->fabric.bport);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port"
#3635: FILE: drivers/scsi/bfa/lport_api.c:58:
+	if (port == NULL || nrports == 0)

CHECK:SPACING: No space is necessary after a cast
#3636: FILE: drivers/scsi/bfa/lport_api.c:59:
+		return (wwn_t) 0;

CHECK:SPACING: No space is necessary after a cast
#3639: FILE: drivers/scsi/bfa/lport_api.c:62:
+	bfa_trc(fcs, (u32) nrports);

CHECK:SPACING: No space is necessary after a cast
#3649: FILE: drivers/scsi/bfa/lport_api.c:72:
+			bfa_trc(fcs, (u32) rport->pwwn);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#3668: FILE: drivers/scsi/bfa/lport_api.c:91:
+	if (rport) {
[...]
+	} else {
[...]

CHECK:SPACING: No space is necessary after a cast
#3671: FILE: drivers/scsi/bfa/lport_api.c:94:
+		return (wwn_t) 0;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port"
#3684: FILE: drivers/scsi/bfa/lport_api.c:107:
+	if (port == NULL || rport_wwns == NULL || *nrports == 0)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rport_wwns"
#3684: FILE: drivers/scsi/bfa/lport_api.c:107:
+	if (port == NULL || rport_wwns == NULL || *nrports == 0)

CHECK:SPACING: No space is necessary after a cast
#3688: FILE: drivers/scsi/bfa/lport_api.c:111:
+	bfa_trc(fcs, (u32) *nrports);

CHECK:SPACING: No space is necessary after a cast
#3698: FILE: drivers/scsi/bfa/lport_api.c:121:
+			bfa_trc(fcs, (u32) rport->pwwn);

WARNING:RETURN_VOID: void function return statements are not generally useful
#3713: FILE: drivers/scsi/bfa/lport_api.c:136:
+	return;
+}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port"
#3729: FILE: drivers/scsi/bfa/lport_api.c:152:
+	if (port == NULL)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#3747: FILE: drivers/scsi/bfa/lport_api.c:170:
+		if ((bfa_os_ntoh3b(rport->pid) > 0xFFF000)
+		    || (bfa_fcs_rport_get_state(rport) == BFA_RPORT_OFFLINE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rport->rpf.rpsc_speed == BFA_PPORT_SPEED_8GBPS'
#3752: FILE: drivers/scsi/bfa/lport_api.c:175:
+		if ((rport->rpf.rpsc_speed == BFA_PPORT_SPEED_8GBPS)
+		    || (rport->rpf.rpsc_speed > pport_speed)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rport->rpf.rpsc_speed > pport_speed'
#3752: FILE: drivers/scsi/bfa/lport_api.c:175:
+		if ((rport->rpf.rpsc_speed == BFA_PPORT_SPEED_8GBPS)
+		    || (rport->rpf.rpsc_speed > pport_speed)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#3753: FILE: drivers/scsi/bfa/lport_api.c:176:
+		if ((rport->rpf.rpsc_speed == BFA_PPORT_SPEED_8GBPS)
+		    || (rport->rpf.rpsc_speed > pport_speed)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "fcs"
#3773: FILE: drivers/scsi/bfa/lport_api.c:196:
+	bfa_assert(fcs != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vf"
#3776: FILE: drivers/scsi/bfa/lport_api.c:199:
+	if (vf == NULL) {

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#3778: FILE: drivers/scsi/bfa/lport_api.c:201:
+		return (NULL);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vf->bport.port_cfg.pwwn == lpwwn'
#3781: FILE: drivers/scsi/bfa/lport_api.c:204:
+	if (!lpwwn || (vf->bport.port_cfg.pwwn == lpwwn))

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#3788: FILE: drivers/scsi/bfa/lport_api.c:211:
+	return (NULL);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#3798: FILE: drivers/scsi/bfa/lport_api.c:221:
+{
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port->vport"
#3801: FILE: drivers/scsi/bfa/lport_api.c:224:
+	if (port->vport == NULL) {

WARNING:RETURN_VOID: void function return statements are not generally useful
#3845: FILE: drivers/scsi/bfa/lport_api.c:268:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#3852: FILE: drivers/scsi/bfa/lport_api.c:275:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#3859: FILE: drivers/scsi/bfa/lport_api.c:282:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#3866: FILE: drivers/scsi/bfa/lport_api.c:289:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3868: FILE: drivers/scsi/bfa/lport_api.c:291:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3873: FILE: drivers/scsi/bfa/lport_priv.h:1:
+/*

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078736.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 62 warnings, 225 checks, 3821 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078736.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
