WARNING:TYPO_SPELLING: 'cancelation' may be misspelled - perhaps 'cancellation'?
#16: 
Subject: [PATCH 16/23] Staging: add echo cancelation module
                                         ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#76: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#81: FILE: drivers/staging/echo/Kconfig:1:
+config ECHO
+	tristate "Line Echo Canceller support"
+	default n
+	---help---
+	  This driver provides line echo cancelling support for mISDN and
+	  Zaptel drivers.
+
+	  To compile this driver as a module, choose M here. The module
+	  will be called echo.

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#119: FILE: drivers/staging/echo/bit_operations.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#140: FILE: drivers/staging/echo/bit_operations.h:22:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#141: FILE: drivers/staging/echo/bit_operations.h:23:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#143: FILE: drivers/staging/echo/bit_operations.h:25:
+ * $Id: bit_operations.h,v 1.11 2006/11/28 15:37:03 steveu Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#155: FILE: drivers/staging/echo/bit_operations.h:37:
+#if defined(__i386__)  ||  defined(__x86_64__)

Architecture specific defines should be avoided wherever
possible.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#157: FILE: drivers/staging/echo/bit_operations.h:39:
+/*! \brief Find the bit position of the highest set bit in a word
+    \param bits The word to be searched

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#158: FILE: drivers/staging/echo/bit_operations.h:40:
+    \return The bit number of the highest set bit, or -1 if the word is zero. */

WARNING:INLINE: plain inline is preferred over __inline__
#159: FILE: drivers/staging/echo/bit_operations.h:41:
+static __inline__ int top_bit(unsigned int bits)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: drivers/staging/echo/bit_operations.h:43:
+    int res;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: drivers/staging/echo/bit_operations.h:45:
+    __asm__ (" xorl %[res],%[res];\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: drivers/staging/echo/bit_operations.h:46:
+             " decl %[res];\n"$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: drivers/staging/echo/bit_operations.h:46:
+             " decl %[res];\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: drivers/staging/echo/bit_operations.h:47:
+             " bsrl %[bits],%[res]\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: drivers/staging/echo/bit_operations.h:47:
+             " bsrl %[bits],%[res]\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: drivers/staging/echo/bit_operations.h:48:
+             : [res] "=&r" (res)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: drivers/staging/echo/bit_operations.h:48:
+             : [res] "=&r" (res)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: drivers/staging/echo/bit_operations.h:49:
+             : [bits] "rm" (bits));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: drivers/staging/echo/bit_operations.h:49:
+             : [bits] "rm" (bits));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: drivers/staging/echo/bit_operations.h:50:
+    return res;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#170: FILE: drivers/staging/echo/bit_operations.h:52:
+}
+/*- End of function --------------------------------------------------------*/

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#173: FILE: drivers/staging/echo/bit_operations.h:55:
+/*! \brief Find the bit position of the lowest set bit in a word
+    \param bits The word to be searched

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#174: FILE: drivers/staging/echo/bit_operations.h:56:
+    \return The bit number of the lowest set bit, or -1 if the word is zero. */

WARNING:INLINE: plain inline is preferred over __inline__
#175: FILE: drivers/staging/echo/bit_operations.h:57:
+static __inline__ int bottom_bit(unsigned int bits)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: drivers/staging/echo/bit_operations.h:59:
+    int res;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: drivers/staging/echo/bit_operations.h:61:
+    __asm__ (" xorl %[res],%[res];\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: drivers/staging/echo/bit_operations.h:62:
+             " decl %[res];\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: drivers/staging/echo/bit_operations.h:62:
+             " decl %[res];\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: drivers/staging/echo/bit_operations.h:63:
+             " bsfl %[bits],%[res]\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: drivers/staging/echo/bit_operations.h:63:
+             " bsfl %[bits],%[res]\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: drivers/staging/echo/bit_operations.h:64:
+             : [res] "=&r" (res)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: drivers/staging/echo/bit_operations.h:64:
+             : [res] "=&r" (res)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: drivers/staging/echo/bit_operations.h:65:
+             : [bits] "rm" (bits));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: drivers/staging/echo/bit_operations.h:65:
+             : [bits] "rm" (bits));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: drivers/staging/echo/bit_operations.h:66:
+    return res;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#186: FILE: drivers/staging/echo/bit_operations.h:68:
+}
+/*- End of function --------------------------------------------------------*/

WARNING:INLINE: plain inline is preferred over __inline__
#188: FILE: drivers/staging/echo/bit_operations.h:70:
+static __inline__ int top_bit(unsigned int bits)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: drivers/staging/echo/bit_operations.h:72:
+    int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: drivers/staging/echo/bit_operations.h:74:
+    if (bits == 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: drivers/staging/echo/bit_operations.h:75:
+        return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: drivers/staging/echo/bit_operations.h:75:
+        return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: drivers/staging/echo/bit_operations.h:76:
+    i = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: drivers/staging/echo/bit_operations.h:77:
+    if (bits & 0xFFFF0000)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#195: FILE: drivers/staging/echo/bit_operations.h:77:
+    if (bits & 0xFFFF0000)
+    {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: drivers/staging/echo/bit_operations.h:78:
+    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: drivers/staging/echo/bit_operations.h:79:
+        bits &= 0xFFFF0000;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: drivers/staging/echo/bit_operations.h:79:
+        bits &= 0xFFFF0000;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: drivers/staging/echo/bit_operations.h:80:
+        i += 16;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: drivers/staging/echo/bit_operations.h:80:
+        i += 16;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: drivers/staging/echo/bit_operations.h:81:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: drivers/staging/echo/bit_operations.h:82:
+    if (bits & 0xFF00FF00)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#200: FILE: drivers/staging/echo/bit_operations.h:82:
+    if (bits & 0xFF00FF00)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: drivers/staging/echo/bit_operations.h:83:
+    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: drivers/staging/echo/bit_operations.h:84:
+        bits &= 0xFF00FF00;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: drivers/staging/echo/bit_operations.h:84:
+        bits &= 0xFF00FF00;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: drivers/staging/echo/bit_operations.h:85:
+        i += 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: drivers/staging/echo/bit_operations.h:85:
+        i += 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: drivers/staging/echo/bit_operations.h:86:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: drivers/staging/echo/bit_operations.h:87:
+    if (bits & 0xF0F0F0F0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#205: FILE: drivers/staging/echo/bit_operations.h:87:
+    if (bits & 0xF0F0F0F0)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: drivers/staging/echo/bit_operations.h:88:
+    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: drivers/staging/echo/bit_operations.h:89:
+        bits &= 0xF0F0F0F0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: drivers/staging/echo/bit_operations.h:89:
+        bits &= 0xF0F0F0F0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: drivers/staging/echo/bit_operations.h:90:
+        i += 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: drivers/staging/echo/bit_operations.h:90:
+        i += 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: drivers/staging/echo/bit_operations.h:91:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: drivers/staging/echo/bit_operations.h:92:
+    if (bits & 0xCCCCCCCC)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#210: FILE: drivers/staging/echo/bit_operations.h:92:
+    if (bits & 0xCCCCCCCC)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: drivers/staging/echo/bit_operations.h:93:
+    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: drivers/staging/echo/bit_operations.h:94:
+        bits &= 0xCCCCCCCC;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: drivers/staging/echo/bit_operations.h:94:
+        bits &= 0xCCCCCCCC;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: drivers/staging/echo/bit_operations.h:95:
+        i += 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: drivers/staging/echo/bit_operations.h:95:
+        i += 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: drivers/staging/echo/bit_operations.h:96:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: drivers/staging/echo/bit_operations.h:97:
+    if (bits & 0xAAAAAAAA)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#215: FILE: drivers/staging/echo/bit_operations.h:97:
+    if (bits & 0xAAAAAAAA)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: drivers/staging/echo/bit_operations.h:98:
+    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: drivers/staging/echo/bit_operations.h:99:
+        bits &= 0xAAAAAAAA;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: drivers/staging/echo/bit_operations.h:99:
+        bits &= 0xAAAAAAAA;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: drivers/staging/echo/bit_operations.h:100:
+        i += 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: drivers/staging/echo/bit_operations.h:100:
+        i += 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: drivers/staging/echo/bit_operations.h:101:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: drivers/staging/echo/bit_operations.h:102:
+    return i;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#222: FILE: drivers/staging/echo/bit_operations.h:104:
+}
+/*- End of function --------------------------------------------------------*/

WARNING:INLINE: plain inline is preferred over __inline__
#224: FILE: drivers/staging/echo/bit_operations.h:106:
+static __inline__ int bottom_bit(unsigned int bits)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: drivers/staging/echo/bit_operations.h:108:
+    int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: drivers/staging/echo/bit_operations.h:110:
+    if (bits == 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: drivers/staging/echo/bit_operations.h:111:
+        return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: drivers/staging/echo/bit_operations.h:111:
+        return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: drivers/staging/echo/bit_operations.h:112:
+    i = 32;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: drivers/staging/echo/bit_operations.h:113:
+    if (bits & 0x0000FFFF)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#231: FILE: drivers/staging/echo/bit_operations.h:113:
+    if (bits & 0x0000FFFF)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: drivers/staging/echo/bit_operations.h:114:
+    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: drivers/staging/echo/bit_operations.h:115:
+        bits &= 0x0000FFFF;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: drivers/staging/echo/bit_operations.h:115:
+        bits &= 0x0000FFFF;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: drivers/staging/echo/bit_operations.h:116:
+        i -= 16;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: drivers/staging/echo/bit_operations.h:116:
+        i -= 16;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: drivers/staging/echo/bit_operations.h:117:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: drivers/staging/echo/bit_operations.h:118:
+    if (bits & 0x00FF00FF)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#236: FILE: drivers/staging/echo/bit_operations.h:118:
+    if (bits & 0x00FF00FF)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: drivers/staging/echo/bit_operations.h:119:
+    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: drivers/staging/echo/bit_operations.h:120:
+        bits &= 0x00FF00FF;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: drivers/staging/echo/bit_operations.h:120:
+        bits &= 0x00FF00FF;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#239: FILE: drivers/staging/echo/bit_operations.h:121:
+        i -= 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: drivers/staging/echo/bit_operations.h:121:
+        i -= 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: drivers/staging/echo/bit_operations.h:122:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: drivers/staging/echo/bit_operations.h:123:
+    if (bits & 0x0F0F0F0F)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#241: FILE: drivers/staging/echo/bit_operations.h:123:
+    if (bits & 0x0F0F0F0F)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: drivers/staging/echo/bit_operations.h:124:
+    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: drivers/staging/echo/bit_operations.h:125:
+        bits &= 0x0F0F0F0F;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: drivers/staging/echo/bit_operations.h:125:
+        bits &= 0x0F0F0F0F;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: drivers/staging/echo/bit_operations.h:126:
+        i -= 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: drivers/staging/echo/bit_operations.h:126:
+        i -= 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: drivers/staging/echo/bit_operations.h:127:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: drivers/staging/echo/bit_operations.h:128:
+    if (bits & 0x33333333)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#246: FILE: drivers/staging/echo/bit_operations.h:128:
+    if (bits & 0x33333333)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: drivers/staging/echo/bit_operations.h:129:
+    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: drivers/staging/echo/bit_operations.h:130:
+        bits &= 0x33333333;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: drivers/staging/echo/bit_operations.h:130:
+        bits &= 0x33333333;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: drivers/staging/echo/bit_operations.h:131:
+        i -= 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: drivers/staging/echo/bit_operations.h:131:
+        i -= 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: drivers/staging/echo/bit_operations.h:132:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: drivers/staging/echo/bit_operations.h:133:
+    if (bits & 0x55555555)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#251: FILE: drivers/staging/echo/bit_operations.h:133:
+    if (bits & 0x55555555)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: drivers/staging/echo/bit_operations.h:134:
+    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: drivers/staging/echo/bit_operations.h:135:
+        bits &= 0x55555555;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: drivers/staging/echo/bit_operations.h:135:
+        bits &= 0x55555555;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: drivers/staging/echo/bit_operations.h:136:
+        i -= 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: drivers/staging/echo/bit_operations.h:136:
+        i -= 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: drivers/staging/echo/bit_operations.h:137:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: drivers/staging/echo/bit_operations.h:138:
+    return i;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#258: FILE: drivers/staging/echo/bit_operations.h:140:
+}
+/*- End of function --------------------------------------------------------*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#262: FILE: drivers/staging/echo/bit_operations.h:144:
+/*! \brief Bit reverse a byte.
+    \param data The byte to be reversed.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#263: FILE: drivers/staging/echo/bit_operations.h:145:
+    \return The bit reversed version of data. */

WARNING:INLINE: plain inline is preferred over __inline__
#264: FILE: drivers/staging/echo/bit_operations.h:146:
+static __inline__ uint8_t bit_reverse8(uint8_t x)

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#266: FILE: drivers/staging/echo/bit_operations.h:148:
+#if defined(__i386__)  ||  defined(__x86_64__)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: drivers/staging/echo/bit_operations.h:150:
+    return ((x*0x0802U & 0x22110U) | (x*0x8020U & 0x88440U))*0x10101U >> 16;$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#268: FILE: drivers/staging/echo/bit_operations.h:150:
+    return ((x*0x0802U & 0x22110U) | (x*0x8020U & 0x88440U))*0x10101U >> 16;
               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#268: FILE: drivers/staging/echo/bit_operations.h:150:
+    return ((x*0x0802U & 0x22110U) | (x*0x8020U & 0x88440U))*0x10101U >> 16;
                                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#268: FILE: drivers/staging/echo/bit_operations.h:150:
+    return ((x*0x0802U & 0x22110U) | (x*0x8020U & 0x88440U))*0x10101U >> 16;
                                                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: drivers/staging/echo/bit_operations.h:153:
+    x = (x >> 4) | (x << 4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: drivers/staging/echo/bit_operations.h:154:
+    x = ((x & 0xCC) >> 2) | ((x & 0x33) << 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: drivers/staging/echo/bit_operations.h:155:
+    return ((x & 0xAA) >> 1) | ((x & 0x55) << 1);$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#276: FILE: drivers/staging/echo/bit_operations.h:158:
+}
+/*- End of function --------------------------------------------------------*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#279: FILE: drivers/staging/echo/bit_operations.h:161:
+/*! \brief Bit reverse a 16 bit word.
+    \param data The word to be reversed.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#280: FILE: drivers/staging/echo/bit_operations.h:162:
+    \return The bit reversed version of data. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#284: FILE: drivers/staging/echo/bit_operations.h:166:
+/*! \brief Bit reverse a 32 bit word.
+    \param data The word to be reversed.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#285: FILE: drivers/staging/echo/bit_operations.h:167:
+    \return The bit reversed version of data. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#289: FILE: drivers/staging/echo/bit_operations.h:171:
+/*! \brief Bit reverse each of the four bytes in a 32 bit word.
+    \param data The word to be reversed.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#290: FILE: drivers/staging/echo/bit_operations.h:172:
+    \return The bit reversed version of data. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#294: FILE: drivers/staging/echo/bit_operations.h:176:
+/*! \brief Find the number of set bits in a 32 bit word.
+    \param x The word to be searched.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#295: FILE: drivers/staging/echo/bit_operations.h:177:
+    \return The number of set bits. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#299: FILE: drivers/staging/echo/bit_operations.h:181:
+/*! \brief Create a mask as wide as the number in a 32 bit word.
+    \param x The word to be searched.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#300: FILE: drivers/staging/echo/bit_operations.h:182:
+    \return The mask. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#304: FILE: drivers/staging/echo/bit_operations.h:186:
+/*! \brief Create a mask as wide as the number in a 16 bit word.
+    \param x The word to be searched.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#305: FILE: drivers/staging/echo/bit_operations.h:187:
+    \return The mask. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#309: FILE: drivers/staging/echo/bit_operations.h:191:
+           with just that bit set.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#309: FILE: drivers/staging/echo/bit_operations.h:191:
+/*! \brief Find the least significant one in a word, and return a word
+           with just that bit set.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#311: FILE: drivers/staging/echo/bit_operations.h:193:
+    \return The word with the single set bit. */

WARNING:INLINE: plain inline is preferred over __inline__
#312: FILE: drivers/staging/echo/bit_operations.h:194:
+static __inline__ uint32_t least_significant_one32(uint32_t x)

CHECK:SPACING: No space is necessary after a cast
#314: FILE: drivers/staging/echo/bit_operations.h:196:
+    return (x & (-(int32_t) x));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: drivers/staging/echo/bit_operations.h:196:
+    return (x & (-(int32_t) x));$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#316: FILE: drivers/staging/echo/bit_operations.h:198:
+}
+/*- End of function --------------------------------------------------------*/

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: drivers/staging/echo/bit_operations.h:201:
+           with just that bit set.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#319: FILE: drivers/staging/echo/bit_operations.h:201:
+/*! \brief Find the most significant one in a word, and return a word
+           with just that bit set.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#321: FILE: drivers/staging/echo/bit_operations.h:203:
+    \return The word with the single set bit. */

WARNING:INLINE: plain inline is preferred over __inline__
#322: FILE: drivers/staging/echo/bit_operations.h:204:
+static __inline__ uint32_t most_significant_one32(uint32_t x)

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#324: FILE: drivers/staging/echo/bit_operations.h:206:
+#if defined(__i386__)  ||  defined(__x86_64__)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: drivers/staging/echo/bit_operations.h:207:
+    return 1 << top_bit(x);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: drivers/staging/echo/bit_operations.h:209:
+    x = make_mask32(x);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: drivers/staging/echo/bit_operations.h:210:
+    return (x ^ (x >> 1));$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#331: FILE: drivers/staging/echo/bit_operations.h:213:
+}
+/*- End of function --------------------------------------------------------*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#334: FILE: drivers/staging/echo/bit_operations.h:216:
+/*! \brief Find the parity of a byte.
+    \param x The byte to be checked.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#335: FILE: drivers/staging/echo/bit_operations.h:217:
+    \return 1 for odd, or 0 for even. */

WARNING:INLINE: plain inline is preferred over __inline__
#336: FILE: drivers/staging/echo/bit_operations.h:218:
+static __inline__ int parity8(uint8_t x)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: drivers/staging/echo/bit_operations.h:220:
+    x = (x ^ (x >> 4)) & 0x0F;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: drivers/staging/echo/bit_operations.h:221:
+    return (0x6996 >> x) & 1;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#341: FILE: drivers/staging/echo/bit_operations.h:223:
+}
+/*- End of function --------------------------------------------------------*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#344: FILE: drivers/staging/echo/bit_operations.h:226:
+/*! \brief Find the parity of a 16 bit word.
+    \param x The word to be checked.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#345: FILE: drivers/staging/echo/bit_operations.h:227:
+    \return 1 for odd, or 0 for even. */

WARNING:INLINE: plain inline is preferred over __inline__
#346: FILE: drivers/staging/echo/bit_operations.h:228:
+static __inline__ int parity16(uint16_t x)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: drivers/staging/echo/bit_operations.h:230:
+    x ^= (x >> 8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: drivers/staging/echo/bit_operations.h:231:
+    x = (x ^ (x >> 4)) & 0x0F;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: drivers/staging/echo/bit_operations.h:232:
+    return (0x6996 >> x) & 1;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#352: FILE: drivers/staging/echo/bit_operations.h:234:
+}
+/*- End of function --------------------------------------------------------*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#355: FILE: drivers/staging/echo/bit_operations.h:237:
+/*! \brief Find the parity of a 32 bit word.
+    \param x The word to be checked.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#356: FILE: drivers/staging/echo/bit_operations.h:238:
+    \return 1 for odd, or 0 for even. */

WARNING:INLINE: plain inline is preferred over __inline__
#357: FILE: drivers/staging/echo/bit_operations.h:239:
+static __inline__ int parity32(uint32_t x)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: drivers/staging/echo/bit_operations.h:241:
+    x ^= (x >> 16);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: drivers/staging/echo/bit_operations.h:242:
+    x ^= (x >> 8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: drivers/staging/echo/bit_operations.h:243:
+    x = (x ^ (x >> 4)) & 0x0F;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: drivers/staging/echo/bit_operations.h:244:
+    return (0x6996 >> x) & 1;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#364: FILE: drivers/staging/echo/bit_operations.h:246:
+}
+/*- End of function --------------------------------------------------------*/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#378: FILE: drivers/staging/echo/echo.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#405: FILE: drivers/staging/echo/echo.c:28:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#406: FILE: drivers/staging/echo/echo.c:29:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#408: FILE: drivers/staging/echo/echo.c:31:
+ * $Id: echo.c,v 1.20 2006/12/01 18:00:48 steveu Exp $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#414: FILE: drivers/staging/echo/echo.c:37:
+/* Implementation Notes
+   David Rowe

WARNING:TYPO_SPELLING: 'coefficents' may be misspelled - perhaps 'coefficients'?
#439: FILE: drivers/staging/echo/echo.c:62:
+   bit coefficents.  This reduces the MIPs and storage required.
        ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'evaulated' may be misspelled - perhaps 'evaluated'?
#440: FILE: drivers/staging/echo/echo.c:63:
+   I evaulated the 16 bit port using g168_tests.sh and listening tests
      ^^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#454: FILE: drivers/staging/echo/echo.c:77:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#465: FILE: drivers/staging/echo/echo.c:88:
+         Messerschmitt, Hedberg, Cole, Haoui, Winship, "Digital Voice$

ERROR:CODE_INDENT: code indent should use tabs where possible
#466: FILE: drivers/staging/echo/echo.c:89:
+         Echo Canceller with a TMS320020,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#467: FILE: drivers/staging/echo/echo.c:90:
+         http://www.rowetel.com/images/echo/spra129.pdf$

ERROR:CODE_INDENT: code indent should use tabs where possible
#475: FILE: drivers/staging/echo/echo.c:98:
+         http://en.wikipedia.org/wiki/Least_mean_squares_filter$

ERROR:CODE_INDENT: code indent should use tabs where possible
#501: FILE: drivers/staging/echo/echo.c:124:
+                               FUNCTIONS$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#501: FILE: drivers/staging/echo/echo.c:124:
+/*-----------------------------------------------------------------------*\
+                               FUNCTIONS

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#502: FILE: drivers/staging/echo/echo.c:125:
+\*-----------------------------------------------------------------------*/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#506: FILE: drivers/staging/echo/echo.c:129:
+
+

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#508: FILE: drivers/staging/echo/echo.c:131:
+static void __inline__ lms_adapt_bg(echo_can_state_t *ec, int clean, int shift)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

WARNING:INLINE: plain inline is preferred over __inline__
#508: FILE: drivers/staging/echo/echo.c:131:
+static void __inline__ lms_adapt_bg(echo_can_state_t *ec, int clean, int shift)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: drivers/staging/echo/echo.c:133:
+    int i, j;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#511: FILE: drivers/staging/echo/echo.c:134:
+    int offset1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: drivers/staging/echo/echo.c:135:
+    int offset2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#513: FILE: drivers/staging/echo/echo.c:136:
+    int factor;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#514: FILE: drivers/staging/echo/echo.c:137:
+    int exp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#515: FILE: drivers/staging/echo/echo.c:138:
+    int16_t *phist;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's16' over 'int16_t'
#515: FILE: drivers/staging/echo/echo.c:138:
+    int16_t *phist;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#516: FILE: drivers/staging/echo/echo.c:139:
+    int n;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#518: FILE: drivers/staging/echo/echo.c:141:
+    if (shift > 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#520: FILE: drivers/staging/echo/echo.c:143:
+    else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: drivers/staging/echo/echo.c:148:
+    offset2 = ec->curr_pos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: drivers/staging/echo/echo.c:149:
+    offset1 = ec->taps - offset2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: drivers/staging/echo/echo.c:150:
+    phist = &ec->fir_state_bg.history[offset2];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#532: FILE: drivers/staging/echo/echo.c:155:
+    n = ec->taps;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: drivers/staging/echo/echo.c:156:
+    for (i = 0, j = offset2;  i < n;  i++, j++)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#533: FILE: drivers/staging/echo/echo.c:156:
+    for (i = 0, j = offset2;  i < n;  i++, j++)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#533: FILE: drivers/staging/echo/echo.c:156:
+    for (i = 0, j = offset2;  i < n;  i++, j++)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#534: FILE: drivers/staging/echo/echo.c:157:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#535: FILE: drivers/staging/echo/echo.c:158:
+       exp = *phist++ * factor;$

CHECK:SPACING: No space is necessary after a cast
#536: FILE: drivers/staging/echo/echo.c:159:
+       ec->fir_taps16[1][i] += (int16_t) ((exp+(1<<14)) >> 15);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#536: FILE: drivers/staging/echo/echo.c:159:
+       ec->fir_taps16[1][i] += (int16_t) ((exp+(1<<14)) >> 15);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#536: FILE: drivers/staging/echo/echo.c:159:
+       ec->fir_taps16[1][i] += (int16_t) ((exp+(1<<14)) >> 15);
                                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#536: FILE: drivers/staging/echo/echo.c:159:
+       ec->fir_taps16[1][i] += (int16_t) ((exp+(1<<14)) >> 15);
                                                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#537: FILE: drivers/staging/echo/echo.c:160:
+    }$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#541: FILE: drivers/staging/echo/echo.c:164:
+    /* Note the asm for the inner loop above generated by Blackfin gcc
+       4.1.1 is pretty good (note even parallel instructions used):

ERROR:CODE_INDENT: code indent should use tabs where possible
#543: FILE: drivers/staging/echo/echo.c:166:
+    ^IR0 = W [P0++] (X);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#543: FILE: drivers/staging/echo/echo.c:166:
+    ^IR0 = W [P0++] (X);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#562: FILE: drivers/staging/echo/echo.c:185:
+/*
+   IDEAS for further optimisation of lms_adapt_bg():

WARNING:INLINE: plain inline is preferred over __inline__
#580: FILE: drivers/staging/echo/echo.c:203:
+static __inline__ void lms_adapt_bg(echo_can_state_t *ec, int clean, int shift)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#582: FILE: drivers/staging/echo/echo.c:205:
+    int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#584: FILE: drivers/staging/echo/echo.c:207:
+    int offset1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#585: FILE: drivers/staging/echo/echo.c:208:
+    int offset2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#586: FILE: drivers/staging/echo/echo.c:209:
+    int factor;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#587: FILE: drivers/staging/echo/echo.c:210:
+    int exp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: drivers/staging/echo/echo.c:212:
+    if (shift > 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#591: FILE: drivers/staging/echo/echo.c:214:
+    else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#596: FILE: drivers/staging/echo/echo.c:219:
+    offset2 = ec->curr_pos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#597: FILE: drivers/staging/echo/echo.c:220:
+    offset1 = ec->taps - offset2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#599: FILE: drivers/staging/echo/echo.c:222:
+    for (i = ec->taps - 1;  i >= offset1;  i--)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#599: FILE: drivers/staging/echo/echo.c:222:
+    for (i = ec->taps - 1;  i >= offset1;  i--)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#599: FILE: drivers/staging/echo/echo.c:222:
+    for (i = ec->taps - 1;  i >= offset1;  i--)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#600: FILE: drivers/staging/echo/echo.c:223:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#601: FILE: drivers/staging/echo/echo.c:224:
+       exp = (ec->fir_state_bg.history[i - offset1]*factor);$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#601: FILE: drivers/staging/echo/echo.c:224:
+       exp = (ec->fir_state_bg.history[i - offset1]*factor);
                                                    ^

CHECK:SPACING: No space is necessary after a cast
#602: FILE: drivers/staging/echo/echo.c:225:
+       ec->fir_taps16[1][i] += (int16_t) ((exp+(1<<14)) >> 15);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#602: FILE: drivers/staging/echo/echo.c:225:
+       ec->fir_taps16[1][i] += (int16_t) ((exp+(1<<14)) >> 15);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#602: FILE: drivers/staging/echo/echo.c:225:
+       ec->fir_taps16[1][i] += (int16_t) ((exp+(1<<14)) >> 15);
                                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#602: FILE: drivers/staging/echo/echo.c:225:
+       ec->fir_taps16[1][i] += (int16_t) ((exp+(1<<14)) >> 15);
                                                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#603: FILE: drivers/staging/echo/echo.c:226:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#604: FILE: drivers/staging/echo/echo.c:227:
+    for (  ;  i >= 0;  i--)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#604: FILE: drivers/staging/echo/echo.c:227:
+    for (  ;  i >= 0;  i--)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 7)
#604: FILE: drivers/staging/echo/echo.c:227:
+    for (  ;  i >= 0;  i--)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#605: FILE: drivers/staging/echo/echo.c:228:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#606: FILE: drivers/staging/echo/echo.c:229:
+       exp = (ec->fir_state_bg.history[i + offset2]*factor);$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#606: FILE: drivers/staging/echo/echo.c:229:
+       exp = (ec->fir_state_bg.history[i + offset2]*factor);
                                                    ^

CHECK:SPACING: No space is necessary after a cast
#607: FILE: drivers/staging/echo/echo.c:230:
+       ec->fir_taps16[1][i] += (int16_t) ((exp+(1<<14)) >> 15);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#607: FILE: drivers/staging/echo/echo.c:230:
+       ec->fir_taps16[1][i] += (int16_t) ((exp+(1<<14)) >> 15);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#607: FILE: drivers/staging/echo/echo.c:230:
+       ec->fir_taps16[1][i] += (int16_t) ((exp+(1<<14)) >> 15);
                                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#607: FILE: drivers/staging/echo/echo.c:230:
+       ec->fir_taps16[1][i] += (int16_t) ((exp+(1<<14)) >> 15);
                                                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#608: FILE: drivers/staging/echo/echo.c:231:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#616: FILE: drivers/staging/echo/echo.c:239:
+    echo_can_state_t *ec;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#617: FILE: drivers/staging/echo/echo.c:240:
+    int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#618: FILE: drivers/staging/echo/echo.c:241:
+    int j;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#620: FILE: drivers/staging/echo/echo.c:243:
+    ec = kmalloc(sizeof(*ec), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#621: FILE: drivers/staging/echo/echo.c:244:
+    if (ec == NULL)$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ec"
#621: FILE: drivers/staging/echo/echo.c:244:
+    if (ec == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#622: FILE: drivers/staging/echo/echo.c:245:
+        return  NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#622: FILE: drivers/staging/echo/echo.c:245:
+        return  NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#623: FILE: drivers/staging/echo/echo.c:246:
+    memset(ec, 0, sizeof(*ec));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: drivers/staging/echo/echo.c:248:
+    ec->taps = len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#626: FILE: drivers/staging/echo/echo.c:249:
+    ec->log2taps = top_bit(len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#627: FILE: drivers/staging/echo/echo.c:250:
+    ec->curr_pos = ec->taps - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#629: FILE: drivers/staging/echo/echo.c:252:
+    for (i = 0;  i < 2;  i++)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#629: FILE: drivers/staging/echo/echo.c:252:
+    for (i = 0;  i < 2;  i++)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#630: FILE: drivers/staging/echo/echo.c:253:
+    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#631: FILE: drivers/staging/echo/echo.c:254:
+        if ((ec->fir_taps16[i] = (int16_t *) malloc((ec->taps)*sizeof(int16_t))) == NULL)$

CHECK:SPACING: No space is necessary after a cast
#631: FILE: drivers/staging/echo/echo.c:254:
+        if ((ec->fir_taps16[i] = (int16_t *) malloc((ec->taps)*sizeof(int16_t))) == NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#631: FILE: drivers/staging/echo/echo.c:254:
+        if ((ec->fir_taps16[i] = (int16_t *) malloc((ec->taps)*sizeof(int16_t))) == NULL)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#631: FILE: drivers/staging/echo/echo.c:254:
+        if ((ec->fir_taps16[i] = (int16_t *) malloc((ec->taps)*sizeof(int16_t))) == NULL)
+        {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#631: FILE: drivers/staging/echo/echo.c:254:
+        if ((ec->fir_taps16[i] = (int16_t *) malloc((ec->taps)*sizeof(int16_t))) == NULL)
+        {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#631: FILE: drivers/staging/echo/echo.c:254:
+        if ((ec->fir_taps16[i] = (int16_t *) malloc((ec->taps)*sizeof(int16_t))) == NULL)
                                                               ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ec->taps'
#631: FILE: drivers/staging/echo/echo.c:254:
+        if ((ec->fir_taps16[i] = (int16_t *) malloc((ec->taps)*sizeof(int16_t))) == NULL)

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#631: FILE: drivers/staging/echo/echo.c:254:
+        if ((ec->fir_taps16[i] = (int16_t *) malloc((ec->taps)*sizeof(int16_t))) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#632: FILE: drivers/staging/echo/echo.c:255:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#632: FILE: drivers/staging/echo/echo.c:255:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#633: FILE: drivers/staging/echo/echo.c:256:
+            for (j = 0;  j < i;  j++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#633: FILE: drivers/staging/echo/echo.c:256:
+            for (j = 0;  j < i;  j++)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#634: FILE: drivers/staging/echo/echo.c:257:
+                kfree(ec->fir_taps16[j]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#634: FILE: drivers/staging/echo/echo.c:257:
+                kfree(ec->fir_taps16[j]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#635: FILE: drivers/staging/echo/echo.c:258:
+            kfree(ec);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#635: FILE: drivers/staging/echo/echo.c:258:
+            kfree(ec);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#636: FILE: drivers/staging/echo/echo.c:259:
+            return  NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#636: FILE: drivers/staging/echo/echo.c:259:
+            return  NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#637: FILE: drivers/staging/echo/echo.c:260:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#637: FILE: drivers/staging/echo/echo.c:260:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#638: FILE: drivers/staging/echo/echo.c:261:
+        memset(ec->fir_taps16[i], 0, (ec->taps)*sizeof(int16_t));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#638: FILE: drivers/staging/echo/echo.c:261:
+        memset(ec->fir_taps16[i], 0, (ec->taps)*sizeof(int16_t));$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#638: FILE: drivers/staging/echo/echo.c:261:
+        memset(ec->fir_taps16[i], 0, (ec->taps)*sizeof(int16_t));
                                                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#639: FILE: drivers/staging/echo/echo.c:262:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#641: FILE: drivers/staging/echo/echo.c:264:
+    fir16_create(&ec->fir_state,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#642: FILE: drivers/staging/echo/echo.c:265:
+                 ec->fir_taps16[0],$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#642: FILE: drivers/staging/echo/echo.c:265:
+                 ec->fir_taps16[0],$

ERROR:CODE_INDENT: code indent should use tabs where possible
#643: FILE: drivers/staging/echo/echo.c:266:
+                 ec->taps);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#643: FILE: drivers/staging/echo/echo.c:266:
+                 ec->taps);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#644: FILE: drivers/staging/echo/echo.c:267:
+    fir16_create(&ec->fir_state_bg,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#645: FILE: drivers/staging/echo/echo.c:268:
+                 ec->fir_taps16[1],$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#645: FILE: drivers/staging/echo/echo.c:268:
+                 ec->fir_taps16[1],$

ERROR:CODE_INDENT: code indent should use tabs where possible
#646: FILE: drivers/staging/echo/echo.c:269:
+                 ec->taps);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#646: FILE: drivers/staging/echo/echo.c:269:
+                 ec->taps);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#648: FILE: drivers/staging/echo/echo.c:271:
+    for(i=0; i<5; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#648: FILE: drivers/staging/echo/echo.c:271:
+    for(i=0; i<5; i++) {
+      ec->xvtx[i] = ec->yvtx[i] = ec->xvrx[i] = ec->yvrx[i] = 0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#648: FILE: drivers/staging/echo/echo.c:271:
+    for(i=0; i<5; i++) {
          ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#648: FILE: drivers/staging/echo/echo.c:271:
+    for(i=0; i<5; i++) {
               ^

ERROR:SPACING: space required before the open parenthesis '('
#648: FILE: drivers/staging/echo/echo.c:271:
+    for(i=0; i<5; i++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#648: FILE: drivers/staging/echo/echo.c:271:
+    for(i=0; i<5; i++) {
+      ec->xvtx[i] = ec->yvtx[i] = ec->xvrx[i] = ec->yvrx[i] = 0;
+    }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#649: FILE: drivers/staging/echo/echo.c:272:
+      ec->xvtx[i] = ec->yvtx[i] = ec->xvrx[i] = ec->yvrx[i] = 0;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#649: FILE: drivers/staging/echo/echo.c:272:
+      ec->xvtx[i] = ec->yvtx[i] = ec->xvrx[i] = ec->yvrx[i] = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#650: FILE: drivers/staging/echo/echo.c:273:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#652: FILE: drivers/staging/echo/echo.c:275:
+    ec->cng_level = 1000;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#653: FILE: drivers/staging/echo/echo.c:276:
+    echo_can_adaption_mode(ec, adaption_mode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#655: FILE: drivers/staging/echo/echo.c:278:
+    ec->snapshot = (int16_t*)malloc(ec->taps*sizeof(int16_t));$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#655: FILE: drivers/staging/echo/echo.c:278:
+    ec->snapshot = (int16_t*)malloc(ec->taps*sizeof(int16_t));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#655: FILE: drivers/staging/echo/echo.c:278:
+    ec->snapshot = (int16_t*)malloc(ec->taps*sizeof(int16_t));
                                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#656: FILE: drivers/staging/echo/echo.c:279:
+    memset(ec->snapshot, 0, sizeof(int16_t)*ec->taps);$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#656: FILE: drivers/staging/echo/echo.c:279:
+    memset(ec->snapshot, 0, sizeof(int16_t)*ec->taps);
                                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#658: FILE: drivers/staging/echo/echo.c:281:
+    ec->cond_met = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#659: FILE: drivers/staging/echo/echo.c:282:
+    ec->Pstates = 0;$

CHECK:CAMELCASE: Avoid CamelCase: <Pstates>
#659: FILE: drivers/staging/echo/echo.c:282:
+    ec->Pstates = 0;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#660: FILE: drivers/staging/echo/echo.c:283:
+    ec->Ltxacc = ec->Lrxacc = ec->Lcleanacc = ec->Lclean_bgacc = 0;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#660: FILE: drivers/staging/echo/echo.c:283:
+    ec->Ltxacc = ec->Lrxacc = ec->Lcleanacc = ec->Lclean_bgacc = 0;

CHECK:CAMELCASE: Avoid CamelCase: <Ltxacc>
#660: FILE: drivers/staging/echo/echo.c:283:
+    ec->Ltxacc = ec->Lrxacc = ec->Lcleanacc = ec->Lclean_bgacc = 0;

CHECK:CAMELCASE: Avoid CamelCase: <Lrxacc>
#660: FILE: drivers/staging/echo/echo.c:283:
+    ec->Ltxacc = ec->Lrxacc = ec->Lcleanacc = ec->Lclean_bgacc = 0;

CHECK:CAMELCASE: Avoid CamelCase: <Lcleanacc>
#660: FILE: drivers/staging/echo/echo.c:283:
+    ec->Ltxacc = ec->Lrxacc = ec->Lcleanacc = ec->Lclean_bgacc = 0;

CHECK:CAMELCASE: Avoid CamelCase: <Lclean_bgacc>
#660: FILE: drivers/staging/echo/echo.c:283:
+    ec->Ltxacc = ec->Lrxacc = ec->Lcleanacc = ec->Lclean_bgacc = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#661: FILE: drivers/staging/echo/echo.c:284:
+    ec->Ltx = ec->Lrx = ec->Lclean = ec->Lclean_bg = 0;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#661: FILE: drivers/staging/echo/echo.c:284:
+    ec->Ltx = ec->Lrx = ec->Lclean = ec->Lclean_bg = 0;

CHECK:CAMELCASE: Avoid CamelCase: <Ltx>
#661: FILE: drivers/staging/echo/echo.c:284:
+    ec->Ltx = ec->Lrx = ec->Lclean = ec->Lclean_bg = 0;

CHECK:CAMELCASE: Avoid CamelCase: <Lrx>
#661: FILE: drivers/staging/echo/echo.c:284:
+    ec->Ltx = ec->Lrx = ec->Lclean = ec->Lclean_bg = 0;

CHECK:CAMELCASE: Avoid CamelCase: <Lclean>
#661: FILE: drivers/staging/echo/echo.c:284:
+    ec->Ltx = ec->Lrx = ec->Lclean = ec->Lclean_bg = 0;

CHECK:CAMELCASE: Avoid CamelCase: <Lclean_bg>
#661: FILE: drivers/staging/echo/echo.c:284:
+    ec->Ltx = ec->Lrx = ec->Lclean = ec->Lclean_bg = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#662: FILE: drivers/staging/echo/echo.c:285:
+    ec->tx_1 = ec->tx_2 = ec->rx_1 = ec->rx_2 = 0;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#662: FILE: drivers/staging/echo/echo.c:285:
+    ec->tx_1 = ec->tx_2 = ec->rx_1 = ec->rx_2 = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#663: FILE: drivers/staging/echo/echo.c:286:
+    ec->Lbgn = ec->Lbgn_acc = 0;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#663: FILE: drivers/staging/echo/echo.c:286:
+    ec->Lbgn = ec->Lbgn_acc = 0;

CHECK:CAMELCASE: Avoid CamelCase: <Lbgn>
#663: FILE: drivers/staging/echo/echo.c:286:
+    ec->Lbgn = ec->Lbgn_acc = 0;

CHECK:CAMELCASE: Avoid CamelCase: <Lbgn_acc>
#663: FILE: drivers/staging/echo/echo.c:286:
+    ec->Lbgn = ec->Lbgn_acc = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#664: FILE: drivers/staging/echo/echo.c:287:
+    ec->Lbgn_upper = 200;$

CHECK:CAMELCASE: Avoid CamelCase: <Lbgn_upper>
#664: FILE: drivers/staging/echo/echo.c:287:
+    ec->Lbgn_upper = 200;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#665: FILE: drivers/staging/echo/echo.c:288:
+    ec->Lbgn_upper_acc = ec->Lbgn_upper << 13;$

CHECK:CAMELCASE: Avoid CamelCase: <Lbgn_upper_acc>
#665: FILE: drivers/staging/echo/echo.c:288:
+    ec->Lbgn_upper_acc = ec->Lbgn_upper << 13;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#667: FILE: drivers/staging/echo/echo.c:290:
+    return  ec;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#669: FILE: drivers/staging/echo/echo.c:292:
+}
+/*- End of function --------------------------------------------------------*/

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#682: FILE: drivers/staging/echo/echo.c:305:
+}
+/*- End of function --------------------------------------------------------*/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#686: FILE: drivers/staging/echo/echo.c:309:
+    ec->adaption_mode = adaption_mode;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#688: FILE: drivers/staging/echo/echo.c:311:
+}
+/*- End of function --------------------------------------------------------*/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#692: FILE: drivers/staging/echo/echo.c:315:
+    int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#694: FILE: drivers/staging/echo/echo.c:317:
+    ec->Ltxacc = ec->Lrxacc = ec->Lcleanacc = ec->Lclean_bgacc = 0;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#694: FILE: drivers/staging/echo/echo.c:317:
+    ec->Ltxacc = ec->Lrxacc = ec->Lcleanacc = ec->Lclean_bgacc = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#695: FILE: drivers/staging/echo/echo.c:318:
+    ec->Ltx = ec->Lrx = ec->Lclean = ec->Lclean_bg = 0;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#695: FILE: drivers/staging/echo/echo.c:318:
+    ec->Ltx = ec->Lrx = ec->Lclean = ec->Lclean_bg = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#696: FILE: drivers/staging/echo/echo.c:319:
+    ec->tx_1 = ec->tx_2 = ec->rx_1 = ec->rx_2 = 0;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#696: FILE: drivers/staging/echo/echo.c:319:
+    ec->tx_1 = ec->tx_2 = ec->rx_1 = ec->rx_2 = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#698: FILE: drivers/staging/echo/echo.c:321:
+    ec->Lbgn = ec->Lbgn_acc = 0;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#698: FILE: drivers/staging/echo/echo.c:321:
+    ec->Lbgn = ec->Lbgn_acc = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#699: FILE: drivers/staging/echo/echo.c:322:
+    ec->Lbgn_upper = 200;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#700: FILE: drivers/staging/echo/echo.c:323:
+    ec->Lbgn_upper_acc = ec->Lbgn_upper << 13;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#702: FILE: drivers/staging/echo/echo.c:325:
+    ec->nonupdate_dwell = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#704: FILE: drivers/staging/echo/echo.c:327:
+    fir16_flush(&ec->fir_state);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#705: FILE: drivers/staging/echo/echo.c:328:
+    fir16_flush(&ec->fir_state_bg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#706: FILE: drivers/staging/echo/echo.c:329:
+    ec->fir_state.curr_pos = ec->taps - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#707: FILE: drivers/staging/echo/echo.c:330:
+    ec->fir_state_bg.curr_pos = ec->taps - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#708: FILE: drivers/staging/echo/echo.c:331:
+    for (i = 0;  i < 2;  i++)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#709: FILE: drivers/staging/echo/echo.c:332:
+        memset(ec->fir_taps16[i], 0, ec->taps*sizeof(int16_t));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#709: FILE: drivers/staging/echo/echo.c:332:
+        memset(ec->fir_taps16[i], 0, ec->taps*sizeof(int16_t));$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#709: FILE: drivers/staging/echo/echo.c:332:
+        memset(ec->fir_taps16[i], 0, ec->taps*sizeof(int16_t));
                                              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#711: FILE: drivers/staging/echo/echo.c:334:
+    ec->curr_pos = ec->taps - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#712: FILE: drivers/staging/echo/echo.c:335:
+    ec->Pstates = 0;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#714: FILE: drivers/staging/echo/echo.c:337:
+}
+/*- End of function --------------------------------------------------------*/

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#716: FILE: drivers/staging/echo/echo.c:339:
+void echo_can_snapshot(echo_can_state_t *ec) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#717: FILE: drivers/staging/echo/echo.c:340:
+    memcpy(ec->snapshot, ec->fir_taps16[0], ec->taps*sizeof(int16_t));$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#717: FILE: drivers/staging/echo/echo.c:340:
+    memcpy(ec->snapshot, ec->fir_taps16[0], ec->taps*sizeof(int16_t));
                                                     ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#719: FILE: drivers/staging/echo/echo.c:342:
+}
+/*- End of function --------------------------------------------------------*/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#725: FILE: drivers/staging/echo/echo.c:348:
+    int32_t echo_value;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#725: FILE: drivers/staging/echo/echo.c:348:
+    int32_t echo_value;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#726: FILE: drivers/staging/echo/echo.c:349:
+    int clean_bg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#727: FILE: drivers/staging/echo/echo.c:350:
+    int tmp, tmp1;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#730: FILE: drivers/staging/echo/echo.c:353:
+    /* Input scaling was found be required to prevent problems when tx
+       starts clipping.  Another possible way to handle this would be the

WARNING:TYPO_SPELLING: 'coefficent' may be misspelled - perhaps 'coefficient'?
#731: FILE: drivers/staging/echo/echo.c:354:
+       filter coefficent scaling. */
               ^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#731: FILE: drivers/staging/echo/echo.c:354:
+       filter coefficent scaling. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#733: FILE: drivers/staging/echo/echo.c:356:
+    ec->tx = tx; ec->rx = rx;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#734: FILE: drivers/staging/echo/echo.c:357:
+    tx >>=1;$

ERROR:SPACING: spaces required around that '>>=' (ctx:WxV)
#734: FILE: drivers/staging/echo/echo.c:357:
+    tx >>=1;
        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#735: FILE: drivers/staging/echo/echo.c:358:
+    rx >>=1;$

ERROR:SPACING: spaces required around that '>>=' (ctx:WxV)
#735: FILE: drivers/staging/echo/echo.c:358:
+    rx >>=1;
        ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#738: FILE: drivers/staging/echo/echo.c:361:
+    /*
+       Filter DC, 3dB point is 160Hz (I think), note 32 bit precision required

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#752: FILE: drivers/staging/echo/echo.c:375:
+    if (ec->adaption_mode & ECHO_CAN_USE_RX_HPF) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#752: FILE: drivers/staging/echo/echo.c:375:
+    if (ec->adaption_mode & ECHO_CAN_USE_RX_HPF) {
+      tmp = rx << 15;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#753: FILE: drivers/staging/echo/echo.c:376:
+      tmp = rx << 15;$

WARNING:IF_1: Consider removing the #if 1 and its #endif
#754: FILE: drivers/staging/echo/echo.c:377:
+#if 1

ERROR:CODE_INDENT: code indent should use tabs where possible
#755: FILE: drivers/staging/echo/echo.c:378:
+        /* Make sure the gain of the HPF is 1.0. This can still saturate a little under$

ERROR:CODE_INDENT: code indent should use tabs where possible
#756: FILE: drivers/staging/echo/echo.c:379:
+           impulse conditions, and it might roll to 32768 and need clipping on sustained peak$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#756: FILE: drivers/staging/echo/echo.c:379:
+        /* Make sure the gain of the HPF is 1.0. This can still saturate a little under
+           impulse conditions, and it might roll to 32768 and need clipping on sustained peak

ERROR:CODE_INDENT: code indent should use tabs where possible
#757: FILE: drivers/staging/echo/echo.c:380:
+           level signals. However, the scale of such clipping is small, and the error due to$

ERROR:CODE_INDENT: code indent should use tabs where possible
#758: FILE: drivers/staging/echo/echo.c:381:
+           any saturation should not markedly affect the downstream processing. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#758: FILE: drivers/staging/echo/echo.c:381:
+           any saturation should not markedly affect the downstream processing. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#759: FILE: drivers/staging/echo/echo.c:382:
+        tmp -= (tmp >> 4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#759: FILE: drivers/staging/echo/echo.c:382:
+        tmp -= (tmp >> 4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#761: FILE: drivers/staging/echo/echo.c:384:
+      ec->rx_1 += -(ec->rx_1>>DC_LOG2BETA) + tmp - ec->rx_2;$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#761: FILE: drivers/staging/echo/echo.c:384:
+      ec->rx_1 += -(ec->rx_1>>DC_LOG2BETA) + tmp - ec->rx_2;
                             ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#764: FILE: drivers/staging/echo/echo.c:387:
+      /* hard limit filter to prevent clipping.  Note that at this stage
+	 rx should be limited to +/- 16383 due to right shift above */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#764: FILE: drivers/staging/echo/echo.c:387:
+	 rx should be limited to +/- 16383 due to right shift above */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#765: FILE: drivers/staging/echo/echo.c:388:
+      tmp1 = ec->rx_1 >> 15;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#766: FILE: drivers/staging/echo/echo.c:389:
+      if (tmp1 > 16383) tmp1 = 16383;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#766: FILE: drivers/staging/echo/echo.c:389:
+      if (tmp1 > 16383) tmp1 = 16383;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#767: FILE: drivers/staging/echo/echo.c:390:
+      if (tmp1 < -16383) tmp1 = -16383;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#767: FILE: drivers/staging/echo/echo.c:390:
+      if (tmp1 < -16383) tmp1 = -16383;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#768: FILE: drivers/staging/echo/echo.c:391:
+      rx = tmp1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#769: FILE: drivers/staging/echo/echo.c:392:
+      ec->rx_2 = tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#770: FILE: drivers/staging/echo/echo.c:393:
+    }$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#773: FILE: drivers/staging/echo/echo.c:396:
+    /* Block average of power in the filter states.  Used for
+       adaption power calculation. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#773: FILE: drivers/staging/echo/echo.c:396:
+       adaption power calculation. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#775: FILE: drivers/staging/echo/echo.c:398:
+    {$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#779: FILE: drivers/staging/echo/echo.c:402:
+	/* efficient "out with the old and in with the new" algorithm so
+	   we don't have to recalculate over the whole block of

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#780: FILE: drivers/staging/echo/echo.c:403:
+	   samples. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#783: FILE: drivers/staging/echo/echo.c:406:
+              (int)ec->fir_state.history[ec->fir_state.curr_pos];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#783: FILE: drivers/staging/echo/echo.c:406:
+              (int)ec->fir_state.history[ec->fir_state.curr_pos];$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#784: FILE: drivers/staging/echo/echo.c:407:
+	ec->Pstates += ((new - old) + (1<<ec->log2taps)) >> ec->log2taps;
 	                                ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#785: FILE: drivers/staging/echo/echo.c:408:
+	if (ec->Pstates < 0) ec->Pstates = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#786: FILE: drivers/staging/echo/echo.c:409:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#790: FILE: drivers/staging/echo/echo.c:413:
+    ec->Ltxacc += abs(tx) - ec->Ltx;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#791: FILE: drivers/staging/echo/echo.c:414:
+    ec->Ltx = (ec->Ltxacc + (1<<4)) >> 5;$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#791: FILE: drivers/staging/echo/echo.c:414:
+    ec->Ltx = (ec->Ltxacc + (1<<4)) >> 5;
                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#792: FILE: drivers/staging/echo/echo.c:415:
+    ec->Lrxacc += abs(rx) - ec->Lrx;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#793: FILE: drivers/staging/echo/echo.c:416:
+    ec->Lrx = (ec->Lrxacc + (1<<4)) >> 5;$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#793: FILE: drivers/staging/echo/echo.c:416:
+    ec->Lrx = (ec->Lrxacc + (1<<4)) >> 5;
                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#797: FILE: drivers/staging/echo/echo.c:420:
+    ec->fir_state.coeffs = ec->fir_taps16[0];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#798: FILE: drivers/staging/echo/echo.c:421:
+    echo_value = fir16(&ec->fir_state, tx);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#799: FILE: drivers/staging/echo/echo.c:422:
+    ec->clean = rx - echo_value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#800: FILE: drivers/staging/echo/echo.c:423:
+    ec->Lcleanacc += abs(ec->clean) - ec->Lclean;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#801: FILE: drivers/staging/echo/echo.c:424:
+    ec->Lclean = (ec->Lcleanacc + (1<<4)) >> 5;$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#801: FILE: drivers/staging/echo/echo.c:424:
+    ec->Lclean = (ec->Lcleanacc + (1<<4)) >> 5;
                                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#805: FILE: drivers/staging/echo/echo.c:428:
+    echo_value = fir16(&ec->fir_state_bg, tx);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#806: FILE: drivers/staging/echo/echo.c:429:
+    clean_bg = rx - echo_value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#807: FILE: drivers/staging/echo/echo.c:430:
+    ec->Lclean_bgacc += abs(clean_bg) - ec->Lclean_bg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#808: FILE: drivers/staging/echo/echo.c:431:
+    ec->Lclean_bg = (ec->Lclean_bgacc + (1<<4)) >> 5;$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#808: FILE: drivers/staging/echo/echo.c:431:
+    ec->Lclean_bg = (ec->Lclean_bgacc + (1<<4)) >> 5;
                                           ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#813: FILE: drivers/staging/echo/echo.c:436:
+    /* Almost always adap bg filter, just simple DT and energy
+       detection to minimise adaption in cases of strong double talk.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#816: FILE: drivers/staging/echo/echo.c:439:
+    ec->factor = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#817: FILE: drivers/staging/echo/echo.c:440:
+    ec->shift = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#818: FILE: drivers/staging/echo/echo.c:441:
+    if ((ec->nonupdate_dwell == 0)) {$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ec->nonupdate_dwell == 0'
#818: FILE: drivers/staging/echo/echo.c:441:
+    if ((ec->nonupdate_dwell == 0)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#822: FILE: drivers/staging/echo/echo.c:445:
+	/* Determine:
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#841: FILE: drivers/staging/echo/echo.c:464:
+                                       (30 - 2 - log2(P))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#860: FILE: drivers/staging/echo/echo.c:483:
+    }$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#863: FILE: drivers/staging/echo/echo.c:486:
+    /* very simple DTD to make sure we dont try and adapt with strong
+       near end speech */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#863: FILE: drivers/staging/echo/echo.c:486:
+       near end speech */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#865: FILE: drivers/staging/echo/echo.c:488:
+    ec->adapt = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#866: FILE: drivers/staging/echo/echo.c:489:
+    if ((ec->Lrx > MIN_RX_POWER_FOR_ADAPTION) && (ec->Lrx > ec->Ltx))$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ec->Lrx > MIN_RX_POWER_FOR_ADAPTION'
#866: FILE: drivers/staging/echo/echo.c:489:
+    if ((ec->Lrx > MIN_RX_POWER_FOR_ADAPTION) && (ec->Lrx > ec->Ltx))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ec->Lrx > ec->Ltx'
#866: FILE: drivers/staging/echo/echo.c:489:
+    if ((ec->Lrx > MIN_RX_POWER_FOR_ADAPTION) && (ec->Lrx > ec->Ltx))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#868: FILE: drivers/staging/echo/echo.c:491:
+    if (ec->nonupdate_dwell)$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#874: FILE: drivers/staging/echo/echo.c:497:
+    /* These conditions are from the dual path paper [1], I messed with
+       them a bit to improve performance. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#874: FILE: drivers/staging/echo/echo.c:497:
+       them a bit to improve performance. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#876: FILE: drivers/staging/echo/echo.c:499:
+    if ((ec->adaption_mode & ECHO_CAN_USE_ADAPTION) &&$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#876: FILE: drivers/staging/echo/echo.c:499:
+    if ((ec->adaption_mode & ECHO_CAN_USE_ADAPTION) &&
+	(ec->nonupdate_dwell == 0) &&
+	(8*ec->Lclean_bg < 7*ec->Lclean) /* (ec->Lclean_bg < 0.875*ec->Lclean) */ &&
+	(8*ec->Lclean_bg < ec->Ltx)      /* (ec->Lclean_bg < 0.125*ec->Ltx)    */ )
+    {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ec->nonupdate_dwell == 0'
#876: FILE: drivers/staging/echo/echo.c:499:
+    if ((ec->adaption_mode & ECHO_CAN_USE_ADAPTION) &&
+	(ec->nonupdate_dwell == 0) &&
+	(8*ec->Lclean_bg < 7*ec->Lclean) /* (ec->Lclean_bg < 0.875*ec->Lclean) */ &&
+	(8*ec->Lclean_bg < ec->Ltx)      /* (ec->Lclean_bg < 0.125*ec->Ltx)    */ )

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#878: FILE: drivers/staging/echo/echo.c:501:
+	(8*ec->Lclean_bg < 7*ec->Lclean) /* (ec->Lclean_bg < 0.875*ec->Lclean) */ &&
 	  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#878: FILE: drivers/staging/echo/echo.c:501:
+	(8*ec->Lclean_bg < 7*ec->Lclean) /* (ec->Lclean_bg < 0.875*ec->Lclean) */ &&
 	                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#879: FILE: drivers/staging/echo/echo.c:502:
+	(8*ec->Lclean_bg < ec->Ltx)      /* (ec->Lclean_bg < 0.125*ec->Ltx)    */ )
 	  ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#879: FILE: drivers/staging/echo/echo.c:502:
+	(8*ec->Lclean_bg < ec->Ltx)      /* (ec->Lclean_bg < 0.125*ec->Ltx)    */ )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#880: FILE: drivers/staging/echo/echo.c:503:
+    {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#881: FILE: drivers/staging/echo/echo.c:504:
+	if (ec->cond_met == 6) {
[...]
+	    ec->adapt = 1;

CHECK:BRACES: braces {} should be used on all arms of this statement
#881: FILE: drivers/staging/echo/echo.c:504:
+	if (ec->cond_met == 6) {
[...]
+	else
[...]

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#884: FILE: drivers/staging/echo/echo.c:507:
+	    memcpy(ec->fir_taps16[0], ec->fir_taps16[1], ec->taps*sizeof(int16_t));
 	                                                         ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#886: FILE: drivers/staging/echo/echo.c:509:
+	else
+	    ec->cond_met++;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#886: FILE: drivers/staging/echo/echo.c:509:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#888: FILE: drivers/staging/echo/echo.c:511:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#889: FILE: drivers/staging/echo/echo.c:512:
+    else$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#889: FILE: drivers/staging/echo/echo.c:512:
+    }
+    else

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#894: FILE: drivers/staging/echo/echo.c:517:
+    ec->clean_nlp = ec->clean;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#895: FILE: drivers/staging/echo/echo.c:518:
+    if (ec->adaption_mode & ECHO_CAN_USE_NLP)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#895: FILE: drivers/staging/echo/echo.c:518:
+    if (ec->adaption_mode & ECHO_CAN_USE_NLP)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#895: FILE: drivers/staging/echo/echo.c:518:
+    if (ec->adaption_mode & ECHO_CAN_USE_NLP)
[...]
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#896: FILE: drivers/staging/echo/echo.c:519:
+    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#897: FILE: drivers/staging/echo/echo.c:520:
+        /* Non-linear processor - a fancy way to say "zap small signals, to avoid$

ERROR:CODE_INDENT: code indent should use tabs where possible
#898: FILE: drivers/staging/echo/echo.c:521:
+           residual echo due to (uLaw/ALaw) non-linearity in the channel.". */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#898: FILE: drivers/staging/echo/echo.c:521:
+        /* Non-linear processor - a fancy way to say "zap small signals, to avoid
+           residual echo due to (uLaw/ALaw) non-linearity in the channel.". */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#898: FILE: drivers/staging/echo/echo.c:521:
+           residual echo due to (uLaw/ALaw) non-linearity in the channel.". */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#900: FILE: drivers/staging/echo/echo.c:523:
+      if ((16*ec->Lclean < ec->Ltx))$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#900: FILE: drivers/staging/echo/echo.c:523:
+      if ((16*ec->Lclean < ec->Ltx))
+      {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#900: FILE: drivers/staging/echo/echo.c:523:
+      if ((16*ec->Lclean < ec->Ltx))
              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#901: FILE: drivers/staging/echo/echo.c:524:
+      {$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#903: FILE: drivers/staging/echo/echo.c:526:
+	/* Our e/c has improved echo by at least 24 dB (each factor of 2 is 6dB,
+	   so 2*2*2*2=16 is the same as 6+6+6+6=24dB) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#903: FILE: drivers/staging/echo/echo.c:526:
+	   so 2*2*2*2=16 is the same as 6+6+6+6=24dB) */

ERROR:CODE_INDENT: code indent should use tabs where possible
#904: FILE: drivers/staging/echo/echo.c:527:
+        if (ec->adaption_mode & ECHO_CAN_USE_CNG)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#904: FILE: drivers/staging/echo/echo.c:527:
+        if (ec->adaption_mode & ECHO_CAN_USE_CNG)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#904: FILE: drivers/staging/echo/echo.c:527:
+        if (ec->adaption_mode & ECHO_CAN_USE_CNG)
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#904: FILE: drivers/staging/echo/echo.c:527:
+        if (ec->adaption_mode & ECHO_CAN_USE_CNG)
+	{

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#909: FILE: drivers/staging/echo/echo.c:532:
+	    /* Very elementary comfort noise generation.  Just random
+	       numbers rolled off very vaguely Hoth-like.  DR: This

WARNING:TYPO_SPELLING: 'overlfow' may be misspelled - perhaps 'overflow'?
#911: FILE: drivers/staging/echo/echo.c:534:
+	       are some overlfow issues in the filtering as it's too
 	                ^^^^^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#916: FILE: drivers/staging/echo/echo.c:539:
+	    ec->cng_rndnum = 1664525U*ec->cng_rndnum + 1013904223U;
 	                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#917: FILE: drivers/staging/echo/echo.c:540:
+	    ec->cng_filter = ((ec->cng_rndnum & 0xFFFF) - 32768 + 5*ec->cng_filter) >> 3;
 	                                                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#918: FILE: drivers/staging/echo/echo.c:541:
+	    ec->clean_nlp = (ec->cng_filter*ec->cng_level*8) >> 14;
 	                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#918: FILE: drivers/staging/echo/echo.c:541:
+	    ec->clean_nlp = (ec->cng_filter*ec->cng_level*8) >> 14;
 	                                                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#920: FILE: drivers/staging/echo/echo.c:543:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#920: FILE: drivers/staging/echo/echo.c:543:
+        }$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#920: FILE: drivers/staging/echo/echo.c:543:
+
+        }

ERROR:CODE_INDENT: code indent should use tabs where possible
#921: FILE: drivers/staging/echo/echo.c:544:
+        else if (ec->adaption_mode & ECHO_CAN_USE_CLIP)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#921: FILE: drivers/staging/echo/echo.c:544:
+        else if (ec->adaption_mode & ECHO_CAN_USE_CLIP)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#921: FILE: drivers/staging/echo/echo.c:544:
+        else if (ec->adaption_mode & ECHO_CAN_USE_CLIP)
+	{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#921: FILE: drivers/staging/echo/echo.c:544:
+        else if (ec->adaption_mode & ECHO_CAN_USE_CLIP)
[...]
+	    /* This sounds much better than CNG */

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#921: FILE: drivers/staging/echo/echo.c:544:
+        }
+        else if (ec->adaption_mode & ECHO_CAN_USE_CLIP)

WARNING:TABSTOP: Statements should start on a tabstop
#924: FILE: drivers/staging/echo/echo.c:547:
+	    if (ec->clean_nlp > ec->Lbgn)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 14)
#924: FILE: drivers/staging/echo/echo.c:547:
+	    if (ec->clean_nlp > ec->Lbgn)
+	      ec->clean_nlp = ec->Lbgn;

WARNING:TABSTOP: Statements should start on a tabstop
#926: FILE: drivers/staging/echo/echo.c:549:
+	    if (ec->clean_nlp < -ec->Lbgn)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 14)
#926: FILE: drivers/staging/echo/echo.c:549:
+	    if (ec->clean_nlp < -ec->Lbgn)
+	      ec->clean_nlp = -ec->Lbgn;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#929: FILE: drivers/staging/echo/echo.c:552:
+	else
+        {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#929: FILE: drivers/staging/echo/echo.c:552:
+	else
[...]
+	     in G168 tests */

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#929: FILE: drivers/staging/echo/echo.c:552:
+	}
+	else

ERROR:CODE_INDENT: code indent should use tabs where possible
#930: FILE: drivers/staging/echo/echo.c:553:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#930: FILE: drivers/staging/echo/echo.c:553:
+        {$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#932: FILE: drivers/staging/echo/echo.c:555:
+	  /* just mute the residual, doesn't sound very good, used mainly
+	     in G168 tests */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#932: FILE: drivers/staging/echo/echo.c:555:
+	     in G168 tests */

ERROR:CODE_INDENT: code indent should use tabs where possible
#933: FILE: drivers/staging/echo/echo.c:556:
+          ec->clean_nlp = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#933: FILE: drivers/staging/echo/echo.c:556:
+          ec->clean_nlp = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#934: FILE: drivers/staging/echo/echo.c:557:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#934: FILE: drivers/staging/echo/echo.c:557:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#935: FILE: drivers/staging/echo/echo.c:558:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#936: FILE: drivers/staging/echo/echo.c:559:
+      else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#936: FILE: drivers/staging/echo/echo.c:559:
+      else {
[...]
+	  if (ec->Lclean < 40) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#936: FILE: drivers/staging/echo/echo.c:559:
+      }
+      else {

CHECK:BRACES: Unbalanced braces around else statement
#936: FILE: drivers/staging/echo/echo.c:559:
+      else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#938: FILE: drivers/staging/echo/echo.c:561:
+	  /* Background noise estimator.  I tried a few algorithms
+	     here without much luck.  This very simple one seems to

WARNING:TABSTOP: Statements should start on a tabstop
#945: FILE: drivers/staging/echo/echo.c:568:
+	  if (ec->Lclean < 40) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#945: FILE: drivers/staging/echo/echo.c:568:
+	  if (ec->Lclean < 40) {
+	      ec->Lbgn_acc += abs(ec->clean) - ec->Lbgn;

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#947: FILE: drivers/staging/echo/echo.c:570:
+	      ec->Lbgn = (ec->Lbgn_acc + (1<<11)) >> 12;
 	                                   ^

WARNING:TABSTOP: Statements should start on a tabstop
#948: FILE: drivers/staging/echo/echo.c:571:
+	  }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#949: FILE: drivers/staging/echo/echo.c:572:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#950: FILE: drivers/staging/echo/echo.c:573:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#953: FILE: drivers/staging/echo/echo.c:576:
+    if (ec->curr_pos <= 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#954: FILE: drivers/staging/echo/echo.c:577:
+        ec->curr_pos = ec->taps;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#954: FILE: drivers/staging/echo/echo.c:577:
+        ec->curr_pos = ec->taps;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#955: FILE: drivers/staging/echo/echo.c:578:
+    ec->curr_pos--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#957: FILE: drivers/staging/echo/echo.c:580:
+    if (ec->adaption_mode & ECHO_CAN_DISABLE)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#957: FILE: drivers/staging/echo/echo.c:580:
+    if (ec->adaption_mode & ECHO_CAN_DISABLE)
+      ec->clean_nlp = rx;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#958: FILE: drivers/staging/echo/echo.c:581:
+      ec->clean_nlp = rx;$

CHECK:SPACING: No space is necessary after a cast
#962: FILE: drivers/staging/echo/echo.c:585:
+    return (int16_t) ec->clean_nlp << 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#962: FILE: drivers/staging/echo/echo.c:585:
+    return (int16_t) ec->clean_nlp << 1;$

WARNING:TYPO_SPELLING: 'seperated' may be misspelled - perhaps 'separated'?
#967: FILE: drivers/staging/echo/echo.c:590:
+/* This function is seperated from the echo canceller is it is usually called
                     ^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#968: FILE: drivers/staging/echo/echo.c:591:
+/* This function is seperated from the echo canceller is it is usually called
+   as part of the tx process.  See rx HP (DC blocking) filter above, it's

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#988: FILE: drivers/staging/echo/echo.c:611:
+int16_t echo_can_hpf_tx(echo_can_state_t *ec, int16_t tx) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#989: FILE: drivers/staging/echo/echo.c:612:
+    int tmp, tmp1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#991: FILE: drivers/staging/echo/echo.c:614:
+    if (ec->adaption_mode & ECHO_CAN_USE_TX_HPF) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#992: FILE: drivers/staging/echo/echo.c:615:
+        tmp = tx << 15;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#992: FILE: drivers/staging/echo/echo.c:615:
+        tmp = tx << 15;$

WARNING:IF_1: Consider removing the #if 1 and its #endif
#993: FILE: drivers/staging/echo/echo.c:616:
+#if 1

ERROR:CODE_INDENT: code indent should use tabs where possible
#994: FILE: drivers/staging/echo/echo.c:617:
+        /* Make sure the gain of the HPF is 1.0. The first can still saturate a little under$

ERROR:CODE_INDENT: code indent should use tabs where possible
#995: FILE: drivers/staging/echo/echo.c:618:
+           impulse conditions, and it might roll to 32768 and need clipping on sustained peak$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#995: FILE: drivers/staging/echo/echo.c:618:
+        /* Make sure the gain of the HPF is 1.0. The first can still saturate a little under
+           impulse conditions, and it might roll to 32768 and need clipping on sustained peak

ERROR:CODE_INDENT: code indent should use tabs where possible
#996: FILE: drivers/staging/echo/echo.c:619:
+           level signals. However, the scale of such clipping is small, and the error due to$

ERROR:CODE_INDENT: code indent should use tabs where possible
#997: FILE: drivers/staging/echo/echo.c:620:
+           any saturation should not markedly affect the downstream processing. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#997: FILE: drivers/staging/echo/echo.c:620:
+           any saturation should not markedly affect the downstream processing. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#998: FILE: drivers/staging/echo/echo.c:621:
+        tmp -= (tmp >> 4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#998: FILE: drivers/staging/echo/echo.c:621:
+        tmp -= (tmp >> 4);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1000: FILE: drivers/staging/echo/echo.c:623:
+        ec->tx_1 += -(ec->tx_1>>DC_LOG2BETA) + tmp - ec->tx_2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1000: FILE: drivers/staging/echo/echo.c:623:
+        ec->tx_1 += -(ec->tx_1>>DC_LOG2BETA) + tmp - ec->tx_2;$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1000: FILE: drivers/staging/echo/echo.c:623:
+        ec->tx_1 += -(ec->tx_1>>DC_LOG2BETA) + tmp - ec->tx_2;
                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1001: FILE: drivers/staging/echo/echo.c:624:
+        tmp1 = ec->tx_1 >> 15;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1001: FILE: drivers/staging/echo/echo.c:624:
+        tmp1 = ec->tx_1 >> 15;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1002: FILE: drivers/staging/echo/echo.c:625:
+	if (tmp1 > 32767) tmp1 = 32767;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1003: FILE: drivers/staging/echo/echo.c:626:
+	if (tmp1 < -32767) tmp1 = -32767;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1005: FILE: drivers/staging/echo/echo.c:628:
+        ec->tx_2 = tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1005: FILE: drivers/staging/echo/echo.c:628:
+        ec->tx_2 = tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1006: FILE: drivers/staging/echo/echo.c:629:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1008: FILE: drivers/staging/echo/echo.c:631:
+    return tx;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1016: FILE: drivers/staging/echo/echo.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1039: FILE: drivers/staging/echo/echo.h:24:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1040: FILE: drivers/staging/echo/echo.h:25:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1042: FILE: drivers/staging/echo/echo.h:27:
+ * $Id: echo.h,v 1.9 2006/10/24 13:45:28 steveu Exp $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1049: FILE: drivers/staging/echo/echo.h:34:
+/*! \page echo_can_page Line echo cancellation for voice
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1147: FILE: drivers/staging/echo/echo.h:132:
+/*!
+    G.168 echo canceller descriptor. This defines the working state for a line

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1150: FILE: drivers/staging/echo/echo.h:135:
+typedef struct

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1151: FILE: drivers/staging/echo/echo.h:136:
+typedef struct
+{

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1152: FILE: drivers/staging/echo/echo.h:137:
+	int16_t tx,rx;
 	          ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's16' over 'int16_t'
#1152: FILE: drivers/staging/echo/echo.h:137:
+	int16_t tx,rx;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's16' over 'int16_t'
#1153: FILE: drivers/staging/echo/echo.h:138:
+	int16_t clean;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's16' over 'int16_t'
#1154: FILE: drivers/staging/echo/echo.h:139:
+	int16_t clean_nlp;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#1163: FILE: drivers/staging/echo/echo.h:148:
+	int32_t Pstates;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's16' over 'int16_t'
#1164: FILE: drivers/staging/echo/echo.h:149:
+	int16_t adapt;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#1165: FILE: drivers/staging/echo/echo.h:150:
+	int32_t factor;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's16' over 'int16_t'
#1166: FILE: drivers/staging/echo/echo.h:151:
+	int16_t shift;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's16' over 'int16_t'
#1178: FILE: drivers/staging/echo/echo.h:163:
+	int16_t *fir_taps16[2];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#1184: FILE: drivers/staging/echo/echo.h:169:
+	int32_t xvtx[5], yvtx[5];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#1185: FILE: drivers/staging/echo/echo.h:170:
+	int32_t xvrx[5], yvrx[5];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's16' over 'int16_t'
#1193: FILE: drivers/staging/echo/echo.h:178:
+	int16_t *snapshot;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1197: FILE: drivers/staging/echo/echo.h:182:
+/*! Create a voice echo canceller context.
+    \param len The length of the canceller, in samples.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1203: FILE: drivers/staging/echo/echo.h:188:
+/*! Free a voice echo canceller context.
+    \param ec The echo canceller context.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1208: FILE: drivers/staging/echo/echo.h:193:
+/*! Flush (reinitialise) a voice echo canceller context.
+    \param ec The echo canceller context.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1213: FILE: drivers/staging/echo/echo.h:198:
+/*! Set the adaption mode of a voice echo canceller context.
+    \param ec The echo canceller context.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1221: FILE: drivers/staging/echo/echo.h:206:
+/*! Process a sample through a voice echo canceller.
+    \param ec The echo canceller context.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1229: FILE: drivers/staging/echo/echo.h:214:
+/*! Process to high pass filter the tx signal.
+    \param ec The echo canceller context.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1242: FILE: drivers/staging/echo/fir.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1263: FILE: drivers/staging/echo/fir.h:22:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1264: FILE: drivers/staging/echo/fir.h:23:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1266: FILE: drivers/staging/echo/fir.h:25:
+ * $Id: fir.h,v 1.8 2006/10/24 13:45:28 steveu Exp $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1270: FILE: drivers/staging/echo/fir.h:29:
+/*! \page fir_page FIR filtering
+\section fir_page_sec_1 What does it do?

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1281: FILE: drivers/staging/echo/fir.h:40:
+/*
+   Blackfin NOTES & IDEAS:

WARNING:TYPO_SPELLING: 'currenlty' may be misspelled - perhaps 'currently'?
#1303: FILE: drivers/staging/echo/fir.h:62:
+   The foreground and background filters currenlty use a total of
                                          ^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1313: FILE: drivers/staging/echo/fir.h:72:
+/*!
+    16 bit integer FIR descriptor. This defines the working state for a single

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1316: FILE: drivers/staging/echo/fir.h:75:
+typedef struct

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1317: FILE: drivers/staging/echo/fir.h:76:
+typedef struct
+{

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's16' over 'int16_t'
#1320: FILE: drivers/staging/echo/fir.h:79:
+	const int16_t *coeffs;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's16' over 'int16_t'
#1321: FILE: drivers/staging/echo/fir.h:80:
+	int16_t *history;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1325: FILE: drivers/staging/echo/fir.h:84:
+/*!
+    32 bit integer FIR descriptor. This defines the working state for a single

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1329: FILE: drivers/staging/echo/fir.h:88:
+typedef struct

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1330: FILE: drivers/staging/echo/fir.h:89:
+typedef struct
+{

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#1333: FILE: drivers/staging/echo/fir.h:92:
+	const int32_t *coeffs;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's16' over 'int16_t'
#1334: FILE: drivers/staging/echo/fir.h:93:
+	int16_t *history;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1338: FILE: drivers/staging/echo/fir.h:97:
+/*!
+    Floating point FIR descriptor. This defines the working state for a single

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1341: FILE: drivers/staging/echo/fir.h:100:
+typedef struct

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1342: FILE: drivers/staging/echo/fir.h:101:
+typedef struct
+{

WARNING:INLINE: plain inline is preferred over __inline__
#1353: FILE: drivers/staging/echo/fir.h:112:
+static __inline__ const int16_t *fir16_create(fir16_state_t *fir,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1354: FILE: drivers/staging/echo/fir.h:113:
+                                              const int16_t *coeffs,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1354: FILE: drivers/staging/echo/fir.h:113:
+                                              const int16_t *coeffs,$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's16' over 'int16_t'
#1354: FILE: drivers/staging/echo/fir.h:113:
+                                              const int16_t *coeffs,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1355: FILE: drivers/staging/echo/fir.h:114:
+                                              int taps)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1355: FILE: drivers/staging/echo/fir.h:114:
+                                              int taps)$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1361: FILE: drivers/staging/echo/fir.h:120:
+	if ((fir->history = malloc(2*taps*sizeof(int16_t))))
 	                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1361: FILE: drivers/staging/echo/fir.h:120:
+	if ((fir->history = malloc(2*taps*sizeof(int16_t))))
 	                                 ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1361: FILE: drivers/staging/echo/fir.h:120:
+	if ((fir->history = malloc(2*taps*sizeof(int16_t))))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1362: FILE: drivers/staging/echo/fir.h:121:
+		memset(fir->history, 0, 2*taps*sizeof(int16_t));
 		                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1362: FILE: drivers/staging/echo/fir.h:121:
+		memset(fir->history, 0, 2*taps*sizeof(int16_t));
 		                              ^

CHECK:SPACING: No space is necessary after a cast
#1364: FILE: drivers/staging/echo/fir.h:123:
+	if ((fir->history = (int16_t *) malloc(taps*sizeof(int16_t))))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1364: FILE: drivers/staging/echo/fir.h:123:
+	if ((fir->history = (int16_t *) malloc(taps*sizeof(int16_t))))
 	                                           ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1364: FILE: drivers/staging/echo/fir.h:123:
+	if ((fir->history = (int16_t *) malloc(taps*sizeof(int16_t))))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1365: FILE: drivers/staging/echo/fir.h:124:
+		memset(fir->history, 0, taps*sizeof(int16_t));
 		                            ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1369: FILE: drivers/staging/echo/fir.h:128:
+}
+/*- End of function --------------------------------------------------------*/

WARNING:INLINE: plain inline is preferred over __inline__
#1371: FILE: drivers/staging/echo/fir.h:130:
+static __inline__ void fir16_flush(fir16_state_t *fir)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1374: FILE: drivers/staging/echo/fir.h:133:
+    memset(fir->history, 0, 2*fir->taps*sizeof(int16_t));$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1374: FILE: drivers/staging/echo/fir.h:133:
+    memset(fir->history, 0, 2*fir->taps*sizeof(int16_t));
                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1374: FILE: drivers/staging/echo/fir.h:133:
+    memset(fir->history, 0, 2*fir->taps*sizeof(int16_t));
                                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1376: FILE: drivers/staging/echo/fir.h:135:
+    memset(fir->history, 0, fir->taps*sizeof(int16_t));$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1376: FILE: drivers/staging/echo/fir.h:135:
+    memset(fir->history, 0, fir->taps*sizeof(int16_t));
                                      ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1379: FILE: drivers/staging/echo/fir.h:138:
+}
+/*- End of function --------------------------------------------------------*/

WARNING:INLINE: plain inline is preferred over __inline__
#1381: FILE: drivers/staging/echo/fir.h:140:
+static __inline__ void fir16_free(fir16_state_t *fir)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1385: FILE: drivers/staging/echo/fir.h:144:
+}
+/*- End of function --------------------------------------------------------*/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1390: FILE: drivers/staging/echo/fir.h:149:
+   int dot;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1392: FILE: drivers/staging/echo/fir.h:151:
+   len--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1394: FILE: drivers/staging/echo/fir.h:153:
+   __asm__$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1395: FILE: drivers/staging/echo/fir.h:154:
+   ($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1395: FILE: drivers/staging/echo/fir.h:154:
+   (

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1396: FILE: drivers/staging/echo/fir.h:155:
+   "I0 = %1;\n\t"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1397: FILE: drivers/staging/echo/fir.h:156:
+   "I1 = %2;\n\t"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1398: FILE: drivers/staging/echo/fir.h:157:
+   "A0 = 0;\n\t"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1399: FILE: drivers/staging/echo/fir.h:158:
+   "R0.L = W[I0++] || R1.L = W[I1++];\n\t"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1400: FILE: drivers/staging/echo/fir.h:159:
+   "LOOP dot%= LC0 = %3;\n\t"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1401: FILE: drivers/staging/echo/fir.h:160:
+   "LOOP_BEGIN dot%=;\n\t"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1402: FILE: drivers/staging/echo/fir.h:161:
+      "A0 += R0.L * R1.L (IS) || R0.L = W[I0++] || R1.L = W[I1++];\n\t"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1403: FILE: drivers/staging/echo/fir.h:162:
+   "LOOP_END dot%=;\n\t"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1404: FILE: drivers/staging/echo/fir.h:163:
+   "A0 += R0.L*R1.L (IS);\n\t"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1405: FILE: drivers/staging/echo/fir.h:164:
+   "R0 = A0;\n\t"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1406: FILE: drivers/staging/echo/fir.h:165:
+   "%0 = R0;\n\t"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1407: FILE: drivers/staging/echo/fir.h:166:
+   : "=&d" (dot)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1408: FILE: drivers/staging/echo/fir.h:167:
+   : "a" (x), "a" (y), "a" (len)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1409: FILE: drivers/staging/echo/fir.h:168:
+   : "I0", "I1", "A1", "A0", "R0", "R1"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1410: FILE: drivers/staging/echo/fir.h:169:
+   );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1412: FILE: drivers/staging/echo/fir.h:171:
+   return dot;$

WARNING:INLINE: plain inline is preferred over __inline__
#1417: FILE: drivers/staging/echo/fir.h:176:
+static __inline__ int16_t fir16(fir16_state_t *fir, int16_t sample)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1419: FILE: drivers/staging/echo/fir.h:178:
+    int32_t y;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#1419: FILE: drivers/staging/echo/fir.h:178:
+    int32_t y;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1421: FILE: drivers/staging/echo/fir.h:180:
+    int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1422: FILE: drivers/staging/echo/fir.h:181:
+    mmx_t *mmx_coeffs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1423: FILE: drivers/staging/echo/fir.h:182:
+    mmx_t *mmx_hist;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1425: FILE: drivers/staging/echo/fir.h:184:
+    fir->history[fir->curr_pos] = sample;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1426: FILE: drivers/staging/echo/fir.h:185:
+    fir->history[fir->curr_pos + fir->taps] = sample;$

CHECK:SPACING: No space is necessary after a cast
#1428: FILE: drivers/staging/echo/fir.h:187:
+    mmx_coeffs = (mmx_t *) fir->coeffs;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1428: FILE: drivers/staging/echo/fir.h:187:
+    mmx_coeffs = (mmx_t *) fir->coeffs;$

CHECK:SPACING: No space is necessary after a cast
#1429: FILE: drivers/staging/echo/fir.h:188:
+    mmx_hist = (mmx_t *) &fir->history[fir->curr_pos];

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1429: FILE: drivers/staging/echo/fir.h:188:
+    mmx_hist = (mmx_t *) &fir->history[fir->curr_pos];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1430: FILE: drivers/staging/echo/fir.h:189:
+    i = fir->taps;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1431: FILE: drivers/staging/echo/fir.h:190:
+    pxor_r2r(mm4, mm4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1433: FILE: drivers/staging/echo/fir.h:192:
+    while (i > 0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1433: FILE: drivers/staging/echo/fir.h:192:
+    while (i > 0)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1434: FILE: drivers/staging/echo/fir.h:193:
+    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1435: FILE: drivers/staging/echo/fir.h:194:
+        movq_m2r(mmx_coeffs[0], mm0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1435: FILE: drivers/staging/echo/fir.h:194:
+        movq_m2r(mmx_coeffs[0], mm0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1436: FILE: drivers/staging/echo/fir.h:195:
+        movq_m2r(mmx_coeffs[1], mm2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1436: FILE: drivers/staging/echo/fir.h:195:
+        movq_m2r(mmx_coeffs[1], mm2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1437: FILE: drivers/staging/echo/fir.h:196:
+        movq_m2r(mmx_hist[0], mm1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1437: FILE: drivers/staging/echo/fir.h:196:
+        movq_m2r(mmx_hist[0], mm1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1438: FILE: drivers/staging/echo/fir.h:197:
+        movq_m2r(mmx_hist[1], mm3);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1438: FILE: drivers/staging/echo/fir.h:197:
+        movq_m2r(mmx_hist[1], mm3);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1439: FILE: drivers/staging/echo/fir.h:198:
+        mmx_coeffs += 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1439: FILE: drivers/staging/echo/fir.h:198:
+        mmx_coeffs += 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1440: FILE: drivers/staging/echo/fir.h:199:
+        mmx_hist += 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1440: FILE: drivers/staging/echo/fir.h:199:
+        mmx_hist += 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1441: FILE: drivers/staging/echo/fir.h:200:
+        pmaddwd_r2r(mm1, mm0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1441: FILE: drivers/staging/echo/fir.h:200:
+        pmaddwd_r2r(mm1, mm0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1442: FILE: drivers/staging/echo/fir.h:201:
+        pmaddwd_r2r(mm3, mm2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1442: FILE: drivers/staging/echo/fir.h:201:
+        pmaddwd_r2r(mm3, mm2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1443: FILE: drivers/staging/echo/fir.h:202:
+        paddd_r2r(mm0, mm4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1443: FILE: drivers/staging/echo/fir.h:202:
+        paddd_r2r(mm0, mm4);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1444: FILE: drivers/staging/echo/fir.h:203:
+        paddd_r2r(mm2, mm4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1444: FILE: drivers/staging/echo/fir.h:203:
+        paddd_r2r(mm2, mm4);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1445: FILE: drivers/staging/echo/fir.h:204:
+        i -= 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1445: FILE: drivers/staging/echo/fir.h:204:
+        i -= 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1446: FILE: drivers/staging/echo/fir.h:205:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1447: FILE: drivers/staging/echo/fir.h:206:
+    movq_r2r(mm4, mm0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1448: FILE: drivers/staging/echo/fir.h:207:
+    psrlq_i2r(32, mm0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1449: FILE: drivers/staging/echo/fir.h:208:
+    paddd_r2r(mm0, mm4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1450: FILE: drivers/staging/echo/fir.h:209:
+    movd_r2m(mm4, y);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1451: FILE: drivers/staging/echo/fir.h:210:
+    emms();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1453: FILE: drivers/staging/echo/fir.h:212:
+    int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1454: FILE: drivers/staging/echo/fir.h:213:
+    xmm_t *xmm_coeffs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1455: FILE: drivers/staging/echo/fir.h:214:
+    xmm_t *xmm_hist;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1457: FILE: drivers/staging/echo/fir.h:216:
+    fir->history[fir->curr_pos] = sample;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1458: FILE: drivers/staging/echo/fir.h:217:
+    fir->history[fir->curr_pos + fir->taps] = sample;$

CHECK:SPACING: No space is necessary after a cast
#1460: FILE: drivers/staging/echo/fir.h:219:
+    xmm_coeffs = (xmm_t *) fir->coeffs;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1460: FILE: drivers/staging/echo/fir.h:219:
+    xmm_coeffs = (xmm_t *) fir->coeffs;$

CHECK:SPACING: No space is necessary after a cast
#1461: FILE: drivers/staging/echo/fir.h:220:
+    xmm_hist = (xmm_t *) &fir->history[fir->curr_pos];

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1461: FILE: drivers/staging/echo/fir.h:220:
+    xmm_hist = (xmm_t *) &fir->history[fir->curr_pos];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1462: FILE: drivers/staging/echo/fir.h:221:
+    i = fir->taps;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1463: FILE: drivers/staging/echo/fir.h:222:
+    pxor_r2r(xmm4, xmm4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1465: FILE: drivers/staging/echo/fir.h:224:
+    while (i > 0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1465: FILE: drivers/staging/echo/fir.h:224:
+    while (i > 0)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1466: FILE: drivers/staging/echo/fir.h:225:
+    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1467: FILE: drivers/staging/echo/fir.h:226:
+        movdqu_m2r(xmm_coeffs[0], xmm0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1467: FILE: drivers/staging/echo/fir.h:226:
+        movdqu_m2r(xmm_coeffs[0], xmm0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1468: FILE: drivers/staging/echo/fir.h:227:
+        movdqu_m2r(xmm_coeffs[1], xmm2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1468: FILE: drivers/staging/echo/fir.h:227:
+        movdqu_m2r(xmm_coeffs[1], xmm2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1469: FILE: drivers/staging/echo/fir.h:228:
+        movdqu_m2r(xmm_hist[0], xmm1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1469: FILE: drivers/staging/echo/fir.h:228:
+        movdqu_m2r(xmm_hist[0], xmm1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1470: FILE: drivers/staging/echo/fir.h:229:
+        movdqu_m2r(xmm_hist[1], xmm3);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1470: FILE: drivers/staging/echo/fir.h:229:
+        movdqu_m2r(xmm_hist[1], xmm3);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1471: FILE: drivers/staging/echo/fir.h:230:
+        xmm_coeffs += 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1471: FILE: drivers/staging/echo/fir.h:230:
+        xmm_coeffs += 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1472: FILE: drivers/staging/echo/fir.h:231:
+        xmm_hist += 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1472: FILE: drivers/staging/echo/fir.h:231:
+        xmm_hist += 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1473: FILE: drivers/staging/echo/fir.h:232:
+        pmaddwd_r2r(xmm1, xmm0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1473: FILE: drivers/staging/echo/fir.h:232:
+        pmaddwd_r2r(xmm1, xmm0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1474: FILE: drivers/staging/echo/fir.h:233:
+        pmaddwd_r2r(xmm3, xmm2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1474: FILE: drivers/staging/echo/fir.h:233:
+        pmaddwd_r2r(xmm3, xmm2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1475: FILE: drivers/staging/echo/fir.h:234:
+        paddd_r2r(xmm0, xmm4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1475: FILE: drivers/staging/echo/fir.h:234:
+        paddd_r2r(xmm0, xmm4);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1476: FILE: drivers/staging/echo/fir.h:235:
+        paddd_r2r(xmm2, xmm4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1476: FILE: drivers/staging/echo/fir.h:235:
+        paddd_r2r(xmm2, xmm4);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1477: FILE: drivers/staging/echo/fir.h:236:
+        i -= 16;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1477: FILE: drivers/staging/echo/fir.h:236:
+        i -= 16;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1478: FILE: drivers/staging/echo/fir.h:237:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1479: FILE: drivers/staging/echo/fir.h:238:
+    movdqa_r2r(xmm4, xmm0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1480: FILE: drivers/staging/echo/fir.h:239:
+    psrldq_i2r(8, xmm0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1481: FILE: drivers/staging/echo/fir.h:240:
+    paddd_r2r(xmm0, xmm4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1482: FILE: drivers/staging/echo/fir.h:241:
+    movdqa_r2r(xmm4, xmm0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1483: FILE: drivers/staging/echo/fir.h:242:
+    psrldq_i2r(4, xmm0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1484: FILE: drivers/staging/echo/fir.h:243:
+    paddd_r2r(xmm0, xmm4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1485: FILE: drivers/staging/echo/fir.h:244:
+    movd_r2m(xmm4, y);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1487: FILE: drivers/staging/echo/fir.h:246:
+    fir->history[fir->curr_pos] = sample;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1488: FILE: drivers/staging/echo/fir.h:247:
+    fir->history[fir->curr_pos + fir->taps] = sample;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1489: FILE: drivers/staging/echo/fir.h:248:
+    y = dot_asm((int16_t*)fir->coeffs, &fir->history[fir->curr_pos], fir->taps);$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1489: FILE: drivers/staging/echo/fir.h:248:
+    y = dot_asm((int16_t*)fir->coeffs, &fir->history[fir->curr_pos], fir->taps);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1491: FILE: drivers/staging/echo/fir.h:250:
+    int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1492: FILE: drivers/staging/echo/fir.h:251:
+    int offset1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1493: FILE: drivers/staging/echo/fir.h:252:
+    int offset2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1495: FILE: drivers/staging/echo/fir.h:254:
+    fir->history[fir->curr_pos] = sample;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1497: FILE: drivers/staging/echo/fir.h:256:
+    offset2 = fir->curr_pos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1498: FILE: drivers/staging/echo/fir.h:257:
+    offset1 = fir->taps - offset2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1499: FILE: drivers/staging/echo/fir.h:258:
+    y = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1500: FILE: drivers/staging/echo/fir.h:259:
+    for (i = fir->taps - 1;  i >= offset1;  i--)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1501: FILE: drivers/staging/echo/fir.h:260:
+        y += fir->coeffs[i]*fir->history[i - offset1];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1501: FILE: drivers/staging/echo/fir.h:260:
+        y += fir->coeffs[i]*fir->history[i - offset1];$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1501: FILE: drivers/staging/echo/fir.h:260:
+        y += fir->coeffs[i]*fir->history[i - offset1];
                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1502: FILE: drivers/staging/echo/fir.h:261:
+    for (  ;  i >= 0;  i--)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1503: FILE: drivers/staging/echo/fir.h:262:
+        y += fir->coeffs[i]*fir->history[i + offset2];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1503: FILE: drivers/staging/echo/fir.h:262:
+        y += fir->coeffs[i]*fir->history[i + offset2];$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1503: FILE: drivers/staging/echo/fir.h:262:
+        y += fir->coeffs[i]*fir->history[i + offset2];
                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1505: FILE: drivers/staging/echo/fir.h:264:
+    if (fir->curr_pos <= 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1506: FILE: drivers/staging/echo/fir.h:265:
+    ^Ifir->curr_pos = fir->taps;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1506: FILE: drivers/staging/echo/fir.h:265:
+    ^Ifir->curr_pos = fir->taps;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1506: FILE: drivers/staging/echo/fir.h:265:
+    ^Ifir->curr_pos = fir->taps;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1507: FILE: drivers/staging/echo/fir.h:266:
+    fir->curr_pos--;$

CHECK:SPACING: No space is necessary after a cast
#1508: FILE: drivers/staging/echo/fir.h:267:
+    return (int16_t) (y >> 15);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1508: FILE: drivers/staging/echo/fir.h:267:
+    return (int16_t) (y >> 15);$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1510: FILE: drivers/staging/echo/fir.h:269:
+}
+/*- End of function --------------------------------------------------------*/

WARNING:INLINE: plain inline is preferred over __inline__
#1512: FILE: drivers/staging/echo/fir.h:271:
+static __inline__ const int16_t *fir32_create(fir32_state_t *fir,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1513: FILE: drivers/staging/echo/fir.h:272:
+                                              const int32_t *coeffs,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1513: FILE: drivers/staging/echo/fir.h:272:
+                                              const int32_t *coeffs,$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#1513: FILE: drivers/staging/echo/fir.h:272:
+                                              const int32_t *coeffs,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1514: FILE: drivers/staging/echo/fir.h:273:
+                                              int taps)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1514: FILE: drivers/staging/echo/fir.h:273:
+                                              int taps)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1516: FILE: drivers/staging/echo/fir.h:275:
+    fir->taps = taps;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1517: FILE: drivers/staging/echo/fir.h:276:
+    fir->curr_pos = taps - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1518: FILE: drivers/staging/echo/fir.h:277:
+    fir->coeffs = coeffs;$

CHECK:SPACING: No space is necessary after a cast
#1519: FILE: drivers/staging/echo/fir.h:278:
+    fir->history = (int16_t *) malloc(taps*sizeof(int16_t));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1519: FILE: drivers/staging/echo/fir.h:278:
+    fir->history = (int16_t *) malloc(taps*sizeof(int16_t));$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1519: FILE: drivers/staging/echo/fir.h:278:
+    fir->history = (int16_t *) malloc(taps*sizeof(int16_t));
                                           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1520: FILE: drivers/staging/echo/fir.h:279:
+    if (fir->history)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1521: FILE: drivers/staging/echo/fir.h:280:
+    ^Imemset(fir->history, '\0', taps*sizeof(int16_t));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1521: FILE: drivers/staging/echo/fir.h:280:
+    ^Imemset(fir->history, '\0', taps*sizeof(int16_t));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1521: FILE: drivers/staging/echo/fir.h:280:
+    ^Imemset(fir->history, '\0', taps*sizeof(int16_t));$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1521: FILE: drivers/staging/echo/fir.h:280:
+    	memset(fir->history, '\0', taps*sizeof(int16_t));
     	                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1522: FILE: drivers/staging/echo/fir.h:281:
+    return fir->history;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1524: FILE: drivers/staging/echo/fir.h:283:
+}
+/*- End of function --------------------------------------------------------*/

WARNING:INLINE: plain inline is preferred over __inline__
#1526: FILE: drivers/staging/echo/fir.h:285:
+static __inline__ void fir32_flush(fir32_state_t *fir)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1528: FILE: drivers/staging/echo/fir.h:287:
+    memset(fir->history, 0, fir->taps*sizeof(int16_t));$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1528: FILE: drivers/staging/echo/fir.h:287:
+    memset(fir->history, 0, fir->taps*sizeof(int16_t));
                                      ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1530: FILE: drivers/staging/echo/fir.h:289:
+}
+/*- End of function --------------------------------------------------------*/

WARNING:INLINE: plain inline is preferred over __inline__
#1532: FILE: drivers/staging/echo/fir.h:291:
+static __inline__ void fir32_free(fir32_state_t *fir)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1534: FILE: drivers/staging/echo/fir.h:293:
+    free(fir->history);$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1536: FILE: drivers/staging/echo/fir.h:295:
+}
+/*- End of function --------------------------------------------------------*/

WARNING:INLINE: plain inline is preferred over __inline__
#1538: FILE: drivers/staging/echo/fir.h:297:
+static __inline__ int16_t fir32(fir32_state_t *fir, int16_t sample)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1540: FILE: drivers/staging/echo/fir.h:299:
+    int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1541: FILE: drivers/staging/echo/fir.h:300:
+    int32_t y;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's32' over 'int32_t'
#1541: FILE: drivers/staging/echo/fir.h:300:
+    int32_t y;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1542: FILE: drivers/staging/echo/fir.h:301:
+    int offset1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1543: FILE: drivers/staging/echo/fir.h:302:
+    int offset2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1545: FILE: drivers/staging/echo/fir.h:304:
+    fir->history[fir->curr_pos] = sample;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1546: FILE: drivers/staging/echo/fir.h:305:
+    offset2 = fir->curr_pos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1547: FILE: drivers/staging/echo/fir.h:306:
+    offset1 = fir->taps - offset2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1548: FILE: drivers/staging/echo/fir.h:307:
+    y = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1549: FILE: drivers/staging/echo/fir.h:308:
+    for (i = fir->taps - 1;  i >= offset1;  i--)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1550: FILE: drivers/staging/echo/fir.h:309:
+        y += fir->coeffs[i]*fir->history[i - offset1];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1550: FILE: drivers/staging/echo/fir.h:309:
+        y += fir->coeffs[i]*fir->history[i - offset1];$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1550: FILE: drivers/staging/echo/fir.h:309:
+        y += fir->coeffs[i]*fir->history[i - offset1];
                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1551: FILE: drivers/staging/echo/fir.h:310:
+    for (  ;  i >= 0;  i--)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1552: FILE: drivers/staging/echo/fir.h:311:
+        y += fir->coeffs[i]*fir->history[i + offset2];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1552: FILE: drivers/staging/echo/fir.h:311:
+        y += fir->coeffs[i]*fir->history[i + offset2];$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1552: FILE: drivers/staging/echo/fir.h:311:
+        y += fir->coeffs[i]*fir->history[i + offset2];
                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1553: FILE: drivers/staging/echo/fir.h:312:
+    if (fir->curr_pos <= 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1554: FILE: drivers/staging/echo/fir.h:313:
+    ^Ifir->curr_pos = fir->taps;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1554: FILE: drivers/staging/echo/fir.h:313:
+    ^Ifir->curr_pos = fir->taps;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1554: FILE: drivers/staging/echo/fir.h:313:
+    ^Ifir->curr_pos = fir->taps;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1555: FILE: drivers/staging/echo/fir.h:314:
+    fir->curr_pos--;$

CHECK:SPACING: No space is necessary after a cast
#1556: FILE: drivers/staging/echo/fir.h:315:
+    return (int16_t) (y >> 15);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1556: FILE: drivers/staging/echo/fir.h:315:
+    return (int16_t) (y >> 15);$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1558: FILE: drivers/staging/echo/fir.h:317:
+}
+/*- End of function --------------------------------------------------------*/

WARNING:INLINE: plain inline is preferred over __inline__
#1561: FILE: drivers/staging/echo/fir.h:320:
+static __inline__ const float *fir_float_create(fir_float_state_t *fir,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1562: FILE: drivers/staging/echo/fir.h:321:
+                                                const float *coeffs,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1562: FILE: drivers/staging/echo/fir.h:321:
+                                                const float *coeffs,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1563: FILE: drivers/staging/echo/fir.h:322:
+    ^I    ^I    ^I                        int taps)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1563: FILE: drivers/staging/echo/fir.h:322:
+    ^I    ^I    ^I                        int taps)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1563: FILE: drivers/staging/echo/fir.h:322:
+    ^I    ^I    ^I                        int taps)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1565: FILE: drivers/staging/echo/fir.h:324:
+    fir->taps = taps;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1566: FILE: drivers/staging/echo/fir.h:325:
+    fir->curr_pos = taps - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1567: FILE: drivers/staging/echo/fir.h:326:
+    fir->coeffs = coeffs;$

CHECK:SPACING: No space is necessary after a cast
#1568: FILE: drivers/staging/echo/fir.h:327:
+    fir->history = (float *) malloc(taps*sizeof(float));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1568: FILE: drivers/staging/echo/fir.h:327:
+    fir->history = (float *) malloc(taps*sizeof(float));$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1568: FILE: drivers/staging/echo/fir.h:327:
+    fir->history = (float *) malloc(taps*sizeof(float));
                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1569: FILE: drivers/staging/echo/fir.h:328:
+    if (fir->history)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1570: FILE: drivers/staging/echo/fir.h:329:
+        memset(fir->history, '\0', taps*sizeof(float));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1570: FILE: drivers/staging/echo/fir.h:329:
+        memset(fir->history, '\0', taps*sizeof(float));$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1570: FILE: drivers/staging/echo/fir.h:329:
+        memset(fir->history, '\0', taps*sizeof(float));
                                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1571: FILE: drivers/staging/echo/fir.h:330:
+    return fir->history;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1573: FILE: drivers/staging/echo/fir.h:332:
+}
+/*- End of function --------------------------------------------------------*/

WARNING:INLINE: plain inline is preferred over __inline__
#1575: FILE: drivers/staging/echo/fir.h:334:
+static __inline__ void fir_float_free(fir_float_state_t *fir)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1577: FILE: drivers/staging/echo/fir.h:336:
+    free(fir->history);$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1579: FILE: drivers/staging/echo/fir.h:338:
+}
+/*- End of function --------------------------------------------------------*/

WARNING:INLINE: plain inline is preferred over __inline__
#1581: FILE: drivers/staging/echo/fir.h:340:
+static __inline__ int16_t fir_float(fir_float_state_t *fir, int16_t sample)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1583: FILE: drivers/staging/echo/fir.h:342:
+    int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1584: FILE: drivers/staging/echo/fir.h:343:
+    float y;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1585: FILE: drivers/staging/echo/fir.h:344:
+    int offset1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1586: FILE: drivers/staging/echo/fir.h:345:
+    int offset2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1588: FILE: drivers/staging/echo/fir.h:347:
+    fir->history[fir->curr_pos] = sample;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1590: FILE: drivers/staging/echo/fir.h:349:
+    offset2 = fir->curr_pos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1591: FILE: drivers/staging/echo/fir.h:350:
+    offset1 = fir->taps - offset2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1592: FILE: drivers/staging/echo/fir.h:351:
+    y = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1593: FILE: drivers/staging/echo/fir.h:352:
+    for (i = fir->taps - 1;  i >= offset1;  i--)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1594: FILE: drivers/staging/echo/fir.h:353:
+        y += fir->coeffs[i]*fir->history[i - offset1];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1594: FILE: drivers/staging/echo/fir.h:353:
+        y += fir->coeffs[i]*fir->history[i - offset1];$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1594: FILE: drivers/staging/echo/fir.h:353:
+        y += fir->coeffs[i]*fir->history[i - offset1];
                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1595: FILE: drivers/staging/echo/fir.h:354:
+    for (  ;  i >= 0;  i--)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1596: FILE: drivers/staging/echo/fir.h:355:
+        y += fir->coeffs[i]*fir->history[i + offset2];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1596: FILE: drivers/staging/echo/fir.h:355:
+        y += fir->coeffs[i]*fir->history[i + offset2];$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1596: FILE: drivers/staging/echo/fir.h:355:
+        y += fir->coeffs[i]*fir->history[i + offset2];
                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1597: FILE: drivers/staging/echo/fir.h:356:
+    if (fir->curr_pos <= 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1598: FILE: drivers/staging/echo/fir.h:357:
+    ^Ifir->curr_pos = fir->taps;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1598: FILE: drivers/staging/echo/fir.h:357:
+    ^Ifir->curr_pos = fir->taps;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1598: FILE: drivers/staging/echo/fir.h:357:
+    ^Ifir->curr_pos = fir->taps;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1599: FILE: drivers/staging/echo/fir.h:358:
+    fir->curr_pos--;$

CHECK:SPACING: No space is necessary after a cast
#1600: FILE: drivers/staging/echo/fir.h:359:
+    return  (int16_t) y;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1600: FILE: drivers/staging/echo/fir.h:359:
+    return  (int16_t) y;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1602: FILE: drivers/staging/echo/fir.h:361:
+}
+/*- End of function --------------------------------------------------------*/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1617: FILE: drivers/staging/echo/mmx.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1634: FILE: drivers/staging/echo/mmx.h:18:
+ * License along with FFmpeg; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1635: FILE: drivers/staging/echo/mmx.h:19:
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA$

WARNING:REPEATED_WORD: Possible repeated word: 'long'
#1642: FILE: drivers/staging/echo/mmx.h:26:
+ * The type of an value that fits in an MMX register (note that long
+ * long constant values MUST be suffixed by LL and unsigned long long

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1646: FILE: drivers/staging/echo/mmx.h:30:
+typedef        union {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1647: FILE: drivers/staging/echo/mmx.h:31:
+        long long               q;      /* Quadword (64-bit) value */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1647: FILE: drivers/staging/echo/mmx.h:31:
+        long long               q;      /* Quadword (64-bit) value */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1648: FILE: drivers/staging/echo/mmx.h:32:
+        unsigned long long      uq;     /* Unsigned Quadword */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1648: FILE: drivers/staging/echo/mmx.h:32:
+        unsigned long long      uq;     /* Unsigned Quadword */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1649: FILE: drivers/staging/echo/mmx.h:33:
+        int                     d[2];   /* 2 Doubleword (32-bit) values */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1649: FILE: drivers/staging/echo/mmx.h:33:
+        int                     d[2];   /* 2 Doubleword (32-bit) values */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1650: FILE: drivers/staging/echo/mmx.h:34:
+        unsigned int            ud[2];  /* 2 Unsigned Doubleword */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1650: FILE: drivers/staging/echo/mmx.h:34:
+        unsigned int            ud[2];  /* 2 Unsigned Doubleword */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1651: FILE: drivers/staging/echo/mmx.h:35:
+        short                   w[4];   /* 4 Word (16-bit) values */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1651: FILE: drivers/staging/echo/mmx.h:35:
+        short                   w[4];   /* 4 Word (16-bit) values */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1652: FILE: drivers/staging/echo/mmx.h:36:
+        unsigned short          uw[4];  /* 4 Unsigned Word */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1652: FILE: drivers/staging/echo/mmx.h:36:
+        unsigned short          uw[4];  /* 4 Unsigned Word */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1653: FILE: drivers/staging/echo/mmx.h:37:
+        char                    b[8];   /* 8 Byte (8-bit) values */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1653: FILE: drivers/staging/echo/mmx.h:37:
+        char                    b[8];   /* 8 Byte (8-bit) values */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1654: FILE: drivers/staging/echo/mmx.h:38:
+        unsigned char           ub[8];  /* 8 Unsigned Byte */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1654: FILE: drivers/staging/echo/mmx.h:38:
+        unsigned char           ub[8];  /* 8 Unsigned Byte */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1655: FILE: drivers/staging/echo/mmx.h:39:
+        float                   s[2];   /* Single-precision (32-bit) value */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1655: FILE: drivers/staging/echo/mmx.h:39:
+        float                   s[2];   /* Single-precision (32-bit) value */$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1659: FILE: drivers/staging/echo/mmx.h:43:
+typedef union {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1663: FILE: drivers/staging/echo/mmx.h:47:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1664: FILE: drivers/staging/echo/mmx.h:48:
+#define         mmx_i2r(op,imm,reg) \
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1664: FILE: drivers/staging/echo/mmx.h:48:
+#define         mmx_i2r(op,imm,reg) \
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1664: FILE: drivers/staging/echo/mmx.h:48:
+#define         mmx_i2r(op,imm,reg) \
+        __asm__ __volatile__ (#op " %0, %%" #reg \
+                              : /* nothing */ \
+                              : "i" (imm) )

ERROR:CODE_INDENT: code indent should use tabs where possible
#1665: FILE: drivers/staging/echo/mmx.h:49:
+        __asm__ __volatile__ (#op " %0, %%" #reg \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1665: FILE: drivers/staging/echo/mmx.h:49:
+        __asm__ __volatile__ (#op " %0, %%" #reg \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1666: FILE: drivers/staging/echo/mmx.h:50:
+                              : /* nothing */ \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1666: FILE: drivers/staging/echo/mmx.h:50:
+                              : /* nothing */ \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1667: FILE: drivers/staging/echo/mmx.h:51:
+                              : "i" (imm) )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1667: FILE: drivers/staging/echo/mmx.h:51:
+                              : "i" (imm) )$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1667: FILE: drivers/staging/echo/mmx.h:51:
+                              : "i" (imm) )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1669: FILE: drivers/staging/echo/mmx.h:53:
+#define         mmx_m2r(op,mem,reg) \
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1669: FILE: drivers/staging/echo/mmx.h:53:
+#define         mmx_m2r(op,mem,reg) \
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1669: FILE: drivers/staging/echo/mmx.h:53:
+#define         mmx_m2r(op,mem,reg) \
+        __asm__ __volatile__ (#op " %0, %%" #reg \
+                              : /* nothing */ \
+                              : "m" (mem))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1670: FILE: drivers/staging/echo/mmx.h:54:
+        __asm__ __volatile__ (#op " %0, %%" #reg \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1670: FILE: drivers/staging/echo/mmx.h:54:
+        __asm__ __volatile__ (#op " %0, %%" #reg \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1671: FILE: drivers/staging/echo/mmx.h:55:
+                              : /* nothing */ \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1671: FILE: drivers/staging/echo/mmx.h:55:
+                              : /* nothing */ \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1672: FILE: drivers/staging/echo/mmx.h:56:
+                              : "m" (mem))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1672: FILE: drivers/staging/echo/mmx.h:56:
+                              : "m" (mem))$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1674: FILE: drivers/staging/echo/mmx.h:58:
+#define         mmx_r2m(op,reg,mem) \
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1674: FILE: drivers/staging/echo/mmx.h:58:
+#define         mmx_r2m(op,reg,mem) \
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1674: FILE: drivers/staging/echo/mmx.h:58:
+#define         mmx_r2m(op,reg,mem) \
+        __asm__ __volatile__ (#op " %%" #reg ", %0" \
+                              : "=m" (mem) \
+                              : /* nothing */ )

ERROR:CODE_INDENT: code indent should use tabs where possible
#1675: FILE: drivers/staging/echo/mmx.h:59:
+        __asm__ __volatile__ (#op " %%" #reg ", %0" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1675: FILE: drivers/staging/echo/mmx.h:59:
+        __asm__ __volatile__ (#op " %%" #reg ", %0" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1676: FILE: drivers/staging/echo/mmx.h:60:
+                              : "=m" (mem) \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1676: FILE: drivers/staging/echo/mmx.h:60:
+                              : "=m" (mem) \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1677: FILE: drivers/staging/echo/mmx.h:61:
+                              : /* nothing */ )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1677: FILE: drivers/staging/echo/mmx.h:61:
+                              : /* nothing */ )$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1677: FILE: drivers/staging/echo/mmx.h:61:
+                              : /* nothing */ )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1679: FILE: drivers/staging/echo/mmx.h:63:
+#define         mmx_r2r(op,regs,regd) \
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1679: FILE: drivers/staging/echo/mmx.h:63:
+#define         mmx_r2r(op,regs,regd) \
                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1679: FILE: drivers/staging/echo/mmx.h:63:
+#define         mmx_r2r(op,regs,regd) \
+        __asm__ __volatile__ (#op " %" #regs ", %" #regd)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1680: FILE: drivers/staging/echo/mmx.h:64:
+        __asm__ __volatile__ (#op " %" #regs ", %" #regd)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1680: FILE: drivers/staging/echo/mmx.h:64:
+        __asm__ __volatile__ (#op " %" #regs ", %" #regd)$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1682: FILE: drivers/staging/echo/mmx.h:66:
+
+

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1683: FILE: drivers/staging/echo/mmx.h:67:
+#define         emms() __asm__ __volatile__ ("emms")

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1685: FILE: drivers/staging/echo/mmx.h:69:
+#define         movd_m2r(var,reg)           mmx_m2r (movd, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1685: FILE: drivers/staging/echo/mmx.h:69:
+#define         movd_m2r(var,reg)           mmx_m2r (movd, var, reg)
                             ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1685: FILE: drivers/staging/echo/mmx.h:69:
+#define         movd_m2r(var,reg)           mmx_m2r (movd, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1686: FILE: drivers/staging/echo/mmx.h:70:
+#define         movd_r2m(reg,var)           mmx_r2m (movd, reg, var)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1686: FILE: drivers/staging/echo/mmx.h:70:
+#define         movd_r2m(reg,var)           mmx_r2m (movd, reg, var)
                             ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1686: FILE: drivers/staging/echo/mmx.h:70:
+#define         movd_r2m(reg,var)           mmx_r2m (movd, reg, var)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1687: FILE: drivers/staging/echo/mmx.h:71:
+#define         movd_r2r(regs,regd)         mmx_r2r (movd, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1687: FILE: drivers/staging/echo/mmx.h:71:
+#define         movd_r2r(regs,regd)         mmx_r2r (movd, regs, regd)
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1687: FILE: drivers/staging/echo/mmx.h:71:
+#define         movd_r2r(regs,regd)         mmx_r2r (movd, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1689: FILE: drivers/staging/echo/mmx.h:73:
+#define         movq_m2r(var,reg)           mmx_m2r (movq, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1689: FILE: drivers/staging/echo/mmx.h:73:
+#define         movq_m2r(var,reg)           mmx_m2r (movq, var, reg)
                             ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1689: FILE: drivers/staging/echo/mmx.h:73:
+#define         movq_m2r(var,reg)           mmx_m2r (movq, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1690: FILE: drivers/staging/echo/mmx.h:74:
+#define         movq_r2m(reg,var)           mmx_r2m (movq, reg, var)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1690: FILE: drivers/staging/echo/mmx.h:74:
+#define         movq_r2m(reg,var)           mmx_r2m (movq, reg, var)
                             ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1690: FILE: drivers/staging/echo/mmx.h:74:
+#define         movq_r2m(reg,var)           mmx_r2m (movq, reg, var)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1691: FILE: drivers/staging/echo/mmx.h:75:
+#define         movq_r2r(regs,regd)         mmx_r2r (movq, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1691: FILE: drivers/staging/echo/mmx.h:75:
+#define         movq_r2r(regs,regd)         mmx_r2r (movq, regs, regd)
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1691: FILE: drivers/staging/echo/mmx.h:75:
+#define         movq_r2r(regs,regd)         mmx_r2r (movq, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1693: FILE: drivers/staging/echo/mmx.h:77:
+#define         packssdw_m2r(var,reg)       mmx_m2r (packssdw, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1693: FILE: drivers/staging/echo/mmx.h:77:
+#define         packssdw_m2r(var,reg)       mmx_m2r (packssdw, var, reg)
                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1693: FILE: drivers/staging/echo/mmx.h:77:
+#define         packssdw_m2r(var,reg)       mmx_m2r (packssdw, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1694: FILE: drivers/staging/echo/mmx.h:78:
+#define         packssdw_r2r(regs,regd)     mmx_r2r (packssdw, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1694: FILE: drivers/staging/echo/mmx.h:78:
+#define         packssdw_r2r(regs,regd)     mmx_r2r (packssdw, regs, regd)
                                  ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1694: FILE: drivers/staging/echo/mmx.h:78:
+#define         packssdw_r2r(regs,regd)     mmx_r2r (packssdw, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1695: FILE: drivers/staging/echo/mmx.h:79:
+#define         packsswb_m2r(var,reg)       mmx_m2r (packsswb, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1695: FILE: drivers/staging/echo/mmx.h:79:
+#define         packsswb_m2r(var,reg)       mmx_m2r (packsswb, var, reg)
                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1695: FILE: drivers/staging/echo/mmx.h:79:
+#define         packsswb_m2r(var,reg)       mmx_m2r (packsswb, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1696: FILE: drivers/staging/echo/mmx.h:80:
+#define         packsswb_r2r(regs,regd)     mmx_r2r (packsswb, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1696: FILE: drivers/staging/echo/mmx.h:80:
+#define         packsswb_r2r(regs,regd)     mmx_r2r (packsswb, regs, regd)
                                  ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1696: FILE: drivers/staging/echo/mmx.h:80:
+#define         packsswb_r2r(regs,regd)     mmx_r2r (packsswb, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1698: FILE: drivers/staging/echo/mmx.h:82:
+#define         packuswb_m2r(var,reg)       mmx_m2r (packuswb, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1698: FILE: drivers/staging/echo/mmx.h:82:
+#define         packuswb_m2r(var,reg)       mmx_m2r (packuswb, var, reg)
                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1698: FILE: drivers/staging/echo/mmx.h:82:
+#define         packuswb_m2r(var,reg)       mmx_m2r (packuswb, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1699: FILE: drivers/staging/echo/mmx.h:83:
+#define         packuswb_r2r(regs,regd)     mmx_r2r (packuswb, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1699: FILE: drivers/staging/echo/mmx.h:83:
+#define         packuswb_r2r(regs,regd)     mmx_r2r (packuswb, regs, regd)
                                  ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1699: FILE: drivers/staging/echo/mmx.h:83:
+#define         packuswb_r2r(regs,regd)     mmx_r2r (packuswb, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1701: FILE: drivers/staging/echo/mmx.h:85:
+#define         paddb_m2r(var,reg)          mmx_m2r (paddb, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1701: FILE: drivers/staging/echo/mmx.h:85:
+#define         paddb_m2r(var,reg)          mmx_m2r (paddb, var, reg)
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1701: FILE: drivers/staging/echo/mmx.h:85:
+#define         paddb_m2r(var,reg)          mmx_m2r (paddb, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1702: FILE: drivers/staging/echo/mmx.h:86:
+#define         paddb_r2r(regs,regd)        mmx_r2r (paddb, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1702: FILE: drivers/staging/echo/mmx.h:86:
+#define         paddb_r2r(regs,regd)        mmx_r2r (paddb, regs, regd)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1702: FILE: drivers/staging/echo/mmx.h:86:
+#define         paddb_r2r(regs,regd)        mmx_r2r (paddb, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1703: FILE: drivers/staging/echo/mmx.h:87:
+#define         paddd_m2r(var,reg)          mmx_m2r (paddd, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1703: FILE: drivers/staging/echo/mmx.h:87:
+#define         paddd_m2r(var,reg)          mmx_m2r (paddd, var, reg)
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1703: FILE: drivers/staging/echo/mmx.h:87:
+#define         paddd_m2r(var,reg)          mmx_m2r (paddd, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1704: FILE: drivers/staging/echo/mmx.h:88:
+#define         paddd_r2r(regs,regd)        mmx_r2r (paddd, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1704: FILE: drivers/staging/echo/mmx.h:88:
+#define         paddd_r2r(regs,regd)        mmx_r2r (paddd, regs, regd)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1704: FILE: drivers/staging/echo/mmx.h:88:
+#define         paddd_r2r(regs,regd)        mmx_r2r (paddd, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1705: FILE: drivers/staging/echo/mmx.h:89:
+#define         paddw_m2r(var,reg)          mmx_m2r (paddw, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1705: FILE: drivers/staging/echo/mmx.h:89:
+#define         paddw_m2r(var,reg)          mmx_m2r (paddw, var, reg)
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1705: FILE: drivers/staging/echo/mmx.h:89:
+#define         paddw_m2r(var,reg)          mmx_m2r (paddw, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1706: FILE: drivers/staging/echo/mmx.h:90:
+#define         paddw_r2r(regs,regd)        mmx_r2r (paddw, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1706: FILE: drivers/staging/echo/mmx.h:90:
+#define         paddw_r2r(regs,regd)        mmx_r2r (paddw, regs, regd)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1706: FILE: drivers/staging/echo/mmx.h:90:
+#define         paddw_r2r(regs,regd)        mmx_r2r (paddw, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1708: FILE: drivers/staging/echo/mmx.h:92:
+#define         paddsb_m2r(var,reg)         mmx_m2r (paddsb, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1708: FILE: drivers/staging/echo/mmx.h:92:
+#define         paddsb_m2r(var,reg)         mmx_m2r (paddsb, var, reg)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1708: FILE: drivers/staging/echo/mmx.h:92:
+#define         paddsb_m2r(var,reg)         mmx_m2r (paddsb, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1709: FILE: drivers/staging/echo/mmx.h:93:
+#define         paddsb_r2r(regs,regd)       mmx_r2r (paddsb, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1709: FILE: drivers/staging/echo/mmx.h:93:
+#define         paddsb_r2r(regs,regd)       mmx_r2r (paddsb, regs, regd)
                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1709: FILE: drivers/staging/echo/mmx.h:93:
+#define         paddsb_r2r(regs,regd)       mmx_r2r (paddsb, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1710: FILE: drivers/staging/echo/mmx.h:94:
+#define         paddsw_m2r(var,reg)         mmx_m2r (paddsw, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1710: FILE: drivers/staging/echo/mmx.h:94:
+#define         paddsw_m2r(var,reg)         mmx_m2r (paddsw, var, reg)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1710: FILE: drivers/staging/echo/mmx.h:94:
+#define         paddsw_m2r(var,reg)         mmx_m2r (paddsw, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1711: FILE: drivers/staging/echo/mmx.h:95:
+#define         paddsw_r2r(regs,regd)       mmx_r2r (paddsw, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1711: FILE: drivers/staging/echo/mmx.h:95:
+#define         paddsw_r2r(regs,regd)       mmx_r2r (paddsw, regs, regd)
                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1711: FILE: drivers/staging/echo/mmx.h:95:
+#define         paddsw_r2r(regs,regd)       mmx_r2r (paddsw, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1713: FILE: drivers/staging/echo/mmx.h:97:
+#define         paddusb_m2r(var,reg)        mmx_m2r (paddusb, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1713: FILE: drivers/staging/echo/mmx.h:97:
+#define         paddusb_m2r(var,reg)        mmx_m2r (paddusb, var, reg)
                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1713: FILE: drivers/staging/echo/mmx.h:97:
+#define         paddusb_m2r(var,reg)        mmx_m2r (paddusb, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1714: FILE: drivers/staging/echo/mmx.h:98:
+#define         paddusb_r2r(regs,regd)      mmx_r2r (paddusb, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1714: FILE: drivers/staging/echo/mmx.h:98:
+#define         paddusb_r2r(regs,regd)      mmx_r2r (paddusb, regs, regd)
                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1714: FILE: drivers/staging/echo/mmx.h:98:
+#define         paddusb_r2r(regs,regd)      mmx_r2r (paddusb, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1715: FILE: drivers/staging/echo/mmx.h:99:
+#define         paddusw_m2r(var,reg)        mmx_m2r (paddusw, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1715: FILE: drivers/staging/echo/mmx.h:99:
+#define         paddusw_m2r(var,reg)        mmx_m2r (paddusw, var, reg)
                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1715: FILE: drivers/staging/echo/mmx.h:99:
+#define         paddusw_m2r(var,reg)        mmx_m2r (paddusw, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1716: FILE: drivers/staging/echo/mmx.h:100:
+#define         paddusw_r2r(regs,regd)      mmx_r2r (paddusw, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1716: FILE: drivers/staging/echo/mmx.h:100:
+#define         paddusw_r2r(regs,regd)      mmx_r2r (paddusw, regs, regd)
                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1716: FILE: drivers/staging/echo/mmx.h:100:
+#define         paddusw_r2r(regs,regd)      mmx_r2r (paddusw, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1718: FILE: drivers/staging/echo/mmx.h:102:
+#define         pand_m2r(var,reg)           mmx_m2r (pand, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1718: FILE: drivers/staging/echo/mmx.h:102:
+#define         pand_m2r(var,reg)           mmx_m2r (pand, var, reg)
                             ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1718: FILE: drivers/staging/echo/mmx.h:102:
+#define         pand_m2r(var,reg)           mmx_m2r (pand, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1719: FILE: drivers/staging/echo/mmx.h:103:
+#define         pand_r2r(regs,regd)         mmx_r2r (pand, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1719: FILE: drivers/staging/echo/mmx.h:103:
+#define         pand_r2r(regs,regd)         mmx_r2r (pand, regs, regd)
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1719: FILE: drivers/staging/echo/mmx.h:103:
+#define         pand_r2r(regs,regd)         mmx_r2r (pand, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1721: FILE: drivers/staging/echo/mmx.h:105:
+#define         pandn_m2r(var,reg)          mmx_m2r (pandn, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1721: FILE: drivers/staging/echo/mmx.h:105:
+#define         pandn_m2r(var,reg)          mmx_m2r (pandn, var, reg)
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1721: FILE: drivers/staging/echo/mmx.h:105:
+#define         pandn_m2r(var,reg)          mmx_m2r (pandn, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1722: FILE: drivers/staging/echo/mmx.h:106:
+#define         pandn_r2r(regs,regd)        mmx_r2r (pandn, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1722: FILE: drivers/staging/echo/mmx.h:106:
+#define         pandn_r2r(regs,regd)        mmx_r2r (pandn, regs, regd)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1722: FILE: drivers/staging/echo/mmx.h:106:
+#define         pandn_r2r(regs,regd)        mmx_r2r (pandn, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1724: FILE: drivers/staging/echo/mmx.h:108:
+#define         pcmpeqb_m2r(var,reg)        mmx_m2r (pcmpeqb, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1724: FILE: drivers/staging/echo/mmx.h:108:
+#define         pcmpeqb_m2r(var,reg)        mmx_m2r (pcmpeqb, var, reg)
                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1724: FILE: drivers/staging/echo/mmx.h:108:
+#define         pcmpeqb_m2r(var,reg)        mmx_m2r (pcmpeqb, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1725: FILE: drivers/staging/echo/mmx.h:109:
+#define         pcmpeqb_r2r(regs,regd)      mmx_r2r (pcmpeqb, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1725: FILE: drivers/staging/echo/mmx.h:109:
+#define         pcmpeqb_r2r(regs,regd)      mmx_r2r (pcmpeqb, regs, regd)
                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1725: FILE: drivers/staging/echo/mmx.h:109:
+#define         pcmpeqb_r2r(regs,regd)      mmx_r2r (pcmpeqb, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1726: FILE: drivers/staging/echo/mmx.h:110:
+#define         pcmpeqd_m2r(var,reg)        mmx_m2r (pcmpeqd, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1726: FILE: drivers/staging/echo/mmx.h:110:
+#define         pcmpeqd_m2r(var,reg)        mmx_m2r (pcmpeqd, var, reg)
                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1726: FILE: drivers/staging/echo/mmx.h:110:
+#define         pcmpeqd_m2r(var,reg)        mmx_m2r (pcmpeqd, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1727: FILE: drivers/staging/echo/mmx.h:111:
+#define         pcmpeqd_r2r(regs,regd)      mmx_r2r (pcmpeqd, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1727: FILE: drivers/staging/echo/mmx.h:111:
+#define         pcmpeqd_r2r(regs,regd)      mmx_r2r (pcmpeqd, regs, regd)
                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1727: FILE: drivers/staging/echo/mmx.h:111:
+#define         pcmpeqd_r2r(regs,regd)      mmx_r2r (pcmpeqd, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1728: FILE: drivers/staging/echo/mmx.h:112:
+#define         pcmpeqw_m2r(var,reg)        mmx_m2r (pcmpeqw, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1728: FILE: drivers/staging/echo/mmx.h:112:
+#define         pcmpeqw_m2r(var,reg)        mmx_m2r (pcmpeqw, var, reg)
                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1728: FILE: drivers/staging/echo/mmx.h:112:
+#define         pcmpeqw_m2r(var,reg)        mmx_m2r (pcmpeqw, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1729: FILE: drivers/staging/echo/mmx.h:113:
+#define         pcmpeqw_r2r(regs,regd)      mmx_r2r (pcmpeqw, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1729: FILE: drivers/staging/echo/mmx.h:113:
+#define         pcmpeqw_r2r(regs,regd)      mmx_r2r (pcmpeqw, regs, regd)
                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1729: FILE: drivers/staging/echo/mmx.h:113:
+#define         pcmpeqw_r2r(regs,regd)      mmx_r2r (pcmpeqw, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1731: FILE: drivers/staging/echo/mmx.h:115:
+#define         pcmpgtb_m2r(var,reg)        mmx_m2r (pcmpgtb, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1731: FILE: drivers/staging/echo/mmx.h:115:
+#define         pcmpgtb_m2r(var,reg)        mmx_m2r (pcmpgtb, var, reg)
                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1731: FILE: drivers/staging/echo/mmx.h:115:
+#define         pcmpgtb_m2r(var,reg)        mmx_m2r (pcmpgtb, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1732: FILE: drivers/staging/echo/mmx.h:116:
+#define         pcmpgtb_r2r(regs,regd)      mmx_r2r (pcmpgtb, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1732: FILE: drivers/staging/echo/mmx.h:116:
+#define         pcmpgtb_r2r(regs,regd)      mmx_r2r (pcmpgtb, regs, regd)
                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1732: FILE: drivers/staging/echo/mmx.h:116:
+#define         pcmpgtb_r2r(regs,regd)      mmx_r2r (pcmpgtb, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1733: FILE: drivers/staging/echo/mmx.h:117:
+#define         pcmpgtd_m2r(var,reg)        mmx_m2r (pcmpgtd, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1733: FILE: drivers/staging/echo/mmx.h:117:
+#define         pcmpgtd_m2r(var,reg)        mmx_m2r (pcmpgtd, var, reg)
                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1733: FILE: drivers/staging/echo/mmx.h:117:
+#define         pcmpgtd_m2r(var,reg)        mmx_m2r (pcmpgtd, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1734: FILE: drivers/staging/echo/mmx.h:118:
+#define         pcmpgtd_r2r(regs,regd)      mmx_r2r (pcmpgtd, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1734: FILE: drivers/staging/echo/mmx.h:118:
+#define         pcmpgtd_r2r(regs,regd)      mmx_r2r (pcmpgtd, regs, regd)
                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1734: FILE: drivers/staging/echo/mmx.h:118:
+#define         pcmpgtd_r2r(regs,regd)      mmx_r2r (pcmpgtd, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1735: FILE: drivers/staging/echo/mmx.h:119:
+#define         pcmpgtw_m2r(var,reg)        mmx_m2r (pcmpgtw, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1735: FILE: drivers/staging/echo/mmx.h:119:
+#define         pcmpgtw_m2r(var,reg)        mmx_m2r (pcmpgtw, var, reg)
                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1735: FILE: drivers/staging/echo/mmx.h:119:
+#define         pcmpgtw_m2r(var,reg)        mmx_m2r (pcmpgtw, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1736: FILE: drivers/staging/echo/mmx.h:120:
+#define         pcmpgtw_r2r(regs,regd)      mmx_r2r (pcmpgtw, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1736: FILE: drivers/staging/echo/mmx.h:120:
+#define         pcmpgtw_r2r(regs,regd)      mmx_r2r (pcmpgtw, regs, regd)
                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1736: FILE: drivers/staging/echo/mmx.h:120:
+#define         pcmpgtw_r2r(regs,regd)      mmx_r2r (pcmpgtw, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1738: FILE: drivers/staging/echo/mmx.h:122:
+#define         pmaddwd_m2r(var,reg)        mmx_m2r (pmaddwd, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1738: FILE: drivers/staging/echo/mmx.h:122:
+#define         pmaddwd_m2r(var,reg)        mmx_m2r (pmaddwd, var, reg)
                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1738: FILE: drivers/staging/echo/mmx.h:122:
+#define         pmaddwd_m2r(var,reg)        mmx_m2r (pmaddwd, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1739: FILE: drivers/staging/echo/mmx.h:123:
+#define         pmaddwd_r2r(regs,regd)      mmx_r2r (pmaddwd, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1739: FILE: drivers/staging/echo/mmx.h:123:
+#define         pmaddwd_r2r(regs,regd)      mmx_r2r (pmaddwd, regs, regd)
                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1739: FILE: drivers/staging/echo/mmx.h:123:
+#define         pmaddwd_r2r(regs,regd)      mmx_r2r (pmaddwd, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1741: FILE: drivers/staging/echo/mmx.h:125:
+#define         pmulhw_m2r(var,reg)         mmx_m2r (pmulhw, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1741: FILE: drivers/staging/echo/mmx.h:125:
+#define         pmulhw_m2r(var,reg)         mmx_m2r (pmulhw, var, reg)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1741: FILE: drivers/staging/echo/mmx.h:125:
+#define         pmulhw_m2r(var,reg)         mmx_m2r (pmulhw, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1742: FILE: drivers/staging/echo/mmx.h:126:
+#define         pmulhw_r2r(regs,regd)       mmx_r2r (pmulhw, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1742: FILE: drivers/staging/echo/mmx.h:126:
+#define         pmulhw_r2r(regs,regd)       mmx_r2r (pmulhw, regs, regd)
                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1742: FILE: drivers/staging/echo/mmx.h:126:
+#define         pmulhw_r2r(regs,regd)       mmx_r2r (pmulhw, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1744: FILE: drivers/staging/echo/mmx.h:128:
+#define         pmullw_m2r(var,reg)         mmx_m2r (pmullw, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1744: FILE: drivers/staging/echo/mmx.h:128:
+#define         pmullw_m2r(var,reg)         mmx_m2r (pmullw, var, reg)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1744: FILE: drivers/staging/echo/mmx.h:128:
+#define         pmullw_m2r(var,reg)         mmx_m2r (pmullw, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1745: FILE: drivers/staging/echo/mmx.h:129:
+#define         pmullw_r2r(regs,regd)       mmx_r2r (pmullw, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1745: FILE: drivers/staging/echo/mmx.h:129:
+#define         pmullw_r2r(regs,regd)       mmx_r2r (pmullw, regs, regd)
                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1745: FILE: drivers/staging/echo/mmx.h:129:
+#define         pmullw_r2r(regs,regd)       mmx_r2r (pmullw, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1747: FILE: drivers/staging/echo/mmx.h:131:
+#define         por_m2r(var,reg)            mmx_m2r (por, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1747: FILE: drivers/staging/echo/mmx.h:131:
+#define         por_m2r(var,reg)            mmx_m2r (por, var, reg)
                            ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1747: FILE: drivers/staging/echo/mmx.h:131:
+#define         por_m2r(var,reg)            mmx_m2r (por, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1748: FILE: drivers/staging/echo/mmx.h:132:
+#define         por_r2r(regs,regd)          mmx_r2r (por, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1748: FILE: drivers/staging/echo/mmx.h:132:
+#define         por_r2r(regs,regd)          mmx_r2r (por, regs, regd)
                             ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1748: FILE: drivers/staging/echo/mmx.h:132:
+#define         por_r2r(regs,regd)          mmx_r2r (por, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1750: FILE: drivers/staging/echo/mmx.h:134:
+#define         pslld_i2r(imm,reg)          mmx_i2r (pslld, imm, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1750: FILE: drivers/staging/echo/mmx.h:134:
+#define         pslld_i2r(imm,reg)          mmx_i2r (pslld, imm, reg)
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1750: FILE: drivers/staging/echo/mmx.h:134:
+#define         pslld_i2r(imm,reg)          mmx_i2r (pslld, imm, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1751: FILE: drivers/staging/echo/mmx.h:135:
+#define         pslld_m2r(var,reg)          mmx_m2r (pslld, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1751: FILE: drivers/staging/echo/mmx.h:135:
+#define         pslld_m2r(var,reg)          mmx_m2r (pslld, var, reg)
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1751: FILE: drivers/staging/echo/mmx.h:135:
+#define         pslld_m2r(var,reg)          mmx_m2r (pslld, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1752: FILE: drivers/staging/echo/mmx.h:136:
+#define         pslld_r2r(regs,regd)        mmx_r2r (pslld, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1752: FILE: drivers/staging/echo/mmx.h:136:
+#define         pslld_r2r(regs,regd)        mmx_r2r (pslld, regs, regd)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1752: FILE: drivers/staging/echo/mmx.h:136:
+#define         pslld_r2r(regs,regd)        mmx_r2r (pslld, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1753: FILE: drivers/staging/echo/mmx.h:137:
+#define         psllq_i2r(imm,reg)          mmx_i2r (psllq, imm, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1753: FILE: drivers/staging/echo/mmx.h:137:
+#define         psllq_i2r(imm,reg)          mmx_i2r (psllq, imm, reg)
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1753: FILE: drivers/staging/echo/mmx.h:137:
+#define         psllq_i2r(imm,reg)          mmx_i2r (psllq, imm, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1754: FILE: drivers/staging/echo/mmx.h:138:
+#define         psllq_m2r(var,reg)          mmx_m2r (psllq, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1754: FILE: drivers/staging/echo/mmx.h:138:
+#define         psllq_m2r(var,reg)          mmx_m2r (psllq, var, reg)
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1754: FILE: drivers/staging/echo/mmx.h:138:
+#define         psllq_m2r(var,reg)          mmx_m2r (psllq, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1755: FILE: drivers/staging/echo/mmx.h:139:
+#define         psllq_r2r(regs,regd)        mmx_r2r (psllq, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1755: FILE: drivers/staging/echo/mmx.h:139:
+#define         psllq_r2r(regs,regd)        mmx_r2r (psllq, regs, regd)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1755: FILE: drivers/staging/echo/mmx.h:139:
+#define         psllq_r2r(regs,regd)        mmx_r2r (psllq, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1756: FILE: drivers/staging/echo/mmx.h:140:
+#define         psllw_i2r(imm,reg)          mmx_i2r (psllw, imm, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1756: FILE: drivers/staging/echo/mmx.h:140:
+#define         psllw_i2r(imm,reg)          mmx_i2r (psllw, imm, reg)
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1756: FILE: drivers/staging/echo/mmx.h:140:
+#define         psllw_i2r(imm,reg)          mmx_i2r (psllw, imm, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1757: FILE: drivers/staging/echo/mmx.h:141:
+#define         psllw_m2r(var,reg)          mmx_m2r (psllw, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1757: FILE: drivers/staging/echo/mmx.h:141:
+#define         psllw_m2r(var,reg)          mmx_m2r (psllw, var, reg)
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1757: FILE: drivers/staging/echo/mmx.h:141:
+#define         psllw_m2r(var,reg)          mmx_m2r (psllw, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1758: FILE: drivers/staging/echo/mmx.h:142:
+#define         psllw_r2r(regs,regd)        mmx_r2r (psllw, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1758: FILE: drivers/staging/echo/mmx.h:142:
+#define         psllw_r2r(regs,regd)        mmx_r2r (psllw, regs, regd)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1758: FILE: drivers/staging/echo/mmx.h:142:
+#define         psllw_r2r(regs,regd)        mmx_r2r (psllw, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1760: FILE: drivers/staging/echo/mmx.h:144:
+#define         psrad_i2r(imm,reg)          mmx_i2r (psrad, imm, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1760: FILE: drivers/staging/echo/mmx.h:144:
+#define         psrad_i2r(imm,reg)          mmx_i2r (psrad, imm, reg)
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1760: FILE: drivers/staging/echo/mmx.h:144:
+#define         psrad_i2r(imm,reg)          mmx_i2r (psrad, imm, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1761: FILE: drivers/staging/echo/mmx.h:145:
+#define         psrad_m2r(var,reg)          mmx_m2r (psrad, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1761: FILE: drivers/staging/echo/mmx.h:145:
+#define         psrad_m2r(var,reg)          mmx_m2r (psrad, var, reg)
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1761: FILE: drivers/staging/echo/mmx.h:145:
+#define         psrad_m2r(var,reg)          mmx_m2r (psrad, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1762: FILE: drivers/staging/echo/mmx.h:146:
+#define         psrad_r2r(regs,regd)        mmx_r2r (psrad, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1762: FILE: drivers/staging/echo/mmx.h:146:
+#define         psrad_r2r(regs,regd)        mmx_r2r (psrad, regs, regd)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1762: FILE: drivers/staging/echo/mmx.h:146:
+#define         psrad_r2r(regs,regd)        mmx_r2r (psrad, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1763: FILE: drivers/staging/echo/mmx.h:147:
+#define         psraw_i2r(imm,reg)          mmx_i2r (psraw, imm, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1763: FILE: drivers/staging/echo/mmx.h:147:
+#define         psraw_i2r(imm,reg)          mmx_i2r (psraw, imm, reg)
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1763: FILE: drivers/staging/echo/mmx.h:147:
+#define         psraw_i2r(imm,reg)          mmx_i2r (psraw, imm, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1764: FILE: drivers/staging/echo/mmx.h:148:
+#define         psraw_m2r(var,reg)          mmx_m2r (psraw, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1764: FILE: drivers/staging/echo/mmx.h:148:
+#define         psraw_m2r(var,reg)          mmx_m2r (psraw, var, reg)
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1764: FILE: drivers/staging/echo/mmx.h:148:
+#define         psraw_m2r(var,reg)          mmx_m2r (psraw, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1765: FILE: drivers/staging/echo/mmx.h:149:
+#define         psraw_r2r(regs,regd)        mmx_r2r (psraw, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1765: FILE: drivers/staging/echo/mmx.h:149:
+#define         psraw_r2r(regs,regd)        mmx_r2r (psraw, regs, regd)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1765: FILE: drivers/staging/echo/mmx.h:149:
+#define         psraw_r2r(regs,regd)        mmx_r2r (psraw, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1767: FILE: drivers/staging/echo/mmx.h:151:
+#define         psrld_i2r(imm,reg)          mmx_i2r (psrld, imm, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1767: FILE: drivers/staging/echo/mmx.h:151:
+#define         psrld_i2r(imm,reg)          mmx_i2r (psrld, imm, reg)
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1767: FILE: drivers/staging/echo/mmx.h:151:
+#define         psrld_i2r(imm,reg)          mmx_i2r (psrld, imm, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1768: FILE: drivers/staging/echo/mmx.h:152:
+#define         psrld_m2r(var,reg)          mmx_m2r (psrld, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1768: FILE: drivers/staging/echo/mmx.h:152:
+#define         psrld_m2r(var,reg)          mmx_m2r (psrld, var, reg)
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1768: FILE: drivers/staging/echo/mmx.h:152:
+#define         psrld_m2r(var,reg)          mmx_m2r (psrld, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1769: FILE: drivers/staging/echo/mmx.h:153:
+#define         psrld_r2r(regs,regd)        mmx_r2r (psrld, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1769: FILE: drivers/staging/echo/mmx.h:153:
+#define         psrld_r2r(regs,regd)        mmx_r2r (psrld, regs, regd)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1769: FILE: drivers/staging/echo/mmx.h:153:
+#define         psrld_r2r(regs,regd)        mmx_r2r (psrld, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1770: FILE: drivers/staging/echo/mmx.h:154:
+#define         psrlq_i2r(imm,reg)          mmx_i2r (psrlq, imm, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1770: FILE: drivers/staging/echo/mmx.h:154:
+#define         psrlq_i2r(imm,reg)          mmx_i2r (psrlq, imm, reg)
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1770: FILE: drivers/staging/echo/mmx.h:154:
+#define         psrlq_i2r(imm,reg)          mmx_i2r (psrlq, imm, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1771: FILE: drivers/staging/echo/mmx.h:155:
+#define         psrlq_m2r(var,reg)          mmx_m2r (psrlq, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1771: FILE: drivers/staging/echo/mmx.h:155:
+#define         psrlq_m2r(var,reg)          mmx_m2r (psrlq, var, reg)
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1771: FILE: drivers/staging/echo/mmx.h:155:
+#define         psrlq_m2r(var,reg)          mmx_m2r (psrlq, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1772: FILE: drivers/staging/echo/mmx.h:156:
+#define         psrlq_r2r(regs,regd)        mmx_r2r (psrlq, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1772: FILE: drivers/staging/echo/mmx.h:156:
+#define         psrlq_r2r(regs,regd)        mmx_r2r (psrlq, regs, regd)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1772: FILE: drivers/staging/echo/mmx.h:156:
+#define         psrlq_r2r(regs,regd)        mmx_r2r (psrlq, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1773: FILE: drivers/staging/echo/mmx.h:157:
+#define         psrlw_i2r(imm,reg)          mmx_i2r (psrlw, imm, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1773: FILE: drivers/staging/echo/mmx.h:157:
+#define         psrlw_i2r(imm,reg)          mmx_i2r (psrlw, imm, reg)
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1773: FILE: drivers/staging/echo/mmx.h:157:
+#define         psrlw_i2r(imm,reg)          mmx_i2r (psrlw, imm, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1774: FILE: drivers/staging/echo/mmx.h:158:
+#define         psrlw_m2r(var,reg)          mmx_m2r (psrlw, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1774: FILE: drivers/staging/echo/mmx.h:158:
+#define         psrlw_m2r(var,reg)          mmx_m2r (psrlw, var, reg)
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1774: FILE: drivers/staging/echo/mmx.h:158:
+#define         psrlw_m2r(var,reg)          mmx_m2r (psrlw, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1775: FILE: drivers/staging/echo/mmx.h:159:
+#define         psrlw_r2r(regs,regd)        mmx_r2r (psrlw, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1775: FILE: drivers/staging/echo/mmx.h:159:
+#define         psrlw_r2r(regs,regd)        mmx_r2r (psrlw, regs, regd)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1775: FILE: drivers/staging/echo/mmx.h:159:
+#define         psrlw_r2r(regs,regd)        mmx_r2r (psrlw, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1777: FILE: drivers/staging/echo/mmx.h:161:
+#define         psubb_m2r(var,reg)          mmx_m2r (psubb, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1777: FILE: drivers/staging/echo/mmx.h:161:
+#define         psubb_m2r(var,reg)          mmx_m2r (psubb, var, reg)
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1777: FILE: drivers/staging/echo/mmx.h:161:
+#define         psubb_m2r(var,reg)          mmx_m2r (psubb, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1778: FILE: drivers/staging/echo/mmx.h:162:
+#define         psubb_r2r(regs,regd)        mmx_r2r (psubb, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1778: FILE: drivers/staging/echo/mmx.h:162:
+#define         psubb_r2r(regs,regd)        mmx_r2r (psubb, regs, regd)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1778: FILE: drivers/staging/echo/mmx.h:162:
+#define         psubb_r2r(regs,regd)        mmx_r2r (psubb, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1779: FILE: drivers/staging/echo/mmx.h:163:
+#define         psubd_m2r(var,reg)          mmx_m2r (psubd, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1779: FILE: drivers/staging/echo/mmx.h:163:
+#define         psubd_m2r(var,reg)          mmx_m2r (psubd, var, reg)
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1779: FILE: drivers/staging/echo/mmx.h:163:
+#define         psubd_m2r(var,reg)          mmx_m2r (psubd, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1780: FILE: drivers/staging/echo/mmx.h:164:
+#define         psubd_r2r(regs,regd)        mmx_r2r (psubd, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1780: FILE: drivers/staging/echo/mmx.h:164:
+#define         psubd_r2r(regs,regd)        mmx_r2r (psubd, regs, regd)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1780: FILE: drivers/staging/echo/mmx.h:164:
+#define         psubd_r2r(regs,regd)        mmx_r2r (psubd, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1781: FILE: drivers/staging/echo/mmx.h:165:
+#define         psubw_m2r(var,reg)          mmx_m2r (psubw, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1781: FILE: drivers/staging/echo/mmx.h:165:
+#define         psubw_m2r(var,reg)          mmx_m2r (psubw, var, reg)
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1781: FILE: drivers/staging/echo/mmx.h:165:
+#define         psubw_m2r(var,reg)          mmx_m2r (psubw, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1782: FILE: drivers/staging/echo/mmx.h:166:
+#define         psubw_r2r(regs,regd)        mmx_r2r (psubw, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1782: FILE: drivers/staging/echo/mmx.h:166:
+#define         psubw_r2r(regs,regd)        mmx_r2r (psubw, regs, regd)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1782: FILE: drivers/staging/echo/mmx.h:166:
+#define         psubw_r2r(regs,regd)        mmx_r2r (psubw, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1784: FILE: drivers/staging/echo/mmx.h:168:
+#define         psubsb_m2r(var,reg)         mmx_m2r (psubsb, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1784: FILE: drivers/staging/echo/mmx.h:168:
+#define         psubsb_m2r(var,reg)         mmx_m2r (psubsb, var, reg)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1784: FILE: drivers/staging/echo/mmx.h:168:
+#define         psubsb_m2r(var,reg)         mmx_m2r (psubsb, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1785: FILE: drivers/staging/echo/mmx.h:169:
+#define         psubsb_r2r(regs,regd)       mmx_r2r (psubsb, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1785: FILE: drivers/staging/echo/mmx.h:169:
+#define         psubsb_r2r(regs,regd)       mmx_r2r (psubsb, regs, regd)
                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1785: FILE: drivers/staging/echo/mmx.h:169:
+#define         psubsb_r2r(regs,regd)       mmx_r2r (psubsb, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1786: FILE: drivers/staging/echo/mmx.h:170:
+#define         psubsw_m2r(var,reg)         mmx_m2r (psubsw, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1786: FILE: drivers/staging/echo/mmx.h:170:
+#define         psubsw_m2r(var,reg)         mmx_m2r (psubsw, var, reg)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1786: FILE: drivers/staging/echo/mmx.h:170:
+#define         psubsw_m2r(var,reg)         mmx_m2r (psubsw, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1787: FILE: drivers/staging/echo/mmx.h:171:
+#define         psubsw_r2r(regs,regd)       mmx_r2r (psubsw, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1787: FILE: drivers/staging/echo/mmx.h:171:
+#define         psubsw_r2r(regs,regd)       mmx_r2r (psubsw, regs, regd)
                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1787: FILE: drivers/staging/echo/mmx.h:171:
+#define         psubsw_r2r(regs,regd)       mmx_r2r (psubsw, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1789: FILE: drivers/staging/echo/mmx.h:173:
+#define         psubusb_m2r(var,reg)        mmx_m2r (psubusb, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1789: FILE: drivers/staging/echo/mmx.h:173:
+#define         psubusb_m2r(var,reg)        mmx_m2r (psubusb, var, reg)
                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1789: FILE: drivers/staging/echo/mmx.h:173:
+#define         psubusb_m2r(var,reg)        mmx_m2r (psubusb, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1790: FILE: drivers/staging/echo/mmx.h:174:
+#define         psubusb_r2r(regs,regd)      mmx_r2r (psubusb, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1790: FILE: drivers/staging/echo/mmx.h:174:
+#define         psubusb_r2r(regs,regd)      mmx_r2r (psubusb, regs, regd)
                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1790: FILE: drivers/staging/echo/mmx.h:174:
+#define         psubusb_r2r(regs,regd)      mmx_r2r (psubusb, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1791: FILE: drivers/staging/echo/mmx.h:175:
+#define         psubusw_m2r(var,reg)        mmx_m2r (psubusw, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1791: FILE: drivers/staging/echo/mmx.h:175:
+#define         psubusw_m2r(var,reg)        mmx_m2r (psubusw, var, reg)
                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1791: FILE: drivers/staging/echo/mmx.h:175:
+#define         psubusw_m2r(var,reg)        mmx_m2r (psubusw, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1792: FILE: drivers/staging/echo/mmx.h:176:
+#define         psubusw_r2r(regs,regd)      mmx_r2r (psubusw, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1792: FILE: drivers/staging/echo/mmx.h:176:
+#define         psubusw_r2r(regs,regd)      mmx_r2r (psubusw, regs, regd)
                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1792: FILE: drivers/staging/echo/mmx.h:176:
+#define         psubusw_r2r(regs,regd)      mmx_r2r (psubusw, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1794: FILE: drivers/staging/echo/mmx.h:178:
+#define         punpckhbw_m2r(var,reg)      mmx_m2r (punpckhbw, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1794: FILE: drivers/staging/echo/mmx.h:178:
+#define         punpckhbw_m2r(var,reg)      mmx_m2r (punpckhbw, var, reg)
                                  ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1794: FILE: drivers/staging/echo/mmx.h:178:
+#define         punpckhbw_m2r(var,reg)      mmx_m2r (punpckhbw, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1795: FILE: drivers/staging/echo/mmx.h:179:
+#define         punpckhbw_r2r(regs,regd)    mmx_r2r (punpckhbw, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1795: FILE: drivers/staging/echo/mmx.h:179:
+#define         punpckhbw_r2r(regs,regd)    mmx_r2r (punpckhbw, regs, regd)
                                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1795: FILE: drivers/staging/echo/mmx.h:179:
+#define         punpckhbw_r2r(regs,regd)    mmx_r2r (punpckhbw, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1796: FILE: drivers/staging/echo/mmx.h:180:
+#define         punpckhdq_m2r(var,reg)      mmx_m2r (punpckhdq, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1796: FILE: drivers/staging/echo/mmx.h:180:
+#define         punpckhdq_m2r(var,reg)      mmx_m2r (punpckhdq, var, reg)
                                  ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1796: FILE: drivers/staging/echo/mmx.h:180:
+#define         punpckhdq_m2r(var,reg)      mmx_m2r (punpckhdq, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1797: FILE: drivers/staging/echo/mmx.h:181:
+#define         punpckhdq_r2r(regs,regd)    mmx_r2r (punpckhdq, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1797: FILE: drivers/staging/echo/mmx.h:181:
+#define         punpckhdq_r2r(regs,regd)    mmx_r2r (punpckhdq, regs, regd)
                                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1797: FILE: drivers/staging/echo/mmx.h:181:
+#define         punpckhdq_r2r(regs,regd)    mmx_r2r (punpckhdq, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1798: FILE: drivers/staging/echo/mmx.h:182:
+#define         punpckhwd_m2r(var,reg)      mmx_m2r (punpckhwd, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1798: FILE: drivers/staging/echo/mmx.h:182:
+#define         punpckhwd_m2r(var,reg)      mmx_m2r (punpckhwd, var, reg)
                                  ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1798: FILE: drivers/staging/echo/mmx.h:182:
+#define         punpckhwd_m2r(var,reg)      mmx_m2r (punpckhwd, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1799: FILE: drivers/staging/echo/mmx.h:183:
+#define         punpckhwd_r2r(regs,regd)    mmx_r2r (punpckhwd, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1799: FILE: drivers/staging/echo/mmx.h:183:
+#define         punpckhwd_r2r(regs,regd)    mmx_r2r (punpckhwd, regs, regd)
                                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1799: FILE: drivers/staging/echo/mmx.h:183:
+#define         punpckhwd_r2r(regs,regd)    mmx_r2r (punpckhwd, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1801: FILE: drivers/staging/echo/mmx.h:185:
+#define         punpcklbw_m2r(var,reg)      mmx_m2r (punpcklbw, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1801: FILE: drivers/staging/echo/mmx.h:185:
+#define         punpcklbw_m2r(var,reg)      mmx_m2r (punpcklbw, var, reg)
                                  ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1801: FILE: drivers/staging/echo/mmx.h:185:
+#define         punpcklbw_m2r(var,reg)      mmx_m2r (punpcklbw, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1802: FILE: drivers/staging/echo/mmx.h:186:
+#define         punpcklbw_r2r(regs,regd)    mmx_r2r (punpcklbw, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1802: FILE: drivers/staging/echo/mmx.h:186:
+#define         punpcklbw_r2r(regs,regd)    mmx_r2r (punpcklbw, regs, regd)
                                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1802: FILE: drivers/staging/echo/mmx.h:186:
+#define         punpcklbw_r2r(regs,regd)    mmx_r2r (punpcklbw, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1803: FILE: drivers/staging/echo/mmx.h:187:
+#define         punpckldq_m2r(var,reg)      mmx_m2r (punpckldq, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1803: FILE: drivers/staging/echo/mmx.h:187:
+#define         punpckldq_m2r(var,reg)      mmx_m2r (punpckldq, var, reg)
                                  ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1803: FILE: drivers/staging/echo/mmx.h:187:
+#define         punpckldq_m2r(var,reg)      mmx_m2r (punpckldq, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1804: FILE: drivers/staging/echo/mmx.h:188:
+#define         punpckldq_r2r(regs,regd)    mmx_r2r (punpckldq, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1804: FILE: drivers/staging/echo/mmx.h:188:
+#define         punpckldq_r2r(regs,regd)    mmx_r2r (punpckldq, regs, regd)
                                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1804: FILE: drivers/staging/echo/mmx.h:188:
+#define         punpckldq_r2r(regs,regd)    mmx_r2r (punpckldq, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1805: FILE: drivers/staging/echo/mmx.h:189:
+#define         punpcklwd_m2r(var,reg)      mmx_m2r (punpcklwd, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1805: FILE: drivers/staging/echo/mmx.h:189:
+#define         punpcklwd_m2r(var,reg)      mmx_m2r (punpcklwd, var, reg)
                                  ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1805: FILE: drivers/staging/echo/mmx.h:189:
+#define         punpcklwd_m2r(var,reg)      mmx_m2r (punpcklwd, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1806: FILE: drivers/staging/echo/mmx.h:190:
+#define         punpcklwd_r2r(regs,regd)    mmx_r2r (punpcklwd, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1806: FILE: drivers/staging/echo/mmx.h:190:
+#define         punpcklwd_r2r(regs,regd)    mmx_r2r (punpcklwd, regs, regd)
                                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1806: FILE: drivers/staging/echo/mmx.h:190:
+#define         punpcklwd_r2r(regs,regd)    mmx_r2r (punpcklwd, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1808: FILE: drivers/staging/echo/mmx.h:192:
+#define         pxor_m2r(var,reg)           mmx_m2r (pxor, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1808: FILE: drivers/staging/echo/mmx.h:192:
+#define         pxor_m2r(var,reg)           mmx_m2r (pxor, var, reg)
                             ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1808: FILE: drivers/staging/echo/mmx.h:192:
+#define         pxor_m2r(var,reg)           mmx_m2r (pxor, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1809: FILE: drivers/staging/echo/mmx.h:193:
+#define         pxor_r2r(regs,regd)         mmx_r2r (pxor, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1809: FILE: drivers/staging/echo/mmx.h:193:
+#define         pxor_r2r(regs,regd)         mmx_r2r (pxor, regs, regd)
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1809: FILE: drivers/staging/echo/mmx.h:193:
+#define         pxor_r2r(regs,regd)         mmx_r2r (pxor, regs, regd)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1811: FILE: drivers/staging/echo/mmx.h:195:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1814: FILE: drivers/staging/echo/mmx.h:198:
+#define         pavgusb_m2r(var,reg)        mmx_m2r (pavgusb, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1814: FILE: drivers/staging/echo/mmx.h:198:
+#define         pavgusb_m2r(var,reg)        mmx_m2r (pavgusb, var, reg)
                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1814: FILE: drivers/staging/echo/mmx.h:198:
+#define         pavgusb_m2r(var,reg)        mmx_m2r (pavgusb, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1815: FILE: drivers/staging/echo/mmx.h:199:
+#define         pavgusb_r2r(regs,regd)      mmx_r2r (pavgusb, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1815: FILE: drivers/staging/echo/mmx.h:199:
+#define         pavgusb_r2r(regs,regd)      mmx_r2r (pavgusb, regs, regd)
                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1815: FILE: drivers/staging/echo/mmx.h:199:
+#define         pavgusb_r2r(regs,regd)      mmx_r2r (pavgusb, regs, regd)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1817: FILE: drivers/staging/echo/mmx.h:201:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1820: FILE: drivers/staging/echo/mmx.h:204:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1821: FILE: drivers/staging/echo/mmx.h:205:
+#define         mmx_m2ri(op,mem,reg,imm) \
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1821: FILE: drivers/staging/echo/mmx.h:205:
+#define         mmx_m2ri(op,mem,reg,imm) \
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1821: FILE: drivers/staging/echo/mmx.h:205:
+#define         mmx_m2ri(op,mem,reg,imm) \
                                    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1821: FILE: drivers/staging/echo/mmx.h:205:
+#define         mmx_m2ri(op,mem,reg,imm) \
+        __asm__ __volatile__ (#op " %1, %0, %%" #reg \
+                              : /* nothing */ \
+                              : "m" (mem), "i" (imm))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1822: FILE: drivers/staging/echo/mmx.h:206:
+        __asm__ __volatile__ (#op " %1, %0, %%" #reg \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1822: FILE: drivers/staging/echo/mmx.h:206:
+        __asm__ __volatile__ (#op " %1, %0, %%" #reg \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1823: FILE: drivers/staging/echo/mmx.h:207:
+                              : /* nothing */ \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1823: FILE: drivers/staging/echo/mmx.h:207:
+                              : /* nothing */ \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1824: FILE: drivers/staging/echo/mmx.h:208:
+                              : "m" (mem), "i" (imm))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1824: FILE: drivers/staging/echo/mmx.h:208:
+                              : "m" (mem), "i" (imm))$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1825: FILE: drivers/staging/echo/mmx.h:209:
+#define         mmx_r2ri(op,regs,regd,imm) \
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1825: FILE: drivers/staging/echo/mmx.h:209:
+#define         mmx_r2ri(op,regs,regd,imm) \
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1825: FILE: drivers/staging/echo/mmx.h:209:
+#define         mmx_r2ri(op,regs,regd,imm) \
                                      ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1825: FILE: drivers/staging/echo/mmx.h:209:
+#define         mmx_r2ri(op,regs,regd,imm) \
+        __asm__ __volatile__ (#op " %0, %%" #regs ", %%" #regd \
+                              : /* nothing */ \
+                              : "i" (imm) )

ERROR:CODE_INDENT: code indent should use tabs where possible
#1826: FILE: drivers/staging/echo/mmx.h:210:
+        __asm__ __volatile__ (#op " %0, %%" #regs ", %%" #regd \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1826: FILE: drivers/staging/echo/mmx.h:210:
+        __asm__ __volatile__ (#op " %0, %%" #regs ", %%" #regd \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1827: FILE: drivers/staging/echo/mmx.h:211:
+                              : /* nothing */ \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1827: FILE: drivers/staging/echo/mmx.h:211:
+                              : /* nothing */ \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1828: FILE: drivers/staging/echo/mmx.h:212:
+                              : "i" (imm) )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1828: FILE: drivers/staging/echo/mmx.h:212:
+                              : "i" (imm) )$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1828: FILE: drivers/staging/echo/mmx.h:212:
+                              : "i" (imm) )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1830: FILE: drivers/staging/echo/mmx.h:214:
+#define         mmx_fetch(mem,hint) \
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1830: FILE: drivers/staging/echo/mmx.h:214:
+#define         mmx_fetch(mem,hint) \
+        __asm__ __volatile__ ("prefetch" #hint " %0" \
+                              : /* nothing */ \
+                              : "m" (mem))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1831: FILE: drivers/staging/echo/mmx.h:215:
+        __asm__ __volatile__ ("prefetch" #hint " %0" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1831: FILE: drivers/staging/echo/mmx.h:215:
+        __asm__ __volatile__ ("prefetch" #hint " %0" \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1832: FILE: drivers/staging/echo/mmx.h:216:
+                              : /* nothing */ \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1832: FILE: drivers/staging/echo/mmx.h:216:
+                              : /* nothing */ \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1833: FILE: drivers/staging/echo/mmx.h:217:
+                              : "m" (mem))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1833: FILE: drivers/staging/echo/mmx.h:217:
+                              : "m" (mem))$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1835: FILE: drivers/staging/echo/mmx.h:219:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1836: FILE: drivers/staging/echo/mmx.h:220:
+#define         maskmovq(regs,maskreg)      mmx_r2ri (maskmovq, regs, maskreg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1836: FILE: drivers/staging/echo/mmx.h:220:
+#define         maskmovq(regs,maskreg)      mmx_r2ri (maskmovq, regs, maskreg)
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1836: FILE: drivers/staging/echo/mmx.h:220:
+#define         maskmovq(regs,maskreg)      mmx_r2ri (maskmovq, regs, maskreg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1838: FILE: drivers/staging/echo/mmx.h:222:
+#define         movntq_r2m(mmreg,var)       mmx_r2m (movntq, mmreg, var)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1838: FILE: drivers/staging/echo/mmx.h:222:
+#define         movntq_r2m(mmreg,var)       mmx_r2m (movntq, mmreg, var)
                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1838: FILE: drivers/staging/echo/mmx.h:222:
+#define         movntq_r2m(mmreg,var)       mmx_r2m (movntq, mmreg, var)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1840: FILE: drivers/staging/echo/mmx.h:224:
+#define         pavgb_m2r(var,reg)          mmx_m2r (pavgb, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1840: FILE: drivers/staging/echo/mmx.h:224:
+#define         pavgb_m2r(var,reg)          mmx_m2r (pavgb, var, reg)
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1840: FILE: drivers/staging/echo/mmx.h:224:
+#define         pavgb_m2r(var,reg)          mmx_m2r (pavgb, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1841: FILE: drivers/staging/echo/mmx.h:225:
+#define         pavgb_r2r(regs,regd)        mmx_r2r (pavgb, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1841: FILE: drivers/staging/echo/mmx.h:225:
+#define         pavgb_r2r(regs,regd)        mmx_r2r (pavgb, regs, regd)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1841: FILE: drivers/staging/echo/mmx.h:225:
+#define         pavgb_r2r(regs,regd)        mmx_r2r (pavgb, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1842: FILE: drivers/staging/echo/mmx.h:226:
+#define         pavgw_m2r(var,reg)          mmx_m2r (pavgw, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1842: FILE: drivers/staging/echo/mmx.h:226:
+#define         pavgw_m2r(var,reg)          mmx_m2r (pavgw, var, reg)
                              ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1842: FILE: drivers/staging/echo/mmx.h:226:
+#define         pavgw_m2r(var,reg)          mmx_m2r (pavgw, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1843: FILE: drivers/staging/echo/mmx.h:227:
+#define         pavgw_r2r(regs,regd)        mmx_r2r (pavgw, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1843: FILE: drivers/staging/echo/mmx.h:227:
+#define         pavgw_r2r(regs,regd)        mmx_r2r (pavgw, regs, regd)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1843: FILE: drivers/staging/echo/mmx.h:227:
+#define         pavgw_r2r(regs,regd)        mmx_r2r (pavgw, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1845: FILE: drivers/staging/echo/mmx.h:229:
+#define         pextrw_r2r(mmreg,reg,imm)   mmx_r2ri (pextrw, mmreg, reg, imm)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1845: FILE: drivers/staging/echo/mmx.h:229:
+#define         pextrw_r2r(mmreg,reg,imm)   mmx_r2ri (pextrw, mmreg, reg, imm)
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1845: FILE: drivers/staging/echo/mmx.h:229:
+#define         pextrw_r2r(mmreg,reg,imm)   mmx_r2ri (pextrw, mmreg, reg, imm)
                                     ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1845: FILE: drivers/staging/echo/mmx.h:229:
+#define         pextrw_r2r(mmreg,reg,imm)   mmx_r2ri (pextrw, mmreg, reg, imm)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1847: FILE: drivers/staging/echo/mmx.h:231:
+#define         pinsrw_r2r(reg,mmreg,imm)   mmx_r2ri (pinsrw, reg, mmreg, imm)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1847: FILE: drivers/staging/echo/mmx.h:231:
+#define         pinsrw_r2r(reg,mmreg,imm)   mmx_r2ri (pinsrw, reg, mmreg, imm)
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1847: FILE: drivers/staging/echo/mmx.h:231:
+#define         pinsrw_r2r(reg,mmreg,imm)   mmx_r2ri (pinsrw, reg, mmreg, imm)
                                     ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1847: FILE: drivers/staging/echo/mmx.h:231:
+#define         pinsrw_r2r(reg,mmreg,imm)   mmx_r2ri (pinsrw, reg, mmreg, imm)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1849: FILE: drivers/staging/echo/mmx.h:233:
+#define         pmaxsw_m2r(var,reg)         mmx_m2r (pmaxsw, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1849: FILE: drivers/staging/echo/mmx.h:233:
+#define         pmaxsw_m2r(var,reg)         mmx_m2r (pmaxsw, var, reg)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1849: FILE: drivers/staging/echo/mmx.h:233:
+#define         pmaxsw_m2r(var,reg)         mmx_m2r (pmaxsw, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1850: FILE: drivers/staging/echo/mmx.h:234:
+#define         pmaxsw_r2r(regs,regd)       mmx_r2r (pmaxsw, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1850: FILE: drivers/staging/echo/mmx.h:234:
+#define         pmaxsw_r2r(regs,regd)       mmx_r2r (pmaxsw, regs, regd)
                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1850: FILE: drivers/staging/echo/mmx.h:234:
+#define         pmaxsw_r2r(regs,regd)       mmx_r2r (pmaxsw, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1852: FILE: drivers/staging/echo/mmx.h:236:
+#define         pmaxub_m2r(var,reg)         mmx_m2r (pmaxub, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1852: FILE: drivers/staging/echo/mmx.h:236:
+#define         pmaxub_m2r(var,reg)         mmx_m2r (pmaxub, var, reg)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1852: FILE: drivers/staging/echo/mmx.h:236:
+#define         pmaxub_m2r(var,reg)         mmx_m2r (pmaxub, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1853: FILE: drivers/staging/echo/mmx.h:237:
+#define         pmaxub_r2r(regs,regd)       mmx_r2r (pmaxub, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1853: FILE: drivers/staging/echo/mmx.h:237:
+#define         pmaxub_r2r(regs,regd)       mmx_r2r (pmaxub, regs, regd)
                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1853: FILE: drivers/staging/echo/mmx.h:237:
+#define         pmaxub_r2r(regs,regd)       mmx_r2r (pmaxub, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1855: FILE: drivers/staging/echo/mmx.h:239:
+#define         pminsw_m2r(var,reg)         mmx_m2r (pminsw, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1855: FILE: drivers/staging/echo/mmx.h:239:
+#define         pminsw_m2r(var,reg)         mmx_m2r (pminsw, var, reg)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1855: FILE: drivers/staging/echo/mmx.h:239:
+#define         pminsw_m2r(var,reg)         mmx_m2r (pminsw, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1856: FILE: drivers/staging/echo/mmx.h:240:
+#define         pminsw_r2r(regs,regd)       mmx_r2r (pminsw, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1856: FILE: drivers/staging/echo/mmx.h:240:
+#define         pminsw_r2r(regs,regd)       mmx_r2r (pminsw, regs, regd)
                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1856: FILE: drivers/staging/echo/mmx.h:240:
+#define         pminsw_r2r(regs,regd)       mmx_r2r (pminsw, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1858: FILE: drivers/staging/echo/mmx.h:242:
+#define         pminub_m2r(var,reg)         mmx_m2r (pminub, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1858: FILE: drivers/staging/echo/mmx.h:242:
+#define         pminub_m2r(var,reg)         mmx_m2r (pminub, var, reg)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1858: FILE: drivers/staging/echo/mmx.h:242:
+#define         pminub_m2r(var,reg)         mmx_m2r (pminub, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1859: FILE: drivers/staging/echo/mmx.h:243:
+#define         pminub_r2r(regs,regd)       mmx_r2r (pminub, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1859: FILE: drivers/staging/echo/mmx.h:243:
+#define         pminub_r2r(regs,regd)       mmx_r2r (pminub, regs, regd)
                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1859: FILE: drivers/staging/echo/mmx.h:243:
+#define         pminub_r2r(regs,regd)       mmx_r2r (pminub, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1861: FILE: drivers/staging/echo/mmx.h:245:
+#define         pmovmskb(mmreg,reg) \
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1861: FILE: drivers/staging/echo/mmx.h:245:
+#define         pmovmskb(mmreg,reg) \
+        __asm__ __volatile__ ("movmskps %" #mmreg ", %" #reg)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1862: FILE: drivers/staging/echo/mmx.h:246:
+        __asm__ __volatile__ ("movmskps %" #mmreg ", %" #reg)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1862: FILE: drivers/staging/echo/mmx.h:246:
+        __asm__ __volatile__ ("movmskps %" #mmreg ", %" #reg)$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1864: FILE: drivers/staging/echo/mmx.h:248:
+#define         pmulhuw_m2r(var,reg)        mmx_m2r (pmulhuw, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1864: FILE: drivers/staging/echo/mmx.h:248:
+#define         pmulhuw_m2r(var,reg)        mmx_m2r (pmulhuw, var, reg)
                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1864: FILE: drivers/staging/echo/mmx.h:248:
+#define         pmulhuw_m2r(var,reg)        mmx_m2r (pmulhuw, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1865: FILE: drivers/staging/echo/mmx.h:249:
+#define         pmulhuw_r2r(regs,regd)      mmx_r2r (pmulhuw, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1865: FILE: drivers/staging/echo/mmx.h:249:
+#define         pmulhuw_r2r(regs,regd)      mmx_r2r (pmulhuw, regs, regd)
                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1865: FILE: drivers/staging/echo/mmx.h:249:
+#define         pmulhuw_r2r(regs,regd)      mmx_r2r (pmulhuw, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1867: FILE: drivers/staging/echo/mmx.h:251:
+#define         prefetcht0(mem)             mmx_fetch (mem, t0)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1867: FILE: drivers/staging/echo/mmx.h:251:
+#define         prefetcht0(mem)             mmx_fetch (mem, t0)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1868: FILE: drivers/staging/echo/mmx.h:252:
+#define         prefetcht1(mem)             mmx_fetch (mem, t1)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1868: FILE: drivers/staging/echo/mmx.h:252:
+#define         prefetcht1(mem)             mmx_fetch (mem, t1)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1869: FILE: drivers/staging/echo/mmx.h:253:
+#define         prefetcht2(mem)             mmx_fetch (mem, t2)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1869: FILE: drivers/staging/echo/mmx.h:253:
+#define         prefetcht2(mem)             mmx_fetch (mem, t2)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1870: FILE: drivers/staging/echo/mmx.h:254:
+#define         prefetchnta(mem)            mmx_fetch (mem, nta)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1870: FILE: drivers/staging/echo/mmx.h:254:
+#define         prefetchnta(mem)            mmx_fetch (mem, nta)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1872: FILE: drivers/staging/echo/mmx.h:256:
+#define         psadbw_m2r(var,reg)         mmx_m2r (psadbw, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1872: FILE: drivers/staging/echo/mmx.h:256:
+#define         psadbw_m2r(var,reg)         mmx_m2r (psadbw, var, reg)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1872: FILE: drivers/staging/echo/mmx.h:256:
+#define         psadbw_m2r(var,reg)         mmx_m2r (psadbw, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1873: FILE: drivers/staging/echo/mmx.h:257:
+#define         psadbw_r2r(regs,regd)       mmx_r2r (psadbw, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1873: FILE: drivers/staging/echo/mmx.h:257:
+#define         psadbw_r2r(regs,regd)       mmx_r2r (psadbw, regs, regd)
                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1873: FILE: drivers/staging/echo/mmx.h:257:
+#define         psadbw_r2r(regs,regd)       mmx_r2r (psadbw, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1875: FILE: drivers/staging/echo/mmx.h:259:
+#define         pshufw_m2r(var,reg,imm)     mmx_m2ri(pshufw, var, reg, imm)
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1875: FILE: drivers/staging/echo/mmx.h:259:
+#define         pshufw_m2r(var,reg,imm)     mmx_m2ri(pshufw, var, reg, imm)
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1876: FILE: drivers/staging/echo/mmx.h:260:
+#define         pshufw_r2r(regs,regd,imm)   mmx_r2ri(pshufw, regs, regd, imm)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1876: FILE: drivers/staging/echo/mmx.h:260:
+#define         pshufw_r2r(regs,regd,imm)   mmx_r2ri(pshufw, regs, regd, imm)
                                     ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1878: FILE: drivers/staging/echo/mmx.h:262:
+#define         sfence() __asm__ __volatile__ ("sfence\n\t")

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1881: FILE: drivers/staging/echo/mmx.h:265:
+#define         pshufhw_m2r(var,reg,imm)    mmx_m2ri(pshufhw, var, reg, imm)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1881: FILE: drivers/staging/echo/mmx.h:265:
+#define         pshufhw_m2r(var,reg,imm)    mmx_m2ri(pshufhw, var, reg, imm)
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1882: FILE: drivers/staging/echo/mmx.h:266:
+#define         pshufhw_r2r(regs,regd,imm)  mmx_r2ri(pshufhw, regs, regd, imm)
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1882: FILE: drivers/staging/echo/mmx.h:266:
+#define         pshufhw_r2r(regs,regd,imm)  mmx_r2ri(pshufhw, regs, regd, imm)
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1883: FILE: drivers/staging/echo/mmx.h:267:
+#define         pshuflw_m2r(var,reg,imm)    mmx_m2ri(pshuflw, var, reg, imm)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1883: FILE: drivers/staging/echo/mmx.h:267:
+#define         pshuflw_m2r(var,reg,imm)    mmx_m2ri(pshuflw, var, reg, imm)
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1884: FILE: drivers/staging/echo/mmx.h:268:
+#define         pshuflw_r2r(regs,regd,imm)  mmx_r2ri(pshuflw, regs, regd, imm)
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1884: FILE: drivers/staging/echo/mmx.h:268:
+#define         pshuflw_r2r(regs,regd,imm)  mmx_r2ri(pshuflw, regs, regd, imm)
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1886: FILE: drivers/staging/echo/mmx.h:270:
+#define         pshufd_r2r(regs,regd,imm)   mmx_r2ri(pshufd, regs, regd, imm)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1886: FILE: drivers/staging/echo/mmx.h:270:
+#define         pshufd_r2r(regs,regd,imm)   mmx_r2ri(pshufd, regs, regd, imm)
                                     ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1888: FILE: drivers/staging/echo/mmx.h:272:
+#define         movdqa_m2r(var,reg)         mmx_m2r (movdqa, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1888: FILE: drivers/staging/echo/mmx.h:272:
+#define         movdqa_m2r(var,reg)         mmx_m2r (movdqa, var, reg)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1888: FILE: drivers/staging/echo/mmx.h:272:
+#define         movdqa_m2r(var,reg)         mmx_m2r (movdqa, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1889: FILE: drivers/staging/echo/mmx.h:273:
+#define         movdqa_r2m(reg,var)         mmx_r2m (movdqa, reg, var)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1889: FILE: drivers/staging/echo/mmx.h:273:
+#define         movdqa_r2m(reg,var)         mmx_r2m (movdqa, reg, var)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1889: FILE: drivers/staging/echo/mmx.h:273:
+#define         movdqa_r2m(reg,var)         mmx_r2m (movdqa, reg, var)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1890: FILE: drivers/staging/echo/mmx.h:274:
+#define         movdqa_r2r(regs,regd)       mmx_r2r (movdqa, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1890: FILE: drivers/staging/echo/mmx.h:274:
+#define         movdqa_r2r(regs,regd)       mmx_r2r (movdqa, regs, regd)
                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1890: FILE: drivers/staging/echo/mmx.h:274:
+#define         movdqa_r2r(regs,regd)       mmx_r2r (movdqa, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1891: FILE: drivers/staging/echo/mmx.h:275:
+#define         movdqu_m2r(var,reg)         mmx_m2r (movdqu, var, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1891: FILE: drivers/staging/echo/mmx.h:275:
+#define         movdqu_m2r(var,reg)         mmx_m2r (movdqu, var, reg)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1891: FILE: drivers/staging/echo/mmx.h:275:
+#define         movdqu_m2r(var,reg)         mmx_m2r (movdqu, var, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1892: FILE: drivers/staging/echo/mmx.h:276:
+#define         movdqu_r2m(reg,var)         mmx_r2m (movdqu, reg, var)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1892: FILE: drivers/staging/echo/mmx.h:276:
+#define         movdqu_r2m(reg,var)         mmx_r2m (movdqu, reg, var)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1892: FILE: drivers/staging/echo/mmx.h:276:
+#define         movdqu_r2m(reg,var)         mmx_r2m (movdqu, reg, var)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1893: FILE: drivers/staging/echo/mmx.h:277:
+#define         movdqu_r2r(regs,regd)       mmx_r2r (movdqu, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1893: FILE: drivers/staging/echo/mmx.h:277:
+#define         movdqu_r2r(regs,regd)       mmx_r2r (movdqu, regs, regd)
                                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1893: FILE: drivers/staging/echo/mmx.h:277:
+#define         movdqu_r2r(regs,regd)       mmx_r2r (movdqu, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1895: FILE: drivers/staging/echo/mmx.h:279:
+#define         pmullw_r2m(reg,var)         mmx_r2m (pmullw, reg, var)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1895: FILE: drivers/staging/echo/mmx.h:279:
+#define         pmullw_r2m(reg,var)         mmx_r2m (pmullw, reg, var)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1895: FILE: drivers/staging/echo/mmx.h:279:
+#define         pmullw_r2m(reg,var)         mmx_r2m (pmullw, reg, var)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1897: FILE: drivers/staging/echo/mmx.h:281:
+#define         pslldq_i2r(imm,reg)         mmx_i2r (pslldq, imm, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1897: FILE: drivers/staging/echo/mmx.h:281:
+#define         pslldq_i2r(imm,reg)         mmx_i2r (pslldq, imm, reg)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1897: FILE: drivers/staging/echo/mmx.h:281:
+#define         pslldq_i2r(imm,reg)         mmx_i2r (pslldq, imm, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1898: FILE: drivers/staging/echo/mmx.h:282:
+#define         psrldq_i2r(imm,reg)         mmx_i2r (psrldq, imm, reg)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1898: FILE: drivers/staging/echo/mmx.h:282:
+#define         psrldq_i2r(imm,reg)         mmx_i2r (psrldq, imm, reg)
                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1898: FILE: drivers/staging/echo/mmx.h:282:
+#define         psrldq_i2r(imm,reg)         mmx_i2r (psrldq, imm, reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1900: FILE: drivers/staging/echo/mmx.h:284:
+#define         punpcklqdq_r2r(regs,regd)   mmx_r2r (punpcklqdq, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1900: FILE: drivers/staging/echo/mmx.h:284:
+#define         punpcklqdq_r2r(regs,regd)   mmx_r2r (punpcklqdq, regs, regd)
                                    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1900: FILE: drivers/staging/echo/mmx.h:284:
+#define         punpcklqdq_r2r(regs,regd)   mmx_r2r (punpcklqdq, regs, regd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1901: FILE: drivers/staging/echo/mmx.h:285:
+#define         punpckhqdq_r2r(regs,regd)   mmx_r2r (punpckhqdq, regs, regd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1901: FILE: drivers/staging/echo/mmx.h:285:
+#define         punpckhqdq_r2r(regs,regd)   mmx_r2r (punpckhqdq, regs, regd)
                                    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1901: FILE: drivers/staging/echo/mmx.h:285:
+#define         punpckhqdq_r2r(regs,regd)   mmx_r2r (punpckhqdq, regs, regd)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1903: FILE: drivers/staging/echo/mmx.h:287:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000218385.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 526 errors, 736 warnings, 161 checks, 1792 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000218385.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
