WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#51: 
      oprofile: op_model_athlon.c support for AMD family 10h barcelona performance counters

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#350: FILE: arch/x86/oprofile/op_model_athlon.c:34:
+#define CTRL_CLEAR_LO(x) (x &= (1<<21))
                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#350: FILE: arch/x86/oprofile/op_model_athlon.c:34:
+#define CTRL_CLEAR_LO(x) (x &= (1<<21))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#351: FILE: arch/x86/oprofile/op_model_athlon.c:35:
+#define CTRL_CLEAR_HI(x) (x &= 0xfffffcf0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#357: FILE: arch/x86/oprofile/op_model_athlon.c:40:
+#define CTRL_SET_EVENT_LOW(val, e) (val |= (e & 0xff))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'e' may be better as '(e)' to avoid precedence issues
#357: FILE: arch/x86/oprofile/op_model_athlon.c:40:
+#define CTRL_SET_EVENT_LOW(val, e) (val |= (e & 0xff))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#358: FILE: arch/x86/oprofile/op_model_athlon.c:41:
+#define CTRL_SET_EVENT_HIGH(val, e) (val |= ((e >> 8) & 0xf))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'e' may be better as '(e)' to avoid precedence issues
#358: FILE: arch/x86/oprofile/op_model_athlon.c:41:
+#define CTRL_SET_EVENT_HIGH(val, e) (val |= ((e >> 8) & 0xf))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#359: FILE: arch/x86/oprofile/op_model_athlon.c:42:
+#define CTRL_SET_HOST_ONLY(val, h) (val |= ((h & 1) << 9))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'h' may be better as '(h)' to avoid precedence issues
#359: FILE: arch/x86/oprofile/op_model_athlon.c:42:
+#define CTRL_SET_HOST_ONLY(val, h) (val |= ((h & 1) << 9))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#360: FILE: arch/x86/oprofile/op_model_athlon.c:43:
+#define CTRL_SET_GUEST_ONLY(val, h) (val |= ((h & 1) << 8))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'h' may be better as '(h)' to avoid precedence issues
#360: FILE: arch/x86/oprofile/op_model_athlon.c:43:
+#define CTRL_SET_GUEST_ONLY(val, h) (val |= ((h & 1) << 8))

WARNING:MISPLACED_INIT: __cpuinitdata should be placed after tvec_base_done[NR_CPUS]
#586: FILE: kernel/timer.c:1226:
+	static char __cpuinitdata tvec_base_done[NR_CPUS];

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000345592.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 11 checks, 428 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000345592.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
