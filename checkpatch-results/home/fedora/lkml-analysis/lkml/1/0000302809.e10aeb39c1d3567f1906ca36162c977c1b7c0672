WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#59: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#64: FILE: fs/omfs/omfs.h:1:
+#ifndef _OMFS_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#98: FILE: fs/omfs/omfs.h:35:
+	struct mutex s_bitmap_lock;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#166: FILE: fs/omfs/omfs.h:103:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#184: FILE: fs/omfs/omfs.h:121:
+extern unsigned long omfs_count_free(struct super_block *sb);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#185: FILE: fs/omfs/omfs.h:122:
+extern int omfs_allocate_block(struct super_block *sb, u64 block);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#186: FILE: fs/omfs/omfs.h:123:
+extern int omfs_allocate_range(struct super_block *sb, int min_request,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#187: FILE: fs/omfs/omfs.h:124:
+extern int omfs_allocate_range(struct super_block *sb, int min_request,
+			int max_request, u64 *return_block, int *return_size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#188: FILE: fs/omfs/omfs.h:125:
+extern int omfs_clear_range(struct super_block *sb, u64 block, int count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#192: FILE: fs/omfs/omfs.h:129:
+int omfs_update_checksums(struct omfs_inode *oi, struct super_block *sb,
+		ino_t ino);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#195: FILE: fs/omfs/omfs.h:132:
+extern struct file_operations omfs_dir_operations;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#196: FILE: fs/omfs/omfs.h:133:
+extern struct inode_operations omfs_dir_inops;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#197: FILE: fs/omfs/omfs.h:134:
+extern int omfs_make_empty(struct inode *inode, struct super_block *sb);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#200: FILE: fs/omfs/omfs.h:137:
+extern struct file_operations omfs_file_operations;

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#201: FILE: fs/omfs/omfs.h:138:
+extern struct inode_operations omfs_file_inops;

WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#202: FILE: fs/omfs/omfs.h:139:
+extern struct address_space_operations omfs_aops;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#203: FILE: fs/omfs/omfs.h:140:
+extern void omfs_make_empty_table(struct buffer_head *bh, int offset);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#204: FILE: fs/omfs/omfs.h:141:
+extern int omfs_shrink_inode(struct inode *inode);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#207: FILE: fs/omfs/omfs.h:144:
+extern struct inode *omfs_iget(struct super_block *sb, ino_t inode);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#208: FILE: fs/omfs/omfs.h:145:
+extern struct inode *omfs_new_inode(struct inode *dir, int mode);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#209: FILE: fs/omfs/omfs.h:146:
+extern int omfs_reserve_block(struct super_block *sb, sector_t block);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#210: FILE: fs/omfs/omfs.h:147:
+extern int omfs_find_empty_block(struct super_block *sb, int mode, ino_t *ino);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#211: FILE: fs/omfs/omfs.h:148:
+extern int omfs_sync_inode(struct inode *inode);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000302809.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 16 checks, 150 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000302809.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
