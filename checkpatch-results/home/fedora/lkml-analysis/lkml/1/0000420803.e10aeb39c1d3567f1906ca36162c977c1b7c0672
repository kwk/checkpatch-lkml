WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#71: 
Every VMA can be in two states: either it manages a power-of-2 sized compound

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#164: FILE: fs/binfmt_flat.c:535:
+				  MAP_PRIVATE|MAP_SPLIT_PAGES, 0);
 				             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#181: FILE: fs/binfmt_flat.c:548:
+					PROT_READ|PROT_WRITE|PROT_EXEC,
 					         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#181: FILE: fs/binfmt_flat.c:548:
+					PROT_READ|PROT_WRITE|PROT_EXEC,
 					                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#182: FILE: fs/binfmt_flat.c:549:
+					MAP_PRIVATE|MAP_SPLIT_PAGES, 0);
 					           ^

CHECK:BRACES: Unbalanced braces around else statement
#335: FILE: mm/nommu.c:334:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#337: FILE: mm/nommu.c:336:
+		struct page *p = virt_to_page(vma->vm_start);
+		free_pages(vma->vm_start, (unsigned long)p[1].lru.prev);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#405: FILE: mm/nommu.c:505:
+
+

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#408: FILE: mm/nommu.c:508:
+ * either for the first part or the the tail.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#410: FILE: mm/nommu.c:510:
+static int split_nommu_vma(struct mm_struct * mm, struct vm_area_struct * vma,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#410: FILE: mm/nommu.c:510:
+static int split_nommu_vma(struct mm_struct * mm, struct vm_area_struct * vma,

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new)...) over kmalloc(sizeof(struct vm_area_struct)...)
#424: FILE: mm/nommu.c:524:
+	new = kmalloc(sizeof(struct vm_area_struct), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*vml)...) over kzalloc(sizeof(struct vm_list_struct)...)
#427: FILE: mm/nommu.c:527:
+	vml = kzalloc(sizeof(struct vm_list_struct), GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#493: FILE: mm/nommu.c:824:
+	base = (void *)__get_free_pages(GFP_KERNEL|__GFP_COMP, order);
 	                                          ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#509: FILE: mm/nommu.c:840:
+#ifdef CONFIG_NP2
+	    || len < total_len

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#580: FILE: mm/nommu.c:1110:
+static void unmap_one_vma (struct mm_struct *mm, struct vm_area_struct *vma,

WARNING:LINE_SPACING: Missing a blank line after declarations
#585: FILE: mm/nommu.c:1115:
+	size_t len = vma->vm_end - vma->vm_start;
+	vml = *parent;

WARNING:LINE_SPACING: Missing a blank line after declarations
#625: FILE: mm/nommu.c:1149:
+		int err;
+		vma = (*parent)->vma;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#681: FILE: mm/nommu.c:1189:
+	printk("munmap of non-mmaped memory by process %d (%s): %p\n",

CHECK:SPACING: No space is necessary after a cast
#682: FILE: mm/nommu.c:1190:
+	       current->pid, current->comm, (void *) addr);

CHECK:BRACES: braces {} should be used on all arms of this statement
#711: FILE: mm/nommu.c:1278:
+	if (vma->vm_flags & VM_SPLIT_PAGES)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#713: FILE: mm/nommu.c:1280:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#716: FILE: mm/nommu.c:1283:
+		int order = (int)page[1].lru.prev;
+		max_len = PAGE_SIZE << order;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000420803.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 8 warnings, 13 checks, 627 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000420803.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
