WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#59: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#64: FILE: fs/ceph/osd_client.c:1:
+#include <linux/err.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#120: FILE: fs/ceph/osd_client.c:57:
+		dout(" skipping last %llu, final file extent %llu~%llu\n",
 		^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#130: FILE: fs/ceph/osd_client.c:67:
+	dout("calc_layout %s (%d) %llu~%llu (%d pages)\n",
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'calc_layout', this function's name, in a string
#130: FILE: fs/ceph/osd_client.c:67:
+	dout("calc_layout %s (%d) %llu~%llu (%d pages)\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#134: FILE: fs/ceph/osd_client.c:71:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#140: FILE: fs/ceph/osd_client.c:77:
+	dout("osdc put_request %p %d -> %d\n", req, atomic_read(&req->r_ref),
 	^^^^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#141: FILE: fs/ceph/osd_client.c:78:
+	     atomic_read(&req->r_ref)-1);
 	                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#142: FILE: fs/ceph/osd_client.c:79:
+	BUG_ON(atomic_read(&req->r_ref) <= 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#185: FILE: fs/ceph/osd_client.c:122:
+	size_t msg_size = sizeof(*head) + num_op*sizeof(*op);
 	                                        ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!req"
#190: FILE: fs/ceph/osd_client.c:127:
+	if (req == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#200: FILE: fs/ceph/osd_client.c:137:
+	WARN_ON((flags & (CEPH_OSD_FLAG_READ|CEPH_OSD_FLAG_WRITE)) == 0);
 	                                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#252: FILE: fs/ceph/osd_client.c:189:
+		prevofs = le64_to_cpu((op-1)->offset);
 		                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#253: FILE: fs/ceph/osd_client.c:190:
+		op->truncate_size = cpu_to_le64(truncate_size - (off-prevofs));
 		                                                    ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#268: FILE: fs/ceph/osd_client.c:205:
+	BUG_ON(p > msg->front.iov_base + msg->front.iov_len);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#286: FILE: fs/ceph/osd_client.c:223:
+	dout("register_request %p tid %lld\n", req, req->r_tid);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'register_request', this function's name, in a string
#286: FILE: fs/ceph/osd_client.c:223:
+	dout("register_request %p tid %lld\n", req, req->r_tid);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#295: FILE: fs/ceph/osd_client.c:232:
+		jiffies + osdc->client->mount_args.osd_timeout*HZ;
 		                                              ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#299: FILE: fs/ceph/osd_client.c:236:
+		dout("  timeout on tid %llu at %lu\n", req->r_tid,
 		^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#302: FILE: fs/ceph/osd_client.c:239:
+		schedule_delayed_work(&osdc->timeout_work,
+		      round_jiffies_relative(req->r_timeout_stamp - jiffies));

WARNING:LINE_SPACING: Missing a blank line after declarations
#325: FILE: fs/ceph/osd_client.c:262:
+	unsigned long next_timeout = timeout + jiffies;
+	RADIX_TREE(pings, GFP_NOFS);  /* only send 1 ping per osd */

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#329: FILE: fs/ceph/osd_client.c:266:
+	dout("timeout\n");
 	^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#332: FILE: fs/ceph/osd_client.c:269:
+	ceph_monc_request_osdmap(&osdc->client->monc, osdc->osdmap->epoch+1);
 	                                                                 ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!radix_tree_lookup"
#346: FILE: fs/ceph/osd_client.c:283:
+		    radix_tree_lookup(&pings, req->r_last_osd) == NULL) {

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#351: FILE: fs/ceph/osd_client.c:288:
+			dout(" tid %llu (at least) timed out on osd%d\n",
 			^^^^

WARNING:INDENTED_LABEL: labels should not be indented
#357: FILE: fs/ceph/osd_client.c:294:
+	next:

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#380: FILE: fs/ceph/osd_client.c:317:
+	dout("__unregister_request %p tid %lld\n", req, req->r_tid);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__unregister_request', this function's name, in a string
#380: FILE: fs/ceph/osd_client.c:317:
+	dout("__unregister_request %p tid %lld\n", req, req->r_tid);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#388: FILE: fs/ceph/osd_client.c:325:
+			dout("no requests, canceling timeout\n");
 			^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#396: FILE: fs/ceph/osd_client.c:333:
+			BUG_ON(ret != 1);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#398: FILE: fs/ceph/osd_client.c:335:
+			dout("rescheduled timeout on tid %llu at %lu\n",
 			^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#401: FILE: fs/ceph/osd_client.c:338:
+			schedule_delayed_work(&osdc->timeout_work,
+			      round_jiffies_relative(req->r_timeout_stamp -

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#422: FILE: fs/ceph/osd_client.c:359:
+	unsigned pps; /* placement ps */

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'map_osds', this function's name, in a string
#438: FILE: fs/ceph/osd_client.c:375:
+		pr_err("ceph map_osds no crush rule pool %d type %d size %d\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#462: FILE: fs/ceph/osd_client.c:399:
+	dout("map_osds tid %llu pgid %llx pool %d osd%d (was osd%d)\n",
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'map_osds', this function's name, in a string
#462: FILE: fs/ceph/osd_client.c:399:
+	dout("map_osds tid %llu pgid %llx pool %d osd%d (was osd%d)\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#485: FILE: fs/ceph/osd_client.c:422:
+		dout("send_request %p no up osds in pg\n", req);
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'send_request', this function's name, in a string
#485: FILE: fs/ceph/osd_client.c:422:
+		dout("send_request %p no up osds in pg\n", req);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#487: FILE: fs/ceph/osd_client.c:424:
+					 osdc->osdmap->epoch+1);
 					                    ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#492: FILE: fs/ceph/osd_client.c:429:
+	dout("send_request %p tid %llu to osd%d flags %d\n",
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'send_request', this function's name, in a string
#492: FILE: fs/ceph/osd_client.c:429:
+	dout("send_request %p tid %llu to osd%d flags %d\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#505: FILE: fs/ceph/osd_client.c:442:
+	req->r_timeout_stamp = jiffies+osdc->client->mount_args.osd_timeout*HZ;
 	                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#505: FILE: fs/ceph/osd_client.c:442:
+	req->r_timeout_stamp = jiffies+osdc->client->mount_args.osd_timeout*HZ;
 	                                                                   ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#531: FILE: fs/ceph/osd_client.c:468:
+	dout("handle_reply %p tid %llu\n", msg, tid);
 	^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!req"
#536: FILE: fs/ceph/osd_client.c:473:
+	if (req == NULL) {

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#537: FILE: fs/ceph/osd_client.c:474:
+		dout("handle_reply tid %llu dne\n", tid);
 		^^^^

WARNING:TYPO_SPELLING: 'dne' may be misspelled - perhaps 'done'?
#537: FILE: fs/ceph/osd_client.c:474:
+		dout("handle_reply tid %llu dne\n", tid);
 		                            ^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#545: FILE: fs/ceph/osd_client.c:482:
+		dout("handle_reply tid %llu aborted\n", tid);
 		^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!req->r_reply"
#551: FILE: fs/ceph/osd_client.c:488:
+		if (req->r_reply == NULL) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#553: FILE: fs/ceph/osd_client.c:490:
+			/* no data payload, or r_reply would have been set by
+			   prepare_pages. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#553: FILE: fs/ceph/osd_client.c:490:
+			   prepare_pages. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#558: FILE: fs/ceph/osd_client.c:495:
+			BUG_ON(req->r_reply != msg);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#564: FILE: fs/ceph/osd_client.c:501:
+		dout("handle_reply tid %llu dup ack\n", tid);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#568: FILE: fs/ceph/osd_client.c:505:
+	dout("handle_reply tid %llu flags %d\n", tid, flags);
 	^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#598: FILE: fs/ceph/osd_client.c:535:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#631: FILE: fs/ceph/osd_client.c:568:
+			dout("tid %llu maps to no valid osd\n", req->r_tid);
 			^^^^

WARNING:INDENTED_LABEL: labels should not be indented
#638: FILE: fs/ceph/osd_client.c:575:
+	kick:

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#639: FILE: fs/ceph/osd_client.c:576:
+		dout("kicking tid %llu osd%d\n", req->r_tid,
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#654: FILE: fs/ceph/osd_client.c:591:
+		dout("%d requests for down osds, need new map\n", needmap);
 		^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#656: FILE: fs/ceph/osd_client.c:593:
+					 osdc->osdmap->epoch+1);
 					                    ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#676: FILE: fs/ceph/osd_client.c:613:
+	dout("handle_map have %u\n", osdc->osdmap ? osdc->osdmap->epoch : 0);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#692: FILE: fs/ceph/osd_client.c:629:
+	dout(" %d inc maps\n", nr_maps);
 	^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#694: FILE: fs/ceph/osd_client.c:631:
+		ceph_decode_need(&p, end, 2*sizeof(u32), bad);
 		                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#699: FILE: fs/ceph/osd_client.c:636:
+		if (osdc->osdmap && osdc->osdmap->epoch+1 == epoch) {
 		                                       ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#700: FILE: fs/ceph/osd_client.c:637:
+			dout("applying incremental map %u len %d\n",
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#713: FILE: fs/ceph/osd_client.c:650:
+			dout("ignoring incremental map %u len %d\n",
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#724: FILE: fs/ceph/osd_client.c:661:
+	dout(" %d full maps\n", nr_maps);
 	^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#726: FILE: fs/ceph/osd_client.c:663:
+		ceph_decode_need(&p, end, 2*sizeof(u32), bad);
 		                           ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#731: FILE: fs/ceph/osd_client.c:668:
+			dout("skipping non-latest full map %u len %d\n",
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#734: FILE: fs/ceph/osd_client.c:671:
+			dout("skipping full map %u len %d, "
 			^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#735: FILE: fs/ceph/osd_client.c:672:
+			dout("skipping full map %u len %d, "
+			     "older than our %u\n", epoch, maplen,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#738: FILE: fs/ceph/osd_client.c:675:
+			dout("taking full map %u len %d\n", epoch, maplen);
 			^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#739: FILE: fs/ceph/osd_client.c:676:
+			newmap = osdmap_decode(&p, p+maplen);
 			                            ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#765: FILE: fs/ceph/osd_client.c:702:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#782: FILE: fs/ceph/osd_client.c:719:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#799: FILE: fs/ceph/osd_client.c:736:
+	dout("prepare_pages on msg %p want %d\n", m, want);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#807: FILE: fs/ceph/osd_client.c:744:
+		dout("prepare_pages unknown tid %llu\n", tid);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#810: FILE: fs/ceph/osd_client.c:747:
+	dout("prepare_pages tid %llu has %d pages, want %d\n",
 	^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!req->r_reply"
#812: FILE: fs/ceph/osd_client.c:749:
+	if (likely(req->r_num_pages >= want && req->r_reply == NULL &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#813: FILE: fs/ceph/osd_client.c:750:
+	if (likely(req->r_num_pages >= want && req->r_reply == NULL &&
+		    !req->r_aborted)) {

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#866: FILE: fs/ceph/osd_client.c:803:
+	dout("wait_request tid %llu result %d, %d bytes\n",
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#882: FILE: fs/ceph/osd_client.c:819:
+	dout("abort_request tid %llu, revoking %p pages\n", req->r_tid,
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#927: FILE: fs/ceph/osd_client.c:864:
+		dout("sync waiting on tid %llu (last is %llu)\n",
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#934: FILE: fs/ceph/osd_client.c:871:
+	dout("sync done (thru tid %llu)\n", last_tid);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#942: FILE: fs/ceph/osd_client.c:879:
+	dout("init\n");
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#980: FILE: fs/ceph/osd_client.c:917:
+	dout("readpages on ino %llx.%llx on %llu~%llu\n", vino.ino,
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#993: FILE: fs/ceph/osd_client.c:930:
+	dout("readpages final extent is %llu~%llu (%d pages)\n",
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1012: FILE: fs/ceph/osd_client.c:949:
+			dout("readpages zeroing %d %p from %d\n", i, page,
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1020: FILE: fs/ceph/osd_client.c:957:
+			dout("readpages zeroing %d %p\n", i, page);
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1026: FILE: fs/ceph/osd_client.c:963:
+	dout("readpages result %d\n", rc);
 	^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1045: FILE: fs/ceph/osd_client.c:982:
+	BUG_ON(vino.snap != CEPH_NOSNAP);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1058: FILE: fs/ceph/osd_client.c:995:
+	dout("writepages %llu~%llu (%d pages)\n", off, len,
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1068: FILE: fs/ceph/osd_client.c:1005:
+	dout("writepages result %d\n", rc);
 	^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1078: FILE: fs/ceph/osd_client.h:1:
+#ifndef _FS_CEPH_OSD_CLIENT_H

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1112: FILE: fs/ceph/osd_client.h:35:
+^Istruct inode *r_inode;         ^I      /* for use by callbacks */$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1123: FILE: fs/ceph/osd_client.h:46:
+	unsigned          r_num_pages;        /* size of page array (follows) */

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#1136: FILE: fs/ceph/osd_client.h:59:
+	struct mutex           request_mutex;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1142: FILE: fs/ceph/osd_client.h:65:
+^Istruct dentry ^I       *debugfs_file;$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1145: FILE: fs/ceph/osd_client.h:68:
+extern void ceph_osdc_init(struct ceph_osd_client *osdc,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1147: FILE: fs/ceph/osd_client.h:70:
+extern void ceph_osdc_stop(struct ceph_osd_client *osdc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1149: FILE: fs/ceph/osd_client.h:72:
+extern void ceph_osdc_handle_reset(struct ceph_osd_client *osdc,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1152: FILE: fs/ceph/osd_client.h:75:
+extern void ceph_osdc_handle_reply(struct ceph_osd_client *osdc,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1154: FILE: fs/ceph/osd_client.h:77:
+extern void ceph_osdc_handle_map(struct ceph_osd_client *osdc,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1158: FILE: fs/ceph/osd_client.h:81:
+ * the data payload into. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1159: FILE: fs/ceph/osd_client.h:82:
+extern int ceph_osdc_prepare_pages(void *p, struct ceph_msg *m, int want);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1161: FILE: fs/ceph/osd_client.h:84:
+extern struct ceph_osd_request *ceph_osdc_new_request(struct ceph_osd_client *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ceph_osd_client *' should also have an identifier name
#1161: FILE: fs/ceph/osd_client.h:84:
+extern struct ceph_osd_request *ceph_osdc_new_request(struct ceph_osd_client *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1162: FILE: fs/ceph/osd_client.h:85:
+extern struct ceph_osd_request *ceph_osdc_new_request(struct ceph_osd_client *,
+				      struct ceph_file_layout *layout,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1174: FILE: fs/ceph/osd_client.h:97:
+}
+extern void ceph_osdc_put_request(struct ceph_osd_request *req);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1174: FILE: fs/ceph/osd_client.h:97:
+extern void ceph_osdc_put_request(struct ceph_osd_request *req);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1176: FILE: fs/ceph/osd_client.h:99:
+extern int ceph_osdc_start_request(struct ceph_osd_client *osdc,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1178: FILE: fs/ceph/osd_client.h:101:
+extern int ceph_osdc_wait_request(struct ceph_osd_client *osdc,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1180: FILE: fs/ceph/osd_client.h:103:
+extern void ceph_osdc_abort_request(struct ceph_osd_client *osdc,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1182: FILE: fs/ceph/osd_client.h:105:
+extern void ceph_osdc_sync(struct ceph_osd_client *osdc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1184: FILE: fs/ceph/osd_client.h:107:
+extern int ceph_osdc_readpages(struct ceph_osd_client *osdc,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1191: FILE: fs/ceph/osd_client.h:114:
+extern int ceph_osdc_writepages(struct ceph_osd_client *osdc,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1209: FILE: fs/ceph/osdmap.c:1:
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1218: FILE: fs/ceph/osdmap.c:10:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1246: FILE: fs/ceph/osdmap.c:38:
+static int calc_bits_of(unsigned t)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1249: FILE: fs/ceph/osdmap.c:41:
+	int b = 0;
+	while (t) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1261: FILE: fs/ceph/osdmap.c:53:
+	pi->pg_num_mask = (1 << calc_bits_of(le32_to_cpu(pi->v.pg_num)-1)) - 1;
 	                                                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1263: FILE: fs/ceph/osdmap.c:55:
+		(1 << calc_bits_of(le32_to_cpu(pi->v.pgp_num)-1)) - 1;
 		                                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1265: FILE: fs/ceph/osdmap.c:57:
+		(1 << calc_bits_of(le32_to_cpu(pi->v.lpg_num)-1)) - 1;
 		                                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1267: FILE: fs/ceph/osdmap.c:59:
+		(1 << calc_bits_of(le32_to_cpu(pi->v.lpgp_num)-1)) - 1;
 		                                              ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1276: FILE: fs/ceph/osdmap.c:68:
+	dout("crush_decode_uniform_bucket %p to %p\n", *p, end);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'crush_decode_uniform_bucket', this function's name, in a string
#1276: FILE: fs/ceph/osdmap.c:68:
+	dout("crush_decode_uniform_bucket %p to %p\n", *p, end);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1277: FILE: fs/ceph/osdmap.c:69:
+	ceph_decode_need(p, end, (1+b->h.size) * sizeof(u32), bad);
 	                           ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1288: FILE: fs/ceph/osdmap.c:80:
+	dout("crush_decode_list_bucket %p to %p\n", *p, end);
 	^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1288: FILE: fs/ceph/osdmap.c:80:
+	int j;
+	dout("crush_decode_list_bucket %p to %p\n", *p, end);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'crush_decode_list_bucket', this function's name, in a string
#1288: FILE: fs/ceph/osdmap.c:80:
+	dout("crush_decode_list_bucket %p to %p\n", *p, end);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!b->item_weights"
#1290: FILE: fs/ceph/osdmap.c:82:
+	if (b->item_weights == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!b->sum_weights"
#1293: FILE: fs/ceph/osdmap.c:85:
+	if (b->sum_weights == NULL)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1309: FILE: fs/ceph/osdmap.c:101:
+	dout("crush_decode_tree_bucket %p to %p\n", *p, end);
 	^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1309: FILE: fs/ceph/osdmap.c:101:
+	int j;
+	dout("crush_decode_tree_bucket %p to %p\n", *p, end);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'crush_decode_tree_bucket', this function's name, in a string
#1309: FILE: fs/ceph/osdmap.c:101:
+	dout("crush_decode_tree_bucket %p to %p\n", *p, end);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!b->node_weights"
#1312: FILE: fs/ceph/osdmap.c:104:
+	if (b->node_weights == NULL)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1326: FILE: fs/ceph/osdmap.c:118:
+	dout("crush_decode_straw_bucket %p to %p\n", *p, end);
 	^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1326: FILE: fs/ceph/osdmap.c:118:
+	int j;
+	dout("crush_decode_straw_bucket %p to %p\n", *p, end);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'crush_decode_straw_bucket', this function's name, in a string
#1326: FILE: fs/ceph/osdmap.c:118:
+	dout("crush_decode_straw_bucket %p to %p\n", *p, end);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!b->item_weights"
#1328: FILE: fs/ceph/osdmap.c:120:
+	if (b->item_weights == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!b->straws"
#1331: FILE: fs/ceph/osdmap.c:123:
+	if (b->straws == NULL)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1352: FILE: fs/ceph/osdmap.c:144:
+	dout("crush_decode %p to %p len %d\n", *p, end, (int)(end - *p));
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'crush_decode', this function's name, in a string
#1352: FILE: fs/ceph/osdmap.c:144:
+	dout("crush_decode %p to %p len %d\n", *p, end, (int)(end - *p));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c"
#1355: FILE: fs/ceph/osdmap.c:147:
+	if (c == NULL)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1358: FILE: fs/ceph/osdmap.c:150:
+	ceph_decode_need(p, end, 4*sizeof(u32), bad);
 	                          ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'crush_decode', this function's name, in a string
#1361: FILE: fs/ceph/osdmap.c:153:
+		pr_err("ceph crush_decode magic %x != current %x\n",

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1362: FILE: fs/ceph/osdmap.c:154:
+		       (unsigned)magic, (unsigned)CRUSH_MAGIC);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1362: FILE: fs/ceph/osdmap.c:154:
+		       (unsigned)magic, (unsigned)CRUSH_MAGIC);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c->device_parents"
#1370: FILE: fs/ceph/osdmap.c:162:
+	if (c->device_parents == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c->bucket_parents"
#1373: FILE: fs/ceph/osdmap.c:165:
+	if (c->bucket_parents == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c->buckets"
#1377: FILE: fs/ceph/osdmap.c:169:
+	if (c->buckets == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!c->rules"
#1380: FILE: fs/ceph/osdmap.c:172:
+	if (c->rules == NULL)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1394: FILE: fs/ceph/osdmap.c:186:
+		dout("crush_decode bucket %d off %x %p to %p\n",
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'crush_decode', this function's name, in a string
#1394: FILE: fs/ceph/osdmap.c:186:
+		dout("crush_decode bucket %d off %x %p to %p\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1395: FILE: fs/ceph/osdmap.c:187:
+		     i, (int)(*p-start), *p, end);
 		                ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1413: FILE: fs/ceph/osdmap.c:205:
+		BUG_ON(size == 0);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1414: FILE: fs/ceph/osdmap.c:206:
+		b = c->buckets[i] = kzalloc(size, GFP_NOFS);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!b"
#1415: FILE: fs/ceph/osdmap.c:207:
+		if (b == NULL)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1418: FILE: fs/ceph/osdmap.c:210:
+		ceph_decode_need(p, end, 4*sizeof(u32), bad);
 		                          ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1425: FILE: fs/ceph/osdmap.c:217:
+		dout("crush_decode bucket size %d off %x %p to %p\n",
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'crush_decode', this function's name, in a string
#1425: FILE: fs/ceph/osdmap.c:217:
+		dout("crush_decode bucket size %d off %x %p to %p\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1426: FILE: fs/ceph/osdmap.c:218:
+		     b->size, (int)(*p-start), *p, end);
 		                      ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!b->items"
#1429: FILE: fs/ceph/osdmap.c:221:
+		if (b->items == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!b->perm"
#1432: FILE: fs/ceph/osdmap.c:224:
+		if (b->perm == NULL)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1436: FILE: fs/ceph/osdmap.c:228:
+		ceph_decode_need(p, end, b->size*sizeof(u32), bad);
 		                                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1443: FILE: fs/ceph/osdmap.c:235:
+			err = crush_decode_uniform_bucket(p, end,
+				  (struct crush_bucket_uniform *)b);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1449: FILE: fs/ceph/osdmap.c:241:
+			err = crush_decode_list_bucket(p, end,
+			       (struct crush_bucket_list *)b);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1455: FILE: fs/ceph/osdmap.c:247:
+			err = crush_decode_tree_bucket(p, end,
+				(struct crush_bucket_tree *)b);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1461: FILE: fs/ceph/osdmap.c:253:
+			err = crush_decode_straw_bucket(p, end,
+				(struct crush_bucket_straw *)b);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1469: FILE: fs/ceph/osdmap.c:261:
+	dout("rule vec is %p\n", c->rules);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1476: FILE: fs/ceph/osdmap.c:268:
+			dout("crush_decode NO rule %d off %x %p to %p\n",
 			^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'crush_decode', this function's name, in a string
#1476: FILE: fs/ceph/osdmap.c:268:
+			dout("crush_decode NO rule %d off %x %p to %p\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1477: FILE: fs/ceph/osdmap.c:269:
+			     i, (int)(*p-start), *p, end);
 			                ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1482: FILE: fs/ceph/osdmap.c:274:
+		dout("crush_decode rule %d off %x %p to %p\n",
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'crush_decode', this function's name, in a string
#1482: FILE: fs/ceph/osdmap.c:274:
+		dout("crush_decode rule %d off %x %p to %p\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1483: FILE: fs/ceph/osdmap.c:275:
+		     i, (int)(*p-start), *p, end);
 		                ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1491: FILE: fs/ceph/osdmap.c:283:
+		r = c->rules[i] = kmalloc(sizeof(*r) +

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1492: FILE: fs/ceph/osdmap.c:284:
+					  yes*sizeof(struct crush_rule_step),
 					     ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!r"
#1494: FILE: fs/ceph/osdmap.c:286:
+		if (r == NULL)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1496: FILE: fs/ceph/osdmap.c:288:
+		dout(" rule %d is at %p\n", i, r);
 		^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1499: FILE: fs/ceph/osdmap.c:291:
+		ceph_decode_need(p, end, r->len*3*sizeof(u32), bad);
 		                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1499: FILE: fs/ceph/osdmap.c:291:
+		ceph_decode_need(p, end, r->len*3*sizeof(u32), bad);
 		                                 ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1509: FILE: fs/ceph/osdmap.c:301:
+	dout("crush_decode success\n");
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'crush_decode', this function's name, in a string
#1509: FILE: fs/ceph/osdmap.c:301:
+	dout("crush_decode success\n");

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1515: FILE: fs/ceph/osdmap.c:307:
+	dout("crush_decode fail %d\n", err);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'crush_decode', this function's name, in a string
#1515: FILE: fs/ceph/osdmap.c:307:
+	dout("crush_decode fail %d\n", err);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1520: FILE: fs/ceph/osdmap.c:312:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1526: FILE: fs/ceph/osdmap.c:318:
+	dout("osdmap_destroy %p\n", map);
 	^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!state"
#1548: FILE: fs/ceph/osdmap.c:340:
+	if (state == NULL || addr == NULL || weight == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!addr"
#1548: FILE: fs/ceph/osdmap.c:340:
+	if (state == NULL || addr == NULL || weight == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!weight"
#1548: FILE: fs/ceph/osdmap.c:340:
+	if (state == NULL || addr == NULL || weight == NULL) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1557: FILE: fs/ceph/osdmap.c:349:
+		memcpy(state, map->osd_state, map->max_osd*sizeof(*state));
 		                                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1558: FILE: fs/ceph/osdmap.c:350:
+		memcpy(addr, map->osd_addr, map->max_osd*sizeof(*addr));
 		                                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1559: FILE: fs/ceph/osdmap.c:351:
+		memcpy(weight, map->osd_weight, map->max_osd*sizeof(*weight));
 		                                            ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1583: FILE: fs/ceph/osdmap.c:375:
+	dout("osdmap_decode %p to %p len %d\n", *p, end, (int)(end - *p));
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'osdmap_decode', this function's name, in a string
#1583: FILE: fs/ceph/osdmap.c:375:
+	dout("osdmap_decode %p to %p len %d\n", *p, end, (int)(end - *p));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!map"
#1586: FILE: fs/ceph/osdmap.c:378:
+	if (map == NULL)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1591: FILE: fs/ceph/osdmap.c:383:
+	ceph_decode_need(p, end, 2*sizeof(u64)+6*sizeof(u32), bad);
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1591: FILE: fs/ceph/osdmap.c:383:
+	ceph_decode_need(p, end, 2*sizeof(u64)+6*sizeof(u32), bad);
 	                                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1591: FILE: fs/ceph/osdmap.c:383:
+	ceph_decode_need(p, end, 2*sizeof(u64)+6*sizeof(u32), bad);
 	                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1606: FILE: fs/ceph/osdmap.c:398:
+		ceph_decode_need(p, end, 4+sizeof(map->pg_pool->v), bad);
 		                          ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1626: FILE: fs/ceph/osdmap.c:418:
+	dout("osdmap_decode max_osd = %d\n", map->max_osd);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'osdmap_decode', this function's name, in a string
#1626: FILE: fs/ceph/osdmap.c:418:
+	dout("osdmap_decode max_osd = %d\n", map->max_osd);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1630: FILE: fs/ceph/osdmap.c:422:
+	ceph_decode_need(p, end, 3*sizeof(u32) +
 	                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1631: FILE: fs/ceph/osdmap.c:423:
+			 map->max_osd*(1 + sizeof(*map->osd_weight) +
 			             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1641: FILE: fs/ceph/osdmap.c:433:
+	ceph_decode_copy(p, map->osd_addr, map->max_osd*sizeof(*map->osd_addr));
 	                                               ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1645: FILE: fs/ceph/osdmap.c:437:
+	dout("osdmap_decode crush len %d from off 0x%x\n", len,
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'osdmap_decode', this function's name, in a string
#1645: FILE: fs/ceph/osdmap.c:437:
+	dout("osdmap_decode crush len %d from off 0x%x\n", len,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1659: FILE: fs/ceph/osdmap.c:451:
+	dout("osdmap_decode done %p %p\n", *p, end);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'osdmap_decode', this function's name, in a string
#1659: FILE: fs/ceph/osdmap.c:451:
+	dout("osdmap_decode done %p %p\n", *p, end);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1663: FILE: fs/ceph/osdmap.c:455:
+	dout("osdmap_decode fail\n");
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'osdmap_decode', this function's name, in a string
#1663: FILE: fs/ceph/osdmap.c:455:
+	dout("osdmap_decode fail\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1688: FILE: fs/ceph/osdmap.c:480:
+	ceph_decode_need(p, end, sizeof(fsid)+sizeof(modified)+2*sizeof(u32),
 	                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1688: FILE: fs/ceph/osdmap.c:480:
+	ceph_decode_need(p, end, sizeof(fsid)+sizeof(modified)+2*sizeof(u32),
 	                                                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1688: FILE: fs/ceph/osdmap.c:480:
+	ceph_decode_need(p, end, sizeof(fsid)+sizeof(modified)+2*sizeof(u32),
 	                                                        ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1692: FILE: fs/ceph/osdmap.c:484:
+	BUG_ON(epoch != map->epoch+1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1692: FILE: fs/ceph/osdmap.c:484:
+	BUG_ON(epoch != map->epoch+1);
 	                          ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1699: FILE: fs/ceph/osdmap.c:491:
+		dout("apply_incremental full map len %d, %p to %p\n",
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'apply_incremental', this function's name, in a string
#1699: FILE: fs/ceph/osdmap.c:491:
+		dout("apply_incremental full map len %d, %p to %p\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1701: FILE: fs/ceph/osdmap.c:493:
+		newmap = osdmap_decode(p, min(*p+len, end));
 		                                ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1708: FILE: fs/ceph/osdmap.c:500:
+		dout("apply_incremental new crush map len %d, %p to %p\n",
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'apply_incremental', this function's name, in a string
#1708: FILE: fs/ceph/osdmap.c:500:
+		dout("apply_incremental new crush map len %d, %p to %p\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1710: FILE: fs/ceph/osdmap.c:502:
+		newcrush = crush_decode(*p, min(*p+len, end));
 		                                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1719: FILE: fs/ceph/osdmap.c:511:
+	ceph_decode_need(p, end, 5*sizeof(u32), bad);
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1754: FILE: fs/ceph/osdmap.c:546:
+			map->num_pools = pool+1;
 			                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1771: FILE: fs/ceph/osdmap.c:563:
+		struct ceph_entity_addr addr;
+		ceph_decode_32_safe(p, end, osd, bad);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1774: FILE: fs/ceph/osdmap.c:566:
+		BUG_ON(osd >= map->max_osd);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1783: FILE: fs/ceph/osdmap.c:575:
+		u32 osd;
+		ceph_decode_32_safe(p, end, osd, bad);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1796: FILE: fs/ceph/osdmap.c:588:
+		u32 osd, off;
+		ceph_decode_need(p, end, sizeof(u32)*2, bad);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1796: FILE: fs/ceph/osdmap.c:588:
+		ceph_decode_need(p, end, sizeof(u32)*2, bad);
 		                                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1800: FILE: fs/ceph/osdmap.c:592:
+		pr_info("ceph osd%d weight 0x%x %s\n", osd, off,
+		     off == CEPH_OSD_IN ? "(in)" :

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1818: FILE: fs/ceph/osdmap.c:610:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1820: FILE: fs/ceph/osdmap.c:612:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1841: FILE: fs/ceph/osdmap.c:633:
+	dout("mapping %llu~%llu  osize %u fl_su %u\n", off, *plen,
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1844: FILE: fs/ceph/osdmap.c:636:
+	dout("osize %u / su %u = su_per_object %u\n", osize, su,
 	^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1847: FILE: fs/ceph/osdmap.c:639:
+	BUG_ON((su & ~PAGE_MASK) != 0);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1852: FILE: fs/ceph/osdmap.c:644:
+	dout("off %llu / su %u = bl %u\n", off, su, bl);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1859: FILE: fs/ceph/osdmap.c:651:
+	dout("objset %u * sc %u = bno %u\n", objsetno, sc, (unsigned)*bno);
 	^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1859: FILE: fs/ceph/osdmap.c:651:
+	dout("objset %u * sc %u = bno %u\n", objsetno, sc, (unsigned)*bno);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1866: FILE: fs/ceph/osdmap.c:658:
+	dout(" obj extent %llu~%llu\n", *oxoff, *oxlen);
 	^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1878: FILE: fs/ceph/osdmap.c:670:
+	unsigned num, num_mask;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1912: FILE: fs/ceph/osdmap.h:1:
+#ifndef _FS_CEPH_OSDMAP_H

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1953: FILE: fs/ceph/osdmap.h:42:
+	 * the list of osds that store+replicate them. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1967: FILE: fs/ceph/osdmap.h:56:
+extern char *ceph_osdmap_state_str(char *str, int len, int state);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1977: FILE: fs/ceph/osdmap.h:66:
+extern struct ceph_osdmap *osdmap_decode(void **p, void *end);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1978: FILE: fs/ceph/osdmap.h:67:
+extern struct ceph_osdmap *apply_incremental(void **p, void *end,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1981: FILE: fs/ceph/osdmap.h:70:
+extern void ceph_osdmap_destroy(struct ceph_osdmap *map);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1984: FILE: fs/ceph/osdmap.h:73:
+extern void ceph_calc_file_object_mapping(struct ceph_file_layout *layout,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1989: FILE: fs/ceph/osdmap.h:78:
+extern int ceph_calc_object_layout(struct ceph_object_layout *ol,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000093574.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 137 warnings, 112 checks, 1913 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000093574.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
