WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: sysdeps/unix/closedir.c:35:
+  struct union_dir_cache *temp = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: sysdeps/unix/closedir.c:53:
+  if (dirp->head != NULL)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#67: FILE: sysdeps/unix/closedir.c:53:
+  if (dirp->head != NULL)
+    {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#67: FILE: sysdeps/unix/closedir.c:53:
+  if (dirp->head != NULL)
+    {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dirp->head"
#67: FILE: sysdeps/unix/closedir.c:53:
+  if (dirp->head != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: sysdeps/unix/closedir.c:54:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: sysdeps/unix/closedir.c:55:
+      while (dirp->head->next != NULL)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#69: FILE: sysdeps/unix/closedir.c:55:
+      while (dirp->head->next != NULL)
+        {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#69: FILE: sysdeps/unix/closedir.c:55:
+      while (dirp->head->next != NULL)
+        {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dirp->head->next"
#69: FILE: sysdeps/unix/closedir.c:55:
+      while (dirp->head->next != NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#70: FILE: sysdeps/unix/closedir.c:56:
+        {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: sysdeps/unix/closedir.c:56:
+        {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#72: FILE: sysdeps/unix/closedir.c:58:
+	  free (dirp->head);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#73: FILE: sysdeps/unix/closedir.c:59:
+          dirp->head = temp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: sysdeps/unix/closedir.c:59:
+          dirp->head = temp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#74: FILE: sysdeps/unix/closedir.c:60:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: sysdeps/unix/closedir.c:60:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: sysdeps/unix/closedir.c:61:
+      free (dirp->head);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#75: FILE: sysdeps/unix/closedir.c:61:
+      free (dirp->head);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: sysdeps/unix/closedir.c:62:
+      dirp->head = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: sysdeps/unix/closedir.c:63:
+      dirp->current = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: sysdeps/unix/closedir.c:64:
+    }$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#86: FILE: sysdeps/unix/dirstream.h:16:
    Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#95: FILE: sysdeps/unix/dirstream.h:25:
+struct union_dir_cache
+{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: sysdeps/unix/dirstream.h:26:
+  char fname[NAME_MAX];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: sysdeps/unix/dirstream.h:27:
+  struct union_dir_cache *next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: sysdeps/unix/dirstream.h:28:
+  struct union_dir_cache *prev;$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dirp' may be better as '(dirp)' to avoid precedence issues
#114: FILE: sysdeps/unix/dirstream.h:44:
+#define IS_FIRST_DIRENT(dirp) (dirp->union_dir_status & DIR_FIRST_DIRENT)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dirp' may be better as '(dirp)' to avoid precedence issues
#115: FILE: sysdeps/unix/dirstream.h:45:
+#define IS_DIR_UNION_MOUNTED(dirp) (dirp->union_dir_status & DIR_UNION_MOUNTED)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dirp' may be better as '(dirp)' to avoid precedence issues
#116: FILE: sysdeps/unix/dirstream.h:46:
+#define IS_DUP_ELIM_STARTED(dirp) (dirp->union_dir_status & DIR_DUP_ELIM_START)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: sysdeps/unix/dirstream.h:66:
+    struct union_dir_cache *head;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: sysdeps/unix/dirstream.h:67:
+    struct union_dir_cache *current;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: sysdeps/unix/dirstream.h:68:
+    unsigned char union_dir_status;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: sysdeps/unix/opendir.c:205:
+  dirp->head = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: sysdeps/unix/opendir.c:206:
+  dirp->current = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: sysdeps/unix/opendir.c:207:
+  dirp->union_dir_status = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: sysdeps/unix/opendir.c:208:
+  dirp->union_dir_pos = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: sysdeps/unix/readdir.c:41:
+  int isdup;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: sysdeps/unix/readdir.c:42:
+  struct union_dir_cache *temp = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: sysdeps/unix/readdir.c:114:
+      if (IS_FIRST_DIRENT(dirp))$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#164: FILE: sysdeps/unix/readdir.c:114:
+      if (IS_FIRST_DIRENT(dirp))
+        {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#164: FILE: sysdeps/unix/readdir.c:114:
+      if (IS_FIRST_DIRENT(dirp))
+        {

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: sysdeps/unix/readdir.c:115:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: sysdeps/unix/readdir.c:115:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: sysdeps/unix/readdir.c:116:
+          if (dp->d_type == DT_WHT && !strcmp (dp->d_name, "."))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: sysdeps/unix/readdir.c:116:
+          if (dp->d_type == DT_WHT && !strcmp (dp->d_name, "."))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#166: FILE: sysdeps/unix/readdir.c:116:
+          if (dp->d_type == DT_WHT && !strcmp (dp->d_name, "."))
+            dirp->union_dir_status |= DIR_UNION_MOUNTED;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#166: FILE: sysdeps/unix/readdir.c:116:
+          if (dp->d_type == DT_WHT && !strcmp (dp->d_name, "."))

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: sysdeps/unix/readdir.c:117:
+            dirp->union_dir_status |= DIR_UNION_MOUNTED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: sysdeps/unix/readdir.c:117:
+            dirp->union_dir_status |= DIR_UNION_MOUNTED;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: sysdeps/unix/readdir.c:118:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: sysdeps/unix/readdir.c:118:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: sysdeps/unix/readdir.c:120:
+      if (IS_DIR_UNION_MOUNTED(dirp)  && !IS_FIRST_DIRENT(dirp))$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#170: FILE: sysdeps/unix/readdir.c:120:
+      if (IS_DIR_UNION_MOUNTED(dirp)  && !IS_FIRST_DIRENT(dirp))
+        {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#170: FILE: sysdeps/unix/readdir.c:120:
+      if (IS_DIR_UNION_MOUNTED(dirp)  && !IS_FIRST_DIRENT(dirp))
[...]
+             with inode number 0 at the beginning of each directory. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: sysdeps/unix/readdir.c:121:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: sysdeps/unix/readdir.c:121:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: sysdeps/unix/readdir.c:122:
+          /* Skip a file with 0 inode number, make sure that$

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: sysdeps/unix/readdir.c:123:
+             it is not a whiteout type of file. We can get a "." whiteout$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#173: FILE: sysdeps/unix/readdir.c:123:
+          /* Skip a file with 0 inode number, make sure that
+             it is not a whiteout type of file. We can get a "." whiteout

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: sysdeps/unix/readdir.c:124:
+             with inode number 0 at the beginning of each directory. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#174: FILE: sysdeps/unix/readdir.c:124:
+             with inode number 0 at the beginning of each directory. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: sysdeps/unix/readdir.c:125:
+          if (dp->d_ino == 0 && dp->d_type != DT_WHT)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: sysdeps/unix/readdir.c:125:
+          if (dp->d_ino == 0 && dp->d_type != DT_WHT)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#175: FILE: sysdeps/unix/readdir.c:125:
+          if (dp->d_ino == 0 && dp->d_type != DT_WHT)
+            continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: sysdeps/unix/readdir.c:126:
+            continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: sysdeps/unix/readdir.c:126:
+            continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: sysdeps/unix/readdir.c:128:
+          if (dp->d_type == DT_WHT && !strcmp (dp->d_name, "."))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: sysdeps/unix/readdir.c:128:
+          if (dp->d_type == DT_WHT && !strcmp (dp->d_name, "."))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 13)
#178: FILE: sysdeps/unix/readdir.c:128:
+          if (dp->d_type == DT_WHT && !strcmp (dp->d_name, "."))
+             dirp->union_dir_status |= DIR_DUP_ELIM_START;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#178: FILE: sysdeps/unix/readdir.c:128:
+          if (dp->d_type == DT_WHT && !strcmp (dp->d_name, "."))

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: sysdeps/unix/readdir.c:129:
+             dirp->union_dir_status |= DIR_DUP_ELIM_START;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: sysdeps/unix/readdir.c:129:
+             dirp->union_dir_status |= DIR_DUP_ELIM_START;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: sysdeps/unix/readdir.c:131:
+          isdup = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: sysdeps/unix/readdir.c:131:
+          isdup = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: sysdeps/unix/readdir.c:132:
+          if (IS_DUP_ELIM_STARTED(dirp))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: sysdeps/unix/readdir.c:132:
+          if (IS_DUP_ELIM_STARTED(dirp))$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#182: FILE: sysdeps/unix/readdir.c:132:
+          if (IS_DUP_ELIM_STARTED(dirp))
+            {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#182: FILE: sysdeps/unix/readdir.c:132:
+          if (IS_DUP_ELIM_STARTED(dirp))
[...]
+              /* Check if the dirent is already present in our cache */

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: sysdeps/unix/readdir.c:133:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: sysdeps/unix/readdir.c:133:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#184: FILE: sysdeps/unix/readdir.c:134:
+              /* Check if the dirent is already present in our cache */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: sysdeps/unix/readdir.c:135:
+              temp = dirp->head;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: sysdeps/unix/readdir.c:135:
+              temp = dirp->head;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: sysdeps/unix/readdir.c:136:
+              while (temp)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: sysdeps/unix/readdir.c:136:
+              while (temp)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#186: FILE: sysdeps/unix/readdir.c:136:
+              while (temp)
+                {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (14, 18)
#186: FILE: sysdeps/unix/readdir.c:136:
+              while (temp)
+                {

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: sysdeps/unix/readdir.c:137:
+                {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: sysdeps/unix/readdir.c:137:
+                {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: sysdeps/unix/readdir.c:138:
+                  if (!strcmp (temp->fname, dp->d_name))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: sysdeps/unix/readdir.c:138:
+                  if (!strcmp (temp->fname, dp->d_name))$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#188: FILE: sysdeps/unix/readdir.c:138:
+                  if (!strcmp (temp->fname, dp->d_name))
+                    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (18, 22)
#188: FILE: sysdeps/unix/readdir.c:138:
+                  if (!strcmp (temp->fname, dp->d_name))
+                    {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#188: FILE: sysdeps/unix/readdir.c:138:
+                  if (!strcmp (temp->fname, dp->d_name))

ERROR:CODE_INDENT: code indent should use tabs where possible
#189: FILE: sysdeps/unix/readdir.c:139:
+                    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: sysdeps/unix/readdir.c:139:
+                    {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#190: FILE: sysdeps/unix/readdir.c:140:
+                      isdup = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: sysdeps/unix/readdir.c:140:
+                      isdup = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: sysdeps/unix/readdir.c:141:
+                      break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: sysdeps/unix/readdir.c:141:
+                      break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: sysdeps/unix/readdir.c:142:
+                    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: sysdeps/unix/readdir.c:142:
+                    }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: sysdeps/unix/readdir.c:143:
+                  temp = temp->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: sysdeps/unix/readdir.c:143:
+                  temp = temp->next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: sysdeps/unix/readdir.c:144:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: sysdeps/unix/readdir.c:144:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: sysdeps/unix/readdir.c:145:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: sysdeps/unix/readdir.c:145:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: sysdeps/unix/readdir.c:147:
+          if (isdup)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: sysdeps/unix/readdir.c:147:
+          if (isdup)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#197: FILE: sysdeps/unix/readdir.c:147:
+          if (isdup)
+            {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#197: FILE: sysdeps/unix/readdir.c:147:
+          if (isdup)
[...]
+              /* Found a duplicate, don't include it in dirent cache */

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: sysdeps/unix/readdir.c:148:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: sysdeps/unix/readdir.c:148:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: sysdeps/unix/readdir.c:149:
+              /* Found a duplicate, don't include it in dirent cache */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: sysdeps/unix/readdir.c:150:
+              dp->d_ino = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: sysdeps/unix/readdir.c:150:
+              dp->d_ino = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: sysdeps/unix/readdir.c:151:
+              continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: sysdeps/unix/readdir.c:151:
+              continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: sysdeps/unix/readdir.c:152:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: sysdeps/unix/readdir.c:152:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: sysdeps/unix/readdir.c:154:
+          temp = (struct union_dir_cache *) malloc (sizeof (struct union_dir_cache));$

CHECK:SPACING: No space is necessary after a cast
#204: FILE: sysdeps/unix/readdir.c:154:
+          temp = (struct union_dir_cache *) malloc (sizeof (struct union_dir_cache));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: sysdeps/unix/readdir.c:154:
+          temp = (struct union_dir_cache *) malloc (sizeof (struct union_dir_cache));$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#204: FILE: sysdeps/unix/readdir.c:154:
+          temp = (struct union_dir_cache *) malloc (sizeof (struct union_dir_cache));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#204: FILE: sysdeps/unix/readdir.c:154:
+          temp = (struct union_dir_cache *) malloc (sizeof (struct union_dir_cache));

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: sysdeps/unix/readdir.c:155:
+          temp->next = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: sysdeps/unix/readdir.c:155:
+          temp->next = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: sysdeps/unix/readdir.c:156:
+          temp->prev = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: sysdeps/unix/readdir.c:156:
+          temp->prev = NULL;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#208: FILE: sysdeps/unix/readdir.c:158:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: sysdeps/unix/readdir.c:159:
+          if (!dirp->head)    /* Reading this dir first time.  */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: sysdeps/unix/readdir.c:159:
+          if (!dirp->head)    /* Reading this dir first time.  */$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#209: FILE: sysdeps/unix/readdir.c:159:
+          if (!dirp->head)    /* Reading this dir first time.  */
+            {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#209: FILE: sysdeps/unix/readdir.c:159:
+          if (!dirp->head)    /* Reading this dir first time.  */
+            {

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: sysdeps/unix/readdir.c:160:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: sysdeps/unix/readdir.c:160:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: sysdeps/unix/readdir.c:161:
+              dirp->head = temp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: sysdeps/unix/readdir.c:161:
+              dirp->head = temp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: sysdeps/unix/readdir.c:162:
+              dirp->current = temp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: sysdeps/unix/readdir.c:162:
+              dirp->current = temp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: sysdeps/unix/readdir.c:163:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: sysdeps/unix/readdir.c:163:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: sysdeps/unix/readdir.c:164:
+          else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: sysdeps/unix/readdir.c:164:
+          else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#214: FILE: sysdeps/unix/readdir.c:164:
+          else
+            {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#214: FILE: sysdeps/unix/readdir.c:164:
+          else
+            {

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: sysdeps/unix/readdir.c:165:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: sysdeps/unix/readdir.c:165:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: sysdeps/unix/readdir.c:166:
+              dirp->current->next = temp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: sysdeps/unix/readdir.c:166:
+              dirp->current->next = temp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: sysdeps/unix/readdir.c:167:
+              temp->prev = dirp->current;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: sysdeps/unix/readdir.c:167:
+              temp->prev = dirp->current;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: sysdeps/unix/readdir.c:168:
+              dirp->current = dirp->current->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: sysdeps/unix/readdir.c:168:
+              dirp->current = dirp->current->next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: sysdeps/unix/readdir.c:169:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: sysdeps/unix/readdir.c:169:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: sysdeps/unix/readdir.c:171:
+          strcpy(dirp->current->fname, dp->d_name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: sysdeps/unix/readdir.c:171:
+          strcpy(dirp->current->fname, dp->d_name);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: sysdeps/unix/readdir.c:173:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: sysdeps/unix/readdir.c:173:
+        }$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#223: FILE: sysdeps/unix/readdir.c:173:
+
+        }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: sysdeps/unix/readdir.c:177:
+    } while (dp->d_ino == 0 || dp->d_type == DT_WHT);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000288499.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 64 errors, 92 warnings, 8 checks, 162 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000288499.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
