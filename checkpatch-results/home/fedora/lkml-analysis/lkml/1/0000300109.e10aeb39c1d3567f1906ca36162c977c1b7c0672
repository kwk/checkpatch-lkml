WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#44: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#48: FILE: include/asm-x86/xen/page.h:1:
+#ifndef __XEN_PAGE_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#53: FILE: include/asm-x86/xen/page.h:6:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/pgtable.h> instead of <asm/pgtable.h>
#54: FILE: include/asm-x86/xen/page.h:7:
+#include <asm/pgtable.h>

WARNING:NEW_TYPEDEFS: do not add new typedefs
#59: FILE: include/asm-x86/xen/page.h:12:
+typedef struct xmaddr {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#64: FILE: include/asm-x86/xen/page.h:17:
+typedef struct xpaddr {

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#73: FILE: include/asm-x86/xen/page.h:26:
+#define FOREIGN_FRAME_BIT	(1UL<<31)
                          	    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#73: FILE: include/asm-x86/xen/page.h:26:
+#define FOREIGN_FRAME_BIT	(1UL<<31)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#102: FILE: include/asm-x86/xen/page.h:55:
+#if 0

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#120: FILE: include/asm-x86/xen/page.h:73:
+	unsigned offset = phys.paddr & ~PAGE_MASK;

WARNING:LINE_SPACING: Missing a blank line after declarations
#121: FILE: include/asm-x86/xen/page.h:74:
+	unsigned offset = phys.paddr & ~PAGE_MASK;
+	return XMADDR(PFN_PHYS((u64)pfn_to_mfn(PFN_DOWN(phys.paddr))) | offset);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#126: FILE: include/asm-x86/xen/page.h:79:
+	unsigned offset = machine.maddr & ~PAGE_MASK;

WARNING:LINE_SPACING: Missing a blank line after declarations
#127: FILE: include/asm-x86/xen/page.h:80:
+	unsigned offset = machine.maddr & ~PAGE_MASK;
+	return XPADDR(PFN_PHYS((u64)mfn_to_pfn(PFN_DOWN(machine.maddr))) | offset);

WARNING:LINE_SPACING: Missing a blank line after declarations
#154: FILE: include/asm-x86/xen/page.h:107:
+	unsigned long pfn = mfn_to_pfn(mfn);
+	if ((pfn < max_mapnr)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pfn < max_mapnr'
#154: FILE: include/asm-x86/xen/page.h:107:
+	if ((pfn < max_mapnr)
+	    && !xen_feature(XENFEAT_auto_translated_physmap)
+	    && (phys_to_machine_mapping[pfn] != mfn))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'phys_to_machine_mapping[pfn] != mfn'
#154: FILE: include/asm-x86/xen/page.h:107:
+	if ((pfn < max_mapnr)
+	    && !xen_feature(XENFEAT_auto_translated_physmap)
+	    && (phys_to_machine_mapping[pfn] != mfn))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#155: FILE: include/asm-x86/xen/page.h:108:
+	if ((pfn < max_mapnr)
+	    && !xen_feature(XENFEAT_auto_translated_physmap)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#156: FILE: include/asm-x86/xen/page.h:109:
+	    && !xen_feature(XENFEAT_auto_translated_physmap)
+	    && (phys_to_machine_mapping[pfn] != mfn))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#164: FILE: include/asm-x86/xen/page.h:117:
+		BUG_ON(pfn != mfn && mfn != INVALID_P2M_ENTRY);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: space prohibited before that close parenthesis ')'
#203: FILE: include/asm-x86/xen/page.h:156:
+#define __pmd_ma(x)	((pmd_t) { (x) } )

CHECK:LINE_SPACING: Please don't use multiple blank lines
#210: FILE: include/asm-x86/xen/page.h:163:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#388: FILE: include/xen/page.h:1:
+#include <asm/xen/page.h>

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000300109.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 14 warnings, 7 checks, 337 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000300109.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
