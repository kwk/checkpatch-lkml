WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#53: 
occured, except for a system reset.
^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'sitation' may be misspelled - perhaps 'situation'?
#81: 
The patch first masks all IO-Apic pins to avoid a sitation
                                                  ^^^^^^^^

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#157: 
occured, except for a system reset.
^^^^^^^

WARNING:TYPO_SPELLING: 'sitation' may be misspelled - perhaps 'situation'?
#185: 
The patch first masks all IO-Apic pins to avoid a sitation 
                                                  ^^^^^^^^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#238: FILE: arch/x86_64/kernel/crash.c:36:
+extern void remove_siblinginfo(int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#238: FILE: arch/x86_64/kernel/crash.c:36:
+extern void remove_siblinginfo(int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#239: FILE: arch/x86_64/kernel/crash.c:37:
+extern void remove_cpu_from_maps(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#240: FILE: arch/x86_64/kernel/crash.c:38:
+extern void crash_mask_IO_APIC(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#240: FILE: arch/x86_64/kernel/crash.c:38:
+extern void crash_mask_IO_APIC(int);

ERROR:CODE_INDENT: code indent should use tabs where possible
#251: FILE: arch/x86_64/kernel/crash.c:63:
+        atomic_dec(&waiting_for_crash_ipi);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: arch/x86_64/kernel/crash.c:63:
+        atomic_dec(&waiting_for_crash_ipi);$

ERROR:SPACING: space required before the open parenthesis '('
#253: FILE: arch/x86_64/kernel/crash.c:65:
+	while(atomic_read(&crash_ipi_stage2) == 0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#255: FILE: arch/x86_64/kernel/crash.c:67:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: arch/x86_64/kernel/crash.c:67:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#256: FILE: arch/x86_64/kernel/crash.c:68:
+ ^I/* Send EOI for pending IRQs */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#256: FILE: arch/x86_64/kernel/crash.c:68:
+ ^I/* Send EOI for pending IRQs */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: arch/x86_64/kernel/crash.c:68:
+ ^I/* Send EOI for pending IRQs */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#257: FILE: arch/x86_64/kernel/crash.c:69:
+ ^Ilocal_irq_enable();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#257: FILE: arch/x86_64/kernel/crash.c:69:
+ ^Ilocal_irq_enable();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: arch/x86_64/kernel/crash.c:69:
+ ^Ilocal_irq_enable();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#258: FILE: arch/x86_64/kernel/crash.c:70:
+ ^Iudelay(10000);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#258: FILE: arch/x86_64/kernel/crash.c:70:
+ ^Iudelay(10000);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: arch/x86_64/kernel/crash.c:70:
+ ^Iudelay(10000);$

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#258: FILE: arch/x86_64/kernel/crash.c:70:
+ 	udelay(10000);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:LONG_UDELAY: long udelay - prefer mdelay; see arch/arm/include/asm/delay.h
#258: FILE: arch/x86_64/kernel/crash.c:70:
+ 	udelay(10000);

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: arch/x86_64/kernel/crash.c:71:
+ ^Ilocal_irq_disable();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#259: FILE: arch/x86_64/kernel/crash.c:71:
+ ^Ilocal_irq_disable();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: arch/x86_64/kernel/crash.c:71:
+ ^Ilocal_irq_disable();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#260: FILE: arch/x86_64/kernel/crash.c:72:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: arch/x86_64/kernel/crash.c:72:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#261: FILE: arch/x86_64/kernel/crash.c:73:
+ ^Iremove_siblinginfo(cpu);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#261: FILE: arch/x86_64/kernel/crash.c:73:
+ ^Iremove_siblinginfo(cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: arch/x86_64/kernel/crash.c:73:
+ ^Iremove_siblinginfo(cpu);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#262: FILE: arch/x86_64/kernel/crash.c:74:
+ ^Icpu_clear(cpu, cpu_online_map);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#262: FILE: arch/x86_64/kernel/crash.c:74:
+ ^Icpu_clear(cpu, cpu_online_map);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: arch/x86_64/kernel/crash.c:74:
+ ^Icpu_clear(cpu, cpu_online_map);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#263: FILE: arch/x86_64/kernel/crash.c:75:
+ ^Iremove_cpu_from_maps();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#263: FILE: arch/x86_64/kernel/crash.c:75:
+ ^Iremove_cpu_from_maps();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: arch/x86_64/kernel/crash.c:75:
+ ^Iremove_cpu_from_maps();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#264: FILE: arch/x86_64/kernel/crash.c:76:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: arch/x86_64/kernel/crash.c:76:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#265: FILE: arch/x86_64/kernel/crash.c:77:
+ ^Idisable_local_APIC();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#265: FILE: arch/x86_64/kernel/crash.c:77:
+ ^Idisable_local_APIC();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: arch/x86_64/kernel/crash.c:77:
+ ^Idisable_local_APIC();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#266: FILE: arch/x86_64/kernel/crash.c:78:
+ ^Iatomic_dec(&crash_ipi_stage2);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#266: FILE: arch/x86_64/kernel/crash.c:78:
+ ^Iatomic_dec(&crash_ipi_stage2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: arch/x86_64/kernel/crash.c:78:
+ ^Iatomic_dec(&crash_ipi_stage2);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#267: FILE: arch/x86_64/kernel/crash.c:79:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: arch/x86_64/kernel/crash.c:79:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#268: FILE: arch/x86_64/kernel/crash.c:80:
+ 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#300: FILE: arch/x86_64/kernel/crash.c:128:
+^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#300: FILE: arch/x86_64/kernel/crash.c:128:
+{
+	

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#302: FILE: arch/x86_64/kernel/crash.c:130:
+	unsigned long msecs;
+	atomic_set(&crash_ipi_stage2, num_online_cpus());

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#318: FILE: arch/x86_64/kernel/crash.c:143:
 }
+static void nmi_shootdown_cpus_stage2(void)

ERROR:CODE_INDENT: code indent should use tabs where possible
#333: FILE: arch/x86_64/kernel/crash.c:165:
+ ^I/* disable timer interrupts */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#333: FILE: arch/x86_64/kernel/crash.c:165:
+ ^I/* disable timer interrupts */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: arch/x86_64/kernel/crash.c:165:
+ ^I/* disable timer interrupts */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#334: FILE: arch/x86_64/kernel/crash.c:166:
+ ^Idisable_irq_nosync(0);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#334: FILE: arch/x86_64/kernel/crash.c:166:
+ ^Idisable_irq_nosync(0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: arch/x86_64/kernel/crash.c:166:
+ ^Idisable_irq_nosync(0);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#335: FILE: arch/x86_64/kernel/crash.c:167:
+ ^Idisable_APIC_timer();^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#335: FILE: arch/x86_64/kernel/crash.c:167:
+ ^Idisable_APIC_timer();^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#335: FILE: arch/x86_64/kernel/crash.c:167:
+ ^Idisable_APIC_timer();^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: arch/x86_64/kernel/crash.c:167:
+ ^Idisable_APIC_timer();^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#336: FILE: arch/x86_64/kernel/crash.c:168:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: arch/x86_64/kernel/crash.c:168:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#339: FILE: arch/x86_64/kernel/crash.c:171:
+ ^I/* Mask all IRQs, and make sure they are delivered to this CPU */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#339: FILE: arch/x86_64/kernel/crash.c:171:
+ ^I/* Mask all IRQs, and make sure they are delivered to this CPU */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: arch/x86_64/kernel/crash.c:171:
+ ^I/* Mask all IRQs, and make sure they are delivered to this CPU */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#340: FILE: arch/x86_64/kernel/crash.c:172:
+ ^Icrash_mask_IO_APIC(crashing_cpu);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#340: FILE: arch/x86_64/kernel/crash.c:172:
+ ^Icrash_mask_IO_APIC(crashing_cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: arch/x86_64/kernel/crash.c:172:
+ ^Icrash_mask_IO_APIC(crashing_cpu);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#341: FILE: arch/x86_64/kernel/crash.c:173:
+ ^Inmi_shootdown_cpus_stage2();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#341: FILE: arch/x86_64/kernel/crash.c:173:
+ ^Inmi_shootdown_cpus_stage2();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: arch/x86_64/kernel/crash.c:173:
+ ^Inmi_shootdown_cpus_stage2();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#342: FILE: arch/x86_64/kernel/crash.c:174:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: arch/x86_64/kernel/crash.c:174:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: arch/x86_64/kernel/crash.c:178:
+ ^I/* Send EOI for pending IRQs */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#346: FILE: arch/x86_64/kernel/crash.c:178:
+ ^I/* Send EOI for pending IRQs */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: arch/x86_64/kernel/crash.c:178:
+ ^I/* Send EOI for pending IRQs */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: arch/x86_64/kernel/crash.c:179:
+ ^Ilocal_irq_enable();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#347: FILE: arch/x86_64/kernel/crash.c:179:
+ ^Ilocal_irq_enable();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: arch/x86_64/kernel/crash.c:179:
+ ^Ilocal_irq_enable();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#348: FILE: arch/x86_64/kernel/crash.c:180:
+ ^Iudelay(10000);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#348: FILE: arch/x86_64/kernel/crash.c:180:
+ ^Iudelay(10000);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: arch/x86_64/kernel/crash.c:180:
+ ^Iudelay(10000);$

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#348: FILE: arch/x86_64/kernel/crash.c:180:
+ 	udelay(10000);

WARNING:LONG_UDELAY: long udelay - prefer mdelay; see arch/arm/include/asm/delay.h
#348: FILE: arch/x86_64/kernel/crash.c:180:
+ 	udelay(10000);

ERROR:CODE_INDENT: code indent should use tabs where possible
#349: FILE: arch/x86_64/kernel/crash.c:181:
+ ^Ilocal_irq_disable();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#349: FILE: arch/x86_64/kernel/crash.c:181:
+ ^Ilocal_irq_disable();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: arch/x86_64/kernel/crash.c:181:
+ ^Ilocal_irq_disable();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#350: FILE: arch/x86_64/kernel/crash.c:182:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: arch/x86_64/kernel/crash.c:182:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#367: FILE: arch/x86_64/kernel/io_apic.c:380:
+^I * Don't bother disabling masked pins $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#370: FILE: arch/x86_64/kernel/io_apic.c:383:
+	*(((int*)&entry) + 0) = io_apic_read(apic, 0x10 + 2 * pin);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#376: FILE: arch/x86_64/kernel/io_apic.c:389:
+	*(((int*)&entry) + 1) = reg1;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#392: FILE: arch/x86_64/kernel/io_apic.c:405:
+^Iint reg1;^I$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000395592.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 34 errors, 58 warnings, 5 checks, 183 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000395592.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
