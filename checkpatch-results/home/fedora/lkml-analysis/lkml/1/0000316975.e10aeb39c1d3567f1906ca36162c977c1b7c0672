CHECK:CAMELCASE: Avoid CamelCase: <moxaLog>
#64: FILE: drivers/char/moxa.c:170:
+static struct mon_str moxaLog;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <moxaFuncTout>
#65: FILE: drivers/char/moxa.c:171:
+static unsigned int moxaFuncTout = HZ / 2;

CHECK:CAMELCASE: Avoid CamelCase: <ofsAddr>
#98: FILE: drivers/char/moxa.c:250:
+static void moxa_wait_finish(void __iomem *ofsAddr)

CHECK:CAMELCASE: Avoid CamelCase: <FuncCode>
#102: FILE: drivers/char/moxa.c:254:
+	while (readw(ofsAddr + FuncCode) != 0)

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#105: FILE: drivers/char/moxa.c:257:
+	if (readw(ofsAddr + FuncCode) != 0 && printk_ratelimit())

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#106: FILE: drivers/char/moxa.c:258:
+		printk(KERN_WARNING "moxa function expired\n");

CHECK:CAMELCASE: Avoid CamelCase: <FuncArg>
#111: FILE: drivers/char/moxa.c:263:
+	writew(arg, ofsAddr + FuncArg);

CHECK:BRACES: braces {} should be used on all arms of this statement
#127: FILE: drivers/char/moxa.c:279:
+	if (tty->index == MAX_PORTS) {
[...]
+	} else if (!ch)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#129: FILE: drivers/char/moxa.c:281:
+		if (cmd != MOXA_GETDATACOUNT && cmd != MOXA_GET_IOQUEUE &&
+				cmd != MOXA_GETMSTATUS)

CHECK:CAMELCASE: Avoid CamelCase: <MoxaPortFlushData>
#140: FILE: drivers/char/moxa.c:292:
+		MoxaPortFlushData(ch, arg);

CHECK:CAMELCASE: Avoid CamelCase: <MoxaPortRxQueue>
#153: FILE: drivers/char/moxa.c:305:
+					tmp.inq = MoxaPortRxQueue(p);

CHECK:CAMELCASE: Avoid CamelCase: <MoxaPortTxQueue>
#154: FILE: drivers/char/moxa.c:306:
+					tmp.outq = MoxaPortTxQueue(p);

CHECK:CAMELCASE: Avoid CamelCase: <MoxaPortLineStatus>
#180: FILE: drivers/char/moxa.c:332:
+				status = MoxaPortLineStatus(p);

CHECK:CAMELCASE: Avoid CamelCase: <tableAddr>
#211: FILE: drivers/char/moxa.c:363:
+	moxafunc(port->tableAddr, state ? FC_SendBreak : FC_StopBreak,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#212: FILE: drivers/char/moxa.c:364:
+	moxafunc(port->tableAddr, state ? FC_SendBreak : FC_StopBreak,
+			Magic_code);

CHECK:CAMELCASE: Avoid CamelCase: <Magic_code>
#212: FILE: drivers/char/moxa.c:364:
+			Magic_code);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#550: FILE: drivers/char/moxa.h:5:
+#define MOXA_GET_IQUEUE ^I(MOXA + 1)^I/* get input buffered count */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#551: FILE: drivers/char/moxa.h:6:
+#define MOXA_GET_OQUEUE ^I(MOXA + 2)^I/* get output buffered count */$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000316975.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 14 checks, 491 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000316975.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
