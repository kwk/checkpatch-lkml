WARNING:TYPO_SPELLING: 'releated' may be misspelled - perhaps 'related'?
#15: 
Subject: [PATCH 4/4] usb: allocated usb releated dma buffer with kmalloc_node
                                        ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'releated' may be misspelled - perhaps 'related'?
#33: 
[PATCH 4/4] usb: allocated usb releated dma buffer with kmalloc_node
                               ^^^^^^^^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc_node(sizeof(*dr)...) over kmalloc_node(sizeof(struct usb_ctrlrequest)...)
#84: FILE: drivers/usb/core/devio.c:942:
+		dr = kmalloc_node(sizeof(struct usb_ctrlrequest), GFP_KERNEL,

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#107: FILE: drivers/usb/core/devio.c:1041:
+	as->urb->transfer_buffer = kmalloc_node(uurb->buffer_length,
+				     GFP_KERNEL, dev_to_node(&ps->dev->dev));

WARNING:SIZEOF_PARENTHESIS: sizeof *clear should be sizeof(*clear)
#121: FILE: drivers/usb/core/hub.c:452:
+	clear = kmalloc_node(sizeof *clear, GFP_ATOMIC,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!clear"
#123: FILE: drivers/usb/core/hub.c:454:
+	if (clear == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SIZEOF_PARENTHESIS: sizeof *qual should be sizeof(*qual)
#162: FILE: drivers/usb/core/hub.c:2351:
+	qual = kmalloc_node(sizeof *qual, GFP_KERNEL, dev_to_node(&udev->dev));

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc_node(sizeof(*dr)...) over kmalloc_node(sizeof(struct usb_ctrlrequest)...)
#188: FILE: drivers/usb/core/message.c:126:
+	dr = kmalloc_node(sizeof(struct usb_ctrlrequest), GFP_NOIO,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "buf"
#213: FILE: drivers/usb/core/message.c:835:
+		if (buf != NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: drivers/usb/core/message.c:839:
+				smallbuf = kmalloc_node(++len, GFP_KERNEL,
+						 dev_to_node(&udev->dev));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!smallbuf"
#218: FILE: drivers/usb/core/message.c:840:
+				if (smallbuf == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#266: FILE: drivers/usb/storage/usb.c:474:
+	us->sensebuf = kmalloc_node(US_SENSE_SIZE, GFP_KERNEL,
+				dev_to_node(&us->pusb_dev->dev));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buf"
#295: FILE: drivers/hid/usbhid/hiddev.c:481:
+			if (buf == NULL)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000410747.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 9 checks, 209 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000410747.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
