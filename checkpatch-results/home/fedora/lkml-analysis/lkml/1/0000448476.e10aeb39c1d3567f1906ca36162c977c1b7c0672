WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
> On Wed, Apr 04, 2007 at 05:43:49PM +0530, Ananth N Mavinakayanahalli wrote:

WARNING:TYPO_SPELLING: 'registerd' may be misspelled - perhaps 'registered'?
#59: 
> the kretprobe_trampoline ( which is registerd in arch_init_kprobe() function)
                                      ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#132: FILE: kernel/kprobes.c:49:
+#include <asm/uaccess.h>

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#152: FILE: kernel/kprobes.c:572:
+		if (atomic_add_return(1, &kprobe_count) == \

CHECK:BRACES: Unbalanced braces around else statement
#159: FILE: kernel/kprobes.c:577:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#160: FILE: kernel/kprobes.c:578:
+		printk("Kprobes are globally disabled. This kprobe [@ %p] "

WARNING:SPLIT_STRING: quoted string split across lines
#161: FILE: kernel/kprobes.c:579:
+		printk("Kprobes are globally disabled. This kprobe [@ %p] "
+			"will be enabled with all other probes\n", p->addr);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#196: FILE: kernel/kprobes.c:825:
+		const char *sym, int offset,char *modname)
 		                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:RETURN_VOID: void function return statements are not generally useful
#235: FILE: kernel/kprobes.c:935:
+	return;
+}

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#261: FILE: kernel/kprobes.c:961:
+	synchronize_sched();

Usage of a deprecated RCU API is detected.  It is recommended to replace
old flavourful RCU APIs by their new vanilla-RCU counterparts.

The full list of available RCU APIs can be viewed from the kernel docs.

See: https://www.kernel.org/doc/html/latest/RCU/whatisRCU.html#full-list-of-rcu-apis

WARNING:RETURN_VOID: void function return statements are not generally useful
#270: FILE: kernel/kprobes.c:970:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#278: FILE: kernel/kprobes.c:978:
+static ssize_t read_enabled_file_bool(struct file *file,
+	       char __user *user_buf, size_t count, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#292: FILE: kernel/kprobes.c:992:
+static ssize_t write_enabled_file_bool(struct file *file,
+	       const char __user *user_buf, size_t count, loff_t *ppos)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#297: FILE: kernel/kprobes.c:997:
+	buf_size = min(count, (sizeof(buf)-1));
 	                                  ^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#317: FILE: kernel/kprobes.c:1017:
+static struct file_operations fops_kp = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#334: FILE: kernel/kprobes.c:1039:
+	file = debugfs_create_file("enabled", 0600, dir,
+					&value, &fops_kp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#472: FILE: include/linux/kprobes.h:128:
+extern int arch_trampoline_kprobe(struct kprobe *p);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#478: FILE: include/linux/kprobes.h:134:
 }
+static inline int arch_trampoline_kprobe(struct kprobe *p)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000448476.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 10 warnings, 7 checks, 317 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000448476.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
