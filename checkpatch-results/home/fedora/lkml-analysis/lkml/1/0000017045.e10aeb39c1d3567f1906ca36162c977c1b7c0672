WARNING:INLINE: plain inline is preferred over __inline__
#131: FILE: arch/ia64/include/asm/bitops.h:440:
+static __inline__ unsigned long __arch_hweight64(unsigned long x)

CHECK:SPACING: No space is necessary after a cast
#141: FILE: arch/ia64/include/asm/bitops.h:447:
+#define __arch_hweight32(x) ((unsigned int) __arch_hweight64((x) & 0xfffffffful))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#142: FILE: arch/ia64/include/asm/bitops.h:448:
+#define __arch_hweight16(x) ((unsigned int) __arch_hweight64((x) & 0xfffful))

CHECK:SPACING: No space is necessary after a cast
#143: FILE: arch/ia64/include/asm/bitops.h:449:
+#define __arch_hweight8(x)  ((unsigned int) __arch_hweight64((x) & 0xfful))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#206: FILE: include/asm-generic/bitops/arch_hweight.h:1:
+#ifndef _ASM_GENERIC_BITOPS_ARCH_HWEIGHT_H_

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#211: FILE: include/asm-generic/bitops/arch_hweight.h:6:
+extern unsigned int __arch_hweight32(unsigned int w);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#212: FILE: include/asm-generic/bitops/arch_hweight.h:7:
+extern unsigned int __arch_hweight16(unsigned int w);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#213: FILE: include/asm-generic/bitops/arch_hweight.h:8:
+extern unsigned int __arch_hweight8(unsigned int w);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#214: FILE: include/asm-generic/bitops/arch_hweight.h:9:
+extern unsigned long __arch_hweight64(__u64 w);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#222: FILE: include/asm-generic/bitops/const_hweight.h:1:
+#ifndef _ASM_GENERIC_BITOPS_CONST_HWEIGHT_H_

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'w' - possible side-effects?
#228: FILE: include/asm-generic/bitops/const_hweight.h:7:
+#define __const_hweight8(w)		\
+      (	(!!((w) & (1ULL << 0))) +	\
+	(!!((w) & (1ULL << 1))) +	\
+	(!!((w) & (1ULL << 2))) +	\
+	(!!((w) & (1ULL << 3))) +	\
+	(!!((w) & (1ULL << 4))) +	\
+	(!!((w) & (1ULL << 5))) +	\
+	(!!((w) & (1ULL << 6))) +	\
+	(!!((w) & (1ULL << 7)))	)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: include/asm-generic/bitops/const_hweight.h:8:
+      (^I(!!((w) & (1ULL << 0))) +^I\$

ERROR:SPACING: space prohibited after that open parenthesis '('
#229: FILE: include/asm-generic/bitops/const_hweight.h:8:
+      (	(!!((w) & (1ULL << 0))) +	\

ERROR:SPACING: space prohibited before that close parenthesis ')'
#236: FILE: include/asm-generic/bitops/const_hweight.h:15:
+	(!!((w) & (1ULL << 7)))	)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#238: FILE: include/asm-generic/bitops/const_hweight.h:17:
+#define __const_hweight16(w) (__const_hweight8(w)  + __const_hweight8((w)  >> 8 ))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'w' - possible side-effects?
#238: FILE: include/asm-generic/bitops/const_hweight.h:17:
+#define __const_hweight16(w) (__const_hweight8(w)  + __const_hweight8((w)  >> 8 ))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'w' - possible side-effects?
#239: FILE: include/asm-generic/bitops/const_hweight.h:18:
+#define __const_hweight32(w) (__const_hweight16(w) + __const_hweight16((w) >> 16))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'w' - possible side-effects?
#240: FILE: include/asm-generic/bitops/const_hweight.h:19:
+#define __const_hweight64(w) (__const_hweight32(w) + __const_hweight32((w) >> 32))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'w' - possible side-effects?
#245: FILE: include/asm-generic/bitops/const_hweight.h:24:
+#define hweight8(w)  (__builtin_constant_p(w) ? __const_hweight8(w)  : __arch_hweight8(w))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'w' - possible side-effects?
#246: FILE: include/asm-generic/bitops/const_hweight.h:25:
+#define hweight16(w) (__builtin_constant_p(w) ? __const_hweight16(w) : __arch_hweight16(w))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'w' - possible side-effects?
#247: FILE: include/asm-generic/bitops/const_hweight.h:26:
+#define hweight32(w) (__builtin_constant_p(w) ? __const_hweight32(w) : __arch_hweight32(w))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'w' - possible side-effects?
#248: FILE: include/asm-generic/bitops/const_hweight.h:27:
+#define hweight64(w) (__builtin_constant_p(w) ? __const_hweight64(w) : __arch_hweight64(w))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000017045.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 4 warnings, 15 checks, 252 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000017045.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
