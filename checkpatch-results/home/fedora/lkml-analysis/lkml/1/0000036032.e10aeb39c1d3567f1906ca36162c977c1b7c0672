WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 40)
#67: FILE: drivers/char/nozomi.c:688:
+			if (kfifo_alloc(&dc->port[i].fifo_ul,
[...]
+					BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#68: FILE: drivers/char/nozomi.c:689:
+			if (kfifo_alloc(&dc->port[i].fifo_ul,
+				FIFO_BUFFER_SIZE_UL, GFP_ATOMIC))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#69: FILE: drivers/char/nozomi.c:690:
+					BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#81: FILE: drivers/char/sonypi.c:831:
+		if (kfifo_in_locked(&sonypi_device.input_fifo,
[...]
+				BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#82: FILE: drivers/char/sonypi.c:832:
+		if (kfifo_in_locked(&sonypi_device.input_fifo,
 			(unsigned char *)&kp, sizeof(kp),

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#85: FILE: drivers/char/sonypi.c:834:
+				BUG();

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#95: FILE: drivers/char/sonypi.c:886:
+	if (kfifo_in_locked(&sonypi_device.fifo, (unsigned char *)&event,
[...]
+			BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#96: FILE: drivers/char/sonypi.c:887:
+	if (kfifo_in_locked(&sonypi_device.fifo, (unsigned char *)&event,
+		sizeof(event), &sonypi_device.fifo_lock) != sizeof(event))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#97: FILE: drivers/char/sonypi.c:888:
+			BUG();

CHECK:SPACING: No space is necessary after a cast
#109: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:62:
+		if (kfifo_in(fifo, (unsigned char *) &entry,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#109: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:62:
+		if (kfifo_in(fifo, (unsigned char *) &entry,
[...]
+				BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#110: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:63:
+		if (kfifo_in(fifo, (unsigned char *) &entry,
+			sizeof(u32)) != sizeof(u32))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#111: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:64:
+				BUG();

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 40)
#120: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:76:
+			if (kfifo_in(fifo,
[...]
+					BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#121: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:77:
+			if (kfifo_in(fifo,
 				(unsigned char *) &rarray[idx],

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#124: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:79:
+					BUG();

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 40)
#130: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:84:
+			if (kfifo_in(fifo,
[...]
+					BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#131: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:85:
+			if (kfifo_in(fifo,
 				(unsigned char *) &rarray[i],

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#134: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:87:
+					BUG();

CHECK:SPACING: No space is necessary after a cast
#138: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:90:
+			if (kfifo_in(fifo, (unsigned char *) &i,

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 40)
#138: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:90:
+			if (kfifo_in(fifo, (unsigned char *) &i,
[...]
+					BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#139: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:91:
+			if (kfifo_in(fifo, (unsigned char *) &i,
+				sizeof(u32)) != sizeof(u32))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#140: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:92:
+					BUG();

CHECK:SPACING: No space is necessary after a cast
#145: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:95:
+		if (kfifo_out_locked(fifo, (unsigned char *) &entry,

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 40)
#145: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:95:
+		if (kfifo_out_locked(fifo, (unsigned char *) &entry,
[...]
+					BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#146: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:96:
+		if (kfifo_out_locked(fifo, (unsigned char *) &entry,
+				sizeof(u32), fifo_lock) != sizeof(u32))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#147: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:97:
+					BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#158: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:130:
+			if (kfifo_in(&rdev_p->rscp->qpid_fifo,
+			    (unsigned char *) &i, sizeof(u32)) != sizeof(u32))

CHECK:SPACING: No space is necessary after a cast
#158: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:130:
+			    (unsigned char *) &i, sizeof(u32)) != sizeof(u32))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#159: FILE: drivers/infiniband/hw/cxgb3/cxio_resource.c:131:
+				BUG();

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#172: FILE: drivers/media/video/meye.c:814:
+		if (kfifo_in_locked(&meye.doneq, (unsigned char *)&reqnr,
[...]
+				BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#173: FILE: drivers/media/video/meye.c:815:
+		if (kfifo_in_locked(&meye.doneq, (unsigned char *)&reqnr,
+			sizeof(int), &meye.doneq_lock) != sizeof(int))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#174: FILE: drivers/media/video/meye.c:816:
+				BUG();

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#184: FILE: drivers/media/video/meye.c:836:
+		if (kfifo_in_locked(&meye.doneq, (unsigned char *)&reqnr,
[...]
+				BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: drivers/media/video/meye.c:837:
+		if (kfifo_in_locked(&meye.doneq, (unsigned char *)&reqnr,
+			sizeof(int), &meye.doneq_lock) != sizeof(int))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#186: FILE: drivers/media/video/meye.c:838:
+				BUG();

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#196: FILE: drivers/media/video/meye.c:940:
+	if (kfifo_in_locked(&meye.grabq, (unsigned char *)nb, sizeof(int),
[...]
+			BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: drivers/media/video/meye.c:941:
+	if (kfifo_in_locked(&meye.grabq, (unsigned char *)nb, sizeof(int),
+		 &meye.grabq_lock) != sizeof(int))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#198: FILE: drivers/media/video/meye.c:942:
+			BUG();

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#208: FILE: drivers/media/video/meye.c:974:
+		if (kfifo_out_locked(&meye.doneq, (unsigned char *)&unused,
[...]
+				BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#209: FILE: drivers/media/video/meye.c:975:
+		if (kfifo_out_locked(&meye.doneq, (unsigned char *)&unused,
+			sizeof(int), &meye.doneq_lock) != sizeof(int))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#210: FILE: drivers/media/video/meye.c:976:
+				BUG();

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#220: FILE: drivers/media/video/meye.c:1463:
+	if (kfifo_in_locked(&meye.grabq, (unsigned char *)&buf->index,
[...]
+			BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#221: FILE: drivers/media/video/meye.c:1464:
+	if (kfifo_in_locked(&meye.grabq, (unsigned char *)&buf->index,
+		sizeof(int), &meye.grabq_lock) != sizeof(int))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#222: FILE: drivers/media/video/meye.c:1465:
+			BUG();

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 40)
#235: FILE: drivers/net/wireless/libertas/main.c:517:
+			if (kfifo_out(&priv->event_fifo, (unsigned char *)
[...]
+					BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#237: FILE: drivers/net/wireless/libertas/main.c:519:
+					BUG();

CHECK:SPACING: No space is necessary after a cast
#246: FILE: drivers/net/wireless/libertas/main.c:1180:
+	if (kfifo_in(&priv->event_fifo, (unsigned char *) &event,

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#246: FILE: drivers/net/wireless/libertas/main.c:1180:
+	if (kfifo_in(&priv->event_fifo, (unsigned char *) &event,
[...]
+			BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#247: FILE: drivers/net/wireless/libertas/main.c:1181:
+	if (kfifo_in(&priv->event_fifo, (unsigned char *) &event,
+		sizeof(u32)) != sizeof(u32))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#248: FILE: drivers/net/wireless/libertas/main.c:1182:
+			BUG();

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#260: FILE: drivers/platform/x86/sony-laptop.c:366:
+		if (kfifo_in_locked(&sony_laptop_input.fifo,
[...]
+				BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#261: FILE: drivers/platform/x86/sony-laptop.c:367:
+		if (kfifo_in_locked(&sony_laptop_input.fifo,
 			  (unsigned char *)&kp, sizeof(kp),

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#264: FILE: drivers/platform/x86/sony-laptop.c:369:
+				BUG();

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#274: FILE: drivers/platform/x86/sony-laptop.c:2314:
+	if (kfifo_in_locked(&sonypi_compat.fifo, (unsigned char *)&event,
[...]
+			BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: drivers/platform/x86/sony-laptop.c:2315:
+	if (kfifo_in_locked(&sonypi_compat.fifo, (unsigned char *)&event,
+		sizeof(event), &sonypi_compat.fifo_lock) != sizeof(event))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#276: FILE: drivers/platform/x86/sony-laptop.c:2316:
+			BUG();

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#288: FILE: drivers/scsi/libiscsi.c:520:
+	if (kfifo_in(&session->cmdpool.queue, (void*)&task,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#289: FILE: drivers/scsi/libiscsi.c:521:
+	if (kfifo_in(&session->cmdpool.queue, (void*)&task,
+	     sizeof(void*)) != sizeof(void*))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#289: FILE: drivers/scsi/libiscsi.c:521:
+	     sizeof(void*)) != sizeof(void*))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#289: FILE: drivers/scsi/libiscsi.c:521:
+	     sizeof(void*)) != sizeof(void*))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#290: FILE: drivers/scsi/libiscsi.c:522:
+		BUG();

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#299: FILE: drivers/scsi/libiscsi.c:2474:
+		if (kfifo_in(&q->queue, (void*)&q->pool[i],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#300: FILE: drivers/scsi/libiscsi.c:2475:
+		if (kfifo_in(&q->queue, (void*)&q->pool[i],
+		     sizeof(void*)) != sizeof(void*))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#300: FILE: drivers/scsi/libiscsi.c:2475:
+		     sizeof(void*)) != sizeof(void*))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#300: FILE: drivers/scsi/libiscsi.c:2475:
+		     sizeof(void*)) != sizeof(void*))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#301: FILE: drivers/scsi/libiscsi.c:2476:
+			BUG();

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#311: FILE: drivers/scsi/libiscsi.c:2846:
+	if (kfifo_in(&session->cmdpool.queue, (void*)&conn->login_task,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#312: FILE: drivers/scsi/libiscsi.c:2847:
+	if (kfifo_in(&session->cmdpool.queue, (void*)&conn->login_task,
+	     sizeof(void*)) != sizeof(void*))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#312: FILE: drivers/scsi/libiscsi.c:2847:
+	     sizeof(void*)) != sizeof(void*))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#312: FILE: drivers/scsi/libiscsi.c:2847:
+	     sizeof(void*)) != sizeof(void*))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#313: FILE: drivers/scsi/libiscsi.c:2848:
+		BUG();

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#323: FILE: drivers/scsi/libiscsi.c:2910:
+	if (kfifo_in(&session->cmdpool.queue, (void*)&conn->login_task,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#324: FILE: drivers/scsi/libiscsi.c:2911:
+	if (kfifo_in(&session->cmdpool.queue, (void*)&conn->login_task,
+	     sizeof(void*)) != sizeof(void*))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#324: FILE: drivers/scsi/libiscsi.c:2911:
+	     sizeof(void*)) != sizeof(void*))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#324: FILE: drivers/scsi/libiscsi.c:2911:
+	     sizeof(void*)) != sizeof(void*))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#325: FILE: drivers/scsi/libiscsi.c:2912:
+		BUG();

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#338: FILE: drivers/scsi/libiscsi_tcp.c:449:
+		if (kfifo_in(&tcp_task->r2tpool.queue, (void*)&r2t,
[...]
+				BUG();

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#338: FILE: drivers/scsi/libiscsi_tcp.c:449:
+		if (kfifo_in(&tcp_task->r2tpool.queue, (void*)&r2t,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#339: FILE: drivers/scsi/libiscsi_tcp.c:450:
+		if (kfifo_in(&tcp_task->r2tpool.queue, (void*)&r2t,
+			    sizeof(void*)) != sizeof(void*))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#339: FILE: drivers/scsi/libiscsi_tcp.c:450:
+			    sizeof(void*)) != sizeof(void*))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#339: FILE: drivers/scsi/libiscsi_tcp.c:450:
+			    sizeof(void*)) != sizeof(void*))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#340: FILE: drivers/scsi/libiscsi_tcp.c:451:
+				BUG();

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#348: FILE: drivers/scsi/libiscsi_tcp.c:457:
+		if (kfifo_in(&tcp_task->r2tpool.queue, (void*)&r2t,
[...]
+				BUG();

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#348: FILE: drivers/scsi/libiscsi_tcp.c:457:
+		if (kfifo_in(&tcp_task->r2tpool.queue, (void*)&r2t,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#349: FILE: drivers/scsi/libiscsi_tcp.c:458:
+		if (kfifo_in(&tcp_task->r2tpool.queue, (void*)&r2t,
+			    sizeof(void*)) != sizeof(void*))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#349: FILE: drivers/scsi/libiscsi_tcp.c:458:
+			    sizeof(void*)) != sizeof(void*))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#349: FILE: drivers/scsi/libiscsi_tcp.c:458:
+			    sizeof(void*)) != sizeof(void*))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#350: FILE: drivers/scsi/libiscsi_tcp.c:459:
+				BUG();

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#360: FILE: drivers/scsi/libiscsi_tcp.c:559:
+		if (kfifo_in(&tcp_task->r2tpool.queue, (void*)&r2t,
[...]
+				BUG();

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#360: FILE: drivers/scsi/libiscsi_tcp.c:559:
+		if (kfifo_in(&tcp_task->r2tpool.queue, (void*)&r2t,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#361: FILE: drivers/scsi/libiscsi_tcp.c:560:
+		if (kfifo_in(&tcp_task->r2tpool.queue, (void*)&r2t,
+			    sizeof(void*)) != sizeof(void*))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#361: FILE: drivers/scsi/libiscsi_tcp.c:560:
+			    sizeof(void*)) != sizeof(void*))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#361: FILE: drivers/scsi/libiscsi_tcp.c:560:
+			    sizeof(void*)) != sizeof(void*))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#362: FILE: drivers/scsi/libiscsi_tcp.c:561:
+				BUG();

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#372: FILE: drivers/scsi/libiscsi_tcp.c:576:
+		if (kfifo_in(&tcp_task->r2tpool.queue, (void*)&r2t,
[...]
+				BUG();

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#372: FILE: drivers/scsi/libiscsi_tcp.c:576:
+		if (kfifo_in(&tcp_task->r2tpool.queue, (void*)&r2t,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#373: FILE: drivers/scsi/libiscsi_tcp.c:577:
+		if (kfifo_in(&tcp_task->r2tpool.queue, (void*)&r2t,
+			    sizeof(void*)) != sizeof(void*))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#373: FILE: drivers/scsi/libiscsi_tcp.c:577:
+			    sizeof(void*)) != sizeof(void*))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#373: FILE: drivers/scsi/libiscsi_tcp.c:577:
+			    sizeof(void*)) != sizeof(void*))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#374: FILE: drivers/scsi/libiscsi_tcp.c:578:
+				BUG();

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#383: FILE: drivers/scsi/libiscsi_tcp.c:587:
+	if (kfifo_in(&tcp_task->r2tqueue, (void*)&r2t, sizeof(void*)) !=

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#383: FILE: drivers/scsi/libiscsi_tcp.c:587:
+	if (kfifo_in(&tcp_task->r2tqueue, (void*)&r2t, sizeof(void*)) !=

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#384: FILE: drivers/scsi/libiscsi_tcp.c:588:
+	     sizeof(void*))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#385: FILE: drivers/scsi/libiscsi_tcp.c:589:
+		BUG();

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 48)
#394: FILE: drivers/scsi/libiscsi_tcp.c:991:
+				if (kfifo_in(&tcp_task->r2tpool.queue,
[...]
+						BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#395: FILE: drivers/scsi/libiscsi_tcp.c:992:
+				if (kfifo_in(&tcp_task->r2tpool.queue,
 					    (void *)&tcp_task->r2t,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#397: FILE: drivers/scsi/libiscsi_tcp.c:993:
+					    sizeof(void *)) != sizeof(void*))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#398: FILE: drivers/scsi/libiscsi_tcp.c:994:
+						BUG();

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 40)
#406: FILE: drivers/scsi/libiscsi_tcp.c:1000:
+			if (kfifo_out(&tcp_task->r2tqueue,
[...]
+					BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#407: FILE: drivers/scsi/libiscsi_tcp.c:1001:
+			if (kfifo_out(&tcp_task->r2tqueue,
+				    (void *)&tcp_task->r2t,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#408: FILE: drivers/scsi/libiscsi_tcp.c:1002:
+				    sizeof(void *)) != sizeof(void*))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#409: FILE: drivers/scsi/libiscsi_tcp.c:1003:
+					BUG();

CHECK:SPACING: No space is necessary after a cast
#421: FILE: drivers/scsi/libsrp.c:64:
+		if (kfifo_in(&q->queue, (void *) &iue,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#422: FILE: drivers/scsi/libsrp.c:65:
+		if (kfifo_in(&q->queue, (void *) &iue,
+		     sizeof(void *)) != sizeof(void*))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#422: FILE: drivers/scsi/libsrp.c:65:
+		     sizeof(void *)) != sizeof(void*))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#423: FILE: drivers/scsi/libsrp.c:66:
+			BUG();

CHECK:SPACING: No space is necessary after a cast
#433: FILE: drivers/scsi/libsrp.c:168:
+	if (kfifo_out_locked(&target->iu_queue.queue, (void *) &iue,

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#433: FILE: drivers/scsi/libsrp.c:168:
+	if (kfifo_out_locked(&target->iu_queue.queue, (void *) &iue,
[...]
+			BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#434: FILE: drivers/scsi/libsrp.c:169:
+	if (kfifo_out_locked(&target->iu_queue.queue, (void *) &iue,
+		sizeof(void *), &target->iu_queue.lock) != sizeof(void*))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#434: FILE: drivers/scsi/libsrp.c:169:
+		sizeof(void *), &target->iu_queue.lock) != sizeof(void*))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#435: FILE: drivers/scsi/libsrp.c:170:
+			BUG();

CHECK:SPACING: No space is necessary after a cast
#445: FILE: drivers/scsi/libsrp.c:182:
+	if (kfifo_in_locked(&iue->target->iu_queue.queue, (void *) &iue,

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#445: FILE: drivers/scsi/libsrp.c:182:
+	if (kfifo_in_locked(&iue->target->iu_queue.queue, (void *) &iue,
[...]
+			BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#446: FILE: drivers/scsi/libsrp.c:183:
+	if (kfifo_in_locked(&iue->target->iu_queue.queue, (void *) &iue,
+		sizeof(void *), &iue->target->iu_queue.lock) != sizeof(void*))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#446: FILE: drivers/scsi/libsrp.c:183:
+		sizeof(void *), &iue->target->iu_queue.lock) != sizeof(void*))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#447: FILE: drivers/scsi/libsrp.c:184:
+			BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#460: FILE: net/dccp/probe.c:71:
+		BUG();

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000036032.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 32 errors, 58 warnings, 38 checks, 348 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000036032.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
