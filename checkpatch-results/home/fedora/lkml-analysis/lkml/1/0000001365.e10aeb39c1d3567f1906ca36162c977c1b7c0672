WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
Gitweb:     http://git.kernel.org/tip/a072738e04f0eb26370e39ec679e9a0d65e49aea

WARNING:TYPO_SPELLING: 'perfomance' may be misspelled - perhaps 'performance'?
#44: 
perfomance monitoring" specification that current CPUs use.
^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'perfomance' may be misspelled - perhaps 'performance'?
#46: 
perfomance monitoring events.
^^^^^^^^^^

WARNING:TYPO_SPELLING: 'swicth' may be misspelled - perhaps 'switch'?
#94: 
 - Need to swicth to use event_constraints
           ^^^^^^

WARNING:TYPO_SPELLING: 'doesnt' may be misspelled - perhaps 'doesn't'?
#108: 
 instruction		doesnt work (needs dependent event [mop tagging])
            		^^^^^^

WARNING:TYPO_SPELLING: 'doesnt' may be misspelled - perhaps 'doesn't'?
#109: 
 branches		doesnt work
         		^^^^^^

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#144: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#149: FILE: arch/x86/include/asm/perf_event_p4.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'Perfomance' may be misspelled - perhaps 'Performance'?
#150: FILE: arch/x86/include/asm/perf_event_p4.h:2:
+ * Netburst Perfomance Events (P4, old Xeon)
             ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'perfomance' may be misspelled - perhaps 'performance'?
#160: FILE: arch/x86/include/asm/perf_event_p4.h:12:
+ * NetBurst has perfomance MSRs shared between
                 ^^^^^^^^^^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#247: FILE: arch/x86/include/asm/perf_event_p4.h:99:
+#define P4_MAKE_EVENT_ATTR(class, name, bit)	class##_##name = (1 << bit)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'bit' may be better as '(bit)' to avoid precedence issues
#247: FILE: arch/x86/include/asm/perf_event_p4.h:99:
+#define P4_MAKE_EVENT_ATTR(class, name, bit)	class##_##name = (1 << bit)

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#278: FILE: arch/x86/include/asm/perf_event_p4.h:130:
+#define P4_CONFIG_HT			(1ULL << P4_CONFIG_HT_SHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:LINE_SPACING: Missing a blank line after declarations
#297: FILE: arch/x86/include/asm/perf_event_p4.h:149:
+	u32 cccr = p4_config_unpack_cccr(config);
+	return !!(cccr & P4_CCCR_CASCADE);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <RD_2ndL_HITS>
#698: FILE: arch/x86/include/asm/perf_event_p4.h:550:
+	P4_MAKE_EVENT_ATTR(P4_BSQ_CACHE_REFERENCE, RD_2ndL_HITS, 0),

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <RD_2ndL_HITE>
#699: FILE: arch/x86/include/asm/perf_event_p4.h:551:
+	P4_MAKE_EVENT_ATTR(P4_BSQ_CACHE_REFERENCE, RD_2ndL_HITE, 1),

CHECK:CAMELCASE: Avoid CamelCase: <RD_2ndL_HITM>
#700: FILE: arch/x86/include/asm/perf_event_p4.h:552:
+	P4_MAKE_EVENT_ATTR(P4_BSQ_CACHE_REFERENCE, RD_2ndL_HITM, 2),

CHECK:CAMELCASE: Avoid CamelCase: <RD_3rdL_HITS>
#701: FILE: arch/x86/include/asm/perf_event_p4.h:553:
+	P4_MAKE_EVENT_ATTR(P4_BSQ_CACHE_REFERENCE, RD_3rdL_HITS, 3),

CHECK:CAMELCASE: Avoid CamelCase: <RD_3rdL_HITE>
#702: FILE: arch/x86/include/asm/perf_event_p4.h:554:
+	P4_MAKE_EVENT_ATTR(P4_BSQ_CACHE_REFERENCE, RD_3rdL_HITE, 4),

CHECK:CAMELCASE: Avoid CamelCase: <RD_3rdL_HITM>
#703: FILE: arch/x86/include/asm/perf_event_p4.h:555:
+	P4_MAKE_EVENT_ATTR(P4_BSQ_CACHE_REFERENCE, RD_3rdL_HITM, 5),

CHECK:CAMELCASE: Avoid CamelCase: <RD_2ndL_MISS>
#704: FILE: arch/x86/include/asm/perf_event_p4.h:556:
+	P4_MAKE_EVENT_ATTR(P4_BSQ_CACHE_REFERENCE, RD_2ndL_MISS, 8),

CHECK:CAMELCASE: Avoid CamelCase: <RD_3rdL_MISS>
#705: FILE: arch/x86/include/asm/perf_event_p4.h:557:
+	P4_MAKE_EVENT_ATTR(P4_BSQ_CACHE_REFERENCE, RD_3rdL_MISS, 9),

CHECK:CAMELCASE: Avoid CamelCase: <WR_2ndL_MISS>
#706: FILE: arch/x86/include/asm/perf_event_p4.h:558:
+	P4_MAKE_EVENT_ATTR(P4_BSQ_CACHE_REFERENCE, WR_2ndL_MISS, 10),

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1026: FILE: arch/x86/kernel/cpu/perf_event_p4.c:1:
+/*

WARNING:TYPO_SPELLING: 'Perfomance' may be misspelled - perhaps 'Performance'?
#1027: FILE: arch/x86/kernel/cpu/perf_event_p4.c:2:
+ * Netburst Perfomance Events (P4, old Xeon)
             ^^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err_once([subsystem]dev, ... then dev_err_once(dev, ... then pr_err_once(...  to printk_once(KERN_ERR ...
#1184: FILE: arch/x86/kernel/cpu/perf_event_p4.c:159:
+		printk_once(KERN_ERR "PMU: Incorrect event index\n");

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1196: FILE: arch/x86/kernel/cpu/perf_event_p4.c:171:
+	config |= p4_config_pack_cccr(P4_EVENT_UNPACK_SELECTOR(tpl->opcode) << P4_CCCR_ESCR_SELECT_SHIFT);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1223: FILE: arch/x86/kernel/cpu/perf_event_p4.c:198:
+		if (opcode == p4_templates[i].opcode &&
+			p4_pmu_emask_match(emask, p4_templates[i].emask))

WARNING:LINE_SPACING: Missing a blank line after declarations
#1294: FILE: arch/x86/kernel/cpu/perf_event_p4.c:269:
+		struct perf_event *event = cpuc->events[idx];
+		if (!test_bit(idx, cpuc->active_mask))

WARNING:LINE_SPACING: Missing a blank line after declarations
#1340: FILE: arch/x86/kernel/cpu/perf_event_p4.c:315:
+		struct perf_event *event = cpuc->events[idx];
+		if (!test_bit(idx, cpuc->active_mask))

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1361: FILE: arch/x86/kernel/cpu/perf_event_p4.c:336:
+	for (idx = 0; idx < x86_pmu.num_events; idx++) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn_once([subsystem]dev, ... then dev_warn_once(dev, ... then pr_warn_once(...  to printk_once(KERN_WARNING ...
#1552: FILE: arch/x86/kernel/cpu/perf_event_p4.c:527:
+				printk_once(KERN_WARNING "PMU: Dep events are "

WARNING:SPLIT_STRING: quoted string split across lines
#1553: FILE: arch/x86/kernel/cpu/perf_event_p4.c:528:
+				printk_once(KERN_WARNING "PMU: Dep events are "
+					"not implemented yet\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1559: FILE: arch/x86/kernel/cpu/perf_event_p4.c:534:
+		if (test_bit(tpl->cntr[thread], used_mask) ||
+			test_bit(escr_idx, escr_mask))

WARNING:MISPLACED_INIT: __initconst should be placed after p4_pmu
#1583: FILE: arch/x86/kernel/cpu/perf_event_p4.c:558:
+static __initconst struct x86_pmu p4_pmu = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:INIT_ATTRIBUTE: Use of __initconst requires a separate use of const
#1583: FILE: arch/x86/kernel/cpu/perf_event_p4.c:558:
+static __initconst struct x86_pmu p4_pmu = {

Const init definitions should use __initconst instead of
__initdata.

Similarly init definitions without const require a separate
use of const.

WARNING:TYPO_SPELLING: 'indexig' may be misspelled - perhaps 'indexing'?
#1615: FILE: arch/x86/kernel/cpu/perf_event_p4.c:590:
+	/* If we get stripped -- indexig fails */
 	                         ^^^^^^^

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#1620: FILE: arch/x86/kernel/cpu/perf_event_p4.c:595:
+		pr_cont("unsupported Netburst CPU model %d ",

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#1625: FILE: arch/x86/kernel/cpu/perf_event_p4.c:600:
+	pr_cont("Netburst events, ");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000001365.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 23 warnings, 14 checks, 1470 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000001365.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
