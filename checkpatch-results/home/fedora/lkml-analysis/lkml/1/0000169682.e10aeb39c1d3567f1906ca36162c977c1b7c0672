WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs' should also have an identifier name
#79: FILE: arch/x86/include/asm/traps.h:44:
+dotraplinkage void do_device_not_available(struct pt_regs);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#161: FILE: arch/x86/math-emu/fpu_proto.h:54:
+extern void math_emulate(struct math_emu_info *info);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: No space is necessary after a cast
#190: FILE: arch/x86/math-emu/fpu_system.h:37:
+#define FPU_CS			(*(unsigned short *) &(FPU_info->regs->cs))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around FPU_info->regs->cs
#190: FILE: arch/x86/math-emu/fpu_system.h:37:
+#define FPU_CS			(*(unsigned short *) &(FPU_info->regs->cs))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: No space is necessary after a cast
#191: FILE: arch/x86/math-emu/fpu_system.h:38:
+#define FPU_SS			(*(unsigned short *) &(FPU_info->regs->ss))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around FPU_info->regs->ss
#191: FILE: arch/x86/math-emu/fpu_system.h:38:
+#define FPU_SS			(*(unsigned short *) &(FPU_info->regs->ss))

CHECK:SPACING: No space is necessary after a cast
#192: FILE: arch/x86/math-emu/fpu_system.h:39:
+#define FPU_DS			(*(unsigned short *) &(FPU_info->regs->ds))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around FPU_info->regs->ds
#192: FILE: arch/x86/math-emu/fpu_system.h:39:
+#define FPU_DS			(*(unsigned short *) &(FPU_info->regs->ds))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#247: FILE: arch/x86/math-emu/get_address.c:55:
+		(reg_offset_vm86[((unsigned)x)] + (u_char *)FPU_info->regs))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#268: FILE: arch/x86/math-emu/get_address.c:68:
+		(reg_offset_pm[((unsigned)x)] + (u_char *)FPU_info->regs))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000169682.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 7 checks, 220 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000169682.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
