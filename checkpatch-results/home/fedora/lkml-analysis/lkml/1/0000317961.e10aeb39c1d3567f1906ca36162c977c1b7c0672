WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#78: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#83: FILE: arch/arm/kernel/kgdb.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#84: FILE: arch/arm/kernel/kgdb.c:2:
+ * arch/arm/kernel/kgdb.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/atomic.h> instead of <asm/atomic.h>
#110: FILE: arch/arm/kernel/kgdb.c:28:
+#include <asm/atomic.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#111: FILE: arch/arm/kernel/kgdb.c:29:
+#include <asm/pgtable.h>

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!task"
#172: FILE: arch/arm/kernel/kgdb.c:90:
+	if (task == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#217: FILE: arch/arm/kernel/kgdb.c:135:
+		 * Try to read optional parameter, pc unchanged if no parm.
 		                                                      ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'initalization' may be misspelled - perhaps 'initialization'?
#264: FILE: arch/arm/kernel/kgdb.c:182:
+ *	kgdb_arch_init - Perform any architecture specific initalization.
   	                                                   ^^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'initalization' may be misspelled - perhaps 'initialization'?
#266: FILE: arch/arm/kernel/kgdb.c:184:
+ *	This function will handle the initalization of any architecture
   	                              ^^^^^^^^^^^^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#288: FILE: arch/arm/kernel/kgdb.c:206:
+}
+/*

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'regsiter' may be misspelled - perhaps 'register'?
#290: FILE: arch/arm/kernel/kgdb.c:208:
+ * We regsiter a hook specifically looking for the KGB break inst
       ^^^^^^^^

WARNING:CONST_STRUCT: struct kgdb_arch should normally be const
#295: FILE: arch/arm/kernel/kgdb.c:213:
+struct kgdb_arch arch_kgdb_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:RETURN_VOID: void function return statements are not generally useful
#360: FILE: arch/arm/kernel/traps.c:717:
+	return;
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#374: FILE: include/asm-arm/kgdb.h:1:
+/*

WARNING:REPEATED_WORD: Possible repeated word: 'much'
#405: FILE: include/asm-arm/kgdb.h:32:
+ * make our lives much much simpler. :)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#417: FILE: include/asm-arm/kgdb.h:44:
+^Iasm(".word ^I0xe7ffdeff");$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#420: FILE: include/asm-arm/kgdb.h:47:
+extern void kgdb_handle_bus_error(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#442: FILE: include/asm-arm/kgdb.h:69:
+#define _GP_REGS ^I^I16$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#443: FILE: include/asm-arm/kgdb.h:70:
+#define _FP_REGS ^I^I8$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#444: FILE: include/asm-arm/kgdb.h:71:
+#define _EXTRA_REGS ^I^I2$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#471: FILE: include/asm-arm/kgdb.h:98:
+ * case. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#483: FILE: include/asm-arm/traps.h:27:
+extern void __init early_trap_init(void);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000317961.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 16 warnings, 6 checks, 392 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000317961.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
