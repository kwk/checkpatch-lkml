WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#59: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#64: FILE: arch/arm/mach-bcmring/clock.c:1:
+/*****************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#65: FILE: arch/arm/mach-bcmring/clock.c:2:
+/*****************************************************************************
+* Copyright 2001 - 2009 Broadcom Corporation.  All rights reserved.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: arch/arm/mach-bcmring/clock.c:45:
+       if (!clk)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#108: FILE: arch/arm/mach-bcmring/clock.c:45:
+       if (!clk)
+               return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: arch/arm/mach-bcmring/clock.c:46:
+               return;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: arch/arm/mach-bcmring/clock.c:46:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: arch/arm/mach-bcmring/clock.c:49:
+       if (clk->parent)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#112: FILE: arch/arm/mach-bcmring/clock.c:49:
+       if (clk->parent)
+               __clk_enable(clk->parent);

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: arch/arm/mach-bcmring/clock.c:50:
+               __clk_enable(clk->parent);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: arch/arm/mach-bcmring/clock.c:50:
+               __clk_enable(clk->parent);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: arch/arm/mach-bcmring/clock.c:52:
+       if (clk->use_cnt++ == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#115: FILE: arch/arm/mach-bcmring/clock.c:52:
+       if (clk->use_cnt++ == 0) {
+               if (clk_is_pll1(clk)) { /* PLL1 */

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: arch/arm/mach-bcmring/clock.c:53:
+               if (clk_is_pll1(clk)) { /* PLL1 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: arch/arm/mach-bcmring/clock.c:53:
+               if (clk_is_pll1(clk)) { /* PLL1 */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#116: FILE: arch/arm/mach-bcmring/clock.c:53:
+               if (clk_is_pll1(clk)) { /* PLL1 */
+                       chipcHw_pll1Enable(clk->rate_hz, 0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: arch/arm/mach-bcmring/clock.c:54:
+                       chipcHw_pll1Enable(clk->rate_hz, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: arch/arm/mach-bcmring/clock.c:54:
+                       chipcHw_pll1Enable(clk->rate_hz, 0);$

CHECK:CAMELCASE: Avoid CamelCase: <chipcHw_pll1Enable>
#117: FILE: arch/arm/mach-bcmring/clock.c:54:
+                       chipcHw_pll1Enable(clk->rate_hz, 0);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: arch/arm/mach-bcmring/clock.c:55:
+               } else if (clk_is_pll2(clk)) {  /* PLL2 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: arch/arm/mach-bcmring/clock.c:55:
+               } else if (clk_is_pll2(clk)) {  /* PLL2 */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#118: FILE: arch/arm/mach-bcmring/clock.c:55:
+               } else if (clk_is_pll2(clk)) {  /* PLL2 */
+                       chipcHw_pll2Enable(clk->rate_hz);

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: arch/arm/mach-bcmring/clock.c:56:
+                       chipcHw_pll2Enable(clk->rate_hz);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: arch/arm/mach-bcmring/clock.c:56:
+                       chipcHw_pll2Enable(clk->rate_hz);$

CHECK:CAMELCASE: Avoid CamelCase: <chipcHw_pll2Enable>
#119: FILE: arch/arm/mach-bcmring/clock.c:56:
+                       chipcHw_pll2Enable(clk->rate_hz);

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: arch/arm/mach-bcmring/clock.c:57:
+               } else if (clk_is_using_xtal(clk)) {    /* source is crystal */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: arch/arm/mach-bcmring/clock.c:57:
+               } else if (clk_is_using_xtal(clk)) {    /* source is crystal */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#120: FILE: arch/arm/mach-bcmring/clock.c:57:
+               } else if (clk_is_using_xtal(clk)) {    /* source is crystal */
+                       if (!clk_is_primary(clk)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: arch/arm/mach-bcmring/clock.c:58:
+                       if (!clk_is_primary(clk)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: arch/arm/mach-bcmring/clock.c:58:
+                       if (!clk_is_primary(clk)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#121: FILE: arch/arm/mach-bcmring/clock.c:58:
+                       if (!clk_is_primary(clk)) {
+                               chipcHw_bypassClockEnable(clk->csp_id);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#121: FILE: arch/arm/mach-bcmring/clock.c:58:
+                       if (!clk_is_primary(clk)) {
+                               chipcHw_bypassClockEnable(clk->csp_id);
+                       }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: arch/arm/mach-bcmring/clock.c:59:
+                               chipcHw_bypassClockEnable(clk->csp_id);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: arch/arm/mach-bcmring/clock.c:59:
+                               chipcHw_bypassClockEnable(clk->csp_id);$

CHECK:CAMELCASE: Avoid CamelCase: <chipcHw_bypassClockEnable>
#122: FILE: arch/arm/mach-bcmring/clock.c:59:
+                               chipcHw_bypassClockEnable(clk->csp_id);

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: arch/arm/mach-bcmring/clock.c:60:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: arch/arm/mach-bcmring/clock.c:60:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: arch/arm/mach-bcmring/clock.c:61:
+               } else {        /* source is PLL */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: arch/arm/mach-bcmring/clock.c:61:
+               } else {        /* source is PLL */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#124: FILE: arch/arm/mach-bcmring/clock.c:61:
+               } else {        /* source is PLL */
+                       chipcHw_setClockEnable(clk->csp_id);

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: arch/arm/mach-bcmring/clock.c:62:
+                       chipcHw_setClockEnable(clk->csp_id);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: arch/arm/mach-bcmring/clock.c:62:
+                       chipcHw_setClockEnable(clk->csp_id);$

CHECK:CAMELCASE: Avoid CamelCase: <chipcHw_setClockEnable>
#125: FILE: arch/arm/mach-bcmring/clock.c:62:
+                       chipcHw_setClockEnable(clk->csp_id);

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: arch/arm/mach-bcmring/clock.c:63:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: arch/arm/mach-bcmring/clock.c:63:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: arch/arm/mach-bcmring/clock.c:64:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: arch/arm/mach-bcmring/clock.c:69:
+       unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: arch/arm/mach-bcmring/clock.c:71:
+       if (!clk)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#134: FILE: arch/arm/mach-bcmring/clock.c:71:
+       if (!clk)
+               return -EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: arch/arm/mach-bcmring/clock.c:72:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: arch/arm/mach-bcmring/clock.c:72:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: arch/arm/mach-bcmring/clock.c:74:
+       spin_lock_irqsave(&clk_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: arch/arm/mach-bcmring/clock.c:75:
+       __clk_enable(clk);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: arch/arm/mach-bcmring/clock.c:76:
+       spin_unlock_irqrestore(&clk_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: arch/arm/mach-bcmring/clock.c:78:
+       return 0;$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#144: FILE: arch/arm/mach-bcmring/clock.c:81:
+EXPORT_SYMBOL(clk_enable);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: arch/arm/mach-bcmring/clock.c:85:
+       if (!clk)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#148: FILE: arch/arm/mach-bcmring/clock.c:85:
+       if (!clk)
+               return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: arch/arm/mach-bcmring/clock.c:86:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: arch/arm/mach-bcmring/clock.c:86:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: arch/arm/mach-bcmring/clock.c:88:
+       BUG_ON(clk->use_cnt == 0);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#151: FILE: arch/arm/mach-bcmring/clock.c:88:
+       BUG_ON(clk->use_cnt == 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: arch/arm/mach-bcmring/clock.c:90:
+       if (--clk->use_cnt == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#153: FILE: arch/arm/mach-bcmring/clock.c:90:
+       if (--clk->use_cnt == 0) {
+               if (clk_is_pll1(clk)) { /* PLL1 */

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: arch/arm/mach-bcmring/clock.c:91:
+               if (clk_is_pll1(clk)) { /* PLL1 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: arch/arm/mach-bcmring/clock.c:91:
+               if (clk_is_pll1(clk)) { /* PLL1 */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#154: FILE: arch/arm/mach-bcmring/clock.c:91:
+               if (clk_is_pll1(clk)) { /* PLL1 */
+                       chipcHw_pll1Disable();

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: arch/arm/mach-bcmring/clock.c:92:
+                       chipcHw_pll1Disable();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: arch/arm/mach-bcmring/clock.c:92:
+                       chipcHw_pll1Disable();$

CHECK:CAMELCASE: Avoid CamelCase: <chipcHw_pll1Disable>
#155: FILE: arch/arm/mach-bcmring/clock.c:92:
+                       chipcHw_pll1Disable();

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: arch/arm/mach-bcmring/clock.c:93:
+               } else if (clk_is_pll2(clk)) {  /* PLL2 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: arch/arm/mach-bcmring/clock.c:93:
+               } else if (clk_is_pll2(clk)) {  /* PLL2 */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#156: FILE: arch/arm/mach-bcmring/clock.c:93:
+               } else if (clk_is_pll2(clk)) {  /* PLL2 */
+                       chipcHw_pll2Disable();

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: arch/arm/mach-bcmring/clock.c:94:
+                       chipcHw_pll2Disable();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: arch/arm/mach-bcmring/clock.c:94:
+                       chipcHw_pll2Disable();$

CHECK:CAMELCASE: Avoid CamelCase: <chipcHw_pll2Disable>
#157: FILE: arch/arm/mach-bcmring/clock.c:94:
+                       chipcHw_pll2Disable();

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: arch/arm/mach-bcmring/clock.c:95:
+               } else if (clk_is_using_xtal(clk)) {    /* source is crystal */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: arch/arm/mach-bcmring/clock.c:95:
+               } else if (clk_is_using_xtal(clk)) {    /* source is crystal */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#158: FILE: arch/arm/mach-bcmring/clock.c:95:
+               } else if (clk_is_using_xtal(clk)) {    /* source is crystal */
+                       if (!clk_is_primary(clk)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: arch/arm/mach-bcmring/clock.c:96:
+                       if (!clk_is_primary(clk)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: arch/arm/mach-bcmring/clock.c:96:
+                       if (!clk_is_primary(clk)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#159: FILE: arch/arm/mach-bcmring/clock.c:96:
+                       if (!clk_is_primary(clk)) {
+                               chipcHw_bypassClockDisable(clk->csp_id);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#159: FILE: arch/arm/mach-bcmring/clock.c:96:
+                       if (!clk_is_primary(clk)) {
+                               chipcHw_bypassClockDisable(clk->csp_id);
+                       }

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: arch/arm/mach-bcmring/clock.c:97:
+                               chipcHw_bypassClockDisable(clk->csp_id);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: arch/arm/mach-bcmring/clock.c:97:
+                               chipcHw_bypassClockDisable(clk->csp_id);$

CHECK:CAMELCASE: Avoid CamelCase: <chipcHw_bypassClockDisable>
#160: FILE: arch/arm/mach-bcmring/clock.c:97:
+                               chipcHw_bypassClockDisable(clk->csp_id);

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: arch/arm/mach-bcmring/clock.c:98:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: arch/arm/mach-bcmring/clock.c:98:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: arch/arm/mach-bcmring/clock.c:99:
+               } else {        /* source is PLL */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: arch/arm/mach-bcmring/clock.c:99:
+               } else {        /* source is PLL */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#162: FILE: arch/arm/mach-bcmring/clock.c:99:
+               } else {        /* source is PLL */
+                       chipcHw_setClockDisable(clk->csp_id);

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: arch/arm/mach-bcmring/clock.c:100:
+                       chipcHw_setClockDisable(clk->csp_id);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: arch/arm/mach-bcmring/clock.c:100:
+                       chipcHw_setClockDisable(clk->csp_id);$

CHECK:CAMELCASE: Avoid CamelCase: <chipcHw_setClockDisable>
#163: FILE: arch/arm/mach-bcmring/clock.c:100:
+                       chipcHw_setClockDisable(clk->csp_id);

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: arch/arm/mach-bcmring/clock.c:101:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: arch/arm/mach-bcmring/clock.c:101:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: arch/arm/mach-bcmring/clock.c:102:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: arch/arm/mach-bcmring/clock.c:104:
+       if (clk->parent)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#167: FILE: arch/arm/mach-bcmring/clock.c:104:
+       if (clk->parent)
+               __clk_disable(clk->parent);

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: arch/arm/mach-bcmring/clock.c:105:
+               __clk_disable(clk->parent);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: arch/arm/mach-bcmring/clock.c:105:
+               __clk_disable(clk->parent);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: arch/arm/mach-bcmring/clock.c:110:
+       unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: arch/arm/mach-bcmring/clock.c:112:
+       if (!clk)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#175: FILE: arch/arm/mach-bcmring/clock.c:112:
+       if (!clk)
+               return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: arch/arm/mach-bcmring/clock.c:113:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: arch/arm/mach-bcmring/clock.c:113:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: arch/arm/mach-bcmring/clock.c:115:
+       spin_lock_irqsave(&clk_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: arch/arm/mach-bcmring/clock.c:116:
+       __clk_disable(clk);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: arch/arm/mach-bcmring/clock.c:117:
+       spin_unlock_irqrestore(&clk_lock, flags);$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#183: FILE: arch/arm/mach-bcmring/clock.c:120:
+EXPORT_SYMBOL(clk_disable);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: arch/arm/mach-bcmring/clock.c:124:
+       if (!clk)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#187: FILE: arch/arm/mach-bcmring/clock.c:124:
+       if (!clk)
+               return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: arch/arm/mach-bcmring/clock.c:125:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: arch/arm/mach-bcmring/clock.c:125:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: arch/arm/mach-bcmring/clock.c:127:
+       return clk->rate_hz;$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#193: FILE: arch/arm/mach-bcmring/clock.c:130:
+EXPORT_SYMBOL(clk_get_rate);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: arch/arm/mach-bcmring/clock.c:134:
+       unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: arch/arm/mach-bcmring/clock.c:135:
+       unsigned long actual;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: arch/arm/mach-bcmring/clock.c:136:
+       unsigned long rate_hz;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: arch/arm/mach-bcmring/clock.c:138:
+       if (!clk)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#201: FILE: arch/arm/mach-bcmring/clock.c:138:
+       if (!clk)
+               return -EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: arch/arm/mach-bcmring/clock.c:139:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: arch/arm/mach-bcmring/clock.c:139:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: arch/arm/mach-bcmring/clock.c:141:
+       if (!clk_is_programmable(clk))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#204: FILE: arch/arm/mach-bcmring/clock.c:141:
+       if (!clk_is_programmable(clk))
+               return -EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: arch/arm/mach-bcmring/clock.c:142:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: arch/arm/mach-bcmring/clock.c:142:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: arch/arm/mach-bcmring/clock.c:144:
+       if (clk->use_cnt)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#207: FILE: arch/arm/mach-bcmring/clock.c:144:
+       if (clk->use_cnt)
+               return -EBUSY;

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: arch/arm/mach-bcmring/clock.c:145:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: arch/arm/mach-bcmring/clock.c:145:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: arch/arm/mach-bcmring/clock.c:147:
+       spin_lock_irqsave(&clk_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: arch/arm/mach-bcmring/clock.c:148:
+       actual = clk->parent->rate_hz;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: arch/arm/mach-bcmring/clock.c:149:
+       rate_hz = min(actual, rate);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: arch/arm/mach-bcmring/clock.c:150:
+       rate_hz = chipcHw_setClockFrequency(clk->csp_id, rate_hz);$

CHECK:CAMELCASE: Avoid CamelCase: <chipcHw_setClockFrequency>
#213: FILE: arch/arm/mach-bcmring/clock.c:150:
+       rate_hz = chipcHw_setClockFrequency(clk->csp_id, rate_hz);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: arch/arm/mach-bcmring/clock.c:151:
+       clk->rate_hz = rate_hz;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: arch/arm/mach-bcmring/clock.c:152:
+       spin_unlock_irqrestore(&clk_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: arch/arm/mach-bcmring/clock.c:154:
+       return rate_hz;$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#220: FILE: arch/arm/mach-bcmring/clock.c:157:
+EXPORT_SYMBOL(clk_round_rate);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: arch/arm/mach-bcmring/clock.c:161:
+       unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: arch/arm/mach-bcmring/clock.c:162:
+       unsigned long actual;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: arch/arm/mach-bcmring/clock.c:163:
+       unsigned long rate_hz;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: arch/arm/mach-bcmring/clock.c:165:
+       if (!clk)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#228: FILE: arch/arm/mach-bcmring/clock.c:165:
+       if (!clk)
+               return -EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: arch/arm/mach-bcmring/clock.c:166:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: arch/arm/mach-bcmring/clock.c:166:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: arch/arm/mach-bcmring/clock.c:168:
+       if (!clk_is_programmable(clk))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#231: FILE: arch/arm/mach-bcmring/clock.c:168:
+       if (!clk_is_programmable(clk))
+               return -EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: arch/arm/mach-bcmring/clock.c:169:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: arch/arm/mach-bcmring/clock.c:169:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: arch/arm/mach-bcmring/clock.c:171:
+       if (clk->use_cnt)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#234: FILE: arch/arm/mach-bcmring/clock.c:171:
+       if (clk->use_cnt)
+               return -EBUSY;

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: arch/arm/mach-bcmring/clock.c:172:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: arch/arm/mach-bcmring/clock.c:172:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: arch/arm/mach-bcmring/clock.c:174:
+       spin_lock_irqsave(&clk_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: arch/arm/mach-bcmring/clock.c:175:
+       actual = clk->parent->rate_hz;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: arch/arm/mach-bcmring/clock.c:176:
+       rate_hz = min(actual, rate);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: arch/arm/mach-bcmring/clock.c:177:
+       rate_hz = chipcHw_setClockFrequency(clk->csp_id, rate_hz);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: arch/arm/mach-bcmring/clock.c:178:
+       clk->rate_hz = rate_hz;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: arch/arm/mach-bcmring/clock.c:179:
+       spin_unlock_irqrestore(&clk_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: arch/arm/mach-bcmring/clock.c:181:
+       return 0;$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#247: FILE: arch/arm/mach-bcmring/clock.c:184:
+EXPORT_SYMBOL(clk_set_rate);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: arch/arm/mach-bcmring/clock.c:188:
+       if (!clk)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#251: FILE: arch/arm/mach-bcmring/clock.c:188:
+       if (!clk)
+               return NULL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#252: FILE: arch/arm/mach-bcmring/clock.c:189:
+               return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: arch/arm/mach-bcmring/clock.c:189:
+               return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: arch/arm/mach-bcmring/clock.c:191:
+       return clk->parent;$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#257: FILE: arch/arm/mach-bcmring/clock.c:194:
+EXPORT_SYMBOL(clk_get_parent);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: arch/arm/mach-bcmring/clock.c:198:
+       unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: arch/arm/mach-bcmring/clock.c:199:
+       struct clk *old_parent;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: arch/arm/mach-bcmring/clock.c:201:
+       if (!clk || !parent)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#264: FILE: arch/arm/mach-bcmring/clock.c:201:
+       if (!clk || !parent)
+               return -EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#265: FILE: arch/arm/mach-bcmring/clock.c:202:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: arch/arm/mach-bcmring/clock.c:202:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: arch/arm/mach-bcmring/clock.c:204:
+       if (!clk_is_primary(parent) || !clk_is_bypassable(clk))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#267: FILE: arch/arm/mach-bcmring/clock.c:204:
+       if (!clk_is_primary(parent) || !clk_is_bypassable(clk))
+               return -EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: arch/arm/mach-bcmring/clock.c:205:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: arch/arm/mach-bcmring/clock.c:205:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: arch/arm/mach-bcmring/clock.c:208:
+       if (clk->use_cnt > 1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#271: FILE: arch/arm/mach-bcmring/clock.c:208:
+       if (clk->use_cnt > 1)
+               return -EBUSY;

ERROR:CODE_INDENT: code indent should use tabs where possible
#272: FILE: arch/arm/mach-bcmring/clock.c:209:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: arch/arm/mach-bcmring/clock.c:209:
+               return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: arch/arm/mach-bcmring/clock.c:211:
+       if (clk->parent == parent)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#274: FILE: arch/arm/mach-bcmring/clock.c:211:
+       if (clk->parent == parent)
+               return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#275: FILE: arch/arm/mach-bcmring/clock.c:212:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: arch/arm/mach-bcmring/clock.c:212:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: arch/arm/mach-bcmring/clock.c:214:
+       spin_lock_irqsave(&clk_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: arch/arm/mach-bcmring/clock.c:215:
+       old_parent = clk->parent;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: arch/arm/mach-bcmring/clock.c:216:
+       clk->parent = parent;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: arch/arm/mach-bcmring/clock.c:217:
+       if (clk_is_using_xtal(parent))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#280: FILE: arch/arm/mach-bcmring/clock.c:217:
+       if (clk_is_using_xtal(parent))
+               clk->mode |= CLK_MODE_XTAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#281: FILE: arch/arm/mach-bcmring/clock.c:218:
+               clk->mode |= CLK_MODE_XTAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: arch/arm/mach-bcmring/clock.c:218:
+               clk->mode |= CLK_MODE_XTAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: arch/arm/mach-bcmring/clock.c:219:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#282: FILE: arch/arm/mach-bcmring/clock.c:219:
+       else
+               clk->mode &= (~CLK_MODE_XTAL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#283: FILE: arch/arm/mach-bcmring/clock.c:220:
+               clk->mode &= (~CLK_MODE_XTAL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: arch/arm/mach-bcmring/clock.c:220:
+               clk->mode &= (~CLK_MODE_XTAL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: arch/arm/mach-bcmring/clock.c:223:
+       if (clk->use_cnt != 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#286: FILE: arch/arm/mach-bcmring/clock.c:223:
+       if (clk->use_cnt != 0) {
+               clk->use_cnt--;

ERROR:CODE_INDENT: code indent should use tabs where possible
#287: FILE: arch/arm/mach-bcmring/clock.c:224:
+               clk->use_cnt--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: arch/arm/mach-bcmring/clock.c:224:
+               clk->use_cnt--;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#288: FILE: arch/arm/mach-bcmring/clock.c:225:
+               /* enable clock with the new parent */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#289: FILE: arch/arm/mach-bcmring/clock.c:226:
+               __clk_enable(clk);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: arch/arm/mach-bcmring/clock.c:226:
+               __clk_enable(clk);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#290: FILE: arch/arm/mach-bcmring/clock.c:227:
+               /* disable the old parent */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#291: FILE: arch/arm/mach-bcmring/clock.c:228:
+               __clk_disable(old_parent);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: arch/arm/mach-bcmring/clock.c:228:
+               __clk_disable(old_parent);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: arch/arm/mach-bcmring/clock.c:229:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: arch/arm/mach-bcmring/clock.c:230:
+       spin_unlock_irqrestore(&clk_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: arch/arm/mach-bcmring/clock.c:232:
+       return 0;$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#298: FILE: arch/arm/mach-bcmring/clock.c:235:
+EXPORT_SYMBOL(clk_set_parent);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#305: FILE: arch/arm/mach-bcmring/clock.h:1:
+/*****************************************************************************

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#306: FILE: arch/arm/mach-bcmring/clock.h:2:
+/*****************************************************************************
+* Copyright 2001 - 2009 Broadcom Corporation.  All rights reserved.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: arch/arm/mach-bcmring/clock.h:25:
+       const char *name;       /* clock name */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: arch/arm/mach-bcmring/clock.h:26:
+       unsigned int type;      /* clock type */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: arch/arm/mach-bcmring/clock.h:27:
+       unsigned int mode;      /* current mode */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: arch/arm/mach-bcmring/clock.h:28:
+       volatile int use_bypass;        /* indicate if it's in bypass mode */$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#332: FILE: arch/arm/mach-bcmring/clock.h:28:
+       volatile int use_bypass;        /* indicate if it's in bypass mode */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: arch/arm/mach-bcmring/clock.h:29:
+       chipcHw_CLOCK_e csp_id; /* clock ID for CSP CHIPC */$

CHECK:CAMELCASE: Avoid CamelCase: <chipcHw_CLOCK_e>
#333: FILE: arch/arm/mach-bcmring/clock.h:29:
+       chipcHw_CLOCK_e csp_id; /* clock ID for CSP CHIPC */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: arch/arm/mach-bcmring/clock.h:30:
+       unsigned long rate_hz;  /* clock rate in Hz */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: arch/arm/mach-bcmring/clock.h:31:
+       unsigned int use_cnt;   /* usage count */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: arch/arm/mach-bcmring/clock.h:32:
+       struct clk *parent;     /* parent clock */$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000100398.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 47 errors, 167 warnings, 10 checks, 268 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000100398.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
