WARNING:TYPO_SPELLING: 'PARM' may be misspelled - perhaps 'PARAM'?
#30: 
command line using the IPL PARM option.
                           ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'PARM' may be misspelled - perhaps 'PARAM'?
#34: 
  IPL    C PARM dasd=1234 root=/dev/dasda1
           ^^^^

WARNING:TYPO_SPELLING: 'PARM' may be misspelled - perhaps 'PARAM'?
#35: 
  IPL 1234 PARM savesys=mylnxnss
           ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#36: 
  echo "init=/bin/bash" > /sys/firmware/reipl/ccw/parm
                                                  ^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#73: FILE: arch/s390/kernel/early.c:37:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#77: FILE: arch/s390/kernel/early.c:41:
+asm(

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#153: FILE: arch/s390/kernel/early.c:142:
+	/* re-setup boot command line with new ipl vm parms */
 	                                              ^^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#167: FILE: arch/s390/kernel/early.c:445:
+	char *parm = NULL;
 	      ^^^^

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#170: FILE: arch/s390/kernel/early.c:448:
+	strlcpy(boot_command_line, COMMAND_LINE, ARCH_COMMAND_LINE_SIZE);

WARNING:TYPO_SPELLING: 'PARM' may be misspelled - perhaps 'PARAM'?
#173: FILE: arch/s390/kernel/early.c:451:
+	/* append IPL PARM data to the boot command line */
 	              ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#175: FILE: arch/s390/kernel/early.c:453:
+		parm = boot_command_line + strlen(boot_command_line);
 		^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#176: FILE: arch/s390/kernel/early.c:454:
+		*parm++ = ' ';
 		 ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#177: FILE: arch/s390/kernel/early.c:455:
+		get_ipl_vmparm(parm);
 		               ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#178: FILE: arch/s390/kernel/early.c:456:
+		if (parm[0] == '=')
 		    ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#179: FILE: arch/s390/kernel/early.c:457:
+			memmove(boot_command_line, parm + 1, strlen(parm));
 			                           ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#179: FILE: arch/s390/kernel/early.c:457:
+			memmove(boot_command_line, parm + 1, strlen(parm));
 			                                            ^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#183: FILE: arch/s390/kernel/early.c:461:
+
+

WARNING:TYPO_SPELLING: 'PARM' may be misspelled - perhaps 'PARAM'?
#244: FILE: arch/s390/kernel/ipl.c:269:
+/* VM IPL PARM routines */
           ^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ipb->ipl_info.ccw.vm_parm_len > 0'
#252: FILE: arch/s390/kernel/ipl.c:277:
+	if ((ipb->ipl_info.ccw.vm_flags & DIAG308_VM_FLAGS_VP_VALID) &&
+	    (ipb->ipl_info.ccw.vm_parm_len > 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#254: FILE: arch/s390/kernel/ipl.c:279:
+	    (ipb->ipl_info.ccw.vm_parm_len > 0)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ipl_block.hdr.pbt == DIAG308_IPL_TYPE_CCW'
#276: FILE: arch/s390/kernel/ipl.c:301:
+	if (diag308_set_works && (ipl_block.hdr.pbt == DIAG308_IPL_TYPE_CCW))

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#285: FILE: arch/s390/kernel/ipl.c:310:
+	char parm[DIAG308_VMPARM_SIZE + 1] = {};
 	     ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#287: FILE: arch/s390/kernel/ipl.c:312:
+	get_ipl_vmparm(parm);
 	               ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#288: FILE: arch/s390/kernel/ipl.c:313:
+	return sprintf(page, "%s\n", parm);
 	                             ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#292: FILE: arch/s390/kernel/ipl.c:317:
+	__ATTR(parm, S_IRUGO, ipl_vm_parm_show, NULL);
 	       ^^^^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#292: FILE: arch/s390/kernel/ipl.c:317:
+	__ATTR(parm, S_IRUGO, ipl_vm_parm_show, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:TYPO_SPELLING: 'PARM' may be misspelled - perhaps 'PARAM'?
#355: FILE: arch/s390/kernel/ipl.c:556:
+/* VM IPL PARM attributes */
           ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#357: FILE: arch/s390/kernel/ipl.c:558:
+static ssize_t reipl_generic_vmparm_show(struct ipl_parameter_block *ipb,
+					  char *page)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'len > 0'
#373: FILE: arch/s390/kernel/ipl.c:574:
+	if ((len > 0) && (buf[len - 1] == '\n'))

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#379: FILE: arch/s390/kernel/ipl.c:580:
+	/* parm is used to store kernel options, check for common chars */
 	   ^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#426: FILE: arch/s390/kernel/ipl.c:627:
+	__ATTR(parm, S_IRUGO | S_IWUSR, reipl_nss_vmparm_show,
 	       ^^^^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#426: FILE: arch/s390/kernel/ipl.c:627:
+	__ATTR(parm, S_IRUGO | S_IWUSR, reipl_nss_vmparm_show,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#427: FILE: arch/s390/kernel/ipl.c:628:
+	__ATTR(parm, S_IRUGO | S_IWUSR, reipl_nss_vmparm_show,
+					reipl_nss_vmparm_store);

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#429: FILE: arch/s390/kernel/ipl.c:630:
+	__ATTR(parm, S_IRUGO | S_IWUSR, reipl_ccw_vmparm_show,
 	       ^^^^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#429: FILE: arch/s390/kernel/ipl.c:630:
+	__ATTR(parm, S_IRUGO | S_IWUSR, reipl_ccw_vmparm_show,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#430: FILE: arch/s390/kernel/ipl.c:631:
+	__ATTR(parm, S_IRUGO | S_IWUSR, reipl_ccw_vmparm_show,
+					reipl_ccw_vmparm_store);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#516: FILE: arch/s390/kernel/ipl.c:739:
+	__ATTR(loadparm, S_IRUGO | S_IWUSR, reipl_ccw_loadparm_show,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#517: FILE: arch/s390/kernel/ipl.c:740:
+	__ATTR(loadparm, S_IRUGO | S_IWUSR, reipl_ccw_loadparm_show,
+					    reipl_ccw_loadparm_store);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'len > 0'
#572: FILE: arch/s390/kernel/ipl.c:792:
+	if ((len > 0) && (buf[len - 1] == '\n'))

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#595: FILE: arch/s390/kernel/ipl.c:814:
+	__ATTR(name, S_IRUGO | S_IWUSR, reipl_nss_name_show,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#596: FILE: arch/s390/kernel/ipl.c:815:
+	__ATTR(name, S_IRUGO | S_IWUSR, reipl_nss_name_show,
+					reipl_nss_name_store);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#599: FILE: arch/s390/kernel/ipl.c:818:
+	__ATTR(loadparm, S_IRUGO | S_IWUSR, reipl_nss_loadparm_show,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#600: FILE: arch/s390/kernel/ipl.c:819:
+	__ATTR(loadparm, S_IRUGO | S_IWUSR, reipl_nss_loadparm_show,
+					    reipl_nss_loadparm_store);

WARNING:TYPO_SPELLING: 'PARM' may be misspelled - perhaps 'PARAM'?
#650: FILE: arch/s390/kernel/ipl.c:927:
+		sprintf(dst + pos, " PARM %s", vmparm);
 		                     ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#717: FILE: arch/s390/kernel/ipl.c:993:
+		memcpy(ipb->ipl_info.ccw.load_parm,
+				&sclp_ipl_info.loadparm, LOADPARM_LEN);

WARNING:TYPO_SPELLING: 'PARM' may be misspelled - perhaps 'PARAM'?
#723: FILE: arch/s390/kernel/ipl.c:999:
+	/* VM PARM */
 	      ^^^^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#726: FILE: arch/s390/kernel/ipl.c:1002:
+	    (ipl_block.ipl_info.ccw.vm_flags & DIAG308_VM_FLAGS_VP_VALID)) {
+

CHECK:SPACING: No space is necessary after a cast
#741: FILE: arch/s390/kernel/ipl.c:1018:
+	reipl_block_nss = (void *) get_zeroed_page(GFP_KERNEL);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#746: FILE: arch/s390/kernel/ipl.c:1023:
+		sys_reipl_nss_vmparm_attr.attr.mode = S_IRUGO;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#756: FILE: arch/s390/kernel/ipl.c:1032:
+		memset(reipl_block_nss->ipl_info.ccw.nss_name,
+			' ', NSS_NAME_SIZE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#758: FILE: arch/s390/kernel/ipl.c:1034:
+		memcpy(reipl_block_nss->ipl_info.ccw.nss_name,
+			kernel_nss_name, strlen(kernel_nss_name));

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#780: FILE: arch/s390/kernel/ipl.c:1056:
+			sys_reipl_ccw_vmparm_attr.attr.mode = S_IRUGO;

ERROR:SPACING: space required before the open parenthesis '('
#784: FILE: arch/s390/kernel/ipl.c:1060:
+		if(!diag308_set_works)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#785: FILE: arch/s390/kernel/ipl.c:1061:
+			sys_reipl_ccw_loadparm_attr.attr.mode = S_IRUGO;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#911: FILE: include/asm-s390/ipl.h:80:
+} __attribute__((packed,aligned(4096)));
                        ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#911: FILE: include/asm-s390/ipl.h:80:
+} __attribute__((packed,aligned(4096)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(4096) over __attribute__((aligned(4096)))
#911: FILE: include/asm-s390/ipl.h:80:
+} __attribute__((packed,aligned(4096)));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#919: FILE: include/asm-s390/ipl.h:93:
+extern void ipl_update_parameters(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#920: FILE: include/asm-s390/ipl.h:94:
+extern void get_ipl_vmparm(char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#920: FILE: include/asm-s390/ipl.h:94:
+extern void get_ipl_vmparm(char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000260498.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 37 warnings, 21 checks, 848 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000260498.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
