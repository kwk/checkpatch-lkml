WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#50: FILE: drivers/s390/cio/chp.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#51: FILE: drivers/s390/cio/chp.c:2:
+ *  drivers/s390/cio/chp.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:TYPO_SPELLING: 'succes' may be misspelled - perhaps 'success'?
#85: FILE: drivers/s390/cio/chp.c:36:
+/* On succes return 0 if channel-path is varied offline, 1 if it is varied
       ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#86: FILE: drivers/s390/cio/chp.c:37:
+ * online. Return -ENODEV if channel-path is not registered. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#89: FILE: drivers/s390/cio/chp.c:40:
+	return (chpid_to_chp(chpid) ? chpid_to_chp(chpid)->state : -ENODEV);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#107: FILE: drivers/s390/cio/chp.c:58:
+	for (i=0; i < 8; i++) {
 	      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "chpid_to_chp"
#125: FILE: drivers/s390/cio/chp.c:76:
+	return chpid_to_chp(chpid) != NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#137: FILE: drivers/s390/cio/chp.c:88:
+	sprintf(dbf_text, on?"varyon%x.%02x":"varyoff%x.%02x", chpid.cssid,
 	                    ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#137: FILE: drivers/s390/cio/chp.c:88:
+	sprintf(dbf_text, on?"varyon%x.%02x":"varyoff%x.%02x", chpid.cssid,
 	                                    ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#139: FILE: drivers/s390/cio/chp.c:90:
+	CIO_TRACE_EVENT( 2, dbf_text);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#143: FILE: drivers/s390/cio/chp.c:94:
+		printk(KERN_ERR "Can't vary unknown chpid %x.%02x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#149: FILE: drivers/s390/cio/chp.c:100:
+		printk(KERN_ERR "chpid %x.%02x is already offline\n",

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#185: FILE: drivers/s390/cio/chp.c:136:
+		.mode = S_IRUSR,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#237: FILE: drivers/s390/cio/chp.c:188:
+		.mode = S_IRUSR,

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#299: FILE: drivers/s390/cio/chp.c:250:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'chp_status_show' to 'status_show' 'chp_status_write' to 'status_store'
#299: FILE: drivers/s390/cio/chp.c:250:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'chp_type_show' to 'type_show'
#311: FILE: drivers/s390/cio/chp.c:262:
+}

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'chp_cmg_show' to 'cmg_show'
#325: FILE: drivers/s390/cio/chp.c:276:
+}

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'chp_shared_show' to 'shared_show'
#339: FILE: drivers/s390/cio/chp.c:290:
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#343: FILE: drivers/s390/cio/chp.c:294:
+static struct attribute * chp_attrs[] = {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*chp)...) over kzalloc(sizeof(struct channel_path)...)
#375: FILE: drivers/s390/cio/chp.c:326:
+	chp = kzalloc(sizeof(struct channel_path), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#393: FILE: drivers/s390/cio/chp.c:344:
+	if (css_characteristics_avail && css_chsc_characteristics.scmc
+	    && css_chsc_characteristics.secm) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#401: FILE: drivers/s390/cio/chp.c:352:
+			printk(KERN_WARNING "cio: Channel measurements not "

WARNING:SPLIT_STRING: quoted string split across lines
#402: FILE: drivers/s390/cio/chp.c:353:
+			printk(KERN_WARNING "cio: Channel measurements not "
+			       "available, continuing.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#411: FILE: drivers/s390/cio/chp.c:362:
+		printk(KERN_WARNING "%s: could not register %x.%02x\n",

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*desc)...) over kmalloc(sizeof(struct channel_path_desc)...)
#453: FILE: drivers/s390/cio/chp.c:404:
+	desc = kmalloc(sizeof(struct channel_path_desc), GFP_KERNEL);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#478: FILE: drivers/s390/cio/chp.c:429:
+		return chsc_chp_online(chpid);
+	} else {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#487: FILE: drivers/s390/cio/chp.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#488: FILE: drivers/s390/cio/chp.h:2:
+ *  drivers/s390/cio/chp.h

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000454543.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 18 warnings, 7 checks, 1266 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000454543.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
