WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#38: FILE: Makefile:4:
+EXTRAVERSION = .3
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#96: FILE: arch/x86/mm/pageattr.c:558:
+		return 0;
+	} else {

WARNING:UNNECESSARY_KERN_LEVEL: Possible unnecessary KERN_WARNING
#97: FILE: arch/x86/mm/pageattr.c:559:
+		WARN(1, KERN_WARNING "CPA: called for zero pte. "

WARNING:SPLIT_STRING: quoted string split across lines
#98: FILE: arch/x86/mm/pageattr.c:560:
+		WARN(1, KERN_WARNING "CPA: called for zero pte. "
+			"vaddr = %lx cpa->vaddr = %lx\n", vaddr,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "msg"
#472: FILE: drivers/misc/sgi-xp/xpc_sn2.c:1965:
+			if (msg != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:MEMORY_BARRIER: memory barrier without comment
#497: FILE: drivers/misc/sgi-xp/xpc_sn2.c:2197:
+	smp_mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#506: FILE: drivers/misc/sgi-xp/xpc_sn2.c:2298:
+	smp_mb();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#677: FILE: drivers/usb/core/devio.c:1757:
+static int usbdev_notify(struct notifier_block *self,
 			       unsigned long action, void *dev)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#692: FILE: drivers/usb/core/devio.c:1773:
+^I.notifier_call = ^Iusbdev_notify,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#781: FILE: drivers/usb/core/message.c:1020:
+void usb_disable_endpoint(struct usb_device *dev, unsigned int epaddr,
+		bool reset_hardware)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#818: FILE: drivers/usb/core/message.c:1055:
+void usb_disable_interface(struct usb_device *dev, struct usb_interface *intf,
+		bool reset_hardware)

CHECK:CAMELCASE: Avoid CamelCase: <bEndpointAddress>
#826: FILE: drivers/usb/core/message.c:1062:
+				alt->endpoint[i].desc.bEndpointAddress,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#871: FILE: drivers/usb/core/usb.h:16:
+extern void usb_disable_endpoint(struct usb_device *dev, unsigned int epaddr,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#872: FILE: drivers/usb/core/usb.h:17:
+extern void usb_disable_endpoint(struct usb_device *dev, unsigned int epaddr,
+		bool reset_hardware);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#942: FILE: drivers/usb/mon/mon_bin.c:968:
+
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#954: FILE: drivers/usb/mon/mon_bin.c:980:
+static long mon_bin_compat_ioctl(struct file *file,
+    unsigned int cmd, unsigned long arg)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#954: FILE: drivers/usb/mon/mon_bin.c:980:
+    unsigned int cmd, unsigned long arg)$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#960: FILE: drivers/usb/mon/mon_bin.c:986:
+	switch (cmd) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#965: FILE: drivers/usb/mon/mon_bin.c:991:
+		if (copy_from_user(&getb, (void __user *)arg,
+					    sizeof(struct mon_bin_get32)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#969: FILE: drivers/usb/mon/mon_bin.c:995:
+		ret = mon_bin_get_event(file, rp,
+		    compat_ptr(getb.hdr32), compat_ptr(getb.data32),

CHECK:SPACING: No space is necessary after a cast
#1007: FILE: drivers/usb/mon/mon_bin.c:1030:
+					    (unsigned long) compat_ptr(arg));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#1047: FILE: drivers/usb/storage/unusual_devs.h:1973:
+UNUSUAL_DEV( 0x2116, 0x0320, 0x0001, 0x0001,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1048: FILE: drivers/usb/storage/unusual_devs.h:1974:
+UNUSUAL_DEV( 0x2116, 0x0320, 0x0001, 0x0001,
+		"ST",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1133: FILE: fs/ext3/namei.c:1360:
+	dxtrace(printk(KERN_DEBUG "Creating index: inode %lu\n", dir->i_ino));

CHECK:SPACING: No space is necessary after a cast
#1145: FILE: fs/ext3/namei.c:1373:
+	if ((char *) de >= (((char *) root) + blocksize)) {

CHECK:SPACING: No space is necessary after a cast
#1152: FILE: fs/ext3/namei.c:1380:
+	len = ((char *) root) + blocksize - (char *) de;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1451: FILE: include/linux/klist.h:26:
+} __attribute__ ((aligned (4)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(4) over __attribute__((aligned(4)))
#1451: FILE: include/linux/klist.h:26:
+} __attribute__ ((aligned (4)));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1566: FILE: mm/mmap.c:1214:
+		merged_vma = vma_merge(mm, prev, addr, vma->vm_end,
+			vma->vm_flags, NULL, file, pgoff, vma_policy(vma));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000172980.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 12 warnings, 17 checks, 1364 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000172980.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
