WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
generic interfaces to use hardware breakpoint infrastructure of the system. 

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#53: FILE: kernel/hw_breakpoint.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#65: FILE: kernel/hw_breakpoint.c:13:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#66: FILE: kernel/hw_breakpoint.c:14:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/processor.h> instead of <asm/processor.h>
#95: FILE: kernel/hw_breakpoint.c:43:
+#include <asm/processor.h>

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tsk->thread
#170: FILE: kernel/hw_breakpoint.c:118:
+	struct thread_struct *thread = &(tsk->thread);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: kernel/hw_breakpoint.c:143:
+int copy_thread_hw_breakpoint(struct task_struct *tsk,
+		struct task_struct *child, unsigned long clone_flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#234: FILE: kernel/hw_breakpoint.c:182:
+		if (!arch_check_va_in_kernelspace(bp->info.address,
+								bp->info.len))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#242: FILE: kernel/hw_breakpoint.c:190:
+int __register_user_hw_breakpoint(int pos, struct task_struct *tsk,
+					struct hw_breakpoint *bp)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tsk->thread
#244: FILE: kernel/hw_breakpoint.c:192:
+	struct thread_struct *thread = &(tsk->thread);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: kernel/hw_breakpoint.c:223:
+int __modify_user_hw_breakpoint(int pos, struct task_struct *tsk,
+					struct hw_breakpoint *bp)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tsk->thread
#278: FILE: kernel/hw_breakpoint.c:226:
+	struct thread_struct *thread = &(tsk->thread);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pos >= hbp_kernel_pos'
#280: FILE: kernel/hw_breakpoint.c:228:
+	if ((pos >= hbp_kernel_pos) || (validate_settings(bp, tsk)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#302: FILE: kernel/hw_breakpoint.c:250:
+void __unregister_user_hw_breakpoint(int pos, struct task_struct *tsk,
+						struct hw_breakpoint *bp)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tsk->thread
#304: FILE: kernel/hw_breakpoint.c:252:
+	struct thread_struct *thread = &(tsk->thread);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#340: FILE: kernel/hw_breakpoint.c:288:
+	if ((hbp_kernel_pos > 0) && (!hbp_user_refcount[hbp_kernel_pos-1])) {
 	                                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hbp_kernel_pos > 0'
#340: FILE: kernel/hw_breakpoint.c:288:
+	if ((hbp_kernel_pos > 0) && (!hbp_user_refcount[hbp_kernel_pos-1])) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!hbp_user_refcount[hbp_kernel_pos-1]'
#340: FILE: kernel/hw_breakpoint.c:288:
+	if ((hbp_kernel_pos > 0) && (!hbp_user_refcount[hbp_kernel_pos-1])) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#374: FILE: kernel/hw_breakpoint.c:322:
+			hbp_kernel[j] = hbp_kernel[j-1];
 			                            ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#392: FILE: kernel/hw_breakpoint.c:340:
+static int __kprobes hw_breakpoint_exceptions_notify(

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#437: FILE: include/asm-generic/hw_breakpoint.h:1:
+#ifndef	_ASM_GENERIC_HW_BREAKPOINT_H

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#484: FILE: include/asm-generic/hw_breakpoint.h:48:
+ * ^I%HW_BREAKPOINT_RW (triggered on read or write access),$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#485: FILE: include/asm-generic/hw_breakpoint.h:49:
+ * ^I%HW_BREAKPOINT_WRITE (triggered on write access), and$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#486: FILE: include/asm-generic/hw_breakpoint.h:50:
+ * ^I%HW_BREAKPOINT_READ (triggered on read access).$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#511: FILE: include/asm-generic/hw_breakpoint.h:75:
+ * ^Iprintk(KERN_DEBUG "Inside triggered routine of breakpoint exception\n");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#512: FILE: include/asm-generic/hw_breakpoint.h:76:
+ * ^Idump_stack();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#513: FILE: include/asm-generic/hw_breakpoint.h:77:
+ *  ^I.......<more debugging output>........$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hw_breakpoint *' should also have an identifier name
#540: FILE: include/asm-generic/hw_breakpoint.h:104:
+	void (*triggered)(struct hw_breakpoint *, struct pt_regs *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#540: FILE: include/asm-generic/hw_breakpoint.h:104:
+	void (*triggered)(struct hw_breakpoint *, struct pt_regs *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000150360.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 12 warnings, 15 checks, 519 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000150360.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
