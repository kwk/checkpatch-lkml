WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#39: 
Signed-off-by:  Vitaly Luban <vitaly@luban.org>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:CODE_INDENT: code indent should use tabs where possible
#56: FILE: drivers/mmc/host/sdhci.c:102:
+        {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#56: FILE: drivers/mmc/host/sdhci.c:102:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#57: FILE: drivers/mmc/host/sdhci.c:103:
+                .vendor         = PCI_VENDOR_ID_TOKYO_ELECTRON,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#57: FILE: drivers/mmc/host/sdhci.c:103:
+                .vendor         = PCI_VENDOR_ID_TOKYO_ELECTRON,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#58: FILE: drivers/mmc/host/sdhci.c:104:
+                .device         = PCI_DEVICE_ID_ELLEN,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#58: FILE: drivers/mmc/host/sdhci.c:104:
+                .device         = PCI_DEVICE_ID_ELLEN,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#59: FILE: drivers/mmc/host/sdhci.c:105:
+                .subvendor      = PCI_ANY_ID,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: drivers/mmc/host/sdhci.c:105:
+                .subvendor      = PCI_ANY_ID,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#60: FILE: drivers/mmc/host/sdhci.c:106:
+                .subdevice      = PCI_ANY_ID,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: drivers/mmc/host/sdhci.c:106:
+                .subdevice      = PCI_ANY_ID,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#61: FILE: drivers/mmc/host/sdhci.c:107:
+        },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: drivers/mmc/host/sdhci.c:107:
+        },$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#70: FILE: drivers/mmc/host/sdhci.c:1217:
+static int __devinit sdhci_ellen_init(struct pci_dev *pdev)

ERROR:POINTER_LOCATION: "foo *      bar" should be "foo *bar"
#74: FILE: drivers/mmc/host/sdhci.c:1221:
+	void __iomem *      ioaddr;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#75: FILE: drivers/mmc/host/sdhci.c:1222:
+^I $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#78: FILE: drivers/mmc/host/sdhci.c:1225:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#82: FILE: drivers/mmc/host/sdhci.c:1229:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#83: FILE: drivers/mmc/host/sdhci.c:1230:
+^Iioaddr = ioremap_nocache(pci_resource_start(pdev, 0), $

ERROR:CODE_INDENT: code indent should use tabs where possible
#84: FILE: drivers/mmc/host/sdhci.c:1231:
+^I                         pci_resource_len(pdev, 0));$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#89: FILE: drivers/mmc/host/sdhci.c:1236:
+^I$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#92: FILE: drivers/mmc/host/sdhci.c:1239:
+	config |= (1) | (1<<3) | (1<<6);
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#92: FILE: drivers/mmc/host/sdhci.c:1239:
+	config |= (1) | (1<<3) | (1<<6);
 	                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#96: FILE: drivers/mmc/host/sdhci.c:1243:
+^I$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#103: FILE: drivers/mmc/host/sdhci.c:1250:
 static int __devinit sdhci_probe_slot(struct pci_dev *pdev, int slot)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pdev->vendor == PCI_VENDOR_ID_TOKYO_ELECTRON'
#115: FILE: drivers/mmc/host/sdhci.c:1270:
+	if ((pdev->vendor == PCI_VENDOR_ID_TOKYO_ELECTRON) &&
+	    (pdev->device == PCI_DEVICE_ID_ELLEN)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pdev->device == PCI_DEVICE_ID_ELLEN'
#115: FILE: drivers/mmc/host/sdhci.c:1270:
+	if ((pdev->vendor == PCI_VENDOR_ID_TOKYO_ELECTRON) &&
+	    (pdev->device == PCI_DEVICE_ID_ELLEN)) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#120: FILE: drivers/mmc/host/sdhci.c:1275:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#120: FILE: drivers/mmc/host/sdhci.c:1275:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#134: FILE: drivers/mmc/host/sdhci.c:1289:
+	if ((temp = pci_resource_len(pdev, first_bar + slot)) != iomemsize) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#135: FILE: drivers/mmc/host/sdhci.c:1290:
+		printk(KERN_ERR DRIVER_NAME ": Invalid iomem size %x. "

WARNING:SPLIT_STRING: quoted string split across lines
#136: FILE: drivers/mmc/host/sdhci.c:1291:
+		printk(KERN_ERR DRIVER_NAME ": Invalid iomem size %x. "
+			"You may experience problems.\n", temp);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pdev->vendor == PCI_VENDOR_ID_TOKYO_ELECTRON'
#144: FILE: drivers/mmc/host/sdhci.c:1580:
+	if ((pdev->vendor == PCI_VENDOR_ID_TOKYO_ELECTRON) &&
+	    (pdev->device == PCI_DEVICE_ID_ELLEN)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pdev->device == PCI_DEVICE_ID_ELLEN'
#144: FILE: drivers/mmc/host/sdhci.c:1580:
+	if ((pdev->vendor == PCI_VENDOR_ID_TOKYO_ELECTRON) &&
+	    (pdev->device == PCI_DEVICE_ID_ELLEN)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: drivers/mmc/host/sdhci.c:1585:
+^I^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#150: FILE: drivers/mmc/host/sdhci.c:1586:
+		if( rev & 0x1 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#150: FILE: drivers/mmc/host/sdhci.c:1586:
+		if( rev & 0x1 ) {

ERROR:SPACING: space required before the open parenthesis '('
#150: FILE: drivers/mmc/host/sdhci.c:1586:
+		if( rev & 0x1 ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#154: FILE: drivers/mmc/host/sdhci.c:1590:
+^I^I$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000351975.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 21 errors, 11 warnings, 7 checks, 117 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000351975.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
