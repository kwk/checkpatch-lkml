WARNING:LINE_SPACING: Missing a blank line after declarations
#70: FILE: arch/x86/kernel/ptrace_64.c:205:
+		int dsize = test_tsk_thread_flag(child, TIF_IA32) ? 3 : 7;
+		if (unlikely(data >= TASK_SIZE_OF(child) - dsize))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#75: FILE: arch/x86/kernel/ptrace_64.c:210:
+	case 0:		child->thread.debugreg0 = data; break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#76: FILE: arch/x86/kernel/ptrace_64.c:211:
+	case 1:		child->thread.debugreg1 = data; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#77: FILE: arch/x86/kernel/ptrace_64.c:212:
+	case 2:		child->thread.debugreg2 = data; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#78: FILE: arch/x86/kernel/ptrace_64.c:213:
+	case 3:		child->thread.debugreg3 = data; break;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#92: FILE: arch/x86/kernel/ptrace_64.c:227:
+			if ((0x5554 >> ((data >> (16 + 4*i)) & 0xf)) & 1)
 			                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#119: FILE: arch/x86/kernel/ptrace_64.c:262:
+		if (addr < sizeof(struct user_regs_struct))
[...]
-			break;
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#164: FILE: arch/x86/kernel/ptrace_64.c:285:
+		if (addr < sizeof(struct user_regs_struct))
[...]
-			break;
[...]

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#228: FILE: include/asm-x86/ptrace.h:113:
+extern unsigned long ptrace_get_debugreg(struct task_struct *child, int n);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#229: FILE: include/asm-x86/ptrace.h:114:
+extern int ptrace_set_debugreg(struct task_struct *child, int n, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#229: FILE: include/asm-x86/ptrace.h:114:
+extern int ptrace_set_debugreg(struct task_struct *child, int n, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000354206.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 2 warnings, 5 checks, 179 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000354206.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
