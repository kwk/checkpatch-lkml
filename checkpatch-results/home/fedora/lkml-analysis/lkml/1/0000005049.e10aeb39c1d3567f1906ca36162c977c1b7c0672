WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#47: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#52: FILE: fs/ceph/ceph_fs.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#67: FILE: fs/ceph/ceph_fs.c:16:
+	if (!su || (su & (CEPH_MIN_STRIPE_UNIT-1)))
 	                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#69: FILE: fs/ceph/ceph_fs.c:18:
+	if (!os || (os & (CEPH_MIN_STRIPE_UNIT-1)))
 	                                      ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#80: FILE: fs/ceph/ceph_fs.c:29:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#132: FILE: fs/ceph/ceph_fs.h:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#176: FILE: fs/ceph/ceph_fs.h:45:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#183: FILE: fs/ceph/ceph_fs.h:52:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#190: FILE: fs/ceph/ceph_fs.h:59:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#197: FILE: fs/ceph/ceph_fs.h:66:
+	__le32 fl_stripe_unit;     /* stripe unit, in bytes.  must be multiple
+				      of page size. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#197: FILE: fs/ceph/ceph_fs.h:66:
+				      of page size. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#200: FILE: fs/ceph/ceph_fs.h:69:
+	__le32 fl_object_size;     /* until objects are this big, then move to
+				      new objects */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#200: FILE: fs/ceph/ceph_fs.h:69:
+				      new objects */

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#209: FILE: fs/ceph/ceph_fs.h:78:
+} __attribute__ ((packed));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#215: FILE: fs/ceph/ceph_fs.h:84:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#222: FILE: fs/ceph/ceph_fs.h:91:
+#define CEPH_AUTH_NONE^I ^I0x1$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#223: FILE: fs/ceph/ceph_fs.h:92:
+#define CEPH_AUTH_CEPHX^I ^I0x2$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#225: FILE: fs/ceph/ceph_fs.h:94:
+
+

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#271: FILE: fs/ceph/ceph_fs.h:140:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#276: FILE: fs/ceph/ceph_fs.h:145:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#281: FILE: fs/ceph/ceph_fs.h:150:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#287: FILE: fs/ceph/ceph_fs.h:156:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#293: FILE: fs/ceph/ceph_fs.h:162:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#298: FILE: fs/ceph/ceph_fs.h:167:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#302: FILE: fs/ceph/ceph_fs.h:171:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#307: FILE: fs/ceph/ceph_fs.h:176:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#312: FILE: fs/ceph/ceph_fs.h:181:
+} __attribute__ ((packed));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#321: FILE: fs/ceph/ceph_fs.h:190:
+#define CEPH_MDS_STATE_STOPPED     -1  /* down, once existed, but no subtrees.
+					  empty log. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#321: FILE: fs/ceph/ceph_fs.h:190:
+					  empty log. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#330: FILE: fs/ceph/ceph_fs.h:199:
+#define CEPH_MDS_STATE_RESOLVE      9  /* up, disambiguating distributed
+					  operations (import, rename, etc.) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#330: FILE: fs/ceph/ceph_fs.h:199:
+					  operations (import, rename, etc.) */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#337: FILE: fs/ceph/ceph_fs.h:206:
+extern const char *ceph_mds_state_name(int s);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#339: FILE: fs/ceph/ceph_fs.h:208:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#369: FILE: fs/ceph/ceph_fs.h:238:
+extern const char *ceph_session_op_name(int op);

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#376: FILE: fs/ceph/ceph_fs.h:245:
+} __attribute__ ((packed));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#415: FILE: fs/ceph/ceph_fs.h:284:
+extern const char *ceph_mds_op_name(int op);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#417: FILE: fs/ceph/ceph_fs.h:286:
+
+

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#429: FILE: fs/ceph/ceph_fs.h:298:
+	} __attribute__ ((packed)) getattr;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#438: FILE: fs/ceph/ceph_fs.h:307:
+	} __attribute__ ((packed)) setattr;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#442: FILE: fs/ceph/ceph_fs.h:311:
+	} __attribute__ ((packed)) readdir;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#446: FILE: fs/ceph/ceph_fs.h:315:
+	} __attribute__ ((packed)) mknod;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#449: FILE: fs/ceph/ceph_fs.h:318:
+	} __attribute__ ((packed)) mkdir;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#458: FILE: fs/ceph/ceph_fs.h:327:
+	} __attribute__ ((packed)) open;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#461: FILE: fs/ceph/ceph_fs.h:330:
+	} __attribute__ ((packed)) setxattr;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#464: FILE: fs/ceph/ceph_fs.h:333:
+	} __attribute__ ((packed)) setlayout;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#465: FILE: fs/ceph/ceph_fs.h:334:
+} __attribute__ ((packed));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#479: FILE: fs/ceph/ceph_fs.h:348:
+	__le64 ino;                    /* use this ino for openc, mkdir, mknod,
+					  etc. (if replaying) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#479: FILE: fs/ceph/ceph_fs.h:348:
+					  etc. (if replaying) */

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#481: FILE: fs/ceph/ceph_fs.h:350:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#490: FILE: fs/ceph/ceph_fs.h:359:
+} __attribute__ ((packed));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#499: FILE: fs/ceph/ceph_fs.h:368:
+	__u8 is_dentry, is_target;     /* true if dentry, target inode records
+					  are included with reply */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#499: FILE: fs/ceph/ceph_fs.h:368:
+					  are included with reply */

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#500: FILE: fs/ceph/ceph_fs.h:369:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#506: FILE: fs/ceph/ceph_fs.h:375:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#511: FILE: fs/ceph/ceph_fs.h:380:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#520: FILE: fs/ceph/ceph_fs.h:389:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#542: FILE: fs/ceph/ceph_fs.h:411:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#550: FILE: fs/ceph/ceph_fs.h:419:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#557: FILE: fs/ceph/ceph_fs.h:426:
+} __attribute__ ((packed));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#569: FILE: fs/ceph/ceph_fs.h:438:
+
+

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#598: FILE: fs/ceph/ceph_fs.h:467:
+#define CEPH_CAP_FILE(x)    (x << CEPH_CAP_SFILE)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#665: FILE: fs/ceph/ceph_fs.h:534:
+extern const char *ceph_cap_op_name(int op);

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#696: FILE: fs/ceph/ceph_fs.h:565:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#701: FILE: fs/ceph/ceph_fs.h:570:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#707: FILE: fs/ceph/ceph_fs.h:576:
+} __attribute__ ((packed));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#714: FILE: fs/ceph/ceph_fs.h:583:
+extern const char *ceph_lease_op_name(int o);

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#724: FILE: fs/ceph/ceph_fs.h:593:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#736: FILE: fs/ceph/ceph_fs.h:605:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#743: FILE: fs/ceph/ceph_fs.h:612:
+} __attribute__ ((packed));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#755: FILE: fs/ceph/ceph_fs.h:624:
+extern const char *ceph_snap_op_name(int o);

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#764: FILE: fs/ceph/ceph_fs.h:633:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#778: FILE: fs/ceph/ceph_fs.h:647:
+} __attribute__ ((packed));

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#783: FILE: fs/ceph/ceph_strings.c:650:
new file mode 100644

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#788: FILE: fs/ceph/ceph_strings.c:1:
+/*

WARNING:TYPO_SPELLING: 'dne' may be misspelled - perhaps 'done'?
#860: FILE: fs/ceph/ceph_strings.c:73:
+	case CEPH_MDS_STATE_DNE:        return "down:dne";
 	                                             ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#970: FILE: fs/ceph/msgr.h:1:
+#ifndef __MSGR_H

CHECK:LINE_SPACING: Please don't use multiple blank lines
#996: FILE: fs/ceph/msgr.h:27:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1005: FILE: fs/ceph/msgr.h:36:
+       return (__s32)a - (__s32)b;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1008: FILE: fs/ceph/msgr.h:39:
+
+

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1016: FILE: fs/ceph/msgr.h:47:
+} __attribute__ ((packed));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1027: FILE: fs/ceph/msgr.h:58:
+extern const char *ceph_entity_type_name(int type);

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1036: FILE: fs/ceph/msgr.h:67:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1041: FILE: fs/ceph/msgr.h:72:
+} __attribute__ ((packed));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1043: FILE: fs/ceph/msgr.h:74:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1048: FILE: fs/ceph/msgr.h:79:
+#define CEPH_MSGR_TAG_WAIT          3  /* server->client: wait for racing
+					  incoming connection */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1048: FILE: fs/ceph/msgr.h:79:
+					  incoming connection */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1050: FILE: fs/ceph/msgr.h:81:
+#define CEPH_MSGR_TAG_RETRY_SESSION 4  /* server->client + cseq: try again
+					  with higher cseq */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1050: FILE: fs/ceph/msgr.h:81:
+					  with higher cseq */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1052: FILE: fs/ceph/msgr.h:83:
+#define CEPH_MSGR_TAG_RETRY_GLOBAL  5  /* server->client + gseq: try again
+					  with higher gseq */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1052: FILE: fs/ceph/msgr.h:83:
+					  with higher gseq */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1061: FILE: fs/ceph/msgr.h:92:
+
+

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1074: FILE: fs/ceph/msgr.h:105:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1084: FILE: fs/ceph/msgr.h:115:
+} __attribute__ ((packed));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1088: FILE: fs/ceph/msgr.h:119:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1103: FILE: fs/ceph/msgr.h:134:
+	__le16 data_off;  /* sender: include full offset;
+			     receiver: mask against ~PAGE_MASK */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1103: FILE: fs/ceph/msgr.h:134:
+			     receiver: mask against ~PAGE_MASK */

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1108: FILE: fs/ceph/msgr.h:139:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1121: FILE: fs/ceph/msgr.h:152:
+} __attribute__ ((packed));

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1123: FILE: fs/ceph/msgr.h:154:
+#define CEPH_MSG_FOOTER_COMPLETE  (1<<0)   /* msg wasn't aborted */
                                     ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1123: FILE: fs/ceph/msgr.h:154:
+#define CEPH_MSG_FOOTER_COMPLETE  (1<<0)   /* msg wasn't aborted */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1124: FILE: fs/ceph/msgr.h:155:
+#define CEPH_MSG_FOOTER_NOCRC     (1<<1)   /* no data crc */
                                     ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1124: FILE: fs/ceph/msgr.h:155:
+#define CEPH_MSG_FOOTER_NOCRC     (1<<1)   /* no data crc */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1126: FILE: fs/ceph/msgr.h:157:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1134: FILE: fs/ceph/rados.h:1:
+#ifndef __RADOS_H

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1174: FILE: fs/ceph/rados.h:41:
+} __attribute__ ((packed));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1176: FILE: fs/ceph/rados.h:43:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1192: FILE: fs/ceph/rados.h:59:
+
+

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1201: FILE: fs/ceph/rados.h:68:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1236: FILE: fs/ceph/rados.h:103:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1261: FILE: fs/ceph/rados.h:128:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1269: FILE: fs/ceph/rados.h:136:
+} __attribute__ ((packed));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1283: FILE: fs/ceph/rados.h:150:
+
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1287: FILE: fs/ceph/rados.h:154:
+#define CEPH_OSDMAP_NEARFULL (1<<0)  /* sync writes (near ENOSPC) */
                                ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1287: FILE: fs/ceph/rados.h:154:
+#define CEPH_OSDMAP_NEARFULL (1<<0)  /* sync writes (near ENOSPC) */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1288: FILE: fs/ceph/rados.h:155:
+#define CEPH_OSDMAP_FULL     (1<<1)  /* no data writes (ENOSPC) */
                                ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1288: FILE: fs/ceph/rados.h:155:
+#define CEPH_OSDMAP_FULL     (1<<1)  /* no data writes (ENOSPC) */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1289: FILE: fs/ceph/rados.h:156:
+#define CEPH_OSDMAP_PAUSERD  (1<<2)  /* pause all reads */
                                ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1289: FILE: fs/ceph/rados.h:156:
+#define CEPH_OSDMAP_PAUSERD  (1<<2)  /* pause all reads */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1290: FILE: fs/ceph/rados.h:157:
+#define CEPH_OSDMAP_PAUSEWR  (1<<3)  /* pause all writes */
                                ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1290: FILE: fs/ceph/rados.h:157:
+#define CEPH_OSDMAP_PAUSEWR  (1<<3)  /* pause all writes */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1291: FILE: fs/ceph/rados.h:158:
+#define CEPH_OSDMAP_PAUSEREC (1<<4)  /* pause recovery */
                                ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1291: FILE: fs/ceph/rados.h:158:
+#define CEPH_OSDMAP_PAUSEREC (1<<4)  /* pause recovery */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1345: FILE: fs/ceph/rados.h:212:
+	CEPH_OSD_OP_RESETXATTRS = CEPH_OSD_OP_MODE_WR|CEPH_OSD_OP_TYPE_ATTR | 3,
 	                                             ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1374: FILE: fs/ceph/rados.h:241:
+}
+static inline int ceph_osd_op_type_data(int op)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1378: FILE: fs/ceph/rados.h:245:
+}
+static inline int ceph_osd_op_type_attr(int op)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1382: FILE: fs/ceph/rados.h:249:
+}
+static inline int ceph_osd_op_type_exec(int op)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1386: FILE: fs/ceph/rados.h:253:
+}
+static inline int ceph_osd_op_type_pg(int op)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1395: FILE: fs/ceph/rados.h:262:
+}
+static inline int ceph_osd_op_mode_read(int op)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1399: FILE: fs/ceph/rados.h:266:
+}
+static inline int ceph_osd_op_mode_modify(int op)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1408: FILE: fs/ceph/rados.h:275:
+extern const char *ceph_osd_op_name(int op);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1410: FILE: fs/ceph/rados.h:277:
+
+

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1450: FILE: fs/ceph/rados.h:317:
+		} __attribute__ ((packed)) extent;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1454: FILE: fs/ceph/rados.h:321:
+		} __attribute__ ((packed)) xattr;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1460: FILE: fs/ceph/rados.h:327:
+		} __attribute__ ((packed)) cls;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1463: FILE: fs/ceph/rados.h:330:
+		} __attribute__ ((packed)) pgls;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1466: FILE: fs/ceph/rados.h:333:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1490: FILE: fs/ceph/rados.h:357:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1504: FILE: fs/ceph/rados.h:371:
+} __attribute__ ((packed));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1506: FILE: fs/ceph/rados.h:373:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000005049.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 86 warnings, 52 checks, 1435 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000005049.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
