WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#153: FILE: fs/union.c:707:
+	BUG_ON(r->cur_off > r->last_off);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#155: FILE: fs/union.c:709:
+	/* If offsets already uptodate, just return */
 	                      ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#289: FILE: include/linux/fs.h:806:
+	loff_t fill_off;	/* Fill cache upto this offset. Used during
 	                	              ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#290: FILE: include/linux/fs.h:807:
+	loff_t fill_off;	/* Fill cache upto this offset. Used during
+				   seek */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#290: FILE: include/linux/fs.h:807:
+				   seek */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#293: FILE: include/linux/fs.h:810:
+	struct rdcache_entry *cur_dirent;	/* pointer to current directory
+				entry in rdcache which corresponds to cur_off */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#293: FILE: include/linux/fs.h:810:
+				entry in rdcache which corresponds to cur_off */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#309: FILE: include/linux/union.h:58:
+extern loff_t llseek_union(struct file *, loff_t, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#309: FILE: include/linux/union.h:58:
+extern loff_t llseek_union(struct file *, loff_t, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#309: FILE: include/linux/union.h:58:
+extern loff_t llseek_union(struct file *, loff_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#309: FILE: include/linux/union.h:58:
+extern loff_t llseek_union(struct file *, loff_t, int);

CHECK:BRACES: Unbalanced braces around else statement
#325: FILE: include/linux/union.h:122:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#328: FILE: include/linux/union.h:125:
+		loff_t (*fn)(struct file *, loff_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#328: FILE: include/linux/union.h:125:
+		loff_t (*fn)(struct file *, loff_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#328: FILE: include/linux/union.h:125:
+		loff_t (*fn)(struct file *, loff_t, int);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000350671.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 13 warnings, 2 checks, 282 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000350671.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
