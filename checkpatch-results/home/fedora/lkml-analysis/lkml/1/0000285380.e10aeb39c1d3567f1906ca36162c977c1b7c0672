CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#103: FILE: fs/namei.c:1583:
+static int vfs_create(struct inode *dir, struct dentry *dentry, int mode,
 		struct nameidata *nd)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#111: FILE: fs/namei.c:1605:
+		struct nameidata *nd)
 		                  ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#116: FILE: fs/namei.c:1610:
+		error = vfs_create(dir_path->dentry->d_inode, dentry, mode, nd);
 		                                                            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#191: FILE: fs/namei.c:2102:
+		error = path_create(&nd.path, dentry, mode, &nd);
 		                     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#191: FILE: fs/namei.c:2102:
+		error = path_create(&nd.path, dentry, mode, &nd);
 		                                             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#194: FILE: fs/namei.c:2105:
+		error = path_mknod(&nd.path, dentry, mode, new_decode_dev(dev));
 		                    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#197: FILE: fs/namei.c:2108:
+		error = path_mknod(&nd.path, dentry, mode, 0);
 		                    ^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#231: FILE: include/linux/fs.h:1127:
+extern int path_create(struct path *, struct dentry *, int, struct nameidata *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct path *' should also have an identifier name
#231: FILE: include/linux/fs.h:1127:
+extern int path_create(struct path *, struct dentry *, int, struct nameidata *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#231: FILE: include/linux/fs.h:1127:
+extern int path_create(struct path *, struct dentry *, int, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#231: FILE: include/linux/fs.h:1127:
+extern int path_create(struct path *, struct dentry *, int, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nameidata *' should also have an identifier name
#231: FILE: include/linux/fs.h:1127:
+extern int path_create(struct path *, struct dentry *, int, struct nameidata *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#234: FILE: include/linux/fs.h:1129:
+extern int path_mknod(struct path *, struct dentry *, int, dev_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct path *' should also have an identifier name
#234: FILE: include/linux/fs.h:1129:
+extern int path_mknod(struct path *, struct dentry *, int, dev_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#234: FILE: include/linux/fs.h:1129:
+extern int path_mknod(struct path *, struct dentry *, int, dev_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#234: FILE: include/linux/fs.h:1129:
+extern int path_mknod(struct path *, struct dentry *, int, dev_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dev_t' should also have an identifier name
#234: FILE: include/linux/fs.h:1129:
+extern int path_mknod(struct path *, struct dentry *, int, dev_t);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#268: FILE: fs/ecryptfs/inode.c:75:
+	rc = path_create(&nd->path, lower_dentry, mode, nd);
 	                                                ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#347: FILE: net/unix/af_unix.c:822:
+		err = path_mknod(&nd.path, dentry, mode, 0);
 		                  ^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#405: FILE: fs/nfsd/vfs.c:1324:
+^Istruct path ^Idir_path;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000285380.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 17 warnings, 3 checks, 283 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000285380.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
