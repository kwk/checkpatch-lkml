WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

CHECK:LINE_SPACING: Please don't use multiple blank lines
#77: FILE: drivers/iio/accel/lis3l02dq.h:186:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#89: FILE: drivers/iio/accel/lis3l02dq.h:198:
+
+

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#108: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#113: FILE: drivers/iio/accel/lis3l02dq_ring.c:1:
+#include <linux/interrupt.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LINE_SPACING: Missing a blank line after declarations
#138: FILE: drivers/iio/accel/lis3l02dq_ring.c:26:
+	u16 _upper = upper;
+	return _lower | (_upper << 8);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#188: FILE: drivers/iio/accel/lis3l02dq_ring.c:76:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#189: FILE: drivers/iio/accel/lis3l02dq_ring.c:77:
+}
+static IIO_SCAN_EL_C(accel_x, LIS3L02DQ_SCAN_ACC_X, IIO_SIGNED(16),

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: drivers/iio/accel/lis3l02dq_ring.c:107:
+  struct lis3l02dq_state *st = iio_dev_get_devdata(indio_dev);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#235: FILE: drivers/iio/accel/lis3l02dq_ring.c:123:
+static int lis3l02dq_data_rdy_trig_poll(struct iio_dev *dev_info,
+				       int index,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#283: FILE: drivers/iio/accel/lis3l02dq_ring.c:171:
+		if (data == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#304: FILE: drivers/iio/accel/lis3l02dq_ring.c:192:
+
+}

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#307: FILE: drivers/iio/accel/lis3l02dq_ring.c:195:
+static const u8 read_all_tx_array[] =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'recieve' may be misspelled - perhaps 'receive'?
#319: FILE: drivers/iio/accel/lis3l02dq_ring.c:207:
+ * @rx_array:	(dma capable) recieve array, must be at least
              	              ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#335: FILE: drivers/iio/accel/lis3l02dq_ring.c:223:
+	for (i = 0; i < ARRAY_SIZE(read_all_tx_array)/4; i++) {
 	                                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#338: FILE: drivers/iio/accel/lis3l02dq_ring.c:226:
+			xfers[j].tx_buf = st->tx + 2*j;
 			                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#339: FILE: drivers/iio/accel/lis3l02dq_ring.c:227:
+			st->tx[2*j] = read_all_tx_array[i*4];
 			        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#339: FILE: drivers/iio/accel/lis3l02dq_ring.c:227:
+			st->tx[2*j] = read_all_tx_array[i*4];
 			                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#340: FILE: drivers/iio/accel/lis3l02dq_ring.c:228:
+			st->tx[2*j + 1] = 0;
 			        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#342: FILE: drivers/iio/accel/lis3l02dq_ring.c:230:
+				xfers[j].rx_buf = rx_array + j*2;
 				                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#349: FILE: drivers/iio/accel/lis3l02dq_ring.c:237:
+			xfers[j].tx_buf = st->tx + 2*j;
 			                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#350: FILE: drivers/iio/accel/lis3l02dq_ring.c:238:
+			st->tx[2*j] = read_all_tx_array[i*4 + 2];
 			        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#350: FILE: drivers/iio/accel/lis3l02dq_ring.c:238:
+			st->tx[2*j] = read_all_tx_array[i*4 + 2];
 			                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#351: FILE: drivers/iio/accel/lis3l02dq_ring.c:239:
+			st->tx[2*j + 1] = 0;
 			        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#353: FILE: drivers/iio/accel/lis3l02dq_ring.c:241:
+				xfers[j].rx_buf = rx_array + j*2;
 				                              ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#374: FILE: drivers/iio/accel/lis3l02dq_ring.c:262:
+
+

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#381: FILE: drivers/iio/accel/lis3l02dq_ring.c:269:
+	struct lis3l02dq_state *st
+		= container_of(work_s, struct lis3l02dq_state,

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#390: FILE: drivers/iio/accel/lis3l02dq_ring.c:278:
+	data = kmalloc(datasize , GFP_KERNEL);
 	                        ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#391: FILE: drivers/iio/accel/lis3l02dq_ring.c:279:
+	if (data == NULL) {

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#392: FILE: drivers/iio/accel/lis3l02dq_ring.c:280:
+	if (data == NULL) {
+		dev_err(&st->us->dev, "memory alloc failed in ring bh");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rx_array"
#399: FILE: drivers/iio/accel/lis3l02dq_ring.c:287:
+	if (rx_array == NULL) {

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#400: FILE: drivers/iio/accel/lis3l02dq_ring.c:288:
+	if (rx_array == NULL) {
+		dev_err(&st->us->dev, "memory alloc failed in ring bh");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#405: FILE: drivers/iio/accel/lis3l02dq_ring.c:293:
+	/* whilst trigger specific, if this read does nto occur the data
+	   ready interrupt will not be cleared.  Need to add a mechanism

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#414: FILE: drivers/iio/accel/lis3l02dq_ring.c:302:
+				data[i] = combine_8_to_16(rx_array[i*4+1],
 				                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#414: FILE: drivers/iio/accel/lis3l02dq_ring.c:302:
+				data[i] = combine_8_to_16(rx_array[i*4+1],
 				                                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#415: FILE: drivers/iio/accel/lis3l02dq_ring.c:303:
+							  rx_array[i*4+3]);
 							            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#415: FILE: drivers/iio/accel/lis3l02dq_ring.c:303:
+							  rx_array[i*4+3]);
 							              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#418: FILE: drivers/iio/accel/lis3l02dq_ring.c:306:
+		*((s64 *)(data + ((i + 3)/4)*4)) = st->last_timestamp;
 		                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#418: FILE: drivers/iio/accel/lis3l02dq_ring.c:306:
+		*((s64 *)(data + ((i + 3)/4)*4)) = st->last_timestamp;
 		                            ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#429: FILE: drivers/iio/accel/lis3l02dq_ring.c:317:
+	return;
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#430: FILE: drivers/iio/accel/lis3l02dq_ring.c:318:
+}
+/* in these circumstances is it better to go with unaligned packing and

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#431: FILE: drivers/iio/accel/lis3l02dq_ring.c:319:
+ * deal with the cost?*/

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#442: FILE: drivers/iio/accel/lis3l02dq_ring.c:330:
+				size = 2*sizeof(s64);
 				        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#446: FILE: drivers/iio/accel/lis3l02dq_ring.c:334:
+			size = indio_dev->scan_count*sizeof(s16);
 			                            ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#469: FILE: drivers/iio/accel/lis3l02dq_ring.c:357:
+
+

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#473: FILE: drivers/iio/accel/lis3l02dq_ring.c:361:
+					       iio_event_handler_list *list,
 					                              ^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#489: FILE: drivers/iio/accel/lis3l02dq_ring.c:377:
+	currentlyset
+		= valold & LIS3L02DQ_REG_CTRL_2_ENABLE_DATA_READY_GENERATION;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#493: FILE: drivers/iio/accel/lis3l02dq_ring.c:381:
+	if (!state && currentlyset) {
+

WARNING:TYPO_SPELLING: 'reenabled' may be misspelled - perhaps 're-enabled'?
#533: FILE: drivers/iio/accel/lis3l02dq_ring.c:421:
+ * switched before the ring is reenabled.
                                ^^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#541: FILE: drivers/iio/accel/lis3l02dq_ring.c:429:
+	u8 t;
+	__lis3l02dq_write_data_ready_config(&st->indio_dev->dev,

CHECK:BOOL_COMPARISON: Using comparison to false is error prone
#544: FILE: drivers/iio/accel/lis3l02dq_ring.c:432:
+	if (state == false) {

Comparisons of A to true and false are better written
as A and !A.

See: https://lore.kernel.org/lkml/1365563834.27174.12.camel@joe-AO722/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#546: FILE: drivers/iio/accel/lis3l02dq_ring.c:434:
+		/* possible quirk with handler currently worked around
+		   by ensuring the work queue is empty */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#546: FILE: drivers/iio/accel/lis3l02dq_ring.c:434:
+		   by ensuring the work queue is empty */

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'iio_trigger_read_name' to 'name_show'
#555: FILE: drivers/iio/accel/lis3l02dq_ring.c:443:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#556: FILE: drivers/iio/accel/lis3l02dq_ring.c:444:
+DEVICE_ATTR(name, S_IRUGO, iio_trigger_read_name, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#573: FILE: drivers/iio/accel/lis3l02dq_ring.c:461:
+ * trigger event.  The only way to discover if this has occured on
                                                         ^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#582: FILE: drivers/iio/accel/lis3l02dq_ring.c:470:
+	struct lis3l02dq_state *st = trig->private_data;
+	enable_irq(st->us->irq);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#590: FILE: drivers/iio/accel/lis3l02dq_ring.c:478:
+				 * and disable */

WARNING:TYPO_SPELLING: 'reenabled' may be misspelled - perhaps 're-enabled'?
#596: FILE: drivers/iio/accel/lis3l02dq_ring.c:484:
+	/* irq reenabled so success! */
 	       ^^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#654: FILE: drivers/iio/accel/lis3l02dq_ring.c:542:
+	struct iio_ring_buffer *ring;
+	INIT_WORK(&st->work_trigger_to_ring, lis3l02dq_trigger_bh_to_ring);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!indio_dev->pollfunc"
#678: FILE: drivers/iio/accel/lis3l02dq_ring.c:566:
+	if (indio_dev->pollfunc == NULL) {

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#680: FILE: drivers/iio/accel/lis3l02dq_ring.c:568:
+		goto error_iio_sw_rb_free;;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#702: FILE: drivers/iio/accel/lis3l02dq_ring.c:590:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#711: FILE: drivers/iio/accel/lis3l02dq_ring.c:599:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000101236.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 23 warnings, 39 checks, 638 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000101236.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
