WARNING:TYPO_SPELLING: 'competion' may be misspelled - perhaps 'competition'?
#41: 
  of disk bandwidth in the face of competion from continusouly backlogged
                                   ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'commnad' may be misspelled - perhaps 'command'?
#43: 
  and disks with commnad queuing.
                 ^^^^^^^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#118: FILE: block/elevator-fq.c:2009:
+EXPORT_SYMBOL(elv_fairness_show);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#127: FILE: block/elevator-fq.c:2035:
+EXPORT_SYMBOL(elv_fairness_store);

CHECK:BRACES: braces {} should be used on all arms of this statement
#283: FILE: block/elevator-fq.c:2861:
+		if (elv_ioq_sync(ioq) && !ioq->nr_queued
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#284: FILE: block/elevator-fq.c:2862:
+		if (elv_ioq_sync(ioq) && !ioq->nr_queued
+		    && elv_ioq_nr_dispatched(ioq)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#285: FILE: block/elevator-fq.c:2863:
+		    && elv_ioq_nr_dispatched(ioq)
+		    && (elv_iog_nr_active(ioq_to_io_group(ioq)) <= 1)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#286: FILE: block/elevator-fq.c:2864:
+		    && (elv_iog_nr_active(ioq_to_io_group(ioq)) <= 1)
+		    && !elv_ioq_wait_busy_done(ioq)) {

CHECK:BRACES: Unbalanced braces around else statement
#289: FILE: block/elevator-fq.c:2867:
+		} else

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#331: FILE: block/elevator-fq.c:3095:
+			if (sync && !ioq->nr_queued
+			    && (elv_iog_nr_active(iog) <= 1)) {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#408: FILE: block/elevator-fq.h:565:
+extern ssize_t elv_fairness_show(struct elevator_queue *q, char *name);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#409: FILE: block/elevator-fq.h:566:
+extern ssize_t elv_fairness_store(struct elevator_queue *q, const char *name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#410: FILE: block/elevator-fq.h:567:
+extern ssize_t elv_fairness_store(struct elevator_queue *q, const char *name,
+						size_t count);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000107437.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 9 checks, 319 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000107437.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
