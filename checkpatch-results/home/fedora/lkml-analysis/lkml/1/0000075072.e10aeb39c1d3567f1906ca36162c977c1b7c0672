WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#94: FILE: fs/fat/dir.c:1371:
+	BUG_ON(root_inode->i_ino != MSDOS_ROOT_INO);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#116: FILE: fs/fat/dir.c:1393:
+	BUG_ON(root_inode->i_ino != MSDOS_ROOT_INO);

CHECK:SPACING: No space is necessary after a cast
#119: FILE: fs/fat/dir.c:1396:
+	       (name) ? name : (const unsigned char *) FAT_LABEL_NONAME,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#123: FILE: fs/fat/dir.c:1400:
+	de.start = de.starthi = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#125: FILE: fs/fat/dir.c:1402:
+	de.time = de.ctime = 0;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#127: FILE: fs/fat/dir.c:1404:
+	de.date = de.adate = de.cdate = 0;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#144: FILE: fs/fat/dir.c:1421:
+	BUG_ON(root_inode->i_ino != MSDOS_ROOT_INO);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#176: FILE: fs/fat/fat.h:29:
+#define FAT_ROOT_TS_PRESERVE    2 /* read and write root dir ts as volume label
+				     timestamp */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#176: FILE: fs/fat/fat.h:29:
+				     timestamp */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#187: FILE: fs/fat/fat.h:44:
+	unsigned short root_ts;   /* root dir timestamps:
+				       ignore, preserve, save */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#187: FILE: fs/fat/fat.h:44:
+				       ignore, preserve, save */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#204: FILE: fs/fat/fat.h:262:
+extern int fat_get_label_entry(struct inode *root_inode,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#207: FILE: fs/fat/fat.h:265:
+extern int fat_add_label_entry(struct inode *root_inode,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#209: FILE: fs/fat/fat.h:267:
+extern void fat_correct_root_ts(struct inode *root_inode);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#252: FILE: fs/fat/inode.c:358:
+		inode->i_mode = fat_make_mode(sbi, attr, S_IRWXUGO);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#315: FILE: fs/fat/inode.c:415:
+		inode->i_mtime.tv_sec = inode->i_atime.tv_sec =

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#317: FILE: fs/fat/inode.c:417:
+		inode->i_mtime.tv_nsec = inode->i_atime.tv_nsec =

CHECK:BRACES: braces {} should be used on all arms of this statement
#321: FILE: fs/fat/inode.c:421:
+		if (sbi->options.isvfat) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#326: FILE: fs/fat/inode.c:426:
+		} else

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#327: FILE: fs/fat/inode.c:427:
+			inode->i_ctime = inode->i_atime = inode->i_mtime;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#343: FILE: fs/fat/inode.c:633:
+		 * as the timestamps of the file system's label dir entry. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#352: FILE: fs/fat/inode.c:642:
+				/* No label present, but we should not
+				   create one. Thus not complaining. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#352: FILE: fs/fat/inode.c:642:
+				   create one. Thus not complaining. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#355: FILE: fs/fat/inode.c:645:
+			printk(KERN_INFO "FAT: creating volume label "

WARNING:SPLIT_STRING: quoted string split across lines
#356: FILE: fs/fat/inode.c:646:
+			printk(KERN_INFO "FAT: creating volume label "
+			       "on %s to save root dir timestamps\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:CAMELCASE: Avoid CamelCase: <Opt_err_panic>
#406: FILE: fs/fat/inode.c:950:
+	Opt_err_panic, Opt_err_ro, Opt_rootts_ignore, Opt_rootts_preserve,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Opt_err_ro>
#406: FILE: fs/fat/inode.c:950:
+	Opt_err_panic, Opt_err_ro, Opt_rootts_ignore, Opt_rootts_preserve,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_rootts_ignore>
#406: FILE: fs/fat/inode.c:950:
+	Opt_err_panic, Opt_err_ro, Opt_rootts_ignore, Opt_rootts_preserve,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_rootts_preserve>
#406: FILE: fs/fat/inode.c:950:
+	Opt_err_panic, Opt_err_ro, Opt_rootts_ignore, Opt_rootts_preserve,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_rootts_save>
#407: FILE: fs/fat/inode.c:951:
+	Opt_rootts_save, Opt_err,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_err>
#407: FILE: fs/fat/inode.c:951:
+	Opt_rootts_save, Opt_err,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#473: FILE: fs/fat/inode.c:1272:
+	/* Try to restore the root dir's timestamps from the FAT volume label
+	   entry */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#473: FILE: fs/fat/inode.c:1272:
+	   entry */

CHECK:BRACES: braces {} should be used on all arms of this statement
#484: FILE: fs/fat/inode.c:1279:
+		if (!error) {
[...]
+		} else if (error == -ENOENT)
[...]

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000075072.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 15 warnings, 19 checks, 409 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000075072.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
