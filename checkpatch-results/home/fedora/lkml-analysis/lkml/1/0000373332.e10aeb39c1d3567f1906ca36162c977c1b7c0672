WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
minix_iget() then uses iget_locked() directly and returns a proper error code

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#115: FILE: fs/minix/inode.c:400:
+static struct inode *V1_minix_iget(struct inode * inode)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#142: FILE: fs/minix/inode.c:433:
+static struct inode *V2_minix_iget(struct inode * inode)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#196: FILE: fs/minix/minix.h:48:
+extern struct inode *minix_iget(struct super_block *, unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#196: FILE: fs/minix/minix.h:48:
+extern struct inode *minix_iget(struct super_block *, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#196: FILE: fs/minix/minix.h:48:
+extern struct inode *minix_iget(struct super_block *, unsigned long);

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: fs/minix/namei.c:58:
+ ^I^Iif (IS_ERR(inode))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#213: FILE: fs/minix/namei.c:58:
+ ^I^Iif (IS_ERR(inode))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: fs/minix/namei.c:58:
+ ^I^Iif (IS_ERR(inode))$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000373332.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 5 warnings, 1 checks, 144 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000373332.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
