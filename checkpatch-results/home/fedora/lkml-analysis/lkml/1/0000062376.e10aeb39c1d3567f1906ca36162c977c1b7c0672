WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#86: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#91: FILE: drivers/ata/pata_altera_cf.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#109: FILE: drivers/ata/pata_altera_cf.c:19:
+ *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#143: FILE: drivers/ata/pata_altera_cf.c:53:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#163: FILE: drivers/ata/pata_altera_cf.c:73:
+#define ALTCF_CFC_REG_IDECTL	(1 << ALTCF_SHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#213: FILE: drivers/ata/pata_altera_cf.c:123:
+static void update_cfctl(struct altcf_private *altcf,
+		unsigned char mask, unsigned char set)

WARNING:MEMORY_BARRIER: memory barrier without comment
#232: FILE: drivers/ata/pata_altera_cf.c:142:
+	smp_mb();

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#280: FILE: drivers/ata/pata_altera_cf.c:190:
+	if (test_bit(EV_CHANGE, &altcf->event)
+			|| test_bit(EV_DEAD, &altcf->event)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#287: FILE: drivers/ata/pata_altera_cf.c:197:
+	if (test_bit(EV_CHANGE, &altcf->event)
+			|| test_bit(EV_DEAD, &altcf->event)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!group_id"
#293: FILE: drivers/ata/pata_altera_cf.c:203:
+	if (group_id == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!host"
#300: FILE: drivers/ata/pata_altera_cf.c:210:
+	if (host == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#333: FILE: drivers/ata/pata_altera_cf.c:243:
+	ata_port_desc(ap, "mmio cmd 0x%llx ctl 0x%llx",
+			(unsigned long long)altcf->ide_raw_base,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#343: FILE: drivers/ata/pata_altera_cf.c:253:
+	if (ata_host_activate(host, altcf->ide_irq,
+				altcf->ide_irq ? ata_sff_interrupt : NULL,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'altcf_thread', this function's name, in a string
#404: FILE: drivers/ata/pata_altera_cf.c:314:
+		dev_dbg(altcf->dev, "altcf_thread loop\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#407: FILE: drivers/ata/pata_altera_cf.c:317:
+		while (!kthread_should_stop()
+				&& (test_bit(EV_HOLD, &altcf->event)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#408: FILE: drivers/ata/pata_altera_cf.c:318:
+				&& (test_bit(EV_HOLD, &altcf->event)
+					|| (!test_and_clear_bit(EV_CHANGE,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#410: FILE: drivers/ata/pata_altera_cf.c:320:
+							&altcf->event)
+						&& !test_bit(EV_DEAD,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'altcf_thread', this function's name, in a string
#412: FILE: drivers/ata/pata_altera_cf.c:322:
+			dev_dbg(altcf->dev, "altcf_thread sleeping\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'altcf_thread', this function's name, in a string
#414: FILE: drivers/ata/pata_altera_cf.c:324:
+			dev_dbg(altcf->dev, "altcf_thread woken\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'altcf_thread', this function's name, in a string
#419: FILE: drivers/ata/pata_altera_cf.c:329:
+			dev_dbg(altcf->dev, "altcf_thread stopping\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'altcf_thread', this function's name, in a string
#431: FILE: drivers/ata/pata_altera_cf.c:341:
+	dev_dbg(altcf->dev, "altcf_thread exit\n");

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#442: FILE: drivers/ata/pata_altera_cf.c:352:
+static int __devinit altcf_probe(struct device *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#443: FILE: drivers/ata/pata_altera_cf.c:353:
+static int __devinit altcf_probe(struct device *dev,
+		struct resource *ide_mem_res, struct resource *ide_irq_res,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#474: FILE: drivers/ata/pata_altera_cf.c:384:
+	altcf = devres_alloc(altcf_private_release,
+			sizeof(struct altcf_private), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#490: FILE: drivers/ata/pata_altera_cf.c:400:
+	altcf->ide_base = devm_ioremap_nocache(dev, ide_mem_res->start,
+			ALTCF_IDE_LEN);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#496: FILE: drivers/ata/pata_altera_cf.c:406:
+	altcf->cfc_base = devm_ioremap_nocache(dev, cfc_mem_res->start,
+			ALTCF_CFC_LEN);

WARNING:MEMORY_BARRIER: memory barrier without comment
#510: FILE: drivers/ata/pata_altera_cf.c:420:
+	smp_mb();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#514: FILE: drivers/ata/pata_altera_cf.c:424:
+	altcf->cf_thread = kthread_create(altcf_thread, altcf,
+			DRV_NAME "/%s", dev_name(dev));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#524: FILE: drivers/ata/pata_altera_cf.c:434:
+	rc = request_irq(altcf->cfc_irq, altcf_cf_interrupt,
+			(cfc_irq_res->flags & IORESOURCE_BITS),

WARNING:SPLIT_STRING: quoted string split across lines
#528: FILE: drivers/ata/pata_altera_cf.c:438:
+		dev_err(dev, "failed to request CF CONTROL IRQ %d flags 0x%lx"
+				" (%d)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#564: FILE: drivers/ata/pata_altera_cf.c:474:
+static int __devexit altcf_remove(struct device *dev)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!altcf"
#570: FILE: drivers/ata/pata_altera_cf.c:480:
+	if (altcf == NULL)

WARNING:MEMORY_BARRIER: memory barrier without comment
#575: FILE: drivers/ata/pata_altera_cf.c:485:
+	smp_mb();

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#593: FILE: drivers/ata/pata_altera_cf.c:503:
+static int __devinit altcf_platform_probe(struct platform_device *pdev)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ide_mem_res"
#607: FILE: drivers/ata/pata_altera_cf.c:517:
+	if (unlikely(ide_mem_res == NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ide_irq_res"
#614: FILE: drivers/ata/pata_altera_cf.c:524:
+	if ((unlikely(ide_irq_res == NULL))) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ide_mem_res"
#621: FILE: drivers/ata/pata_altera_cf.c:531:
+	if (unlikely(ide_mem_res == NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cfc_irq_res"
#628: FILE: drivers/ata/pata_altera_cf.c:538:
+	if ((unlikely(cfc_irq_res == NULL))) {

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#638: FILE: drivers/ata/pata_altera_cf.c:548:
+static int __devexit altcf_platform_remove(struct platform_device *pdev)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000062376.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 15 warnings, 23 checks, 605 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000062376.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
