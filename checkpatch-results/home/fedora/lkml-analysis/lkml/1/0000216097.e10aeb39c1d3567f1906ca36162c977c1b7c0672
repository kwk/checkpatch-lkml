WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
The Intel 7300 Memory Controller supports dynamic throttling of memory which can

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#74: FILE: MAINTAINERS:2083:
+P:	Andy Henroid
+M:	andrew.d.henroid@intel.com

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#132: FILE: drivers/idle/Kconfig:7:
+config I7300_IDLE
+	tristate "Intel chipset idle power saving driver"
+	select I7300_IDLE_IOAT_CHANNEL
+	depends on X86_64
+	help
+	  Enable idle power savings with certain Intel server chipsets.
+	  The chipset must have I/O AT support, such as the Intel 7300.
+	  The power savings depends on the type and quantity of DRAM devices.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#156: FILE: drivers/idle/i7300_idle.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#197: FILE: drivers/idle/i7300_idle.c:42:
+	do { if (debug) printk(KERN_INFO I7300_PRINT fmt, ##arg); } while (0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#210: FILE: drivers/idle/i7300_idle.c:55:
+MODULE_PARM_DESC(thrtlwlimit,
+		"Value for THRTLOWLM activation field "

WARNING:SPLIT_STRING: quoted string split across lines
#211: FILE: drivers/idle/i7300_idle.c:56:
+		"Value for THRTLOWLM activation field "
+		"(0 = disable throttle, 1 = Max throttle, 168 = Min throttle)");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ioat_ctl' may be better as '(ioat_ctl)' to avoid precedence issues
#240: FILE: drivers/idle/i7300_idle.c:85:
+#define IOAT_CHANBASE(ioat_ctl, chan) (ioat_ctl + 0x80 + 0x80 * chan)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#240: FILE: drivers/idle/i7300_idle.c:85:
+#define IOAT_CHANBASE(ioat_ctl, chan) (ioat_ctl + 0x80 + 0x80 * chan)

CHECK:BIT_MACRO: Prefer using the BIT macro
#242: FILE: drivers/idle/i7300_idle.c:87:
+#define IOAT_DESC_SADDR_SNP_CTL (1UL << 1)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#243: FILE: drivers/idle/i7300_idle.c:88:
+#define IOAT_DESC_DADDR_SNP_CTL (1UL << 2)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#272: FILE: drivers/idle/i7300_idle.c:117:
+		writeb(IOAT_CHANCMD_RESET,
+			ioat_chanbase + IOAT1_CHANCMD_OFFSET);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#274: FILE: drivers/idle/i7300_idle.c:119:
+		udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#282: FILE: drivers/idle/i7300_idle.c:127:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#287: FILE: drivers/idle/i7300_idle.c:132:
+
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#291: FILE: drivers/idle/i7300_idle.c:136:
+static int __init i7300_idle_ioat_selftest(u8 *ctl,
+		struct ioat_dma_descriptor *desc, unsigned long desc_phys)

CHECK:SPACING: No space is necessary after a cast
#296: FILE: drivers/idle/i7300_idle.c:141:
+	memset((u8 *) desc + 2048, 0xab, 1024);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#307: FILE: drivers/idle/i7300_idle.c:152:
+	udelay(1000);

CHECK:SPACING: No space is necessary after a cast
#319: FILE: drivers/idle/i7300_idle.c:164:
+	if (*(u32 *) ((u8 *) desc + 3068) != 0xabababab ||

CHECK:SPACING: No space is necessary after a cast
#320: FILE: drivers/idle/i7300_idle.c:165:
+	    *(u32 *) ((u8 *) desc + 2044) != 0xabababab) {

CHECK:SPACING: No space is necessary after a cast
#322: FILE: drivers/idle/i7300_idle.c:167:
+			*(u32 *) ((u8 *) desc + 2048),

CHECK:SPACING: No space is necessary after a cast
#323: FILE: drivers/idle/i7300_idle.c:168:
+			*(u32 *) ((u8 *) desc + 1024),

CHECK:SPACING: No space is necessary after a cast
#324: FILE: drivers/idle/i7300_idle.c:169:
+			*(u32 *) ((u8 *) desc + 3072));

CHECK:SPACING: No space is necessary after a cast
#346: FILE: drivers/idle/i7300_idle.c:191:
+	ioat_iomap = (u8 *) ioremap_nocache(pci_resource_start(ioat_dev, 0),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#350: FILE: drivers/idle/i7300_idle.c:195:
+		printk(KERN_ERR I7300_PRINT "failed to map I/O AT registers\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#356: FILE: drivers/idle/i7300_idle.c:201:
+		printk(KERN_ERR I7300_PRINT "unknown I/O AT version (%u.%u)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#357: FILE: drivers/idle/i7300_idle.c:202:
+		printk(KERN_ERR I7300_PRINT "unknown I/O AT version (%u.%u)\n",
+			ver >> 4, ver & 0xf);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#363: FILE: drivers/idle/i7300_idle.c:208:
+		printk(KERN_ERR I7300_PRINT "unexpected # of I/O AT channels "

WARNING:SPLIT_STRING: quoted string split across lines
#364: FILE: drivers/idle/i7300_idle.c:209:
+		printk(KERN_ERR I7300_PRINT "unexpected # of I/O AT channels "
+			"(%u)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#374: FILE: drivers/idle/i7300_idle.c:219:
+		printk(KERN_ERR I7300_PRINT "channel %d in use\n", ioat_chan);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#379: FILE: drivers/idle/i7300_idle.c:224:
+	writew(IOAT_CHANCTRL_CHANNEL_IN_USE,
+		ioat_chanbase + IOAT_CHANCTRL_OFFSET);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#381: FILE: drivers/idle/i7300_idle.c:226:
+	ioat_desc = (struct ioat_dma_descriptor *)dma_alloc_coherent(

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#381: FILE: drivers/idle/i7300_idle.c:226:
+	ioat_desc = (struct ioat_dma_descriptor *)dma_alloc_coherent(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#385: FILE: drivers/idle/i7300_idle.c:230:
+		printk(KERN_ERR I7300_PRINT "failed to allocate I/O AT desc\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#395: FILE: drivers/idle/i7300_idle.c:240:
+		printk(KERN_ERR I7300_PRINT "I/O AT self-test failed\n");

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#444: FILE: drivers/idle/i7300_idle.c:289:
+		udelay(1000);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#456: FILE: drivers/idle/i7300_idle.c:301:
+		printk(KERN_ERR I7300_PRINT "Unable to stop IO A/T channels."

WARNING:SPLIT_STRING: quoted string split across lines
#457: FILE: drivers/idle/i7300_idle.c:302:
+		printk(KERN_ERR I7300_PRINT "Unable to stop IO A/T channels."
+			" Not freeing resources\n");

CHECK:BIT_MACRO: Prefer using the BIT macro
#469: FILE: drivers/idle/i7300_idle.c:314:
+#define DIMM_THRTCTL_THRMHUNT (1UL << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#471: FILE: drivers/idle/i7300_idle.c:316:
+#define DIMM_GTW_MODE (1UL << 17)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#490: FILE: drivers/idle/i7300_idle.c:335:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#524: FILE: drivers/idle/i7300_idle.c:369:
+		return 0;
+	} else {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#572: FILE: drivers/idle/i7300_idle.c:417:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#591: FILE: drivers/idle/i7300_idle.c:436:
+static int i7300_idle_notifier(struct notifier_block *nb, unsigned long val,
+				void *data)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#608: FILE: drivers/idle/i7300_idle.c:453:
+	if (val == IDLE_START) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#741: FILE: drivers/idle/i7300_idle.c:586:
+static ssize_t stats_read_ul(struct file *fp, char __user *ubuf, size_t count,
+				loff_t *off)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "debugfs_file_list[i].ptr"
#788: FILE: drivers/idle/i7300_idle.c:633:
+		while (debugfs_file_list[i].ptr != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#789: FILE: drivers/idle/i7300_idle.c:634:
+			debugfs_file_list[i].file = debugfs_create_file(

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#791: FILE: drivers/idle/i7300_idle.c:636:
+					S_IRUSR,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#801: FILE: drivers/idle/i7300_idle.c:646:
+	printk(KERN_INFO "i7300_idle: loaded v%s\n", I7300_IDLE_DRIVER_VERSION);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "debugfs_file_list[i].file"
#812: FILE: drivers/idle/i7300_idle.c:657:
+		while (debugfs_file_list[i].file != NULL) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000216097.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 19 warnings, 32 checks, 742 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000216097.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
