WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
Not intended to be merged just a harness for micro-testing tracepoint performance.

WARNING:LINE_SPACING: Missing a blank line after declarations
#93: FILE: kernel/tracepoint.c:572:
+	struct tracepoint_iter *iter;
+	iter = seqf->private;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#95: FILE: kernel/tracepoint.c:574:
+        tracepoint_iter_next(iter);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: kernel/tracepoint.c:574:
+        tracepoint_iter_next(iter);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#98: FILE: kernel/tracepoint.c:577:
+                return iter->tracepoint;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: kernel/tracepoint.c:577:
+                return iter->tracepoint;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: kernel/tracepoint.c:580:
+        return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: kernel/tracepoint.c:580:
+        return NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#106: FILE: kernel/tracepoint.c:585:
+        struct tracepoint_iter *iter = seqf->private;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: kernel/tracepoint.c:585:
+        struct tracepoint_iter *iter = seqf->private;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: kernel/tracepoint.c:587:
+        /* stop is called even after start failed :-( */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: kernel/tracepoint.c:588:
+        if (iter) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: kernel/tracepoint.c:588:
+        if (iter) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: kernel/tracepoint.c:588:
+        if (iter) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: kernel/tracepoint.c:589:
+                kfree(iter);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: kernel/tracepoint.c:589:
+                kfree(iter);$

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#110: FILE: kernel/tracepoint.c:589:
+        if (iter) 
+                kfree(iter);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: kernel/tracepoint.c:590:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: kernel/tracepoint.c:590:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: kernel/tracepoint.c:590:
+        $

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#112: FILE: kernel/tracepoint.c:591:
+        
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: kernel/tracepoint.c:599:
+        if (!iter)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: kernel/tracepoint.c:599:
+        if (!iter)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: kernel/tracepoint.c:600:
+                return ERR_PTR(-ENOMEM);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: kernel/tracepoint.c:600:
+                return ERR_PTR(-ENOMEM);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: kernel/tracepoint.c:601:
+        seqf->private = iter;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: kernel/tracepoint.c:601:
+        seqf->private = iter;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: kernel/tracepoint.c:605:
+        do {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: kernel/tracepoint.c:605:
+        do {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: kernel/tracepoint.c:606:
+                tracepoint_iter_next(iter);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: kernel/tracepoint.c:606:
+                tracepoint_iter_next(iter);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: kernel/tracepoint.c:607:
+                if (!iter->tracepoint)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: kernel/tracepoint.c:607:
+                if (!iter->tracepoint)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#129: FILE: kernel/tracepoint.c:608:
+                        return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: kernel/tracepoint.c:608:
+                        return NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: kernel/tracepoint.c:609:
+        } while (skip--);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: kernel/tracepoint.c:609:
+        } while (skip--);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: kernel/tracepoint.c:616:
+        struct tracepoint *tp = v;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: kernel/tracepoint.c:616:
+        struct tracepoint *tp = v;$

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#139: FILE: kernel/tracepoint.c:618:
+	seq_printf(seqf, "%s %lu %lu %lu\n", tp->name, tp->cycle_total, tp->count, tp->count ? tp->cycle_total / tp->count : 0 );

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space prohibited before that close parenthesis ')'
#139: FILE: kernel/tracepoint.c:618:
+	seq_printf(seqf, "%s %lu %lu %lu\n", tp->name, tp->cycle_total, tp->count, tp->count ? tp->cycle_total / tp->count : 0 );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: kernel/tracepoint.c:619:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: kernel/tracepoint.c:619:
+        return 0;$

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#143: FILE: kernel/tracepoint.c:622:
+static struct seq_operations tracepoints_seq_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: kernel/tracepoint.c:623:
+        .start = tracepoint_seq_start,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: kernel/tracepoint.c:623:
+        .start = tracepoint_seq_start,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: kernel/tracepoint.c:624:
+        .next  = tracepoint_seq_next,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: kernel/tracepoint.c:624:
+        .next  = tracepoint_seq_next,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: kernel/tracepoint.c:625:
+        .stop  = tracepoint_seq_stop,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: kernel/tracepoint.c:625:
+        .stop  = tracepoint_seq_stop,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: kernel/tracepoint.c:626:
+        .show  = show_tracepoint$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: kernel/tracepoint.c:626:
+        .show  = show_tracepoint$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#150: FILE: kernel/tracepoint.c:629:
+static int tracepoints_open(struct inode *inode, struct file *filp)
                                                               ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#152: FILE: kernel/tracepoint.c:631:
+        return seq_open(filp, &tracepoints_seq_ops);
                         ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: kernel/tracepoint.c:631:
+        return seq_open(filp, &tracepoints_seq_ops);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: kernel/tracepoint.c:631:
+        return seq_open(filp, &tracepoints_seq_ops);$

WARNING:CONST_STRUCT: struct file_operations should normally be const
#155: FILE: kernel/tracepoint.c:634:
+static struct file_operations debugfs_tracepoint_operations = {

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: kernel/tracepoint.c:635:
+        .open           = tracepoints_open,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: kernel/tracepoint.c:635:
+        .open           = tracepoints_open,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: kernel/tracepoint.c:636:
+        .read           = seq_read,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: kernel/tracepoint.c:636:
+        .read           = seq_read,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: kernel/tracepoint.c:637:
+        .llseek         = seq_lseek,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: kernel/tracepoint.c:637:
+        .llseek         = seq_lseek,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: kernel/tracepoint.c:638:
+        .release        = seq_release,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: kernel/tracepoint.c:638:
+        .release        = seq_release,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: kernel/tracepoint.c:664:
+               const char __user *user_buf, size_t count, loff_t *ppos)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#170: FILE: kernel/tracepoint.c:664:
+static ssize_t write_enabled_file_bool(struct file *file,
+               const char __user *user_buf, size_t count, loff_t *ppos)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: kernel/tracepoint.c:664:
+               const char __user *user_buf, size_t count, loff_t *ppos)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: kernel/tracepoint.c:666:
+        struct tracepoint_iter *iter;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: kernel/tracepoint.c:666:
+        struct tracepoint_iter *iter;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: kernel/tracepoint.c:668:
+        iter = kmalloc(sizeof(*iter), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: kernel/tracepoint.c:668:
+        iter = kmalloc(sizeof(*iter), GFP_KERNEL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: kernel/tracepoint.c:669:
+        if (!iter)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: kernel/tracepoint.c:669:
+        if (!iter)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: kernel/tracepoint.c:670:
+                return ERR_PTR(-ENOMEM);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: kernel/tracepoint.c:670:
+                return ERR_PTR(-ENOMEM);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: kernel/tracepoint.c:672:
+        tracepoint_iter_reset(iter);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: kernel/tracepoint.c:672:
+        tracepoint_iter_reset(iter);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: kernel/tracepoint.c:673:
+        tracepoint_iter_start(iter);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: kernel/tracepoint.c:673:
+        tracepoint_iter_start(iter);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: kernel/tracepoint.c:674:
+        do {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: kernel/tracepoint.c:674:
+        do {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: kernel/tracepoint.c:675:
+                tracepoint_iter_next(iter);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: kernel/tracepoint.c:675:
+                tracepoint_iter_next(iter);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: kernel/tracepoint.c:676:
+                if (!iter->tracepoint)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: kernel/tracepoint.c:676:
+                if (!iter->tracepoint)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: kernel/tracepoint.c:677:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: kernel/tracepoint.c:677:
+                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: kernel/tracepoint.c:680:
+        } while (1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: kernel/tracepoint.c:680:
+        } while (1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: kernel/tracepoint.c:682:
+        kfree(iter);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: kernel/tracepoint.c:682:
+        kfree(iter);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#189: FILE: kernel/tracepoint.c:683:
+        return count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: kernel/tracepoint.c:683:
+        return count;$

WARNING:CONST_STRUCT: struct file_operations should normally be const
#192: FILE: kernel/tracepoint.c:686:
+static struct file_operations fops_kp = {

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: kernel/tracepoint.c:687:
+        .write =        write_enabled_file_bool,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: kernel/tracepoint.c:687:
+        .write =        write_enabled_file_bool,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#196: FILE: kernel/tracepoint.c:690:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: kernel/tracepoint.c:694:
+        struct dentry *dir, *file;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: kernel/tracepoint.c:694:
+        struct dentry *dir, *file;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: kernel/tracepoint.c:696:
+        dir = debugfs_create_dir("tracepoints", NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: kernel/tracepoint.c:696:
+        dir = debugfs_create_dir("tracepoints", NULL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: kernel/tracepoint.c:697:
+        if (!dir)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: kernel/tracepoint.c:697:
+        if (!dir)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: kernel/tracepoint.c:698:
+                return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: kernel/tracepoint.c:698:
+                return -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: kernel/tracepoint.c:700:
+        file = debugfs_create_file("list", 0444, dir, NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: kernel/tracepoint.c:700:
+        file = debugfs_create_file("list", 0444, dir, NULL,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: kernel/tracepoint.c:701:
+                                &debugfs_tracepoint_operations);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#207: FILE: kernel/tracepoint.c:701:
+        file = debugfs_create_file("list", 0444, dir, NULL,
+                                &debugfs_tracepoint_operations);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: kernel/tracepoint.c:701:
+                                &debugfs_tracepoint_operations);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: kernel/tracepoint.c:702:
+        if (!file) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: kernel/tracepoint.c:702:
+        if (!file) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: kernel/tracepoint.c:703:
+                debugfs_remove(dir);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: kernel/tracepoint.c:703:
+                debugfs_remove(dir);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: kernel/tracepoint.c:704:
+                return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: kernel/tracepoint.c:704:
+                return -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: kernel/tracepoint.c:705:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: kernel/tracepoint.c:705:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: kernel/tracepoint.c:707:
+        file = debugfs_create_file("clear", 0600, dir,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: kernel/tracepoint.c:707:
+        file = debugfs_create_file("clear", 0600, dir,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: kernel/tracepoint.c:708:
+                                        NULL, &fops_kp);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#214: FILE: kernel/tracepoint.c:708:
+        file = debugfs_create_file("clear", 0600, dir,
+                                        NULL, &fops_kp);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: kernel/tracepoint.c:708:
+                                        NULL, &fops_kp);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: kernel/tracepoint.c:709:
+        if (!file) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: kernel/tracepoint.c:709:
+        if (!file) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: kernel/tracepoint.c:710:
+                debugfs_remove(dir);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: kernel/tracepoint.c:710:
+                debugfs_remove(dir);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: kernel/tracepoint.c:711:
+                return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: kernel/tracepoint.c:711:
+                return -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: kernel/tracepoint.c:712:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: kernel/tracepoint.c:712:
+        }$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000076685.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 61 errors, 66 warnings, 5 checks, 178 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000076685.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
