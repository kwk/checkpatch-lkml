WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
    for MAXSMP/UV: could set smaller nr_irqs in acpi_madt_oem_check in genx2_apic_uv_x

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#40: 
v3: seperate DYN_ARRAY and enabling to x86_64 to following patches
    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#165: FILE: arch/x86/kernel/io_apic_32.c:717:
+		irq_cpu_data[i].irq_delta = kzalloc(sizeof(unsigned long) * nr_irqs, GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#166: FILE: arch/x86/kernel/io_apic_32.c:718:
+		irq_cpu_data[i].last_irq = kzalloc(sizeof(unsigned long) * nr_irqs, GFP_KERNEL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#223: FILE: arch/x86/kernel/io_apic_64.c:228:
+	BUG_ON(irq >= nr_irqs);						\

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#232: FILE: arch/x86/kernel/io_apic_64.c:305:
+	BUG_ON(irq >= nr_irqs);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#247: FILE: arch/x86/kernel/io_apic_64.c:367:
+	BUG_ON(irq >= nr_irqs);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#264: FILE: arch/x86/kernel/io_apic_64.c:638:
+	BUG_ON(best_guess >= nr_irqs);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#273: FILE: arch/x86/kernel/io_apic_64.c:770:
+	BUG_ON(irq >= nr_irqs);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#282: FILE: arch/x86/kernel/io_apic_64.c:792:
+	BUG_ON((unsigned)irq >= nr_irqs);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#282: FILE: arch/x86/kernel/io_apic_64.c:792:
+	BUG_ON((unsigned)irq >= nr_irqs);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#291: FILE: arch/x86/kernel/io_apic_64.c:866:
+	BUG_ON((unsigned)irq >= nr_irqs);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#291: FILE: arch/x86/kernel/io_apic_64.c:866:
+	BUG_ON((unsigned)irq >= nr_irqs);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#367: FILE: arch/x86/kernel/irq_32.c:229:
+	if (unlikely((unsigned)irq >= nr_irqs)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!irq_timer_state[irq]"
#486: FILE: drivers/char/random.c:650:
+	if (irq >= nr_irqs || irq_timer_state[irq] == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#547: FILE: drivers/net/hamradio/baycom_ser_fdx.c:422:
+				0xffff-SER12_EXTENT, nr_irqs);
 				      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#578: FILE: drivers/net/hamradio/scc.c:2151:
+	for (k=0; k < nr_irqs ; k++)
 	      ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#591: FILE: drivers/net/wan/sbni.c:321:
+		if( pci_irq_line <= 0  ||  pci_irq_line >= nr_irqs )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#591: FILE: drivers/net/wan/sbni.c:321:
+		if( pci_irq_line <= 0  ||  pci_irq_line >= nr_irqs )

ERROR:SPACING: space required before the open parenthesis '('
#591: FILE: drivers/net/wan/sbni.c:321:
+		if( pci_irq_line <= 0  ||  pci_irq_line >= nr_irqs )

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#728: FILE: drivers/scsi/aha152x.c:340:
+#define IRQ_MAX (nr_irqs-1)
                         ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_serial.irq >= nr_irqs'
#824: FILE: drivers/serial/serial_core.c:744:
+	if ((new_serial.irq >= nr_irqs) || (new_serial.irq < 0) ||
 	    (new_serial.baud_base < 9600))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_serial.irq < 0'
#824: FILE: drivers/serial/serial_core.c:744:
+	if ((new_serial.irq >= nr_irqs) || (new_serial.irq < 0) ||
 	    (new_serial.baud_base < 9600))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_serial.baud_base < 9600'
#824: FILE: drivers/serial/serial_core.c:744:
+	if ((new_serial.irq >= nr_irqs) || (new_serial.irq < 0) ||
 	    (new_serial.baud_base < 9600))

CHECK:CAMELCASE: Avoid CamelCase: <SCIx_TXI_IRQ>
#850: FILE: drivers/serial/sh-sci.c:1160:
+	if (ser->irq != s->irqs[SCIx_TXI_IRQ] || ser->irq > nr_irqs)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#923: FILE: fs/proc/proc_misc.c:506:
+	per_irq_sum = kzalloc(sizeof(unsigned int)*nr_irqs, GFP_KERNEL);
 	                                          ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#923: FILE: fs/proc/proc_misc.c:506:
+	per_irq_sum = kzalloc(sizeof(unsigned int)*nr_irqs, GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#997: FILE: kernel/irq/autoprobe.c:41:
+	for (i = nr_irqs-1; i > 0; i--) {
 	                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1006: FILE: kernel/irq/autoprobe.c:71:
+	for (i = nr_irqs-1; i > 0; i--) {
 	                ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000246303.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 15 warnings, 10 checks, 929 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000246303.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
