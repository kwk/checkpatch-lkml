WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
and pointer to a block in the traditional (unindexed) directory tree where a

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#92: FILE: fs/ocfs2/alloc.c:326:
+	BUG_ON(!OCFS2_IS_VALID_DX_ROOT(dx_root));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#204: FILE: fs/ocfs2/dir.c:179:
+		b0 += ((b1 << 4)+a) ^ (b1+sum) ^ ((b1 >> 5)+b);
 		                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#204: FILE: fs/ocfs2/dir.c:179:
+		b0 += ((b1 << 4)+a) ^ (b1+sum) ^ ((b1 >> 5)+b);
 		                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#204: FILE: fs/ocfs2/dir.c:179:
+		b0 += ((b1 << 4)+a) ^ (b1+sum) ^ ((b1 >> 5)+b);
 		                                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#205: FILE: fs/ocfs2/dir.c:180:
+		b1 += ((b0 << 4)+c) ^ (b0+sum) ^ ((b0 >> 5)+d);
 		                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#205: FILE: fs/ocfs2/dir.c:180:
+		b1 += ((b0 << 4)+c) ^ (b0+sum) ^ ((b0 >> 5)+d);
 		                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#205: FILE: fs/ocfs2/dir.c:180:
+		b1 += ((b0 << 4)+c) ^ (b0+sum) ^ ((b0 >> 5)+d);
 		                                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#221: FILE: fs/ocfs2/dir.c:196:
+	if (len > num*4)
 	             ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#252: FILE: fs/ocfs2/dir.c:227:
+		buf[0] = buf[1] = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#262: FILE: fs/ocfs2/dir.c:237:
+	buf[0] = buf[1] = len;

WARNING:SPLIT_STRING: quoted string split across lines
#301: FILE: fs/ocfs2/dir.c:431:
+			    "Invalid dirblock #%llu: "
+			    "signature = %.*s\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#310: FILE: fs/ocfs2/dir.c:440:
+			    "Directory block #%llu has an invalid "
+			    "db_blkno of %llu",

WARNING:SPLIT_STRING: quoted string split across lines
#320: FILE: fs/ocfs2/dir.c:450:
+			    "Directory block #%llu on dinode "
+			    "#%llu has an invalid parent_dinode "

WARNING:SPLIT_STRING: quoted string split across lines
#321: FILE: fs/ocfs2/dir.c:451:
+			    "#%llu has an invalid parent_dinode "
+			    "of %llu",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#434: FILE: fs/ocfs2/dir.c:538:
+	BUG_ON(!buffer_uptodate(bh));

CHECK:SPACING: No space is necessary after a cast
#436: FILE: fs/ocfs2/dir.c:540:
+	dx_root = (struct ocfs2_dx_root_block *) bh->b_data;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#479: FILE: fs/ocfs2/dir.c:583:
+	BUG_ON(!buffer_uptodate(bh));

CHECK:SPACING: No space is necessary after a cast
#556: FILE: fs/ocfs2/dir.c:754:
+		eb = (struct ocfs2_extent_block *) eb_bh->b_data;

WARNING:SPLIT_STRING: quoted string split across lines
#562: FILE: fs/ocfs2/dir.c:760:
+				    "Inode %lu has non zero tree depth in "
+				    "btree tree block %llu\n", inode->i_ino,

WARNING:SPLIT_STRING: quoted string split across lines
#581: FILE: fs/ocfs2/dir.c:779:
+		ocfs2_error(inode->i_sb, "Inode %lu has bad extent "
+			    "record (%u, %u, 0) in btree", inode->i_ino,

WARNING:LINE_SPACING: Missing a blank line after declarations
#608: FILE: fs/ocfs2/dir.c:806:
+	u32 minor_hash = hinfo->minor_hash;
+	return minor_hash & osb->osb_dx_mask;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#619: FILE: fs/ocfs2/dir.c:817:
+	unsigned int cend, uninitialized_var(clen);
+	u32 uninitialized_var(cpos);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#619: FILE: fs/ocfs2/dir.c:817:
+	u32 uninitialized_var(cpos);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'cpos' should also have an identifier name
#619: FILE: fs/ocfs2/dir.c:817:
+	u32 uninitialized_var(cpos);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#620: FILE: fs/ocfs2/dir.c:818:
+	u64 uninitialized_var(blkno);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'blkno' should also have an identifier name
#620: FILE: fs/ocfs2/dir.c:818:
+	u64 uninitialized_var(blkno);

WARNING:LINE_SPACING: Missing a blank line after declarations
#664: FILE: fs/ocfs2/dir.c:862:
+	int ret, i, found;
+	u64 uninitialized_var(phys);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#664: FILE: fs/ocfs2/dir.c:862:
+	u64 uninitialized_var(phys);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'phys' should also have an identifier name
#664: FILE: fs/ocfs2/dir.c:862:
+	u64 uninitialized_var(phys);

WARNING:SPLIT_STRING: quoted string split across lines
#681: FILE: fs/ocfs2/dir.c:879:
+	mlog(0, "Dir %llu: name: \"%.*s\", lookup of hash: %u.0x%x "
+	     "returns: %llu\n",

CHECK:SPACING: No space is necessary after a cast
#692: FILE: fs/ocfs2/dir.c:890:
+	dx_leaf = (struct ocfs2_dx_leaf *) dx_leaf_bh->b_data;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#706: FILE: fs/ocfs2/dir.c:904:
+		if (hinfo->major_hash != le32_to_cpu(dx_entry->dx_major_hash)
+		    || hinfo->minor_hash != le32_to_cpu(dx_entry->dx_minor_hash))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#714: FILE: fs/ocfs2/dir.c:912:
+		ret = ocfs2_read_dir_block_direct(dir,
+					  le64_to_cpu(dx_entry->dx_dirent_blk),

CHECK:SPACING: No space is necessary after a cast
#785: FILE: fs/ocfs2/dir.c:983:
+	dx_root = (struct ocfs2_dx_root_block *) dx_root_bh->b_data;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#859: FILE: fs/ocfs2/dir.c:1138:
+		(num_used - index - 1)*sizeof(struct ocfs2_dx_entry));
 		                      ^

CHECK:SPACING: No space is necessary after a cast
#875: FILE: fs/ocfs2/dir.c:1154:
+	dx_leaf = (struct ocfs2_dx_leaf *) lookup->dl_dx_leaf_bh->b_data;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#877: FILE: fs/ocfs2/dir.c:1156:
+	 * been caught by lookup, before we got here. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#878: FILE: fs/ocfs2/dir.c:1157:
+	BUG_ON(le16_to_cpu(dx_leaf->dl_list.de_count) <= 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#879: FILE: fs/ocfs2/dir.c:1158:
+	BUG_ON(le16_to_cpu(dx_leaf->dl_list.de_num_used) <= 0);

CHECK:BRACES: Unbalanced braces around else statement
#1009: FILE: fs/ocfs2/dir.c:1409:
+			else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1015: FILE: fs/ocfs2/dir.c:1415:
+					status = ocfs2_dx_dir_leaf_insert(dir,
+									handle,

CHECK:SPACING: No space is necessary after a cast
#1079: FILE: fs/ocfs2/dir.c:2025:
+	struct ocfs2_dinode *di = (struct ocfs2_dinode *) di_bh->b_data;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dx_root_bh"
#1098: FILE: fs/ocfs2/dir.c:2044:
+	if (dx_root_bh == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bh"
#1161: FILE: fs/ocfs2/dir.c:2107:
+		if (bh == NULL) {

CHECK:SPACING: No space is necessary after a cast
#1176: FILE: fs/ocfs2/dir.c:2122:
+		dx_leaf = (struct ocfs2_dx_leaf *) bh->b_data;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1367: FILE: fs/ocfs2/dir.c:2313:
+	 * dx_root. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1705: FILE: fs/ocfs2/dir.c:3139:
+	BUG_ON(size != sizeof(*entry1));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1811: FILE: fs/ocfs2/dir.c:3245:
+	BUG_ON(i == num_used); /* Should be impossible */

CHECK:SPACING: No space is necessary after a cast
#1841: FILE: fs/ocfs2/dir.c:3275:
+		orig_dx_leaf = (struct ocfs2_dx_leaf *) orig_dx_leaves[i]->b_data;

CHECK:SPACING: No space is necessary after a cast
#1843: FILE: fs/ocfs2/dir.c:3277:
+		new_dx_leaf = (struct ocfs2_dx_leaf *) new_dx_leaves[i]->b_data;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1850: FILE: fs/ocfs2/dir.c:3284:
+		memset(&tmp_list->de_entries, 0, sizeof(*dx_entry)*num_used);
 		                                                  ^

WARNING:SPLIT_STRING: quoted string split across lines
#1919: FILE: fs/ocfs2/dir.c:3353:
+		mlog(ML_ERROR, "DX Dir: %llu, Asked to rebalance empty leaf: "
+		     "%llu, %d\n", (unsigned long long)OCFS2_I(dir)->ip_blkno,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2050: FILE: fs/ocfs2/dir.c:3484:
+		vfs_dq_free_space_nodirty(dir,
+				ocfs2_clusters_to_bytes(dir->i_sb, 1));

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#2186: FILE: fs/ocfs2/dir.c:3639:
+		 * We intentionally fall through so that the unindexed

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

CHECK:SPACING: No space is necessary after a cast
#2223: FILE: fs/ocfs2/dir.c:3694:
+	dx_root = (struct ocfs2_dx_root_block *) dx_root_bh->b_data;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2226: FILE: fs/ocfs2/dir.c:3697:
+	dx_alloc_inode = ocfs2_get_system_file_inode(osb,
+					EXTENT_ALLOC_SYSTEM_INODE,

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#2279: FILE: fs/ocfs2/dir.c:3750:
+	iput(dx_alloc_inode);
 	^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#2286: FILE: fs/ocfs2/dir.c:3757:
+	int ret;
+	unsigned int uninitialized_var(clen);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2286: FILE: fs/ocfs2/dir.c:3757:
+	unsigned int uninitialized_var(clen);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'clen' should also have an identifier name
#2286: FILE: fs/ocfs2/dir.c:3757:
+	unsigned int uninitialized_var(clen);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2288: FILE: fs/ocfs2/dir.c:3759:
+	u32 major_hash = UINT_MAX, p_cpos, uninitialized_var(cpos);
+	u64 uninitialized_var(blkno);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2288: FILE: fs/ocfs2/dir.c:3759:
+	u64 uninitialized_var(blkno);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'blkno' should also have an identifier name
#2288: FILE: fs/ocfs2/dir.c:3759:
+	u64 uninitialized_var(blkno);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2366: FILE: fs/ocfs2/dir.h:36:
+							 * block */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2368: FILE: fs/ocfs2/dir.h:38:
+							 * unindexed leaf */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2372: FILE: fs/ocfs2/dir.h:42:
+							 * indexed leaf */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2501: FILE: fs/ocfs2/journal.h:394:
+	 * worth of blocks for initial extent. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2508: FILE: fs/ocfs2/journal.h:401:
+ * blocks + quota update */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2527: FILE: fs/ocfs2/journal.h:423:
+ * update on dir + index leaf */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2531: FILE: fs/ocfs2/journal.h:426:
+	return 2*OCFS2_INODE_UPDATE_CREDITS + 2 +
 	        ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2537: FILE: fs/ocfs2/journal.h:431:
+ * dir inode link + dir inode index leaf */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2548: FILE: fs/ocfs2/journal.h:439:
+ * inode alloc group descriptor + orphan dir index leaf */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2554: FILE: fs/ocfs2/journal.h:444:
+ * directory + target unlink + 3 x dir index leaves */

WARNING:TYPO_SPELLING: 'directores' may be misspelled - perhaps 'directories'?
#2763: FILE: fs/ocfs2/ocfs2_fs.h:156:
+/* Support for indexed directores */
                        ^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2776: FILE: fs/ocfs2/ocfs2_fs.h:637:
+					 * s_uuid_hash serves as seed[3]. */

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2796: FILE: fs/ocfs2/ocfs2_fs.h:792:
+ /*
+ * A directory entry in the indexed tree. We don't store the full name here,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2804: FILE: fs/ocfs2/ocfs2_fs.h:800:
+					 * cluster in index */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2806: FILE: fs/ocfs2/ocfs2_fs.h:802:
+					 * block in cluster */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2808: FILE: fs/ocfs2/ocfs2_fs.h:804:
+					 * tree holding this dirent. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2814: FILE: fs/ocfs2/ocfs2_fs.h:810:
+					 * possible in de_entries */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2816: FILE: fs/ocfs2/ocfs2_fs.h:812:
+					 * de_entries entries */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2819: FILE: fs/ocfs2/ocfs2_fs.h:815:
+							 * length de_num_used */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2833: FILE: fs/ocfs2/ocfs2_fs.h:829:
+						 * block belongs to. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2835: FILE: fs/ocfs2/ocfs2_fs.h:831:
+						 * block group */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2839: FILE: fs/ocfs2/ocfs2_fs.h:835:
+						 * extent block */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2841: FILE: fs/ocfs2/ocfs2_fs.h:837:
+						 * to the indexed tree. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2848: FILE: fs/ocfs2/ocfs2_fs.h:844:
+						  * efficiency. */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000153313.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 58 warnings, 30 checks, 2777 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000153313.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
