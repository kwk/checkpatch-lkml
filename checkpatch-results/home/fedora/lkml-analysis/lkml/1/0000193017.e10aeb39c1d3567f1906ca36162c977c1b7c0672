ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: fs/notify/inotify/Kconfig:27:
+^I  unmount notification.  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#112: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#117: FILE: fs/notify/inotify/inotify.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#225: FILE: fs/notify/inotify/inotify.h:109:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#226: FILE: fs/notify/inotify/inotify.h:110:
+int find_inode(const char __user *dirname, struct path *path, unsigned flags);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#240: FILE: fs/notify/inotify/inotify_fsnotify.c:1:
+/*

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#315: FILE: fs/notify/inotify/inotify_fsnotify.c:76:
+	ret = fsnotify_add_notif_event(group, event, (struct fsnotify_event_private_data *)event_priv);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#320: FILE: fs/notify/inotify/inotify_fsnotify.c:81:
+static void inotify_mark_clear_inode(struct fsnotify_mark_entry *entry, struct inode *inode, unsigned int flags)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'flags != FSNOTIFY_LAST_DENTRY'
#322: FILE: fs/notify/inotify/inotify_fsnotify.c:83:
+	if (unlikely((flags != FSNOTIFY_LAST_DENTRY) && (flags != FSNOTIFY_INODE_DESTROY))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'flags != FSNOTIFY_INODE_DESTROY'
#322: FILE: fs/notify/inotify/inotify_fsnotify.c:83:
+	if (unlikely((flags != FSNOTIFY_LAST_DENTRY) && (flags != FSNOTIFY_INODE_DESTROY))) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#323: FILE: fs/notify/inotify/inotify_fsnotify.c:84:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#369: FILE: fs/notify/inotify/inotify_fsnotify.c:130:
+	BUG_ON(!group->private);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#390: FILE: fs/notify/inotify/inotify_fsnotify.c:151:
+	event_priv = (struct inotify_event_private_data *)fsnotify_get_priv_from_event(group, event);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#391: FILE: fs/notify/inotify/inotify_fsnotify.c:152:
+	BUG_ON(!event_priv);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#404: FILE: fs/notify/inotify/inotify_fsnotify.c:165:
+	BUG_ON(!entry->private);

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#409: FILE: fs/notify/inotify/inotify_fsnotify.c:170:
+	iput(inode);
 	^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#429: FILE: fs/notify/inotify/inotify_kernel.c:1:
+/*

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#483: FILE: fs/notify/inotify/inotify_kernel.c:55:
+int find_inode(const char __user *dirname, struct path *path, unsigned flags)

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#548: FILE: fs/notify/inotify/inotify_kernel.c:120:
+		 * doing an __iget/iput with MS_ACTIVE clear would actually
 		                   ^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&next_i->i_sb_list != list'
#571: FILE: fs/notify/inotify/inotify_kernel.c:143:
+		if ((&next_i->i_sb_list != list) &&
+				atomic_read(&next_i->i_count) &&
+				!(next_i->i_state & (I_CLEAR | I_FREEING |
+					I_WILL_FREE))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#572: FILE: fs/notify/inotify/inotify_kernel.c:144:
+		if ((&next_i->i_sb_list != list) &&
+				atomic_read(&next_i->i_count) &&

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#588: FILE: fs/notify/inotify/inotify_kernel.c:160:
+			iput(need_iput_tmp);
 			^^^^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#595: FILE: fs/notify/inotify/inotify_kernel.c:167:
+		iput(inode);
 		^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#627: FILE: fs/notify/inotify/inotify_kernel.c:199:
+retry:  $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#638: FILE: fs/notify/inotify/inotify_kernel.c:210:
+		 * when entry is removed from idr */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#639: FILE: fs/notify/inotify/inotify_kernel.c:211:
+		ret = idr_get_new_above(&grp_priv->idr, entry, grp_priv->last_wd+1, &mark_priv->wd);
 		                                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE_COMMENT: line length of 107 exceeds 100 columns
#685: FILE: fs/notify/inotify/inotify_kernel.c:257:
+	/* fsnotify_obtain_group took a reference to group, we put this when we kill the file in the end */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#711: FILE: fs/notify/inotify/inotify_kernel.c:283:
+	grp_priv_cachep = kmem_cache_create("inotify_group_priv_cache",
+					sizeof(struct inotify_group_private_data),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#714: FILE: fs/notify/inotify/inotify_kernel.c:286:
+	mark_priv_cachep = kmem_cache_create("inotify_mark_priv_cache",
+					sizeof(struct inotify_mark_private_data),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#717: FILE: fs/notify/inotify/inotify_kernel.c:289:
+	event_priv_cachep = kmem_cache_create("inotify_event_priv_cache",
+					sizeof(struct inotify_event_private_data),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1124: FILE: fs/notify/inotify/inotify_user.c:117:
+	const size_t event_size = sizeof (struct inotify_event);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1184: FILE: fs/notify/inotify/inotify_user.c:166:
+		priv = (struct inotify_event_private_data *)fsnotify_get_priv_from_event(group, event);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1186: FILE: fs/notify/inotify/inotify_user.c:168:
+		BUG_ON(!priv);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1202: FILE: fs/notify/inotify/inotify_user.c:185:
+		 * same event we peeked above */

ERROR:SPACING: space required before the open parenthesis '('
#1284: FILE: fs/notify/inotify/inotify_user.c:254:
+	while(!list_empty(&group->mark_entries)) {

CHECK:SPACING: No space is necessary after a cast
#1336: FILE: fs/notify/inotify/inotify_user.c:296:
+		ret = put_user(send_len, (int __user *) p);

WARNING:LONG_LINE_COMMENT: line length of 107 exceeds 100 columns
#1378: FILE: fs/notify/inotify/inotify_user.c:344:
+	/* fsnotify_obtain_group took a reference to group, we put this when we kill the file in the end */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1509: FILE: fs/notify/inotify/inotify_user.c:471:
+    .name^I= "inotifyfs",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1510: FILE: fs/notify/inotify/inotify_user.c:472:
+    .get_sb^I= inotify_get_sb,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1511: FILE: fs/notify/inotify/inotify_user.c:473:
+    .kill_sb^I= kill_anon_super,$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1647: FILE: include/linux/inotify.h:115:
+extern void fsn_inotify_unmount_inodes(struct list_head *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct list_head *' should also have an identifier name
#1647: FILE: include/linux/inotify.h:115:
+extern void fsn_inotify_unmount_inodes(struct list_head *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000193017.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 28 warnings, 11 checks, 1537 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000193017.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
