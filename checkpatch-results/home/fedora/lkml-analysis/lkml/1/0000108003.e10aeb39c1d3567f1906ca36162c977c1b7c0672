WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#59: FILE: drivers/ieee802154/Kconfig:25:
+config IEEE802154_FAKELB
+	tristate "Fake LR-WPAN driver with several interconnected devices"
+	---help---
+	  Say Y here to enable the fake driver that can emulate a net
+          of several interconnected radio devices.
+
+          This driver can also be built as a module. To do so say M here.
+	  The module will be called 'fakelb'.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#80: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#85: FILE: drivers/ieee802154/fakelb.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#100: FILE: drivers/ieee802154/fakelb.c:16:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#101: FILE: drivers/ieee802154/fakelb.c:17:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#142: FILE: drivers/ieee802154/fakelb.c:58:
+	pr_debug("%s\n", __func__);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#144: FILE: drivers/ieee802154/fakelb.c:60:
+	BUG_ON(!level);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#152: FILE: drivers/ieee802154/fakelb.c:68:
+	pr_debug("%s\n", __func__);

WARNING:LINE_SPACING: Missing a blank line after declarations
#161: FILE: drivers/ieee802154/fakelb.c:77:
+	struct fake_dev_priv *priv = dev->priv;
+	pr_debug("%s %d %d\n", __func__, priv->cur_state, state);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#163: FILE: drivers/ieee802154/fakelb.c:79:
+	if (state != PHY_TRX_OFF &&
[...]
+	else if (state == PHY_FORCE_TRX_OFF) {
[...]
+	} else if (priv->cur_state == state)
[...]
+	else if ((state == PHY_TRX_OFF || state == PHY_RX_ON) &&
[...]
+	} else if ((state == PHY_TRX_OFF || state == PHY_TX_ON) &&
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#174: FILE: drivers/ieee802154/fakelb.c:90:
+	else if ((state == PHY_TRX_OFF || state == PHY_RX_ON) &&
+			is_transmitting(dev)) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#181: FILE: drivers/ieee802154/fakelb.c:97:
+		return PHY_BUSY_RX;
+	} else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#220: FILE: drivers/ieee802154/fakelb.c:136:
+		struct fake_dev_priv *dp;
+		list_for_each_entry(dp, &priv->fake->list, list)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#240: FILE: drivers/ieee802154/fakelb.c:156:
+static int ieee802154fake_add_priv(struct device *dev, struct fake_priv *fake,
+		const u8 *macaddr)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*priv)...) over kzalloc(sizeof(struct fake_dev_priv)...)
#245: FILE: drivers/ieee802154/fakelb.c:161:
+	priv = kzalloc(sizeof(struct fake_dev_priv), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#297: FILE: drivers/ieee802154/fakelb.c:213:
+adddev_store(struct device *dev, struct device_attribute *attr,
+	const char *buf, size_t n)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#323: FILE: drivers/ieee802154/fakelb.c:239:
+			hw[i/2] = (hw[i/2] & 0xf0) | ch;
 			    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#323: FILE: drivers/ieee802154/fakelb.c:239:
+			hw[i/2] = (hw[i/2] & 0xf0) | ch;
 			               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#325: FILE: drivers/ieee802154/fakelb.c:241:
+			hw[i/2] = ch << 4;
 			    ^

WARNING:DEVICE_ATTR_WO: Use DEVICE_ATTR_WO
#334: FILE: drivers/ieee802154/fakelb.c:250:
+}

The DEVICE_AATR_WO(name) helper macro can be used instead of
DEVICE_ATTR(name, 0200, NULL, name_store);

Note that the macro automatically appends _store to the
named attribute variable of the device for the store method.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

CHECK:LINE_SPACING: Please don't use multiple blank lines
#348: FILE: drivers/ieee802154/fakelb.c:264:
+
+

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#349: FILE: drivers/ieee802154/fakelb.c:265:
+static int __devinit ieee802154fake_probe(struct platform_device *pdev)

WARNING:LINE_SPACING: Missing a blank line after declarations
#355: FILE: drivers/ieee802154/fakelb.c:271:
+	int err = -ENOMEM;
+	priv = kzalloc(sizeof(struct fake_priv), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*priv)...) over kzalloc(sizeof(struct fake_priv)...)
#355: FILE: drivers/ieee802154/fakelb.c:271:
+	priv = kzalloc(sizeof(struct fake_priv), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#367: FILE: drivers/ieee802154/fakelb.c:283:
+	err = ieee802154fake_add_priv(&pdev->dev, priv,
+			"\xde\xad\xbe\xaf\xca\xfe\xba\xbe");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#372: FILE: drivers/ieee802154/fakelb.c:288:
+/*	err = ieee802154fake_add_priv(priv,
+			"\x67\x45\x23\x01\x67\x45\x23\x01");

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#374: FILE: drivers/ieee802154/fakelb.c:290:
+		goto err_slave;*/

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#390: FILE: drivers/ieee802154/fakelb.c:306:
+static int __devexit ieee802154fake_remove(struct platform_device *pdev)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#415: FILE: drivers/ieee802154/fakelb.c:331:
+	ieee802154fake_dev = platform_device_register_simple(

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000108003.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 15 warnings, 12 checks, 365 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000108003.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
