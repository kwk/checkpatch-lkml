WARNING:SPACING: Unnecessary space before function pointer arguments
#109: FILE: drivers/spi/spi_mpc8xxx.c:87:
+	void (*get_rx) (u32 rx_data, struct mpc8xxx_spi *);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mpc8xxx_spi *' should also have an identifier name
#109: FILE: drivers/spi/spi_mpc8xxx.c:87:
+	void (*get_rx) (u32 rx_data, struct mpc8xxx_spi *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: missing space after return type
#110: FILE: drivers/spi/spi_mpc8xxx.c:88:
+	u32(*get_tx) (struct mpc8xxx_spi *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#110: FILE: drivers/spi/spi_mpc8xxx.c:88:
+	u32(*get_tx) (struct mpc8xxx_spi *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mpc8xxx_spi *' should also have an identifier name
#110: FILE: drivers/spi/spi_mpc8xxx.c:88:
+	u32(*get_tx) (struct mpc8xxx_spi *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#123: FILE: drivers/spi/spi_mpc8xxx.c:112:
+	void (*get_rx) (u32 rx_data, struct mpc8xxx_spi *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mpc8xxx_spi *' should also have an identifier name
#123: FILE: drivers/spi/spi_mpc8xxx.c:112:
+	void (*get_rx) (u32 rx_data, struct mpc8xxx_spi *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#124: FILE: drivers/spi/spi_mpc8xxx.c:113:
+	u32 (*get_tx) (struct mpc8xxx_spi *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mpc8xxx_spi *' should also have an identifier name
#124: FILE: drivers/spi/spi_mpc8xxx.c:113:
+	u32 (*get_tx) (struct mpc8xxx_spi *);

CHECK:BRACES: braces {} should be used on all arms of this statement
#298: FILE: drivers/spi/spi_mpc8xxx.c:274:
+	if ((mpc8xxx_spi->spibrg / hz) > 64) {
[...]
 		if (pm > 16)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#548: FILE: drivers/spi/spi_mpc8xxx.c:513:
+		u32 word = mpc8xxx_spi->get_tx(mpc8xxx_spi);
+		mpc8xxx_spi_write_reg(&mpc8xxx_spi->base->transmit, word);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#561: FILE: drivers/spi/spi_mpc8xxx.c:523:
 }
+static int mpc8xxx_spi_transfer(struct spi_device *spi,

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#590: FILE: drivers/spi/spi_mpc8xxx.c:546:
 static struct spi_master * __devinit

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mpc8xxx_spi->base"
#648: FILE: drivers/spi/spi_mpc8xxx.c:583:
+	if (mpc8xxx_spi->base == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#694: FILE: drivers/spi/spi_mpc8xxx.c:617:
+	mpc8xxx_spi->workqueue = create_singlethread_workqueue(

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mpc8xxx_spi->workqueue"
#697: FILE: drivers/spi/spi_mpc8xxx.c:619:
+	if (mpc8xxx_spi->workqueue == NULL) {

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#728: FILE: drivers/spi/spi_mpc8xxx.c:646:
+static int __devexit mpc8xxx_spi_remove(struct device *dev)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#817: FILE: drivers/spi/spi_mpc8xxx.c:785:
+static int __devinit of_mpc8xxx_spi_probe(struct of_device *ofdev,

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#857: FILE: drivers/spi/spi_mpc8xxx.c:853:
+static int __devexit of_mpc8xxx_spi_remove(struct of_device *ofdev)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#896: FILE: drivers/spi/spi_mpc8xxx.c:885:
+static int __devinit plat_mpc8xxx_spi_probe(struct platform_device *pdev)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#912: FILE: drivers/spi/spi_mpc8xxx.c:908:
+static int __devexit plat_mpc8xxx_spi_remove(struct platform_device *pdev)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000131450.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 16 warnings, 5 checks, 879 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000131450.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
