WARNING:REPEATED_WORD: Possible repeated word: 'with'
#53: 
      ipg.c doesn't compile with with CONFIG_HIGHMEM64G

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#218: FILE: drivers/net/pasemi_mac.c:71:
+#define TX_RING(mac, num)	((mac)->tx->ring[(num) & (TX_RING_SIZE-1)])
                          	                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#219: FILE: drivers/net/pasemi_mac.c:72:
+#define TX_RING_INFO(mac, num)	((mac)->tx->ring_info[(num) & (TX_RING_SIZE-1)])
                               	                                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#220: FILE: drivers/net/pasemi_mac.c:73:
+#define RX_RING(mac, num)	((mac)->rx->ring[(num) & (RX_RING_SIZE-1)])
                          	                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#221: FILE: drivers/net/pasemi_mac.c:74:
+#define RX_RING_INFO(mac, num)	((mac)->rx->ring_info[(num) & (RX_RING_SIZE-1)])
                               	                                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: drivers/net/pasemi_mac.c:178:
+static int pasemi_mac_unmap_tx_skb(struct pasemi_mac *mac,
+				    struct sk_buff *skb,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#258: FILE: drivers/net/pasemi_mac.c:190:
+		pci_unmap_page(mac->dma_pdev, dmas[f+1], frag->size,
 		                                    ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ring->ring_info)...) over kzalloc(sizeof(struct pasemi_mac_buffer)...)
#283: FILE: drivers/net/pasemi_mac.c:216:
+	ring->ring_info = kzalloc(sizeof(struct pasemi_mac_buffer) *

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ring->ring_info)...) over kzalloc(sizeof(struct pasemi_mac_buffer)...)
#377: FILE: drivers/net/pasemi_mac.c:306:
+	ring->ring_info = kzalloc(sizeof(struct pasemi_mac_buffer) *

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#462: FILE: drivers/net/pasemi_mac.c:359:
+	dma_addr_t dmas[MAX_SKB_FRAGS+1];
 	                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#474: FILE: drivers/net/pasemi_mac.c:371:
+		info = &TX_RING_INFO(mac, i+1);
 		                           ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#475: FILE: drivers/net/pasemi_mac.c:372:
+		if (info->dma && info->skb) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#477: FILE: drivers/net/pasemi_mac.c:374:
+				dmas[j] = TX_RING_INFO(mac, i+1+j).dma;
 				                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#477: FILE: drivers/net/pasemi_mac.c:374:
+				dmas[j] = TX_RING_INFO(mac, i+1+j).dma;
 				                               ^

CHECK:BRACES: Unbalanced braces around else statement
#479: FILE: drivers/net/pasemi_mac.c:376:
+		} else

CHECK:BRACES: Unbalanced braces around else statement
#576: FILE: drivers/net/pasemi_mac.c:447:
+		else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#623: FILE: drivers/net/pasemi_mac.c:515:
+	printk(KERN_ERR "pasemi_mac: rx error. macrx %016lx, rx status %lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#624: FILE: drivers/net/pasemi_mac.c:516:
+	printk(KERN_ERR "pasemi_mac: rx error. macrx %016lx, rx status %lx\n",
+		macrx, *mac->rx_status);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#626: FILE: drivers/net/pasemi_mac.c:518:
+	printk(KERN_ERR "pasemi_mac: rcmdsta %08x ccmdsta %08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#627: FILE: drivers/net/pasemi_mac.c:519:
+	printk(KERN_ERR "pasemi_mac: rcmdsta %08x ccmdsta %08x\n",
+		rcmdsta, ccmdsta);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#639: FILE: drivers/net/pasemi_mac.c:531:
+	printk(KERN_ERR "pasemi_mac: tx error. mactx 0x%016lx, "\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#639: FILE: drivers/net/pasemi_mac.c:531:
+	printk(KERN_ERR "pasemi_mac: tx error. mactx 0x%016lx, "\

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#642: FILE: drivers/net/pasemi_mac.c:534:
+	printk(KERN_ERR "pasemi_mac: tcmdsta 0x%08x\n", cmdsta);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#689: FILE: drivers/net/pasemi_mac.c:567:
+		BUG_ON(!(macrx & XCT_MACRX_RR_8BRES));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#698: FILE: drivers/net/pasemi_mac.c:569:
+		eval = (RX_RING(mac, n+1) & XCT_RXRES_8B_EVAL_M) >>
 		                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#700: FILE: drivers/net/pasemi_mac.c:571:
+		buf_index = eval-1;
 		                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#702: FILE: drivers/net/pasemi_mac.c:573:
+		dma = (RX_RING(mac, n+2) & XCT_PTR_ADDR_M);
 		                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#747: FILE: drivers/net/pasemi_mac.c:618:
+		RX_RING(mac, n+1) = 0;
 		              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#761: FILE: drivers/net/pasemi_mac.c:631:
+		n &= (RX_RING_SIZE-1);
 		                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#782: FILE: drivers/net/pasemi_mac.c:650:
+#define TX_CLEAN_BATCHSIZE (128/MAX_SKB_FRAGS)
                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#798: FILE: drivers/net/pasemi_mac.c:660:
+	dma_addr_t dmas[TX_CLEAN_BATCHSIZE][MAX_SKB_FRAGS+1];
 	                                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#837: FILE: drivers/net/pasemi_mac.c:691:
+		skb = TX_RING_INFO(mac, i+1).skb;
 		                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#846: FILE: drivers/net/pasemi_mac.c:696:
+			dmas[descr_count][j] = TX_RING_INFO(mac, i+1+j).dma;
 			                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#846: FILE: drivers/net/pasemi_mac.c:696:
+			dmas[descr_count][j] = TX_RING_INFO(mac, i+1+j).dma;
 			                                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#849: FILE: drivers/net/pasemi_mac.c:699:
+		TX_RING(mac, i+1) = 0;
 		              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#860: FILE: drivers/net/pasemi_mac.c:708:
+	mac->tx->next_to_clean = i & (TX_RING_SIZE-1);
 	                                          ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#923: FILE: drivers/net/pasemi_mac.c:958:
+	write_dma_reg(mac, PAS_DMA_RXCHAN_INCR(mac->dma_rxch), RX_RING_SIZE>>1);
 	                                                                   ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#945: FILE: drivers/net/pasemi_mac.c:1046:
+		printk(KERN_DEBUG "pasemi_mac: rcmdsta error: 0x%08x\n", sta);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#952: FILE: drivers/net/pasemi_mac.c:1053:
+		printk(KERN_DEBUG "pasemi_mac: ccmdsta error: 0x%08x\n", sta);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#959: FILE: drivers/net/pasemi_mac.c:1060:
+		printk(KERN_DEBUG "pasemi_mac: tcmdsta error: 0x%08x\n", sta);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1016: FILE: drivers/net/pasemi_mac.c:1124:
+	dma_addr_t map[MAX_SKB_FRAGS+1];
 	                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1017: FILE: drivers/net/pasemi_mac.c:1125:
+	unsigned int map_size[MAX_SKB_FRAGS+1];
 	                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1041: FILE: drivers/net/pasemi_mac.c:1159:
+		map[i+1] = pci_map_page(mac->dma_pdev, frag->page,
 		     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1044: FILE: drivers/net/pasemi_mac.c:1162:
+		map_size[i+1] = frag->size;
 		          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1045: FILE: drivers/net/pasemi_mac.c:1163:
+		if (dma_mapping_error(map[i+1])) {
 		                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1085: FILE: drivers/net/pasemi_mac.c:1189:
+		TX_RING(mac, txring->next_to_fill+i) =
 		                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1087: FILE: drivers/net/pasemi_mac.c:1191:
+		TX_RING_INFO(mac, txring->next_to_fill+i).dma = map[i];
 		                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1104: FILE: drivers/net/pasemi_mac.c:1202:
+				(TX_RING_SIZE-1);
 				             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1113: FILE: drivers/net/pasemi_mac.c:1209:
+	write_dma_reg(mac, PAS_DMA_TXCHAN_INCR(mac->dma_txch), (nfrags+2) >> 1);
 	                                                              ^

CHECK:CAMELCASE: Avoid CamelCase: <phyDevice>
#1320: FILE: drivers/net/qla3xxx.c:84:
+	PHY_DEVICE_et phyDevice;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1329: FILE: drivers/net/qla3xxx.c:333:
+				printk(KERN_ERR "%s: PCI mapping failed with error: %d\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1365: FILE: drivers/net/qla3xxx.c:958:
+static PHY_DEVICE_et getPhyType (struct ql3_adapter *qdev,

CHECK:CAMELCASE: Avoid CamelCase: <getPhyType>
#1365: FILE: drivers/net/qla3xxx.c:958:
+static PHY_DEVICE_et getPhyType (struct ql3_adapter *qdev,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1420: FILE: drivers/net/qla3xxx.c:1097:
+                ^Ireturn err;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1420: FILE: drivers/net/qla3xxx.c:1097:
+                ^Ireturn err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1420: FILE: drivers/net/qla3xxx.c:1097:
+                ^Ireturn err;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1432: FILE: drivers/net/qla3xxx.c:1108:
+         ^IagereAddrChangeNeeded = true;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1432: FILE: drivers/net/qla3xxx.c:1108:
+         ^IagereAddrChangeNeeded = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1432: FILE: drivers/net/qla3xxx.c:1108:
+         ^IagereAddrChangeNeeded = true;$

CHECK:CAMELCASE: Avoid CamelCase: <agereAddrChangeNeeded>
#1432: FILE: drivers/net/qla3xxx.c:1108:
+         	agereAddrChangeNeeded = true;

CHECK:CAMELCASE: Avoid CamelCase: <phyAgereSpecificInit>
#1441: FILE: drivers/net/qla3xxx.c:1117:
+		phyAgereSpecificInit(qdev, miiAddr);

CHECK:CAMELCASE: Avoid CamelCase: <miiAddr>
#1441: FILE: drivers/net/qla3xxx.c:1117:
+		phyAgereSpecificInit(qdev, miiAddr);

ERROR:SPACING: space required before the open parenthesis '('
#1473: FILE: drivers/net/qla3xxx.c:1459:
+	if(portConfiguration &

CHECK:CAMELCASE: Avoid CamelCase: <portConfiguration>
#1473: FILE: drivers/net/qla3xxx.c:1459:
+	if(portConfiguration &

ERROR:SPACING: space required before the open parenthesis '('
#1481: FILE: drivers/net/qla3xxx.c:1465:
+	if(portConfiguration &

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1544: FILE: drivers/net/qla3xxx.c:1756:
+		ql_write_page0_reg(qdev,
 			&port_regs->macMIIMgmtControlReg, 0x0f00000);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1552: FILE: drivers/net/qla3xxx.c:1939:
+					printk(KERN_ERR "%s: PCI mapping failed with error: %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1624: FILE: drivers/net/qla3xxx.c:2472:
+		printk(KERN_ERR "%s: PCI mapping failed with error: %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1639: FILE: drivers/net/qla3xxx.c:2507:
+					printk(KERN_ERR "%s: PCI mapping outbound address list with error: %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1648: FILE: drivers/net/qla3xxx.c:2533:
+				printk(KERN_ERR "%s: PCI mapping frags failed with error: %d\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1752: FILE: drivers/net/qla3xxx.h:1140:
+	struct map_list map[MAX_SKB_FRAGS+1];
 	                                 ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000373714.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 20 warnings, 47 checks, 1577 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000373714.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
