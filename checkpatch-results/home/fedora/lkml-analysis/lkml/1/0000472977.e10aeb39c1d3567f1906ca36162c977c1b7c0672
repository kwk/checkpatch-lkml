WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
This patch introduces task_wake_target() as a way to refer to a code path that

WARNING:TYPO_SPELLING: 'interract' may be misspelled - perhaps 'interact'?
#43: 
interract with fibrils.  Once that is decided callers of wake_up_state() are
^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#53: 
--- a/arch/i386/kernel/ptrace.c	Mon Jan 29 15:36:16 2007 -0800

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: fs/aio.c:910:
+^I        wake_up_target(iocb->ki_obj.wake_target);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#285: FILE: include/linux/aio.h:101:
+^I^Ivoid ^I^I^I*wake_target;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#386: FILE: include/linux/sched.h:1341:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#391: FILE: include/linux/sched.h:1346:
+extern int FASTCALL(wake_up_state(struct task_struct * tsk, unsigned int state)) __deprecated;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#391: FILE: include/linux/sched.h:1346:
+extern int FASTCALL(wake_up_state(struct task_struct * tsk, unsigned int state)) __deprecated;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#392: FILE: include/linux/sched.h:1347:
+extern int FASTCALL(wake_up_target(void *wake_target));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#393: FILE: include/linux/sched.h:1348:
+extern int FASTCALL(wake_up_task(struct task_struct *task));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#487: FILE: ipc/mqueue.c:400:
+^I^Iif (wake_target_to_task(walk->wake_target)->static_prio $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!t->wake_target"
#701: FILE: kernel/hrtimer.c:693:
+	return t->wake_target == NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#810: FILE: kernel/posix-cpu-timers.c:1426:
+^I/* $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#891: FILE: kernel/sched.c:1415:
+		BUG_ON(!list_empty(&fibril->run_list));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#959: FILE: kernel/sched.c:1621:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#993: FILE: kernel/sched.c:3845:
+ * This is a void * so that it's harder for people to stash it in a small $

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1000: FILE: kernel/sched.c:3852:
+		return (void *)((unsigned long)task->fibril | 1);
+	} else {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1001: FILE: kernel/sched.c:3853:
+		BUG_ON((unsigned long)task & 1);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1009: FILE: kernel/sched.c:3861:
+	if ((unsigned long)wake_target & 1) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#1011: FILE: kernel/sched.c:3863:
+		fibril = (struct fibril *) ((unsigned long)wake_target ^ 1);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#1011: FILE: kernel/sched.c:3863:
+		struct fibril *fibril;
+		fibril = (struct fibril *) ((unsigned long)wake_target ^ 1);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#1013: FILE: kernel/sched.c:3865:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1018: FILE: kernel/sched.c:3870:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000472977.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 7 warnings, 8 checks, 966 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000472977.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
