CHECK:LINE_SPACING: Please don't use multiple blank lines
#89: FILE: fs/ufs/file.c:32:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#180: FILE: fs/ufs/ufs.h:1:
+#ifndef _UFS_UFS_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#184: FILE: fs/ufs/ufs.h:5:
+#define UFS_CGNO_EMPTY ((unsigned)-1)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#191: FILE: fs/ufs/ufs.h:12:
+	struct ufs_sb_private_info * s_uspi;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo	* bar" should be "foo	*bar"
#192: FILE: fs/ufs/ufs.h:13:
+	struct ufs_csum	* s_csp;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#193: FILE: fs/ufs/ufs.h:14:
+	unsigned s_bytesex;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#194: FILE: fs/ufs/ufs.h:15:
+	unsigned s_flags;

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#195: FILE: fs/ufs/ufs.h:16:
+	struct buffer_head ** s_ucg;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#196: FILE: fs/ufs/ufs.h:17:
+	struct ufs_cg_private_info * s_ucpi[UFS_MAX_GROUP_LOADED];

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#197: FILE: fs/ufs/ufs.h:18:
+	unsigned s_cgno[UFS_MAX_GROUP_LOADED];

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#199: FILE: fs/ufs/ufs.h:20:
+	unsigned s_mount_opt;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#205: FILE: fs/ufs/ufs.h:26:
+		__u8	i_symlink[4*15];
 		    	           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#238: FILE: fs/ufs/ufs.h:59:
+#define ufs_clear_opt(o,opt)	o &= ~UFS_MOUNT_##opt
                        ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#238: FILE: fs/ufs/ufs.h:59:
+#define ufs_clear_opt(o,opt)	o &= ~UFS_MOUNT_##opt

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'o' may be better as '(o)' to avoid precedence issues
#238: FILE: fs/ufs/ufs.h:59:
+#define ufs_clear_opt(o,opt)	o &= ~UFS_MOUNT_##opt

ERROR:SPACING: space required after that ',' (ctx:VxV)
#239: FILE: fs/ufs/ufs.h:60:
+#define ufs_set_opt(o,opt)	o |= UFS_MOUNT_##opt
                      ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#239: FILE: fs/ufs/ufs.h:60:
+#define ufs_set_opt(o,opt)	o |= UFS_MOUNT_##opt

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'o' may be better as '(o)' to avoid precedence issues
#239: FILE: fs/ufs/ufs.h:60:
+#define ufs_set_opt(o,opt)	o |= UFS_MOUNT_##opt

ERROR:SPACING: space required after that ',' (ctx:VxV)
#240: FILE: fs/ufs/ufs.h:61:
+#define ufs_test_opt(o,opt)	((o) & UFS_MOUNT_##opt)
                       ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#247: FILE: fs/ufs/ufs.h:68:
+		printk ("UFSD (%s, %d): %s:",				\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#247: FILE: fs/ufs/ufs.h:68:
+		printk ("UFSD (%s, %d): %s:",				\

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#248: FILE: fs/ufs/ufs.h:69:
+			__FILE__, __LINE__, __FUNCTION__);		\

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#249: FILE: fs/ufs/ufs.h:70:
+		printk (f, ## a);					\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#249: FILE: fs/ufs/ufs.h:70:
+		printk (f, ## a);					\

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#256: FILE: fs/ufs/ufs.h:77:
+extern void ufs_free_fragments (struct inode *, u64, unsigned);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#256: FILE: fs/ufs/ufs.h:77:
+extern void ufs_free_fragments (struct inode *, u64, unsigned);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#256: FILE: fs/ufs/ufs.h:77:
+extern void ufs_free_fragments (struct inode *, u64, unsigned);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#256: FILE: fs/ufs/ufs.h:77:
+extern void ufs_free_fragments (struct inode *, u64, unsigned);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#256: FILE: fs/ufs/ufs.h:77:
+extern void ufs_free_fragments (struct inode *, u64, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#256: FILE: fs/ufs/ufs.h:77:
+extern void ufs_free_fragments (struct inode *, u64, unsigned);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#257: FILE: fs/ufs/ufs.h:78:
+extern void ufs_free_blocks (struct inode *, u64, unsigned);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#257: FILE: fs/ufs/ufs.h:78:
+extern void ufs_free_blocks (struct inode *, u64, unsigned);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#257: FILE: fs/ufs/ufs.h:78:
+extern void ufs_free_blocks (struct inode *, u64, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#257: FILE: fs/ufs/ufs.h:78:
+extern void ufs_free_blocks (struct inode *, u64, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#257: FILE: fs/ufs/ufs.h:78:
+extern void ufs_free_blocks (struct inode *, u64, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#257: FILE: fs/ufs/ufs.h:78:
+extern void ufs_free_blocks (struct inode *, u64, unsigned);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#258: FILE: fs/ufs/ufs.h:79:
+extern u64 ufs_new_fragments(struct inode *, void *, u64, u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#258: FILE: fs/ufs/ufs.h:79:
+extern u64 ufs_new_fragments(struct inode *, void *, u64, u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#258: FILE: fs/ufs/ufs.h:79:
+extern u64 ufs_new_fragments(struct inode *, void *, u64, u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#258: FILE: fs/ufs/ufs.h:79:
+extern u64 ufs_new_fragments(struct inode *, void *, u64, u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#258: FILE: fs/ufs/ufs.h:79:
+extern u64 ufs_new_fragments(struct inode *, void *, u64, u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#258: FILE: fs/ufs/ufs.h:79:
+extern u64 ufs_new_fragments(struct inode *, void *, u64, u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#258: FILE: fs/ufs/ufs.h:79:
+extern u64 ufs_new_fragments(struct inode *, void *, u64, u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#258: FILE: fs/ufs/ufs.h:79:
+extern u64 ufs_new_fragments(struct inode *, void *, u64, u64,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#259: FILE: fs/ufs/ufs.h:80:
+			     unsigned, int *, struct page *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#262: FILE: fs/ufs/ufs.h:83:
+extern struct ufs_cg_private_info * ufs_load_cylinder (struct super_block *, unsigned);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#262: FILE: fs/ufs/ufs.h:83:
+extern struct ufs_cg_private_info * ufs_load_cylinder (struct super_block *, unsigned);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#262: FILE: fs/ufs/ufs.h:83:
+extern struct ufs_cg_private_info * ufs_load_cylinder (struct super_block *, unsigned);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#262: FILE: fs/ufs/ufs.h:83:
+extern struct ufs_cg_private_info * ufs_load_cylinder (struct super_block *, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#262: FILE: fs/ufs/ufs.h:83:
+extern struct ufs_cg_private_info * ufs_load_cylinder (struct super_block *, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#262: FILE: fs/ufs/ufs.h:83:
+extern struct ufs_cg_private_info * ufs_load_cylinder (struct super_block *, unsigned);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#263: FILE: fs/ufs/ufs.h:84:
+extern void ufs_put_cylinder (struct super_block *, unsigned);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#263: FILE: fs/ufs/ufs.h:84:
+extern void ufs_put_cylinder (struct super_block *, unsigned);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#263: FILE: fs/ufs/ufs.h:84:
+extern void ufs_put_cylinder (struct super_block *, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#263: FILE: fs/ufs/ufs.h:84:
+extern void ufs_put_cylinder (struct super_block *, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#263: FILE: fs/ufs/ufs.h:84:
+extern void ufs_put_cylinder (struct super_block *, unsigned);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#267: FILE: fs/ufs/ufs.h:88:
+extern int ufs_add_link (struct dentry *, struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#267: FILE: fs/ufs/ufs.h:88:
+extern int ufs_add_link (struct dentry *, struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#267: FILE: fs/ufs/ufs.h:88:
+extern int ufs_add_link (struct dentry *, struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#267: FILE: fs/ufs/ufs.h:88:
+extern int ufs_add_link (struct dentry *, struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#268: FILE: fs/ufs/ufs.h:89:
+extern ino_t ufs_inode_by_name(struct inode *, struct dentry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#268: FILE: fs/ufs/ufs.h:89:
+extern ino_t ufs_inode_by_name(struct inode *, struct dentry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#268: FILE: fs/ufs/ufs.h:89:
+extern ino_t ufs_inode_by_name(struct inode *, struct dentry *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#269: FILE: fs/ufs/ufs.h:90:
+extern int ufs_make_empty(struct inode *, struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#269: FILE: fs/ufs/ufs.h:90:
+extern int ufs_make_empty(struct inode *, struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#269: FILE: fs/ufs/ufs.h:90:
+extern int ufs_make_empty(struct inode *, struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#270: FILE: fs/ufs/ufs.h:91:
+extern struct ufs_dir_entry *ufs_find_entry(struct inode *, struct dentry *, struct page **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#270: FILE: fs/ufs/ufs.h:91:
+extern struct ufs_dir_entry *ufs_find_entry(struct inode *, struct dentry *, struct page **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#270: FILE: fs/ufs/ufs.h:91:
+extern struct ufs_dir_entry *ufs_find_entry(struct inode *, struct dentry *, struct page **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page **' should also have an identifier name
#270: FILE: fs/ufs/ufs.h:91:
+extern struct ufs_dir_entry *ufs_find_entry(struct inode *, struct dentry *, struct page **);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#271: FILE: fs/ufs/ufs.h:92:
+extern int ufs_delete_entry(struct inode *, struct ufs_dir_entry *, struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#271: FILE: fs/ufs/ufs.h:92:
+extern int ufs_delete_entry(struct inode *, struct ufs_dir_entry *, struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ufs_dir_entry *' should also have an identifier name
#271: FILE: fs/ufs/ufs.h:92:
+extern int ufs_delete_entry(struct inode *, struct ufs_dir_entry *, struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#271: FILE: fs/ufs/ufs.h:92:
+extern int ufs_delete_entry(struct inode *, struct ufs_dir_entry *, struct page *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#272: FILE: fs/ufs/ufs.h:93:
+extern int ufs_empty_dir (struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#272: FILE: fs/ufs/ufs.h:93:
+extern int ufs_empty_dir (struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#272: FILE: fs/ufs/ufs.h:93:
+extern int ufs_empty_dir (struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#273: FILE: fs/ufs/ufs.h:94:
+extern struct ufs_dir_entry *ufs_dotdot(struct inode *, struct page **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#273: FILE: fs/ufs/ufs.h:94:
+extern struct ufs_dir_entry *ufs_dotdot(struct inode *, struct page **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page **' should also have an identifier name
#273: FILE: fs/ufs/ufs.h:94:
+extern struct ufs_dir_entry *ufs_dotdot(struct inode *, struct page **);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#274: FILE: fs/ufs/ufs.h:95:
+extern void ufs_set_link(struct inode *dir, struct ufs_dir_entry *de,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#284: FILE: fs/ufs/ufs.h:105:
+extern void ufs_free_inode (struct inode *inode);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#284: FILE: fs/ufs/ufs.h:105:
+extern void ufs_free_inode (struct inode *inode);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#285: FILE: fs/ufs/ufs.h:106:
+extern struct inode * ufs_new_inode (struct inode *, int);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#285: FILE: fs/ufs/ufs.h:106:
+extern struct inode * ufs_new_inode (struct inode *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#285: FILE: fs/ufs/ufs.h:106:
+extern struct inode * ufs_new_inode (struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#285: FILE: fs/ufs/ufs.h:106:
+extern struct inode * ufs_new_inode (struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#285: FILE: fs/ufs/ufs.h:106:
+extern struct inode * ufs_new_inode (struct inode *, int);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#288: FILE: fs/ufs/ufs.h:109:
+extern void ufs_read_inode (struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#288: FILE: fs/ufs/ufs.h:109:
+extern void ufs_read_inode (struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#288: FILE: fs/ufs/ufs.h:109:
+extern void ufs_read_inode (struct inode *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#289: FILE: fs/ufs/ufs.h:110:
+extern void ufs_put_inode (struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#289: FILE: fs/ufs/ufs.h:110:
+extern void ufs_put_inode (struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#289: FILE: fs/ufs/ufs.h:110:
+extern void ufs_put_inode (struct inode *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#290: FILE: fs/ufs/ufs.h:111:
+extern int ufs_write_inode (struct inode *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#290: FILE: fs/ufs/ufs.h:111:
+extern int ufs_write_inode (struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#290: FILE: fs/ufs/ufs.h:111:
+extern int ufs_write_inode (struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#290: FILE: fs/ufs/ufs.h:111:
+extern int ufs_write_inode (struct inode *, int);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#291: FILE: fs/ufs/ufs.h:112:
+extern int ufs_sync_inode (struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#291: FILE: fs/ufs/ufs.h:112:
+extern int ufs_sync_inode (struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#291: FILE: fs/ufs/ufs.h:112:
+extern int ufs_sync_inode (struct inode *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#292: FILE: fs/ufs/ufs.h:113:
+extern void ufs_delete_inode (struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#292: FILE: fs/ufs/ufs.h:113:
+extern void ufs_delete_inode (struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#292: FILE: fs/ufs/ufs.h:113:
+extern void ufs_delete_inode (struct inode *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#293: FILE: fs/ufs/ufs.h:114:
+extern struct buffer_head * ufs_bread (struct inode *, unsigned, int, int *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#293: FILE: fs/ufs/ufs.h:114:
+extern struct buffer_head * ufs_bread (struct inode *, unsigned, int, int *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#293: FILE: fs/ufs/ufs.h:114:
+extern struct buffer_head * ufs_bread (struct inode *, unsigned, int, int *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#293: FILE: fs/ufs/ufs.h:114:
+extern struct buffer_head * ufs_bread (struct inode *, unsigned, int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#293: FILE: fs/ufs/ufs.h:114:
+extern struct buffer_head * ufs_bread (struct inode *, unsigned, int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#293: FILE: fs/ufs/ufs.h:114:
+extern struct buffer_head * ufs_bread (struct inode *, unsigned, int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#293: FILE: fs/ufs/ufs.h:114:
+extern struct buffer_head * ufs_bread (struct inode *, unsigned, int, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#293: FILE: fs/ufs/ufs.h:114:
+extern struct buffer_head * ufs_bread (struct inode *, unsigned, int, int *);

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#294: FILE: fs/ufs/ufs.h:115:
+extern int ufs_getfrag_block (struct inode *inode, sector_t fragment, struct buffer_head *bh_result, int create);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#294: FILE: fs/ufs/ufs.h:115:
+extern int ufs_getfrag_block (struct inode *inode, sector_t fragment, struct buffer_head *bh_result, int create);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#294: FILE: fs/ufs/ufs.h:115:
+extern int ufs_getfrag_block (struct inode *inode, sector_t fragment, struct buffer_head *bh_result, int create);

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#300: FILE: fs/ufs/ufs.h:121:
+extern void ufs_warning (struct super_block *, const char *, const char *, ...) __attribute__ ((format (printf, 3, 4)));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#300: FILE: fs/ufs/ufs.h:121:
+extern void ufs_warning (struct super_block *, const char *, const char *, ...) __attribute__ ((format (printf, 3, 4)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(3, 4) over __attribute__((format(printf, 3, 4)))
#300: FILE: fs/ufs/ufs.h:121:
+extern void ufs_warning (struct super_block *, const char *, const char *, ...) __attribute__ ((format (printf, 3, 4)));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#300: FILE: fs/ufs/ufs.h:121:
+extern void ufs_warning (struct super_block *, const char *, const char *, ...) __attribute__ ((format (printf, 3, 4)));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#300: FILE: fs/ufs/ufs.h:121:
+extern void ufs_warning (struct super_block *, const char *, const char *, ...) __attribute__ ((format (printf, 3, 4)));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#300: FILE: fs/ufs/ufs.h:121:
+extern void ufs_warning (struct super_block *, const char *, const char *, ...) __attribute__ ((format (printf, 3, 4)));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#300: FILE: fs/ufs/ufs.h:121:
+extern void ufs_warning (struct super_block *, const char *, const char *, ...) __attribute__ ((format (printf, 3, 4)));

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#301: FILE: fs/ufs/ufs.h:122:
+extern void ufs_error (struct super_block *, const char *, const char *, ...) __attribute__ ((format (printf, 3, 4)));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#301: FILE: fs/ufs/ufs.h:122:
+extern void ufs_error (struct super_block *, const char *, const char *, ...) __attribute__ ((format (printf, 3, 4)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(3, 4) over __attribute__((format(printf, 3, 4)))
#301: FILE: fs/ufs/ufs.h:122:
+extern void ufs_error (struct super_block *, const char *, const char *, ...) __attribute__ ((format (printf, 3, 4)));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#301: FILE: fs/ufs/ufs.h:122:
+extern void ufs_error (struct super_block *, const char *, const char *, ...) __attribute__ ((format (printf, 3, 4)));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#301: FILE: fs/ufs/ufs.h:122:
+extern void ufs_error (struct super_block *, const char *, const char *, ...) __attribute__ ((format (printf, 3, 4)));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#301: FILE: fs/ufs/ufs.h:122:
+extern void ufs_error (struct super_block *, const char *, const char *, ...) __attribute__ ((format (printf, 3, 4)));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#301: FILE: fs/ufs/ufs.h:122:
+extern void ufs_error (struct super_block *, const char *, const char *, ...) __attribute__ ((format (printf, 3, 4)));

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#302: FILE: fs/ufs/ufs.h:123:
+extern void ufs_panic (struct super_block *, const char *, const char *, ...) __attribute__ ((format (printf, 3, 4)));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#302: FILE: fs/ufs/ufs.h:123:
+extern void ufs_panic (struct super_block *, const char *, const char *, ...) __attribute__ ((format (printf, 3, 4)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(3, 4) over __attribute__((format(printf, 3, 4)))
#302: FILE: fs/ufs/ufs.h:123:
+extern void ufs_panic (struct super_block *, const char *, const char *, ...) __attribute__ ((format (printf, 3, 4)));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#302: FILE: fs/ufs/ufs.h:123:
+extern void ufs_panic (struct super_block *, const char *, const char *, ...) __attribute__ ((format (printf, 3, 4)));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#302: FILE: fs/ufs/ufs.h:123:
+extern void ufs_panic (struct super_block *, const char *, const char *, ...) __attribute__ ((format (printf, 3, 4)));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#302: FILE: fs/ufs/ufs.h:123:
+extern void ufs_panic (struct super_block *, const char *, const char *, ...) __attribute__ ((format (printf, 3, 4)));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#302: FILE: fs/ufs/ufs.h:123:
+extern void ufs_panic (struct super_block *, const char *, const char *, ...) __attribute__ ((format (printf, 3, 4)));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#308: FILE: fs/ufs/ufs.h:129:
+extern int ufs_truncate (struct inode *, loff_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#308: FILE: fs/ufs/ufs.h:129:
+extern int ufs_truncate (struct inode *, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#308: FILE: fs/ufs/ufs.h:129:
+extern int ufs_truncate (struct inode *, loff_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#308: FILE: fs/ufs/ufs.h:129:
+extern int ufs_truncate (struct inode *, loff_t);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#325: FILE: fs/ufs/ufs.h:146:
+static inline u64 ufs_dtog(struct ufs_sb_private_info * uspi, u64 b)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#330: FILE: fs/ufs/ufs.h:151:
+}
+/* #define	ufs_dtogd(d)	((d) % uspi->s_fpg) */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#331: FILE: fs/ufs/ufs.h:152:
+static inline u32 ufs_dtogd(struct ufs_sb_private_info * uspi, u64 b)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000396131.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 14 errors, 98 warnings, 31 checks, 393 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000396131.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
