WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
Basic driver for 8-bit SPI based MCP23S08 GPIO expander, without support for

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#56: FILE: drivers/gpio/Kconfig:55:
+config GPIO_MCP23S08
+	tristate "Microchip MCP23S08 I/O expander"
+	depends on SPI_MASTER
+	help
+	  SPI driver for Microchip MCP23S08 I/O expander.  This provides
+	  a GPIO interface supporting inputs and outputs.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#76: FILE: drivers/gpio/mcp23s08.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/gpio.h> instead of <asm/gpio.h>
#88: FILE: drivers/gpio/mcp23s08.c:13:
+#include <asm/gpio.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#90: FILE: drivers/gpio/mcp23s08.c:15:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#104: FILE: drivers/gpio/mcp23s08.c:29:
+#	define IOCON_SEQOP	(1 << 5)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#105: FILE: drivers/gpio/mcp23s08.c:30:
+#	define IOCON_HAEN	(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#106: FILE: drivers/gpio/mcp23s08.c:31:
+#	define IOCON_ODR	(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#107: FILE: drivers/gpio/mcp23s08.c:32:
+#	define IOCON_INTPOL	(1 << 1)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#127: FILE: drivers/gpio/mcp23s08.c:52:
+static int mcp23s08_read(struct mcp23s08 *mcp, unsigned reg)

WARNING:SIZEOF_PARENTHESIS: sizeof tx should be sizeof(tx)
#134: FILE: drivers/gpio/mcp23s08.c:59:
+	status = spi_write_then_read(mcp->spi, tx, sizeof tx, rx, sizeof rx);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#138: FILE: drivers/gpio/mcp23s08.c:63:
+static int mcp23s08_write(struct mcp23s08 *mcp, unsigned reg, u8 val)

WARNING:SIZEOF_PARENTHESIS: sizeof tx should be sizeof(tx)
#145: FILE: drivers/gpio/mcp23s08.c:70:
+	return spi_write_then_read(mcp->spi, tx, sizeof tx, NULL, 0);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#149: FILE: drivers/gpio/mcp23s08.c:74:
+mcp23s08_read_regs(struct mcp23s08 *mcp, unsigned reg, u8 *vals, unsigned n)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#149: FILE: drivers/gpio/mcp23s08.c:74:
+mcp23s08_read_regs(struct mcp23s08 *mcp, unsigned reg, u8 *vals, unsigned n)

WARNING:SIZEOF_PARENTHESIS: sizeof mcp->cache should be sizeof(mcp->cache)
#153: FILE: drivers/gpio/mcp23s08.c:78:
+	if ((n + reg) > sizeof mcp->cache)

WARNING:SIZEOF_PARENTHESIS: sizeof tx should be sizeof(tx)
#157: FILE: drivers/gpio/mcp23s08.c:82:
+	return spi_write_then_read(mcp->spi, tx, sizeof tx, vals, n);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#162: FILE: drivers/gpio/mcp23s08.c:87:
+static int mcp23s08_direction_input(struct gpio_chip *chip, unsigned offset)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#174: FILE: drivers/gpio/mcp23s08.c:99:
+static int mcp23s08_get(struct gpio_chip *chip, unsigned offset)

CHECK:BRACES: braces {} should be used on all arms of this statement
#183: FILE: drivers/gpio/mcp23s08.c:108:
+	if (status < 0)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#185: FILE: drivers/gpio/mcp23s08.c:110:
+	else {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#193: FILE: drivers/gpio/mcp23s08.c:118:
+static int __mcp23s08_set(struct mcp23s08 *mcp, unsigned mask, int value)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#205: FILE: drivers/gpio/mcp23s08.c:130:
+static void mcp23s08_set(struct gpio_chip *chip, unsigned offset, int value)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#216: FILE: drivers/gpio/mcp23s08.c:141:
+mcp23s08_direction_output(struct gpio_chip *chip, unsigned offset, int value)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#246: FILE: drivers/gpio/mcp23s08.c:171:
+	unsigned	t;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#247: FILE: drivers/gpio/mcp23s08.c:172:
+	unsigned	mask;

WARNING:SIZEOF_PARENTHESIS: sizeof mcp->cache should be sizeof(mcp->cache)
#255: FILE: drivers/gpio/mcp23s08.c:180:
+	t = mcp23s08_read_regs(mcp, 0, mcp->cache, sizeof mcp->cache);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#269: FILE: drivers/gpio/mcp23s08.c:194:
+		seq_printf(s, " gpio-%-3d P%c.%d (%-12s) %s %s %s",
+			chip->base + t, bank, t, label,

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#274: FILE: drivers/gpio/mcp23s08.c:199:
+		seq_printf(s, "\n");

WARNING:SIZEOF_PARENTHESIS: sizeof *mcp should be sizeof(*mcp)
#297: FILE: drivers/gpio/mcp23s08.c:222:
+	mcp = kzalloc(sizeof *mcp, GFP_KERNEL);

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#306: FILE: drivers/gpio/mcp23s08.c:231:
+	mcp->chip.label = "mcp23s08",
+
+	mcp->chip.direction_input = mcp23s08_direction_input;

CHECK:SPACING: No space is necessary after a cast
#326: FILE: drivers/gpio/mcp23s08.c:251:
+		status = mcp23s08_write(mcp, MCP_IOCON, (u8) status);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SIZEOF_PARENTHESIS: sizeof mcp->cache should be sizeof(mcp->cache)
#336: FILE: drivers/gpio/mcp23s08.c:261:
+	status = mcp23s08_read_regs(mcp, 0, mcp->cache, sizeof mcp->cache);

WARNING:SIZEOF_PARENTHESIS: sizeof tx should be sizeof(tx)
#358: FILE: drivers/gpio/mcp23s08.c:283:
+		status = spi_write_then_read(mcp->spi, tx, sizeof tx, NULL, 0);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#436: FILE: include/linux/spi/mcp23s08.h:1:
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#446: FILE: include/linux/spi/mcp23s08.h:11:
+	unsigned	base;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#454: FILE: include/linux/spi/mcp23s08.h:19:
+	int		(*setup)(struct spi_device *spi,
+					int gpio, unsigned ngpio,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#454: FILE: include/linux/spi/mcp23s08.h:19:
+					int gpio, unsigned ngpio,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#457: FILE: include/linux/spi/mcp23s08.h:22:
+	int		(*teardown)(struct spi_device *spi,
+					int gpio, unsigned ngpio,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#457: FILE: include/linux/spi/mcp23s08.h:22:
+					int gpio, unsigned ngpio,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000342770.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 29 warnings, 11 checks, 398 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000342770.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
