WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#45: FILE: drivers/block/drbd/drbd_main.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#46: FILE: drivers/block/drbd/drbd_main.c:2:
+/*
+   drbd.c

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#66: FILE: drivers/block/drbd/drbd_main.c:22:
+   the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#74: FILE: drivers/block/drbd/drbd_main.c:30:
+#include <asm/uaccess.h>

CHECK:CAMELCASE: Avoid CamelCase: <Drbd_thread>
#112: FILE: drivers/block/drbd/drbd_main.c:68:
+int drbdd_init(struct Drbd_thread *);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#112: FILE: drivers/block/drbd/drbd_main.c:68:
+int drbdd_init(struct Drbd_thread *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct Drbd_thread *' should also have an identifier name
#112: FILE: drivers/block/drbd/drbd_main.c:68:
+int drbdd_init(struct Drbd_thread *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#113: FILE: drivers/block/drbd/drbd_main.c:69:
+int drbd_worker(struct Drbd_thread *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct Drbd_thread *' should also have an identifier name
#113: FILE: drivers/block/drbd/drbd_main.c:69:
+int drbd_worker(struct Drbd_thread *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#114: FILE: drivers/block/drbd/drbd_main.c:70:
+int drbd_asender(struct Drbd_thread *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct Drbd_thread *' should also have an identifier name
#114: FILE: drivers/block/drbd/drbd_main.c:70:
+int drbd_asender(struct Drbd_thread *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#116: FILE: drivers/block/drbd/drbd_main.c:72:
+int drbd_init(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#119: FILE: drivers/block/drbd/drbd_main.c:75:
+STATIC int w_after_state_ch(struct drbd_conf *mdev, struct drbd_work *w, int unused);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#120: FILE: drivers/block/drbd/drbd_main.c:76:
+STATIC void after_state_ch(struct drbd_conf *mdev, union drbd_state_t os,

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#122: FILE: drivers/block/drbd/drbd_main.c:78:
+STATIC int w_md_sync(struct drbd_conf *mdev, struct drbd_work *w, int unused);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#123: FILE: drivers/block/drbd/drbd_main.c:79:
+STATIC void md_sync_timer_fn(unsigned long data);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#124: FILE: drivers/block/drbd/drbd_main.c:80:
+STATIC int w_bitmap_io(struct drbd_conf *mdev, struct drbd_work *w, int unused);

WARNING:SPLIT_STRING: quoted string split across lines
#127: FILE: drivers/block/drbd/drbd_main.c:83:
+MODULE_AUTHOR("Philipp Reisner <phil@linbit.com>, "
+	      "Lars Ellenberg <lars@linbit.com>");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#137: FILE: drivers/block/drbd/drbd_main.c:93:
+ * this becomes the boot parameter drbd.minor_count */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#175: FILE: drivers/block/drbd/drbd_main.c:131:
+ * to run. Default is /sbin/drbdadm */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#191: FILE: drivers/block/drbd/drbd_main.c:147:
+/* I do not use a standard mempool, because:
+   1) I want to hand out the preallocated objects first.

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#197: FILE: drivers/block/drbd/drbd_main.c:153:
+spinlock_t   drbd_pp_lock;

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#203: FILE: drivers/block/drbd/drbd_main.c:159:
+STATIC struct block_device_operations drbd_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(A)
#209: FILE: drivers/block/drbd/drbd_main.c:165:
+#define ARRY_SIZE(A) (sizeof(A)/sizeof(A[0]))

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#209: FILE: drivers/block/drbd/drbd_main.c:165:
+#define ARRY_SIZE(A) (sizeof(A)/sizeof(A[0]))
                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#213: FILE: drivers/block/drbd/drbd_main.c:169:
+/* When checking with sparse, and this is an inline function, sparse will
+   give tons of false positives. When this is a real functions sparse works.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*b)...) over kmalloc(sizeof(struct drbd_barrier)...)
#235: FILE: drivers/block/drbd/drbd_main.c:191:
+	b = kmalloc(sizeof(struct drbd_barrier), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#283: FILE: drivers/block/drbd/drbd_main.c:239:
+	 * when using TCQ for our write ordering code */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#284: FILE: drivers/block/drbd/drbd_main.c:240:
+	new->br_number = (newest_before->br_number+1) ?: 1;
 	                                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#293: FILE: drivers/block/drbd/drbd_main.c:249:
+void tl_release(struct drbd_conf *mdev, unsigned int barrier_nr,
+		       unsigned int set_size)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!b"
#304: FILE: drivers/block/drbd/drbd_main.c:260:
+	if (b == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: drivers/block/drbd/drbd_main.c:262:
+		ERR("BAD! BarrierAck #%u received, but no epoch in tl!?\n",
+			barrier_nr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#311: FILE: drivers/block/drbd/drbd_main.c:267:
+		ERR("BAD! BarrierAck #%u received, expected #%u!\n",
+			barrier_nr, b->br_number);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#316: FILE: drivers/block/drbd/drbd_main.c:272:
+		ERR("BAD! BarrierAck #%u received with n_req=%u, expected n_req=%u!\n",
+			barrier_nr, set_size, b->n_req);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#326: FILE: drivers/block/drbd/drbd_main.c:282:
+	/* There could be requests on the list waiting for completion
+	   of the write to the local disk. To avoid corruptions of

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#346: FILE: drivers/block/drbd/drbd_main.c:302:
+		/* if nob == NULL b was the only barrier, and becomes the new
+		   barrer. Threfore mdev->oldest_barrier points already to b */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#346: FILE: drivers/block/drbd/drbd_main.c:302:
+		   barrer. Threfore mdev->oldest_barrier points already to b */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "nob"
#348: FILE: drivers/block/drbd/drbd_main.c:304:
+		D_ASSERT(nob != NULL);

CHECK:CAMELCASE: Avoid CamelCase: <ProtocolError>
#360: FILE: drivers/block/drbd/drbd_main.c:316:
+	drbd_force_state(mdev, NS(conn, ProtocolError));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#363: FILE: drivers/block/drbd/drbd_main.c:319:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#365: FILE: drivers/block/drbd/drbd_main.c:321:
+ * or from some after_state_ch */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#384: FILE: drivers/block/drbd/drbd_main.c:340:
+		 * in case local io is still pending */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#389: FILE: drivers/block/drbd/drbd_main.c:345:
+		 * in which case w.cb is still NULL. */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "b->w.cb"
#390: FILE: drivers/block/drbd/drbd_main.c:346:
+		if (b->w.cb != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tmp"
#395: FILE: drivers/block/drbd/drbd_main.c:351:
+			D_ASSERT(tmp == NULL);

CHECK:CAMELCASE: Avoid CamelCase: <PassOn>
#441: FILE: drivers/block/drbd/drbd_main.c:397:
+	eh = PassOn;

CHECK:CAMELCASE: Avoid CamelCase: <Failed>
#442: FILE: drivers/block/drbd/drbd_main.c:398:
+	if (inc_local_if_state(mdev, Failed)) {

CHECK:CAMELCASE: Avoid CamelCase: <Diskless>
#453: FILE: drivers/block/drbd/drbd_main.c:409:
+		_drbd_set_state(_NS(mdev, disk, Diskless), ChgStateHard, NULL);

CHECK:CAMELCASE: Avoid CamelCase: <ChgStateHard>
#453: FILE: drivers/block/drbd/drbd_main.c:409:
+		_drbd_set_state(_NS(mdev, disk, Diskless), ChgStateHard, NULL);

CHECK:CAMELCASE: Avoid CamelCase: <Connected>
#459: FILE: drivers/block/drbd/drbd_main.c:415:
+	if (mdev->state.conn >= Connected) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'drbd_io_error', this function's name, in a string
#464: FILE: drivers/block/drbd/drbd_main.c:420:
+			ERR("Sending state in drbd_io_error() failed\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#471: FILE: drivers/block/drbd/drbd_main.c:427:
+	 * to ensure the md-sync-timer is stopped if running. */

CHECK:CAMELCASE: Avoid CamelCase: <CallIOEHelper>
#476: FILE: drivers/block/drbd/drbd_main.c:432:
+	if (eh == CallIOEHelper)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#491: FILE: drivers/block/drbd/drbd_main.c:447:
+	return (os.conn >= Connected && ns.conn >= Connected &&
+		 ((os.role != Primary && ns.role == Primary) ||

CHECK:CAMELCASE: Avoid CamelCase: <Primary>
#491: FILE: drivers/block/drbd/drbd_main.c:447:
+		 ((os.role != Primary && ns.role == Primary) ||

CHECK:CAMELCASE: Avoid CamelCase: <StartingSyncT>
#492: FILE: drivers/block/drbd/drbd_main.c:448:
+		  (os.conn != StartingSyncT && ns.conn == StartingSyncT) ||

CHECK:CAMELCASE: Avoid CamelCase: <StartingSyncS>
#493: FILE: drivers/block/drbd/drbd_main.c:449:
+		  (os.conn != StartingSyncS && ns.conn == StartingSyncS) ||

CHECK:CAMELCASE: Avoid CamelCase: <Disconnecting>
#495: FILE: drivers/block/drbd/drbd_main.c:451:
+		(os.conn >= Connected && ns.conn == Disconnecting) ||

CHECK:CAMELCASE: Avoid CamelCase: <VerifyS>
#496: FILE: drivers/block/drbd/drbd_main.c:452:
+		(os.conn == Connected && ns.conn == VerifyS);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#517: FILE: drivers/block/drbd/drbd_main.c:473:
+void drbd_force_state(struct drbd_conf *mdev,
+	union drbd_state_t mask, union drbd_state_t val)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#523: FILE: drivers/block/drbd/drbd_main.c:479:
+int is_valid_state_transition(struct drbd_conf *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct drbd_conf *' should also have an identifier name
#523: FILE: drivers/block/drbd/drbd_main.c:479:
+int is_valid_state_transition(struct drbd_conf *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'union drbd_state_t' should also have an identifier name
#523: FILE: drivers/block/drbd/drbd_main.c:479:
+int is_valid_state_transition(struct drbd_conf *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'union drbd_state_t' should also have an identifier name
#523: FILE: drivers/block/drbd/drbd_main.c:479:
+int is_valid_state_transition(struct drbd_conf *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#524: FILE: drivers/block/drbd/drbd_main.c:480:
+int is_valid_state_transition(struct drbd_conf *,
+	union drbd_state_t, union drbd_state_t);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#525: FILE: drivers/block/drbd/drbd_main.c:481:
+int drbd_send_state_req(struct drbd_conf *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct drbd_conf *' should also have an identifier name
#525: FILE: drivers/block/drbd/drbd_main.c:481:
+int drbd_send_state_req(struct drbd_conf *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'union drbd_state_t' should also have an identifier name
#525: FILE: drivers/block/drbd/drbd_main.c:481:
+int drbd_send_state_req(struct drbd_conf *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'union drbd_state_t' should also have an identifier name
#525: FILE: drivers/block/drbd/drbd_main.c:481:
+int drbd_send_state_req(struct drbd_conf *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#526: FILE: drivers/block/drbd/drbd_main.c:482:
+int drbd_send_state_req(struct drbd_conf *,
+	union drbd_state_t, union drbd_state_t);

WARNING:TYPO_SPELLING: 'gracefull' may be misspelled - perhaps 'graceful'?
#562: FILE: drivers/block/drbd/drbd_main.c:518:
+ * This function is the most gracefull way to change state. For some state
                              ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:CAMELCASE: Avoid CamelCase: <ChgSerialize>
#577: FILE: drivers/block/drbd/drbd_main.c:533:
+	if (f & ChgSerialize)

CHECK:CAMELCASE: Avoid CamelCase: <ChgStateVerbose>
#591: FILE: drivers/block/drbd/drbd_main.c:547:
+			if (f & ChgStateVerbose)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#606: FILE: drivers/block/drbd/drbd_main.c:562:
+		wait_event(mdev->state_wait,
+			(rv = _req_st_cond(mdev, mask, val)));

CHECK:CAMELCASE: Avoid CamelCase: <ChgWaitComplete>
#626: FILE: drivers/block/drbd/drbd_main.c:582:
+	if (f & ChgWaitComplete && rv == SS_Success) {

WARNING:TYPO_SPELLING: 'gracefull' may be misspelled - perhaps 'graceful'?
#640: FILE: drivers/block/drbd/drbd_main.c:596:
+ * This function is the most gracefull way to change state. For some state
                              ^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#672: FILE: drivers/block/drbd/drbd_main.c:628:
+void print_st_err(struct drbd_conf *mdev,
+	union drbd_state_t os, union drbd_state_t ns, int err)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#681: FILE: drivers/block/drbd/drbd_main.c:637:
+
+

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'A' - possible side-effects?
#690: FILE: drivers/block/drbd/drbd_main.c:646:
+#define PSC(A) \
+	({ if (ns.A != os.A) { \
+		pbp += sprintf(pbp, #A "( %s -> %s ) ", \
+			      A##s_to_name(os.A), \
+			      A##s_to_name(ns.A)); \
+	} })

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'A' may be better as '(A)' to avoid precedence issues
#690: FILE: drivers/block/drbd/drbd_main.c:646:
+#define PSC(A) \
+	({ if (ns.A != os.A) { \
+		pbp += sprintf(pbp, #A "( %s -> %s ) ", \
+			      A##s_to_name(os.A), \
+			      A##s_to_name(ns.A)); \
+	} })

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#691: FILE: drivers/block/drbd/drbd_main.c:647:
+	({ if (ns.A != os.A) { \

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:CAMELCASE: Avoid CamelCase: <DontCare>
#704: FILE: drivers/block/drbd/drbd_main.c:660:
+	fp = DontCare;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 53)
#717: FILE: drivers/block/drbd/drbd_main.c:673:
+	if (rv <= 0)
+		/* already found a reason to abort */;

CHECK:CAMELCASE: Avoid CamelCase: <Secondary>
#719: FILE: drivers/block/drbd/drbd_main.c:675:
+	else if (ns.role == Secondary && mdev->open_cnt)

WARNING:TYPO_SPELLING: 'UpToDate' may be misspelled - perhaps 'Up-to-date'?
#722: FILE: drivers/block/drbd/drbd_main.c:678:
+	else if (ns.role == Primary && ns.conn < Connected && ns.disk < UpToDate)
 	                                                                ^^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <UpToDate>
#722: FILE: drivers/block/drbd/drbd_main.c:678:
+	else if (ns.role == Primary && ns.conn < Connected && ns.disk < UpToDate)

CHECK:CAMELCASE: Avoid CamelCase: <Resource>
#725: FILE: drivers/block/drbd/drbd_main.c:681:
+	else if (fp >= Resource &&

CHECK:CAMELCASE: Avoid CamelCase: <DUnknown>
#726: FILE: drivers/block/drbd/drbd_main.c:682:
+		 ns.role == Primary && ns.conn < Connected && ns.pdsk >= DUnknown)

CHECK:CAMELCASE: Avoid CamelCase: <Inconsistent>
#729: FILE: drivers/block/drbd/drbd_main.c:685:
+	else if (ns.role == Primary && ns.disk <= Inconsistent && ns.pdsk <= Inconsistent)

WARNING:TYPO_SPELLING: 'UpToDate' may be misspelled - perhaps 'Up-to-date'?
#732: FILE: drivers/block/drbd/drbd_main.c:688:
+	else if (ns.conn > Connected && ns.disk < UpToDate && ns.pdsk < UpToDate)
 	                                          ^^^^^^^^

WARNING:TYPO_SPELLING: 'UpToDate' may be misspelled - perhaps 'Up-to-date'?
#732: FILE: drivers/block/drbd/drbd_main.c:688:
+	else if (ns.conn > Connected && ns.disk < UpToDate && ns.pdsk < UpToDate)
 	                                                                ^^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <WFBitMapS>
#739: FILE: drivers/block/drbd/drbd_main.c:695:
+		  ns.conn == WFBitMapS ||

CHECK:CAMELCASE: Avoid CamelCase: <SyncSource>
#740: FILE: drivers/block/drbd/drbd_main.c:696:
+		  ns.conn == SyncSource ||

CHECK:CAMELCASE: Avoid CamelCase: <PausedSyncS>
#741: FILE: drivers/block/drbd/drbd_main.c:697:
+		  ns.conn == PausedSyncS) &&

CHECK:CAMELCASE: Avoid CamelCase: <Outdated>
#742: FILE: drivers/block/drbd/drbd_main.c:698:
+		  ns.disk == Outdated)

CHECK:CAMELCASE: Avoid CamelCase: <VerifyT>
#745: FILE: drivers/block/drbd/drbd_main.c:701:
+	else if ((ns.conn == VerifyS || ns.conn == VerifyT) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#750: FILE: drivers/block/drbd/drbd_main.c:706:
+	else if ((ns.conn == VerifyS || ns.conn == VerifyT) &&
+		  mdev->agreed_pro_version < 88)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#757: FILE: drivers/block/drbd/drbd_main.c:713:
+int is_valid_state_transition(struct drbd_conf *mdev,
+	union drbd_state_t ns, union drbd_state_t os)

CHECK:CAMELCASE: Avoid CamelCase: <StandAlone>
#765: FILE: drivers/block/drbd/drbd_main.c:721:
+	if (ns.conn == Disconnecting && os.conn == StandAlone)

CHECK:CAMELCASE: Avoid CamelCase: <Attaching>
#768: FILE: drivers/block/drbd/drbd_main.c:724:
+	if (ns.disk > Attaching && os.disk == Diskless)

CHECK:CAMELCASE: Avoid CamelCase: <WFConnection>
#771: FILE: drivers/block/drbd/drbd_main.c:727:
+	if (ns.conn == WFConnection && os.conn < Unconnected)

CHECK:CAMELCASE: Avoid CamelCase: <Unconnected>
#771: FILE: drivers/block/drbd/drbd_main.c:727:
+	if (ns.conn == WFConnection && os.conn < Unconnected)

CHECK:CAMELCASE: Avoid CamelCase: <WFReportParams>
#780: FILE: drivers/block/drbd/drbd_main.c:736:
+	if (ns.conn == os.conn && ns.conn == WFReportParams)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#798: FILE: drivers/block/drbd/drbd_main.c:754:
+int __drbd_set_state(struct drbd_conf *mdev,
+		    union drbd_state_t ns, enum chg_state_flags flags,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#807: FILE: drivers/block/drbd/drbd_main.c:763:
+
+

WARNING:TYPO_SPELLING: 'Dissalow' may be misspelled - perhaps 'Disallow'?
#818: FILE: drivers/block/drbd/drbd_main.c:774:
+	/* Dissalow Network errors to configure a device's network part */
 	   ^^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <Timeout>
#819: FILE: drivers/block/drbd/drbd_main.c:775:
+	if ((ns.conn >= Timeout && ns.conn <= TearDown) &&

CHECK:CAMELCASE: Avoid CamelCase: <TearDown>
#819: FILE: drivers/block/drbd/drbd_main.c:775:
+	if ((ns.conn >= Timeout && ns.conn <= TearDown) &&

CHECK:CAMELCASE: Avoid CamelCase: <Unknown>
#834: FILE: drivers/block/drbd/drbd_main.c:790:
+		ns.peer = Unknown;

CHECK:CAMELCASE: Avoid CamelCase: <Consistent>
#849: FILE: drivers/block/drbd/drbd_main.c:805:
+	    ((ns.disk == Consistent || ns.disk == Outdated) ||

CHECK:CAMELCASE: Avoid CamelCase: <Negotiating>
#850: FILE: drivers/block/drbd/drbd_main.c:806:
+	     (ns.disk == Negotiating && ns.conn == WFBitMapT))) {

CHECK:CAMELCASE: Avoid CamelCase: <WFBitMapT>
#850: FILE: drivers/block/drbd/drbd_main.c:806:
+	     (ns.disk == Negotiating && ns.conn == WFBitMapT))) {

WARNING:TYPO_SPELLING: 'UpToDate' may be misspelled - perhaps 'Up-to-date'?
#860: FILE: drivers/block/drbd/drbd_main.c:816:
+			ns.disk = UpToDate;
 			          ^^^^^^^^

WARNING:TYPO_SPELLING: 'UpToDate' may be misspelled - perhaps 'Up-to-date'?
#867: FILE: drivers/block/drbd/drbd_main.c:823:
+		if (os.disk == Outdated && ns.disk == UpToDate)
 		                                      ^^^^^^^^

WARNING:TYPO_SPELLING: 'UpToDate' may be misspelled - perhaps 'Up-to-date'?
#868: FILE: drivers/block/drbd/drbd_main.c:824:
+			drbd_WARN("Implicit set disk from Outdate to UpToDate\n");
 			                                             ^^^^^^^^

WARNING:TYPO_SPELLING: 'UpToDate' may be misspelled - perhaps 'Up-to-date'?
#878: FILE: drivers/block/drbd/drbd_main.c:834:
+			ns.pdsk = UpToDate;
 			          ^^^^^^^^

WARNING:TYPO_SPELLING: 'UpToDate' may be misspelled - perhaps 'Up-to-date'?
#889: FILE: drivers/block/drbd/drbd_main.c:845:
+		if (os.pdsk == Outdated && ns.pdsk == UpToDate)
 		                                      ^^^^^^^^

WARNING:TYPO_SPELLING: 'UpToDate' may be misspelled - perhaps 'Up-to-date'?
#890: FILE: drivers/block/drbd/drbd_main.c:846:
+			drbd_WARN("Implicit set pdsk from Outdate to UpToDate\n");
 			                                             ^^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <Current>
#896: FILE: drivers/block/drbd/drbd_main.c:852:
+		if (mdev->ed_uuid == mdev->bc->md.uuid[Current]) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#907: FILE: drivers/block/drbd/drbd_main.c:863:
+	if (fp == Stonith &&
[...]
+			ns.susp = 1;

CHECK:CAMELCASE: Avoid CamelCase: <Stonith>
#907: FILE: drivers/block/drbd/drbd_main.c:863:
+	if (fp == Stonith &&

CHECK:CAMELCASE: Avoid CamelCase: <SyncTarget>
#916: FILE: drivers/block/drbd/drbd_main.c:872:
+		if (ns.conn == SyncTarget)

CHECK:CAMELCASE: Avoid CamelCase: <PausedSyncT>
#917: FILE: drivers/block/drbd/drbd_main.c:873:
+			ns.conn = PausedSyncT;

CHECK:BRACES: braces {} should be used on all arms of this statement
#933: FILE: drivers/block/drbd/drbd_main.c:889:
+		if (rv < SS_Success) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#935: FILE: drivers/block/drbd/drbd_main.c:891:
+			/* If the old state was illegal as well, then let
+			   this happen...*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#935: FILE: drivers/block/drbd/drbd_main.c:891:
+			   this happen...*/

WARNING:SPLIT_STRING: quoted string split across lines
#939: FILE: drivers/block/drbd/drbd_main.c:895:
+				ERR("Considering state change from bad state. "
+				    "Error would be: '%s'\n",

CHECK:BRACES: Unbalanced braces around else statement
#945: FILE: drivers/block/drbd/drbd_main.c:901:
+		} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#960: FILE: drivers/block/drbd/drbd_main.c:916:
+		char *pbp, pb[300];
+		pbp = pb;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#987: FILE: drivers/block/drbd/drbd_main.c:943:
+		mdev->rs_paused += (long)jiffies-(long)mdev->rs_mark_time;
 		                                ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#992: FILE: drivers/block/drbd/drbd_main.c:948:
+			/* This if (!test_bit) is only needed for the case
+			   that a device that has ceased to used its timer,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#994: FILE: drivers/block/drbd/drbd_main.c:950:
+			   paused and resumed. */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1022: FILE: drivers/block/drbd/drbd_main.c:978:
+		u32 mdf = mdev->bc->md.flags & ~(MDF_Consistent|MDF_PrimaryInd|
 		                                               ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#1022: FILE: drivers/block/drbd/drbd_main.c:978:
+		u32 mdf = mdev->bc->md.flags & ~(MDF_Consistent|MDF_PrimaryInd|
 		                                                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1023: FILE: drivers/block/drbd/drbd_main.c:979:
+						 MDF_ConnectedInd|MDF_WasUpToDate|
 						                 ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#1023: FILE: drivers/block/drbd/drbd_main.c:979:
+						 MDF_ConnectedInd|MDF_WasUpToDate|
 						                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1024: FILE: drivers/block/drbd/drbd_main.c:980:
+						 MDF_PeerOutDated|MDF_CrashedPrimary);
 						                 ^

WARNING:TYPO_SPELLING: 'UpToDate' may be misspelled - perhaps 'Up-to-date'?
#1048: FILE: drivers/block/drbd/drbd_main.c:1004:
+	/* Peer was forced UpToDate & Primary, consider to resync */
 	                   ^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#1085: FILE: drivers/block/drbd/drbd_main.c:1041:
+	ascw = (struct after_state_chg_work *) w;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ascw->done"
#1088: FILE: drivers/block/drbd/drbd_main.c:1044:
+		D_ASSERT(ascw->done != NULL);

CHECK:CAMELCASE: Avoid CamelCase: <WFSyncUUID>
#1106: FILE: drivers/block/drbd/drbd_main.c:1062:
+		_drbd_request_state(mdev, NS(conn, WFSyncUUID), ChgStateVerbose);

WARNING:TYPO_SPELLING: 'UpToDate' may be misspelled - perhaps 'Up-to-date'?
#1134: FILE: drivers/block/drbd/drbd_main.c:1090:
+	if (!(os.role == Primary && os.disk < UpToDate && os.pdsk < UpToDate) &&
 	                                      ^^^^^^^^

WARNING:TYPO_SPELLING: 'UpToDate' may be misspelled - perhaps 'Up-to-date'?
#1134: FILE: drivers/block/drbd/drbd_main.c:1090:
+	if (!(os.role == Primary && os.disk < UpToDate && os.pdsk < UpToDate) &&
 	                                                            ^^^^^^^^

WARNING:TYPO_SPELLING: 'UpToDate' may be misspelled - perhaps 'Up-to-date'?
#1135: FILE: drivers/block/drbd/drbd_main.c:1091:
+	    (ns.role == Primary && ns.disk < UpToDate && ns.pdsk < UpToDate))
 	                                     ^^^^^^^^

WARNING:TYPO_SPELLING: 'UpToDate' may be misspelled - perhaps 'Up-to-date'?
#1135: FILE: drivers/block/drbd/drbd_main.c:1091:
+	    (ns.role == Primary && ns.disk < UpToDate && ns.pdsk < UpToDate))
 	                                                           ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1139: FILE: drivers/block/drbd/drbd_main.c:1095:
+	/* Here we have the actions that are performed after a
+	   state change. This function might sleep */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1139: FILE: drivers/block/drbd/drbd_main.c:1095:
+	   state change. This function might sleep */

WARNING:TYPO_SPELLING: 'successfull' may be misspelled - perhaps 'successful'?
#1142: FILE: drivers/block/drbd/drbd_main.c:1098:
+		/* case1: The outdate peer handler is successfull:
 		                                      ^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1143: FILE: drivers/block/drbd/drbd_main.c:1099:
+		 * case2: The connection was established again: */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1164: FILE: drivers/block/drbd/drbd_main.c:1120:
+	     os.pdsk != Outdated)
+	&&  (ns.pdsk < Inconsistent ||

WARNING:TYPO_SPELLING: 'UpToDate' may be misspelled - perhaps 'Up-to-date'?
#1171: FILE: drivers/block/drbd/drbd_main.c:1127:
+			    mdev->bc->md.uuid[Bitmap] == 0 && ns.disk >= UpToDate) {
 			                                                 ^^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <Bitmap>
#1171: FILE: drivers/block/drbd/drbd_main.c:1127:
+			    mdev->bc->md.uuid[Bitmap] == 0 && ns.disk >= UpToDate) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'os.aftr_isp != ns.aftr_isp'
#1200: FILE: drivers/block/drbd/drbd_main.c:1156:
+	if (ns.conn >= Connected &&
+	     ((os.aftr_isp != ns.aftr_isp) ||
+	      (os.user_isp != ns.user_isp)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'os.user_isp != ns.user_isp'
#1200: FILE: drivers/block/drbd/drbd_main.c:1156:
+	if (ns.conn >= Connected &&
+	     ((os.aftr_isp != ns.aftr_isp) ||
+	      (os.user_isp != ns.user_isp)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1201: FILE: drivers/block/drbd/drbd_main.c:1157:
+	if (ns.conn >= Connected &&
+	     ((os.aftr_isp != ns.aftr_isp) ||

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1211: FILE: drivers/block/drbd/drbd_main.c:1167:
+	/* Make sure the peer gets informed about eventual state
+	   changes (ISP bits) while we were in WFReportParams. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1211: FILE: drivers/block/drbd/drbd_main.c:1167:
+	   changes (ISP bits) while we were in WFReportParams. */

WARNING:LONG_LINE_STRING: line length of 117 exceeds 100 columns
#1218: FILE: drivers/block/drbd/drbd_main.c:1174:
+		drbd_queue_bitmap_io(mdev, &drbd_bmio_set_n_write, &abw_start_sync, "set_n_write from StartingSync");

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_STRING: line length of 104 exceeds 100 columns
#1223: FILE: drivers/block/drbd/drbd_main.c:1179:
+		drbd_queue_bitmap_io(mdev, &drbd_bmio_set_n_write, NULL, "set_n_write from invalidate");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1227: FILE: drivers/block/drbd/drbd_main.c:1183:
+		/* since inc_local() only works as long as disk>=Inconsistent,
+		   and it is Diskless here, local_cnt can only go down, it can

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1228: FILE: drivers/block/drbd/drbd_main.c:1184:
+		   not increase... It will reach zero */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1261: FILE: drivers/block/drbd/drbd_main.c:1217:
+	/* Terminate worker thread if we are unconfigured - it will be
+	   restarted as needed... */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1261: FILE: drivers/block/drbd/drbd_main.c:1217:
+	   restarted as needed... */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1268: FILE: drivers/block/drbd/drbd_main.c:1224:
+
+

WARNING:TYPO_SPELLING: 'thi' may be misspelled - perhaps 'the'?
#1271: FILE: drivers/block/drbd/drbd_main.c:1227:
+	struct Drbd_thread *thi = (struct Drbd_thread *) arg;
 	                    ^^^

CHECK:SPACING: No space is necessary after a cast
#1271: FILE: drivers/block/drbd/drbd_main.c:1227:
+	struct Drbd_thread *thi = (struct Drbd_thread *) arg;

WARNING:TYPO_SPELLING: 'thi' may be misspelled - perhaps 'the'?
#1276: FILE: drivers/block/drbd/drbd_main.c:1232:
+	retval = thi->function(thi);
 	                       ^^^

WARNING:TYPO_SPELLING: 'assignement' may be misspelled - perhaps 'assignment'?
#1285: FILE: drivers/block/drbd/drbd_main.c:1241:
+	 * t_state check and assignement needs to be within the same spinlock,
 	                     ^^^^^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <Restarting>
#1290: FILE: drivers/block/drbd/drbd_main.c:1246:
+	if (thi->t_state == Restarting) {

CHECK:CAMELCASE: Avoid CamelCase: <Running>
#1292: FILE: drivers/block/drbd/drbd_main.c:1248:
+		thi->t_state = Running;

CHECK:CAMELCASE: Avoid CamelCase: <None>
#1298: FILE: drivers/block/drbd/drbd_main.c:1254:
+	thi->t_state = None;

WARNING:MEMORY_BARRIER: memory barrier without comment
#1299: FILE: drivers/block/drbd/drbd_main.c:1255:
+	smp_mb();

WARNING:TYPO_SPELLING: 'thi' may be misspelled - perhaps 'the'?
#1310: FILE: drivers/block/drbd/drbd_main.c:1266:
+STATIC void drbd_thread_init(struct drbd_conf *mdev, struct Drbd_thread *thi,
                                                                          ^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1311: FILE: drivers/block/drbd/drbd_main.c:1267:
+STATIC void drbd_thread_init(struct drbd_conf *mdev, struct Drbd_thread *thi,
+		      int (*func) (struct Drbd_thread *))

WARNING:SPACING: Unnecessary space before function pointer arguments
#1311: FILE: drivers/block/drbd/drbd_main.c:1267:
+		      int (*func) (struct Drbd_thread *))

WARNING:TYPO_SPELLING: 'thi' may be misspelled - perhaps 'the'?
#1320: FILE: drivers/block/drbd/drbd_main.c:1276:
+int drbd_thread_start(struct Drbd_thread *thi)
                                           ^^^

WARNING:TYPO_SPELLING: 'thi' may be misspelled - perhaps 'the'?
#1325: FILE: drivers/block/drbd/drbd_main.c:1281:
+		thi == &mdev->receiver ? "receiver" :
 		^^^

WARNING:TYPO_SPELLING: 'thi' may be misspelled - perhaps 'the'?
#1326: FILE: drivers/block/drbd/drbd_main.c:1282:
+		thi == &mdev->asender  ? "asender"  :
 		^^^

WARNING:TYPO_SPELLING: 'asender' may be misspelled - perhaps 'ascender'?
#1326: FILE: drivers/block/drbd/drbd_main.c:1282:
+		thi == &mdev->asender  ? "asender"  :
 		              ^^^^^^^

WARNING:TYPO_SPELLING: 'asender' may be misspelled - perhaps 'ascender'?
#1326: FILE: drivers/block/drbd/drbd_main.c:1282:
+		thi == &mdev->asender  ? "asender"  :
 		                          ^^^^^^^

WARNING:TYPO_SPELLING: 'thi' may be misspelled - perhaps 'the'?
#1327: FILE: drivers/block/drbd/drbd_main.c:1283:
+		thi == &mdev->worker   ? "worker"   : "NONSENSE";
 		^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1333: FILE: drivers/block/drbd/drbd_main.c:1289:
+		INFO("Starting %s thread (from %s [%d])\n",
+				me, current->comm, current->pid);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'drbd_thread_start', this function's name, in a string
#1337: FILE: drivers/block/drbd/drbd_main.c:1293:
+			ERR("Failed to get module reference in drbd_thread_start\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!thi->task"
#1342: FILE: drivers/block/drbd/drbd_main.c:1298:
+		D_ASSERT(thi->task == NULL);

WARNING:TYPO_SPELLING: 'thi' may be misspelled - perhaps 'the'?
#1348: FILE: drivers/block/drbd/drbd_main.c:1304:
+		nt = kthread_create(drbd_thread_setup, (void *) thi,
 		                                                ^^^

CHECK:SPACING: No space is necessary after a cast
#1348: FILE: drivers/block/drbd/drbd_main.c:1304:
+		nt = kthread_create(drbd_thread_setup, (void *) thi,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1366: FILE: drivers/block/drbd/drbd_main.c:1322:
+		INFO("Restarting %s thread (from %s [%d])\n",
+				me, current->comm, current->pid);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1377: FILE: drivers/block/drbd/drbd_main.c:1333:
+
+

WARNING:TYPO_SPELLING: 'thi' may be misspelled - perhaps 'the'?
#1378: FILE: drivers/block/drbd/drbd_main.c:1334:
+void _drbd_thread_stop(struct Drbd_thread *thi, int restart, int wait)
                                            ^^^

CHECK:CAMELCASE: Avoid CamelCase: <Drbd_thread_state>
#1380: FILE: drivers/block/drbd/drbd_main.c:1336:
+	enum Drbd_thread_state ns = restart ? Restarting : Exiting;

CHECK:CAMELCASE: Avoid CamelCase: <Exiting>
#1380: FILE: drivers/block/drbd/drbd_main.c:1336:
+	enum Drbd_thread_state ns = restart ? Restarting : Exiting;

WARNING:TYPO_SPELLING: 'thi' may be misspelled - perhaps 'the'?
#1387: FILE: drivers/block/drbd/drbd_main.c:1343:
+			drbd_thread_start(thi);
 			                  ^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!thi->task"
#1392: FILE: drivers/block/drbd/drbd_main.c:1348:
+		if (thi->task == NULL) {

WARNING:MEMORY_BARRIER: memory barrier without comment
#1398: FILE: drivers/block/drbd/drbd_main.c:1354:
+		smp_mb();

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1403: FILE: drivers/block/drbd/drbd_main.c:1359:
+
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1407: FILE: drivers/block/drbd/drbd_main.c:1363:
+	if (wait) {
+		wait_for_completion(&thi->stop);
+	}

WARNING:TYPO_SPELLING: 'benificial' may be misspelled - perhaps 'beneficial'?
#1415: FILE: drivers/block/drbd/drbd_main.c:1371:
+ * Forces all threads of a device onto the same CPU. This is benificial for
                                                              ^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1435: FILE: drivers/block/drbd/drbd_main.c:1391:
+	 * to that macro, which results in "parse error before '{'" ;-> */

CHECK:SPACING: No space is necessary after a cast
#1436: FILE: drivers/block/drbd/drbd_main.c:1392:
+	return (cpumask_t) CPU_MASK_ALL; /* Never reached. */

WARNING:TYPO_SPELLING: 'thi' may be misspelled - perhaps 'the'?
#1446: FILE: drivers/block/drbd/drbd_main.c:1402:
+	struct Drbd_thread *thi =
 	                    ^^^

WARNING:TYPO_SPELLING: 'asender' may be misspelled - perhaps 'ascender'?
#1447: FILE: drivers/block/drbd/drbd_main.c:1403:
+		p == mdev->asender.task  ? &mdev->asender  :
 		           ^^^^^^^

WARNING:TYPO_SPELLING: 'asender' may be misspelled - perhaps 'ascender'?
#1447: FILE: drivers/block/drbd/drbd_main.c:1403:
+		p == mdev->asender.task  ? &mdev->asender  :
 		                                  ^^^^^^^

WARNING:TYPO_SPELLING: 'thi' may be misspelled - perhaps 'the'?
#1451: FILE: drivers/block/drbd/drbd_main.c:1407:
+	ERR_IF(thi == NULL)
 	       ^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!thi"
#1451: FILE: drivers/block/drbd/drbd_main.c:1407:
+	ERR_IF(thi == NULL)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1457: FILE: drivers/block/drbd/drbd_main.c:1413:
+	/* preempt_disable();
+	   Thas was a kernel that warned about a call to smp_processor_id() while preemt

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1458: FILE: drivers/block/drbd/drbd_main.c:1414:
+	   was not disabled. It seems that this was fixed in manline. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1466: FILE: drivers/block/drbd/drbd_main.c:1422:
+int _drbd_send_cmd(struct drbd_conf *mdev, struct socket *sock,
+			  enum Drbd_Packet_Cmd cmd, struct Drbd_Header *h,

CHECK:CAMELCASE: Avoid CamelCase: <Drbd_Packet_Cmd>
#1466: FILE: drivers/block/drbd/drbd_main.c:1422:
+			  enum Drbd_Packet_Cmd cmd, struct Drbd_Header *h,

CHECK:CAMELCASE: Avoid CamelCase: <Drbd_Header>
#1466: FILE: drivers/block/drbd/drbd_main.c:1422:
+			  enum Drbd_Packet_Cmd cmd, struct Drbd_Header *h,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1467: FILE: drivers/block/drbd/drbd_main.c:1423:
+			  size_t size, unsigned msg_flags)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1476: FILE: drivers/block/drbd/drbd_main.c:1432:
+	h->length  = cpu_to_be16(size-sizeof(struct Drbd_Header));
 	                             ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1506: FILE: drivers/block/drbd/drbd_main.c:1462:
+	 * while we were waiting in down()... */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sock"
#1507: FILE: drivers/block/drbd/drbd_main.c:1463:
+	if (likely(sock != NULL))

CHECK:CAMELCASE: Avoid CamelCase: <Drbd_SyncParam89_Packet>
#1544: FILE: drivers/block/drbd/drbd_main.c:1500:
+	struct Drbd_SyncParam89_Packet *p;

CHECK:CAMELCASE: Avoid CamelCase: <Drbd_SyncParam_Packet>
#1549: FILE: drivers/block/drbd/drbd_main.c:1505:
+	size = apv <= 87 ? sizeof(struct Drbd_SyncParam_Packet)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1556: FILE: drivers/block/drbd/drbd_main.c:1512:
+	 * then use the pre-allocated sbuf there */

CHECK:BRACES: braces {} should be used on all arms of this statement
#1560: FILE: drivers/block/drbd/drbd_main.c:1516:
+	if (likely(sock != NULL)) {
[...]
+	} else
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sock"
#1560: FILE: drivers/block/drbd/drbd_main.c:1516:
+	if (likely(sock != NULL)) {

CHECK:CAMELCASE: Avoid CamelCase: <SyncParam89>
#1561: FILE: drivers/block/drbd/drbd_main.c:1517:
+		enum Drbd_Packet_Cmd cmd = apv >= 89 ? SyncParam89 : SyncParam;

CHECK:CAMELCASE: Avoid CamelCase: <SyncParam>
#1561: FILE: drivers/block/drbd/drbd_main.c:1517:
+		enum Drbd_Packet_Cmd cmd = apv >= 89 ? SyncParam89 : SyncParam;

CHECK:BRACES: Unbalanced braces around else statement
#1576: FILE: drivers/block/drbd/drbd_main.c:1532:
+	} else

CHECK:CAMELCASE: Avoid CamelCase: <Drbd_Protocol_Packet>
#1586: FILE: drivers/block/drbd/drbd_main.c:1542:
+	struct Drbd_Protocol_Packet *p;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p"
#1595: FILE: drivers/block/drbd/drbd_main.c:1551:
+	if (p == NULL)

CHECK:CAMELCASE: Avoid CamelCase: <ReportProtocol>
#1608: FILE: drivers/block/drbd/drbd_main.c:1564:
+	rv = drbd_send_cmd(mdev, USE_DATA_SOCKET, ReportProtocol,

CHECK:CAMELCASE: Avoid CamelCase: <Drbd_GenCnt_Packet>
#1616: FILE: drivers/block/drbd/drbd_main.c:1572:
+	struct Drbd_GenCnt_Packet p;

CHECK:CAMELCASE: Avoid CamelCase: <ReportUUIDs>
#1636: FILE: drivers/block/drbd/drbd_main.c:1592:
+	return drbd_send_cmd(mdev, USE_DATA_SOCKET, ReportUUIDs,

CHECK:CAMELCASE: Avoid CamelCase: <Drbd_SyncUUID_Packet>
#1642: FILE: drivers/block/drbd/drbd_main.c:1598:
+	struct Drbd_SyncUUID_Packet p;

CHECK:CAMELCASE: Avoid CamelCase: <ReportSyncUUID>
#1646: FILE: drivers/block/drbd/drbd_main.c:1602:
+	return drbd_send_cmd(mdev, USE_DATA_SOCKET, ReportSyncUUID,

CHECK:CAMELCASE: Avoid CamelCase: <Drbd_Sizes_Packet>
#1652: FILE: drivers/block/drbd/drbd_main.c:1608:
+	struct Drbd_Sizes_Packet p;

CHECK:CAMELCASE: Avoid CamelCase: <ReportSizes>
#1676: FILE: drivers/block/drbd/drbd_main.c:1632:
+	ok = drbd_send_cmd(mdev, USE_DATA_SOCKET, ReportSizes,

CHECK:CAMELCASE: Avoid CamelCase: <Drbd_State_Packet>
#1691: FILE: drivers/block/drbd/drbd_main.c:1647:
+	struct Drbd_State_Packet p;

WARNING:TYPO_SPELLING: 'wont' may be misspelled - perhaps 'won't'?
#1694: FILE: drivers/block/drbd/drbd_main.c:1650:
+	/* Grab state lock so we wont send state if we're in the middle
 	                         ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1695: FILE: drivers/block/drbd/drbd_main.c:1651:
+	 * of a cluster wide state change on another thread */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sock"
#1703: FILE: drivers/block/drbd/drbd_main.c:1659:
+	if (likely(sock != NULL)) {

CHECK:CAMELCASE: Avoid CamelCase: <ReportState>
#1704: FILE: drivers/block/drbd/drbd_main.c:1660:
+		ok = _drbd_send_cmd(mdev, sock, ReportState,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1715: FILE: drivers/block/drbd/drbd_main.c:1671:
+int drbd_send_state_req(struct drbd_conf *mdev,
+	union drbd_state_t mask, union drbd_state_t val)

CHECK:CAMELCASE: Avoid CamelCase: <Drbd_Req_State_Packet>
#1717: FILE: drivers/block/drbd/drbd_main.c:1673:
+	struct Drbd_Req_State_Packet p;

CHECK:CAMELCASE: Avoid CamelCase: <StateChgRequest>
#1722: FILE: drivers/block/drbd/drbd_main.c:1678:
+	return drbd_send_cmd(mdev, USE_DATA_SOCKET, StateChgRequest,

CHECK:CAMELCASE: Avoid CamelCase: <Drbd_RqS_Reply_Packet>
#1728: FILE: drivers/block/drbd/drbd_main.c:1684:
+	struct Drbd_RqS_Reply_Packet p;

CHECK:CAMELCASE: Avoid CamelCase: <StateChgReply>
#1732: FILE: drivers/block/drbd/drbd_main.c:1688:
+	return drbd_send_cmd(mdev, USE_META_SOCKET, StateChgReply,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1738: FILE: drivers/block/drbd/drbd_main.c:1694:
+ * zero: incompressible.  */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1740: FILE: drivers/block/drbd/drbd_main.c:1696:
+int fill_bitmap_rle_bytes(struct drbd_conf *mdev,
+	struct Drbd_Compressed_Bitmap_Packet *p,

CHECK:CAMELCASE: Avoid CamelCase: <Drbd_Compressed_Bitmap_Packet>
#1740: FILE: drivers/block/drbd/drbd_main.c:1696:
+	struct Drbd_Compressed_Bitmap_Packet *p,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1747: FILE: drivers/block/drbd/drbd_main.c:1703:
+	unsigned n;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1748: FILE: drivers/block/drbd/drbd_main.c:1704:
+	unsigned len;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1749: FILE: drivers/block/drbd/drbd_main.c:1705:
+	unsigned toggle;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#1752: FILE: drivers/block/drbd/drbd_main.c:1708:
+	if ((mdev->sync_conf.use_rle_encoding == 0) ||
[...]
+			return 0;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mdev->sync_conf.use_rle_encoding == 0'
#1752: FILE: drivers/block/drbd/drbd_main.c:1708:
+	if ((mdev->sync_conf.use_rle_encoding == 0) ||
+		(mdev->agreed_pro_version < 90))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mdev->agreed_pro_version < 90'
#1752: FILE: drivers/block/drbd/drbd_main.c:1708:
+	if ((mdev->sync_conf.use_rle_encoding == 0) ||
+		(mdev->agreed_pro_version < 90))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1753: FILE: drivers/block/drbd/drbd_main.c:1709:
+	if ((mdev->sync_conf.use_rle_encoding == 0) ||
+		(mdev->agreed_pro_version < 90))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1768: FILE: drivers/block/drbd/drbd_main.c:1724:
+	 * start with toggle == 2 to be able to tell the first iteration */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1772: FILE: drivers/block/drbd/drbd_main.c:1728:
+	 * using RLE and VLI. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1783: FILE: drivers/block/drbd/drbd_main.c:1739:
+				 * store start value, */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1793: FILE: drivers/block/drbd/drbd_main.c:1749:
+		 * can only happen if bitmap is modified while we scan it. */

WARNING:SPLIT_STRING: quoted string split across lines
#1796: FILE: drivers/block/drbd/drbd_main.c:1752:
+			ERR("unexpected zero runlength while encoding bitmap "
+			    "t:%u bo:%lu\n", toggle, c->bit_offset);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1815: FILE: drivers/block/drbd/drbd_main.c:1771:
+		 * we need to rewind both word and bit position. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1823: FILE: drivers/block/drbd/drbd_main.c:1779:
+	 * update c->word_offset. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1833: FILE: drivers/block/drbd/drbd_main.c:1789:
+int fill_bitmap_rle_bits(struct drbd_conf *mdev,
+	struct Drbd_Compressed_Bitmap_Packet *p,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1840: FILE: drivers/block/drbd/drbd_main.c:1796:
+	unsigned len;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1841: FILE: drivers/block/drbd/drbd_main.c:1797:
+	unsigned toggle;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#1845: FILE: drivers/block/drbd/drbd_main.c:1801:
+	if ((mdev->sync_conf.use_rle_encoding == 0) ||
[...]
+			return 0;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mdev->sync_conf.use_rle_encoding == 0'
#1845: FILE: drivers/block/drbd/drbd_main.c:1801:
+	if ((mdev->sync_conf.use_rle_encoding == 0) ||
+		(mdev->agreed_pro_version < 90))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mdev->agreed_pro_version < 90'
#1845: FILE: drivers/block/drbd/drbd_main.c:1801:
+	if ((mdev->sync_conf.use_rle_encoding == 0) ||
+		(mdev->agreed_pro_version < 90))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1846: FILE: drivers/block/drbd/drbd_main.c:1802:
+	if ((mdev->sync_conf.use_rle_encoding == 0) ||
+		(mdev->agreed_pro_version < 90))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1861: FILE: drivers/block/drbd/drbd_main.c:1817:
+	 * start with toggle == 2 to be able to tell the first iteration */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1865: FILE: drivers/block/drbd/drbd_main.c:1821:
+	 * using RLE and VLI. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1876: FILE: drivers/block/drbd/drbd_main.c:1832:
+				 * store start value, */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1886: FILE: drivers/block/drbd/drbd_main.c:1842:
+		 * can only happen if bitmap is modified while we scan it. */

WARNING:SPLIT_STRING: quoted string split across lines
#1889: FILE: drivers/block/drbd/drbd_main.c:1845:
+			ERR("unexpected zero runlength while encoding bitmap "
+			    "t:%u bo:%lu\n", toggle, c->bit_offset);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1910: FILE: drivers/block/drbd/drbd_main.c:1866:
+		 * we need to rewind both word and bit position. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1918: FILE: drivers/block/drbd/drbd_main.c:1874:
+	 * update c->word_offset. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1929: FILE: drivers/block/drbd/drbd_main.c:1885:
+send_bitmap_rle_or_plain(struct drbd_conf *mdev,
+	struct Drbd_Header *h, struct bm_xfer_ctx *c)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1931: FILE: drivers/block/drbd/drbd_main.c:1887:
+	struct Drbd_Compressed_Bitmap_Packet *p = (void*)h;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <ReportCBitMap>
#1945: FILE: drivers/block/drbd/drbd_main.c:1901:
+		ok = _drbd_send_cmd(mdev, mdev->data.socket, ReportCBitMap, h,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1946: FILE: drivers/block/drbd/drbd_main.c:1902:
+		ok = _drbd_send_cmd(mdev, mdev->data.socket, ReportCBitMap, h,
+			sizeof(*p) + len, 0);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1955: FILE: drivers/block/drbd/drbd_main.c:1911:
+		 * send a buffer full of plain text bits instead. */

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1959: FILE: drivers/block/drbd/drbd_main.c:1915:
+			drbd_bm_get_lel(mdev, c->word_offset, num_words, (unsigned long*)h->payload);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1959: FILE: drivers/block/drbd/drbd_main.c:1915:
+			drbd_bm_get_lel(mdev, c->word_offset, num_words, (unsigned long*)h->payload);

CHECK:CAMELCASE: Avoid CamelCase: <ReportBitMap>
#1960: FILE: drivers/block/drbd/drbd_main.c:1916:
+		ok = _drbd_send_cmd(mdev, mdev->data.socket, ReportBitMap,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1961: FILE: drivers/block/drbd/drbd_main.c:1917:
+		ok = _drbd_send_cmd(mdev, mdev->data.socket, ReportBitMap,
+				   h, sizeof(struct Drbd_Header) + len, 0);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1988: FILE: drivers/block/drbd/drbd_main.c:1944:
+	 * and allocate that during initial device creation? */

CHECK:SPACING: No space is necessary after a cast
#1989: FILE: drivers/block/drbd/drbd_main.c:1945:
+	p = (struct Drbd_Header *) __get_free_page(GFP_NOIO);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2002: FILE: drivers/block/drbd/drbd_main.c:1958:
+				 * side that a full resync is required! */

CHECK:SPACING: No space is necessary after a cast
#2021: FILE: drivers/block/drbd/drbd_main.c:1977:
+	free_page((unsigned long) p);

CHECK:CAMELCASE: Avoid CamelCase: <Drbd_BarrierAck_Packet>
#2039: FILE: drivers/block/drbd/drbd_main.c:1995:
+	struct Drbd_BarrierAck_Packet p;

CHECK:CAMELCASE: Avoid CamelCase: <BarrierAck>
#2046: FILE: drivers/block/drbd/drbd_main.c:2002:
+	ok = drbd_send_cmd(mdev, USE_META_SOCKET, BarrierAck,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2047: FILE: drivers/block/drbd/drbd_main.c:2003:
+	ok = drbd_send_cmd(mdev, USE_META_SOCKET, BarrierAck,
+			(struct Drbd_Header *)&p, sizeof(p));

CHECK:CAMELCASE: Avoid CamelCase: <Drbd_BlockAck_Packet>
#2062: FILE: drivers/block/drbd/drbd_main.c:2018:
+	struct Drbd_BlockAck_Packet p;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2072: FILE: drivers/block/drbd/drbd_main.c:2028:
+	ok = drbd_send_cmd(mdev, USE_META_SOCKET, cmd,
+				(struct Drbd_Header *)&p, sizeof(p));

CHECK:CAMELCASE: Avoid CamelCase: <Drbd_Data_Packet>
#2077: FILE: drivers/block/drbd/drbd_main.c:2033:
+		     struct Drbd_Data_Packet *dp)

CHECK:CAMELCASE: Avoid CamelCase: <Drbd_BlockRequest_Packet>
#2088: FILE: drivers/block/drbd/drbd_main.c:2044:
+		     struct Drbd_BlockRequest_Packet *rp)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2094: FILE: drivers/block/drbd/drbd_main.c:2050:
+int drbd_send_ack(struct drbd_conf *mdev,
+	enum Drbd_Packet_Cmd cmd, struct Tl_epoch_entry *e)

CHECK:CAMELCASE: Avoid CamelCase: <Tl_epoch_entry>
#2094: FILE: drivers/block/drbd/drbd_main.c:2050:
+	enum Drbd_Packet_Cmd cmd, struct Tl_epoch_entry *e)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2103: FILE: drivers/block/drbd/drbd_main.c:2059:
+ * are is sync or not. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2124: FILE: drivers/block/drbd/drbd_main.c:2080:
+	ok = drbd_send_cmd(mdev, USE_DATA_SOCKET, cmd,
+				(struct Drbd_Header *)&p, sizeof(p));

CHECK:CAMELCASE: Avoid CamelCase: <OVRequest>
#2163: FILE: drivers/block/drbd/drbd_main.c:2119:
+	ok = drbd_send_cmd(mdev, USE_DATA_SOCKET, OVRequest,

WARNING:TYPO_SPELLING: 'asender' may be misspelled - perhaps 'ascender'?
#2178: FILE: drivers/block/drbd/drbd_main.c:2134:
+		|| !mdev->asender.task
 		          ^^^^^^^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2178: FILE: drivers/block/drbd/drbd_main.c:2134:
+	drop_it =   mdev->meta.socket == sock
+		|| !mdev->asender.task

WARNING:TYPO_SPELLING: 'asender' may be misspelled - perhaps 'ascender'?
#2179: FILE: drivers/block/drbd/drbd_main.c:2135:
+		|| get_t_state(&mdev->asender) != Running
 		                      ^^^^^^^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2179: FILE: drivers/block/drbd/drbd_main.c:2135:
+		|| !mdev->asender.task
+		|| get_t_state(&mdev->asender) != Running

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2180: FILE: drivers/block/drbd/drbd_main.c:2136:
+		|| get_t_state(&mdev->asender) != Running
+		|| mdev->state.conn < Connected;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2188: FILE: drivers/block/drbd/drbd_main.c:2144:
+		ERR("[%s/%d] sock_sendmsg time expired, ko = %u\n",
+		       current->comm, current->pid, mdev->ko_count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2217: FILE: drivers/block/drbd/drbd_main.c:2173:
+STATIC int _drbd_no_send_page(struct drbd_conf *mdev, struct page *page,
+		   int offset, size_t size)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2219: FILE: drivers/block/drbd/drbd_main.c:2175:
+       int ret;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#2220: FILE: drivers/block/drbd/drbd_main.c:2176:
+       int ret;
+       ret = drbd_send(mdev, mdev->data.socket, kmap(page) + offset, size, 0);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2220: FILE: drivers/block/drbd/drbd_main.c:2176:
+       ret = drbd_send(mdev, mdev->data.socket, kmap(page) + offset, size, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2221: FILE: drivers/block/drbd/drbd_main.c:2177:
+       kunmap(page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2222: FILE: drivers/block/drbd/drbd_main.c:2178:
+       return ret;$

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#2258: FILE: drivers/block/drbd/drbd_main.c:2214:
+				break;
+			else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2263: FILE: drivers/block/drbd/drbd_main.c:2219:
+			drbd_WARN("%s: size=%d len=%d sent=%d\n",
+			     __func__, (int)size, len, sent);

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#2275: FILE: drivers/block/drbd/drbd_main.c:2231:
+		mdev->send_cnt += size>>9;
 		                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2283: FILE: drivers/block/drbd/drbd_main.c:2239:
+	int i;
+	__bio_for_each_segment(bvec, bio, i, 0) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2285: FILE: drivers/block/drbd/drbd_main.c:2241:
+		if (!_drbd_no_send_page(mdev, bvec->bv_page,
+				     bvec->bv_offset, bvec->bv_len))

WARNING:LINE_SPACING: Missing a blank line after declarations
#2295: FILE: drivers/block/drbd/drbd_main.c:2251:
+	int i;
+	__bio_for_each_segment(bvec, bio, i, 0) {

CHECK:CAMELCASE: Avoid CamelCase: <Data>
#2322: FILE: drivers/block/drbd/drbd_main.c:2278:
+	p.head.command = cpu_to_be16(Data);

WARNING:TYPO_SPELLING: 'interupted' may be misspelled - perhaps 'interrupted'?
#2389: FILE: drivers/block/drbd/drbd_main.c:2345:
+	 * This one may be interupted by DRBD_SIG and/or DRBD_SIGKILL
 	                   ^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2397: FILE: drivers/block/drbd/drbd_main.c:2353:
+	ok = sizeof(p) == drbd_send(mdev, mdev->data.socket, &p,
+					sizeof(p), MSG_MORE);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2411: FILE: drivers/block/drbd/drbd_main.c:2367:
+/*
+  drbd_send distinguishes two cases:

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2427: FILE: drivers/block/drbd/drbd_main.c:2383:
+	      void *buf, size_t size, unsigned msg_flags)

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#2465: FILE: drivers/block/drbd/drbd_main.c:2421:
+				break;
+			else

CHECK:BRACES: braces {} should be used on all arms of this statement
#2484: FILE: drivers/block/drbd/drbd_main.c:2440:
+		if (rv != -EAGAIN) {
[...]
+		} else
[...]

CHECK:CAMELCASE: Avoid CamelCase: <BrokenPipe>
#2488: FILE: drivers/block/drbd/drbd_main.c:2444:
+			drbd_force_state(mdev, NS(conn, BrokenPipe));

CHECK:BRACES: Unbalanced braces around else statement
#2489: FILE: drivers/block/drbd/drbd_main.c:2445:
+		} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2504: FILE: drivers/block/drbd/drbd_main.c:2460:
+	 * and no race with updating open_cnt */

WARNING:LINE_SPACING: Missing a blank line after declarations
#2523: FILE: drivers/block/drbd/drbd_main.c:2479:
+	struct drbd_conf *mdev = gd->private_data;
+	mdev->open_cnt--;

CHECK:CAMELCASE: Avoid CamelCase: <TraceTypeUnplug>
#2531: FILE: drivers/block/drbd/drbd_main.c:2487:
+	MTRACE(TraceTypeUnplug, TraceLvlSummary,

CHECK:CAMELCASE: Avoid CamelCase: <TraceLvlSummary>
#2531: FILE: drivers/block/drbd/drbd_main.c:2487:
+	MTRACE(TraceTypeUnplug, TraceLvlSummary,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2549: FILE: drivers/block/drbd/drbd_main.c:2505:
+			 * anyways, to detect "double queuing" ... */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2579: FILE: drivers/block/drbd/drbd_main.c:2535:
+	 * note: only assignments, no allocation in here */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2585: FILE: drivers/block/drbd/drbd_main.c:2541:
+	 * to eventually support barriers */

WARNING:CONSIDER_COMPLETION: consider using a completion
#2600: FILE: drivers/block/drbd/drbd_main.c:2556:
+	sema_init(&mdev->data.work.s, 0);

WARNING:CONSIDER_COMPLETION: consider using a completion
#2601: FILE: drivers/block/drbd/drbd_main.c:2557:
+	sema_init(&mdev->meta.work.s, 0);

CHECK:SPACING: No space is necessary after a cast
#2631: FILE: drivers/block/drbd/drbd_main.c:2587:
+	mdev->resync_timer.data = (unsigned long) mdev;

CHECK:SPACING: No space is necessary after a cast
#2633: FILE: drivers/block/drbd/drbd_main.c:2589:
+	mdev->md_sync_timer.data = (unsigned long) mdev;

WARNING:TYPO_SPELLING: 'asender' may be misspelled - perhaps 'ascender'?
#2643: FILE: drivers/block/drbd/drbd_main.c:2599:
+	drbd_thread_init(mdev, &mdev->asender, drbd_asender);
 	                              ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2654: FILE: drivers/block/drbd/drbd_main.c:2610:
+		ERR("ASSERT FAILED: receiver t_state == %d expected 0.\n",
+				mdev->receiver.t_state);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mdev->net_conf"
#2671: FILE: drivers/block/drbd/drbd_main.c:2627:
+	D_ASSERT(mdev->net_conf == NULL);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2694: FILE: drivers/block/drbd/drbd_main.c:2650:
+
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2696: FILE: drivers/block/drbd/drbd_main.c:2652:
+
+

WARNING:NEEDLESS_IF: mempool_destroy(NULL) is safe and this check is probably not required
#2711: FILE: drivers/block/drbd/drbd_main.c:2667:
+	if (drbd_ee_mempool)
+		mempool_destroy(drbd_ee_mempool);

WARNING:NEEDLESS_IF: mempool_destroy(NULL) is safe and this check is probably not required
#2713: FILE: drivers/block/drbd/drbd_main.c:2669:
+	if (drbd_request_mempool)
+		mempool_destroy(drbd_request_mempool);

WARNING:NEEDLESS_IF: kmem_cache_destroy(NULL) is safe and this check is probably not required
#2715: FILE: drivers/block/drbd/drbd_main.c:2671:
+	if (drbd_ee_cache)
+		kmem_cache_destroy(drbd_ee_cache);

WARNING:NEEDLESS_IF: kmem_cache_destroy(NULL) is safe and this check is probably not required
#2717: FILE: drivers/block/drbd/drbd_main.c:2673:
+	if (drbd_request_cache)
+		kmem_cache_destroy(drbd_request_cache);

WARNING:RETURN_VOID: void function return statements are not generally useful
#2725: FILE: drivers/block/drbd/drbd_main.c:2681:
+	return;
+}

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2730: FILE: drivers/block/drbd/drbd_main.c:2686:
+	const int number = (DRBD_MAX_SEGMENT_SIZE/PAGE_SIZE) * minor_count;
 	                                         ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2740: FILE: drivers/block/drbd/drbd_main.c:2696:
+	drbd_request_cache = kmem_cache_create(

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!drbd_request_cache"
#2742: FILE: drivers/block/drbd/drbd_main.c:2698:
+	if (drbd_request_cache == NULL)

CHECK:CAMELCASE: Avoid CamelCase: <Enomem>
#2743: FILE: drivers/block/drbd/drbd_main.c:2699:
+		goto Enomem;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2745: FILE: drivers/block/drbd/drbd_main.c:2701:
+	drbd_ee_cache = kmem_cache_create(

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!drbd_ee_cache"
#2747: FILE: drivers/block/drbd/drbd_main.c:2703:
+	if (drbd_ee_cache == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2752: FILE: drivers/block/drbd/drbd_main.c:2708:
+	drbd_request_mempool = mempool_create(number,
+		mempool_alloc_slab, mempool_free_slab, drbd_request_cache);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!drbd_request_mempool"
#2753: FILE: drivers/block/drbd/drbd_main.c:2709:
+	if (drbd_request_mempool == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2757: FILE: drivers/block/drbd/drbd_main.c:2713:
+	drbd_ee_mempool = mempool_create(number,
+		mempool_alloc_slab, mempool_free_slab, drbd_ee_cache);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!drbd_request_mempool"
#2758: FILE: drivers/block/drbd/drbd_main.c:2714:
+	if (drbd_request_mempool == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2781: FILE: drivers/block/drbd/drbd_main.c:2737:
+STATIC int drbd_notify_sys(struct notifier_block *this, unsigned long code,
+	void *unused)

WARNING:TYPO_SPELLING: 'interessting' may be misspelled - perhaps 'interesting'?
#2783: FILE: drivers/block/drbd/drbd_main.c:2739:
+	/* just so we have it.  you never know what interessting things we
 	                                            ^^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2820: FILE: drivers/block/drbd/drbd_main.c:2776:
+ * currently only used from module cleanup code. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2831: FILE: drivers/block/drbd/drbd_main.c:2787:
+		ERR("open_cnt = %d in %s:%u", mdev->open_cnt,
+				__FILE__ , __LINE__);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#2831: FILE: drivers/block/drbd/drbd_main.c:2787:
+				__FILE__ , __LINE__);
 				         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2833: FILE: drivers/block/drbd/drbd_main.c:2789:
+	ERR_IF (!list_empty(&mdev->data.work.q)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#2835: FILE: drivers/block/drbd/drbd_main.c:2791:
+		struct list_head *lp;
+		list_for_each(lp, &mdev->data.work.q) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2844: FILE: drivers/block/drbd/drbd_main.c:2800:
+	 * device (re-)configuration or state changes */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2856: FILE: drivers/block/drbd/drbd_main.c:2812:
+	/*
+	mdev->ee_hash_s = 0;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2874: FILE: drivers/block/drbd/drbd_main.c:2830:
+	 * and actually free the mdev itself */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2899: FILE: drivers/block/drbd/drbd_main.c:2855:
+	printk(KERN_INFO "drbd: module cleanup done.\n");

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*mdev)...) over kzalloc(sizeof(struct drbd_conf)...)
#2947: FILE: drivers/block/drbd/drbd_main.c:2903:
+	mdev = kzalloc(sizeof(struct drbd_conf), GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3000: FILE: drivers/block/drbd/drbd_main.c:2956:
+	mdev->app_reads_hash = kzalloc(APP_R_HSIZE*sizeof(void *), GFP_KERNEL);
 	                                          ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*mdev->current_epoch)...) over kzalloc(sizeof(struct drbd_epoch)...)
#3004: FILE: drivers/block/drbd/drbd_main.c:2960:
+	mdev->current_epoch = kzalloc(sizeof(struct drbd_epoch), GFP_KERNEL);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3014: FILE: drivers/block/drbd/drbd_main.c:2970:
+/* out_whatever_else:
+	kfree(mdev->current_epoch); */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3014: FILE: drivers/block/drbd/drbd_main.c:2970:
+	kfree(mdev->current_epoch); */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3033: FILE: drivers/block/drbd/drbd_main.c:2989:
+ * last part of drbd_delete_device. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3047: FILE: drivers/block/drbd/drbd_main.c:3003:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <Drbd_HandShake_Packet>
#3052: FILE: drivers/block/drbd/drbd_main.c:3008:
+	if (sizeof(struct Drbd_HandShake_Packet) != 80) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3053: FILE: drivers/block/drbd/drbd_main.c:3009:
+		printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#3055: FILE: drivers/block/drbd/drbd_main.c:3011:
+		       "drbd: never change the size or layout "
+		       "of the HandShake packet.\n");

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#3059: FILE: drivers/block/drbd/drbd_main.c:3015:
+	if (1 > minor_count || minor_count > 255) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3060: FILE: drivers/block/drbd/drbd_main.c:3016:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3075: FILE: drivers/block/drbd/drbd_main.c:3031:
+		printk(KERN_ERR

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3091: FILE: drivers/block/drbd/drbd_main.c:3047:
+	minor_table = kzalloc(sizeof(struct drbd_conf *)*minor_count,
 	                                                ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#3091: FILE: drivers/block/drbd/drbd_main.c:3047:
+	minor_table = kzalloc(sizeof(struct drbd_conf *)*minor_count,
+				GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3092: FILE: drivers/block/drbd/drbd_main.c:3048:
+	minor_table = kzalloc(sizeof(struct drbd_conf *)*minor_count,
+				GFP_KERNEL);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#3100: FILE: drivers/block/drbd/drbd_main.c:3056:
+	drbd_proc = proc_create("drbd", S_IFREG | S_IRUGO , NULL, &drbd_proc_fops);
 	                                                  ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#3100: FILE: drivers/block/drbd/drbd_main.c:3056:
+	drbd_proc = proc_create("drbd", S_IFREG | S_IRUGO , NULL, &drbd_proc_fops);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3102: FILE: drivers/block/drbd/drbd_main.c:3058:
+		printk(KERN_ERR "drbd: unable to register proc file\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3108: FILE: drivers/block/drbd/drbd_main.c:3064:
+	printk(KERN_INFO "drbd: initialised. "

WARNING:SPLIT_STRING: quoted string split across lines
#3109: FILE: drivers/block/drbd/drbd_main.c:3065:
+	printk(KERN_INFO "drbd: initialised. "
+	       "Version: " REL_VERSION " (api:%d/proto:%d-%d)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3111: FILE: drivers/block/drbd/drbd_main.c:3067:
+	printk(KERN_INFO "drbd: %s\n", drbd_buildtag());

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3112: FILE: drivers/block/drbd/drbd_main.c:3068:
+	printk(KERN_INFO "drbd: registered as block device major %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3113: FILE: drivers/block/drbd/drbd_main.c:3069:
+	printk(KERN_INFO "drbd: registered as block device major %d\n",
+		DRBD_MAJOR);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3114: FILE: drivers/block/drbd/drbd_main.c:3070:
+	printk(KERN_INFO "drbd: minor_table @ 0x%p\n", minor_table);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3122: FILE: drivers/block/drbd/drbd_main.c:3078:
+		printk(KERN_ERR "drbd: ran out of memory\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3124: FILE: drivers/block/drbd/drbd_main.c:3080:
+		printk(KERN_ERR "drbd: initialization failure\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bc"
#3130: FILE: drivers/block/drbd/drbd_main.c:3086:
+	if (bc == NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3154: FILE: drivers/block/drbd/drbd_main.c:3110:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3210: FILE: drivers/block/drbd/drbd_main.c:3166:
+	 * metadata even if we detach due to a disk failure! */

CHECK:CAMELCASE: Avoid CamelCase: <TraceTypeMDIO>
#3214: FILE: drivers/block/drbd/drbd_main.c:3170:
+	MTRACE(TraceTypeMDIO, TraceLvlSummary,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3250: FILE: drivers/block/drbd/drbd_main.c:3206:
+	 * since we updated it on metadata. */

CHECK:CAMELCASE: Avoid CamelCase: <NoError>
#3267: FILE: drivers/block/drbd/drbd_main.c:3223:
+	int i, rv = NoError;

CHECK:CAMELCASE: Avoid CamelCase: <MDIOError>
#3270: FILE: drivers/block/drbd/drbd_main.c:3226:
+		return MDIOError;

WARNING:TYPO_SPELLING: 'cant' may be misspelled - perhaps 'can't'?
#3276: FILE: drivers/block/drbd/drbd_main.c:3232:
+		/* NOTE: cant do normal error processing here as this is
 		         ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3277: FILE: drivers/block/drbd/drbd_main.c:3233:
+		/* NOTE: cant do normal error processing here as this is
+		   called BEFORE disk is attached */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3277: FILE: drivers/block/drbd/drbd_main.c:3233:
+		   called BEFORE disk is attached */

CHECK:CAMELCASE: Avoid CamelCase: <MDInvalid>
#3285: FILE: drivers/block/drbd/drbd_main.c:3241:
+		rv = MDInvalid;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3340: FILE: drivers/block/drbd/drbd_main.c:3296:
+	mod_timer(&mdev->md_sync_timer, jiffies + 5*HZ);
 	                                           ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3343: FILE: drivers/block/drbd/drbd_main.c:3299:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <History_start>
#3348: FILE: drivers/block/drbd/drbd_main.c:3304:
+	for (i = History_start; i < History_end; i++) {

CHECK:CAMELCASE: Avoid CamelCase: <History_end>
#3348: FILE: drivers/block/drbd/drbd_main.c:3304:
+	for (i = History_start; i < History_end; i++) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3349: FILE: drivers/block/drbd/drbd_main.c:3305:
+		mdev->bc->md.uuid[i+1] = mdev->bc->md.uuid[i];
 		                   ^

CHECK:CAMELCASE: Avoid CamelCase: <TraceTypeUuid>
#3351: FILE: drivers/block/drbd/drbd_main.c:3307:
+		MTRACE(TraceTypeUuid, TraceLvlAll,

CHECK:CAMELCASE: Avoid CamelCase: <TraceLvlAll>
#3351: FILE: drivers/block/drbd/drbd_main.c:3307:
+		MTRACE(TraceTypeUuid, TraceLvlAll,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3352: FILE: drivers/block/drbd/drbd_main.c:3308:
+		       drbd_print_uuid(mdev, i+1);
 		                              ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3377: FILE: drivers/block/drbd/drbd_main.c:3333:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <TraceLvlMetrics>
#3383: FILE: drivers/block/drbd/drbd_main.c:3339:
+		MTRACE(TraceTypeUuid, TraceLvlMetrics,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3527: FILE: drivers/block/drbd/drbd_main.c:3483:
+		ERR("FIXME going to queue '%s' but '%s' still pending?\n",
+			why, mdev->bm_io_work.why);

CHECK:BRACES: braces {} should be used on all arms of this statement
#3535: FILE: drivers/block/drbd/drbd_main.c:3491:
+		if (list_empty(&mdev->bm_io_work.w.list)) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3538: FILE: drivers/block/drbd/drbd_main.c:3494:
+		} else

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#3580: FILE: drivers/block/drbd/drbd_main.c:3536:
+}
+int drbd_md_test_flag(struct drbd_backing_dev *bdev, int flag)

CHECK:SPACING: No space is necessary after a cast
#3587: FILE: drivers/block/drbd/drbd_main.c:3543:
+	struct drbd_conf *mdev = (struct drbd_conf *) data;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3602: FILE: drivers/block/drbd/drbd_main.c:3558:
+ * stolen from kernel/rcutorture.c */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#3630: FILE: drivers/block/drbd/drbd_main.c:3586:
+STATIC char *
+_drbd_fault_str(unsigned int type) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:STATIC_CONST_CHAR_ARRAY: char * array declaration might be better as static const
#3632: FILE: drivers/block/drbd/drbd_main.c:3588:
+	static char *_faults[] = {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#3650: FILE: drivers/block/drbd/drbd_main.c:3606:
+	unsigned int ret = (

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#3658: FILE: drivers/block/drbd/drbd_main.c:3614:
+		if (printk_ratelimit())

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3660: FILE: drivers/block/drbd/drbd_main.c:3616:
+			drbd_WARN("***Simulating %s failure\n",
+				_drbd_fault_str(type));

WARNING:STATIC_CONST_CHAR_ARRAY: char * array declaration might be better as static const
#3671: FILE: drivers/block/drbd/drbd_main.c:3627:
+	static char *uuid_str[] = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3690: FILE: drivers/block/drbd/drbd_main.c:3646:
+
+

WARNING:TYPO_SPELLING: 'outupt' may be misspelled - perhaps 'output'?
#3704: FILE: drivers/block/drbd/drbd_main.c:3660:
+ *                       virtual address of the line being outupt. If clear,
                                                            ^^^^^^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3722: FILE: drivers/block/drbd/drbd_main.c:3678:
+#define LINE_ENTRIES    (int)(LINE_SIZE/size)
                                        ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3722: FILE: drivers/block/drbd/drbd_main.c:3678:
+#define LINE_ENTRIES    (int)(LINE_SIZE/size)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3727: FILE: drivers/block/drbd/drbd_main.c:3683:
+	char bytes_str[LINE_SIZE*3+8], ascii_str[LINE_SIZE+8];
 	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3727: FILE: drivers/block/drbd/drbd_main.c:3683:
+	char bytes_str[LINE_SIZE*3+8], ascii_str[LINE_SIZE+8];
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3727: FILE: drivers/block/drbd/drbd_main.c:3683:
+	char bytes_str[LINE_SIZE*3+8], ascii_str[LINE_SIZE+8];
 	                                                  ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3741: FILE: drivers/block/drbd/drbd_main.c:3697:
+		printk(KERN_DEBUG "drbd_print_buffer: "

WARNING:SPLIT_STRING: quoted string split across lines
#3742: FILE: drivers/block/drbd/drbd_main.c:3698:
+		printk(KERN_DEBUG "drbd_print_buffer: "
+			"ERROR invalid size %d\n", size);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3746: FILE: drivers/block/drbd/drbd_main.c:3702:
+	sizemask = size-1;
 	               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3747: FILE: drivers/block/drbd/drbd_main.c:3703:
+	field_width = size*2;
 	                  ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3757: FILE: drivers/block/drbd/drbd_main.c:3713:
+		 * with addresses being on line size (16) byte boundaries */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3758: FILE: drivers/block/drbd/drbd_main.c:3714:
+		pstart = (const unsigned char *)((long)buffer & ~(LINE_SIZE-1));
 		                                                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3765: FILE: drivers/block/drbd/drbd_main.c:3721:
+		 - ((const unsigned char *)buffer-pstart);
 		                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3768: FILE: drivers/block/drbd/drbd_main.c:3724:
+	pend_str = pstart + (((pend-pstart) + LINE_SIZE-1) & ~(LINE_SIZE-1));
 	                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3768: FILE: drivers/block/drbd/drbd_main.c:3724:
+	pend_str = pstart + (((pend-pstart) + LINE_SIZE-1) & ~(LINE_SIZE-1));
 	                                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3768: FILE: drivers/block/drbd/drbd_main.c:3724:
+	pend_str = pstart + (((pend-pstart) + LINE_SIZE-1) & ~(LINE_SIZE-1));
 	                                                                ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#3786: FILE: drivers/block/drbd/drbd_main.c:3742:
+			int val;
+			switch (size) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3812: FILE: drivers/block/drbd/drbd_main.c:3768:
+			printk(KERN_DEBUG "%s%8.8lx: %*s|%*s|\n",

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#3815: FILE: drivers/block/drbd/drbd_main.c:3771:
+			       ? (long)pstart_va:(long)offset,
 			                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3816: FILE: drivers/block/drbd/drbd_main.c:3772:
+			       LINE_ENTRIES*(field_width+1), bytes_str,
 			                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3816: FILE: drivers/block/drbd/drbd_main.c:3772:
+			       LINE_ENTRIES*(field_width+1), bytes_str,
 			                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3820: FILE: drivers/block/drbd/drbd_main.c:3776:
+			pstart_va += (p-pstart);
 			               ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'A' - possible side-effects?
#3833: FILE: drivers/block/drbd/drbd_main.c:3789:
+#define PSM(A)							\
+do {								\
+	if (mask.A) {						\
+		int i = snprintf(p, len, " " #A "( %s )",	\
+				A##s_to_name(val.A));		\
+		if (i >= len)					\
+			return op;				\
+		p += i;						\
+		len -= i;					\
+	}							\
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'fmt' - possible side-effects?
#3858: FILE: drivers/block/drbd/drbd_main.c:3814:
+#define INFOP(fmt, args...) \
+do { \
+	if (trace_level >= TraceLvlAll) { \
+		INFO("%s:%d: %s [%d] %s %s " fmt , \
+		     file, line, current->comm, current->pid, \
+		     sockname, recv ? "<<<" : ">>>" , \
+		     ## args); \
+	} else { \
+		INFO("%s %s " fmt, sockname, \
+		     recv ? "<<<" : ">>>" , \
+		     ## args); \
+	} \
+} while (0)

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#3861: FILE: drivers/block/drbd/drbd_main.c:3817:
+		INFO("%s:%d: %s [%d] %s %s " fmt , \
 		                                 ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#3863: FILE: drivers/block/drbd/drbd_main.c:3819:
+		     sockname, recv ? "<<<" : ">>>" , \
 		                                    ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#3867: FILE: drivers/block/drbd/drbd_main.c:3823:
+		     recv ? "<<<" : ">>>" , \
 		                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3884: FILE: drivers/block/drbd/drbd_main.c:3840:
+_dump_packet(struct drbd_conf *mdev, struct socket *sock,
+	    int recv, union Drbd_Polymorph_Packet *p, char *file, int line)

CHECK:CAMELCASE: Avoid CamelCase: <Drbd_Polymorph_Packet>
#3884: FILE: drivers/block/drbd/drbd_main.c:3840:
+	    int recv, union Drbd_Polymorph_Packet *p, char *file, int line)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3894: FILE: drivers/block/drbd/drbd_main.c:3850:
+		INFOP("%s (protocol %u-%u)\n", cmdname(cmd),
+			be32_to_cpu(p->HandShake.protocol_min),

CHECK:CAMELCASE: Avoid CamelCase: <HandShake>
#3894: FILE: drivers/block/drbd/drbd_main.c:3850:
+			be32_to_cpu(p->HandShake.protocol_min),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3926: FILE: drivers/block/drbd/drbd_main.c:3882:
+		INFOP("%s (sector %llus, size %u, id %s, seq %u)\n",
+			cmdname(cmd),

CHECK:CAMELCASE: Avoid CamelCase: <BlockAck>
#3927: FILE: drivers/block/drbd/drbd_main.c:3883:
+		      (long long)be64_to_cpu(p->BlockAck.sector),

CHECK:CAMELCASE: Avoid CamelCase: <BlockRequest>
#3937: FILE: drivers/block/drbd/drbd_main.c:3893:
+		      (long long)be64_to_cpu(p->BlockRequest.sector),

CHECK:CAMELCASE: Avoid CamelCase: <Barrier>
#3945: FILE: drivers/block/drbd/drbd_main.c:3901:
+		INFOP("%s (barrier %u)\n", cmdname(cmd), p->Barrier.barrier);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3951: FILE: drivers/block/drbd/drbd_main.c:3907:
+		INFOP("%s (rate %u, verify-alg \"%.64s\", csums-alg \"%.64s\")\n",
+			cmdname(cmd), be32_to_cpu(p->SyncParam89.rate),

WARNING:SPLIT_STRING: quoted string split across lines
#3957: FILE: drivers/block/drbd/drbd_main.c:3913:
+		INFOP("%s Curr:%016llX, Bitmap:%016llX, "
+		      "HisSt:%016llX, HisEnd:%016llX\n",

CHECK:CAMELCASE: Avoid CamelCase: <GenCnt>
#3959: FILE: drivers/block/drbd/drbd_main.c:3915:
+		      (unsigned long long)be64_to_cpu(p->GenCnt.uuid[Current]),

WARNING:SPLIT_STRING: quoted string split across lines
#3967: FILE: drivers/block/drbd/drbd_main.c:3923:
+		INFOP("%s (d %lluMiB, u %lluMiB, c %lldMiB, "
+		      "max bio %x, q order %x)\n",

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#3969: FILE: drivers/block/drbd/drbd_main.c:3925:
+		      (long long)(be64_to_cpu(p->Sizes.d_size)>>(20-9)),
 		                                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3969: FILE: drivers/block/drbd/drbd_main.c:3925:
+		      (long long)(be64_to_cpu(p->Sizes.d_size)>>(20-9)),
 		                                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <Sizes>
#3969: FILE: drivers/block/drbd/drbd_main.c:3925:
+		      (long long)(be64_to_cpu(p->Sizes.d_size)>>(20-9)),

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#3970: FILE: drivers/block/drbd/drbd_main.c:3926:
+		      (long long)(be64_to_cpu(p->Sizes.u_size)>>(20-9)),
 		                                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3970: FILE: drivers/block/drbd/drbd_main.c:3926:
+		      (long long)(be64_to_cpu(p->Sizes.u_size)>>(20-9)),
 		                                                   ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#3971: FILE: drivers/block/drbd/drbd_main.c:3927:
+		      (long long)(be64_to_cpu(p->Sizes.c_size)>>(20-9)),
 		                                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3971: FILE: drivers/block/drbd/drbd_main.c:3927:
+		      (long long)(be64_to_cpu(p->Sizes.c_size)>>(20-9)),
 		                                                   ^

CHECK:CAMELCASE: Avoid CamelCase: <State>
#3977: FILE: drivers/block/drbd/drbd_main.c:3933:
+		v.i = be32_to_cpu(p->State.state);

CHECK:CAMELCASE: Avoid CamelCase: <ReqState>
#3984: FILE: drivers/block/drbd/drbd_main.c:3940:
+		m.i = be32_to_cpu(p->ReqState.mask);

CHECK:CAMELCASE: Avoid CamelCase: <RqSReply>
#3992: FILE: drivers/block/drbd/drbd_main.c:3948:
+		      be32_to_cpu(p->RqSReply.retcode));

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#4002: FILE: drivers/block/drbd/drbd_main.c:3958:
+		/* fall through... */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#4011: FILE: drivers/block/drbd/drbd_main.c:3967:
+void _dump_bio(const char *pfx, struct drbd_conf *mdev, struct bio *bio, int complete, struct drbd_request *r)

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#4014: FILE: drivers/block/drbd/drbd_main.c:3970:
+#define SECTOR_FORMAT "%Lx"

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4022: FILE: drivers/block/drbd/drbd_main.c:3978:
+	char rb[sizeof(void *)*2+6] = { 0, };
 	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#4022: FILE: drivers/block/drbd/drbd_main.c:3978:
+	char rb[sizeof(void *)*2+6] = { 0, };
 	                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4027: FILE: drivers/block/drbd/drbd_main.c:3983:
+	const int biorw      = (rw & (RW_MASK|RWA_MASK));
 	                                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4028: FILE: drivers/block/drbd/drbd_main.c:3984:
+	const int biobarrier = (rw & (1<<BIO_RW_BARRIER));
 	                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4029: FILE: drivers/block/drbd/drbd_main.c:3985:
+	const int biosync    = (rw & ((1<<BIO_RW_UNPLUG) | (1<<BIO_RW_SYNCIO)));
 	                                ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4029: FILE: drivers/block/drbd/drbd_main.c:3985:
+	const int biosync    = (rw & ((1<<BIO_RW_UNPLUG) | (1<<BIO_RW_SYNCIO)));
 	                                                     ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'biorw == WRITE'
#4046: FILE: drivers/block/drbd/drbd_main.c:4002:
+	if (trace_level >= TraceLvlMetrics &&
+	    ((biorw == WRITE) ^ complete)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4048: FILE: drivers/block/drbd/drbd_main.c:4004:
+		printk(KERN_DEBUG "  ind     page   offset   length\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4050: FILE: drivers/block/drbd/drbd_main.c:4006:
+			printk(KERN_DEBUG "  [%d] %p %8.8x %8.8x\n", segno,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4068: FILE: drivers/block/drbd/drbd_main.c:4024:
+					printk(KERN_DEBUG "    ....\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000147354.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 11 errors, 211 warnings, 266 checks, 4034 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000147354.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
