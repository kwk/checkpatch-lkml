WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#36: FILE: Makefile:4:
+EXTRAVERSION = .4
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#321: FILE: arch/um/include/os.h:344:
+extern int os_arch_prctl(int pid, int code, unsigned long *addr);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#338: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#343: FILE: arch/um/os-Linux/sys-x86_64/prctl.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: No space is necessary after a cast
#353: FILE: arch/um/os-Linux/sys-x86_64/prctl.c:11:
+	return ptrace(PTRACE_ARCH_PRCTL, pid, (unsigned long) addr, code);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open brace '{'
#392: FILE: arch/um/sys-x86_64/syscalls.c:80:
+	switch(code){

ERROR:SPACING: space required before the open parenthesis '('
#392: FILE: arch/um/sys-x86_64/syscalls.c:80:
+	switch(code){

ERROR:SPACING: space required before the open parenthesis '('
#411: FILE: arch/um/sys-x86_64/syscalls.c:99:
+	if(ret)

CHECK:SPACING: No space is necessary after a cast
#417: FILE: arch/um/sys-x86_64/syscalls.c:104:
+		current->thread.arch.fs = (unsigned long) ptr;

CHECK:SPACING: No space is necessary after a cast
#451: FILE: arch/um/sys-x86_64/syscalls.c:125:
+				(unsigned long __user *) addr);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'to->thread.arch.fs == 0'
#465: FILE: arch/um/sys-x86_64/syscalls.c:144:
+	if((to->thread.arch.fs == 0) || (to->mm == NULL))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'to->mm == NULL'
#465: FILE: arch/um/sys-x86_64/syscalls.c:144:
+	if((to->thread.arch.fs == 0) || (to->mm == NULL))

ERROR:SPACING: space required before the open parenthesis '('
#465: FILE: arch/um/sys-x86_64/syscalls.c:144:
+	if((to->thread.arch.fs == 0) || (to->mm == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!to->mm"
#465: FILE: arch/um/sys-x86_64/syscalls.c:144:
+	if((to->thread.arch.fs == 0) || (to->mm == NULL))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#468: FILE: arch/um/sys-x86_64/syscalls.c:147:
+	arch_prctl_skas(ARCH_SET_FS, (void __user *) to->thread.arch.fs);

CHECK:SPACING: No space is necessary after a cast
#603: FILE: drivers/net/r8169.c:1686:
+	tp->timer.data = (unsigned long) dev;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#618: FILE: drivers/pci/probe.c:642:
+static void change_legacy_io_resource(struct pci_dev * dev, unsigned index,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#618: FILE: drivers/pci/probe.c:642:
+static void change_legacy_io_resource(struct pci_dev * dev, unsigned index,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#619: FILE: drivers/pci/probe.c:643:
+                                      unsigned start, unsigned end)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#619: FILE: drivers/pci/probe.c:643:
+                                      unsigned start, unsigned end)$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#619: FILE: drivers/pci/probe.c:643:
+                                      unsigned start, unsigned end)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#619: FILE: drivers/pci/probe.c:643:
+                                      unsigned start, unsigned end)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#621: FILE: drivers/pci/probe.c:645:
+	unsigned base = start & PCI_BASE_ADDRESS_IO_MASK;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#622: FILE: drivers/pci/probe.c:646:
+	unsigned len = (end | ~PCI_BASE_ADDRESS_IO_MASK) - base + 1;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#630: FILE: drivers/pci/probe.c:654:
+		printk(KERN_WARNING "%s: cannot adjust BAR%u (not I/O)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#633: FILE: drivers/pci/probe.c:657:
+		printk(KERN_WARNING "%s: cannot adjust BAR%u (size %04X)\n",

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#634: FILE: drivers/pci/probe.c:658:
+		       pci_name(dev), index, (unsigned)pci_resource_len(dev, index));

CHECK:BRACES: Unbalanced braces around else statement
#635: FILE: drivers/pci/probe.c:659:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#636: FILE: drivers/pci/probe.c:660:
+		printk(KERN_INFO "%s: trying to change BAR%u from %04X to %04X\n",

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#638: FILE: drivers/pci/probe.c:662:
+		       (unsigned)pci_resource_start(dev, index), base);

ERROR:CODE_INDENT: code indent should use tabs where possible
#682: FILE: drivers/scsi/gdth.c:3095:
+            cmdp->u.raw64.sg_ranz    = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#682: FILE: drivers/scsi/gdth.c:3095:
+            cmdp->u.raw64.sg_ranz    = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#690: FILE: drivers/scsi/gdth.c:3112:
+            cmdp->u.raw.sg_ranz    = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#690: FILE: drivers/scsi/gdth.c:3112:
+            cmdp->u.raw.sg_ranz    = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#703: FILE: drivers/scsi/st.c:12:
+   Copyright 1992 - 2007 Kai Makisara$

CHECK:CAMELCASE: Avoid CamelCase: <Copyright>
#703: FILE: drivers/scsi/st.c:12:
+   Copyright 1992 - 2007 Kai Makisara

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Kai>
#703: FILE: drivers/scsi/st.c:12:
+   Copyright 1992 - 2007 Kai Makisara

CHECK:CAMELCASE: Avoid CamelCase: <Makisara>
#703: FILE: drivers/scsi/st.c:12:
+   Copyright 1992 - 2007 Kai Makisara

CHECK:CAMELCASE: Avoid CamelCase: <STp>
#720: FILE: drivers/scsi/st.c:1171:
+	STp->try_dio_now = STp->try_dio;

CHECK:CAMELCASE: Avoid CamelCase: <STps>
#741: FILE: drivers/scsi/st.c:1603:
+		    !(STp->try_dio_now && try_wdio) && STps->eof < ST_EOM_OK &&

CHECK:CAMELCASE: Avoid CamelCase: <STm>
#750: FILE: drivers/scsi/st.c:1773:
+		if (!(STp->try_dio_now && try_rdio) && STm->do_read_ahead) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#794: FILE: drivers/usb/host/ehci-hub.c:138:
+	 * they set up the port statuses.  See Bugzilla #8190. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#869: FILE: include/asm-um/ptrace-x86_64.h:84:
+extern void arch_switch_to_skas(struct task_struct *from,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#899: FILE: kernel/auditsc.c:737:
+	unsigned len;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1027: FILE: mm/filemap.c:2423:
+		retval = invalidate_inode_pages2_range(mapping,
 					offset >> PAGE_CACHE_SHIFT, end);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tb[IFA_LOCAL]"
#1146: FILE: net/ipv4/devinet.c:506:
+	if (ifm->ifa_prefixlen > 32 || tb[IFA_LOCAL] == NULL) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'x1->id.proto != x->id.proto'
#1257: FILE: net/xfrm/xfrm_state.c:808:
+		if (x1 && ((x1->id.proto != x->id.proto) ||
+		    xfrm_addr_cmp(&x1->id.daddr, &x->id.daddr, family))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1258: FILE: net/xfrm/xfrm_state.c:809:
+		if (x1 && ((x1->id.proto != x->id.proto) ||
+		    xfrm_addr_cmp(&x1->id.daddr, &x->id.daddr, family))) {

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1278: FILE: sound/pci/hda/hda_intel.c:968:
+static unsigned int azx_max_codecs[] __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1288: FILE: sound/pci/hda/hda_intel.c:978:
 static int __devinit azx_codec_create(struct azx *chip, const char *model)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000452622.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 22 warnings, 21 checks, 1007 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000452622.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
