WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#53: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#58: FILE: arch/microblaze/include/asm/pvr.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#76: FILE: arch/microblaze/include/asm/pvr.h:19:
+	unsigned pvr[16];

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#118: FILE: arch/microblaze/include/asm/pvr.h:61:
+#define PVR2_USE_IPLBEXC ^I^I0x00000100$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#175: FILE: arch/microblaze/include/asm/pvr.h:118:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#177: FILE: arch/microblaze/include/asm/pvr.h:120:
+#define PVR_IS_FULL(pvr)		(pvr.pvr[0] & PVR0_PVR_FULL_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#178: FILE: arch/microblaze/include/asm/pvr.h:121:
+#define PVR_USE_BARREL(pvr)		(pvr.pvr[0] & PVR0_USE_BARREL_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#179: FILE: arch/microblaze/include/asm/pvr.h:122:
+#define PVR_USE_DIV(pvr)		(pvr.pvr[0] & PVR0_USE_DIV_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#180: FILE: arch/microblaze/include/asm/pvr.h:123:
+#define PVR_USE_HW_MUL(pvr)		(pvr.pvr[0] & PVR0_USE_HW_MUL_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#181: FILE: arch/microblaze/include/asm/pvr.h:124:
+#define PVR_USE_FPU(pvr)		(pvr.pvr[0] & PVR0_USE_FPU_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#182: FILE: arch/microblaze/include/asm/pvr.h:125:
+#define PVR_USE_FPU2(pvr)		(pvr.pvr[2] & PVR2_USE_FPU2_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#183: FILE: arch/microblaze/include/asm/pvr.h:126:
+#define PVR_USE_ICACHE(pvr)		(pvr.pvr[0] & PVR0_USE_ICACHE_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#184: FILE: arch/microblaze/include/asm/pvr.h:127:
+#define PVR_USE_DCACHE(pvr)		(pvr.pvr[0] & PVR0_USE_DCACHE_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#185: FILE: arch/microblaze/include/asm/pvr.h:128:
+#define PVR_VERSION(pvr)	((pvr.pvr[0] & PVR0_VERSION_MASK) >> 8)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#186: FILE: arch/microblaze/include/asm/pvr.h:129:
+#define PVR_USER1(pvr)			(pvr.pvr[0] & PVR0_USER1_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#187: FILE: arch/microblaze/include/asm/pvr.h:130:
+#define PVR_USER2(pvr)			(pvr.pvr[1] & PVR1_USER2_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#189: FILE: arch/microblaze/include/asm/pvr.h:132:
+#define PVR_D_OPB(pvr)			(pvr.pvr[2] & PVR2_D_OPB_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#190: FILE: arch/microblaze/include/asm/pvr.h:133:
+#define PVR_D_LMB(pvr)			(pvr.pvr[2] & PVR2_D_LMB_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#191: FILE: arch/microblaze/include/asm/pvr.h:134:
+#define PVR_I_OPB(pvr)			(pvr.pvr[2] & PVR2_I_OPB_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#192: FILE: arch/microblaze/include/asm/pvr.h:135:
+#define PVR_I_LMB(pvr)			(pvr.pvr[2] & PVR2_I_LMB_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#193: FILE: arch/microblaze/include/asm/pvr.h:136:
+#define PVR_INTERRUPT_IS_EDGE(pvr) \
+			(pvr.pvr[2] & PVR2_INTERRUPT_IS_EDGE_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#195: FILE: arch/microblaze/include/asm/pvr.h:138:
+#define PVR_EDGE_IS_POSITIVE(pvr) \
+			(pvr.pvr[2] & PVR2_EDGE_IS_POSITIVE_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#197: FILE: arch/microblaze/include/asm/pvr.h:140:
+#define PVR_USE_MSR_INSTR(pvr)		(pvr.pvr[2] & PVR2_USE_MSR_INSTR)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#198: FILE: arch/microblaze/include/asm/pvr.h:141:
+#define PVR_USE_PCMP_INSTR(pvr)		(pvr.pvr[2] & PVR2_USE_PCMP_INSTR)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#199: FILE: arch/microblaze/include/asm/pvr.h:142:
+#define PVR_AREA_OPTIMISED(pvr)		(pvr.pvr[2] & PVR2_AREA_OPTIMISED)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#200: FILE: arch/microblaze/include/asm/pvr.h:143:
+#define PVR_USE_MUL64(pvr)		(pvr.pvr[2] & PVR2_USE_MUL64_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#201: FILE: arch/microblaze/include/asm/pvr.h:144:
+#define PVR_OPCODE_0x0_ILLEGAL(pvr) \
+			(pvr.pvr[2] & PVR2_OPCODE_0x0_ILL_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#203: FILE: arch/microblaze/include/asm/pvr.h:146:
+#define PVR_UNALIGNED_EXCEPTION(pvr) \
+			(pvr.pvr[2] & PVR2_UNALIGNED_EXC_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#205: FILE: arch/microblaze/include/asm/pvr.h:148:
+#define PVR_ILL_OPCODE_EXCEPTION(pvr) \
+			(pvr.pvr[2] & PVR2_ILL_OPCODE_EXC_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#207: FILE: arch/microblaze/include/asm/pvr.h:150:
+#define PVR_IOPB_BUS_EXCEPTION(pvr) \
+			(pvr.pvr[2] & PVR2_IOPB_BUS_EXC_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#209: FILE: arch/microblaze/include/asm/pvr.h:152:
+#define PVR_DOPB_BUS_EXCEPTION(pvr) \
+			(pvr.pvr[2] & PVR2_DOPB_BUS_EXC_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#211: FILE: arch/microblaze/include/asm/pvr.h:154:
+#define PVR_DIV_ZERO_EXCEPTION(pvr) \
+			(pvr.pvr[2] & PVR2_DIV_ZERO_EXC_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#213: FILE: arch/microblaze/include/asm/pvr.h:156:
+#define PVR_FPU_EXCEPTION(pvr)		(pvr.pvr[2] & PVR2_FPU_EXC_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#214: FILE: arch/microblaze/include/asm/pvr.h:157:
+#define PVR_FSL_EXCEPTION(pvr)		(pvr.pvr[2] & PVR2_USE_EXTEND_FSL)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#216: FILE: arch/microblaze/include/asm/pvr.h:159:
+#define PVR_DEBUG_ENABLED(pvr)		(pvr.pvr[3] & PVR3_DEBUG_ENABLED_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#217: FILE: arch/microblaze/include/asm/pvr.h:160:
+#define PVR_NUMBER_OF_PC_BRK(pvr) \
+			((pvr.pvr[3] & PVR3_NUMBER_OF_PC_BRK_MASK) >> 25)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#219: FILE: arch/microblaze/include/asm/pvr.h:162:
+#define PVR_NUMBER_OF_RD_ADDR_BRK(pvr) \
+			((pvr.pvr[3] & PVR3_NUMBER_OF_RD_ADDR_BRK_MASK) >> 19)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#221: FILE: arch/microblaze/include/asm/pvr.h:164:
+#define PVR_NUMBER_OF_WR_ADDR_BRK(pvr) \
+			((pvr.pvr[3] & PVR3_NUMBER_OF_WR_ADDR_BRK_MASK) >> 13)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#223: FILE: arch/microblaze/include/asm/pvr.h:166:
+#define PVR_FSL_LINKS(pvr)	((pvr.pvr[3] & PVR3_FSL_LINKS_MASK) >> 7)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#225: FILE: arch/microblaze/include/asm/pvr.h:168:
+#define PVR_ICACHE_ADDR_TAG_BITS(pvr) \
+			((pvr.pvr[4] & PVR4_ICACHE_ADDR_TAG_BITS_MASK) >> 26)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#227: FILE: arch/microblaze/include/asm/pvr.h:170:
+#define PVR_ICACHE_USE_FSL(pvr)		(pvr.pvr[4] & PVR4_ICACHE_USE_FSL_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#228: FILE: arch/microblaze/include/asm/pvr.h:171:
+#define PVR_ICACHE_ALLOW_WR(pvr)	(pvr.pvr[4] & PVR4_ICACHE_ALLOW_WR_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#229: FILE: arch/microblaze/include/asm/pvr.h:172:
+#define PVR_ICACHE_LINE_LEN(pvr) \
+			(1 << ((pvr.pvr[4] & PVR4_ICACHE_LINE_LEN_MASK) >> 21))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#231: FILE: arch/microblaze/include/asm/pvr.h:174:
+#define PVR_ICACHE_BYTE_SIZE(pvr) \
+			(1 << ((pvr.pvr[4] & PVR4_ICACHE_BYTE_SIZE_MASK) >> 16))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#234: FILE: arch/microblaze/include/asm/pvr.h:177:
+#define PVR_DCACHE_ADDR_TAG_BITS(pvr) \
+			((pvr.pvr[5] & PVR5_DCACHE_ADDR_TAG_BITS_MASK) >> 26)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#236: FILE: arch/microblaze/include/asm/pvr.h:179:
+#define PVR_DCACHE_USE_FSL(pvr)		(pvr.pvr[5] & PVR5_DCACHE_USE_FSL_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#237: FILE: arch/microblaze/include/asm/pvr.h:180:
+#define PVR_DCACHE_ALLOW_WR(pvr)	(pvr.pvr[5] & PVR5_DCACHE_ALLOW_WR_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#238: FILE: arch/microblaze/include/asm/pvr.h:181:
+#define PVR_DCACHE_LINE_LEN(pvr) \
+			(1 << ((pvr.pvr[5] & PVR5_DCACHE_LINE_LEN_MASK) >> 21))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#240: FILE: arch/microblaze/include/asm/pvr.h:183:
+#define PVR_DCACHE_BYTE_SIZE(pvr) \
+			(1 << ((pvr.pvr[5] & PVR5_DCACHE_BYTE_SIZE_MASK) >> 16))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#243: FILE: arch/microblaze/include/asm/pvr.h:186:
+
+

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#244: FILE: arch/microblaze/include/asm/pvr.h:187:
+#define PVR_ICACHE_BASEADDR(pvr)	(pvr.pvr[6] & PVR6_ICACHE_BASEADDR_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#245: FILE: arch/microblaze/include/asm/pvr.h:188:
+#define PVR_ICACHE_HIGHADDR(pvr)	(pvr.pvr[7] & PVR7_ICACHE_HIGHADDR_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#247: FILE: arch/microblaze/include/asm/pvr.h:190:
+#define PVR_DCACHE_BASEADDR(pvr)	(pvr.pvr[8] & PVR8_DCACHE_BASEADDR_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#248: FILE: arch/microblaze/include/asm/pvr.h:191:
+#define PVR_DCACHE_HIGHADDR(pvr)	(pvr.pvr[9] & PVR9_DCACHE_HIGHADDR_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#250: FILE: arch/microblaze/include/asm/pvr.h:193:
+#define PVR_TARGET_FAMILY(pvr)	((pvr.pvr[10] & PVR10_TARGET_FAMILY_MASK) >> 24)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#252: FILE: arch/microblaze/include/asm/pvr.h:195:
+#define PVR_MSR_RESET_VALUE(pvr) \
+				(pvr.pvr[11] & PVR11_MSR_RESET_VALUE_MASK)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#256: FILE: arch/microblaze/include/asm/pvr.h:199:
+#define PVR_USE_MMU(pvr)	((pvr.pvr[11] & PVR11_USE_MMU) >> 30)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#257: FILE: arch/microblaze/include/asm/pvr.h:200:
+#define PVR_MMU_ITLB_SIZE(pvr)	(pvr.pvr[11] & PVR11_MMU_ITLB_SIZE)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#258: FILE: arch/microblaze/include/asm/pvr.h:201:
+#define PVR_MMU_DTLB_SIZE(pvr)	(pvr.pvr[11] & PVR11_MMU_DTLB_SIZE)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#259: FILE: arch/microblaze/include/asm/pvr.h:202:
+#define PVR_MMU_TLB_ACCESS(pvr)	(pvr.pvr[11] & PVR11_MMU_TLB_ACCESS)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pvr' - possible side-effects?
#260: FILE: arch/microblaze/include/asm/pvr.h:203:
+#define PVR_MMU_ZONES(pvr)	(pvr.pvr[11] & PVR11_MMU_ZONES)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#262: FILE: arch/microblaze/include/asm/pvr.h:205:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#273: FILE: arch/microblaze/kernel/cpu/mb.c:1:
+/*

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "family_string_lookup[i].s"
#308: FILE: arch/microblaze/kernel/cpu/mb.c:36:
+	for (i = 0; family_string_lookup[i].s != NULL; i++) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cpu_ver_lookup[i].s"
#316: FILE: arch/microblaze/kernel/cpu/mb.c:44:
+	for (i = 0; cpu_ver_lookup[i].s != NULL; i++) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#324: FILE: arch/microblaze/kernel/cpu/mb.c:52:
+	count = seq_printf(m,
+			"CPU-Family:	MicroBlaze\n"

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#376: FILE: arch/microblaze/kernel/cpu/mb.c:104:
+		count += seq_printf(m, "Icache:\t\tno\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#383: FILE: arch/microblaze/kernel/cpu/mb.c:111:
+		count += seq_printf(m, "Dcache:\t\tno\n");

CHECK:SPACING: No space is necessary after a cast
#402: FILE: arch/microblaze/kernel/cpu/mb.c:130:
+	return i < NR_CPUS ? (void *) (i + 1) : NULL;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#402: FILE: arch/microblaze/kernel/cpu/mb.c:130:
+	return i < NR_CPUS ? (void *) (i + 1) : NULL;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#427: FILE: arch/microblaze/kernel/cpu/pvr.c:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#457: FILE: arch/microblaze/kernel/cpu/pvr.c:31:
+^I^I^I: "=r" (tmp) : : "memory"); ^I^I\$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#474: FILE: arch/microblaze/kernel/cpu/pvr.c:48:
+	unsigned flags;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#475: FILE: arch/microblaze/kernel/cpu/pvr.c:49:
+	unsigned pvr0;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000152866.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 12 warnings, 62 checks, 438 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000152866.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
