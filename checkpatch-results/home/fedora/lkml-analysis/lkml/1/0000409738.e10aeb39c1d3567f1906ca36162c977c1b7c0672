WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
  ...  when != \(x->fld=E;\|y=f(...,x,...);\|f(...,x,...);\|x=E;\|while(...) S\|for(e1;e2;e3) S\)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*simple_child)...) over kzalloc(sizeof(struct simple_child)...)
#234: FILE: Documentation/filesystems/configfs/configfs_example.c:280:
+	simple_child = kzalloc(sizeof(struct simple_child), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*simple_children)...) over kzalloc(sizeof(struct simple_children)...)
#247: FILE: Documentation/filesystems/configfs/configfs_example.c:366:
+	simple_children = kzalloc(sizeof(struct simple_children),

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#279: FILE: arch/arm/mach-iop13xx/pci.c:1005:
+	res = kcalloc(sizeof(struct resource), 2, GFP_KERNEL);

The first argument for kcalloc or kmalloc_array should be the
number of elements.  sizeof() as the first argument is generally
wrong.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*lsl)...) over kzalloc(sizeof(struct sram_list_struct)...)
#296: FILE: arch/blackfin/mm/blackfin_sram.c:524:
+	lsl = kzalloc(sizeof(struct sram_list_struct), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dev->dma_mem)...) over kzalloc(sizeof(struct dma_coherent_mem)...)
#312: FILE: arch/cris/arch-v32/drivers/pci/dma.c:94:
+	dev->dma_mem = kzalloc(sizeof(struct dma_coherent_mem), GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxW)
#370: FILE: block/scsi_ioctl.c:408:
+		buffer = kzalloc(bytes, q->bounce_gfp | GFP_USER| __GFP_NOWARN);
 		                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*info)...) over kzalloc(sizeof(struct async_struct)...)
#408: FILE: drivers/char/amiserial.c:1729:
+	info = kzalloc(sizeof(struct async_struct), GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#426: FILE: drivers/char/drm/via_dmablit.c:276:
+^Iif (NULL ==  (vsg->desc_pages = kcalloc(sizeof(void *), vsg->num_desc_pages, GFP_KERNEL))) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#426: FILE: drivers/char/drm/via_dmablit.c:276:
+	if (NULL ==  (vsg->desc_pages = kcalloc(sizeof(void *), vsg->num_desc_pages, GFP_KERNEL))) 

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#426: FILE: drivers/char/drm/via_dmablit.c:276:
+	if (NULL ==  (vsg->desc_pages = kcalloc(sizeof(void *), vsg->num_desc_pages, GFP_KERNEL))) 

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*info)...) over kzalloc(sizeof(struct esp_struct)...)
#442: FILE: drivers/char/esp.c:2469:
+	info = kzalloc(sizeof(struct esp_struct), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*info)...) over kzalloc(sizeof(struct esp_struct)...)
#459: FILE: drivers/char/esp.c:2536:
+		info = kzalloc(sizeof(struct esp_struct), GFP_KERNEL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#514: FILE: drivers/char/pcmcia/synclink_cs.c:543:
+    info = kzalloc(sizeof(MGSLPC_INFO), GFP_KERNEL);$

CHECK:CAMELCASE: Avoid CamelCase: <CmdBlkP>
#550: FILE: drivers/char/rio/riocmd.c:559:
+	CmdBlkP = kzalloc(sizeof(struct CmdBlk), GFP_ATOMIC);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <CmdBlk>
#550: FILE: drivers/char/rio/riocmd.c:559:
+	CmdBlkP = kzalloc(sizeof(struct CmdBlk), GFP_ATOMIC);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*CmdBlkP)...) over kzalloc(sizeof(struct CmdBlk)...)
#550: FILE: drivers/char/rio/riocmd.c:559:
+	CmdBlkP = kzalloc(sizeof(struct CmdBlk), GFP_ATOMIC);

CHECK:CAMELCASE: Avoid CamelCase: <PortP>
#564: FILE: drivers/char/rio/riotable.c:866:
+			PortP->TxRingBuffer = kzalloc(p->RIOBufferSize, GFP_KERNEL);

CHECK:CAMELCASE: Avoid CamelCase: <TxRingBuffer>
#564: FILE: drivers/char/rio/riotable.c:866:
+			PortP->TxRingBuffer = kzalloc(p->RIOBufferSize, GFP_KERNEL);

CHECK:CAMELCASE: Avoid CamelCase: <RIOBufferSize>
#564: FILE: drivers/char/rio/riotable.c:866:
+			PortP->TxRingBuffer = kzalloc(p->RIOBufferSize, GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#577: FILE: drivers/char/rocket.c:638:
+	info = kzalloc(sizeof (struct r_port), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*info)...) over kzalloc(sizeof (struct r_port)...)
#577: FILE: drivers/char/rocket.c:638:
+	info = kzalloc(sizeof (struct r_port), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*info)...) over kzalloc(sizeof(struct mgsl_struct)...)
#595: FILE: drivers/char/synclink.c:4335:
+	info = kzalloc(sizeof(struct mgsl_struct),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#596: FILE: drivers/char/synclink.c:4336:
+	info = kzalloc(sizeof(struct mgsl_struct),
 		 GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*info)...) over kzalloc(sizeof(struct slgt_info)...)
#614: FILE: drivers/char/synclink_gt.c:3425:
+	info = kzalloc(sizeof(struct slgt_info), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#634: FILE: drivers/char/synclinkmp.c:3798:
+	info = kzalloc(sizeof(SLMP_INFO),
 		 GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*vc)...) over kzalloc(sizeof(struct vc_data)...)
#653: FILE: drivers/char/vt.c:732:
+	    vc = kzalloc(sizeof(struct vc_data), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*wdt)...) over kzalloc(sizeof(struct mpcore_wdt)...)
#669: FILE: drivers/char/watchdog/mpcore_wdt.c:331:
+	wdt = kzalloc(sizeof(struct mpcore_wdt), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#687: FILE: drivers/char/watchdog/pcwd_usb.c:629:
+	usb_pcwd = kzalloc (sizeof(struct usb_pcwd_private), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*usb_pcwd)...) over kzalloc(sizeof(struct usb_pcwd_private)...)
#687: FILE: drivers/char/watchdog/pcwd_usb.c:629:
+	usb_pcwd = kzalloc (sizeof(struct usb_pcwd_private), GFP_KERNEL);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#705: FILE: drivers/edac/edac_mc.c:1339:
+	if ((mci = kzalloc(size, GFP_KERNEL)) == NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#726: FILE: drivers/ide/mips/swarm.c:168:
+        if (!(pldev = kzalloc(sizeof (*pldev), GFP_KERNEL))) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#726: FILE: drivers/ide/mips/swarm.c:168:
+        if (!(pldev = kzalloc(sizeof (*pldev), GFP_KERNEL))) {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#726: FILE: drivers/ide/mips/swarm.c:168:
+        if (!(pldev = kzalloc(sizeof (*pldev), GFP_KERNEL))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#726: FILE: drivers/ide/mips/swarm.c:168:
+        if (!(pldev = kzalloc(sizeof (*pldev), GFP_KERNEL))) {

WARNING:SIZEOF_PARENTHESIS: sizeof *req should be sizeof(*req)
#744: FILE: drivers/infiniband/core/addr.c:298:
+	req = kzalloc(sizeof *req, GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*kmi)...) over kzalloc(sizeof(struct amba_kmi_port)...)
#776: FILE: drivers/input/serio/ambakmi.c:120:
+	kmi = kzalloc(sizeof(struct amba_kmi_port), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*io)...) over kzalloc(sizeof(struct serio)...)
#777: FILE: drivers/input/serio/ambakmi.c:121:
+	io = kzalloc(sizeof(struct serio), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ps2if)...) over kzalloc(sizeof(struct pcips2_data)...)
#798: FILE: drivers/input/serio/pcips2.c:143:
+	ps2if = kzalloc(sizeof(struct pcips2_data), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*serio)...) over kzalloc(sizeof(struct serio)...)
#799: FILE: drivers/input/serio/pcips2.c:144:
+	serio = kzalloc(sizeof(struct serio), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ps2if)...) over kzalloc(sizeof(struct ps2if)...)
#820: FILE: drivers/input/serio/sa1111ps2.c:237:
+	ps2if = kzalloc(sizeof(struct ps2if), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*serio)...) over kzalloc(sizeof(struct serio)...)
#821: FILE: drivers/input/serio/sa1111ps2.c:238:
+	serio = kzalloc(sizeof(struct serio), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*pp)...) over kzalloc(sizeof(struct smu_private)...)
#857: FILE: drivers/macintosh/smu.c:1056:
+	pp = kzalloc(sizeof(struct smu_private), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*clt)...) over kzalloc(sizeof(struct i2c_client)...)
#873: FILE: drivers/macintosh/therm_pm72.c:321:
+	clt = kzalloc(sizeof(struct i2c_client), GFP_KERNEL);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#889: FILE: drivers/macintosh/therm_windtunnel.c:434:
+	if( !(cl=kzalloc(sizeof(*cl), GFP_KERNEL)) )
 	        ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#889: FILE: drivers/macintosh/therm_windtunnel.c:434:
+	if( !(cl=kzalloc(sizeof(*cl), GFP_KERNEL)) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#889: FILE: drivers/macintosh/therm_windtunnel.c:434:
+	if( !(cl=kzalloc(sizeof(*cl), GFP_KERNEL)) )

ERROR:SPACING: space required before the open parenthesis '('
#889: FILE: drivers/macintosh/therm_windtunnel.c:434:
+	if( !(cl=kzalloc(sizeof(*cl), GFP_KERNEL)) )

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#889: FILE: drivers/macintosh/therm_windtunnel.c:434:
+	if( !(cl=kzalloc(sizeof(*cl), GFP_KERNEL)) )

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*lm)...) over kzalloc(sizeof(struct wf_lm75_sensor)...)
#904: FILE: drivers/macintosh/windfarm_lm75_sensor.c:120:
+	lm = kzalloc(sizeof(struct wf_lm75_sensor), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#939: FILE: drivers/media/dvb/cinergyT2/cinergyT2.c:908:
+	if (!(cinergyt2 = kzalloc (sizeof(struct cinergyt2), GFP_KERNEL))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#939: FILE: drivers/media/dvb/cinergyT2/cinergyT2.c:908:
+	if (!(cinergyt2 = kzalloc (sizeof(struct cinergyt2), GFP_KERNEL))) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*cinergyt2)...) over kzalloc(sizeof(struct cinergyt2)...)
#939: FILE: drivers/media/dvb/cinergyT2/cinergyT2.c:908:
+	if (!(cinergyt2 = kzalloc (sizeof(struct cinergyt2), GFP_KERNEL))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#994: FILE: drivers/media/video/planb.c:356:
+	if ((pb->priv_space = kzalloc (size, GFP_KERNEL)) == 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#994: FILE: drivers/media/video/planb.c:356:
+	if ((pb->priv_space = kzalloc (size, GFP_KERNEL)) == 0)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1009: FILE: drivers/media/video/usbvideo/vicam.c:1308:
+	     kzalloc(sizeof (struct vicam_camera), GFP_KERNEL)) == NULL) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*mcp)...) over kzalloc(sizeof(struct mcp)...)
#1045: FILE: drivers/mfd/mcp-core.c:203:
+	mcp = kzalloc(sizeof(struct mcp) + size, GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ucb)...) over kzalloc(sizeof(struct ucb1x00)...)
#1060: FILE: drivers/mfd/ucb1x00-core.c:487:
+	ucb = kzalloc(sizeof(struct ucb1x00), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*hotk)...) over kzalloc(sizeof(struct asus_hotk)...)
#1078: FILE: drivers/misc/asus-laptop.c:983:
+	hotk = kzalloc(sizeof(struct asus_hotk), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*cmd)...) over kzalloc(sizeof(struct command)...)
#1094: FILE: drivers/misc/ibmasm/command.c:44:
+	cmd = kzalloc(sizeof(struct command), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1119: FILE: drivers/misc/ibmasm/ibmasmfs.c:566:
+	buff = kzalloc (count + 1, GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*sp)...) over kzalloc(sizeof(struct service_processor)...)
#1136: FILE: drivers/misc/ibmasm/module.c:80:
+	sp = kzalloc(sizeof(struct service_processor), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*md)...) over kzalloc(sizeof(struct mmc_blk_data)...)
#1155: FILE: drivers/mmc/card/block.c:412:
+	md = kzalloc(sizeof(struct mmc_blk_data), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*host)...) over kzalloc(sizeof(struct mmc_host)...)
#1174: FILE: drivers/mmc/core/sysfs.c:262:
+	host = kzalloc(sizeof(struct mmc_host) + extra, GFP_KERNEL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1209: FILE: drivers/net/bsd_comp.c:398:
+    db         = kzalloc(sizeof (struct bsd_db),$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1209: FILE: drivers/net/bsd_comp.c:398:
+    db         = kzalloc(sizeof (struct bsd_db),

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*db)...) over kzalloc(sizeof (struct bsd_db)...)
#1209: FILE: drivers/net/bsd_comp.c:398:
+    db         = kzalloc(sizeof (struct bsd_db),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1210: FILE: drivers/net/bsd_comp.c:399:
+    db         = kzalloc(sizeof (struct bsd_db),
 					    GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#1230: FILE: drivers/net/forcedeth.c:4998:
+	np->rx_skb = kcalloc(sizeof(struct nv_skb_map), np->rx_ring_size, GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#1231: FILE: drivers/net/forcedeth.c:4999:
+	np->tx_skb = kcalloc(sizeof(struct nv_skb_map), np->tx_ring_size, GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*info)...) over kzalloc(sizeof(struct scc_info)...)
#1248: FILE: drivers/net/hamradio/dmascc.c:457:
+	info = kzalloc(sizeof(struct scc_info), GFP_KERNEL | GFP_DMA);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1271: FILE: drivers/net/irda/irport.c:168:
+		self->tx_buff.head = kzalloc(self->tx_buff.truesize,
 						      GFP_KERNEL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1355: FILE: drivers/net/pcmcia/com20020_cs.c:150:
+    info = kzalloc(sizeof(struct com20020_dev_t), GFP_KERNEL);$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*info)...) over kzalloc(sizeof(struct com20020_dev_t)...)
#1355: FILE: drivers/net/pcmcia/com20020_cs.c:150:
+    info = kzalloc(sizeof(struct com20020_dev_t), GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1376: FILE: drivers/net/pcmcia/ibmtr_cs.c:149:
+    info = kzalloc(sizeof(*info), GFP_KERNEL); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1376: FILE: drivers/net/pcmcia/ibmtr_cs.c:149:
+    info = kzalloc(sizeof(*info), GFP_KERNEL); $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1410: FILE: drivers/net/ppp_deflate.c:125:
+	state = kzalloc(sizeof(*state),
 						     GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#1511: FILE: drivers/net/wan/cosa.c:575:
+	cosa->chan = kcalloc(sizeof(struct channel_data), cosa->nchannels, GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#1530: FILE: drivers/net/wan/cycx_main.c:116:
+	cycx_card_array = kcalloc(sizeof(struct cycx_device), cycx_ncards, GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*chan)...) over kzalloc(sizeof(struct cycx_x25_channel)...)
#1547: FILE: drivers/net/wan/cycx_x25.c:379:
+	chan = kzalloc(sizeof(struct cycx_x25_channel), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1596: FILE: drivers/net/wan/farsync.c:2479:
+	card = kzalloc(sizeof (struct fst_card_info), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*card)...) over kzalloc(sizeof (struct fst_card_info)...)
#1596: FILE: drivers/net/wan/farsync.c:2479:
+	card = kzalloc(sizeof (struct fst_card_info), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*sv)...) over kzalloc(sizeof(struct sv11_device)...)
#1615: FILE: drivers/net/wan/hostess_sv11.c:234:
+	sv = kzalloc(sizeof(struct sv11_device), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*b)...) over kzalloc(sizeof(struct slvl_board)...)
#1727: FILE: drivers/net/wan/sealevel.c:273:
+	b = kzalloc(sizeof(struct slvl_board), GFP_KERNEL);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1766: FILE: drivers/net/wan/x25_asy.c:789:
+	x25_asy_devs = kcalloc(sizeof(struct net_device*), x25_asy_maxdev, GFP_KERNEL);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#1766: FILE: drivers/net/wan/x25_asy.c:789:
+	x25_asy_devs = kcalloc(sizeof(struct net_device*), x25_asy_maxdev, GFP_KERNEL);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1785: FILE: drivers/nubus/nubus.c:469:
+	if ((dev = kzalloc(sizeof(*dev), GFP_ATOMIC)) == NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1796: FILE: drivers/nubus/nubus.c:802:
+	if ((board = kzalloc(sizeof(*board), GFP_ATOMIC)) == NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1811: FILE: drivers/parport/parport_cs.c:108:
+    info = kzalloc(sizeof(*info), GFP_KERNEL);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1826: FILE: drivers/parport/parport_serial.c:327:
+	priv = kzalloc (sizeof *priv, GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *priv should be sizeof(*priv)
#1826: FILE: drivers/parport/parport_serial.c:327:
+	priv = kzalloc (sizeof *priv, GFP_KERNEL);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1842: FILE: drivers/pci/pcie/aer/aerdrv.c:151:
+	if (!(rpc = kzalloc(sizeof(struct aer_rpc),

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*rpc)...) over kzalloc(sizeof(struct aer_rpc)...)
#1842: FILE: drivers/pci/pcie/aer/aerdrv.c:151:
+	if (!(rpc = kzalloc(sizeof(struct aer_rpc),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1843: FILE: drivers/pci/pcie/aer/aerdrv.c:152:
+	if (!(rpc = kzalloc(sizeof(struct aer_rpc),
 		GFP_KERNEL)))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*rdev)...) over kzalloc(sizeof(struct rio_dev)...)
#1877: FILE: drivers/rapidio/rio-scan.c:300:
+	rdev = kzalloc(sizeof(struct rio_dev), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*net)...) over kzalloc(sizeof(struct rio_net)...)
#1890: FILE: drivers/rapidio/rio-scan.c:803:
+	net = kzalloc(sizeof(struct rio_net), GFP_KERNEL);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1905: FILE: drivers/s390/char/tape_34xx.c:134:
+	if ((p = kzalloc(sizeof(*p), GFP_ATOMIC)) == NULL)

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#1922: FILE: drivers/s390/net/claw.c:320:
+	privptr->p_mtc_envelope= kzalloc( MAX_ENVELOPE_SIZE, GFP_KERNEL);
 	                       ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1922: FILE: drivers/s390/net/claw.c:320:
+	privptr->p_mtc_envelope= kzalloc( MAX_ENVELOPE_SIZE, GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*privptr->p_env)...) over kzalloc(sizeof(struct claw_env)...)
#1923: FILE: drivers/s390/net/claw.c:321:
+	privptr->p_env = kzalloc(sizeof(struct claw_env), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1941: FILE: drivers/s390/net/claw.c:3925:
+	if ((p_ch->irb = kzalloc(sizeof (struct irb),GFP_KERNEL)) == NULL) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1941: FILE: drivers/s390/net/claw.c:3925:
+	if ((p_ch->irb = kzalloc(sizeof (struct irb),GFP_KERNEL)) == NULL) {
 	                                            ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1941: FILE: drivers/s390/net/claw.c:3925:
+	if ((p_ch->irb = kzalloc(sizeof (struct irb),GFP_KERNEL)) == NULL) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*p_ch->irb)...) over kzalloc(sizeof (struct irb)...)
#1941: FILE: drivers/s390/net/claw.c:3925:
+	if ((p_ch->irb = kzalloc(sizeof (struct irb),GFP_KERNEL)) == NULL) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2001: FILE: drivers/sbus/char/vfc_dev.c:659:
+	vfc_dev_lst = kcalloc(sizeof(struct vfc_dev*), (cards+1), GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2001: FILE: drivers/sbus/char/vfc_dev.c:659:
+	vfc_dev_lst = kcalloc(sizeof(struct vfc_dev*), (cards+1), GFP_KERNEL);
 	                                                     ^

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#2001: FILE: drivers/sbus/char/vfc_dev.c:659:
+	vfc_dev_lst = kcalloc(sizeof(struct vfc_dev*), (cards+1), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#2017: FILE: drivers/scsi/3w-9xxx.c:1163:
+	tw_dev->event_queue[0] = kcalloc(sizeof(TW_Event), TW_Q_LENGTH, GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#2090: FILE: drivers/scsi/aacraid/aachba.c:315:
+	fsa_dev_ptr =  kcalloc(sizeof(*fsa_dev_ptr), maximum_num_containers, GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2123: FILE: drivers/scsi/ips.c:7239:
+	ha = kzalloc(sizeof (ips_ha_t), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*iocbq_entry)...) over kzalloc(sizeof(struct lpfc_iocbq)...)
#2162: FILE: drivers/scsi/lpfc/lpfc_init.c:1637:
+		iocbq_entry = kzalloc(sizeof(struct lpfc_iocbq), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*psb)...) over kzalloc(sizeof(struct lpfc_scsi_buf)...)
#2183: FILE: drivers/scsi/lpfc/lpfc_scsi.c:62:
+	psb = kzalloc(sizeof(struct lpfc_scsi_buf), GFP_KERNEL);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2200: FILE: drivers/scsi/lpfc/lpfc_sli.c:296:
+		new_arr = kcalloc(new_len, sizeof(struct lpfc_iocbq*), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#2246: FILE: drivers/scsi/megaraid/megaraid_mbox.c:1051:
+	adapter->kscb_list = kcalloc(sizeof(scb_t), MBOX_MAX_SCSI_CMDS, GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#2264: FILE: drivers/scsi/megaraid/megaraid_mbox.c:3571:
+	adapter->uscb_list = kcalloc(sizeof(scb_t), MBOX_MAX_USER_CMDS, GFP_KERNEL);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2304: FILE: drivers/scsi/megaraid/megaraid_sas.c:1717:
+	instance->cmd_list = kcalloc(sizeof(struct megasas_cmd*), max_cmd, GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#2304: FILE: drivers/scsi/megaraid/megaraid_sas.c:1717:
+	instance->cmd_list = kcalloc(sizeof(struct megasas_cmd*), max_cmd, GFP_KERNEL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2324: FILE: drivers/scsi/pcmcia/aha152x_stub.c:109:
+    info = kzalloc(sizeof(*info), GFP_KERNEL);$

CHECK:CAMELCASE: Avoid CamelCase: <NCR_700_Host_Parameters>
#2402: FILE: drivers/scsi/sim710.c:103:
+		kzalloc(sizeof(struct NCR_700_Host_Parameters),	GFP_KERNEL);

CHECK:CAMELCASE: Avoid CamelCase: <pDCB>
#2423: FILE: drivers/scsi/tmscsim.c:2104:
+	pDCB = kzalloc(sizeof(struct dc390_dcb), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*pDCB)...) over kzalloc(sizeof(struct dc390_dcb)...)
#2423: FILE: drivers/scsi/tmscsim.c:2104:
+	pDCB = kzalloc(sizeof(struct dc390_dcb), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*uap)...) over kzalloc(sizeof(struct uart_amba_port)...)
#2439: FILE: drivers/serial/amba-pl011.c:719:
+	uap = kzalloc(sizeof(struct uart_amba_port), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dev)...) over kzalloc(sizeof(struct superhyway_device)...)
#2460: FILE: drivers/sh/superhyway/superhyway.c:59:
+		dev = kzalloc(sizeof(struct superhyway_device), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*idd)...) over kzalloc(sizeof(struct ioc3_driver_data)...)
#2477: FILE: drivers/sn/ioc3.c:632:
+	idd = kzalloc(sizeof(struct ioc3_driver_data), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*p_dev->priv)...) over kzalloc(sizeof(struct ixj_info_t)...)
#2498: FILE: drivers/telephony/ixj_pcmcia.c:48:
+	p_dev->priv = kzalloc(sizeof(struct ixj_info_t), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2515: FILE: drivers/usb/gadget/goku_udc.c:1830:
+	dev = kzalloc (sizeof *dev, GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *dev should be sizeof(*dev)
#2515: FILE: drivers/usb/gadget/goku_udc.c:1830:
+	dev = kzalloc (sizeof *dev, GFP_KERNEL);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2535: FILE: drivers/usb/gadget/serial.c:1430:
+	gs_device = dev = kzalloc(sizeof(struct gs_dev), GFP_KERNEL);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dev)...) over kzalloc(sizeof(struct gs_dev)...)
#2535: FILE: drivers/usb/gadget/serial.c:1430:
+	gs_device = dev = kzalloc(sizeof(struct gs_dev), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2556: FILE: drivers/usb/host/ohci-hcd.c:174:
+	urb_priv = kzalloc (sizeof (urb_priv_t) + size * sizeof (struct td *),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2556: FILE: drivers/usb/host/ohci-hcd.c:174:
+	urb_priv = kzalloc (sizeof (urb_priv_t) + size * sizeof (struct td *),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2556: FILE: drivers/usb/host/ohci-hcd.c:174:
+	urb_priv = kzalloc (sizeof (urb_priv_t) + size * sizeof (struct td *),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2557: FILE: drivers/usb/host/ohci-hcd.c:175:
+	urb_priv = kzalloc (sizeof (urb_priv_t) + size * sizeof (struct td *),
 			mem_flags);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2589: FILE: drivers/usb/misc/ftdi-elan.c:2777:
+        struct usb_ftdi *ftdi = kzalloc(sizeof(struct usb_ftdi), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2589: FILE: drivers/usb/misc/ftdi-elan.c:2777:
+        struct usb_ftdi *ftdi = kzalloc(sizeof(struct usb_ftdi), GFP_KERNEL);$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ftdi)...) over kzalloc(sizeof(struct usb_ftdi)...)
#2589: FILE: drivers/usb/misc/ftdi-elan.c:2777:
+        struct usb_ftdi *ftdi = kzalloc(sizeof(struct usb_ftdi), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*fb)...) over kzalloc(sizeof(struct clcd_fb)...)
#2607: FILE: drivers/video/amba-clcd.c:450:
+	fb = kzalloc(sizeof(struct clcd_fb), GFP_KERNEL);

WARNING:ALLOC_ARRAY_ARGS: kcalloc uses number as first arg, sizeof is generally wrong
#2644: FILE: drivers/video/au1200fb.c:1592:
+	fbi->pseudo_palette = kcalloc(sizeof(u32), 16, GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*cfb)...) over kzalloc(sizeof(struct cfb_info)...)
#2678: FILE: drivers/video/cyber2000fb.c:1224:
+	cfb = kzalloc(sizeof(struct cfb_info), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dev)...) over kzalloc(sizeof(struct matrox_device)...)
#2766: FILE: drivers/w1/masters/matrox_w1.c:167:
+	dev = kzalloc(sizeof(struct matrox_device) +

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*data)...) over kzalloc(sizeof(struct w1_f23_data)...)
#2787: FILE: drivers/w1/slaves/w1_ds2433.c:268:
+	data = kzalloc(sizeof(struct w1_f23_data), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*sl)...) over kzalloc(sizeof(struct w1_slave)...)
#2803: FILE: drivers/w1/w1.c:519:
+	sl = kzalloc(sizeof(struct w1_slave), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dev)...) over kzalloc(sizeof(struct w1_master)...)
#2824: FILE: drivers/w1/w1_int.c:44:
+	dev = kzalloc(sizeof(struct w1_master) + sizeof(struct w1_bus_master), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*st)...) over kzalloc(sizeof(struct ct_iter_state)...)
#2918: FILE: net/ipv4/netfilter/nf_conntrack_l3proto_ipv4_compat.c:185:
+	st = kzalloc(sizeof(struct ct_iter_state), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*st)...) over kzalloc(sizeof(struct ct_iter_state)...)
#2972: FILE: net/netfilter/nf_conntrack_standalone.c:206:
+	st = kzalloc(sizeof(struct ct_iter_state), GFP_KERNEL);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000409738.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 26 errors, 42 warnings, 77 checks, 2044 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000409738.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
