WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#36: 
# Currently, request-based dm can be turned on by ioctl at dm device

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#37: 
# creation time, so the userspace patches are needed.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
# The ioctl from userspace is ignored if kernel doesn't support it,

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
# so please update userspace tools first when you try this.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#40: 
# (If kernel was updated first, you would hit kernel panic.)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#68: FILE: block/ll_rw_blk.c:185:
+EXPORT_SYMBOL_GPL(blk_queue_device_congested);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:BIT_MACRO: Prefer using the BIT macro
#130: FILE: drivers/md/dm.c:100:
+#define DM_FEAT_REQUEST_BASE (1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:TYPO_SPELLING: 'alloced' may be misspelled - perhaps 'allocated'?
#363: FILE: drivers/md/dm.c:739:
+	 * The clone is *NOT* freed actually here because it is alloced from
 	                                                        ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#366: FILE: drivers/md/dm.c:742:
+	 * The uptodate and nr_bytes arguments of blk_end_io() don't matter
 	       ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#379: FILE: drivers/md/dm.c:755:
+static int clone_end_request(struct request *clone, int uptodate, int nr_bytes,
                                                         ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#393: FILE: drivers/md/dm.c:769:
+	if (end_io_error(uptodate))
 	                 ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#394: FILE: drivers/md/dm.c:770:
+		error = !uptodate ? -EIO : uptodate;
 		         ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#394: FILE: drivers/md/dm.c:770:
+		error = !uptodate ? -EIO : uptodate;
 		                           ^^^^^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#409: FILE: drivers/md/dm.c:785:
+				BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#426: FILE: drivers/md/dm.c:802:
+				BUG();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#429: FILE: drivers/md/dm.c:805:
+^I^I^I/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#433: FILE: drivers/md/dm.c:809:
+			uptodate = r;
 			^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#439: FILE: drivers/md/dm.c:815:
+	r = blk_end_request(orig, uptodate, nr_bytes);
 	                          ^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#443: FILE: drivers/md/dm.c:819:
+         * in blk_end_request() to the clone.$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#454: FILE: drivers/md/dm.c:830:
+^I * So $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#585: FILE: drivers/md/dm.c:1265:
+			BUG();

WARNING:RETURN_VOID: void function return statements are not generally useful
#636: FILE: drivers/md/dm.c:1316:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#692: FILE: drivers/md/dm.c:1497:
+	md->io_pool = mempool_create_slab_pool(MIN_IOS,
+				request_base ? _rq_cache : _io_cache);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#698: FILE: drivers/md/dm.c:1502:
+	md->tio_pool = mempool_create_slab_pool(MIN_IOS,
+				request_base ? _rq_tio_cache : _tio_cache);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#707: FILE: drivers/md/dm.c:1643:
+int dm_create(int minor, struct mapped_device **result, unsigned create_flags)

CHECK:BIT_MACRO: Prefer using the BIT macro
#751: FILE: drivers/md/dm.h:89:
+#define DM_CREATE_REQUEST_BASE_FLAG	(1 << 0)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#770: FILE: drivers/md/dm.h:134:
+ *---------------------------------------------------------------*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#793: FILE: drivers/md/dm-hw-handler.h:38:
+	unsigned (*error_rq) (struct hw_handler *hwh, struct request *rq);

WARNING:SPACING: Unnecessary space before function pointer arguments
#793: FILE: drivers/md/dm-hw-handler.h:38:
+	unsigned (*error_rq) (struct hw_handler *hwh, struct request *rq);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#804: FILE: drivers/md/dm-ioctl.c:568:
+	unsigned create_flags = 0;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sdev->device_busy >= sdev->queue_depth'
#874: FILE: drivers/scsi/scsi_lib.c:1418:
+	if ((sdev->device_busy >= sdev->queue_depth) || sdev->device_blocked ||
+	    (sdev->single_lun && scsi_target(sdev)->starget_sdev_user &&
+	    scsi_target(sdev)->starget_sdev_user != sdev)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#882: FILE: drivers/scsi/scsi_lib.c:1426:
+/*
+	shost = sdev->host;

CHECK:BIT_MACRO: Prefer using the BIT macro
#923: FILE: include/linux/blkdev.h:228:
+#define REQ_CLONED	(1 << __REQ_CLONED)

CHECK:SPACING: No space is necessary after a cast
#931: FILE: include/linux/blkdev.h:353:
+typedef int (device_congested_fn) (struct request_queue *q);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#955: FILE: include/linux/blkdev.h:794:
+extern void blk_queue_device_congested(struct request_queue *, device_congested_fn *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request_queue *' should also have an identifier name
#955: FILE: include/linux/blkdev.h:794:
+extern void blk_queue_device_congested(struct request_queue *, device_congested_fn *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'device_congested_fn *' should also have an identifier name
#955: FILE: include/linux/blkdev.h:794:
+extern void blk_queue_device_congested(struct request_queue *, device_congested_fn *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1042: FILE: include/linux/device-mapper.h:185:
+int dm_create(int minor, struct mapped_device **md, unsigned create_flags);

CHECK:BIT_MACRO: Prefer using the BIT macro
#1083: FILE: include/linux/dm-ioctl.h:334:
+#define DM_REQUEST_BASE_FLAG	(1 << 12) /* In */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000384868.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 27 warnings, 9 checks, 954 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000384868.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
