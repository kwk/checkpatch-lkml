WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#53: 
tg_request_cfs_quota() which attempts to allocate quota from the global pool

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: kernel/sched_fair.c:276:
+static void account_cfs_rq_quota(struct cfs_rq *cfs_rq,
+		unsigned long delta_exec);

CHECK:BRACES: braces {} should be used on all arms of this statement
#154: FILE: kernel/sched_fair.c:1172:
+		if (cfs_b->quota == RUNTIME_INF)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#156: FILE: kernel/sched_fair.c:1174:
+		else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#157: FILE: kernel/sched_fair.c:1175:
+^I^I^Idelta = min(cfs_b->runtime, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#158: FILE: kernel/sched_fair.c:1176:
+			delta = min(cfs_b->runtime, 
+					sched_cfs_bandwidth_slice());

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#167: FILE: kernel/sched_fair.c:1185:
+static void account_cfs_rq_quota(struct cfs_rq *cfs_rq,
+		unsigned long delta_exec)

WARNING:DUPLICATED_SYSCTL_CONST: duplicated sysctl range checking value 'one', consider using the shared one in include/linux/sysctl.h
#198: FILE: kernel/sysctl.c:374:
+		.extra1		= &one,

Commit d91bff3011cf ("proc/sysctl: add shared variables for range
check") added some shared const variables to be used instead of a local
copy in each source file.

Consider replacing the sysctl range checking value with the shared
one in include/linux/sysctl.h.  The following conversion scheme may
be used::

  &zero     ->  SYSCTL_ZERO
  &one      ->  SYSCTL_ONE
  &int_max  ->  SYSCTL_INT_MAX

See:

  1. https://lore.kernel.org/lkml/20190430180111.10688-1-mcroce@redhat.com/
  2. https://lore.kernel.org/lkml/20190531131422.14970-1-mcroce@redhat.com/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000012323.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 2 warnings, 5 checks, 113 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000012323.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
