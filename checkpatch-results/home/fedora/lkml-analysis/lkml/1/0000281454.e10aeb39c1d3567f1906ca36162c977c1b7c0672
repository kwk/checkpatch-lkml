CHECK:MACRO_ARG_REUSE: Macro argument reuse 'psize' - possible side-effects?
#116: FILE: arch/powerpc/mm/hugetlbpage.c:49:
+#define HUGEPD_SHIFT(psize)		(mmu_psize_to_shift(psize) \
+						+ hugepte_shift[psize])

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#119: FILE: arch/powerpc/mm/hugetlbpage.c:52:
+#define HUGEPD_MASK(psize)		(~(HUGEPD_SIZE(psize)-1))
                           		                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#125: FILE: arch/powerpc/mm/hugetlbpage.c:55:
+ * is not a huge page size */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'psize' may be better as '(psize)' to avoid precedence issues
#126: FILE: arch/powerpc/mm/hugetlbpage.c:56:
+#define huge_pgtable_cache(psize)	(pgtable_cache[HUGEPTE_CACHE_NUM \
+							+ psize-1])

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#127: FILE: arch/powerpc/mm/hugetlbpage.c:57:
+							+ psize-1])
 							       ^

WARNING:TABSTOP: Statements should start on a tabstop
#147: FILE: arch/powerpc/mm/hugetlbpage.c:79:
+	    return MMU_PAGE_64K;

WARNING:TABSTOP: Statements should start on a tabstop
#150: FILE: arch/powerpc/mm/hugetlbpage.c:82:
+	    return MMU_PAGE_16M;

WARNING:TABSTOP: Statements should start on a tabstop
#152: FILE: arch/powerpc/mm/hugetlbpage.c:84:
+	    return MMU_PAGE_16G;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#161: FILE: arch/powerpc/mm/hugetlbpage.c:93:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#177: FILE: arch/powerpc/mm/hugetlbpage.c:107:
+	unsigned long idx = ((addr >> shift) & (PTRS_PER_HUGEPTE(psize)-1));
 	                                                               ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#257: FILE: arch/powerpc/mm/hugetlbpage.c:198:
+	struct hstate *hstate;
+	psize = get_slice_psize(mm, addr);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#284: FILE: arch/powerpc/mm/hugetlbpage.c:227:
+	unsigned int psize;
+	hstate = size_to_hstate(sz);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#288: FILE: arch/powerpc/mm/hugetlbpage.c:230:
+	BUG_ON(!mmu_huge_psizes[psize]);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#329: FILE: arch/powerpc/mm/hugetlbpage.c:265:
+						 HUGEPTE_CACHE_NUM+psize-1,
 						                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#329: FILE: arch/powerpc/mm/hugetlbpage.c:265:
+						 HUGEPTE_CACHE_NUM+psize-1,
 						                        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#356: FILE: arch/powerpc/mm/hugetlbpage.c:312:
+	unsigned int psize = get_slice_psize(tlb->mm, addr);
+	shift = mmu_psize_to_shift(psize);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#414: FILE: arch/powerpc/mm/hugetlbpage.c:422:
+		BUG_ON(!mmu_huge_psizes[psize]);

WARNING:LINE_SPACING: Missing a blank line after declarations
#426: FILE: arch/powerpc/mm/hugetlbpage.c:442:
+		unsigned long sz;
+		sz = ((1UL) << shift);

WARNING:LINE_SPACING: Missing a blank line after declarations
#428: FILE: arch/powerpc/mm/hugetlbpage.c:444:
+		struct hstate *hstate = size_to_hstate(sz);
+		pte_update(mm, addr & hstate->mask, ptep, ~0UL, 1);

WARNING:LINE_SPACING: Missing a blank line after declarations
#450: FILE: arch/powerpc/mm/hugetlbpage.c:472:
+		unsigned long sz = ((1UL) << shift);
+		page += (address % sz) / PAGE_SIZE;

WARNING:LINE_SPACING: Missing a blank line after declarations
#463: FILE: arch/powerpc/mm/hugetlbpage.c:503:
+	int mmu_psize = shift_to_mmu_psize(huge_page_shift(hstate));
+	return slice_get_unmapped_area(addr, len, flags, mmu_psize, 1, 0);

WARNING:LINE_SPACING: Missing a blank line after declarations
#490: FILE: arch/powerpc/mm/hugetlbpage.c:545:
+	int shift;
+	mmu_psize = get_slice_psize(mm, ea);

ERROR:SPACING: space required before the open parenthesis '('
#492: FILE: arch/powerpc/mm/hugetlbpage.c:547:
+	if(!mmu_huge_psizes[mmu_psize])

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#560: FILE: arch/powerpc/mm/hugetlbpage.c:682:
+		 * same as the base page size. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#562: FILE: arch/powerpc/mm/hugetlbpage.c:684:
+		if (mmu_huge_psizes[psize] ||
+		   mmu_psize_defs[psize].shift == PAGE_SHIFT)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (20, 28)
#581: FILE: arch/powerpc/mm/hugetlbpage.c:698:
 		    if (PAGE_SHIFT == PAGE_SHIFT_64K)
+			    hugepte_shift[psize] = PMD_SHIFT;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (20, 28)
#584: FILE: arch/powerpc/mm/hugetlbpage.c:700:
 		    else /* 4k base page */
+			    hugepte_shift[psize] = PUD_SHIFT;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#658: FILE: arch/powerpc/mm/hugetlbpage.c:752:
+			huge_pgtable_cache(psize) = kmem_cache_create(

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#665: FILE: arch/powerpc/mm/hugetlbpage.c:759:
+				panic("hugetlbpage_init(): could not create %s"\

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#686: FILE: arch/powerpc/mm/init_64.c:156:
+ * is not compile time constant. */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#687: FILE: arch/powerpc/mm/init_64.c:157:
+struct kmem_cache *pgtable_cache[ARRAY_SIZE(pgtable_cache_size)+MMU_PAGE_COUNT];
                                                                ^

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#700: FILE: arch/powerpc/mm/tlb_64.c:153:
+		psize = get_slice_psize(mm, addr);;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000281454.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 21 warnings, 10 checks, 636 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000281454.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
