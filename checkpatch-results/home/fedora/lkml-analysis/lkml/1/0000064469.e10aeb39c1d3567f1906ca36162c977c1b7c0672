WARNING:BAD_SIGN_OFF: Unexpected content after email: 'linux-arm-kernel <linux-arm-kernel@lists.infradead.org>, ', should be: 'linux-arm-kernel <linux-arm-kernel@lists.infradead.org>'
#55: 
To: linux-arm-kernel <linux-arm-kernel@lists.infradead.org>, 

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#63: 
The NUC932 is not same to NUC900 series SoCs, which contains sensor interface supports, H/W JPEG image codec,TV-Out and there are not different register addressing between them,but there are the same IPs in VIC, uart, timer.so I add the nuc932 platform to my nuc900 and modify some interfaces of nuc900 to apply to nuc932, for avoiding wasteful duplication of codes.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#128: FILE: arch/arm/mach-w90x900/Kconfig:56:
+config MACH_NUC932EVB
+	bool "Nuvoton NUC932 Evaluation Board"
+	select CPU_NUC932
+	help
+	   Say Y here if you are using the Nuvoton NUC932EVB
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:USE_NEGATIVE_ERRNO: return of an errno should typically be negative (ie: return -EXTCLK)
#177: FILE: arch/arm/mach-w90x900/clock.c:60:
+	return EXTCLK;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#216: FILE: arch/arm/mach-w90x900/cpu.c:205:
+		printk(KERN_INFO "CPU type 0x%08lx is NUC932\n", idcode);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!clks"
#228: FILE: arch/arm/mach-w90x900/cpu.c:215:
+	if (clks == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#260: FILE: arch/arm/mach-w90x900/cpu.h:51:
+extern void nuc900_init_clocks(struct clk_lookup *clks, size_t num);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#263: FILE: arch/arm/mach-w90x900/cpu.h:54:
+extern void nuc932_dev_board_init(void);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#268: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#273: FILE: arch/arm/mach-w90x900/dev_932.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#274: FILE: arch/arm/mach-w90x900/dev_932.c:2:
+ * linux/arch/arm/mach-w90x900/dev_932.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#323: FILE: arch/arm/mach-w90x900/groupirq.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#324: FILE: arch/arm/mach-w90x900/groupirq.c:2:
+ * linux/arch/arm/mach-w90x900/groupirq.c

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct group_irq *' should also have an identifier name
#354: FILE: arch/arm/mach-w90x900/groupirq.c:32:
+	void			(*enable)(struct group_irq *, int enable);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '_ctrlbit' may be better as '(_ctrlbit)' to avoid precedence issues
#359: FILE: arch/arm/mach-w90x900/groupirq.c:37:
+#define DEFINE_GROUP(_name, _ctrlbit, _num)				\
+struct group_irq group_##_name = {					\
+		.enable		= nuc900_group_enable,			\
+		.gpen		= ((1 << _num) - 1) << _ctrlbit,	\
+	}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '_num' may be better as '(_num)' to avoid precedence issues
#359: FILE: arch/arm/mach-w90x900/groupirq.c:37:
+#define DEFINE_GROUP(_name, _ctrlbit, _num)				\
+struct group_irq group_##_name = {					\
+		.enable		= nuc900_group_enable,			\
+		.gpen		= ((1 << _num) - 1) << _ctrlbit,	\
+	}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (group_irq->enable)
#382: FILE: arch/arm/mach-w90x900/groupirq.c:60:
+		(group_irq->enable)(group_irq, 1);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (group_irq->enable)
#396: FILE: arch/arm/mach-w90x900/groupirq.c:74:
+		(group_irq->enable)(group_irq, 0);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#469: FILE: arch/arm/mach-w90x900/groupirq.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#470: FILE: arch/arm/mach-w90x900/groupirq.h:2:
+ * arch/arm/mach-w90x900/groupirq.h

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#484: FILE: arch/arm/mach-w90x900/groupirq.h:16:
+extern void nuc900_groupirq_mask(unsigned int irq, unsigned int mask);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#579: FILE: arch/arm/mach-w90x900/include/mach/map.h:33:
+#define W90X900_VA_CLKPWR	(W90X900_VA_GCR+CLK_OFFSET)
                          	               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#716: FILE: arch/arm/mach-w90x900/include/mach/reg_900.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#717: FILE: arch/arm/mach-w90x900/include/mach/reg_900.h:2:
+ * arch/arm/mach-w90x900/include/mach/reg_900.h

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#741: FILE: arch/arm/mach-w90x900/include/mach/reg_900.h:26:
+#define W90X900_ADDR(x)	((void __iomem *)(0xF0000000 + ((x)&(~MAP_OFFSET))))
                        	                                   ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#743: FILE: arch/arm/mach-w90x900/include/mach/reg_900.h:28:
+#define W90X900_ADDR(x)	(0xF0000000 + ((x)&(~MAP_OFFSET)))
                        	                  ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#772: FILE: arch/arm/mach-w90x900/include/mach/reg_900.h:57:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#815: FILE: arch/arm/mach-w90x900/include/mach/reg_932.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#816: FILE: arch/arm/mach-w90x900/include/mach/reg_932.h:2:
+ * arch/arm/mach-w90x900/include/mach/reg_932.h

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#835: FILE: arch/arm/mach-w90x900/include/mach/reg_932.h:21:
+#define W90X900_ADDR(x)	((void __iomem *)(0xF0000000 + ((x)&(~MAP_OFFSET))))
                        	                                   ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#837: FILE: arch/arm/mach-w90x900/include/mach/reg_932.h:23:
+#define W90X900_ADDR(x)	(0xF0000000 + ((x)&(~MAP_OFFSET)))
                        	                  ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1042: FILE: arch/arm/mach-w90x900/mach-nuc932evb.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1043: FILE: arch/arm/mach-w90x900/mach-nuc932evb.c:2:
+ * linux/arch/arm/mach-w90x900/mach-nuc932evb.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1111: FILE: arch/arm/mach-w90x900/nuc932.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1112: FILE: arch/arm/mach-w90x900/nuc932.c:2:
+ * linux/arch/arm/mach-w90x900/nuc932.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1171: FILE: arch/arm/mach-w90x900/nuc932.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1172: FILE: arch/arm/mach-w90x900/nuc932.h:2:
+ * arch/arm/mach-w90x900/nuc932.h

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1191: FILE: arch/arm/mach-w90x900/nuc932.h:21:
+extern void nuc900_init_irq(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1196: FILE: arch/arm/mach-w90x900/nuc932.h:26:
+extern void nuc932_board_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1197: FILE: arch/arm/mach-w90x900/nuc932.h:27:
+extern void nuc932_init_clocks(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1198: FILE: arch/arm/mach-w90x900/nuc932.h:28:
+extern void nuc932_map_io(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1337: FILE: arch/arm/mach-w90x900/time.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1338: FILE: arch/arm/mach-w90x900/time.h:2:
+ * arch/arm/mach-w90x900/time.h

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1368: FILE: arch/arm/mach-w90x900/time.h:32:
+extern void nuc900_timer_init_clockevents(unsigned int rate);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1376: FILE: arch/arm/mach-w90x900/time_900.c:1:
+/*

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1447: FILE: arch/arm/mach-w90x900/time_900.c:72:
+	BUG_ON(IS_ERR(ck_ext));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1472: FILE: arch/arm/mach-w90x900/time_932.c:1:
+/*

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1514: FILE: arch/arm/mach-w90x900/time_932.c:43:
+	BUG_ON(IS_ERR(ck_ext));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000064469.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 29 warnings, 19 checks, 1280 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000064469.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
