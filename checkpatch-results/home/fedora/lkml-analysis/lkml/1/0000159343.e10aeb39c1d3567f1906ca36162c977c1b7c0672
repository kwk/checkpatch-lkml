WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
Gitweb:     http://git.kernel.org/tip/5ab5ab34498f94d60884c4ccea890601e429042e

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#73: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#78: FILE: arch/x86/kernel/uv_time.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#92: FILE: arch/x86/kernel/uv_time.c:15:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#93: FILE: arch/x86/kernel/uv_time.c:16:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#110: FILE: arch/x86/kernel/uv_time.c:33:
+static void uv_rtc_timer_setup(enum clock_event_mode,
+				struct clock_event_device *);

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#136: FILE: arch/x86/kernel/uv_time.c:59:
+	spinlock_t	lock;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#187: FILE: arch/x86/kernel/uv_time.c:110:
+	uv_write_global_mmr64(pnode, UVH_RTC1_INT_CONFIG,
+		UVH_RTC1_INT_CONFIG_M_MASK);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#191: FILE: arch/x86/kernel/uv_time.c:114:
+	uv_write_global_mmr64(pnode, UVH_EVENT_OCCURRED0_ALIAS,
+		UVH_EVENT_OCCURRED0_RTC1_MASK);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#223: FILE: arch/x86/kernel/uv_time.c:146:
+	blade_info = kmalloc(uv_possible_blades * sizeof(void *), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc_node(sizeof(*head)...) over kmalloc_node(sizeof(struct uv_rtc_timer_head)...)
#235: FILE: arch/x86/kernel/uv_time.c:158:
+			head = kmalloc_node(sizeof(struct uv_rtc_timer_head) +

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LINE_SPACING: Missing a blank line after declarations
#265: FILE: arch/x86/kernel/uv_time.c:188:
+		u64 exp = head->cpu[c].expires;
+		if (exp < lowest) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#278: FILE: arch/x86/kernel/uv_time.c:201:
+		uv_write_global_mmr64(pnode, UVH_RTC1_INT_CONFIG,
+			UVH_RTC1_INT_CONFIG_M_MASK);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#303: FILE: arch/x86/kernel/uv_time.c:226:
+	if (next_cpu < 0 || bcpu == next_cpu ||
+			expires < head->cpu[next_cpu].expires) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#348: FILE: arch/x86/kernel/uv_time.c:271:
+
+

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#413: FILE: arch/x86/kernel/uv_time.c:336:
+__setup("uvrtc", uv_enable_rtc);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#434: FILE: arch/x86/kernel/uv_time.c:357:
+	clocksource_uv.mult = clocksource_hz2mult(sn_rtc_cycles_per_second,
+				clocksource_uv.shift);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#451: FILE: arch/x86/kernel/uv_time.c:374:
+	clock_event_device_uv.mult = div_sc(sn_rtc_cycles_per_second,
+				NSEC_PER_SEC, clock_event_device_uv.shift);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000159343.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 5 warnings, 11 checks, 399 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000159343.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
