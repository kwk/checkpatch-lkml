WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
#ifdef CONFIG_SPINLOCK_INLINE

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
#define LOCKFUNC		 static inline

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
#define SPIN_EXPORT_SYMBOL(func)

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
#else /* CONFIG_SPINLOCK_INLINE */

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
#define LOCKFUNC		 __lockfunc

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
#define SPIN_EXPORT_SYMBOL(func) EXPORT_SYMBOL(func)

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
#endif /* CONFIG_SPINLOCK_INLINE */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#104: FILE: include/linux/spinlock_smp.h:22:
+#define LOCKFUNC		 static inline

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#105: FILE: include/linux/spinlock_smp.h:23:
+#define SPIN_EXPORT_SYMBOL(func)

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#110: FILE: include/linux/spinlock_smp.h:28:
+#define SPIN_EXPORT_SYMBOL(func) EXPORT_SYMBOL(func)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#123: FILE: include/linux/spinlock_smp.h:43:
 }
+SPIN_EXPORT_SYMBOL(_spin_trylock);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#135: FILE: include/linux/spinlock_smp.h:56:
 }
+SPIN_EXPORT_SYMBOL(_read_trylock);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#147: FILE: include/linux/spinlock_smp.h:69:
 }
+SPIN_EXPORT_SYMBOL(_write_trylock);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#163: FILE: include/linux/spinlock_smp.h:84:
 }
+SPIN_EXPORT_SYMBOL(_read_lock);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#175: FILE: include/linux/spinlock_smp.h:105:
 }
+SPIN_EXPORT_SYMBOL(_spin_lock_irqsave);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#186: FILE: include/linux/spinlock_smp.h:114:
 }
+SPIN_EXPORT_SYMBOL(_spin_lock_irq);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#197: FILE: include/linux/spinlock_smp.h:123:
 }
+SPIN_EXPORT_SYMBOL(_spin_lock_bh);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#209: FILE: include/linux/spinlock_smp.h:136:
 }
+SPIN_EXPORT_SYMBOL(_read_lock_irqsave);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#220: FILE: include/linux/spinlock_smp.h:145:
 }
+SPIN_EXPORT_SYMBOL(_read_lock_irq);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#231: FILE: include/linux/spinlock_smp.h:154:
 }
+SPIN_EXPORT_SYMBOL(_read_lock_bh);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#243: FILE: include/linux/spinlock_smp.h:167:
 }
+SPIN_EXPORT_SYMBOL(_write_lock_irqsave);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#254: FILE: include/linux/spinlock_smp.h:176:
 }
+SPIN_EXPORT_SYMBOL(_write_lock_irq);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#265: FILE: include/linux/spinlock_smp.h:185:
 }
+SPIN_EXPORT_SYMBOL(_write_lock_bh);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#276: FILE: include/linux/spinlock_smp.h:194:
+SPIN_EXPORT_SYMBOL(_spin_lock);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#287: FILE: include/linux/spinlock_smp.h:203:
+SPIN_EXPORT_SYMBOL(_write_lock);

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#296: FILE: include/linux/spinlock_smp.h:216:
+LOCKFUNC void _##op##_lock(locktype##_t *lock)				\
                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#309: FILE: include/linux/spinlock_smp.h:233:
+LOCKFUNC unsigned long _##op##_lock_irqsave(locktype##_t *lock)		\
                                                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#322: FILE: include/linux/spinlock_smp.h:255:
+LOCKFUNC void _##op##_lock_irq(locktype##_t *lock)			\
                                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#331: FILE: include/linux/spinlock_smp.h:261:
+LOCKFUNC void _##op##_lock_bh(locktype##_t *lock)			\
                                            ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#357: FILE: include/linux/spinlock_smp.h:299:
 }
+SPIN_EXPORT_SYMBOL(_spin_lock_nested);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#369: FILE: include/linux/spinlock_smp.h:312:
 }
+SPIN_EXPORT_SYMBOL(_spin_lock_irqsave_nested);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#381: FILE: include/linux/spinlock_smp.h:321:
 }
+SPIN_EXPORT_SYMBOL(_spin_lock_nest_lock);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#393: FILE: include/linux/spinlock_smp.h:331:
 }
+SPIN_EXPORT_SYMBOL(_spin_unlock);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#403: FILE: include/linux/spinlock_smp.h:339:
 }
+SPIN_EXPORT_SYMBOL(_write_unlock);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#413: FILE: include/linux/spinlock_smp.h:347:
 }
+SPIN_EXPORT_SYMBOL(_read_unlock);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#424: FILE: include/linux/spinlock_smp.h:356:
 }
+SPIN_EXPORT_SYMBOL(_spin_unlock_irqrestore);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#435: FILE: include/linux/spinlock_smp.h:365:
 }
+SPIN_EXPORT_SYMBOL(_spin_unlock_irq);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#446: FILE: include/linux/spinlock_smp.h:374:
 }
+SPIN_EXPORT_SYMBOL(_spin_unlock_bh);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#457: FILE: include/linux/spinlock_smp.h:383:
 }
+SPIN_EXPORT_SYMBOL(_read_unlock_irqrestore);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#468: FILE: include/linux/spinlock_smp.h:392:
 }
+SPIN_EXPORT_SYMBOL(_read_unlock_irq);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#479: FILE: include/linux/spinlock_smp.h:401:
 }
+SPIN_EXPORT_SYMBOL(_read_unlock_bh);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#490: FILE: include/linux/spinlock_smp.h:410:
 }
+SPIN_EXPORT_SYMBOL(_write_unlock_irqrestore);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#501: FILE: include/linux/spinlock_smp.h:419:
 }
+SPIN_EXPORT_SYMBOL(_write_unlock_irq);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#512: FILE: include/linux/spinlock_smp.h:428:
 }
+SPIN_EXPORT_SYMBOL(_write_unlock_bh);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#524: FILE: include/linux/spinlock_smp.h:443:
 }
+SPIN_EXPORT_SYMBOL(_spin_trylock_bh);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#553: FILE: include/linux/spinlock_api_smp.h:68:
+#define assert_spin_locked(x)	BUG_ON(!spin_is_locked(x))

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#553: FILE: include/linux/spinlock_api_smp.h:68:
+#define assert_spin_locked(x)	BUG_ON(!spin_is_locked(x))

lockdep_assert_held() annotations should be preferred over
assertions based on spin_is_locked()

See: https://www.kernel.org/doc/html/latest/locking/lockdep-design.html#annotations

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000086524.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 13 warnings, 33 checks, 475 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000086524.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
