WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#48: 
good compression with any runlength method, even when encoding the run-length

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#65: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#70: FILE: drivers/block/drbd/drbd_vli.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#71: FILE: drivers/block/drbd/drbd_vli.h:2:
+/*
+-*- linux-c -*-

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#91: FILE: drivers/block/drbd/drbd_vli.h:22:
+   the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:TYPO_SPELLING: 'stroage' may be misspelled - perhaps 'storage'?
#99: FILE: drivers/block/drbd/drbd_vli.h:30:
+ * and stroage sizes of several TiB,
        ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'transfered' may be misspelled - perhaps 'transferred'?
#104: FILE: drivers/block/drbd/drbd_vli.h:35:
+ * We try to reduce the transfered bitmap information
                         ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'postgress' may be misspelled - perhaps 'PostgreSQL'?
#143: FILE: drivers/block/drbd/drbd_vli.h:74:
+ * to several TiB, file server/mailserver/webserver/mysql/postgress,
                                                           ^^^^^^^^^

WARNING:REPEATED_WORD: Possible repeated word: 'xxxxxxxx'
#168: FILE: drivers/block/drbd/drbd_vli.h:99:
+11111110  xxxxxxxx xxxxxxxx xxxxx                      0x202130           21

WARNING:REPEATED_WORD: Possible repeated word: 'xxxxxxxx'
#169: FILE: drivers/block/drbd/drbd_vli.h:100:
+11111101  xxxxxxxx xxxxxxxx xxxxxxxx  xxxxxxxx xx   0x400202130           34

WARNING:REPEATED_WORD: Possible repeated word: 'xxxxxxxx'
#169: FILE: drivers/block/drbd/drbd_vli.h:100:
+11111101  xxxxxxxx xxxxxxxx xxxxxxxx  xxxxxxxx xx   0x400202130           34

WARNING:REPEATED_WORD: Possible repeated word: 'xxxxxxxx'
#170: FILE: drivers/block/drbd/drbd_vli.h:101:
+11111111  xxxxxxxx xxxxxxxx xxxxxxxx  xxxxxxxx xxxxxxxx xxxxxxxx xxxxxxxx 56

WARNING:REPEATED_WORD: Possible repeated word: 'xxxxxxxx'
#170: FILE: drivers/block/drbd/drbd_vli.h:101:
+11111111  xxxxxxxx xxxxxxxx xxxxxxxx  xxxxxxxx xxxxxxxx xxxxxxxx xxxxxxxx 56

WARNING:REPEATED_WORD: Possible repeated word: 'xxxxxxxx'
#170: FILE: drivers/block/drbd/drbd_vli.h:101:
+11111111  xxxxxxxx xxxxxxxx xxxxxxxx  xxxxxxxx xxxxxxxx xxxxxxxx xxxxxxxx 56

WARNING:REPEATED_WORD: Possible repeated word: 'xxxxxxxx'
#170: FILE: drivers/block/drbd/drbd_vli.h:101:
+11111111  xxxxxxxx xxxxxxxx xxxxxxxx  xxxxxxxx xxxxxxxx xxxxxxxx xxxxxxxx 56

WARNING:REPEATED_WORD: Possible repeated word: 'xxxxxxxx'
#170: FILE: drivers/block/drbd/drbd_vli.h:101:
+11111111  xxxxxxxx xxxxxxxx xxxxxxxx  xxxxxxxx xxxxxxxx xxxxxxxx xxxxxxxx 56

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#171: FILE: drivers/block/drbd/drbd_vli.h:102:
+ * maximum encodable value: 0x100000400202130 == 2**56 + some */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#174: FILE: drivers/block/drbd/drbd_vli.h:105:
+/* compression "table":
+ transmitted   x                                0.29

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: drivers/block/drbd/drbd_vli.h:107:
+             x                                   ........................$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: drivers/block/drbd/drbd_vli.h:108:
+            x                                    ........................$

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: drivers/block/drbd/drbd_vli.h:109:
+           x    0.59                         0.21........................$

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: drivers/block/drbd/drbd_vli.h:110:
+          x      ........................................................$

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: drivers/block/drbd/drbd_vli.h:111:
+         x       .. c ...................................................$

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: drivers/block/drbd/drbd_vli.h:112:
+        x    0.44.. o ...................................................$

WARNING:TYPO_SPELLING: 'compiletime' may be misspelled - perhaps 'compile time'?
#195: FILE: drivers/block/drbd/drbd_vli.h:126:
+ * The rest of the code table is calculated at compiletime from this. */
                                                ^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#195: FILE: drivers/block/drbd/drbd_vli.h:126:
+ * The rest of the code table is calculated at compiletime from this. */

ERROR:SPACING: space prohibited after that open parenthesis '('
#199: FILE: drivers/block/drbd/drbd_vli.h:130:
+	LEVEL( 2, 1, 0x00); \

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#200: FILE: drivers/block/drbd/drbd_vli.h:131:
+	LEVEL( 3, 2, 0x01); \

ERROR:SPACING: space prohibited after that open parenthesis '('
#201: FILE: drivers/block/drbd/drbd_vli.h:132:
+	LEVEL( 5, 3, 0x03); \

ERROR:SPACING: space prohibited after that open parenthesis '('
#202: FILE: drivers/block/drbd/drbd_vli.h:133:
+	LEVEL( 7, 4, 0x07); \

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#214: FILE: drivers/block/drbd/drbd_vli.h:145:
+ * BUG() for bad input, as that would mean a buggy code table. */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#219: FILE: drivers/block/drbd/drbd_vli.h:150:
+#define LEVEL(t,b,v)					\
                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#219: FILE: drivers/block/drbd/drbd_vli.h:150:
+#define LEVEL(t,b,v)					\
                  ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 't' - possible side-effects?
#219: FILE: drivers/block/drbd/drbd_vli.h:150:
+#define LEVEL(t,b,v)					\
+	do {						\
+		if ((in & ((1 << b) -1)) == v) {	\
+			*out = ((in & ((~0ULL) >> (64-t))) >> b) + adj;	\
+			return t;			\
+		}					\
+		adj += 1ULL << (t - b);			\
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 't' may be better as '(t)' to avoid precedence issues
#219: FILE: drivers/block/drbd/drbd_vli.h:150:
+#define LEVEL(t,b,v)					\
+	do {						\
+		if ((in & ((1 << b) -1)) == v) {	\
+			*out = ((in & ((~0ULL) >> (64-t))) >> b) + adj;	\
+			return t;			\
+		}					\
+		adj += 1ULL << (t - b);			\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#219: FILE: drivers/block/drbd/drbd_vli.h:150:
+#define LEVEL(t,b,v)					\
+	do {						\
+		if ((in & ((1 << b) -1)) == v) {	\
+			*out = ((in & ((~0ULL) >> (64-t))) >> b) + adj;	\
+			return t;			\
+		}					\
+		adj += 1ULL << (t - b);			\
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'b' may be better as '(b)' to avoid precedence issues
#219: FILE: drivers/block/drbd/drbd_vli.h:150:
+#define LEVEL(t,b,v)					\
+	do {						\
+		if ((in & ((1 << b) -1)) == v) {	\
+			*out = ((in & ((~0ULL) >> (64-t))) >> b) + adj;	\
+			return t;			\
+		}					\
+		adj += 1ULL << (t - b);			\
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'v' may be better as '(v)' to avoid precedence issues
#219: FILE: drivers/block/drbd/drbd_vli.h:150:
+#define LEVEL(t,b,v)					\
+	do {						\
+		if ((in & ((1 << b) -1)) == v) {	\
+			*out = ((in & ((~0ULL) >> (64-t))) >> b) + adj;	\
+			return t;			\
+		}					\
+		adj += 1ULL << (t - b);			\
+	} while (0)

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#219: FILE: drivers/block/drbd/drbd_vli.h:150:
+#define LEVEL(t,b,v)					\
+	do {						\
+		if ((in & ((1 << b) -1)) == v) {	\
+			*out = ((in & ((~0ULL) >> (64-t))) >> b) + adj;	\
+			return t;			\
+		}					\
+		adj += 1ULL << (t - b);			\
+	} while (0)

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#221: FILE: drivers/block/drbd/drbd_vli.h:152:
+		if ((in & ((1 << b) -1)) == v) {	\
 		                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#222: FILE: drivers/block/drbd/drbd_vli.h:153:
+			*out = ((in & ((~0ULL) >> (64-t))) >> b) + adj;	\
 			                             ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#231: FILE: drivers/block/drbd/drbd_vli.h:162:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#236: FILE: drivers/block/drbd/drbd_vli.h:167:
+ * or negative error number */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#245: FILE: drivers/block/drbd/drbd_vli.h:176:
+#define LEVEL(t,b,v) do {		\
                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#245: FILE: drivers/block/drbd/drbd_vli.h:176:
+#define LEVEL(t,b,v) do {		\
                  ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 't' - possible side-effects?
#245: FILE: drivers/block/drbd/drbd_vli.h:176:
+#define LEVEL(t,b,v) do {		\
+		max += 1ULL << (t - b);	\
+		if (in <= max) {	\
+			if (out)	\
+				*out = ((in - adj) << b) | v;	\
+			return t;	\
+		}			\
+		adj = max + 1;		\
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 't' may be better as '(t)' to avoid precedence issues
#245: FILE: drivers/block/drbd/drbd_vli.h:176:
+#define LEVEL(t,b,v) do {		\
+		max += 1ULL << (t - b);	\
+		if (in <= max) {	\
+			if (out)	\
+				*out = ((in - adj) << b) | v;	\
+			return t;	\
+		}			\
+		adj = max + 1;		\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#245: FILE: drivers/block/drbd/drbd_vli.h:176:
+#define LEVEL(t,b,v) do {		\
+		max += 1ULL << (t - b);	\
+		if (in <= max) {	\
+			if (out)	\
+				*out = ((in - adj) << b) | v;	\
+			return t;	\
+		}			\
+		adj = max + 1;		\
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'b' may be better as '(b)' to avoid precedence issues
#245: FILE: drivers/block/drbd/drbd_vli.h:176:
+#define LEVEL(t,b,v) do {		\
+		max += 1ULL << (t - b);	\
+		if (in <= max) {	\
+			if (out)	\
+				*out = ((in - adj) << b) | v;	\
+			return t;	\
+		}			\
+		adj = max + 1;		\
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'v' may be better as '(v)' to avoid precedence issues
#245: FILE: drivers/block/drbd/drbd_vli.h:176:
+#define LEVEL(t,b,v) do {		\
+		max += 1ULL << (t - b);	\
+		if (in <= max) {	\
+			if (out)	\
+				*out = ((in - adj) << b) | v;	\
+			return t;	\
+		}			\
+		adj = max + 1;		\
+	} while (0)

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#245: FILE: drivers/block/drbd/drbd_vli.h:176:
+#define LEVEL(t,b,v) do {		\
+		max += 1ULL << (t - b);	\
+		if (in <= max) {	\
+			if (out)	\
+				*out = ((in - adj) << b) | v;	\
+			return t;	\
+		}			\
+		adj = max + 1;		\
+	} while (0)

WARNING:TYPO_SPELLING: 'independend' may be misspelled - perhaps 'independent'?
#263: FILE: drivers/block/drbd/drbd_vli.h:194:
+/* code from here down is independend of actually used bit code */
                           ^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#287: FILE: drivers/block/drbd/drbd_vli.h:218:
+ * but depending on VLI implementation, it may be more. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#303: FILE: drivers/block/drbd/drbd_vli.h:234:
+	 * total number of valid bits in stream: buf_len * 8 - pad_bits */

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#337: FILE: drivers/block/drbd/drbd_vli.h:268:
+	if ((bs->cur.b + ((bs->cur.bit + bits -1) >> 3)) - bs->buf >= bs->buf_len)
 	                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#370: FILE: drivers/block/drbd/drbd_vli.h:301:
+	if (bs->cur.b + ((bs->cur.bit + bs->pad_bits + bits -1) >> 3) - bs->buf >= bs->buf_len)
 	                                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#385: FILE: drivers/block/drbd/drbd_vli.h:316:
+		memcpy(&val, bs->cur.b+1, n - 1);
 		                      ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#402: FILE: drivers/block/drbd/drbd_vli.h:333:
+/* encodes @in as vli into @bs;
+

WARNING:SELF_ASSIGNMENT: Do not use self-assignments to avoid compiler warnings
#411: FILE: drivers/block/drbd/drbd_vli.h:342:
+	u64 code = code;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000104178.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 15 errors, 29 warnings, 15 checks, 351 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000104178.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
