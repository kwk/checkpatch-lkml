WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#96: 
handlers can return to the NMI handler without issuing iret. iret would cause

WARNING:TYPO_SPELLING: 'reenabled' may be misspelled - perhaps 're-enabled'?
#97: 
NMIs to be reenabled prematurely. x86_32 uses popf and far return. x86_64 has to
           ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BIT_MACRO: Prefer using the BIT macro
#211: FILE: include/linux/hardirq.h:63:
+#define HARDNMI_OFFSET	(1UL << HARDNMI_SHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#243: FILE: include/linux/hardirq.h:174:
+		BUG_ON(hardnmi_count());		\

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#414: FILE: include/asm-x86/irqflags.h:164:
+#define INTERRUPT_RETURN_NMI_SAFE	pushq %rax;		\
                                  	      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#414: FILE: include/asm-x86/irqflags.h:164:
+#define INTERRUPT_RETURN_NMI_SAFE	pushq %rax;		\
+					movq %rsp, %rax;	\
+					movq 24+8(%rax), %rsp;	\
+					pushq 0+8(%rax);	\
+					pushq 16+8(%rax);	\
+					movq (%rax), %rax;	\
+					popfq;			\
+					ret

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#415: FILE: include/asm-x86/irqflags.h:165:
+					movq %rsp, %rax;	\
 					     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#415: FILE: include/asm-x86/irqflags.h:165:
+					movq %rsp, %rax;	\
 					           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#416: FILE: include/asm-x86/irqflags.h:166:
+					movq 24+8(%rax), %rsp;	\
 					       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#416: FILE: include/asm-x86/irqflags.h:166:
+					movq 24+8(%rax), %rsp;	\
 					          ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#416: FILE: include/asm-x86/irqflags.h:166:
+					movq 24+8(%rax), %rsp;	\
 					                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#417: FILE: include/asm-x86/irqflags.h:167:
+					pushq 0+8(%rax);	\
 					       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#417: FILE: include/asm-x86/irqflags.h:167:
+					pushq 0+8(%rax);	\
 					          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#418: FILE: include/asm-x86/irqflags.h:168:
+					pushq 16+8(%rax);	\
 					        ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#418: FILE: include/asm-x86/irqflags.h:168:
+					pushq 16+8(%rax);	\
 					           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#419: FILE: include/asm-x86/irqflags.h:169:
+					movq (%rax), %rax;	\

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#419: FILE: include/asm-x86/irqflags.h:169:
+					movq (%rax), %rax;	\
 					      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#419: FILE: include/asm-x86/irqflags.h:169:
+					movq (%rax), %rax;	\
 					             ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#448: FILE: include/asm-x86/irqflags.h:198:
+#define INTERRUPT_RETURN_NMI_SAFE	pushl 8(%esp);	\
                                  	        ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#448: FILE: include/asm-x86/irqflags.h:198:
+#define INTERRUPT_RETURN_NMI_SAFE	pushl 8(%esp);	\
+					popfl;		\
+					lret $4

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000293379.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 4 warnings, 14 checks, 291 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000293379.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
