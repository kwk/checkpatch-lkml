WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data") over __attribute__((__section__(".data")))
#348: FILE: arch/s390/kernel/ipl.c:50:
+u16 ipl_devno __attribute__((__section__(".data"))) = 0;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data") over __attribute__((__section__(".data")))
#349: FILE: arch/s390/kernel/ipl.c:51:
+u32 ipl_flags __attribute__((__section__(".data"))) = 0;

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#478: FILE: arch/s390/kernel/smp.c:87:
+		cpu_set(smp_processor_id(), call_data->finished);;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#650: FILE: arch/s390/kernel/smp.c:185:
+int smp_call_function_on(void (*func) (void *info), void *info, int nonatomic,
+			  int wait, int cpu)

WARNING:INCLUDE_LINUX: Use #include <linux/smp.h> instead of <asm/smp.h>
#786: FILE: drivers/s390/char/sclp_quiesce.c:19:
+#include <asm/smp.h>

WARNING:MISPLACED_INIT: __initdata should be placed after ipl_schib
#807: FILE: drivers/s390/cio/cio.c:1051:
+static struct schib __initdata ipl_schib;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#825: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#830: FILE: include/asm-s390/ipl.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#863: FILE: include/asm-s390/ipl.h:34:
+} __attribute__((packed));

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#866: FILE: include/asm-s390/ipl.h:37:
+	u8  reserved1[313-1];
 	                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#880: FILE: include/asm-s390/ipl.h:51:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#890: FILE: include/asm-s390/ipl.h:61:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#898: FILE: include/asm-s390/ipl.h:69:
+} __attribute__((packed));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#906: FILE: include/asm-s390/ipl.h:77:
+extern void do_reipl(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#907: FILE: include/asm-s390/ipl.h:78:
+extern void ipl_save_parameters(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#940: FILE: include/asm-s390/ipl.h:111:
+extern int diag308(unsigned long subcode, void *addr);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1006: FILE: include/asm-s390/local.h:1:
+#include <asm-generic/local.h>

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000464945.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 12 warnings, 5 checks, 920 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000464945.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
