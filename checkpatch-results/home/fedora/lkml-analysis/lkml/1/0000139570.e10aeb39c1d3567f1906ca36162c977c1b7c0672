WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
These operations are quite useful and can be used for other implementations.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#73: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#78: FILE: include/linux/trace_seq.h:1:
+#ifndef _LINUX_TRACE_SEQ_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#103: FILE: include/linux/trace_seq.h:26:
+extern int trace_seq_printf(struct trace_seq *s, const char *fmt, ...)

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(2, 3) over __attribute__((format(printf, 2, 3)))
#104: FILE: include/linux/trace_seq.h:27:
+	__attribute__ ((format (printf, 2, 3)));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#107: FILE: include/linux/trace_seq.h:30:
+extern void trace_print_seq(struct seq_file *m, struct trace_seq *s);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#108: FILE: include/linux/trace_seq.h:31:
+extern ssize_t trace_seq_to_user(struct trace_seq *s, char __user *ubuf,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#110: FILE: include/linux/trace_seq.h:33:
+extern int trace_seq_puts(struct trace_seq *s, const char *str);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#111: FILE: include/linux/trace_seq.h:34:
+extern int trace_seq_putc(struct trace_seq *s, unsigned char c);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#112: FILE: include/linux/trace_seq.h:35:
+extern int trace_seq_putmem(struct trace_seq *s, const void *mem, size_t len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#113: FILE: include/linux/trace_seq.h:36:
+extern int trace_seq_putmem_hex(struct trace_seq *s, const void *mem,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#115: FILE: include/linux/trace_seq.h:38:
+extern void *trace_seq_reserve(struct trace_seq *s, size_t len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#116: FILE: include/linux/trace_seq.h:39:
+extern int trace_seq_path(struct trace_seq *s, struct path *path);

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(2, 3) over __attribute__((format(printf, 2, 3)))
#120: FILE: include/linux/trace_seq.h:43:
+	__attribute__ ((format (printf, 2, 3)))

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#124: FILE: include/linux/trace_seq.h:47:
+}
+static inline int

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#133: FILE: include/linux/trace_seq.h:56:
+}
+static inline ssize_t trace_seq_to_user(struct trace_seq *s, char __user *ubuf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#134: FILE: include/linux/trace_seq.h:57:
+static inline ssize_t trace_seq_to_user(struct trace_seq *s, char __user *ubuf,
+				 size_t cnt)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#138: FILE: include/linux/trace_seq.h:61:
+}
+static inline int trace_seq_puts(struct trace_seq *s, const char *str)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#142: FILE: include/linux/trace_seq.h:65:
+}
+static inline int trace_seq_putc(struct trace_seq *s, unsigned char c);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#146: FILE: include/linux/trace_seq.h:69:
+}
+static inline int

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#151: FILE: include/linux/trace_seq.h:74:
+}
+static inline int trace_seq_putmem_hex(struct trace_seq *s, const void *mem,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#156: FILE: include/linux/trace_seq.h:79:
+}
+static inline void *trace_seq_reserve(struct trace_seq *s, size_t len)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#160: FILE: include/linux/trace_seq.h:83:
+}
+static inline int trace_seq_path(struct trace_seq *s, struct path *path)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000139570.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 18 checks, 147 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000139570.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
