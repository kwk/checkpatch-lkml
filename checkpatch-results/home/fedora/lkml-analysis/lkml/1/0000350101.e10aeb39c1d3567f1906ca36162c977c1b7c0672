WARNING:SPLIT_STRING: quoted string split across lines
#75: FILE: sound/pci/via82xx.c:107:
+MODULE_PARM_DESC(dxs_support, "Support for DXS channels (0 = auto, 1 = enable, "
+	"2 = disable, 3 = 48k only, 4 = no VRA, 5 = enable any sample rate)");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:BRACES: braces {} should be used on all arms of this statement
#114: FILE: sound/pci/via82xx.c:465:
+			if (!rest) {
[...]
 			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#192: FILE: sound/pci/via82xx.c:588:
+		udelay(20);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#219: FILE: sound/pci/via82xx.c:638:
+		if (!(c_status & (VIA_REG_STAT_EOL|VIA_REG_STAT_FLAG|VIA_REG_STAT_STOPPED)))
 		                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#219: FILE: sound/pci/via82xx.c:638:
+		if (!(c_status & (VIA_REG_STAT_EOL|VIA_REG_STAT_FLAG|VIA_REG_STAT_STOPPED)))
 		                                                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#376: FILE: sound/pci/via82xx.c:1408:
+						    64*1024, 128*1024);
 						      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#376: FILE: sound/pci/via82xx.c:1408:
+						    64*1024, 128*1024);
 						                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#390: FILE: sound/pci/via82xx.c:1428:
+						    64*1024, 128*1024);
 						      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#390: FILE: sound/pci/via82xx.c:1428:
+						    64*1024, 128*1024);
 						                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#404: FILE: sound/pci/via82xx.c:1465:
+						    64*1024, 128*1024);
 						      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#404: FILE: sound/pci/via82xx.c:1465:
+						    64*1024, 128*1024);
 						                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#423: FILE: sound/pci/via82xx.c:1486:
+						    64*1024, 128*1024);
 						      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#423: FILE: sound/pci/via82xx.c:1486:
+						    64*1024, 128*1024);
 						                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#437: FILE: sound/pci/via82xx.c:1519:
+						    64*1024, 128*1024);
 						      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#437: FILE: sound/pci/via82xx.c:1519:
+						    64*1024, 128*1024);
 						                ^

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#445: FILE: sound/pci/via82xx.c:1616:
 static struct snd_kcontrol_new snd_via8233_dxs3_spdif_control __devinitdata = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#501: FILE: sound/pci/via82xx.c:2039:
 static void __devinit snd_via82xx_proc_init(struct via82xx *chip)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chip"
#597: FILE: sound/pci/via82xx.c:2285:
+	if (chip == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000350101.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 15 checks, 592 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000350101.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
