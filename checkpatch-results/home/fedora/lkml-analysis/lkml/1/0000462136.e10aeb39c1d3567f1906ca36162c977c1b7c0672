ERROR:TRAILING_WHITESPACE: trailing whitespace
#46: FILE: arch/i386/kernel/marker.c:43:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#86: FILE: include/asm-i386/marker.h:26:
+		asm volatile(	".section .markers, \"a\", @progbits;\n\t" \

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'flags' - possible side-effects?
#94: FILE: include/asm-i386/marker.h:42:
+#define _MARK(flags, format, args...) \
+do { \
+	if (((flags) & _MF_LOCKDEP) && ((flags) & _MF_OPTIMIZED)) \
+		MARK_OPTIMIZED(flags, format, ## args); \
+	else \
+		MARK_GENERIC(flags, format, ## args); \
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'format' - possible side-effects?
#94: FILE: include/asm-i386/marker.h:42:
+#define _MARK(flags, format, args...) \
+do { \
+	if (((flags) & _MF_LOCKDEP) && ((flags) & _MF_OPTIMIZED)) \
+		MARK_OPTIMIZED(flags, format, ## args); \
+	else \
+		MARK_GENERIC(flags, format, ## args); \
+} while (0)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#112: FILE: include/asm-i386/marker.h:57:
+#define MARK_OPTIMIZED_ENABLE(a) \
+	*(MARK_OPTIMIZED_ENABLE_TYPE*) \
+		((char*)a+MARK_OPTIMIZED_ENABLE_IMMEDIATE_OFFSET)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#112: FILE: include/asm-i386/marker.h:57:
+#define MARK_OPTIMIZED_ENABLE(a) \
+	*(MARK_OPTIMIZED_ENABLE_TYPE*) \
+		((char*)a+MARK_OPTIMIZED_ENABLE_IMMEDIATE_OFFSET)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#113: FILE: include/asm-i386/marker.h:58:
+	*(MARK_OPTIMIZED_ENABLE_TYPE*) \

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#114: FILE: include/asm-i386/marker.h:59:
+		((char*)a+MARK_OPTIMIZED_ENABLE_IMMEDIATE_OFFSET)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#114: FILE: include/asm-i386/marker.h:59:
+		((char*)a+MARK_OPTIMIZED_ENABLE_IMMEDIATE_OFFSET)
 		         ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#117: FILE: include/asm-i386/marker.h:61:
+extern int marker_optimized_set_enable(void *address, char enable);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000462136.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 0 warnings, 5 checks, 72 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000462136.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
