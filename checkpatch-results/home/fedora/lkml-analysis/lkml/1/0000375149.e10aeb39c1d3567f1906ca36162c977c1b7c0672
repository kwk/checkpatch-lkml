WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#63: 
      Fix a potential NULL pointer dereference in uli526x_interrupt() in drivers/net/tulip/uli526x.c

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#209: FILE: drivers/net/Kconfig:243:
+config AX88796_93CX6
+	bool "ASIX AX88796 external 93CX6 eeprom support"
+	depends on AX88796
+	select EEPROM_93CX6
+	help
+	  Select this if your platform comes with an external 93CX6 eeprom.
+

Kconfig symbols should have a help text which fully describes
it.

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#325: FILE: drivers/net/ax88796.c:613:
+	udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tx_tcnt != mac->tx_tcnt'
#368: FILE: drivers/net/cxgb3/xgmac.c:525:
+	if ((tx_tcnt != mac->tx_tcnt) && (mac->tx_xcnt == 0))  {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mac->tx_xcnt == 0'
#368: FILE: drivers/net/cxgb3/xgmac.c:525:
+	if ((tx_tcnt != mac->tx_tcnt) && (mac->tx_xcnt == 0))  {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1043: FILE: drivers/net/e1000/e1000_main.c:4908:
+	struct e1000_adapter *adapter = hw->back;
+	return pcix_get_mmrbc(adapter->pdev);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#1050: FILE: drivers/net/e1000/e1000_main.c:4915:
+	struct e1000_adapter *adapter = hw->back;
+	pcix_set_mmrbc(adapter->pdev, mmrbc);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1078: FILE: drivers/net/forcedeth.c:4920:
+		printk(KERN_INFO "%s: no link during initialization.\n", dev->name);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1132: FILE: drivers/net/pasemi_mac.c:536:
+	pasemi_mac_replenish_rx_ring(mac->netdev, limit-count);
 	                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1203: FILE: drivers/net/phy/Kconfig:79:
+config FIXED_MII_1000_FDX
+	bool "Emulation for 1000M Fdx fixed PHY behavior"
+	depends on FIXED_PHY
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1259: FILE: drivers/net/phy/fixed.c:40:
+static struct fixed_info *fixed_phy_ptrs[CONFIG_FIXED_MII_AMNT*MAX_PHY_AMNT];
                                                               ^

WARNING:SPACING: Unnecessary space before function pointer arguments
#1269: FILE: drivers/net/phy/fixed.c:48:
+			       int (*link_update) (struct net_device *,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!link_update"
#1275: FILE: drivers/net/phy/fixed.c:53:
+	if (link_update == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1292: FILE: drivers/net/phy/fixed.c:68:
+struct fixed_info *fixed_mdio_get_phydev (int phydev_ind)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1299: FILE: drivers/net/phy/fixed.c:75:
+EXPORT_SYMBOL(fixed_mdio_get_phydev);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#1305: FILE: drivers/net/phy/fixed.c:80:
+#if defined(CONFIG_FIXED_MII_100_FDX) || defined(CONFIG_FIXED_MII_10_FDX) || defined(CONFIG_FIXED_MII_1000_FDX)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#1459: FILE: drivers/net/phy/fixed.c:209:
+#if defined(CONFIG_FIXED_MII_100_FDX) || defined(CONFIG_FIXED_MII_10_FDX) || defined(CONFIG_FIXED_MII_1000_FDX)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1460: FILE: drivers/net/phy/fixed.c:210:
+struct fixed_info *fixed_mdio_register_device(

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dev)...) over kzalloc(sizeof(struct device)...)
#1470: FILE: drivers/net/phy/fixed.c:218:
+	struct device *dev = kzalloc(sizeof(struct device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#1474: FILE: drivers/net/phy/fixed.c:220:
+	if (dev == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new_bus"
#1483: FILE: drivers/net/phy/fixed.c:225:
+	if (new_bus == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fixed"
#1493: FILE: drivers/net/phy/fixed.c:230:
+	if (fixed == NULL)

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#1496: FILE: drivers/net/phy/fixed.c:233:
+	fixed->regs = kzalloc(MII_REGS_NUM * sizeof(int), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1497: FILE: drivers/net/phy/fixed.c:234:
+	if (NULL == fixed->regs)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!phydev"
#1524: FILE: drivers/net/phy/fixed.c:255:
+	if (phydev == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1580: FILE: drivers/net/phy/fixed.c:281:
+		printk(KERN_ERR "Phy %s: problems with fixed driver\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1586: FILE: drivers/net/phy/fixed.c:287:
+		printk(KERN_ERR "Phy %s failed to register\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1591: FILE: drivers/net/phy/fixed.c:292:
+	//phydev->state = PHY_RUNNING; /* make phy go up quick, but in 10Mbit/HDX
+	return fixed;

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1674: FILE: drivers/net/phy/fixed.c:336:
+	for (i=1; i <= CONFIG_FIXED_MII_AMNT; i++) {
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1699: FILE: drivers/net/phy/fixed.c:356:
+	for (i=0; i < MAX_PHY_AMNT; i++)
 	      ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1700: FILE: drivers/net/phy/fixed.c:357:
+		if ( fixed_phy_ptrs[i] )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1700: FILE: drivers/net/phy/fixed.c:357:
+		if ( fixed_phy_ptrs[i] )

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#1722: FILE: drivers/net/phy/phy.c:38:
+#include <asm/atomic.h>

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1803: FILE: drivers/net/phy/phy.c:678:
+	/*
+	 * If work indeed has been cancelled, disable_irq() will have

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#1933: FILE: drivers/net/sb1250-mac.c:48:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/processor.h> instead of <asm/processor.h>
#1934: FILE: drivers/net/sb1250-mac.c:49:
+#include <asm/processor.h>	/* Processor type for cache alignment. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2074: FILE: drivers/net/sb1250-mac.c:207:
+	struct sbmac_softc	*sbdma_eth;	/* back pointer to associated
+						   MAC */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2074: FILE: drivers/net/sb1250-mac.c:207:
+						   MAC */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2078: FILE: drivers/net/sb1250-mac.c:211:
+	int			sbdma_maxdescr;	/* total # of descriptors
+						   in ring */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2078: FILE: drivers/net/sb1250-mac.c:211:
+						   in ring */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2084: FILE: drivers/net/sb1250-mac.c:215:
+						/* # descriptors rx/tx
+						   before interrupt */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2084: FILE: drivers/net/sb1250-mac.c:215:
+						   before interrupt */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2102: FILE: drivers/net/sb1250-mac.c:225:
+	void __iomem		*sbdma_curdscr;	/* current descriptor
+						   address */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2102: FILE: drivers/net/sb1250-mac.c:225:
+						   address */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2127: FILE: drivers/net/sb1250-mac.c:239:
+						/* context table, one
+						   per descr */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2127: FILE: drivers/net/sb1250-mac.c:239:
+						   per descr */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2132: FILE: drivers/net/sb1250-mac.c:244:
+	struct sbdmadscr	*sbdma_remptr;	/* next dscr for sw
+						   to remove */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2132: FILE: drivers/net/sb1250-mac.c:244:
+						   to remove */

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#2295: FILE: drivers/net/sb1250-mac.c:353:
+static char sbmac_string[] = "sb1250-mac";

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#2296: FILE: drivers/net/sb1250-mac.c:354:
+static char sbmac_pretty[] = "SB1250 MAC";

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#2298: FILE: drivers/net/sb1250-mac.c:356:
+static char sbmac_mdio_string[] = "sb1250-mac-mdio";

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2440: FILE: drivers/net/sb1250-mac.c:380:
+ *  ^I   sbm_mdio - address of the MAC's MDIO register$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2480: FILE: drivers/net/sb1250-mac.c:411:
+ *  ^I   sbm_mdio - address of the MAC's MDIO register$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2481: FILE: drivers/net/sb1250-mac.c:412:
+ *  ^I   data     - data to send$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2482: FILE: drivers/net/sb1250-mac.c:413:
+ *  ^I   bitcnt   - number of bits to send$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2527: FILE: drivers/net/sb1250-mac.c:449:
+ *  ^I   bus     - MDIO bus handle$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2530: FILE: drivers/net/sb1250-mac.c:451:
+ *  ^I   regnum  - index of register to read$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2534: FILE: drivers/net/sb1250-mac.c:454:
+ *  ^I   value read, or 0xffff if an error occurred.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2641: FILE: drivers/net/sb1250-mac.c:541:
+ *  ^I   bus     - MDIO bus handle$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2645: FILE: drivers/net/sb1250-mac.c:543:
+ *  ^I   regidx  - register within the PHY$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2646: FILE: drivers/net/sb1250-mac.c:544:
+ *  ^I   regval  - data to write to register$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2650: FILE: drivers/net/sb1250-mac.c:547:
+ *  ^I   0 for success$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2694: FILE: drivers/net/sb1250-mac.c:583:
+ *  ^I   d - struct sbmacdma (DMA channel context)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2695: FILE: drivers/net/sb1250-mac.c:584:
+ *  ^I   s - struct sbmac_softc (pointer to a MAC)$

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#2833: FILE: drivers/net/sb1250-mac.c:853:
 		if (sb_new == NULL) {
+			pr_info("%s: sk_buff allocation failed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2834: FILE: drivers/net/sb1250-mac.c:854:
+			pr_info("%s: sk_buff allocation failed\n",
 			       d->sbdma_eth->sbm_dev->name);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2989: FILE: drivers/net/sb1250-mac.c:1827:
+ *  ^I   speed - speed to set MAC to (see enum sbmac_speed)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3016: FILE: drivers/net/sb1250-mac.c:1914:
+ *  ^I   duplex - duplex setting (see enum sbmac_duplex)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3017: FILE: drivers/net/sb1250-mac.c:1915:
+ *  ^I   fc - flow control setting (see enum sbmac_fc)$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3117: FILE: drivers/net/sb1250-mac.c:2357:
+		printk(KERN_ERR "%s.%d: unable to register netdev\n",

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#3136: FILE: drivers/net/sb1250-mac.c:2373:
+	pr_info("%s: SiByte Ethernet at 0x%08Lx, address: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3137: FILE: drivers/net/sb1250-mac.c:2374:
+	pr_info("%s: SiByte Ethernet at 0x%08Lx, address: %s\n",
+	       dev->name, base, print_mac(mac, eaddr));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3180: FILE: drivers/net/sb1250-mac.c:2409:
+		printk(KERN_ERR "%s: unable to get IRQ %d\n", dev->name,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3195: FILE: drivers/net/sb1250-mac.c:2419:
+		printk(KERN_ERR "%s: unable to register MDIO bus\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3321: FILE: drivers/net/sb1250-mac.c:2475:
+		printk(KERN_ERR "%s: no PHY found\n", dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3342: FILE: drivers/net/sb1250-mac.c:2482:
+		printk(KERN_ERR "%s: could not attach to PHY\n", dev->name);

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_10baseT_Half>
#3349: FILE: drivers/net/sb1250-mac.c:2487:
+	phy_dev->supported &= SUPPORTED_10baseT_Half |

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_10baseT_Full>
#3350: FILE: drivers/net/sb1250-mac.c:2488:
+			      SUPPORTED_10baseT_Full |

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_100baseT_Half>
#3351: FILE: drivers/net/sb1250-mac.c:2489:
+			      SUPPORTED_100baseT_Half |

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_100baseT_Full>
#3352: FILE: drivers/net/sb1250-mac.c:2490:
+			      SUPPORTED_100baseT_Full |

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_1000baseT_Half>
#3353: FILE: drivers/net/sb1250-mac.c:2491:
+			      SUPPORTED_1000baseT_Half |

CHECK:CAMELCASE: Avoid CamelCase: <SUPPORTED_1000baseT_Full>
#3354: FILE: drivers/net/sb1250-mac.c:2492:
+			      SUPPORTED_1000baseT_Full |

CHECK:BRACES: braces {} should be used on all arms of this statement
#3451: FILE: drivers/net/sb1250-mac.c:2537:
+	if (phy_dev->duplex == DUPLEX_FULL) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#3456: FILE: drivers/net/sb1250-mac.c:2542:
+	} else

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#3500: FILE: drivers/net/sb1250-mac.c:2560:
+		/*
+		 * something changed, restart the channel

WARNING:SPLIT_STRING: quoted string split across lines
#3504: FILE: drivers/net/sb1250-mac.c:2564:
+			pr_debug("%s: restarting channel "
+				 "because PHY state changed\n", dev->name);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3598: FILE: drivers/net/sb1250-mac.c:2682:
 
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3609: FILE: drivers/net/sb1250-mac.c:2693:
+	BUG_ON(!res);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3612: FILE: drivers/net/sb1250-mac.c:2696:
+		printk(KERN_ERR "%s: unable to map device registers\n",

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#3619: FILE: drivers/net/sb1250-mac.c:2703:
+	/*
+	 * The R_MAC_ETHERNET_ADDR register will be set to some nonzero

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#3624: FILE: drivers/net/sb1250-mac.c:2708:
+	pr_debug("%s: %sconfiguring MAC at 0x%08Lx\n", pldev->dev.bus_id,

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#3632: FILE: drivers/net/sb1250-mac.c:2716:
+	/*
+	 * Okay, cool.  Initialize this MAC.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3636: FILE: drivers/net/sb1250-mac.c:2720:
+		printk(KERN_ERR "%s: unable to allocate etherdev\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3678: FILE: drivers/net/sb1250-mac.c:2762:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3703: FILE: drivers/net/sb1250-mac.c:2782:
+		printk(KERN_ERR "%s: unable to map device registers\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3731: FILE: drivers/net/sb1250-mac.c:2807:
+		printk(KERN_ERR "%s.%d: unable to allocate memory\n",

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#3731: FILE: drivers/net/sb1250-mac.c:2807:
+	if (!res) {
+		printk(KERN_ERR "%s.%d: unable to allocate memory\n",

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#3738: FILE: drivers/net/sb1250-mac.c:2814:
+	/*
+	 * This is the base address of the MAC.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3748: FILE: drivers/net/sb1250-mac.c:2824:
+		printk(KERN_ERR "%s.%d: unable to register platform device\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3839: FILE: drivers/net/sb1250-mac.c:2893:
+		printk(KERN_ERR "%s: unable to allocate memory\n",

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#3839: FILE: drivers/net/sb1250-mac.c:2893:
+	if (!sbmac_pldev) {
+		printk(KERN_ERR "%s: unable to allocate memory\n",

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4057: FILE: drivers/net/via-velocity.c:97:
+static void mac_get_cam_mask(struct mac_regs __iomem * regs, u8 * mask)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4057: FILE: drivers/net/via-velocity.c:97:
+static void mac_get_cam_mask(struct mac_regs __iomem * regs, u8 * mask)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around regs->MARCAM[i]
#4068: FILE: drivers/net/via-velocity.c:108:
+		*mask++ = readb(&(regs->MARCAM[i]));

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#4076: FILE: drivers/net/via-velocity.c:116:
+
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4078: FILE: drivers/net/via-velocity.c:118:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4087: FILE: drivers/net/via-velocity.c:127:
+static void mac_set_cam_mask(struct mac_regs __iomem * regs, u8 * mask)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4087: FILE: drivers/net/via-velocity.c:127:
+static void mac_set_cam_mask(struct mac_regs __iomem * regs, u8 * mask)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#4095: FILE: drivers/net/via-velocity.c:135:
+	for (i = 0; i < 8; i++) {
+		writeb(*mask++, &(regs->MARCAM[i]));
+	}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around regs->MARCAM[i]
#4096: FILE: drivers/net/via-velocity.c:136:
+		writeb(*mask++, &(regs->MARCAM[i]));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4105: FILE: drivers/net/via-velocity.c:145:
+static void mac_set_vlan_cam_mask(struct mac_regs __iomem * regs, u8 * mask)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4105: FILE: drivers/net/via-velocity.c:145:
+static void mac_set_vlan_cam_mask(struct mac_regs __iomem * regs, u8 * mask)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#4113: FILE: drivers/net/via-velocity.c:153:
+	for (i = 0; i < 8; i++) {
+		writeb(*mask++, &(regs->MARCAM[i]));
+	}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around regs->MARCAM[i]
#4114: FILE: drivers/net/via-velocity.c:154:
+		writeb(*mask++, &(regs->MARCAM[i]));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4132: FILE: drivers/net/via-velocity.c:172:
+static void mac_set_cam(struct mac_regs __iomem * regs, int idx, const u8 *addr)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#4143: FILE: drivers/net/via-velocity.c:183:
+	for (i = 0; i < 6; i++) {
+		writeb(*addr++, &(regs->MARCAM[i]));
+	}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around regs->MARCAM[i]
#4144: FILE: drivers/net/via-velocity.c:184:
+		writeb(*addr++, &(regs->MARCAM[i]));

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#4148: FILE: drivers/net/via-velocity.c:188:
+	udelay(10);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4156: FILE: drivers/net/via-velocity.c:196:
+static void mac_set_vlan_cam(struct mac_regs __iomem * regs, int idx,

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#4159: FILE: drivers/net/via-velocity.c:199:
+{
+

CHECK:SPACING: No space is necessary after a cast
#4166: FILE: drivers/net/via-velocity.c:206:
+	writew(*((u16 *) addr), &regs->MARCAM[0]);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#4170: FILE: drivers/net/via-velocity.c:210:
+	udelay(10);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4178: FILE: drivers/net/via-velocity.c:218:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4188: FILE: drivers/net/via-velocity.c:228:
+static void mac_wol_reset(struct mac_regs __iomem * regs)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#4190: FILE: drivers/net/via-velocity.c:230:
+{
+

CHECK:CAMELCASE: Avoid CamelCase: <WOLCFGClr>
#4199: FILE: drivers/net/via-velocity.c:239:
+	writeb(WOLCFG_PMEOVR, &regs->WOLCFGClr);

CHECK:CAMELCASE: Avoid CamelCase: <WOLCRClr>
#4201: FILE: drivers/net/via-velocity.c:241:
+	writew(0xFFFF, &regs->WOLCRClr);

CHECK:CAMELCASE: Avoid CamelCase: <WOLSRClr>
#4203: FILE: drivers/net/via-velocity.c:243:
+	writew(0xFFFF, &regs->WOLSRClr);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#4243: FILE: drivers/net/via-velocity.c:469:
+static const char __devinit *get_chip_name(enum chip_type chip_id)

CHECK:CAMELCASE: Avoid CamelCase: <vCAMmask>
#4271: FILE: drivers/net/via-velocity.c:618:
+	mac_set_vlan_cam_mask(regs, vptr->vCAMmask);

CHECK:CAMELCASE: Avoid CamelCase: <mCAMmask>
#4272: FILE: drivers/net/via-velocity.c:619:
+	mac_set_cam_mask(regs, vptr->mCAMmask);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#4286: FILE: drivers/net/via-velocity.c:626:
+				/* If Tagging option is enabled and
+				   VLAN ID is not zero, then

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4287: FILE: drivers/net/via-velocity.c:627:
+				   turn on MCFG_RTGOPT also */

CHECK:SPACING: No space is necessary after a cast
#4291: FILE: drivers/net/via-velocity.c:631:
+				mac_set_vlan_cam(regs, 0, (u8 *) &vid);

CHECK:SPACING: No space is necessary after a cast
#4300: FILE: drivers/net/via-velocity.c:638:
+		mac_set_vlan_cam(regs, 0, (u8 *) &temp);

CHECK:SPACING: No space is necessary after a cast
#4303: FILE: drivers/net/via-velocity.c:640:
+		mac_set_vlan_cam_mask(regs, (u8 *) &temp);

ERROR:CODE_INDENT: code indent should use tabs where possible
#4311: FILE: drivers/net/via-velocity.c:648:
+        spin_lock_irq(&vptr->lock);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4311: FILE: drivers/net/via-velocity.c:648:
+        spin_lock_irq(&vptr->lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4313: FILE: drivers/net/via-velocity.c:650:
+        spin_unlock_irq(&vptr->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4313: FILE: drivers/net/via-velocity.c:650:
+        spin_unlock_irq(&vptr->lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4320: FILE: drivers/net/via-velocity.c:657:
+        spin_lock_irq(&vptr->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4320: FILE: drivers/net/via-velocity.c:657:
+        spin_lock_irq(&vptr->lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4323: FILE: drivers/net/via-velocity.c:660:
+        spin_unlock_irq(&vptr->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4323: FILE: drivers/net/via-velocity.c:660:
+        spin_unlock_irq(&vptr->lock);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4326: FILE: drivers/net/via-velocity.c:663:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#4457: FILE: drivers/net/via-velocity.h:1221:
+static inline void mac_eeprom_reload(struct mac_regs __iomem * regs) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#4457: FILE: drivers/net/via-velocity.h:1221:
+static inline void mac_eeprom_reload(struct mac_regs __iomem * regs) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#4458: FILE: drivers/net/via-velocity.h:1222:
+	int i=0;
 	     ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#4460: FILE: drivers/net/via-velocity.h:1224:
+	BYTE_REG_BITS_ON(EECSR_RELOAD,&(regs->EECSR));
 	                             ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#4460: FILE: drivers/net/via-velocity.h:1224:
+	BYTE_REG_BITS_ON(EECSR_RELOAD,&(regs->EECSR));
 	                              ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around regs->EECSR
#4460: FILE: drivers/net/via-velocity.h:1224:
+	BYTE_REG_BITS_ON(EECSR_RELOAD,&(regs->EECSR));

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#4462: FILE: drivers/net/via-velocity.h:1226:
+		udelay(10);

ERROR:SPACING: spaces required around that '>' (ctx:OxV)
#4463: FILE: drivers/net/via-velocity.h:1227:
+		if (i++>0x1000)
 		       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#4465: FILE: drivers/net/via-velocity.h:1229:
+	} while (BYTE_REG_BITS_IS_ON(EECSR_RELOAD,&(regs->EECSR)));
 	                                         ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#4465: FILE: drivers/net/via-velocity.h:1229:
+	} while (BYTE_REG_BITS_IS_ON(EECSR_RELOAD,&(regs->EECSR)));
 	                                          ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around regs->EECSR
#4465: FILE: drivers/net/via-velocity.h:1229:
+	} while (BYTE_REG_BITS_IS_ON(EECSR_RELOAD,&(regs->EECSR)));

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#4656: FILE: include/linux/phy.h:28:
+#include <asm/atomic.h>

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4675: FILE: include/linux/phy_fixed.h:1:
+#ifndef __PHY_FIXED_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#4683: FILE: include/linux/phy_fixed.h:9:
+/*
+    The idea is to emulate normal phy behavior by responding with

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4696: FILE: include/linux/phy_fixed.h:22:
+ *-----------------------------------------------------------------------------*/

WARNING:SPACING: Unnecessary space before function pointer arguments
#4703: FILE: include/linux/phy_fixed.h:29:
+	int (*link_update) (struct net_device *, struct fixed_phy_status *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct net_device *' should also have an identifier name
#4703: FILE: include/linux/phy_fixed.h:29:
+	int (*link_update) (struct net_device *, struct fixed_phy_status *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fixed_phy_status *' should also have an identifier name
#4703: FILE: include/linux/phy_fixed.h:29:
+	int (*link_update) (struct net_device *, struct fixed_phy_status *);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4707: FILE: include/linux/phy_fixed.h:33:
+
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct phy_device *' should also have an identifier name
#4708: FILE: include/linux/phy_fixed.h:34:
+int fixed_mdio_set_link_update(struct phy_device *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4709: FILE: include/linux/phy_fixed.h:35:
+int fixed_mdio_set_link_update(struct phy_device *,
+       int (*link_update) (struct net_device *, struct fixed_phy_status *));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4709: FILE: include/linux/phy_fixed.h:35:
+       int (*link_update) (struct net_device *, struct fixed_phy_status *));$

WARNING:SPACING: Unnecessary space before function pointer arguments
#4709: FILE: include/linux/phy_fixed.h:35:
+       int (*link_update) (struct net_device *, struct fixed_phy_status *));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#4710: FILE: include/linux/phy_fixed.h:36:
+struct fixed_info *fixed_mdio_get_phydev (int phydev_ind);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4721: FILE: include/net/ax88796.h:17:
+#define AXFLG_HAS_93CX6			(1<<2)	/* use eeprom_93cx6 driver */
                        			  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#4721: FILE: include/net/ax88796.h:17:
+#define AXFLG_HAS_93CX6			(1<<2)	/* use eeprom_93cx6 driver */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000375149.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 25 errors, 94 warnings, 52 checks, 3704 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000375149.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
