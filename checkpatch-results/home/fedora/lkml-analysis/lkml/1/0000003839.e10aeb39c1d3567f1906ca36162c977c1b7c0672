WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#43: FILE: include/linux/kernel.h:259:
+	__attribute__ ((format (printf, 1, 2)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#45: FILE: include/linux/kernel.h:261:
+	__attribute__ ((format (printf, 1, 2)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#47: FILE: include/linux/kernel.h:263:
+	__attribute__ ((format (printf, 1, 2)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#49: FILE: include/linux/kernel.h:265:
+	__attribute__ ((format (printf, 1, 2)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#51: FILE: include/linux/kernel.h:267:
+	__attribute__ ((format (printf, 1, 2)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#53: FILE: include/linux/kernel.h:269:
+	__attribute__ ((format (printf, 1, 2)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#55: FILE: include/linux/kernel.h:271:
+	__attribute__ ((format (printf, 1, 2)));

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#56: FILE: include/linux/kernel.h:272:
+asmlinkage int pr_cont(const char *s, ...)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#57: FILE: include/linux/kernel.h:273:
+	__attribute__ ((format (printf, 1, 2)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#66: FILE: include/linux/kernel.h:303:
+	__attribute__ ((format (printf, 1, 2)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#69: FILE: include/linux/kernel.h:306:
+	__attribute__ ((format (printf, 1, 2)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#72: FILE: include/linux/kernel.h:309:
+	__attribute__ ((format (printf, 1, 2)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#75: FILE: include/linux/kernel.h:312:
+	__attribute__ ((format (printf, 1, 2)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#78: FILE: include/linux/kernel.h:315:
+	__attribute__ ((format (printf, 1, 2)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#81: FILE: include/linux/kernel.h:318:
+	__attribute__ ((format (printf, 1, 2)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#84: FILE: include/linux/kernel.h:321:
+	__attribute__ ((format (printf, 1, 2)));

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#86: FILE: include/linux/kernel.h:323:
+static inline int pr_cont(const char *s, ...)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#87: FILE: include/linux/kernel.h:324:
+	__attribute__ ((format (printf, 1, 2)));

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#88: FILE: include/linux/kernel.h:325:
+static inline int pr_cont(const char *s, ...) { return 0; }

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'function' - possible side-effects?
#137: FILE: kernel/printk.c:800:
+#define declare_pr_level(function, level)		\
+asmlinkage int function(const char *fmt, ...)		\
+{							\
+	struct va_format vaf;				\
+	va_list args;					\
+	int r;						\
+							\
+	va_start(args, fmt);				\
+	vaf.fmt = fmt;					\
+	vaf.va = &args;					\
+	r = printk(level "%pV", &vaf);			\
+	va_end(args);					\
+							\
+	return r;					\
+}							\
+EXPORT_SYMBOL(function)

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#137: FILE: kernel/printk.c:800:
+#define declare_pr_level(function, level)		\
+asmlinkage int function(const char *fmt, ...)		\
+{							\
+	struct va_format vaf;				\
+	va_list args;					\
+	int r;						\
+							\
+	va_start(args, fmt);				\
+	vaf.fmt = fmt;					\
+	vaf.va = &args;					\
+	r = printk(level "%pV", &vaf);			\
+	va_end(args);					\
+							\
+	return r;					\
+}							\
+EXPORT_SYMBOL(function)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#147: FILE: kernel/printk.c:810:
+	r = printk(level "%pV", &vaf);			\

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000003839.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 21 warnings, 1 checks, 120 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000003839.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
