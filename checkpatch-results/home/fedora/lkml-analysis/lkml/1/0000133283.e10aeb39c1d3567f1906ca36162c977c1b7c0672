ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#56: FILE: arch/mips/Kconfig:670:
This config symbol is not being referenced anywhere in the tree.

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#70: FILE: arch/mips/include/asm/asmmacro.h:24:
+	.macro	raw_local_irq_enable reg=t0
 	      	                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#83: FILE: arch/mips/include/asm/asmmacro.h:32:
+	.macro	raw_local_irq_disable reg=t0
 	      	                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#91: FILE: arch/mips/include/asm/asmmacro.h:39:
+	.macro	raw_local_irq_enable reg=t0
 	      	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#97: FILE: arch/mips/include/asm/asmmacro.h:44:
+	.macro	raw_local_irq_disable reg=t0
 	      	                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#103: FILE: arch/mips/include/asm/asmmacro.h:49:
+	.macro	raw_local_irq_enable reg=t0
 	      	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#111: FILE: arch/mips/include/asm/asmmacro.h:56:
+	.macro	raw_local_irq_disable reg=t0
 	      	                         ^

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#188: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#197: FILE: arch/mips/include/asm/rwsem.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/atomic.h> instead of <asm/atomic.h>
#213: FILE: arch/mips/include/asm/rwsem.h:17:
+#include <asm/atomic.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#239: FILE: arch/mips/include/asm/rwsem.h:43:
+#define __RWSEM_DEBUG_INIT      , 0
                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#239: FILE: arch/mips/include/asm/rwsem.h:43:
+#define __RWSEM_DEBUG_INIT      , 0

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#249: FILE: arch/mips/include/asm/rwsem.h:53:
+#define COMPAT_DECLARE_RWSEM(name)		\
+	struct compat_rw_semaphore name = __COMPAT_RWSEM_INITIALIZER(name)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#252: FILE: arch/mips/include/asm/rwsem.h:56:
+extern struct compat_rw_semaphore *rwsem_down_read_failed(struct compat_rw_semaphore *sem);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#253: FILE: arch/mips/include/asm/rwsem.h:57:
+extern struct compat_rw_semaphore *rwsem_down_write_failed(struct compat_rw_semaphore *sem);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#254: FILE: arch/mips/include/asm/rwsem.h:58:
+extern struct compat_rw_semaphore *rwsem_wake(struct compat_rw_semaphore *sem);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#255: FILE: arch/mips/include/asm/rwsem.h:59:
+extern struct compat_rw_semaphore *rwsem_downgrade_wake(struct compat_rw_semaphore *sem);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&sem->count'
#272: FILE: arch/mips/include/asm/rwsem.h:76:
+	if (atomic_inc_return((atomic_t *)(&sem->count)) > 0)

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:MEMORY_BARRIER: memory barrier without comment
#273: FILE: arch/mips/include/asm/rwsem.h:77:
+		smp_wmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#285: FILE: arch/mips/include/asm/rwsem.h:89:
+			smp_wmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#302: FILE: arch/mips/include/asm/rwsem.h:106:
+		smp_wmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#313: FILE: arch/mips/include/asm/rwsem.h:117:
+	smp_wmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#324: FILE: arch/mips/include/asm/rwsem.h:128:
+	smp_wmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#335: FILE: arch/mips/include/asm/rwsem.h:139:
+	smp_wmb();

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&sem->count'
#336: FILE: arch/mips/include/asm/rwsem.h:140:
+	if (atomic_sub_return(RWSEM_ACTIVE_WRITE_BIAS,
+			      (atomic_t *)(&sem->count)) < 0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#356: FILE: arch/mips/include/asm/rwsem.h:160:
+	smp_wmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#367: FILE: arch/mips/include/asm/rwsem.h:171:
+	smp_mb();

CHECK:LINE_SPACING: Please don't use multiple blank lines
#504: FILE: arch/mips/include/asm/system.h:74:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#524: FILE: arch/mips/include/asm/timeofday.h:1:
+#ifndef _ASM_MIPS_TIMEOFDAY_H

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000133283.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 11 warnings, 9 checks, 1856 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000133283.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
