WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
   git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip.git printk-for-linus

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#106: FILE: include/linux/kernel.h:254:
+		printk(x);			\

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#119: FILE: include/linux/kernel.h:271:
+#define printk_once(x...) printk(x)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#160: FILE: kernel/printk.c:1296:
+	if (*caller_jiffies == 0
+			|| !time_in_range(jiffies, *caller_jiffies,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#221: FILE: lib/vsprintf.c:430:
+static char *number(char *buf, char *end, unsigned long long num,
+			struct printf_spec spec)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#281: FILE: lib/vsprintf.c:478:
+		if (spec.base == 16) shift = 4;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#298: FILE: lib/vsprintf.c:492:
+	if (!(spec.flags & (ZEROPAD+LEFT))) {
 	                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#299: FILE: lib/vsprintf.c:493:
+		while(--spec.field_width >= 0) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#320: FILE: lib/vsprintf.c:519:
+		char c = (spec.flags & ZEROPAD) ? '0' : ' ';
+		while (--spec.field_width >= 0) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#378: FILE: lib/vsprintf.c:576:
+static char *symbol_string(char *buf, char *end, void *ptr,
+				struct printf_spec spec)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#390: FILE: lib/vsprintf.c:584:
+	spec.field_width = 2*sizeof(void *);
 	                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#399: FILE: lib/vsprintf.c:592:
+static char *resource_string(char *buf, char *end, struct resource *res,
+				struct printf_spec spec)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#458: FILE: lib/vsprintf.c:646:
+static char *ip6_addr_string(char *buf, char *end, u8 *addr,
+				struct printf_spec spec)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#480: FILE: lib/vsprintf.c:665:
+static char *ip4_addr_string(char *buf, char *end, u8 *addr,
+				struct printf_spec spec)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#501: FILE: lib/vsprintf.c:709:
+static char *pointer(const char *fmt, char *buf, char *end, void *ptr,
+			struct printf_spec spec)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#541: FILE: lib/vsprintf.c:740:
+		spec.field_width = 2*sizeof(void *);
 		                    ^

CHECK:SPACING: No space is necessary after a cast
#546: FILE: lib/vsprintf.c:745:
+	return number(buf, end, (unsigned long) ptr, spec);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#613: FILE: lib/vsprintf.c:812:
+		case '-': spec->flags |= LEFT;    break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#614: FILE: lib/vsprintf.c:813:
+		case '+': spec->flags |= PLUS;    break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#615: FILE: lib/vsprintf.c:814:
+		case ' ': spec->flags |= SPACE;   break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#616: FILE: lib/vsprintf.c:815:
+		case '#': spec->flags |= SPECIAL; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#617: FILE: lib/vsprintf.c:816:
+		case '0': spec->flags |= ZEROPAD; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#618: FILE: lib/vsprintf.c:817:
+		default:  found = false;

CHECK:BRACES: braces {} should be used on all arms of this statement
#628: FILE: lib/vsprintf.c:827:
+	if (isdigit(*fmt))
[...]
+	else if (*fmt == '*') {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#716: FILE: lib/vsprintf.c:911:
+	if (spec->qualifier == 'L')
[...]
+	else if (spec->qualifier == 'l') {
[...]
+	} else if (spec->qualifier == 'Z' || spec->qualifier == 'z') {
[...]
+	} else if (spec->qualifier == 't') {
[...]
+	} else if (spec->qualifier == 'h') {
[...]
+	} else {
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#820: FILE: lib/vsprintf.c:996:
+			int copy = read;
+			if (str < end) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#904: FILE: lib/vsprintf.c:1020:
 
+				}

CHECK:SPACING: No space is necessary after a cast
#906: FILE: lib/vsprintf.c:1022:
+			c = (unsigned char) va_arg(args, int);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#933: FILE: lib/vsprintf.c:1038:
+			str = pointer(fmt+1, str, end, va_arg(args, void *),
 			                 ^

CHECK:SPACING: No space is necessary after a cast
#1026: FILE: lib/vsprintf.c:1098:
+				num = (unsigned short) va_arg(args, int);

CHECK:SPACING: No space is necessary after a cast
#1029: FILE: lib/vsprintf.c:1101:
+				num = (short) va_arg(args, int);

CHECK:SPACING: No space is necessary after a cast
#1032: FILE: lib/vsprintf.c:1104:
+				num = (int) va_arg(args, int);

WARNING:TYPO_SPELLING: 'skiped' may be misspelled - perhaps 'skipped'?
#1076: FILE: lib/vsprintf.c:1261:
+ * is skiped.
       ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1114: FILE: lib/vsprintf.c:1299:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1136: FILE: lib/vsprintf.c:1321:
+			size_t len;
+			if ((unsigned long)save_str > (unsigned long)-PAGE_SIZE

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1137: FILE: lib/vsprintf.c:1322:
+			if ((unsigned long)save_str > (unsigned long)-PAGE_SIZE
+					|| (unsigned long)save_str < PAGE_SIZE)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1165: FILE: lib/vsprintf.c:1350:
+			void *skip_arg;
+			if (qualifier == 'l')

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1176: FILE: lib/vsprintf.c:1361:
+			switch (spec.type) {
+

CHECK:SPACING: No space is necessary after a cast
#1238: FILE: lib/vsprintf.c:1423:
+	if (unlikely((int) size < 0)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1241: FILE: lib/vsprintf.c:1426:
+		static char warn = 1;
+		WARN_ON(warn);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1281: FILE: lib/vsprintf.c:1466:
+			int copy = read;
+			if (str < end) {

CHECK:SPACING: No space is necessary after a cast
#1306: FILE: lib/vsprintf.c:1491:
+			c = (unsigned char) get_arg(char);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1320: FILE: lib/vsprintf.c:1505:
+			size_t len = strlen(str_arg);
+			args += len + 1;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1326: FILE: lib/vsprintf.c:1511:
+			str = pointer(fmt+1, str, end, get_arg(void *), spec);
 			                 ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1356: FILE: lib/vsprintf.c:1541:
+			switch (spec.type) {
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000147975.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 11 warnings, 26 checks, 1297 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000147975.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
