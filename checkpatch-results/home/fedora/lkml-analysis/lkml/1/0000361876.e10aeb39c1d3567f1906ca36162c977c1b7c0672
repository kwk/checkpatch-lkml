WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
> > > regular IPIs, that will timeout and continue if some CPUs don't handle

WARNING:MEMORY_BARRIER: memory barrier without comment
#93: FILE: arch/x86/kernel/smp_64.c:520:
+	smp_rmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#102: FILE: arch/x86/kernel/smp_64.c:531:
+		smp_mb();

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#149: FILE: drivers/char/sysrq.c:229:
+	if (next == NR_CPUS)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#153: FILE: drivers/char/sysrq.c:233:
+	BUG_ON(cpus_weight(global_rotate_cpu) != 1);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: braces {} should be used on all arms of this statement
#157: FILE: drivers/char/sysrq.c:237:
+	if (cpu == thiscpu)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#159: FILE: drivers/char/sysrq.c:239:
+	else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#162: FILE: drivers/char/sysrq.c:242:
+			printk("Could not interrogate CPU registers\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#168: FILE: drivers/char/sysrq.c:248:
+}
+static DECLARE_WORK(global_showregs_work, sysrq_handle_global_showregs_work_fn);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#173: FILE: drivers/char/sysrq.c:253:
+}
+static struct sysrq_key_op sysrq_global_showregs_op = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#180: FILE: drivers/char/sysrq.c:260:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000361876.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 5 checks, 112 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000361876.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
