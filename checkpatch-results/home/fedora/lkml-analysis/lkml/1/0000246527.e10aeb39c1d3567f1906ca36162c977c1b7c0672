WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
IO device.  This patch dynamically allocates them from the pool of interrupt

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#61: FILE: arch/x86/kernel/io_apic_64.c:87:
SYS_VECTOR_FREE};

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#72: FILE: arch/x86/kernel/io_apic_64.c:783:
+	static int current_offset = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#139: FILE: arch/x86/kernel/io_apic_64.c:902:
+int alloc_irq_system_vector(enum system_vector_pri priority, cpumask_t $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#179: FILE: arch/x86/kernel/io_apic_64.c:941:
+	for (; vector != last_vector; vector += vector_inc) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#227: FILE: arch/x86/kernel/io_apic_64.c:989:
+	if ((unsigned)irq >= NR_IRQS || irq_cfg[irq].vector == 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#272: FILE: include/linux/irq.h:366:
+extern int alloc_irq_system_vector(enum system_vector_pri, cpumask_t *, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#272: FILE: include/linux/irq.h:366:
+extern int alloc_irq_system_vector(enum system_vector_pri, cpumask_t *, 

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'cpumask_t *' should also have an identifier name
#272: FILE: include/linux/irq.h:366:
+extern int alloc_irq_system_vector(enum system_vector_pri, cpumask_t *, 

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'nt *' should also have an identifier name
#272: FILE: include/linux/irq.h:366:
+extern int alloc_irq_system_vector(enum system_vector_pri, cpumask_t *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#272: FILE: include/linux/irq.h:366:
+extern int alloc_irq_system_vector(enum system_vector_pri, cpumask_t *, 

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#275: FILE: include/linux/irq.h:368:
+extern void free_irq_system_vector(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#275: FILE: include/linux/irq.h:368:
+extern void free_irq_system_vector(int);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#289: FILE: include/asm-x86/irq_vectors.h:94:
+ * The first device or system vector (lowest numbered) available for $

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#346: FILE: arch/x86/kernel/io_apic_32.c:1176:
+	static int current_offset = 0;

CHECK:BRACES: braces {} should be used on all arms of this statement
#394: FILE: include/asm-x86/desc.h:319:
+	if (fixed_system_vectors[vector] == SYS_VECTOR_FREE) {
[...]
  	} else
[...]

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#426: FILE: arch/x86/kernel/apic_32.c:74:
+	[0 ... NR_VECTORS-1] = SYS_VECTOR_FREE
 	                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#458: FILE: arch/x86/kernel/irqinit_64.c:222:
+	    LAST_UV_DYNAMIC_DEVICE_VECTOR < last_dynamic_device_vector) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#498: FILE: arch/x86/kernel/apic_64.c:65:
+	[0 ... NR_VECTORS-1] = SYS_VECTOR_FREE
 	                 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#501: FILE: arch/x86/kernel/apic_64.c:68:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000246527.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 7 warnings, 7 checks, 398 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000246527.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
