CHECK:CAMELCASE: Avoid CamelCase: <logicalBlockNum>
#51: FILE: fs/udf/ialloc.c:131:
+	iinfo->i_location.logicalBlockNum = block;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <partitionReferenceNum>
#52: FILE: fs/udf/ialloc.c:132:
+	iinfo->i_location.partitionReferenceNum =

CHECK:CAMELCASE: Avoid CamelCase: <i_lenEAttr>
#61: FILE: fs/udf/ialloc.c:138:
+	iinfo->i_lenEAttr = 0;

CHECK:CAMELCASE: Avoid CamelCase: <i_lenAlloc>
#62: FILE: fs/udf/ialloc.c:139:
+	iinfo->i_lenAlloc = 0;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#69: FILE: fs/udf/ialloc.c:143:
+		if (UDF_VERS_USE_EXTENDED_FE > sbi->s_udfrev)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#71: FILE: fs/udf/ialloc.c:145:
+		iinfo->i_ext.i_data = kzalloc(inode->i_sb->s_blocksize - sizeof(struct extendedFileEntry), GFP_KERNEL);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <extendedFileEntry>
#71: FILE: fs/udf/ialloc.c:145:
+		iinfo->i_ext.i_data = kzalloc(inode->i_sb->s_blocksize - sizeof(struct extendedFileEntry), GFP_KERNEL);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#76: FILE: fs/udf/ialloc.c:148:
+		iinfo->i_ext.i_data = kzalloc(inode->i_sb->s_blocksize - sizeof(struct fileEntry), GFP_KERNEL);

CHECK:CAMELCASE: Avoid CamelCase: <fileEntry>
#76: FILE: fs/udf/ialloc.c:148:
+		iinfo->i_ext.i_data = kzalloc(inode->i_sb->s_blocksize - sizeof(struct fileEntry), GFP_KERNEL);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000329380.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 6 checks, 71 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000329380.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
