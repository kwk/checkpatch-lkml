WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
# tracer: mm

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
#           TASK-PID    CPU#    TIMESTAMP  FUNCTION

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
#              | |       |          |         |

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#76: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#81: FILE: include/trace/mm.h:1:
+#ifndef _TRACE_MM_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#96: FILE: include/trace/mm_event_types.h:1:
+/* use <trace/mm.h> instead */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#106: FILE: include/trace/mm_event_types.h:11:
+TRACE_EVENT_FORMAT(mm_anon_fault,
+	TPPROTO(struct mm_struct *mm, unsigned long address, unsigned long pfn),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#109: FILE: include/trace/mm_event_types.h:14:
+	TRACE_STRUCT(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#118: FILE: include/trace/mm_event_types.h:23:
+TRACE_EVENT_FORMAT(mm_anon_pgin,
+	TPPROTO(struct mm_struct *mm, unsigned long address, unsigned long pfn),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#121: FILE: include/trace/mm_event_types.h:26:
+	TRACE_STRUCT(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#130: FILE: include/trace/mm_event_types.h:35:
+TRACE_EVENT_FORMAT(mm_anon_cow,
+	TPPROTO(struct mm_struct *mm, unsigned long address, unsigned long pfn),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#133: FILE: include/trace/mm_event_types.h:38:
+	TRACE_STRUCT(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#142: FILE: include/trace/mm_event_types.h:47:
+TRACE_EVENT_FORMAT(mm_anon_userfree,
+	TPPROTO(struct mm_struct *mm, unsigned long address, unsigned long pfn),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#145: FILE: include/trace/mm_event_types.h:50:
+	TRACE_STRUCT(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#154: FILE: include/trace/mm_event_types.h:59:
+TRACE_EVENT_FORMAT(mm_anon_unmap,
+	TPPROTO(unsigned long pfn, int success),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#157: FILE: include/trace/mm_event_types.h:62:
+	TRACE_STRUCT(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#165: FILE: include/trace/mm_event_types.h:70:
+TRACE_EVENT_FORMAT(mm_filemap_fault,
+	TPPROTO(struct mm_struct *mm, unsigned long address,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#166: FILE: include/trace/mm_event_types.h:71:
+	TPPROTO(struct mm_struct *mm, unsigned long address,
+			unsigned long pfn, int flag),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#169: FILE: include/trace/mm_event_types.h:74:
+	TPFMT("%s: mm=%lx address=%lx pfn=%lx",
+		flag ? "pagein" : "primary fault", mm, address, pfn),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#170: FILE: include/trace/mm_event_types.h:75:
+	TRACE_STRUCT(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#180: FILE: include/trace/mm_event_types.h:85:
+TRACE_EVENT_FORMAT(mm_filemap_cow,
+	TPPROTO(struct mm_struct *mm, unsigned long address, unsigned long pfn),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#183: FILE: include/trace/mm_event_types.h:88:
+	TRACE_STRUCT(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#192: FILE: include/trace/mm_event_types.h:97:
+TRACE_EVENT_FORMAT(mm_filemap_unmap,
+	TPPROTO(unsigned long pfn, int success),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#195: FILE: include/trace/mm_event_types.h:100:
+	TRACE_STRUCT(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: include/trace/mm_event_types.h:108:
+TRACE_EVENT_FORMAT(mm_filemap_userunmap,
+	TPPROTO(struct mm_struct *mm, unsigned long address, unsigned long pfn),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#206: FILE: include/trace/mm_event_types.h:111:
+	TRACE_STRUCT(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#215: FILE: include/trace/mm_event_types.h:120:
+TRACE_EVENT_FORMAT(mm_pagereclaim_pgout,
+	TPPROTO(unsigned long pfn, int anon),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#218: FILE: include/trace/mm_event_types.h:123:
+	TRACE_STRUCT(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: include/trace/mm_event_types.h:130:
+TRACE_EVENT_FORMAT(mm_pagereclaim_free,
+	TPPROTO(unsigned long pfn, int anon),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#228: FILE: include/trace/mm_event_types.h:133:
+	TRACE_STRUCT(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#235: FILE: include/trace/mm_event_types.h:140:
+TRACE_EVENT_FORMAT(mm_pdflush_bgwriteout,
+	TPPROTO(unsigned long count),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#238: FILE: include/trace/mm_event_types.h:143:
+	TRACE_STRUCT(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: include/trace/mm_event_types.h:150:
+TRACE_EVENT_FORMAT(mm_pdflush_kupdate,
+	TPPROTO(unsigned long count),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#248: FILE: include/trace/mm_event_types.h:153:
+	TRACE_STRUCT(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#255: FILE: include/trace/mm_event_types.h:160:
+TRACE_EVENT_FORMAT(mm_page_allocation,
+	TPPROTO(unsigned long pfn, unsigned long free),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#258: FILE: include/trace/mm_event_types.h:163:
+	TRACE_STRUCT(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#266: FILE: include/trace/mm_event_types.h:171:
+TRACE_EVENT_FORMAT(mm_kswapd_runs,
+	TPPROTO(unsigned long reclaimed),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#269: FILE: include/trace/mm_event_types.h:174:
+	TRACE_STRUCT(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#276: FILE: include/trace/mm_event_types.h:181:
+TRACE_EVENT_FORMAT(mm_directreclaim_reclaimall,
+	TPPROTO(unsigned long priority),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#279: FILE: include/trace/mm_event_types.h:184:
+	TRACE_STRUCT(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#286: FILE: include/trace/mm_event_types.h:191:
+TRACE_EVENT_FORMAT(mm_directreclaim_reclaimzone,
+	TPPROTO(unsigned long reclaimed),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#289: FILE: include/trace/mm_event_types.h:194:
+	TRACE_STRUCT(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#296: FILE: include/trace/mm_event_types.h:201:
+TRACE_EVENT_FORMAT(mm_pagereclaim_shrinkzone,
+	TPPROTO(unsigned long reclaimed),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#299: FILE: include/trace/mm_event_types.h:204:
+	TRACE_STRUCT(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: include/trace/mm_event_types.h:211:
+TRACE_EVENT_FORMAT(mm_pagereclaim_shrinkactive,
+	TPPROTO(unsigned long scanned, int file, int priority),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#309: FILE: include/trace/mm_event_types.h:214:
+	TRACE_STRUCT(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#318: FILE: include/trace/mm_event_types.h:223:
+TRACE_EVENT_FORMAT(mm_pagereclaim_shrinkactive_a2a,
+	TPPROTO(unsigned long pfn),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#321: FILE: include/trace/mm_event_types.h:226:
+	TRACE_STRUCT(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#328: FILE: include/trace/mm_event_types.h:233:
+TRACE_EVENT_FORMAT(mm_pagereclaim_shrinkactive_a2i,
+	TPPROTO(unsigned long pfn),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#331: FILE: include/trace/mm_event_types.h:236:
+	TRACE_STRUCT(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#338: FILE: include/trace/mm_event_types.h:243:
+TRACE_EVENT_FORMAT(mm_pagereclaim_shrinkinactive,
+	TPPROTO(unsigned long reclaimed, int file, int priority),

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#340: FILE: include/trace/mm_event_types.h:245:
+	TPFMT("reclaimed=%lx, %s, priority=%d", reclaimed, file ? "anonymous" : "pagecache", priority),

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#341: FILE: include/trace/mm_event_types.h:246:
+	TRACE_STRUCT(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#350: FILE: include/trace/mm_event_types.h:255:
+TRACE_EVENT_FORMAT(mm_pagereclaim_shrinkinactive_i2a,
+	TPPROTO(unsigned long pfn),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#353: FILE: include/trace/mm_event_types.h:258:
+	TRACE_STRUCT(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#360: FILE: include/trace/mm_event_types.h:265:
+TRACE_EVENT_FORMAT(mm_pagereclaim_shrinkinactive_i2i,
+	TPPROTO(unsigned long pfn),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#363: FILE: include/trace/mm_event_types.h:268:
+	TRACE_STRUCT(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#370: FILE: include/trace/mm_event_types.h:275:
+TRACE_EVENT_FORMAT(mm_page_free,
+	TPPROTO(unsigned long pfn),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#373: FILE: include/trace/mm_event_types.h:278:
+	TRACE_STRUCT(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#424: FILE: mm/filemap.c:1553:
+	trace_mm_filemap_fault(vma->vm_mm, (unsigned long)vmf->virtual_address,
+			page_to_pfn(page), vmf->flags&FAULT_FLAG_NONLINEAR);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#424: FILE: mm/filemap.c:1553:
+			page_to_pfn(page), vmf->flags&FAULT_FLAG_NONLINEAR);
 			                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#458: FILE: mm/memory.c:821:
+				trace_mm_anon_userfree(mm, addr,
+							page_to_pfn(page));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#467: FILE: mm/memory.c:830:
+				trace_mm_filemap_userunmap(mm, addr,
+							page_to_pfn(page));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#494: FILE: mm/memory.c:2032:
+				trace_mm_filemap_cow(mm, address,
+					page_to_pfn(new_page));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#500: FILE: mm/memory.c:2037:
+			trace_mm_anon_cow(mm, address,
+					page_to_pfn(new_page));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#624: FILE: mm/page_alloc.c:1462:
+			trace_mm_page_allocation(page_to_pfn(page),
+					zone_page_state(zone, NR_FREE_PAGES));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000150202.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 59 checks, 682 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000150202.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
