WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#39: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#44: FILE: fs/aufs/i_op_ren.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#58: FILE: fs/aufs/i_op_ren.c:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#59: FILE: fs/aufs/i_op_ren.c:16:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#66: FILE: fs/aufs/i_op_ren.c:23:
+ * $Id: i_op_ren.c,v 1.4 2008/05/04 23:51:40 sfjro Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

CHECK:CAMELCASE: Avoid CamelCase: <AuRen_ISDIR>
#73: FILE: fs/aufs/i_op_ren.c:30:
+#define AuRen_ISDIR	1

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <AuRen_ISSAMEDIR>
#74: FILE: fs/aufs/i_op_ren.c:31:
+#define AuRen_ISSAMEDIR	(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#74: FILE: fs/aufs/i_op_ren.c:31:
+#define AuRen_ISSAMEDIR	(1 << 1)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:CAMELCASE: Avoid CamelCase: <AuRen_WHSRC>
#75: FILE: fs/aufs/i_op_ren.c:32:
+#define AuRen_WHSRC	(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#75: FILE: fs/aufs/i_op_ren.c:32:
+#define AuRen_WHSRC	(1 << 2)

CHECK:CAMELCASE: Avoid CamelCase: <AuRen_WHDST>
#76: FILE: fs/aufs/i_op_ren.c:33:
+#define AuRen_WHDST	(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#76: FILE: fs/aufs/i_op_ren.c:33:
+#define AuRen_WHDST	(1 << 3)

CHECK:CAMELCASE: Avoid CamelCase: <AuRen_DLGT>
#77: FILE: fs/aufs/i_op_ren.c:34:
+#define AuRen_DLGT	(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#77: FILE: fs/aufs/i_op_ren.c:34:
+#define AuRen_DLGT	(1 << 4)

CHECK:CAMELCASE: Avoid CamelCase: <AuRen_##name>
#78: FILE: fs/aufs/i_op_ren.c:35:
+#define au_ftest_ren(flags, name)	((flags) & AuRen_##name)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#108: FILE: fs/aufs/i_op_ren.c:65:
+		.nd	= NULL,
 		 ^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:CAMELCASE: Avoid CamelCase: <LKTRTrace>
#112: FILE: fs/aufs/i_op_ren.c:69:
+	LKTRTrace("%.*s/%.*s, %.*s/%.*s, "

WARNING:SPLIT_STRING: quoted string split across lines
#113: FILE: fs/aufs/i_op_ren.c:70:
+	LKTRTrace("%.*s/%.*s, %.*s/%.*s, "
+		  "hd{%p, %p}, hp{%p, %p}, wh %p, btgt %d, bstart{%d, %d}, "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#114: FILE: fs/aufs/i_op_ren.c:71:
+		  "hd{%p, %p}, hp{%p, %p}, wh %p, btgt %d, bstart{%d, %d}, "
+		  "flags 0x%x\n",

CHECK:CAMELCASE: Avoid CamelCase: <AuDLNPair>
#115: FILE: fs/aufs/i_op_ren.c:72:
+		  AuDLNPair(a->parent[SRC]), AuDLNPair(src_dentry),

CHECK:CAMELCASE: Avoid CamelCase: <AuLsc_I_CHILD>
#186: FILE: fs/aufs/i_op_ren.c:143:
+				  AuLsc_I_CHILD);

CHECK:CAMELCASE: Avoid CamelCase: <AuCpup_DTIME>
#188: FILE: fs/aufs/i_op_ren.c:145:
+					 !AuCpup_DTIME);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#197: FILE: fs/aufs/i_op_ren.c:154:
+	need_diropq = au_ftest_ren(a->flags, ISDIR)
+		&& (wh_dentry[DST]

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#198: FILE: fs/aufs/i_op_ren.c:155:
+		&& (wh_dentry[DST]
+		    || au_dbdiropq(dentry) == a->btgt

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#200: FILE: fs/aufs/i_op_ren.c:157:
+		    /* hide the lower to keep xino */
+		    || a->btgt < au_dbend(dentry)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#201: FILE: fs/aufs/i_op_ren.c:158:
+		    || a->btgt < au_dbend(dentry)
+		    || au_opt_test(a->mnt_flags, ALWAYS_DIROPQ));

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#208: FILE: fs/aufs/i_op_ren.c:165:
+		if (unlikely(au_opt_test(a->mnt_flags, UDBA_INOTIFY)
+			     && au_ftest_ren(a->flags, ISDIR)))

CHECK:CAMELCASE: Avoid CamelCase: <AuDebugOn>
#211: FILE: fs/aufs/i_op_ren.c:168:
+		AuDebugOn(au_dbstart(src_dentry) != a->btgt);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#269: FILE: fs/aufs/i_op_ren.c:226:
+		if (au_test_nfs(h_dst->d_sb)
+		    || !au_nhash_test_longer_wh(&a->whlist, a->btgt,

CHECK:CAMELCASE: Avoid CamelCase: <AuWarn>
#274: FILE: fs/aufs/i_op_ren.c:231:
+				AuWarn("failed removing whtmp dir %.*s (%d), "

WARNING:SPLIT_STRING: quoted string split across lines
#275: FILE: fs/aufs/i_op_ren.c:232:
+				AuWarn("failed removing whtmp dir %.*s (%d), "
+				       "ignored.\n", AuDLNPair(h_dst), err);

CHECK:CAMELCASE: Avoid CamelCase: <RevertFailure>
#287: FILE: fs/aufs/i_op_ren.c:244:
+#define RevertFailure(fmt, args...) do { \

CHECK:CAMELCASE: Avoid CamelCase: <AuIOErrWhck>
#288: FILE: fs/aufs/i_op_ren.c:245:
+		AuIOErrWhck("revert failure: " fmt " (%d, %d)\n", \

CHECK:CAMELCASE: Avoid CamelCase: <AuLsc_I_PARENT>
#300: FILE: fs/aufs/i_op_ren.c:257:
+		mutex_lock_nested(&h_inode->i_mutex, AuLsc_I_PARENT);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#328: FILE: fs/aufs/i_op_ren.c:285:
+		if (unlikely(au_opt_test(a->mnt_flags, UDBA_INOTIFY)
+			     && au_ftest_ren(a->flags, ISDIR)))

CHECK:CAMELCASE: Avoid CamelCase: <AuLNPair>
#358: FILE: fs/aufs/i_op_ren.c:315:
+			RevertFailure("lookup %.*s", AuLNPair(name));

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#369: FILE: fs/aufs/i_op_ren.c:326:
+		if (unlikely(0 && au_opt_test(a->mnt_flags, UDBA_INOTIFY)
+			     && au_ftest_ren(a->flags, ISDIR)))

CHECK:CAMELCASE: Avoid CamelCase: <AuTraceErr>
#425: FILE: fs/aufs/i_op_ren.c:382:
+	AuTraceErr(err);

CHECK:CAMELCASE: Avoid CamelCase: <AuWarn1>
#476: FILE: fs/aufs/i_op_ren.c:433:
+		AuWarn1("renaming dir who has child(ren) on multiple branches,"

WARNING:SPLIT_STRING: quoted string split across lines
#477: FILE: fs/aufs/i_op_ren.c:434:
+		AuWarn1("renaming dir who has child(ren) on multiple branches,"
+		      " is not supported\n");

CHECK:CAMELCASE: Avoid CamelCase: <IMustLock>
#492: FILE: fs/aufs/i_op_ren.c:449:
+	IMustLock(parent->d_inode); /* dir is locked */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#497: FILE: fs/aufs/i_op_ren.c:454:
+	if (au_br_rdonly(au_sbr(dentry->d_sb, btgt))
+		     || (0 <= bdiropq && bdiropq < btgt)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#497: FILE: fs/aufs/i_op_ren.c:454:
+		     || (0 <= bdiropq && bdiropq < btgt)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#498: FILE: fs/aufs/i_op_ren.c:455:
+		     || (0 <= bdiropq && bdiropq < btgt)
+		     || (0 <= bwh && bwh < btgt))

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#498: FILE: fs/aufs/i_op_ren.c:455:
+		     || (0 <= bwh && bwh < btgt))

CHECK:BRACES: braces {} should be used on all arms of this statement
#518: FILE: fs/aufs/i_op_ren.c:475:
+		if (gparent[SRC] != a->parent[DST]) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#522: FILE: fs/aufs/i_op_ren.c:479:
+		} else

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#528: FILE: fs/aufs/i_op_ren.c:485:
+	if (!au_ftest_ren(a->flags, ISSAMEDIR)
+	    && !IS_ROOT(a->parent[DST])

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#529: FILE: fs/aufs/i_op_ren.c:486:
+	    && !IS_ROOT(a->parent[DST])
+	    && a->parent[DST] != gparent[SRC]) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#532: FILE: fs/aufs/i_op_ren.c:489:
+		if (gparent[DST] != a->parent[SRC]) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#536: FILE: fs/aufs/i_op_ren.c:493:
+		} else

CHECK:CAMELCASE: Avoid CamelCase: <AuTraceEnter>
#553: FILE: fs/aufs/i_op_ren.c:510:
+	AuTraceEnter();

CHECK:CAMELCASE: Avoid CamelCase: <AuWrDir_ADD_ENTRY>
#611: FILE: fs/aufs/i_op_ren.c:568:
+		.flags		= AuWrDir_ADD_ENTRY

CHECK:CAMELCASE: Avoid CamelCase: <AuLock_DIR>
#637: FILE: fs/aufs/i_op_ren.c:594:
+		flags = AuLock_DIR;

CHECK:BRACES: Unbalanced braces around else statement
#652: FILE: fs/aufs/i_op_ren.c:609:
+	} else

CHECK:CAMELCASE: Avoid CamelCase: <AuDbgSleep_UdbaRace>
#716: FILE: fs/aufs/i_op_ren.c:673:
+	AuDbgSleep_UdbaRace();

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#725: FILE: fs/aufs/i_op_ren.c:682:
+			.nd	= NULL,
 			 ^^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#789: FILE: fs/aufs/i_op_ren.c:746:
+#if 0 // todo: test it

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#792: FILE: fs/aufs/i_op_ren.c:749:
+	/* dput/iput all lower dentries */
 	        ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#797: FILE: fs/aufs/i_op_ren.c:754:
+		struct dentry *hd;
+		hd = au_h_dptr(src_dentry, bindex);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#806: FILE: fs/aufs/i_op_ren.c:763:
+		struct inode *hi;
+		hi = au_h_iptr(inode[SRC], bindex);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#817: FILE: fs/aufs/i_op_ren.c:774:
+#if 0 // remove this

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#860: FILE: fs/aufs/i_op_ren.c:817:
+	//if (unlikely(err /* && au_ftest_ren(p->a.flags, ISDIR) */)) {
+	if (unlikely(err && au_ftest_ren(p->a.flags, ISDIR))) {

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#872: FILE: fs/aufs/i_op_ren.c:829:
+	iput(inode[DST]);
 	^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000279902.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 18 warnings, 44 checks, 832 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000279902.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
