WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#93: FILE: drivers/edac/edac_core.h:214:
+extern char *edac_align_ptr(void *ptr, unsigned size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#93: FILE: drivers/edac/edac_core.h:214:
+extern char *edac_align_ptr(void *ptr, unsigned size);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#122: FILE: drivers/edac/edac_core.h:348:
+	int (*set_sdram_scrub_rate) (struct mem_ctl_info * mci, u32 * bw);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#122: FILE: drivers/edac/edac_core.h:348:
+	int (*set_sdram_scrub_rate) (struct mem_ctl_info * mci, u32 * bw);

WARNING:SPACING: Unnecessary space before function pointer arguments
#122: FILE: drivers/edac/edac_core.h:348:
+	int (*set_sdram_scrub_rate) (struct mem_ctl_info * mci, u32 * bw);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#130: FILE: drivers/edac/edac_core.h:354:
+	int (*get_sdram_scrub_rate) (struct mem_ctl_info * mci, u32 * bw);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#130: FILE: drivers/edac/edac_core.h:354:
+	int (*get_sdram_scrub_rate) (struct mem_ctl_info * mci, u32 * bw);

WARNING:SPACING: Unnecessary space before function pointer arguments
#130: FILE: drivers/edac/edac_core.h:354:
+	int (*get_sdram_scrub_rate) (struct mem_ctl_info * mci, u32 * bw);

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#259: FILE: drivers/edac/edac_core.h:595:
*edac_dev)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#276: FILE: drivers/edac/edac_core.h:609:
+		unsigned sizeof_private,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#278: FILE: drivers/edac/edac_core.h:611:
+		unsigned nr_instances,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#280: FILE: drivers/edac/edac_core.h:613:
+		unsigned nr_blocks,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#281: FILE: drivers/edac/edac_core.h:614:
+		unsigned offset_value,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#283: FILE: drivers/edac/edac_core.h:616:
+		unsigned nr_attribs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#293: FILE: drivers/edac/edac_core.h:626:
+extern void edac_device_free_ctl_info(struct edac_device_ctl_info

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#381: FILE: drivers/edac/edac_core.h:751:
+extern struct mem_ctl_info *edac_mc_find(int idx);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#382: FILE: drivers/edac/edac_core.h:752:
+extern int edac_mc_add_mc(struct mem_ctl_info *mci, int mc_idx);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#383: FILE: drivers/edac/edac_core.h:753:
+extern struct mem_ctl_info *edac_mc_del_mc(struct device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#422: FILE: drivers/edac/edac_core.h:780:
+extern void edac_mc_handle_fbd_ue(struct mem_ctl_info *mci, unsigned

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#426: FILE: drivers/edac/edac_core.h:783:
+extern void edac_mc_handle_fbd_ce(struct mem_ctl_info *mci, unsigned

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#436: FILE: drivers/edac/edac_core.h:790:
+					  unsigned nr_chans);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#442: FILE: drivers/edac/edac_core.h:792:
+extern int edac_device_add_device(struct edac_device_ctl_info

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#445: FILE: drivers/edac/edac_core.h:794:
+extern struct edac_device_ctl_info *edac_device_del_device(struct

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#462: FILE: drivers/edac/edac_core.h:803:
+extern struct edac_pci_ctl_info *edac_pci_alloc_ctl_info(unsigned int

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#476: FILE: drivers/edac/edac_core.h:812:
+extern struct edac_pci_ctl_info *edac_pci_del_device(struct device

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#481: FILE: drivers/edac/edac_core.h:814:
+extern struct edac_pci_ctl_info *edac_pci_create_generic_ctl(struct

CHECK:CAMELCASE: Avoid CamelCase: <edac_op_state_toString>
#493: FILE: drivers/edac/edac_core.h:824:
+extern char *edac_op_state_toString(int op_state);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#493: FILE: drivers/edac/edac_core.h:824:
+extern char *edac_op_state_toString(int op_state);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#519: FILE: drivers/edac/edac_device.c:51:
+	debugf3("\tedac_dev = %p dev_idx=%d \n", edac_dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#521: FILE: drivers/edac/edac_device.c:52:
+	debugf3("\tedac_dev = %p dev_idx=%d \n", edac_dev,
 	debugf4("\tedac_dev->edac_check = %p\n", edac_dev->edac_check);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#613: FILE: drivers/edac/edac_device.c:138:
+	snprintf(dev_ctl->name, sizeof(dev_ctl->name), "%s",
+	dev_ctl->name[sizeof(dev_ctl->name) - 1] = '\0';

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#678: FILE: drivers/edac/edac_device.c:202:
+EXPORT_SYMBOL_GPL(edac_device_free_ctl_info);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:INDENTED_LABEL: labels should not be indented
#707: FILE: drivers/edac/edac_device.c:260:
+      fail0:

WARNING:INDENTED_LABEL: labels should not be indented
#718: FILE: drivers/edac/edac_device.c:267:
+      fail1:

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#755: FILE: drivers/edac/edac_device.c:329:
+EXPORT_SYMBOL(edac_device_find);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "edac_dev->edac_check"
#783: FILE: drivers/edac/edac_device.c:352:
+	    (edac_dev->edac_check != NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#800: FILE: drivers/edac/edac_device.c:368:
+			     unsigned msec)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#851: FILE: drivers/edac/edac_device.c:478:
+      fail1:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#856: FILE: drivers/edac/edac_device.c:482:
+      fail0:$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#892: FILE: drivers/edac/edac_device.c:537:
+EXPORT_SYMBOL_GPL(edac_device_del_device);

WARNING:SPLIT_STRING: quoted string split across lines
#924: FILE: drivers/edac/edac_device.c:568:
+				   "INTERNAL ERROR: 'instance' out of range "
+				   "(%d >= %d)\n", inst_nr,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#936: FILE: drivers/edac/edac_device.c:578:
+				   "INTERNAL ERROR: instance %d 'block' out of range "
+				   "(%d >= %d)\n", inst_nr, block_nr,

WARNING:SPLIT_STRING: quoted string split across lines
#971: FILE: drivers/edac/edac_device.c:614:
+				   "INTERNAL ERROR: 'instance' out of range "
+				   "(%d >= %d)\n", inst_nr,

WARNING:SPLIT_STRING: quoted string split across lines
#983: FILE: drivers/edac/edac_device.c:624:
+				   "INTERNAL ERROR: instance %d 'block' out of range "
+				   "(%d >= %d)\n", inst_nr, block_nr,

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#995: FILE: drivers/edac/edac_device.c:640:
+				   "UE ctl: %s, instance: %s, block: %s: %s\n",
 				    ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1008: FILE: drivers/edac/edac_device.c:650:
+EXPORT_SYMBOL_GPL(edac_device_handle_ue);

WARNING:SPACING: missing space after return type
#1066: FILE: drivers/edac/edac_device_sysfs.c:52:
+	 ssize_t(*show) (struct edac_device_ctl_info *, char *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1066: FILE: drivers/edac/edac_device_sysfs.c:52:
+	 ssize_t(*show) (struct edac_device_ctl_info *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct edac_device_ctl_info *' should also have an identifier name
#1066: FILE: drivers/edac/edac_device_sysfs.c:52:
+	 ssize_t(*show) (struct edac_device_ctl_info *, char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1066: FILE: drivers/edac/edac_device_sysfs.c:52:
+	 ssize_t(*show) (struct edac_device_ctl_info *, char *);

WARNING:SPACING: missing space after return type
#1067: FILE: drivers/edac/edac_device_sysfs.c:53:
+	 ssize_t(*store) (struct edac_device_ctl_info *, const char *,

WARNING:SPACING: Unnecessary space before function pointer arguments
#1067: FILE: drivers/edac/edac_device_sysfs.c:53:
+	 ssize_t(*store) (struct edac_device_ctl_info *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct edac_device_ctl_info *' should also have an identifier name
#1067: FILE: drivers/edac/edac_device_sysfs.c:53:
+	 ssize_t(*store) (struct edac_device_ctl_info *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#1067: FILE: drivers/edac/edac_device_sysfs.c:53:
+	 ssize_t(*store) (struct edac_device_ctl_info *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ize_t' should also have an identifier name
#1067: FILE: drivers/edac/edac_device_sysfs.c:53:
+	 ssize_t(*store) (struct edac_device_ctl_info *, const char *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1069: FILE: drivers/edac/edac_device_sysfs.c:54:
+	 ssize_t(*store) (struct edac_device_ctl_info *, const char *,
 };

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#1103: FILE: drivers/edac/edac_device_sysfs.c:94:
+EDACDEV_ATTR(reset_counters, S_IWUSR, NULL,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1105: FILE: drivers/edac/edac_device_sysfs.c:95:
+EDACDEV_ATTR(reset_counters, S_IWUSR, NULL,
 

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1112: FILE: drivers/edac/edac_device_sysfs.c:97:
+EDACDEV_ATTR(mc_name, S_IRUGO, edac_dev_ctl_name_show, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1113: FILE: drivers/edac/edac_device_sysfs.c:98:
+EDACDEV_ATTR(seconds_since_reset, S_IRUGO, edac_dev_seconds_show,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1115: FILE: drivers/edac/edac_device_sysfs.c:99:
+EDACDEV_ATTR(seconds_since_reset, S_IRUGO, edac_dev_seconds_show,
+EDACDEV_ATTR(ue_count, S_IRUGO, edac_dev_ue_count_show, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1115: FILE: drivers/edac/edac_device_sysfs.c:99:
+EDACDEV_ATTR(ue_count, S_IRUGO, edac_dev_ue_count_show, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1116: FILE: drivers/edac/edac_device_sysfs.c:100:
+EDACDEV_ATTR(ce_count, S_IRUGO, edac_dev_ce_count_show, NULL);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1152: FILE: drivers/edac/edac_device_sysfs.c:149:
+	ctl_info->log_ue = (simple_strtoul(data, NULL, 0) != 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1178: FILE: drivers/edac/edac_device_sysfs.c:166:
+	ctl_info->log_ce = (simple_strtoul(data, NULL, 0) != 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1206: FILE: drivers/edac/edac_device_sysfs.c:183:
+	ctl_info->panic_on_ue = (simple_strtoul(data, NULL, 0) != 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1238: FILE: drivers/edac/edac_device_sysfs.c:206:
+	value = simple_strtoul(data, NULL, 0);

WARNING:SPACING: missing space after return type
#1253: FILE: drivers/edac/edac_device_sysfs.c:215:
+	 ssize_t(*show) (struct edac_device_ctl_info *, char *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1253: FILE: drivers/edac/edac_device_sysfs.c:215:
+	 ssize_t(*show) (struct edac_device_ctl_info *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct edac_device_ctl_info *' should also have an identifier name
#1253: FILE: drivers/edac/edac_device_sysfs.c:215:
+	 ssize_t(*show) (struct edac_device_ctl_info *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1253: FILE: drivers/edac/edac_device_sysfs.c:215:
+	 ssize_t(*show) (struct edac_device_ctl_info *, char *);

WARNING:SPACING: missing space after return type
#1254: FILE: drivers/edac/edac_device_sysfs.c:216:
+	 ssize_t(*store) (struct edac_device_ctl_info *, const char *,

WARNING:SPACING: Unnecessary space before function pointer arguments
#1254: FILE: drivers/edac/edac_device_sysfs.c:216:
+	 ssize_t(*store) (struct edac_device_ctl_info *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct edac_device_ctl_info *' should also have an identifier name
#1254: FILE: drivers/edac/edac_device_sysfs.c:216:
+	 ssize_t(*store) (struct edac_device_ctl_info *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#1254: FILE: drivers/edac/edac_device_sysfs.c:216:
+	 ssize_t(*store) (struct edac_device_ctl_info *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ize_t' should also have an identifier name
#1254: FILE: drivers/edac/edac_device_sysfs.c:216:
+	 ssize_t(*store) (struct edac_device_ctl_info *, const char *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1256: FILE: drivers/edac/edac_device_sysfs.c:217:
+	 ssize_t(*store) (struct edac_device_ctl_info *, const char *,
 };

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!edac_class"
#1382: FILE: drivers/edac/edac_device_sysfs.c:316:
+	if (edac_class == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1404: FILE: drivers/edac/edac_device_sysfs.c:333:
+	debugf1("%s() set name of kobject to: %s\n", __func__,
+	err = kobject_set_name(&edac_dev->kobj, "%s", edac_dev->name);

WARNING:SPACING: missing space after return type
#1476: FILE: drivers/edac/edac_device_sysfs.c:404:
+	 ssize_t(*show) (struct edac_device_instance *, char *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1476: FILE: drivers/edac/edac_device_sysfs.c:404:
+	 ssize_t(*show) (struct edac_device_instance *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct edac_device_instance *' should also have an identifier name
#1476: FILE: drivers/edac/edac_device_sysfs.c:404:
+	 ssize_t(*show) (struct edac_device_instance *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1476: FILE: drivers/edac/edac_device_sysfs.c:404:
+	 ssize_t(*show) (struct edac_device_instance *, char *);

WARNING:SPACING: missing space after return type
#1477: FILE: drivers/edac/edac_device_sysfs.c:405:
+	 ssize_t(*store) (struct edac_device_instance *, const char *,

WARNING:SPACING: Unnecessary space before function pointer arguments
#1477: FILE: drivers/edac/edac_device_sysfs.c:405:
+	 ssize_t(*store) (struct edac_device_instance *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct edac_device_instance *' should also have an identifier name
#1477: FILE: drivers/edac/edac_device_sysfs.c:405:
+	 ssize_t(*store) (struct edac_device_instance *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#1477: FILE: drivers/edac/edac_device_sysfs.c:405:
+	 ssize_t(*store) (struct edac_device_instance *, const char *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ize_t' should also have an identifier name
#1477: FILE: drivers/edac/edac_device_sysfs.c:405:
+	 ssize_t(*store) (struct edac_device_instance *, const char *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1479: FILE: drivers/edac/edac_device_sysfs.c:406:
+	 ssize_t(*store) (struct edac_device_instance *, const char *,
 };

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1542: FILE: drivers/edac/edac_device_sysfs.c:451:
+INSTANCE_ATTR(ce_count, S_IRUGO, instance_ce_count_show, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1543: FILE: drivers/edac/edac_device_sysfs.c:452:
+INSTANCE_ATTR(ue_count, S_IRUGO, instance_ue_count_show, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1565: FILE: drivers/edac/edac_device_sysfs.c:474:
+static ssize_t block_ue_count_show(struct edac_device_block *block,
 {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1574: FILE: drivers/edac/edac_device_sysfs.c:479:
+static ssize_t block_ce_count_show(struct edac_device_block *block,
 {

WARNING:SPACING: missing space after return type
#1593: FILE: drivers/edac/edac_device_sysfs.c:500:
+	 ssize_t(*show) (struct edac_device_block *, char *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1593: FILE: drivers/edac/edac_device_sysfs.c:500:
+	 ssize_t(*show) (struct edac_device_block *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct edac_device_block *' should also have an identifier name
#1593: FILE: drivers/edac/edac_device_sysfs.c:500:
+	 ssize_t(*show) (struct edac_device_block *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1593: FILE: drivers/edac/edac_device_sysfs.c:500:
+	 ssize_t(*show) (struct edac_device_block *, char *);

WARNING:SPACING: missing space after return type
#1594: FILE: drivers/edac/edac_device_sysfs.c:501:
+	 ssize_t(*store) (struct edac_device_block *, const char *, size_t);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1594: FILE: drivers/edac/edac_device_sysfs.c:501:
+	 ssize_t(*store) (struct edac_device_block *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct edac_device_block *' should also have an identifier name
#1594: FILE: drivers/edac/edac_device_sysfs.c:501:
+	 ssize_t(*store) (struct edac_device_block *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#1594: FILE: drivers/edac/edac_device_sysfs.c:501:
+	 ssize_t(*store) (struct edac_device_block *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#1594: FILE: drivers/edac/edac_device_sysfs.c:501:
+	 ssize_t(*store) (struct edac_device_block *, const char *, size_t);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1658: FILE: drivers/edac/edac_device_sysfs.c:542:
+BLOCK_ATTR(ce_count, S_IRUGO, block_ce_count_show, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1659: FILE: drivers/edac/edac_device_sysfs.c:543:
+BLOCK_ATTR(ue_count, S_IRUGO, block_ue_count_show, NULL);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1824: FILE: drivers/edac/edac_device_sysfs.c:724:
+	for (i = 0; i < edac_dev->nr_instances; i++) {
+		edac_device_delete_instance(edac_dev, i);
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:INDENTED_LABEL: labels should not be indented
#1853: FILE: drivers/edac/edac_device_sysfs.c:776:
+      error0:

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1898: FILE: drivers/edac/edac_mc.c:76:
+	debugf3("\tmod_name:ctl_name = %s:%s\n", mci->mod_name,
 	debugf3("\tpvt_info = %p\n\n", mci->pvt_info);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1915: FILE: drivers/edac/edac_mc.c:88:
+char *edac_align_ptr(void *ptr, unsigned size)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1943: FILE: drivers/edac/edac_mc.c:132:
+				   unsigned nr_chans)

WARNING:INDENTED_LABEL: labels should not be indented
#2043: FILE: drivers/edac/edac_mc.c:347:
+      fail0:

WARNING:INDENTED_LABEL: labels should not be indented
#2050: FILE: drivers/edac/edac_mc.c:353:
+      fail1:

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'mci->csrows[i].channels[j]'
#2078: FILE: drivers/edac/edac_mc.c:436:
+				edac_mc_dump_channel(&mci->csrows[i].
+						     channels[j]);

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2103: FILE: drivers/edac/edac_mc.c:471:
+      fail1:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2107: FILE: drivers/edac/edac_mc.c:474:
+      fail0:$

WARNING:SPLIT_STRING: quoted string split across lines
#2181: FILE: drivers/edac/edac_mc.c:603:
+			       "INTERNAL ERROR: row out of range "
+			       "(%d >= %d)\n", row, mci->nr_csrows);

WARNING:SPLIT_STRING: quoted string split across lines
#2193: FILE: drivers/edac/edac_mc.c:612:
+			       "INTERNAL ERROR: channel out of range "
+			       "(%d >= %d)\n", channel,

WARNING:SPLIT_STRING: quoted string split across lines
#2208: FILE: drivers/edac/edac_mc.c:622:
+			       "CE page 0x%lx, offset 0x%lx, grain %d, syndrome "
+			       "0x%lx, row %d, channel %d, label \"%s\": %s\n",

WARNING:SPLIT_STRING: quoted string split across lines
#2255: FILE: drivers/edac/edac_mc.c:681:
+			       "INTERNAL ERROR: row out of range "
+			       "(%d >= %d)\n", row, mci->nr_csrows);

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#2281: FILE: drivers/edac/edac_mc.c:701:
+			       "UE page 0x%lx, offset 0x%lx, grain %d, row %d, "
 			        ^^

WARNING:SPLIT_STRING: quoted string split across lines
#2282: FILE: drivers/edac/edac_mc.c:702:
+			       "UE page 0x%lx, offset 0x%lx, grain %d, row %d, "
+			       "labels \"%s\": %s\n", page_frame_number,

WARNING:SPLIT_STRING: quoted string split across lines
#2291: FILE: drivers/edac/edac_mc.c:708:
 		panic("EDAC MC%d: UE page 0x%lx, offset 0x%lx, grain %d, "
+		      "row %d, labels \"%s\": %s\n", mci->mc_idx,

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#2308: FILE: drivers/edac/edac_mc.c:725:
+			       "UE - no information available: %s\n", msg);
 			        ^^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2314: FILE: drivers/edac/edac_mc.c:730:
+EXPORT_SYMBOL_GPL(edac_mc_handle_ue_no_info);

WARNING:SPLIT_STRING: quoted string split across lines
#2350: FILE: drivers/edac/edac_mc.c:759:
+			       "INTERNAL ERROR: channel-a out of range "
+			       "(%d >= %d)\n",

WARNING:SPLIT_STRING: quoted string split across lines
#2363: FILE: drivers/edac/edac_mc.c:769:
+			       "INTERNAL ERROR: channel-b out of range "
+			       "(%d >= %d)\n",

WARNING:TYPO_SPELLING: 'UE' may be misspelled - perhaps 'USE'?
#2383: FILE: drivers/edac/edac_mc.c:788:
+			       "UE row %d, channel-a= %d channel-b= %d "
 			        ^^

WARNING:SPLIT_STRING: quoted string split across lines
#2384: FILE: drivers/edac/edac_mc.c:789:
+			       "UE row %d, channel-a= %d channel-b= %d "
+			       "labels \"%s\": %s\n", csrow, channela, channelb,

WARNING:SPLIT_STRING: quoted string split across lines
#2391: FILE: drivers/edac/edac_mc.c:794:
 		panic("UE row %d, channel-a= %d channel-b= %d "
+		      "labels \"%s\": %s\n", csrow, channela,

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2447: FILE: drivers/edac/edac_mc.c:838:
+EXPORT_SYMBOL(edac_mc_handle_fbd_ce);

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2475: FILE: drivers/edac/edac_mc_sysfs.c:51:
+		 "Log uncorrectable error to console: 0=off 1=on");
 		                                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2475: FILE: drivers/edac/edac_mc_sysfs.c:51:
+		 "Log uncorrectable error to console: 0=off 1=on");
 		                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2475: FILE: drivers/edac/edac_mc_sysfs.c:51:
+		 "Log uncorrectable error to console: 0=off 1=on");
 		                                             ^

CHECK:CAMELCASE: Avoid CamelCase: <Log>
#2475: FILE: drivers/edac/edac_mc_sysfs.c:51:
+		 "Log uncorrectable error to console: 0=off 1=on");

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2479: FILE: drivers/edac/edac_mc_sysfs.c:54:
+		 "Log correctable error to console: 0=off 1=on");
 		                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2479: FILE: drivers/edac/edac_mc_sysfs.c:54:
+		 "Log correctable error to console: 0=off 1=on");
 		                                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2479: FILE: drivers/edac/edac_mc_sysfs.c:54:
+		 "Log correctable error to console: 0=off 1=on");
 		                                           ^

WARNING:SPACING: missing space after return type
#2510: FILE: drivers/edac/edac_mc_sysfs.c:135:
+	 ssize_t(*show) (void *, char *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2510: FILE: drivers/edac/edac_mc_sysfs.c:135:
+	 ssize_t(*show) (void *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#2510: FILE: drivers/edac/edac_mc_sysfs.c:135:
+	 ssize_t(*show) (void *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#2510: FILE: drivers/edac/edac_mc_sysfs.c:135:
+	 ssize_t(*show) (void *, char *);

WARNING:SPACING: missing space after return type
#2511: FILE: drivers/edac/edac_mc_sysfs.c:136:
+	 ssize_t(*store) (void *, const char *, size_t);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2511: FILE: drivers/edac/edac_mc_sysfs.c:136:
+	 ssize_t(*store) (void *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#2511: FILE: drivers/edac/edac_mc_sysfs.c:136:
+	 ssize_t(*store) (void *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#2511: FILE: drivers/edac/edac_mc_sysfs.c:136:
+	 ssize_t(*store) (void *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#2511: FILE: drivers/edac/edac_mc_sysfs.c:136:
+	 ssize_t(*store) (void *, const char *, size_t);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#2558: FILE: drivers/edac/edac_mc_sysfs.c:187:
+	     S_IRUGO | S_IWUSR, memctrl_int_show, memctrl_int_store);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#2564: FILE: drivers/edac/edac_mc_sysfs.c:190:
+	     S_IRUGO | S_IWUSR, memctrl_int_show, memctrl_int_store);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#2570: FILE: drivers/edac/edac_mc_sysfs.c:193:
+	     S_IRUGO | S_IWUSR, memctrl_int_show, memctrl_int_store);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#2576: FILE: drivers/edac/edac_mc_sysfs.c:196:
+	     S_IRUGO | S_IWUSR, memctrl_int_show, memctrl_int_store);

CHECK:SPACING: No space is necessary after a cast
#2702: FILE: drivers/edac/edac_mc_sysfs.c:334:
+	max_size = min((ssize_t) count, (ssize_t) EDAC_MC_LABEL_LEN - 1);

WARNING:SPACING: missing space after return type
#2723: FILE: drivers/edac/edac_mc_sysfs.c:351:
+	 ssize_t(*show) (struct csrow_info *, char *, int);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2723: FILE: drivers/edac/edac_mc_sysfs.c:351:
+	 ssize_t(*show) (struct csrow_info *, char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct csrow_info *' should also have an identifier name
#2723: FILE: drivers/edac/edac_mc_sysfs.c:351:
+	 ssize_t(*show) (struct csrow_info *, char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#2723: FILE: drivers/edac/edac_mc_sysfs.c:351:
+	 ssize_t(*show) (struct csrow_info *, char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2723: FILE: drivers/edac/edac_mc_sysfs.c:351:
+	 ssize_t(*show) (struct csrow_info *, char *, int);

WARNING:SPACING: missing space after return type
#2724: FILE: drivers/edac/edac_mc_sysfs.c:352:
+	 ssize_t(*store) (struct csrow_info *, const char *, size_t, int);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2724: FILE: drivers/edac/edac_mc_sysfs.c:352:
+	 ssize_t(*store) (struct csrow_info *, const char *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct csrow_info *' should also have an identifier name
#2724: FILE: drivers/edac/edac_mc_sysfs.c:352:
+	 ssize_t(*store) (struct csrow_info *, const char *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#2724: FILE: drivers/edac/edac_mc_sysfs.c:352:
+	 ssize_t(*store) (struct csrow_info *, const char *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#2724: FILE: drivers/edac/edac_mc_sysfs.c:352:
+	 ssize_t(*store) (struct csrow_info *, const char *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2724: FILE: drivers/edac/edac_mc_sysfs.c:352:
+	 ssize_t(*store) (struct csrow_info *, const char *, size_t, int);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#2786: FILE: drivers/edac/edac_mc_sysfs.c:399:
+CSROWDEV_ATTR(size_mb, S_IRUGO, csrow_size_show, NULL, 0);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#2787: FILE: drivers/edac/edac_mc_sysfs.c:400:
+CSROWDEV_ATTR(dev_type, S_IRUGO, csrow_dev_type_show, NULL, 0);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#2788: FILE: drivers/edac/edac_mc_sysfs.c:401:
+CSROWDEV_ATTR(mem_type, S_IRUGO, csrow_mem_type_show, NULL, 0);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#2789: FILE: drivers/edac/edac_mc_sysfs.c:402:
+CSROWDEV_ATTR(edac_mode, S_IRUGO, csrow_edac_mode_show, NULL, 0);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#2790: FILE: drivers/edac/edac_mc_sysfs.c:403:
+CSROWDEV_ATTR(ue_count, S_IRUGO, csrow_ue_count_show, NULL, 0);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#2791: FILE: drivers/edac/edac_mc_sysfs.c:404:
+CSROWDEV_ATTR(ce_count, S_IRUGO, csrow_ce_count_show, NULL, 0);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#2825: FILE: drivers/edac/edac_mc_sysfs.c:418:
+CSROWDEV_ATTR(ch0_dimm_label, S_IRUGO | S_IWUSR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#2827: FILE: drivers/edac/edac_mc_sysfs.c:420:
+CSROWDEV_ATTR(ch1_dimm_label, S_IRUGO | S_IWUSR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#2829: FILE: drivers/edac/edac_mc_sysfs.c:422:
+CSROWDEV_ATTR(ch2_dimm_label, S_IRUGO | S_IWUSR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#2831: FILE: drivers/edac/edac_mc_sysfs.c:424:
+CSROWDEV_ATTR(ch3_dimm_label, S_IRUGO | S_IWUSR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#2833: FILE: drivers/edac/edac_mc_sysfs.c:426:
+CSROWDEV_ATTR(ch4_dimm_label, S_IRUGO | S_IWUSR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#2835: FILE: drivers/edac/edac_mc_sysfs.c:428:
+CSROWDEV_ATTR(ch5_dimm_label, S_IRUGO | S_IWUSR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#2879: FILE: drivers/edac/edac_mc_sysfs.c:442:
+CSROWDEV_ATTR(ch0_ce_count, S_IRUGO | S_IWUSR, channel_ce_count_show,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2881: FILE: drivers/edac/edac_mc_sysfs.c:443:
+CSROWDEV_ATTR(ch0_ce_count, S_IRUGO | S_IWUSR, channel_ce_count_show,
+CSROWDEV_ATTR(ch1_ce_count, S_IRUGO | S_IWUSR, channel_ce_count_show,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#2881: FILE: drivers/edac/edac_mc_sysfs.c:443:
+CSROWDEV_ATTR(ch1_ce_count, S_IRUGO | S_IWUSR, channel_ce_count_show,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2882: FILE: drivers/edac/edac_mc_sysfs.c:443:
+CSROWDEV_ATTR(ch0_ce_count, S_IRUGO | S_IWUSR, channel_ce_count_show,
NULL, 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2883: FILE: drivers/edac/edac_mc_sysfs.c:444:
+CSROWDEV_ATTR(ch1_ce_count, S_IRUGO | S_IWUSR, channel_ce_count_show,
+CSROWDEV_ATTR(ch2_ce_count, S_IRUGO | S_IWUSR, channel_ce_count_show,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#2883: FILE: drivers/edac/edac_mc_sysfs.c:444:
+CSROWDEV_ATTR(ch2_ce_count, S_IRUGO | S_IWUSR, channel_ce_count_show,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2884: FILE: drivers/edac/edac_mc_sysfs.c:444:
+CSROWDEV_ATTR(ch1_ce_count, S_IRUGO | S_IWUSR, channel_ce_count_show,
NULL, 2);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2885: FILE: drivers/edac/edac_mc_sysfs.c:445:
+CSROWDEV_ATTR(ch2_ce_count, S_IRUGO | S_IWUSR, channel_ce_count_show,
+CSROWDEV_ATTR(ch3_ce_count, S_IRUGO | S_IWUSR, channel_ce_count_show,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#2885: FILE: drivers/edac/edac_mc_sysfs.c:445:
+CSROWDEV_ATTR(ch3_ce_count, S_IRUGO | S_IWUSR, channel_ce_count_show,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2886: FILE: drivers/edac/edac_mc_sysfs.c:445:
+CSROWDEV_ATTR(ch2_ce_count, S_IRUGO | S_IWUSR, channel_ce_count_show,
NULL, 3);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2887: FILE: drivers/edac/edac_mc_sysfs.c:446:
+CSROWDEV_ATTR(ch3_ce_count, S_IRUGO | S_IWUSR, channel_ce_count_show,
+CSROWDEV_ATTR(ch4_ce_count, S_IRUGO | S_IWUSR, channel_ce_count_show,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#2887: FILE: drivers/edac/edac_mc_sysfs.c:446:
+CSROWDEV_ATTR(ch4_ce_count, S_IRUGO | S_IWUSR, channel_ce_count_show,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2888: FILE: drivers/edac/edac_mc_sysfs.c:446:
+CSROWDEV_ATTR(ch3_ce_count, S_IRUGO | S_IWUSR, channel_ce_count_show,
NULL, 4);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2889: FILE: drivers/edac/edac_mc_sysfs.c:447:
+CSROWDEV_ATTR(ch4_ce_count, S_IRUGO | S_IWUSR, channel_ce_count_show,
+CSROWDEV_ATTR(ch5_ce_count, S_IRUGO | S_IWUSR, channel_ce_count_show,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#2889: FILE: drivers/edac/edac_mc_sysfs.c:447:
+CSROWDEV_ATTR(ch5_ce_count, S_IRUGO | S_IWUSR, channel_ce_count_show,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2890: FILE: drivers/edac/edac_mc_sysfs.c:447:
+CSROWDEV_ATTR(ch4_ce_count, S_IRUGO | S_IWUSR, channel_ce_count_show,
NULL, 5);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2891: FILE: drivers/edac/edac_mc_sysfs.c:448:
+CSROWDEV_ATTR(ch5_ce_count, S_IRUGO | S_IWUSR, channel_ce_count_show,
 

WARNING:INDENTED_LABEL: labels should not be indented
#2975: FILE: drivers/edac/edac_mc_sysfs.c:535:
+      error_exit:

WARNING:SPACING: missing space after return type
#3113: FILE: drivers/edac/edac_mc_sysfs.c:666:
+	 ssize_t(*show) (struct mem_ctl_info *, char *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#3113: FILE: drivers/edac/edac_mc_sysfs.c:666:
+	 ssize_t(*show) (struct mem_ctl_info *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mem_ctl_info *' should also have an identifier name
#3113: FILE: drivers/edac/edac_mc_sysfs.c:666:
+	 ssize_t(*show) (struct mem_ctl_info *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#3113: FILE: drivers/edac/edac_mc_sysfs.c:666:
+	 ssize_t(*show) (struct mem_ctl_info *, char *);

WARNING:SPACING: missing space after return type
#3114: FILE: drivers/edac/edac_mc_sysfs.c:667:
+	 ssize_t(*store) (struct mem_ctl_info *, const char *, size_t);

WARNING:SPACING: Unnecessary space before function pointer arguments
#3114: FILE: drivers/edac/edac_mc_sysfs.c:667:
+	 ssize_t(*store) (struct mem_ctl_info *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mem_ctl_info *' should also have an identifier name
#3114: FILE: drivers/edac/edac_mc_sysfs.c:667:
+	 ssize_t(*store) (struct mem_ctl_info *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#3114: FILE: drivers/edac/edac_mc_sysfs.c:667:
+	 ssize_t(*store) (struct mem_ctl_info *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#3114: FILE: drivers/edac/edac_mc_sysfs.c:667:
+	 ssize_t(*store) (struct mem_ctl_info *, const char *, size_t);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#3151: FILE: drivers/edac/edac_mc_sysfs.c:711:
+MCIDEV_ATTR(reset_counters, S_IWUSR, NULL, mci_reset_counters_store);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#3161: FILE: drivers/edac/edac_mc_sysfs.c:714:
+MCIDEV_ATTR(mc_name, S_IRUGO, mci_ctl_name_show, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#3162: FILE: drivers/edac/edac_mc_sysfs.c:715:
+MCIDEV_ATTR(size_mb, S_IRUGO, mci_size_mb_show, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#3163: FILE: drivers/edac/edac_mc_sysfs.c:716:
+MCIDEV_ATTR(seconds_since_reset, S_IRUGO, mci_seconds_show, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#3164: FILE: drivers/edac/edac_mc_sysfs.c:717:
+MCIDEV_ATTR(ue_noinfo_count, S_IRUGO, mci_ue_noinfo_show, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#3165: FILE: drivers/edac/edac_mc_sysfs.c:718:
+MCIDEV_ATTR(ce_noinfo_count, S_IRUGO, mci_ce_noinfo_show, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#3166: FILE: drivers/edac/edac_mc_sysfs.c:719:
+MCIDEV_ATTR(ue_count, S_IRUGO, mci_ue_count_show, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#3167: FILE: drivers/edac/edac_mc_sysfs.c:720:
+MCIDEV_ATTR(ce_count, S_IRUGO, mci_ce_count_show, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#3172: FILE: drivers/edac/edac_mc_sysfs.c:723:
+MCIDEV_ATTR(sdram_scrub_rate, S_IRUGO | S_IWUSR,

WARNING:INDENTED_LABEL: labels should not be indented
#3221: FILE: drivers/edac/edac_mc_sysfs.c:814:
+      fail1:

WARNING:INDENTED_LABEL: labels should not be indented
#3231: FILE: drivers/edac/edac_mc_sysfs.c:823:
+      fail0:

WARNING:INDENTED_LABEL: labels should not be indented
#3306: FILE: drivers/edac/edac_module.c:184:
+      error_mem:

WARNING:INDENTED_LABEL: labels should not be indented
#3309: FILE: drivers/edac/edac_module.c:186:
+      error_sysfs:

WARNING:INDENTED_LABEL: labels should not be indented
#3312: FILE: drivers/edac/edac_module.c:188:
+      error:

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3340: FILE: drivers/edac/edac_module.h:43:
+				    unsigned msec);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3347: FILE: drivers/edac/edac_module.h:45:
+extern void edac_device_reset_delay_period(struct edac_device_ctl_info

CHECK:SPACING: No space is necessary after a cast
#3393: FILE: drivers/edac/edac_pci.c:69:
+	snprintf(pci->name, strlen(edac_pci_name) + 1, "%s", edac_pci_name);

WARNING:INDENTED_LABEL: labels should not be indented
#3424: FILE: drivers/edac/edac_pci.c:143:
+      fail0:

WARNING:INDENTED_LABEL: labels should not be indented
#3435: FILE: drivers/edac/edac_pci.c:150:
+      fail1:

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pci->edac_check"
#3476: FILE: drivers/edac/edac_pci.c:231:
+	    (pci->edac_check != NULL) && (edac_pci_get_check_errors()))

WARNING:SPLIT_STRING: quoted string split across lines
#3534: FILE: drivers/edac/edac_pci.c:331:
+			"Giving out device to module '%s' controller '%s':"
+			" DEV '%s' (%s)\n",

WARNING:INDENTED_LABEL: labels should not be indented
#3543: FILE: drivers/edac/edac_pci.c:339:
+      fail1:

WARNING:INDENTED_LABEL: labels should not be indented
#3546: FILE: drivers/edac/edac_pci.c:341:
+      fail0:

WARNING:SPACING: missing space after return type
#3660: FILE: drivers/edac/edac_pci_sysfs.c:86:
+	 ssize_t(*show) (struct edac_pci_ctl_info *, char *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#3660: FILE: drivers/edac/edac_pci_sysfs.c:86:
+	 ssize_t(*show) (struct edac_pci_ctl_info *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct edac_pci_ctl_info *' should also have an identifier name
#3660: FILE: drivers/edac/edac_pci_sysfs.c:86:
+	 ssize_t(*show) (struct edac_pci_ctl_info *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#3660: FILE: drivers/edac/edac_pci_sysfs.c:86:
+	 ssize_t(*show) (struct edac_pci_ctl_info *, char *);

WARNING:SPACING: missing space after return type
#3661: FILE: drivers/edac/edac_pci_sysfs.c:87:
+	 ssize_t(*store) (struct edac_pci_ctl_info *, const char *, size_t);

WARNING:SPACING: Unnecessary space before function pointer arguments
#3661: FILE: drivers/edac/edac_pci_sysfs.c:87:
+	 ssize_t(*store) (struct edac_pci_ctl_info *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct edac_pci_ctl_info *' should also have an identifier name
#3661: FILE: drivers/edac/edac_pci_sysfs.c:87:
+	 ssize_t(*store) (struct edac_pci_ctl_info *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#3661: FILE: drivers/edac/edac_pci_sysfs.c:87:
+	 ssize_t(*store) (struct edac_pci_ctl_info *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#3661: FILE: drivers/edac/edac_pci_sysfs.c:87:
+	 ssize_t(*store) (struct edac_pci_ctl_info *, const char *, size_t);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#3732: FILE: drivers/edac/edac_pci_sysfs.c:190:
+		*value = simple_strtoul(buffer, NULL, 0);

WARNING:SPACING: missing space after return type
#3742: FILE: drivers/edac/edac_pci_sysfs.c:198:
+	 ssize_t(*show) (void *, char *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#3742: FILE: drivers/edac/edac_pci_sysfs.c:198:
+	 ssize_t(*show) (void *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#3742: FILE: drivers/edac/edac_pci_sysfs.c:198:
+	 ssize_t(*show) (void *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#3742: FILE: drivers/edac/edac_pci_sysfs.c:198:
+	 ssize_t(*show) (void *, char *);

WARNING:SPACING: missing space after return type
#3743: FILE: drivers/edac/edac_pci_sysfs.c:199:
+	 ssize_t(*store) (void *, const char *, size_t);

WARNING:SPACING: Unnecessary space before function pointer arguments
#3743: FILE: drivers/edac/edac_pci_sysfs.c:199:
+	 ssize_t(*store) (void *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#3743: FILE: drivers/edac/edac_pci_sysfs.c:199:
+	 ssize_t(*store) (void *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#3743: FILE: drivers/edac/edac_pci_sysfs.c:199:
+	 ssize_t(*store) (void *, const char *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#3743: FILE: drivers/edac/edac_pci_sysfs.c:199:
+	 ssize_t(*store) (void *, const char *, size_t);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#3796: FILE: drivers/edac/edac_pci_sysfs.c:248:
+EDAC_PCI_ATTR(check_pci_errors, S_IRUGO | S_IWUSR, edac_pci_int_show,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#3798: FILE: drivers/edac/edac_pci_sysfs.c:250:
+EDAC_PCI_ATTR(edac_pci_log_pe, S_IRUGO | S_IWUSR, edac_pci_int_show,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#3800: FILE: drivers/edac/edac_pci_sysfs.c:252:
+EDAC_PCI_ATTR(edac_pci_log_npe, S_IRUGO | S_IWUSR, edac_pci_int_show,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#3802: FILE: drivers/edac/edac_pci_sysfs.c:254:
+EDAC_PCI_ATTR(edac_pci_panic_on_pe, S_IRUGO | S_IWUSR,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3838: FILE: drivers/edac/edac_pci_sysfs.c:363:
+	err = sysfs_create_link(edac_kobj, &pci->dev->kobj,
 	if (err) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#3859: FILE: drivers/edac/edac_pci_sysfs.c:417:
+typedef void (*pci_parity_check_fn_t) (struct pci_dev * dev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3915: FILE: drivers/edac/edac_pci_sysfs.c:478:
+	debugf2("PCI HEADER TYPE= 0x%02x %s\n", header_type,
 

WARNING:SPLIT_STRING: quoted string split across lines
#3930: FILE: drivers/edac/edac_pci_sysfs.c:489:
 				edac_printk(KERN_CRIT, EDAC_PCI, "Bridge "
+					    "Signaled System Error on %s\n",

WARNING:SPLIT_STRING: quoted string split across lines
#3939: FILE: drivers/edac/edac_pci_sysfs.c:496:
 				edac_printk(KERN_CRIT, EDAC_PCI, "Bridge "
+					    "Master Data Parity Error on "

WARNING:SPLIT_STRING: quoted string split across lines
#3940: FILE: drivers/edac/edac_pci_sysfs.c:497:
+					    "Master Data Parity Error on "
+					    "%s\n", pci_name(dev));

WARNING:SPLIT_STRING: quoted string split across lines
#3949: FILE: drivers/edac/edac_pci_sysfs.c:504:
 				edac_printk(KERN_CRIT, EDAC_PCI, "Bridge "
+					    "Detected Parity Error on %s\n",

WARNING:BRACES: braces {} are not necessary for single statement blocks
#3959: FILE: drivers/edac/edac_pci_sysfs.c:526:
+	while ((dev = pci_get_device(PCI_ANY_ID, PCI_ANY_ID, dev)) != NULL) {
 		fn(dev);
 	}

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000423245.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 12 errors, 197 warnings, 45 checks, 3689 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000423245.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
