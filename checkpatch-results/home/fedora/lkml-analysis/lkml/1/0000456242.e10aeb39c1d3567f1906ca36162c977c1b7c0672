CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#43: FILE: fs/ext3/inode.c:1159:
+static int ext3_write_failure(struct file *file, struct page *page,
 				unsigned from, unsigned to)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#53: FILE: fs/ext3/inode.c:1212:
+static int ext3_write_begin(struct file *file, struct address_space *mapping,
+				loff_t pos, unsigned len, int intr,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#53: FILE: fs/ext3/inode.c:1212:
+				loff_t pos, unsigned len, int intr,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#65: FILE: fs/ext3/inode.c:1222:
+	unsigned start, end;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#85: FILE: fs/ext3/inode.c:1238:
+	ret = block_write_begin(file, mapping, pos, len, intr, pagep, fsdata,
+							ext3_get_block);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#109: FILE: fs/ext3/inode.c:1261:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#134: FILE: fs/ext3/inode.c:1288:
+static int ext3_ordered_write_end(struct file *file,
+				struct address_space *mapping,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#135: FILE: fs/ext3/inode.c:1289:
+				loff_t pos, unsigned len, unsigned copied,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#135: FILE: fs/ext3/inode.c:1289:
+				loff_t pos, unsigned len, unsigned copied,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#141: FILE: fs/ext3/inode.c:1294:
+	unsigned from, to;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#178: FILE: fs/ext3/inode.c:1325:
+static int ext3_writeback_write_end(struct file *file,
+				struct address_space *mapping,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#179: FILE: fs/ext3/inode.c:1326:
+				loff_t pos, unsigned len, unsigned copied,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#179: FILE: fs/ext3/inode.c:1326:
+				loff_t pos, unsigned len, unsigned copied,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: fs/ext3/inode.c:1349:
+static int ext3_journalled_write_end(struct file *file,
+				struct address_space *mapping,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#212: FILE: fs/ext3/inode.c:1350:
+				loff_t pos, unsigned len, unsigned copied,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#212: FILE: fs/ext3/inode.c:1350:
+				loff_t pos, unsigned len, unsigned copied,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#221: FILE: fs/ext3/inode.c:1357:
+	unsigned from, to;

CHECK:BRACES: braces {} should be used on all arms of this statement
#231: FILE: fs/ext3/inode.c:1363:
+		if (PageUptodate(page))
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#233: FILE: fs/ext3/inode.c:1365:
+		else {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#253: FILE: fs/ext3/inode.c:1382:
+	if (pos+copied > inode->i_size)
 	       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#254: FILE: fs/ext3/inode.c:1383:
+		i_size_write(inode, pos+copied);
 		                       ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000456242.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 10 warnings, 11 checks, 267 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000456242.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
