WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#39: FILE: Makefile:4:
+EXTRAVERSION = .16
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#210: FILE: arch/um/drivers/pcap_user.c:54:
+		pri->compiled = uml_kmalloc(sizeof(struct bpf_program),
 					UM_GFP_KERNEL);

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __used over __attribute__((__used__))
#296: FILE: arch/um/include/init.h:58:
+# define __used			__attribute__((__used__))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#313: FILE: arch/um/include/os.h:301:
+extern unsigned long os_get_top_address(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#326: FILE: arch/um/include/process.h:11:
+extern void sig_handler(int sig, struct sigcontext *sc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#327: FILE: arch/um/include/process.h:12:
+extern void alarm_handler(int sig, struct sigcontext *sc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#345: FILE: arch/um/include/um_malloc.h:11:
+extern void *uml_kmalloc(int size, int flags);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#353: FILE: arch/um/include/um_malloc.h:19:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#415: FILE: arch/um/kernel/um_arch.c:351:
+	stack = (unsigned long) argv;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'stop_ptraced_child', this function's name, in a string
#537: FILE: arch/um/os-Linux/start_up.c:126:
+		perror("stop_ptraced_child : ptrace failed");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'check_sysemu', this function's name, in a string
#548: FILE: arch/um/os-Linux/start_up.c:208:
+		fatal("check_sysemu : expected SIGTRAP, got status = %d\n",

WARNING:SPLIT_STRING: quoted string split across lines
#561: FILE: arch/um/os-Linux/start_up.c:252:
+				non_fatal("check_ptrace : SYSEMU_SINGLESTEP "
+					  "doesn't singlestep");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:BRACES: Unbalanced braces around else statement
#574: FILE: arch/um/os-Linux/start_up.c:264:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#576: FILE: arch/um/os-Linux/start_up.c:266:
+			non_fatal("check_ptrace : expected SIGTRAP or "
+				  "(SIGTRAP | 0x80), got status = %d\n",

WARNING:SPLIT_STRING: quoted string split across lines
#632: FILE: arch/um/os-Linux/sys-i386/task_size.c:107:
+		fprintf(stderr, "Unable to determine bottom of address "
+			"space.\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#664: FILE: arch/um/os-Linux/sys-x86_64/task_size.c:1:
+unsigned long os_get_top_address(unsigned long shift)

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'last_tick != 0'
#726: FILE: arch/um/os-Linux/time.c:110:
+	if ((last_tick != 0) && (this_tick < last_tick))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'this_tick < last_tick'
#726: FILE: arch/um/os-Linux/time.c:110:
+	if ((last_tick != 0) && (this_tick < last_tick))

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#821: FILE: arch/x86/boot/boot.h:254:
+};
+extern struct cpu_features cpu;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#959: FILE: drivers/misc/acer-wmi.c:762:
+			if (cap == ACER_CAP_WIRELESS ||
+				cap == ACER_CAP_BLUETOOTH) {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1108: FILE: drivers/scsi/qla2xxx/qla_gbl.h:71:
+extern void qla2x00_abort_fcport_cmds(fc_port_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'fc_port_t *' should also have an identifier name
#1108: FILE: drivers/scsi/qla2xxx/qla_gbl.h:71:
+extern void qla2x00_abort_fcport_cmds(fc_port_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1157: FILE: drivers/scsi/qla2xxx/qla_init.c:2230:
+	fcport->rport = rport = fc_remote_port_add(ha->host, 0, &rport_ids);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1218: FILE: drivers/scsi/qla2xxx/qla_os.c:640:
+			DEBUG2(qla_printk(KERN_WARNING, ha,
+			    "Abort failed --  %lx\n", sp->cmd->serial_number));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1223: FILE: drivers/scsi/qla2xxx/qla_os.c:645:
+				DEBUG2(qla_printk(KERN_WARNING, ha,
+				    "Abort failed while waiting --  %lx\n",

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1226: FILE: drivers/scsi/qla2xxx/qla_os.c:648:
+
+		}

CHECK:BRACES: Unbalanced braces around else statement
#1270: FILE: drivers/scsi/qla2xxx/qla_os.c:1932:
+	} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1286: FILE: drivers/scsi/scsi_transport_spi.c:364:
+ * so we return 1 to terminate the iteration when we find it */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: space prohibited after that open parenthesis '('
#1456: FILE: drivers/usb/storage/unusual_devs.h:360:
+UNUSUAL_DEV(  0x04b0, 0x0411, 0x0100, 0x0111,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1457: FILE: drivers/usb/storage/unusual_devs.h:361:
+UNUSUAL_DEV(  0x04b0, 0x0411, 0x0100, 0x0111,
 		"NIKON",

ERROR:SPACING: space prohibited after that open parenthesis '('
#1464: FILE: drivers/usb/storage/unusual_devs.h:367:
+UNUSUAL_DEV(  0x04b0, 0x0413, 0x0110, 0x0111,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1465: FILE: drivers/usb/storage/unusual_devs.h:368:
+UNUSUAL_DEV(  0x04b0, 0x0413, 0x0110, 0x0111,
 		"NIKON",

ERROR:SPACING: space prohibited after that open parenthesis '('
#1473: FILE: drivers/usb/storage/unusual_devs.h:1168:
+UNUSUAL_DEV(  0x07c4, 0xa4a5, 0x0000, 0xffff,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1474: FILE: drivers/usb/storage/unusual_devs.h:1169:
+UNUSUAL_DEV(  0x07c4, 0xa4a5, 0x0000, 0xffff,
+		"Simple Tech/Datafab",

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1477: FILE: drivers/usb/storage/unusual_devs.h:1172:
+		US_FL_IGNORE_RESIDUE ),

ERROR:SPACING: space prohibited after that open parenthesis '('
#1487: FILE: drivers/usb/storage/unusual_devs.h:1716:
+UNUSUAL_DEV(  0x4102, 0x1020, 0x0100,  0x0100,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1488: FILE: drivers/usb/storage/unusual_devs.h:1717:
+UNUSUAL_DEV(  0x4102, 0x1020, 0x0100,  0x0100,
+		"iRiver",

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1491: FILE: drivers/usb/storage/unusual_devs.h:1720:
+		US_FL_IGNORE_RESIDUE ),

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1555: FILE: fs/cifs/asn1.c:403:
+	if (size < 2 || size > UINT_MAX/sizeof(unsigned long))
 	                               ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1643: FILE: include/video/radeon.h:530:
+#define RB2D_DC_FLUSH_2D			   (1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#1644: FILE: include/video/radeon.h:531:
+#define RB2D_DC_FREE_2D				   (1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1654: FILE: include/video/radeon.h:746:
+#define WAIT_DMA_GUI_IDLE			   (1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#1655: FILE: include/video/radeon.h:747:
+#define WAIT_2D_IDLECLEAN			   (1 << 16)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1861: FILE: mm/memory.c:2630:
+		/*
+		   SUS require strange return value to mlock

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1898: FILE: net/dccp/proto.c:481:
+	/*
+	 * rfc4340: 6.1. Change Options

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000237463.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 13 warnings, 27 checks, 1493 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000237463.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
