WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#53: FILE: drivers/input/joystick/Kconfig:285:
+config JOYSTICK_AD7142
+	tristate "Analog Devices AD7142 Joystick support"
+	depends on I2C
+	---help---
+	  Say Y here if you want to support an AD7142 joystick
+
+	  To compile this driver as a module, choose M here: the
+	  module will be called ad7142.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#76: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#81: FILE: drivers/input/joystick/ad7142.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#201: FILE: drivers/input/joystick/ad7142.c:121:
+static int ad7142_i2c_write(struct i2c_client *client, unsigned short offset,
+			const unsigned short *data, unsigned int len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#231: FILE: drivers/input/joystick/ad7142.c:151:
+static int ad7142_i2c_read(struct i2c_client *client, unsigned short offset,
+		unsigned short *data, unsigned int len)

WARNING:LINE_SPACING: Missing a blank line after declarations
#260: FILE: drivers/input/joystick/ad7142.c:180:
+		unsigned short temp;
+		temp = block_data[2 * i];

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#286: FILE: drivers/input/joystick/ad7142.c:206:
+		input_report_key(input, BTN_BASE4,
+					((irqno_low & 0x0002) >> 1));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#290: FILE: drivers/input/joystick/ad7142.c:210:
+		input_report_key(input, KEY_UP,
+					((irqno_low & 0x0004) >> 2));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#294: FILE: drivers/input/joystick/ad7142.c:214:
+		input_report_key(input, KEY_RIGHT,
+					((irqno_low & 0x0008) >> 3));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#307: FILE: drivers/input/joystick/ad7142.c:227:
+		input_report_key(input, BTN_BASE3,
+					((irqno_high & 0x0002) >> 1));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#311: FILE: drivers/input/joystick/ad7142.c:231:
+		input_report_key(input, KEY_DOWN,
+					((irqno_high & 0x0004) >> 2));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#315: FILE: drivers/input/joystick/ad7142.c:235:
+		input_report_key(input, KEY_LEFT,
+					((irqno_high & 0x0008) >> 3));

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*data)...) over kzalloc(sizeof(struct ad7142_data)...)
#416: FILE: drivers/input/joystick/ad7142.c:336:
+	data = kzalloc(sizeof(struct ad7142_data), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:BRACES: braces {} should be used on all arms of this statement
#426: FILE: drivers/input/joystick/ad7142.c:346:
+	if (client->irq > 0) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#428: FILE: drivers/input/joystick/ad7142.c:348:
+		rc = request_irq(client->irq, ad7142_interrupt,
+				IRQF_TRIGGER_LOW, "ad7142_joystick", data);

CHECK:BRACES: Unbalanced braces around else statement
#434: FILE: drivers/input/joystick/ad7142.c:354:
+	} else

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000302787.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 12 checks, 467 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000302787.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
