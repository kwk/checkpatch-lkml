WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#53: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#58: FILE: drivers/regulator/wm831x-isink.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#114: FILE: drivers/regulator/wm831x-isink.c:57:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#132: FILE: drivers/regulator/wm831x-isink.c:75:
+
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#160: FILE: drivers/regulator/wm831x-isink.c:103:
+		int val = wm831x_isinkv_values[i];
+		if (min_uA >= val && val <= max_uA) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct regulator_ops should normally be const
#187: FILE: drivers/regulator/wm831x-isink.c:130:
+static struct regulator_ops wm831x_isink_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#206: FILE: drivers/regulator/wm831x-isink.c:149:
+
+

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#207: FILE: drivers/regulator/wm831x-isink.c:150:
+static __devinit int wm831x_isink_probe(struct platform_device *pdev)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pdata->isink[id]"
#218: FILE: drivers/regulator/wm831x-isink.c:161:
+	if (pdata->isink[id] == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*isink)...) over kzalloc(sizeof(struct wm831x_isink)...)
#221: FILE: drivers/regulator/wm831x-isink.c:164:
+	isink = kzalloc(sizeof(struct wm831x_isink), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!isink"
#222: FILE: drivers/regulator/wm831x-isink.c:165:
+	if (isink == NULL) {

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#223: FILE: drivers/regulator/wm831x-isink.c:166:
+	if (isink == NULL) {
+		dev_err(&pdev->dev, "Unable to allocate private data\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!res"
#228: FILE: drivers/regulator/wm831x-isink.c:171:
+	if (res == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: drivers/regulator/wm831x-isink.c:189:
+	isink->regulator = regulator_register(&isink->desc, &pdev->dev,
+					     pdata->isink[id], isink);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#275: FILE: drivers/regulator/wm831x-isink.c:218:
+static __devexit int wm831x_isink_remove(struct platform_device *pdev)

WARNING:LINE_SPACING: Missing a blank line after declarations
#299: FILE: drivers/regulator/wm831x-isink.c:242:
+	int ret;
+	ret = platform_driver_register(&wm831x_isink_driver);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000092177.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 8 checks, 267 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000092177.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
