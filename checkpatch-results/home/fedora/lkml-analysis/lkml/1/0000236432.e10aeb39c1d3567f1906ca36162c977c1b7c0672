WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#94: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#99: FILE: drivers/input/keyboard/poskbd.c:1:
+/**

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'Sepecification' may be misspelled - perhaps 'Specification'?
#113: FILE: drivers/input/keyboard/poskbd.c:15:
+ * UnifiedPOS Sepecification: http://www.nrf-arts.org/UnifiedPOS
               ^^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#142: FILE: drivers/input/keyboard/poskbd.c:44:
+#include <asm/uaccess.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#155: FILE: drivers/input/keyboard/poskbd.c:57:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#157: FILE: drivers/input/keyboard/poskbd.c:59:
+#define dbg(fmt, args...) \
+	if (debug >= 2) { printk(KERN_DEBUG "%s: " fmt, __func__, ##args); }

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#158: FILE: drivers/input/keyboard/poskbd.c:60:
+	if (debug >= 2) { printk(KERN_DEBUG "%s: " fmt, __func__, ##args); }

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#158: FILE: drivers/input/keyboard/poskbd.c:60:
+	if (debug >= 2) { printk(KERN_DEBUG "%s: " fmt, __func__, ##args); }

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#158: FILE: drivers/input/keyboard/poskbd.c:60:
+	if (debug >= 2) { printk(KERN_DEBUG "%s: " fmt, __func__, ##args); }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#159: FILE: drivers/input/keyboard/poskbd.c:61:
+#define verbose(fmt, args...) \
+	if (debug) { printk(KERN_INFO "%s: " fmt, __func__, ##args); }

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#160: FILE: drivers/input/keyboard/poskbd.c:62:
+	if (debug) { printk(KERN_INFO "%s: " fmt, __func__, ##args); }

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#160: FILE: drivers/input/keyboard/poskbd.c:62:
+	if (debug) { printk(KERN_INFO "%s: " fmt, __func__, ##args); }

WARNING:BRACES: braces {} are not necessary for single statement blocks
#160: FILE: drivers/input/keyboard/poskbd.c:62:
+	if (debug) { printk(KERN_INFO "%s: " fmt, __func__, ##args); }

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#161: FILE: drivers/input/keyboard/poskbd.c:63:
+#define warning(fmt, args...) \
+	printk(KERN_WARNING "%s(%s): " fmt, DRIVER_NAME, __func__, ##args);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#162: FILE: drivers/input/keyboard/poskbd.c:64:
+	printk(KERN_WARNING "%s(%s): " fmt, DRIVER_NAME, __func__, ##args);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#164: FILE: drivers/input/keyboard/poskbd.c:66:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#169: FILE: drivers/input/keyboard/poskbd.c:71:
+static irqreturn_t poskbd_interrupt(struct serio *serio,
+	unsigned char scancode, unsigned int flags);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#171: FILE: drivers/input/keyboard/poskbd.c:73:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#176: FILE: drivers/input/keyboard/poskbd.c:78:
+
+

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#182: FILE: drivers/input/keyboard/poskbd.c:83:
size_t, loff_t *);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#183: FILE: drivers/input/keyboard/poskbd.c:84:
+static ssize_t poskbd_fs_write(struct file *, const char __user *,
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#184: FILE: drivers/input/keyboard/poskbd.c:85:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#195: FILE: drivers/input/keyboard/poskbd.c:96:
+
+

WARNING:CONST_STRUCT: struct file_operations should normally be const
#207: FILE: drivers/input/keyboard/poskbd.c:108:
+static struct file_operations poskbd_fs = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#216: FILE: drivers/input/keyboard/poskbd.c:117:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: drivers/input/keyboard/poskbd.c:119:
+        .minor^I= MISC_DYNAMIC_MINOR,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: drivers/input/keyboard/poskbd.c:119:
+        .minor^I= MISC_DYNAMIC_MINOR,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: drivers/input/keyboard/poskbd.c:120:
+        .name^I= POSKBD_DEV,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: drivers/input/keyboard/poskbd.c:120:
+        .name^I= POSKBD_DEV,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: drivers/input/keyboard/poskbd.c:121:
+        .fops^I= &poskbd_fs,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: drivers/input/keyboard/poskbd.c:121:
+        .fops^I= &poskbd_fs,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#223: FILE: drivers/input/keyboard/poskbd.c:124:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#235: FILE: drivers/input/keyboard/poskbd.c:136:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#253: FILE: drivers/input/keyboard/poskbd.c:154:
+
+

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#255: FILE: drivers/input/keyboard/poskbd.c:156:
+static int debug = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#268: FILE: drivers/input/keyboard/poskbd.c:169:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#276: FILE: drivers/input/keyboard/poskbd.c:177:
+	int ret = 0;
+	if (poskbd_status->hw_port) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#283: FILE: drivers/input/keyboard/poskbd.c:184:
+	if (!ret) {
+		poskbd_status->hw_port = port;
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#292: FILE: drivers/input/keyboard/poskbd.c:192:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#305: FILE: drivers/input/keyboard/poskbd.c:205:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#310: FILE: drivers/input/keyboard/poskbd.c:210:
+static irqreturn_t poskbd_interrupt(struct serio *port,
+	unsigned char scancode, unsigned int flags)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*data)...) over kzalloc(sizeof(struct scancode_buf)...)
#316: FILE: drivers/input/keyboard/poskbd.c:216:
+		data = kzalloc(sizeof(struct scancode_buf), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around data->list
#318: FILE: drivers/input/keyboard/poskbd.c:218:
+		list_add_tail(&(data->list), &poskbd_status->data->list);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around poskbd_status->wq
#322: FILE: drivers/input/keyboard/poskbd.c:222:
+		wake_up(&(poskbd_status->wq));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#330: FILE: drivers/input/keyboard/poskbd.c:230:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#335: FILE: drivers/input/keyboard/poskbd.c:235:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#354: FILE: drivers/input/keyboard/poskbd.c:254:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#364: FILE: drivers/input/keyboard/poskbd.c:264:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#370: FILE: drivers/input/keyboard/poskbd.c:269:
+static ssize_t poskbd_fs_read(struct file *file, char __user *data,
+{

CHECK:SPACING: No space is necessary after a cast
#377: FILE: drivers/input/keyboard/poskbd.c:276:
+	verbose("userspace wants %d/%d of data\n", (int) (size - cnt), (int) size);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#381: FILE: drivers/input/keyboard/poskbd.c:279:
+		ret = wait_event_interruptible(poskbd_status->wq,
+		if (ret) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around buf->scancode
#393: FILE: drivers/input/keyboard/poskbd.c:291:
+			if (copy_to_user((data + cnt), &(buf->scancode), sizeof(unsigned

CHECK:SPACING: No space is necessary after a cast
#406: FILE: drivers/input/keyboard/poskbd.c:303:
+	verbose("sent %d bytes to userspace\n", (int) cnt);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#410: FILE: drivers/input/keyboard/poskbd.c:307:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#431: FILE: drivers/input/keyboard/poskbd.c:327:
+^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#440: FILE: drivers/input/keyboard/poskbd.c:336:
+
+

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*poskbd_status)...) over kzalloc(sizeof(struct poskbd_status)...)
#448: FILE: drivers/input/keyboard/poskbd.c:344:
+	poskbd_status = kzalloc(sizeof(struct poskbd_status), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*poskbd_status->data)...) over kzalloc(sizeof(struct scancode_buf)...)
#454: FILE: drivers/input/keyboard/poskbd.c:350:
+	poskbd_status->data = kzalloc(sizeof(struct scancode_buf), GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#460: FILE: drivers/input/keyboard/poskbd.c:356:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around poskbd_status->data->list
#461: FILE: drivers/input/keyboard/poskbd.c:357:
+	INIT_LIST_HEAD(&(poskbd_status->data->list));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around poskbd_status->wq
#462: FILE: drivers/input/keyboard/poskbd.c:358:
+	init_waitqueue_head(&(poskbd_status->wq));

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*poskbd_status->kbd_port)...) over kzalloc(sizeof(struct serio)...)
#465: FILE: drivers/input/keyboard/poskbd.c:361:
+	poskbd_status->kbd_port = kzalloc(sizeof(struct serio), GFP_KERNEL);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#472: FILE: drivers/input/keyboard/poskbd.c:368:
+^Iposkbd_status->kbd_port->id.type ^I= SERIO_8042_XL;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#477: FILE: drivers/input/keyboard/poskbd.c:372:
+	snprintf(poskbd_status->kbd_port->name,
+	snprintf(poskbd_status->kbd_port->phys,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#478: FILE: drivers/input/keyboard/poskbd.c:372:
+	snprintf(poskbd_status->kbd_port->name,
sizeof(poskbd_status->kbd_port->name), "POSKeyboard");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#479: FILE: drivers/input/keyboard/poskbd.c:373:
+	snprintf(poskbd_status->kbd_port->phys,
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#509: FILE: drivers/input/keyboard/poskbd.c:403:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#518: FILE: drivers/input/keyboard/poskbd.c:412:
+^I$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#524: FILE: drivers/input/keyboard/poskbd.c:418:
+#if 0 /* TODO: does serio_unregister_port() a kfree() on the port? */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000236432.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 13 errors, 18 warnings, 38 checks, 473 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000236432.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
