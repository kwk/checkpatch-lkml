WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
This patch hooks up cpu scheduler with Paul Menage's container infrastructure.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#103: FILE: init/Kconfig:331:
+config FAIR_GROUP_SCHED
+	bool "Fair group scheduler"
+	depends on EXPERIMENTAL
+	select CONTAINERS
+	help
+	  This option enables you to group tasks and control CPU resource
+	  allocation to such groups.
+
+	  Say N if unsure.
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: kernel/sched.c:6276:
+ ^I^I{$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#207: FILE: kernel/sched.c:6276:
+ ^I^I{$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: kernel/sched.c:6276:
+ ^I^I{$

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: kernel/sched.c:6277:
+ ^I^I^Istruct cfs_rq *cfs_rq = &per_cpu(init_cfs_rq, i);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#208: FILE: kernel/sched.c:6277:
+ ^I^I^Istruct cfs_rq *cfs_rq = &per_cpu(init_cfs_rq, i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: kernel/sched.c:6277:
+ ^I^I^Istruct cfs_rq *cfs_rq = &per_cpu(init_cfs_rq, i);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: kernel/sched.c:6278:
+ ^I^I^Istruct sched_entity *se =$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#209: FILE: kernel/sched.c:6278:
+ ^I^I^Istruct sched_entity *se =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: kernel/sched.c:6278:
+ ^I^I^Istruct sched_entity *se =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: kernel/sched.c:6279:
+ ^I^I^I^I^I &per_cpu(init_sched_entity, i);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#210: FILE: kernel/sched.c:6279:
+ ^I^I^I^I^I &per_cpu(init_sched_entity, i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: kernel/sched.c:6279:
+ ^I^I^I^I^I &per_cpu(init_sched_entity, i);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: kernel/sched.c:6281:
+ ^I^I^Iinit_cfs_rq_p[i] = cfs_rq;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#212: FILE: kernel/sched.c:6281:
+ ^I^I^Iinit_cfs_rq_p[i] = cfs_rq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: kernel/sched.c:6281:
+ ^I^I^Iinit_cfs_rq_p[i] = cfs_rq;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: kernel/sched.c:6282:
+ ^I^I^Iinit_cfs_rq(cfs_rq, rq);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#213: FILE: kernel/sched.c:6282:
+ ^I^I^Iinit_cfs_rq(cfs_rq, rq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: kernel/sched.c:6282:
+ ^I^I^Iinit_cfs_rq(cfs_rq, rq);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: kernel/sched.c:6283:
+ ^I^I^Icfs_rq->tg = &init_task_grp;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#214: FILE: kernel/sched.c:6283:
+ ^I^I^Icfs_rq->tg = &init_task_grp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: kernel/sched.c:6283:
+ ^I^I^Icfs_rq->tg = &init_task_grp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: kernel/sched.c:6284:
+ ^I^I^Ilist_add(&cfs_rq->leaf_cfs_rq_list,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#215: FILE: kernel/sched.c:6284:
+ ^I^I^Ilist_add(&cfs_rq->leaf_cfs_rq_list,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: kernel/sched.c:6284:
+ ^I^I^Ilist_add(&cfs_rq->leaf_cfs_rq_list,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#216: FILE: kernel/sched.c:6285:
+ 			list_add(&cfs_rq->leaf_cfs_rq_list,
+							 &rq->leaf_cfs_rq_list);

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: kernel/sched.c:6287:
+ ^I^I^Iinit_sched_entity_p[i] = se;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#218: FILE: kernel/sched.c:6287:
+ ^I^I^Iinit_sched_entity_p[i] = se;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: kernel/sched.c:6287:
+ ^I^I^Iinit_sched_entity_p[i] = se;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: kernel/sched.c:6288:
+ ^I^I^Ise->cfs_rq = &rq->cfs;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#219: FILE: kernel/sched.c:6288:
+ ^I^I^Ise->cfs_rq = &rq->cfs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: kernel/sched.c:6288:
+ ^I^I^Ise->cfs_rq = &rq->cfs;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: kernel/sched.c:6289:
+ ^I^I^Ise->my_q = cfs_rq;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#220: FILE: kernel/sched.c:6289:
+ ^I^I^Ise->my_q = cfs_rq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: kernel/sched.c:6289:
+ ^I^I^Ise->my_q = cfs_rq;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: kernel/sched.c:6290:
+ ^I^I^Ise->load.weight = NICE_0_LOAD;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#221: FILE: kernel/sched.c:6290:
+ ^I^I^Ise->load.weight = NICE_0_LOAD;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: kernel/sched.c:6290:
+ ^I^I^Ise->load.weight = NICE_0_LOAD;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: kernel/sched.c:6291:
+ ^I^I^Ise->parent = NULL;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#222: FILE: kernel/sched.c:6291:
+ ^I^I^Ise->parent = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: kernel/sched.c:6291:
+ ^I^I^Ise->parent = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: kernel/sched.c:6292:
+ ^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#223: FILE: kernel/sched.c:6292:
+ ^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: kernel/sched.c:6292:
+ ^I^I}$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#243: FILE: kernel/sched.c:6489:
+static int sched_create_group(struct container_subsys *ss,
+				struct container *cont)

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#265: FILE: kernel/sched.c:6511:
+	tg->cfs_rq = kzalloc(sizeof(cfs_rq) * num_possible_cpus(), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#268: FILE: kernel/sched.c:6514:
+	tg->se = kzalloc(sizeof(se) * num_possible_cpus(), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc_node(sizeof(*cfs_rq)...) over kmalloc_node(sizeof(struct cfs_rq)...)
#275: FILE: kernel/sched.c:6521:
+		cfs_rq = kmalloc_node(sizeof(struct cfs_rq), GFP_KERNEL,

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#276: FILE: kernel/sched.c:6522:
+		cfs_rq = kmalloc_node(sizeof(struct cfs_rq), GFP_KERNEL,
+							 cpu_to_node(i));

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc_node(sizeof(*se)...) over kmalloc_node(sizeof(struct sched_entity)...)
#280: FILE: kernel/sched.c:6526:
+		se = kmalloc_node(sizeof(struct sched_entity), GFP_KERNEL,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#281: FILE: kernel/sched.c:6527:
+		se = kmalloc_node(sizeof(struct sched_entity), GFP_KERNEL,
+							cpu_to_node(i));

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#314: FILE: kernel/sched.c:6560:
+	if (tg->cfs_rq)
+		kfree(tg->cfs_rq);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#316: FILE: kernel/sched.c:6562:
+	if (tg->se)
+		kfree(tg->se);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#318: FILE: kernel/sched.c:6564:
+	if (tg)
+		kfree(tg);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#323: FILE: kernel/sched.c:6569:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#326: FILE: kernel/sched.c:6572:
+static void sched_destroy_group(struct container_subsys *ss,
+					struct container *cont)

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#339: FILE: kernel/sched.c:6585:
+	synchronize_sched();

Usage of a deprecated RCU API is detected.  It is recommended to replace
old flavourful RCU APIs by their new vanilla-RCU counterparts.

The full list of available RCU APIs can be viewed from the kernel docs.

See: https://www.kernel.org/doc/html/latest/RCU/whatisRCU.html#full-list-of-rcu-apis

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#355: FILE: kernel/sched.c:6601:
+static void sched_move_task(struct container_subsys *ss, struct container *cont,
+			struct container *old_cont, struct task_struct *tsk)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#374: FILE: kernel/sched.c:6620:
+	if (on_rq)
+		 activate_task(rq, tsk, 0);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#383: FILE: kernel/sched.c:6629:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000414211.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 14 errors, 37 warnings, 10 checks, 311 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000414211.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
