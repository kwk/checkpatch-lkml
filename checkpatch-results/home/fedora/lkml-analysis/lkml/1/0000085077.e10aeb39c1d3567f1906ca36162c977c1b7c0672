WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#45: FILE: drivers/misc/jtag.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#46: FILE: drivers/misc/jtag.c:2:
+ * drivers/misc/jtag.c - More infos in include/linux/jtag.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#61: FILE: drivers/misc/jtag.c:17:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#62: FILE: drivers/misc/jtag.c:18:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#89: FILE: drivers/misc/jtag.c:45:
+	struct mutex lock;

CHECK:CAMELCASE: Avoid CamelCase: <pulseTMS0>
#98: FILE: drivers/misc/jtag.c:54:
+static void pulseTMS0(const struct jtag_platdata *pdata)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <pulseTMS1>
#105: FILE: drivers/misc/jtag.c:61:
+static void pulseTMS1(const struct jtag_platdata *pdata)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#128: FILE: drivers/misc/jtag.c:84:
+static void jtag_output(const struct jtag_platdata *pdata,
+	const unsigned long *data, unsigned int bitlen, int notlast)

WARNING:LINE_SPACING: Missing a blank line after declarations
#132: FILE: drivers/misc/jtag.c:88:
+	unsigned long mask;
+	gpio_set_value(pdata->pin_tms, 0);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bitlen == 1'
#137: FILE: drivers/misc/jtag.c:93:
+			if ((bitlen == 1) && !notlast)

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#145: FILE: drivers/misc/jtag.c:101:
+static int jtag_ioctl(struct inode *inode, struct file *filp, unsigned int cmd,
                                                         ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#146: FILE: drivers/misc/jtag.c:102:
+static int jtag_ioctl(struct inode *inode, struct file *filp, unsigned int cmd,
+	unsigned long arg)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#157: FILE: drivers/misc/jtag.c:113:
+	switch (cmd) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#166: FILE: drivers/misc/jtag.c:122:
+		if ((((struct jtag_rd_id *)arg)->device < 0) ||
+			(((struct jtag_rd_id *)arg)->device >= devices)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#177: FILE: drivers/misc/jtag.c:133:
+			unsigned long id = 0;
+			pulseTMS0(pdata);

WARNING:LINE_SPACING: Missing a blank line after declarations
#180: FILE: drivers/misc/jtag.c:136:
+				unsigned long mask;
+				for (id = 1, mask = 0x00000002; (mask != 0);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'jcmd->device >= 0'
#198: FILE: drivers/misc/jtag.c:154:
+		if ((jcmd->device >= 0) && (jcmd->device < devices))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'jcmd->device < devices'
#198: FILE: drivers/misc/jtag.c:154:
+		if ((jcmd->device >= 0) && (jcmd->device < devices))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#211: FILE: drivers/misc/jtag.c:167:
+		/* Writes Instruction Register
+		If device == -1 writes same Instruction Register in all devices

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#213: FILE: drivers/misc/jtag.c:169:
+		 and loads BYPASS instruction in all others */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'jcmd->device >= devices'
#214: FILE: drivers/misc/jtag.c:170:
+		if ((jcmd->device < -1) || (jcmd->device >= devices)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'jcmd->device == devices'
#224: FILE: drivers/misc/jtag.c:180:
+			if ((jcmd->device == -1) || (jcmd->device == devices))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#227: FILE: drivers/misc/jtag.c:183:
+				jtag_output(pdata, jcmd->data,
+					info->ir_len[devices], devices);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#231: FILE: drivers/misc/jtag.c:187:
+				jtag_output(pdata, &bypass,
+					info->ir_len[devices], devices);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#239: FILE: drivers/misc/jtag.c:195:
+		/* Writes Data Register of all devices
+		If device == -1 writes same Data Register in all devices

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#241: FILE: drivers/misc/jtag.c:197:
+		 and loads BYPASS instruction in all others */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'jcmd->device >= devices'
#242: FILE: drivers/misc/jtag.c:198:
+		if ((jcmd->device < -1) || (jcmd->device >= devices)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'devices == jcmd->device'
#251: FILE: drivers/misc/jtag.c:207:
+			if ((jcmd->device == -1) || (devices == jcmd->device))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#254: FILE: drivers/misc/jtag.c:210:
+				jtag_output(pdata, jcmd->data, jcmd->bitlen,
+					devices);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'jcmd->device < 0'
#265: FILE: drivers/misc/jtag.c:221:
+		if ((jcmd->device < 0) || (jcmd->device >= devices))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'jcmd->device >= devices'
#265: FILE: drivers/misc/jtag.c:221:
+		if ((jcmd->device < 0) || (jcmd->device >= devices))

CHECK:BRACES: braces {} should be used on all arms of this statement
#265: FILE: drivers/misc/jtag.c:221:
+		if ((jcmd->device < 0) || (jcmd->device >= devices))
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#267: FILE: drivers/misc/jtag.c:223:
+		else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#271: FILE: drivers/misc/jtag.c:227:
+			unsigned long *data = jcmd->data;
+			pulseTMS0(pdata);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#314: FILE: drivers/misc/jtag.c:270:
+static int jtag_open(struct inode *inode, struct file *filp)
                                                        ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#330: FILE: drivers/misc/jtag.c:286:
+		nonseekable_open(inode, filp);
 		                        ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#337: FILE: drivers/misc/jtag.c:293:
+static int jtag_release(struct inode *inode, struct file *filp)
                                                           ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#381: FILE: drivers/misc/jtag.c:337:
+		/* Keep fixed at 1 because some devices in the chain could
+			not use it, to reset chain use jtag_reset() */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#381: FILE: drivers/misc/jtag.c:337:
+			not use it, to reset chain use jtag_reset() */

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*info)...) over kzalloc(sizeof(struct jtag_info)...)
#416: FILE: drivers/misc/jtag.c:372:
+	info = kzalloc(sizeof(struct jtag_info) +

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#419: FILE: drivers/misc/jtag.c:375:
+	if (!info) {
+		dev_err(&pdev->dev, "out of kernel memory\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#459: FILE: drivers/misc/jtag.c:415:
+	struct jtag_info *info = (struct jtag_info *)platform_get_drvdata(pdev);
+	mutex_lock(&device_list_lock);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#480: FILE: drivers/misc/jtag.c:436:
+int __devinit jtag_module_init(void)

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#507: FILE: drivers/misc/Kconfig:239:
+config JTAG
+	tristate "Jtag Bitbang driver"
+	depends on GPIOLIB
+	default n
+	---help---
+	Controls jtag chains connected to I/O pins
+
+	This driver can also be built as a module.  If so, the module
+	  will be called jtag.
+
+	If unsure, say N.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#536: FILE: include/linux/jtag.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#537: FILE: include/linux/jtag.h:2:
+ * include/linux/jtag.h

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#552: FILE: include/linux/jtag.h:17:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#553: FILE: include/linux/jtag.h:18:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#569: FILE: include/linux/jtag.h:33:
JTAG_DR_WR

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#598: FILE: include/linux/jtag.h:62:
+/* arg must point to a jtag_rd_id structure.
+   Fills up the id field with ID of selected device */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#598: FILE: include/linux/jtag.h:62:
+   Fills up the id field with ID of selected device */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#602: FILE: include/linux/jtag.h:66:
+/* arg must point to a struct jtag_cmd.
+   Programs the Instruction Register length of specified device at

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#604: FILE: include/linux/jtag.h:67:
+   *data is ignored. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#608: FILE: include/linux/jtag.h:71:
+/* arg must point to a struct jtag_cmd.
+   Writes *data in the Instruction Register of selected device, and BYPASS

WARNING:TYPO_SPELLING: 'lengthes' may be misspelled - perhaps 'lengths'?
#613: FILE: include/linux/jtag.h:76:
+    Instruction Register's lengthes with JTAG_SET_IR_LENGTH command. */
                            ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#613: FILE: include/linux/jtag.h:76:
+    Instruction Register's lengthes with JTAG_SET_IR_LENGTH command. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#617: FILE: include/linux/jtag.h:80:
+/* arg must point to a struct jtag_cmd.
+   Reads data register of selected device, with length bitlen */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#617: FILE: include/linux/jtag.h:80:
+   Reads data register of selected device, with length bitlen */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#621: FILE: include/linux/jtag.h:84:
+/* arg must point to a struct jtag_cmd.
+   Writes data register of selected device, with length bitlen.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#622: FILE: include/linux/jtag.h:85:
+   If device == -1, writes same data on all devices. */

WARNING:TYPO_SPELLING: 'transfered' may be misspelled - perhaps 'transferred'?
#639: FILE: include/linux/jtag.h:102:
+	unsigned int bitlen; /* Bit length of the register to be transfered */
 	                                                         ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'transfered' may be misspelled - perhaps 'transferred'?
#640: FILE: include/linux/jtag.h:103:
+	unsigned long *data; /* Data to be transfered */
 	                                   ^^^^^^^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000085077.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 35 warnings, 22 checks, 583 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000085077.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
