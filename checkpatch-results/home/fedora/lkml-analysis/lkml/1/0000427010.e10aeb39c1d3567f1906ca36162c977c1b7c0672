WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
> free blocks in UDF (which spilled nice assertion failures I've added in my

WARNING:TYPO_SPELLING: 'cach' may be misspelled - perhaps 'catch'?
#59: 
udf_truncate_tail_extent() when inode is being removed from inode cach
                                                                  ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#137: FILE: fs/udf/truncate.c:89:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#149: FILE: fs/udf/truncate.c:98:
+				printk(KERN_WARNING "udf_truncate_tail_extent():\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#149: FILE: fs/udf/truncate.c:98:
+				printk(KERN_WARNING "udf_truncate_tail_extent():\

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: fs/udf/truncate.c:99:
+ Too long extent after EOF in inode %u: i_size: %Ld lbcount: %Ld extent %u+%u\n",$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#151: FILE: fs/udf/truncate.c:100:
+(unsigned)inode->i_ino, (long long)inode->i_size, (long long)lbcount,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#152: FILE: fs/udf/truncate.c:101:
+(unsigned)eloc.logicalBlockNum, (unsigned)elen);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#152: FILE: fs/udf/truncate.c:101:
+(unsigned)eloc.logicalBlockNum, (unsigned)elen);

CHECK:CAMELCASE: Avoid CamelCase: <logicalBlockNum>
#152: FILE: fs/udf/truncate.c:101:
+(unsigned)eloc.logicalBlockNum, (unsigned)elen);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#159: FILE: fs/udf/truncate.c:107:
+				printk(KERN_ERR "udf_truncate_tail_extent(): \

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#159: FILE: fs/udf/truncate.c:107:
+				printk(KERN_ERR "udf_truncate_tail_extent(): \

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#160: FILE: fs/udf/truncate.c:108:
+Extent after EOF in inode %u.\n", (unsigned)inode->i_ino);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#165: FILE: fs/udf/truncate.c:113:
+	 * the inode dirty */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#170: FILE: fs/udf/truncate.c:118:
+void udf_discard_prealloc(struct inode * inode)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#174: FILE: fs/udf/truncate.c:122:
+	uint32_t elen;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#175: FILE: fs/udf/truncate.c:123:
+	uint64_t lbcount = 0;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's8' over 'int8_t'
#176: FILE: fs/udf/truncate.c:124:
+	int8_t etype = -1, netype;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#180: FILE: fs/udf/truncate.c:128:
+	if (UDF_I_ALLOCTYPE(inode) == ICBTAG_FLAG_AD_IN_ICB ||
+		inode->i_size == UDF_I_LENEXTENTS(inode))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#184: FILE: fs/udf/truncate.c:132:
+^I^Iadsize = sizeof(short_ad); $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#193: FILE: fs/udf/truncate.c:141:
+	while ((netype = udf_next_aext(inode, &epos, &eloc, &elen, 1)) != -1)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#206: FILE: fs/udf/truncate.c:167:
+	 * the inode dirty */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#220: FILE: fs/udf/udfdecl.h:106:
+extern void udf_drop_inode(struct inode *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#220: FILE: fs/udf/udfdecl.h:106:
+extern void udf_drop_inode(struct inode *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#228: FILE: fs/udf/udfdecl.h:150:
+extern void udf_truncate_tail_extent(struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#228: FILE: fs/udf/udfdecl.h:150:
+extern void udf_truncate_tail_extent(struct inode *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000427010.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 16 warnings, 7 checks, 146 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000427010.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
