CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#190: FILE: drivers/mmc/host/au1xmmc.c:407:
+			DBG("RX CRC Error [%d + %d].\n", host->pdev->id,
 					host->pio.len, count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: drivers/mmc/host/au1xmmc.c:413:
+			DBG("RX Overrun [%d + %d]\n", host->pdev->id,
 					host->pio.len, count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: drivers/mmc/host/au1xmmc.c:418:
+			DBG("RX Underrun [%d + %d]\n", host->pdev->id,
 					host->pio.len,	count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#265: FILE: drivers/mmc/host/au1xmmc.c:629:
+	dma_unmap_sg(mmc_dev(host->mmc), data->sg, data->sg_len,
+			host->dma.dir);

CHECK:BRACES: braces {} should be used on all arms of this statement
#373: FILE: drivers/mmc/host/au1xmmc.c:742:
+		if (!(host->flags & HOST_F_DMA) && (status & SD_STATUS_NE))
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#375: FILE: drivers/mmc/host/au1xmmc.c:744:
+		else {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#412: FILE: drivers/mmc/host/au1xmmc.c:760:
+	} else if (status & 0x203F3C70) {
+			DBG("Unhandled status %8.8x\n", host->pdev->id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#414: FILE: drivers/mmc/host/au1xmmc.c:762:
+			DBG("Unhandled status %8.8x\n", host->pdev->id,
+				status);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#442: FILE: drivers/mmc/host/au1xmmc.c:782:
 };
+static int memid;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#486: FILE: drivers/mmc/host/au1xmmc.c:817:
+	host->tx_chan = au1xxx_dbdma_chan_alloc(memid, txid,
+				au1xmmc_dbdma_callback, (void *)host);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#493: FILE: drivers/mmc/host/au1xmmc.c:824:
+	host->rx_chan = au1xxx_dbdma_chan_alloc(rxid, memid,
+				au1xmmc_dbdma_callback, (void *)host);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "host->mrq"
#554: FILE: drivers/mmc/host/au1xmmc.c:873:
+	if (host->mrq != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#556: FILE: drivers/mmc/host/au1xmmc.c:875:
+		u32 status = au_readl(HOST_STATUS(host));
+		DBG("PENDING - %8.8x\n", host->pdev->id, status);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#576: FILE: drivers/mmc/host/au1xmmc.c:889:
+static int __devinit au1xmmc_probe(struct platform_device *pdev)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#612: FILE: drivers/mmc/host/au1xmmc.c:916:
+	host->ioarea = request_mem_region(r->start, r->end - r->start + 1,
+					   pdev->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#688: FILE: drivers/mmc/host/au1xmmc.c:972:
+	tasklet_init(&host->data_task, au1xmmc_tasklet_data,
+			(unsigned long)host);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#693: FILE: drivers/mmc/host/au1xmmc.c:975:
+	tasklet_init(&host->finish_task, au1xmmc_tasklet_finish,
+			(unsigned long)host);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#700: FILE: drivers/mmc/host/au1xmmc.c:980:
+		printk(KERN_INFO DRIVER_NAME ": DBDMA init failed; using PIO\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#707: FILE: drivers/mmc/host/au1xmmc.c:986:
+		struct led_classdev *led = host->platdata->led;
+		led->name = mmc_hostname(mmc);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#738: FILE: drivers/mmc/host/au1xmmc.c:1009:
+	printk(KERN_INFO DRIVER_NAME ": MMC Controller %d set up at %8.8X"

WARNING:SPLIT_STRING: quoted string split across lines
#739: FILE: drivers/mmc/host/au1xmmc.c:1010:
+	printk(KERN_INFO DRIVER_NAME ": MMC Controller %d set up at %8.8X"
+		" (mode=%s)\n", pdev->id, host->iobase,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#779: FILE: drivers/mmc/host/au1xmmc.c:1048:
 static int __devexit au1xmmc_remove(struct platform_device *pdev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#847: FILE: drivers/mmc/host/au1xmmc.c:1111:
+		printk(KERN_ERR "au1xmmc: cannot add memory dbdma dev\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#888: FILE: drivers/mmc/host/au1xmmc.h:74:
+  int irq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#895: FILE: drivers/mmc/host/au1xmmc.h:79:
+  struct au1xmmc_platform_data *platdata;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#896: FILE: drivers/mmc/host/au1xmmc.h:80:
+  struct platform_device *pdev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#897: FILE: drivers/mmc/host/au1xmmc.h:81:
+  struct resource *ioarea;$

WARNING:SPACING: missing space after return type
#921: FILE: include/asm-mips/mach-au1x00/au1100_mmc.h:44:
+	int(*cd_setup)(void *mmc_host, int on);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: missing space after return type
#922: FILE: include/asm-mips/mach-au1x00/au1100_mmc.h:45:
+	int(*card_inserted)(void *mmc_host);

WARNING:SPACING: missing space after return type
#923: FILE: include/asm-mips/mach-au1x00/au1100_mmc.h:46:
+	int(*card_readonly)(void *mmc_host);

WARNING:SPACING: missing space after return type
#924: FILE: include/asm-mips/mach-au1x00/au1100_mmc.h:47:
+	void(*set_power)(void *mmc_host, int state);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000269798.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 17 warnings, 14 checks, 845 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000269798.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
