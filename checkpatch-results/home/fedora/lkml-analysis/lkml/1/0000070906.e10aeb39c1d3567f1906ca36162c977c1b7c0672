WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#78: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#83: FILE: drivers/mfd/adp5520.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#94: FILE: drivers/mfd/adp5520.c:12:
+ * ^IMike Rapoport <mike@compulab.co.il>$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#97: FILE: drivers/mfd/adp5520.c:15:
+ * ^IEric Miao <eric.miao@marvell.com>$

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#116: FILE: drivers/mfd/adp5520.c:34:
+	struct mutex lock;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: drivers/mfd/adp5520.c:41:
+static int __adp5520_read(struct i2c_client *client,
+				int reg, uint8_t *val)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#138: FILE: drivers/mfd/adp5520.c:56:
+static int __adp5520_write(struct i2c_client *client,
+				 int reg, uint8_t val)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#145: FILE: drivers/mfd/adp5520.c:63:
+		dev_err(&client->dev, "failed writing 0x%02x to 0x%02x\n",
+				val, reg);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#154: FILE: drivers/mfd/adp5520.c:72:
+	uint8_t reg_val;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#185: FILE: drivers/mfd/adp5520.c:103:
+	uint8_t reg_val;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#205: FILE: drivers/mfd/adp5520.c:123:
+	uint8_t reg_val;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#223: FILE: drivers/mfd/adp5520.c:141:
+int adp5520_register_notifier(struct device *dev, struct notifier_block *nb,
+				unsigned int events)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#229: FILE: drivers/mfd/adp5520.c:147:
+		adp5520_set_bits(chip->dev, INTERRUPT_ENABLE,
+			events & (KP_IEN | KR_IEN | OVP_IEN | CMPR_IEN));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: drivers/mfd/adp5520.c:163:
+	adp5520_clr_bits(chip->dev, INTERRUPT_ENABLE,
+		events & (KP_IEN | KR_IEN | OVP_IEN | CMPR_IEN));

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#256: FILE: drivers/mfd/adp5520.c:174:
+	uint8_t reg_val;

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#294: FILE: drivers/mfd/adp5520.c:212:
+static int __devinit adp5520_add_subdevs(struct adp5520_chip *chip,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#295: FILE: drivers/mfd/adp5520.c:213:
+static int __devinit adp5520_add_subdevs(struct adp5520_chip *chip,
+					struct adp5520_platform_data *pdata)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#320: FILE: drivers/mfd/adp5520.c:238:
+static int __devinit adp5520_probe(struct i2c_client *client,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#321: FILE: drivers/mfd/adp5520.c:239:
+static int __devinit adp5520_probe(struct i2c_client *client,
+					const struct i2c_device_id *id)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#328: FILE: drivers/mfd/adp5520.c:246:
+	if (!i2c_check_functionality(client->adapter,
+					I2C_FUNC_SMBUS_BYTE_DATA)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pdata"
#333: FILE: drivers/mfd/adp5520.c:251:
+	if (pdata == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#354: FILE: drivers/mfd/adp5520.c:272:
+		ret = request_irq(chip->irq, adp5520_irq_handler,
+				IRQF_DISABLED | IRQF_TRIGGER_LOW,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#358: FILE: drivers/mfd/adp5520.c:276:
+			dev_err(&client->dev, "failed to request irq %d\n",
+					chip->irq);

CHECK:CAMELCASE: Avoid CamelCase: <nSTNBY>
#363: FILE: drivers/mfd/adp5520.c:281:
+	ret = adp5520_write(chip->dev, MODE_STATUS, nSTNBY);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#385: FILE: drivers/mfd/adp5520.c:303:
+static int __devexit adp5520_remove(struct i2c_client *client)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#401: FILE: drivers/mfd/adp5520.c:319:
+static int adp5520_suspend(struct i2c_client *client,
+				 pm_message_t state)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#436: FILE: drivers/mfd/adp5520.c:354:
+^I.id_table ^I= adp5520_id,$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#460: FILE: include/linux/mfd/adp5520.h:1:
+/*

WARNING:TYPO_SPELLING: 'platfrom' may be misspelled - perhaps 'platform'?
#461: FILE: include/linux/mfd/adp5520.h:2:
+ * Definitions and platfrom data for Analog Devices
                    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#469: FILE: include/linux/mfd/adp5520.h:10:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#480: FILE: include/linux/mfd/adp5520.h:21:
+#define MODE_STATUS ^I^I0x00$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#481: FILE: include/linux/mfd/adp5520.h:22:
+#define INTERRUPT_ENABLE ^I0x01$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#482: FILE: include/linux/mfd/adp5520.h:23:
+#define BL_CONTROL ^I^I0x02$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#483: FILE: include/linux/mfd/adp5520.h:24:
+#define BL_TIME ^I^I0x03$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#484: FILE: include/linux/mfd/adp5520.h:25:
+#define BL_FADE ^I^I0x04$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#485: FILE: include/linux/mfd/adp5520.h:26:
+#define DAYLIGHT_MAX ^I^I0x05$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#486: FILE: include/linux/mfd/adp5520.h:27:
+#define DAYLIGHT_DIM ^I^I0x06$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#487: FILE: include/linux/mfd/adp5520.h:28:
+#define OFFICE_MAX ^I^I0x07$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#488: FILE: include/linux/mfd/adp5520.h:29:
+#define OFFICE_DIM ^I^I0x08$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#489: FILE: include/linux/mfd/adp5520.h:30:
+#define DARK_MAX ^I^I0x09$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#490: FILE: include/linux/mfd/adp5520.h:31:
+#define DARK_DIM ^I^I0x0A$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#491: FILE: include/linux/mfd/adp5520.h:32:
+#define BL_VALUE ^I^I0x0B$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#492: FILE: include/linux/mfd/adp5520.h:33:
+#define ALS_CMPR_CFG ^I^I0x0C$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#493: FILE: include/linux/mfd/adp5520.h:34:
+#define L2_TRIP ^I^I0x0D$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#494: FILE: include/linux/mfd/adp5520.h:35:
+#define L2_HYS ^I^I^I0x0E$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#495: FILE: include/linux/mfd/adp5520.h:36:
+#define L3_TRIP ^I^I0x0F$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#496: FILE: include/linux/mfd/adp5520.h:37:
+#define L3_HYS ^I^I^I0x10$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#497: FILE: include/linux/mfd/adp5520.h:38:
+#define LED_CONTROL ^I^I0x11$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#498: FILE: include/linux/mfd/adp5520.h:39:
+#define LED_TIME ^I^I0x12$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#499: FILE: include/linux/mfd/adp5520.h:40:
+#define LED_FADE ^I^I0x13$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#500: FILE: include/linux/mfd/adp5520.h:41:
+#define LED1_CURRENT ^I^I0x14$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#501: FILE: include/linux/mfd/adp5520.h:42:
+#define LED2_CURRENT ^I^I0x15$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#502: FILE: include/linux/mfd/adp5520.h:43:
+#define LED3_CURRENT ^I^I0x16$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#508: FILE: include/linux/mfd/adp5520.h:49:
+#define GPIO_CFG_1 ^I^I0x17$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#509: FILE: include/linux/mfd/adp5520.h:50:
+#define GPIO_CFG_2 ^I^I0x18$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#510: FILE: include/linux/mfd/adp5520.h:51:
+#define GPIO_IN ^I^I0x19$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#511: FILE: include/linux/mfd/adp5520.h:52:
+#define GPIO_OUT ^I^I0x1A$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#512: FILE: include/linux/mfd/adp5520.h:53:
+#define GPIO_INT_EN ^I^I0x1B$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#513: FILE: include/linux/mfd/adp5520.h:54:
+#define GPIO_INT_STAT ^I^I0x1C$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#514: FILE: include/linux/mfd/adp5520.h:55:
+#define GPIO_INT_LVL ^I^I0x1D$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#515: FILE: include/linux/mfd/adp5520.h:56:
+#define GPIO_DEBOUNCE ^I^I0x1E$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#516: FILE: include/linux/mfd/adp5520.h:57:
+#define GPIO_PULLUP ^I^I0x1F$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#517: FILE: include/linux/mfd/adp5520.h:58:
+#define KP_INT_STAT_1 ^I^I0x20$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#518: FILE: include/linux/mfd/adp5520.h:59:
+#define KP_INT_STAT_2 ^I^I0x21$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#519: FILE: include/linux/mfd/adp5520.h:60:
+#define KR_INT_STAT_1 ^I^I0x22$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#520: FILE: include/linux/mfd/adp5520.h:61:
+#define KR_INT_STAT_2 ^I^I0x23$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#521: FILE: include/linux/mfd/adp5520.h:62:
+#define KEY_STAT_1 ^I^I0x24$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#522: FILE: include/linux/mfd/adp5520.h:63:
+#define KEY_STAT_2 ^I^I0x25$

CHECK:BIT_MACRO: Prefer using the BIT macro
#528: FILE: include/linux/mfd/adp5520.h:69:
+#define nSTNBY		(1 << 7)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#529: FILE: include/linux/mfd/adp5520.h:70:
+#define BL_EN           (1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#530: FILE: include/linux/mfd/adp5520.h:71:
+#define DIM_EN          (1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#531: FILE: include/linux/mfd/adp5520.h:72:
+#define OVP_INT         (1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#532: FILE: include/linux/mfd/adp5520.h:73:
+#define CMPR_INT        (1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#533: FILE: include/linux/mfd/adp5520.h:74:
+#define GPI_INT         (1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#534: FILE: include/linux/mfd/adp5520.h:75:
+#define KR_INT          (1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#535: FILE: include/linux/mfd/adp5520.h:76:
+#define KP_INT          (1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#541: FILE: include/linux/mfd/adp5520.h:82:
+#define AUTO_LD_EN      (1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#542: FILE: include/linux/mfd/adp5520.h:83:
+#define CMPR_IEN        (1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#543: FILE: include/linux/mfd/adp5520.h:84:
+#define OVP_IEN         (1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#544: FILE: include/linux/mfd/adp5520.h:85:
+#define KR_IEN          (1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#545: FILE: include/linux/mfd/adp5520.h:86:
+#define KP_IEN          (1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#553: FILE: include/linux/mfd/adp5520.h:94:
+#define BL_AUTO_ADJ     (1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#554: FILE: include/linux/mfd/adp5520.h:95:
+#define OVP_EN          (1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#555: FILE: include/linux/mfd/adp5520.h:96:
+#define FOVR            (1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#556: FILE: include/linux/mfd/adp5520.h:97:
+#define KP_BL_EN        (1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#562: FILE: include/linux/mfd/adp5520.h:103:
+#define L3_OUT		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#563: FILE: include/linux/mfd/adp5520.h:104:
+#define L2_OUT		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#564: FILE: include/linux/mfd/adp5520.h:105:
+#define L3_EN		(1 << 1)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#569: FILE: include/linux/mfd/adp5520.h:110:
+#define BL_CTRL_VAL(law, auto)	(((1 & (auto)) << 3)) | ((0x3 & (law)) << 4))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'filt' may be better as '(filt)' to avoid precedence issues
#570: FILE: include/linux/mfd/adp5520.h:111:
+#define ALS_CMPR_CFG_VAL(filt, l3_en)	(((0x7 & filt) << 5) | l3_en)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'l3_en' may be better as '(l3_en)' to avoid precedence issues
#570: FILE: include/linux/mfd/adp5520.h:111:
+#define ALS_CMPR_CFG_VAL(filt, l3_en)	(((0x7 & filt) << 5) | l3_en)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#578: FILE: include/linux/mfd/adp5520.h:119:
+#define FLAG_LED_MASK ^I^I0x3$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#579: FILE: include/linux/mfd/adp5520.h:120:
+#define FLAG_OFFT_SHIFT ^I8$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#580: FILE: include/linux/mfd/adp5520.h:121:
+#define FLAG_OFFT_MASK ^I^I0x3$

CHECK:BIT_MACRO: Prefer using the BIT macro
#582: FILE: include/linux/mfd/adp5520.h:123:
+#define R3_MODE		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#583: FILE: include/linux/mfd/adp5520.h:124:
+#define C3_MODE		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#584: FILE: include/linux/mfd/adp5520.h:125:
+#define LED_LAW		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#585: FILE: include/linux/mfd/adp5520.h:126:
+#define LED3_EN		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#586: FILE: include/linux/mfd/adp5520.h:127:
+#define LED2_EN		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#587: FILE: include/linux/mfd/adp5520.h:128:
+#define LED1_EN		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#595: FILE: include/linux/mfd/adp5520.h:136:
+#define GPIO_C3		(1 << 7)	/* LED2 or GPIO7 aka C3 */

CHECK:BIT_MACRO: Prefer using the BIT macro
#596: FILE: include/linux/mfd/adp5520.h:137:
+#define GPIO_C2		(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#597: FILE: include/linux/mfd/adp5520.h:138:
+#define GPIO_C1		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#598: FILE: include/linux/mfd/adp5520.h:139:
+#define GPIO_C0		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#599: FILE: include/linux/mfd/adp5520.h:140:
+#define GPIO_R3		(1 << 3)	/* LED3 or GPIO3 aka R3 */

CHECK:BIT_MACRO: Prefer using the BIT macro
#600: FILE: include/linux/mfd/adp5520.h:141:
+#define GPIO_R2		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#601: FILE: include/linux/mfd/adp5520.h:142:
+#define GPIO_R1		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#602: FILE: include/linux/mfd/adp5520.h:143:
+#define GPIO_R0		(1 << 0)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#605: FILE: include/linux/mfd/adp5520.h:146:
+	unsigned gpio_start;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#616: FILE: include/linux/mfd/adp5520.h:157:
+#define COL_C3 ^I^I(1 << 7)^I/* LED2 or GPIO7 aka C3 */$

CHECK:BIT_MACRO: Prefer using the BIT macro
#616: FILE: include/linux/mfd/adp5520.h:157:
+#define COL_C3 		(1 << 7)	/* LED2 or GPIO7 aka C3 */

CHECK:BIT_MACRO: Prefer using the BIT macro
#617: FILE: include/linux/mfd/adp5520.h:158:
+#define COL_C2		(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#618: FILE: include/linux/mfd/adp5520.h:159:
+#define COL_C1		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#619: FILE: include/linux/mfd/adp5520.h:160:
+#define COL_C0		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#620: FILE: include/linux/mfd/adp5520.h:161:
+#define ROW_R3		(1 << 3)	/* LED3 or GPIO3 aka R3 */

CHECK:BIT_MACRO: Prefer using the BIT macro
#621: FILE: include/linux/mfd/adp5520.h:162:
+#define ROW_R2		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#622: FILE: include/linux/mfd/adp5520.h:163:
+#define ROW_R1		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#623: FILE: include/linux/mfd/adp5520.h:164:
+#define ROW_R0		(1 << 0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'row' may be better as '(row)' to avoid precedence issues
#625: FILE: include/linux/mfd/adp5520.h:166:
+#define KEY(row, col) (col + row * 4)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'col' may be better as '(col)' to avoid precedence issues
#625: FILE: include/linux/mfd/adp5520.h:166:
+#define KEY(row, col) (col + row * 4)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#636: FILE: include/linux/mfd/adp5520.h:177:
+
+

WARNING:TYPO_SPELLING: 'platfrom' may be misspelled - perhaps 'platform'?
#638: FILE: include/linux/mfd/adp5520.h:179:
+ * LEDs subdevice platfrom data
                   ^^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#641: FILE: include/linux/mfd/adp5520.h:182:
+#define FLAG_ID_ADP5520_LED1_ADP5501_LED0 ^I1^I/* ADP5520 PIN ILED */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#642: FILE: include/linux/mfd/adp5520.h:183:
+#define FLAG_ID_ADP5520_LED2_ADP5501_LED1 ^I2^I/* ADP5520 PIN C3 */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#643: FILE: include/linux/mfd/adp5520.h:184:
+#define FLAG_ID_ADP5520_LED3_ADP5501_LED2 ^I3^I/* ADP5520 PIN R3 */$

CHECK:BIT_MACRO: Prefer using the BIT macro
#646: FILE: include/linux/mfd/adp5520.h:187:
+#define LED_OFFT_600ms	(1 << FLAG_OFFT_SHIFT)

WARNING:TYPO_SPELLING: 'platfrom' may be misspelled - perhaps 'platform'?
#664: FILE: include/linux/mfd/adp5520.h:205:
+ * Backlight subdevice platfrom data
                        ^^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#684: FILE: include/linux/mfd/adp5520.h:225:
+#define BL_LAW_LINEAR ^I0$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#685: FILE: include/linux/mfd/adp5520.h:226:
+#define BL_LAW_SQUARE ^I1$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#686: FILE: include/linux/mfd/adp5520.h:227:
+#define BL_LAW_CUBIC1 ^I2$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#687: FILE: include/linux/mfd/adp5520.h:228:
+#define BL_LAW_CUBIC2 ^I3$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#689: FILE: include/linux/mfd/adp5520.h:230:
+#define BL_AMBL_FILT_80ms ^I0^I/* Light sensor filter time */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#690: FILE: include/linux/mfd/adp5520.h:231:
+#define BL_AMBL_FILT_160ms ^I1$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#691: FILE: include/linux/mfd/adp5520.h:232:
+#define BL_AMBL_FILT_320ms ^I2$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#692: FILE: include/linux/mfd/adp5520.h:233:
+#define BL_AMBL_FILT_640ms ^I3$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#693: FILE: include/linux/mfd/adp5520.h:234:
+#define BL_AMBL_FILT_1280ms ^I4$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#694: FILE: include/linux/mfd/adp5520.h:235:
+#define BL_AMBL_FILT_2560ms ^I5$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#695: FILE: include/linux/mfd/adp5520.h:236:
+#define BL_AMBL_FILT_5120ms ^I6$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#696: FILE: include/linux/mfd/adp5520.h:237:
+#define BL_AMBL_FILT_10240ms ^I7^I/* 10.24 sec */$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'I' may be better as '(I)' to avoid precedence issues
#701: FILE: include/linux/mfd/adp5520.h:242:
+#define BL_CUR_mA(I)		((I * 127) / 30)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'I' may be better as '(I)' to avoid precedence issues
#706: FILE: include/linux/mfd/adp5520.h:247:
+#define L2_COMP_CURR_uA(I)	((I * 255) / 1000)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'I' may be better as '(I)' to avoid precedence issues
#711: FILE: include/linux/mfd/adp5520.h:252:
+#define L3_COMP_CURR_uA(I)	((I * 255) / 127)

WARNING:TYPO_SPELLING: 'platfrom' may be misspelled - perhaps 'platform'?
#733: FILE: include/linux/mfd/adp5520.h:274:
+ * MFD chip platfrom data
             ^^^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#751: FILE: include/linux/mfd/adp5520.h:292:
+extern int adp5520_read(struct device *dev, int reg, uint8_t *val);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#752: FILE: include/linux/mfd/adp5520.h:293:
+extern int adp5520_write(struct device *dev, int reg, u8 val);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#753: FILE: include/linux/mfd/adp5520.h:294:
+extern int adp5520_clr_bits(struct device *dev, int reg, uint8_t bit_mask);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#754: FILE: include/linux/mfd/adp5520.h:295:
+extern int adp5520_set_bits(struct device *dev, int reg, uint8_t bit_mask);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#756: FILE: include/linux/mfd/adp5520.h:297:
+extern int adp5520_register_notifier(struct device *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#757: FILE: include/linux/mfd/adp5520.h:298:
+extern int adp5520_register_notifier(struct device *dev,
+		 struct notifier_block *nb, unsigned int events);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#759: FILE: include/linux/mfd/adp5520.h:300:
+extern int adp5520_unregister_notifier(struct device *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#760: FILE: include/linux/mfd/adp5520.h:301:
+extern int adp5520_unregister_notifier(struct device *dev,
+		struct notifier_block *nb, unsigned int events);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000070906.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 71 warnings, 79 checks, 694 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000070906.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
