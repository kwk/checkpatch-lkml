WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#48: 
http://git.kernel.org/?p=linux/kernel/git/willy/misc.git;a=shortlog;h=semaphore-20080327

WARNING:TYPO_SPELLING: 'ot' may be misspelled - perhaps 'to'?
#50: 
Stephen, I've updated the 'semaphore' tag to point ot the same place as
                                                   ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '517df6fedc88af3f871cf827a62ef1a1a2073645', maybe rebased or not pulled?
#57: 
commit 517df6fedc88af3f871cf827a62ef1a1a2073645

WARNING:TYPO_SPELLING: 'wil' may be misspelled - perhaps 'will'?
#58: 
Author: Matthew Wilcox <matthew@wil.cx>
                                ^^^

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#67: 
    Signed-off-by: Tony Luck <tony.luck@intel.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#68: 
    Signed-off-by: Matthew Wilcox <willy@linux.intel.com>

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#83: FILE: include/linux/semaphore.h:86:
+extern void down_spin(struct semaphore *sem);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: kernel/semaphore.c:123:
+       unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: kernel/semaphore.c:125:
+       spin_lock_irqsave(&sem->lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: kernel/semaphore.c:126:
+       if (likely(sem->count > 0)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#110: FILE: kernel/semaphore.c:126:
+       if (likely(sem->count > 0)) {
+               sem->count--;

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: kernel/semaphore.c:127:
+               sem->count--;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: kernel/semaphore.c:127:
+               sem->count--;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: kernel/semaphore.c:128:
+               spin_unlock_irqrestore(&sem->lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: kernel/semaphore.c:128:
+               spin_unlock_irqrestore(&sem->lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: kernel/semaphore.c:129:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#113: FILE: kernel/semaphore.c:129:
+       } else {
+               __down_spin(sem, flags);

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: kernel/semaphore.c:130:
+               __down_spin(sem, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: kernel/semaphore.c:130:
+               __down_spin(sem, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: kernel/semaphore.c:131:
+       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: kernel/semaphore.c:216:
+                                                       unsigned long flags)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#127: FILE: kernel/semaphore.c:216:
+static noinline void __sched __down_spin(struct semaphore *sem,
+                                                       unsigned long flags)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: kernel/semaphore.c:216:
+                                                       unsigned long flags)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: kernel/semaphore.c:218:
+       struct semaphore_waiter waiter;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: kernel/semaphore.c:220:
+       list_add_tail(&waiter.list, &sem->wait_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: kernel/semaphore.c:221:
+       waiter.task = current;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: kernel/semaphore.c:222:
+       waiter.up = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: kernel/semaphore.c:224:
+       spin_unlock_irqrestore(&sem->lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: kernel/semaphore.c:225:
+       while (!waiter.up)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#136: FILE: kernel/semaphore.c:225:
+       while (!waiter.up)
+               cpu_relax();

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: kernel/semaphore.c:226:
+               cpu_relax();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: kernel/semaphore.c:226:
+               cpu_relax();$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000302575.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 25 warnings, 2 checks, 61 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000302575.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
