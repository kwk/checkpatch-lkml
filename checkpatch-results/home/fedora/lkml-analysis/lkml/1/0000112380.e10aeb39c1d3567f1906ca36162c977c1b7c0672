WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#61: FILE: arch/arm/mach-at91/Kconfig:329:
+config AT91_2MMC
+	bool "Use both MMC Ports"
+	depends on MACH_AT91SAM9G20EK
+	help
+	  Select this if you have connected both MMC Slots.  Answer No if unsure.
+
 # ----------------------------------------------------------

Kconfig symbols should have a help text which fully describes
it.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#84: FILE: arch/arm/mach-at91/at91sam9260_devices.c:275:
struct at91_mmc_data *data)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#91: FILE: arch/arm/mach-at91/at91sam9260_devices.c:282:
+ * -------------------------------------------------------------------- */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#93: FILE: arch/arm/mach-at91/at91sam9260_devices.c:284:
+#if defined(CONFIG_MMC_ATMELMCI) || defined(CONFIG_MMC_ATMELMCI_MODULE)

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: arch/arm/mach-at91/at91sam9260_devices.c:315:
+        unsigned int i;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: arch/arm/mach-at91/at91sam9260_devices.c:315:
+        unsigned int i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: arch/arm/mach-at91/at91sam9260_devices.c:316:
+        unsigned int slot_count = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: arch/arm/mach-at91/at91sam9260_devices.c:316:
+        unsigned int slot_count = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: arch/arm/mach-at91/at91sam9260_devices.c:321:
+        for (i = 0; i < ATMEL_MCI_MAX_NR_SLOTS; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: arch/arm/mach-at91/at91sam9260_devices.c:321:
+        for (i = 0; i < ATMEL_MCI_MAX_NR_SLOTS; i++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: arch/arm/mach-at91/at91sam9260_devices.c:322:
+                if (data->slot[i].bus_width) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: arch/arm/mach-at91/at91sam9260_devices.c:322:
+                if (data->slot[i].bus_width) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: arch/arm/mach-at91/at91sam9260_devices.c:323:
+                        /* input/irq */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: arch/arm/mach-at91/at91sam9260_devices.c:324:
+                        if (data->slot[i].detect_pin) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: arch/arm/mach-at91/at91sam9260_devices.c:324:
+                        if (data->slot[i].detect_pin) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 0)
#133: FILE: arch/arm/mach-at91/at91sam9260_devices.c:324:
+                        if (data->slot[i].detect_pin) {
[...]
at91_set_gpio_input(data->slot[i].detect_pin, 1);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#134: FILE: arch/arm/mach-at91/at91sam9260_devices.c:325:
+                        if (data->slot[i].detect_pin) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: arch/arm/mach-at91/at91sam9260_devices.c:326:
+                                at91_set_deglitch(data->slot[i].detect_pin, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: arch/arm/mach-at91/at91sam9260_devices.c:326:
+                                at91_set_deglitch(data->slot[i].detect_pin, 1);$

ERROR:SPACING: space required before the open parenthesis '('
#143: FILE: arch/arm/mach-at91/at91sam9260_devices.c:333:
+			switch(i) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#167: FILE: arch/arm/mach-at91/at91sam9260_devices.c:357:
+				printk("Configuration Error, No MMC Port %d\n",i);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#167: FILE: arch/arm/mach-at91/at91sam9260_devices.c:357:
+				printk("Configuration Error, No MMC Port %d\n",i);
 				                                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: arch/arm/mach-at91/at91sam9260_devices.c:361:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: arch/arm/mach-at91/at91sam9260_devices.c:361:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: arch/arm/mach-at91/at91sam9260_devices.c:362:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: arch/arm/mach-at91/at91sam9260_devices.c:362:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: arch/arm/mach-at91/at91sam9260_devices.c:364:
+        if (slot_count) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: arch/arm/mach-at91/at91sam9260_devices.c:364:
+        if (slot_count) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: arch/arm/mach-at91/at91sam9260_devices.c:365:
+                /* CLK */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: arch/arm/mach-at91/at91sam9260_devices.c:366:
+                at91_set_A_periph(AT91_PIN_PA8, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: arch/arm/mach-at91/at91sam9260_devices.c:366:
+                at91_set_A_periph(AT91_PIN_PA8, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: arch/arm/mach-at91/at91sam9260_devices.c:368:
+                mmc_data = *data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: arch/arm/mach-at91/at91sam9260_devices.c:368:
+                mmc_data = *data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: arch/arm/mach-at91/at91sam9260_devices.c:369:
+                platform_device_register(&at91sam9260_mmc_device);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: arch/arm/mach-at91/at91sam9260_devices.c:369:
+                platform_device_register(&at91sam9260_mmc_device);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: arch/arm/mach-at91/at91sam9260_devices.c:370:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: arch/arm/mach-at91/at91sam9260_devices.c:370:
+        }$

WARNING:MISPLACED_INIT: __initdata should be placed after ek_mmc_data
#253: FILE: arch/arm/mach-at91/board-sam9g20ek.c:208:
+static struct mci_platform_data __initdata ek_mmc_data = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#258: FILE: arch/arm/mach-at91/board-sam9g20ek.c:213:
+		.vcc_pin_act_low= 1,
 		                ^

WARNING:MISPLACED_INIT: __initdata should be placed after ek_mmc_data
#275: FILE: arch/arm/mach-at91/board-sam9g20ek.c:230:
+static struct amci_platform_data __initdata ek_mmc_data = {

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#312: FILE: arch/arm/mach-at91/include/mach/board.h:40:
+#if defined(CONFIG_MMC_ATMELMCI) || defined(CONFIG_MMC_ATMELMCI_MODULE)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#332: FILE: arch/arm/mach-at91/include/mach/board.h:79:
+extern void __init at91_add_device_mmc(short mmc_id, struct

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space prohibited after that open parenthesis '('
#417: FILE: drivers/mmc/host/atmel-mci-regs.h:23:
+# define MCI_CR_PWSEN		(  1 <<  2)	/* Power Save Enable */

CHECK:BIT_MACRO: Prefer using the BIT macro
#417: FILE: drivers/mmc/host/atmel-mci-regs.h:23:
+# define MCI_CR_PWSEN		(  1 <<  2)	/* Power Save Enable */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

ERROR:SPACING: space prohibited after that open parenthesis '('
#418: FILE: drivers/mmc/host/atmel-mci-regs.h:24:
+# define MCI_CR_PWSDIS		(  1 <<  3)	/* Power Save Disable */

CHECK:BIT_MACRO: Prefer using the BIT macro
#418: FILE: drivers/mmc/host/atmel-mci-regs.h:24:
+# define MCI_CR_PWSDIS		(  1 <<  3)	/* Power Save Disable */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#422: FILE: drivers/mmc/host/atmel-mci-regs.h:27:
+# define MCI_MR_CLKDIV(x)	((x & 0xff) << 0)	/* Clock Divider */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#423: FILE: drivers/mmc/host/atmel-mci-regs.h:28:
+# define MCI_MR_PWSDIV(x)	((x & 0x7)  << 8)	/* Power Saving Divider */

ERROR:SPACING: space prohibited after that open parenthesis '('
#426: FILE: drivers/mmc/host/atmel-mci-regs.h:31:
+# define MCI_MR_FBYTE		(  1 << 13)	/* Force Byte Transfer */

CHECK:BIT_MACRO: Prefer using the BIT macro
#426: FILE: drivers/mmc/host/atmel-mci-regs.h:31:
+# define MCI_MR_FBYTE		(  1 << 13)	/* Force Byte Transfer */

ERROR:SPACING: space prohibited after that open parenthesis '('
#427: FILE: drivers/mmc/host/atmel-mci-regs.h:32:
+# define MCI_MR_PADV		(  1 << 14)	/* Padding Value */

CHECK:BIT_MACRO: Prefer using the BIT macro
#427: FILE: drivers/mmc/host/atmel-mci-regs.h:32:
+# define MCI_MR_PADV		(  1 << 14)	/* Padding Value */

ERROR:SPACING: space prohibited after that open parenthesis '('
#428: FILE: drivers/mmc/host/atmel-mci-regs.h:33:
+# define MCI_MR_MODE		(  1 << 15)	/* AT91 PDC-oriented Mode */

CHECK:BIT_MACRO: Prefer using the BIT macro
#428: FILE: drivers/mmc/host/atmel-mci-regs.h:33:
+# define MCI_MR_MODE		(  1 << 15)	/* AT91 PDC-oriented Mode */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#432: FILE: drivers/mmc/host/atmel-mci-regs.h:35:
+# define MCI_DTOCYC(x)		((x & 0xf) <<  0)	/* Data Timeout Cycles */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#433: FILE: drivers/mmc/host/atmel-mci-regs.h:36:
+# define MCI_DTOMUL(x)		((x & 0x7) <<  4)	/* Data Timeout Multiplier */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#442: FILE: drivers/mmc/host/atmel-mci-regs.h:46:
+# define MCI_CMDR_CMDNB(x)	((x & 0x3f) <<  0)	/* Command Opcode */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#452: FILE: drivers/mmc/host/atmel-mci-regs.h:69:
+# define MCI_BCNT(x)		((x & 0xffff) <<  0)	/* Data Block Count */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#453: FILE: drivers/mmc/host/atmel-mci-regs.h:70:
+# define MCI_BLKLEN(x)		((x & 0xffff) << 16)	/* Data Block Length */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#578: FILE: drivers/mmc/host/atmel-mci.c:887:
+			dev_warn(&mmc->class_dev,
+				"clkdiv %u too fast; capped using %u\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#661: FILE: drivers/mmc/host/atmel-mci.c:1695:
+		printk(KERN_ERR "Atmel MCI controller init failed.  atmci_init_slot

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#668: FILE: drivers/mmc/host/atmel-mci.c:1700:
+			"Atmel MCI controller at 0x%08lx irq %d, %u slots, Unified Driver\n",
 			                           ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#668: FILE: drivers/mmc/host/atmel-mci.c:1700:
+			"Atmel MCI controller at 0x%08lx irq %d, %u slots, Unified Driver\n",
 			                                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#668: FILE: drivers/mmc/host/atmel-mci.c:1700:
+			"Atmel MCI controller at 0x%08lx irq %d, %u slots, Unified Driver\n",
 			                                         ^

CHECK:CAMELCASE: Avoid CamelCase: <Atmel>
#668: FILE: drivers/mmc/host/atmel-mci.c:1700:
+			"Atmel MCI controller at 0x%08lx irq %d, %u slots, Unified Driver\n",

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Unified>
#668: FILE: drivers/mmc/host/atmel-mci.c:1700:
+			"Atmel MCI controller at 0x%08lx irq %d, %u slots, Unified Driver\n",

CHECK:CAMELCASE: Avoid CamelCase: <Driver>
#668: FILE: drivers/mmc/host/atmel-mci.c:1700:
+			"Atmel MCI controller at 0x%08lx irq %d, %u slots, Unified Driver\n",

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000112380.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 24 errors, 22 warnings, 21 checks, 571 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000112380.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
