WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#917: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#922: FILE: include/linux/dynamic_debug_lockd.h:1:
+#undef DYNAMIC_DEBUG_NUM_FLAGS

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#934: FILE: include/linux/dynamic_debug_nfs.h:1:
+#undef DYNAMIC_DEBUG_NUM_FLAGS

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#946: FILE: include/linux/dynamic_debug_nfsd.h:1:
+#undef DYNAMIC_DEBUG_NUM_FLAGS

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#958: FILE: include/linux/dynamic_debug_sunrpc.h:1:
+#undef DYNAMIC_DEBUG_NUM_FLAGS

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#974: FILE: include/linux/lockd/debug.h:26:
+#  define ifdebug(fac)          if (dynamic_dbg_enabled(TYPE_FLAG,   \
+							NLMDBG_##fac,\
+							nlm_debug))

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#991: FILE: include/linux/nfs_fs.h:596:
+#  define ifdebug(fac)          if (dynamic_dbg_enabled(TYPE_FLAG,   \
+							NFSDBG_##fac,\
+							nfs_debug))

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#1008: FILE: include/linux/nfsd/debug.h:42:
+#  define ifdebug(fac)          if (dynamic_dbg_enabled(TYPE_FLAG,    \
+							NFSDDBG_##fac,\
+							nfsd_debug))

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#1025: FILE: include/linux/sunrpc/debug.h:56:
+#  define ifdebug(fac)          if (dynamic_dbg_enabled(TYPE_FLAG,   \
+							RPCDBG_##fac,\
+							rpc_debug))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1028: FILE: include/linux/sunrpc/debug.h:59:
+# define dfprintk(fac, args...) do { ifdebug(fac) printk(args); } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#1028: FILE: include/linux/sunrpc/debug.h:59:
+# define dfprintk(fac, args...) do { ifdebug(fac) printk(args); } while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1028: FILE: include/linux/sunrpc/debug.h:59:
+# define dfprintk(fac, args...) do { ifdebug(fac) printk(args); } while(0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000267567.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 7 warnings, 0 checks, 676 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000267567.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
