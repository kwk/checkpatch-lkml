WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
This patch adds exhaustive support for SPC-4 compliant persistent reservations for

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#60: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#65: FILE: drivers/target/target_core_pr.c:1:
+/*******************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#87: FILE: drivers/target/target_core_pr.c:23:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#88: FILE: drivers/target/target_core_pr.c:24:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#127: FILE: drivers/target/target_core_pr.c:63:
+static void __core_scsi3_complete_pro_release(se_device_t *, se_node_acl_t *,
+			t10_pr_registration_t *, int);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#129: FILE: drivers/target/target_core_pr.c:65:
+int core_scsi2_reservation_seq_non_holder(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#187: FILE: drivers/target/target_core_pr.c:123:
+	printk(KERN_INFO "SCSI-2 Released reservation for %s LUN: %u ->"

WARNING:SPLIT_STRING: quoted string split across lines
#188: FILE: drivers/target/target_core_pr.c:124:
+	printk(KERN_INFO "SCSI-2 Released reservation for %s LUN: %u ->"
+		" MAPPED LUN: %u for %s\n", TPG_TFO(tpg)->get_fabric_name(),

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'Obselete' may be misspelled - perhaps 'Obsolete'?
#205: FILE: drivers/target/target_core_pr.c:141:
+		printk(KERN_ERR "LongIO and Obselete Bits set, returning"
 		                            ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#205: FILE: drivers/target/target_core_pr.c:141:
+		printk(KERN_ERR "LongIO and Obselete Bits set, returning"

WARNING:SPLIT_STRING: quoted string split across lines
#206: FILE: drivers/target/target_core_pr.c:142:
+		printk(KERN_ERR "LongIO and Obselete Bits set, returning"
+				" ILLEGAL_REQUEST\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->dev_reserved_node_acl != sess->se_node_acl'
#218: FILE: drivers/target/target_core_pr.c:154:
+	if (dev->dev_reserved_node_acl &&
+	   (dev->dev_reserved_node_acl != sess->se_node_acl)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: drivers/target/target_core_pr.c:155:
+	if (dev->dev_reserved_node_acl &&
+	   (dev->dev_reserved_node_acl != sess->se_node_acl)) {

WARNING:TYPO_SPELLING: 'CONFLIFT' may be misspelled - perhaps 'CONFLICT'?
#220: FILE: drivers/target/target_core_pr.c:156:
+		printk(KERN_ERR "SCSI-2 RESERVATION CONFLIFT for %s fabric\n",
 		                                    ^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#220: FILE: drivers/target/target_core_pr.c:156:
+		printk(KERN_ERR "SCSI-2 RESERVATION CONFLIFT for %s fabric\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#221: FILE: drivers/target/target_core_pr.c:157:
+		printk(KERN_ERR "SCSI-2 RESERVATION CONFLIFT for %s fabric\n",
+			TPG_TFO(tpg)->get_fabric_name());

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#222: FILE: drivers/target/target_core_pr.c:158:
+		printk(KERN_ERR "Original reserver LUN: %u %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#223: FILE: drivers/target/target_core_pr.c:159:
+		printk(KERN_ERR "Original reserver LUN: %u %s\n",
+			SE_LUN(cmd)->unpacked_lun,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#225: FILE: drivers/target/target_core_pr.c:161:
+		printk(KERN_ERR "Current attempt - LUN: %u -> MAPPED LUN: %u"

WARNING:SPLIT_STRING: quoted string split across lines
#226: FILE: drivers/target/target_core_pr.c:162:
+		printk(KERN_ERR "Current attempt - LUN: %u -> MAPPED LUN: %u"
+			" from %s \n", SE_LUN(cmd)->unpacked_lun,

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#226: FILE: drivers/target/target_core_pr.c:162:
+			" from %s \n", SE_LUN(cmd)->unpacked_lun,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#235: FILE: drivers/target/target_core_pr.c:171:
+	printk(KERN_INFO "SCSI-2 Reserved %s LUN: %u -> MAPPED LUN: %u"

WARNING:SPLIT_STRING: quoted string split across lines
#236: FILE: drivers/target/target_core_pr.c:172:
+	printk(KERN_INFO "SCSI-2 Reserved %s LUN: %u -> MAPPED LUN: %u"
+		" for %s\n", TPG_TFO(tpg)->get_fabric_name(),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#251: FILE: drivers/target/target_core_pr.c:187:
+static int core_scsi3_pr_seq_non_holder(

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#263: FILE: drivers/target/target_core_pr.c:199:
+			 * RESERVATION CONFLICT on some CDBs */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#349: FILE: drivers/target/target_core_pr.c:285:
+			printk(KERN_ERR "Unknown PERSISTENT_RESERVE_OUT service"

WARNING:SPLIT_STRING: quoted string split across lines
#350: FILE: drivers/target/target_core_pr.c:286:
+			printk(KERN_ERR "Unknown PERSISTENT_RESERVE_OUT service"
+				" action: 0x%02x\n", cdb[1] & 0x1f);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#395: FILE: drivers/target/target_core_pr.c:331:
+			printk(KERN_ERR "Unknown MI Service Action: 0x%02x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#396: FILE: drivers/target/target_core_pr.c:332:
+			printk(KERN_ERR "Unknown MI Service Action: 0x%02x\n",
+				(cdb[1] & 0x1f));

WARNING:TYPO_SPELLING: 'explictly' may be misspelled - perhaps 'explicitly'?
#414: FILE: drivers/target/target_core_pr.c:350:
+	 * Case where the CDB is explictly allowed in the above switch
 	                         ^^^^^^^^^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#418: FILE: drivers/target/target_core_pr.c:354:
+#if 0

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#419: FILE: drivers/target/target_core_pr.c:355:
+		printk(KERN_INFO "Allowing explict CDB: 0x%02x for %s"
 		                           ^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#419: FILE: drivers/target/target_core_pr.c:355:
+		printk(KERN_INFO "Allowing explict CDB: 0x%02x for %s"

WARNING:SPLIT_STRING: quoted string split across lines
#420: FILE: drivers/target/target_core_pr.c:356:
+		printk(KERN_INFO "Allowing explict CDB: 0x%02x for %s"
+			" reservation holder\n", cdb[0],

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd->data_direction == SE_DIRECTION_WRITE'
#430: FILE: drivers/target/target_core_pr.c:366:
+		if ((cmd->data_direction == SE_DIRECTION_WRITE) ||
+		    (cmd->data_direction == SE_DIRECTION_BIDI)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd->data_direction == SE_DIRECTION_BIDI'
#430: FILE: drivers/target/target_core_pr.c:366:
+		if ((cmd->data_direction == SE_DIRECTION_WRITE) ||
+		    (cmd->data_direction == SE_DIRECTION_BIDI)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#435: FILE: drivers/target/target_core_pr.c:371:
+			printk(KERN_INFO "%s Conflict for unregistered nexus"

WARNING:SPLIT_STRING: quoted string split across lines
#436: FILE: drivers/target/target_core_pr.c:372:
+			printk(KERN_INFO "%s Conflict for unregistered nexus"
+				" %s CDB: 0x%02x to %s reservation\n",

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#441: FILE: drivers/target/target_core_pr.c:377:
+			return 1;
+		} else {

WARNING:TYPO_SPELLING: 'unregisterd' may be misspelled - perhaps 'unregistered'?
#447: FILE: drivers/target/target_core_pr.c:383:
+			 * We only make noise for the unregisterd nexuses,
 			                              ^^^^^^^^^^^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#451: FILE: drivers/target/target_core_pr.c:387:
+#if 0

WARNING:TYPO_SPELLING: 'implict' may be misspelled - perhaps 'implicit'?
#453: FILE: drivers/target/target_core_pr.c:389:
+				printk(KERN_INFO "Allowing implict CDB: 0x%02x"
 				                           ^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#453: FILE: drivers/target/target_core_pr.c:389:
+				printk(KERN_INFO "Allowing implict CDB: 0x%02x"

WARNING:SPLIT_STRING: quoted string split across lines
#454: FILE: drivers/target/target_core_pr.c:390:
+				printk(KERN_INFO "Allowing implict CDB: 0x%02x"
+					" for %s reservation on unregistered"

WARNING:SPLIT_STRING: quoted string split across lines
#455: FILE: drivers/target/target_core_pr.c:391:
+					" for %s reservation on unregistered"
+					" nexus\n", cdb[0],

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#467: FILE: drivers/target/target_core_pr.c:403:
+#if 0

WARNING:TYPO_SPELLING: 'implict' may be misspelled - perhaps 'implicit'?
#468: FILE: drivers/target/target_core_pr.c:404:
+			printk(KERN_INFO "Allowing implict CDB: 0x%02x for %s"
 			                           ^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#468: FILE: drivers/target/target_core_pr.c:404:
+			printk(KERN_INFO "Allowing implict CDB: 0x%02x for %s"

WARNING:SPLIT_STRING: quoted string split across lines
#469: FILE: drivers/target/target_core_pr.c:405:
+			printk(KERN_INFO "Allowing implict CDB: 0x%02x for %s"
+				" reservation\n", cdb[0],

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#475: FILE: drivers/target/target_core_pr.c:411:
+	printk(KERN_INFO "%s Conflict for %sregistered nexus %s CDB: 0x%2x"

WARNING:SPLIT_STRING: quoted string split across lines
#476: FILE: drivers/target/target_core_pr.c:412:
+	printk(KERN_INFO "%s Conflict for %sregistered nexus %s CDB: 0x%2x"
+		" for %s reservation\n", transport_dump_cmd_direction(cmd),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#504: FILE: drivers/target/target_core_pr.c:440:
+static int core_scsi3_pr_reservation_check(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#545: FILE: drivers/target/target_core_pr.c:481:
+static t10_pr_registration_t *__core_scsi3_alloc_registration(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#558: FILE: drivers/target/target_core_pr.c:494:
+		printk(KERN_ERR "Unable to allocate t10_pr_registration_t\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#563: FILE: drivers/target/target_core_pr.c:499:
+	pr_reg->pr_aptpl_buf = kzalloc(T10_RES(su_dev)->pr_aptpl_buf_len,
+					GFP_ATOMIC);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#565: FILE: drivers/target/target_core_pr.c:501:
+		printk(KERN_ERR "Unable to allocate pr_reg->pr_aptpl_buf\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#586: FILE: drivers/target/target_core_pr.c:522:
+int core_scsi3_alloc_aptpl_registration(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#601: FILE: drivers/target/target_core_pr.c:537:
+		printk(KERN_ERR "Illegal parameters for APTPL registration\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#607: FILE: drivers/target/target_core_pr.c:543:
+		printk(KERN_ERR "Unable to allocate t10_pr_registration_t\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#641: FILE: drivers/target/target_core_pr.c:577:
+	printk(KERN_INFO "SPC-3 PR APTPL Successfully added registration%s from"

WARNING:SPLIT_STRING: quoted string split across lines
#642: FILE: drivers/target/target_core_pr.c:578:
+	printk(KERN_INFO "SPC-3 PR APTPL Successfully added registration%s from"
+			" metadata\n", (res_holder) ? "+reservation" : "");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#646: FILE: drivers/target/target_core_pr.c:582:
+static void core_scsi3_aptpl_reserve(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#656: FILE: drivers/target/target_core_pr.c:592:
+	printk(KERN_INFO "SPC-3 PR [%s] Service Action: APTPL RESERVE created"

WARNING:SPLIT_STRING: quoted string split across lines
#657: FILE: drivers/target/target_core_pr.c:593:
+	printk(KERN_INFO "SPC-3 PR [%s] Service Action: APTPL RESERVE created"
+		" new reservation holder TYPE: %s ALL_TG_PT: %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#661: FILE: drivers/target/target_core_pr.c:597:
+	printk(KERN_INFO "SPC-3 PR [%s] RESERVE Node: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#662: FILE: drivers/target/target_core_pr.c:598:
+	printk(KERN_INFO "SPC-3 PR [%s] RESERVE Node: %s\n",
+		TPG_TFO(tpg)->get_fabric_name(), node_acl->initiatorname);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#666: FILE: drivers/target/target_core_pr.c:602:
+static void __core_scsi3_add_registration(se_device_t *, se_node_acl_t *,
+				t10_pr_registration_t *, int, int);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#668: FILE: drivers/target/target_core_pr.c:604:
+static int __core_scsi3_check_aptpl_registration(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#689: FILE: drivers/target/target_core_pr.c:625:
+	snprintf(t_port, PR_APTPL_MAX_TPORT_LEN, "%s",
+			TPG_TFO(tpg)->tpg_get_wwn(tpg));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#694: FILE: drivers/target/target_core_pr.c:630:
+	list_for_each_entry_safe(pr_reg, pr_reg_tmp, &pr_tmpl->aptpl_reg_list,
+				pr_reg_aptpl_list) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pr_reg->pr_res_mapped_lun == deve->mapped_lun'
#695: FILE: drivers/target/target_core_pr.c:631:
+		if (!(strcmp(pr_reg->pr_iport, i_port)) &&
+		     (pr_reg->pr_res_mapped_lun == deve->mapped_lun) &&
+		    !(strcmp(pr_reg->pr_tport, t_port)) &&
+		     (pr_reg->pr_reg_tpgt == tpgt) &&
+		     (pr_reg->pr_aptpl_target_lun == target_lun)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pr_reg->pr_reg_tpgt == tpgt'
#695: FILE: drivers/target/target_core_pr.c:631:
+		if (!(strcmp(pr_reg->pr_iport, i_port)) &&
+		     (pr_reg->pr_res_mapped_lun == deve->mapped_lun) &&
+		    !(strcmp(pr_reg->pr_tport, t_port)) &&
+		     (pr_reg->pr_reg_tpgt == tpgt) &&
+		     (pr_reg->pr_aptpl_target_lun == target_lun)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pr_reg->pr_aptpl_target_lun == target_lun'
#695: FILE: drivers/target/target_core_pr.c:631:
+		if (!(strcmp(pr_reg->pr_iport, i_port)) &&
+		     (pr_reg->pr_res_mapped_lun == deve->mapped_lun) &&
+		    !(strcmp(pr_reg->pr_tport, t_port)) &&
+		     (pr_reg->pr_reg_tpgt == tpgt) &&
+		     (pr_reg->pr_aptpl_target_lun == target_lun)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#696: FILE: drivers/target/target_core_pr.c:632:
+		if (!(strcmp(pr_reg->pr_iport, i_port)) &&
+		     (pr_reg->pr_res_mapped_lun == deve->mapped_lun) &&

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#700: FILE: drivers/target/target_core_pr.c:636:
+		     (pr_reg->pr_aptpl_target_lun == target_lun)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#719: FILE: drivers/target/target_core_pr.c:655:
+				core_scsi3_aptpl_reserve(dev, tpg,
+						nacl, pr_reg);

WARNING:TYPO_SPELLING: 'Reenable' may be misspelled - perhaps 'Re-enable'?
#721: FILE: drivers/target/target_core_pr.c:657:
+			 * Reenable pr_aptpl_active to accept new metadata
 			   ^^^^^^^^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#734: FILE: drivers/target/target_core_pr.c:670:
+int core_scsi3_check_aptpl_registration(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#755: FILE: drivers/target/target_core_pr.c:691:
+static void __core_scsi3_add_registration(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#783: FILE: drivers/target/target_core_pr.c:719:
+	printk(KERN_INFO "SPC-3 PR [%s] Service Action: REGISTER%s Initiator"

WARNING:SPLIT_STRING: quoted string split across lines
#784: FILE: drivers/target/target_core_pr.c:720:
+	printk(KERN_INFO "SPC-3 PR [%s] Service Action: REGISTER%s Initiator"
+		" Node: %s\n", tfo->get_fabric_name(), (register_type == 2) ?

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#787: FILE: drivers/target/target_core_pr.c:723:
+	printk(KERN_INFO "SPC-3 PR [%s] for %s TCM Subsystem %s Object Target"

WARNING:SPLIT_STRING: quoted string split across lines
#788: FILE: drivers/target/target_core_pr.c:724:
+	printk(KERN_INFO "SPC-3 PR [%s] for %s TCM Subsystem %s Object Target"
+		" Port(s)\n",  tfo->get_fabric_name(),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#791: FILE: drivers/target/target_core_pr.c:727:
+	printk(KERN_INFO "SPC-3 PR [%s] SA Res Key: 0x%016Lx PRgeneration:"

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#791: FILE: drivers/target/target_core_pr.c:727:
+	printk(KERN_INFO "SPC-3 PR [%s] SA Res Key: 0x%016Lx PRgeneration:"

WARNING:SPLIT_STRING: quoted string split across lines
#792: FILE: drivers/target/target_core_pr.c:728:
+	printk(KERN_INFO "SPC-3 PR [%s] SA Res Key: 0x%016Lx PRgeneration:"
+		" 0x%08x  APTPL: %d\n", tfo->get_fabric_name(),

WARNING:RETURN_VOID: void function return statements are not generally useful
#798: FILE: drivers/target/target_core_pr.c:734:
+	return;
+}

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#800: FILE: drivers/target/target_core_pr.c:736:
+static int core_scsi3_alloc_registration(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#813: FILE: drivers/target/target_core_pr.c:749:
+	pr_reg = __core_scsi3_alloc_registration(dev, nacl, deve,
+			sa_res_key, all_tg_pt, aptpl);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#818: FILE: drivers/target/target_core_pr.c:754:
+	__core_scsi3_add_registration(dev, nacl, pr_reg,
+			register_type, register_move);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#822: FILE: drivers/target/target_core_pr.c:758:
+static t10_pr_registration_t *core_scsi3_locate_pr_reg(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#831: FILE: drivers/target/target_core_pr.c:767:
+	list_for_each_entry_safe(pr_reg, pr_reg_tmp,
+			&pr_tmpl->registration_list, pr_reg_list) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#850: FILE: drivers/target/target_core_pr.c:786:
+static int core_scsi3_check_implict_release(

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pr_res_holder != NULL'
#860: FILE: drivers/target/target_core_pr.c:796:
+	if ((pr_res_holder != NULL) && (pr_res_holder == pr_reg)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pr_res_holder == pr_reg'
#860: FILE: drivers/target/target_core_pr.c:796:
+	if ((pr_res_holder != NULL) && (pr_res_holder == pr_reg)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pr_res_holder"
#860: FILE: drivers/target/target_core_pr.c:796:
+	if ((pr_res_holder != NULL) && (pr_res_holder == pr_reg)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'implict' may be misspelled - perhaps 'implicit'?
#862: FILE: drivers/target/target_core_pr.c:798:
+		 * Perform an implict RELEASE if the registration that
 		              ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#877: FILE: drivers/target/target_core_pr.c:813:
+/* #warning FIXME: All Registrants, only release reservation when
+   last registration is freed. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#877: FILE: drivers/target/target_core_pr.c:813:
+   last registration is freed. */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#887: FILE: drivers/target/target_core_pr.c:823:
+static void __core_scsi3_free_registration(

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#914: FILE: drivers/target/target_core_pr.c:850:
+		printk("SPC-3 PR [%s] waiting for pr_res_holders\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#915: FILE: drivers/target/target_core_pr.c:851:
+		printk("SPC-3 PR [%s] waiting for pr_res_holders\n",
+				tfo->get_fabric_name());

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#916: FILE: drivers/target/target_core_pr.c:852:
+		msleep(10);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#920: FILE: drivers/target/target_core_pr.c:856:
+	printk(KERN_INFO "SPC-3 PR [%s] Service Action: UNREGISTER Initiator"

WARNING:SPLIT_STRING: quoted string split across lines
#921: FILE: drivers/target/target_core_pr.c:857:
+	printk(KERN_INFO "SPC-3 PR [%s] Service Action: UNREGISTER Initiator"
+		" Node: %s\n", tfo->get_fabric_name(),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#923: FILE: drivers/target/target_core_pr.c:859:
+	printk(KERN_INFO "SPC-3 PR [%s] for %s TCM Subsystem %s Object Target"

WARNING:SPLIT_STRING: quoted string split across lines
#924: FILE: drivers/target/target_core_pr.c:860:
+	printk(KERN_INFO "SPC-3 PR [%s] for %s TCM Subsystem %s Object Target"
+		" Port(s)\n", tfo->get_fabric_name(),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#927: FILE: drivers/target/target_core_pr.c:863:
+	printk(KERN_INFO "SPC-3 PR [%s] SA Res Key: 0x%016Lx PRgeneration:"

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#927: FILE: drivers/target/target_core_pr.c:863:
+	printk(KERN_INFO "SPC-3 PR [%s] SA Res Key: 0x%016Lx PRgeneration:"

WARNING:SPLIT_STRING: quoted string split across lines
#928: FILE: drivers/target/target_core_pr.c:864:
+	printk(KERN_INFO "SPC-3 PR [%s] SA Res Key: 0x%016Lx PRgeneration:"
+		" 0x%08x\n", tfo->get_fabric_name(), pr_reg->pr_res_key,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#945: FILE: drivers/target/target_core_pr.c:881:
+void core_scsi3_free_pr_reg_from_nacl(

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pr_res_holder != NULL'
#957: FILE: drivers/target/target_core_pr.c:893:
+	if ((pr_res_holder != NULL) &&
+	    (pr_res_holder->pr_reg_nacl == nacl))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pr_res_holder->pr_reg_nacl == nacl'
#957: FILE: drivers/target/target_core_pr.c:893:
+	if ((pr_res_holder != NULL) &&
+	    (pr_res_holder->pr_reg_nacl == nacl))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pr_res_holder"
#957: FILE: drivers/target/target_core_pr.c:893:
+	if ((pr_res_holder != NULL) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#966: FILE: drivers/target/target_core_pr.c:902:
+	list_for_each_entry_safe(pr_reg, pr_reg_tmp,
+			&pr_tmpl->registration_list, pr_reg_list) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#967: FILE: drivers/target/target_core_pr.c:903:
+			&pr_tmpl->registration_list, pr_reg_list) {
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#976: FILE: drivers/target/target_core_pr.c:912:
+void core_scsi3_free_all_registrations(

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pr_res_holder"
#984: FILE: drivers/target/target_core_pr.c:920:
+	if (pr_res_holder != NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#986: FILE: drivers/target/target_core_pr.c:922:
+		se_node_acl_t *pr_res_nacl = pr_res_holder->pr_reg_nacl;
+		__core_scsi3_complete_pro_release(dev, pr_res_nacl,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#987: FILE: drivers/target/target_core_pr.c:923:
+		__core_scsi3_complete_pro_release(dev, pr_res_nacl,
+				pr_res_holder, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#993: FILE: drivers/target/target_core_pr.c:929:
+	list_for_each_entry_safe(pr_reg, pr_reg_tmp,
+			&pr_tmpl->registration_list, pr_reg_list) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#994: FILE: drivers/target/target_core_pr.c:930:
+			&pr_tmpl->registration_list, pr_reg_list) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1001: FILE: drivers/target/target_core_pr.c:937:
+	list_for_each_entry_safe(pr_reg, pr_reg_tmp, &pr_tmpl->aptpl_reg_list,
+				pr_reg_aptpl_list) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1009: FILE: drivers/target/target_core_pr.c:945:
+static int core_scsi3_decode_spec_i_port(

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*tidh_new)...) over kzalloc(sizeof(struct pr_transport_id_holder)...)
#1040: FILE: drivers/target/target_core_pr.c:976:
+	tidh_new = kzalloc(sizeof(struct pr_transport_id_holder), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1042: FILE: drivers/target/target_core_pr.c:978:
+		printk(KERN_ERR "Unable to allocate tidh_new\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1050: FILE: drivers/target/target_core_pr.c:986:
+	local_pr_reg = __core_scsi3_alloc_registration(SE_DEV(cmd),
+				se_sess->se_node_acl, local_se_deve,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1075: FILE: drivers/target/target_core_pr.c:1011:
+		printk(KERN_ERR "SPC-3 PR: Illegal tpdl: %u + 28 byte header"

WARNING:SPLIT_STRING: quoted string split across lines
#1076: FILE: drivers/target/target_core_pr.c:1012:
+		printk(KERN_ERR "SPC-3 PR: Illegal tpdl: %u + 28 byte header"
+			" does not equal CDB data_length: %u\n", tpdl,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tpg_parse_pr_out_transport_id"
#1084: FILE: drivers/target/target_core_pr.c:1020:
+	if (TPG_TFO(tpg)->tpg_parse_pr_out_transport_id == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1085: FILE: drivers/target/target_core_pr.c:1021:
+		printk(KERN_ERR "SPC-3 SPEC_I_PT: Fabric does not"

WARNING:SPLIT_STRING: quoted string split across lines
#1086: FILE: drivers/target/target_core_pr.c:1022:
+		printk(KERN_ERR "SPC-3 SPEC_I_PT: Fabric does not"
+			" containing a valid tpg_parse_pr_out_transport_id"

WARNING:SPLIT_STRING: quoted string split across lines
#1087: FILE: drivers/target/target_core_pr.c:1023:
+			" containing a valid tpg_parse_pr_out_transport_id"
+			" function pointer\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1098: FILE: drivers/target/target_core_pr.c:1034:
+		i_str = TPG_TFO(tpg)->tpg_parse_pr_out_transport_id(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1102: FILE: drivers/target/target_core_pr.c:1038:
+			printk(KERN_ERR "SPC-3 PR SPEC_I_PT: Unable to locate"

WARNING:SPLIT_STRING: quoted string split across lines
#1103: FILE: drivers/target/target_core_pr.c:1039:
+			printk(KERN_ERR "SPC-3 PR SPEC_I_PT: Unable to locate"
+				" i_str from Transport ID\n");

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1107: FILE: drivers/target/target_core_pr.c:1043:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1108: FILE: drivers/target/target_core_pr.c:1044:
+		printk("SPC-3 PR SPEC_I_PT: Got %s data_length: %u tpdl: %u"

WARNING:SPLIT_STRING: quoted string split across lines
#1109: FILE: drivers/target/target_core_pr.c:1045:
+		printk("SPC-3 PR SPEC_I_PT: Got %s data_length: %u tpdl: %u"
+			" tid_len: %d for %s + %s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1114: FILE: drivers/target/target_core_pr.c:1050:
+			printk(KERN_ERR "SPC-3 PR SPEC_I_PT: Illegal tid_len:"

WARNING:SPLIT_STRING: quoted string split across lines
#1115: FILE: drivers/target/target_core_pr.c:1051:
+			printk(KERN_ERR "SPC-3 PR SPEC_I_PT: Illegal tid_len:"
+				" %u for Transport ID: %s\n", tid_len, ptr);

WARNING:TYPO_SPELLING: 'desination' may be misspelled - perhaps 'destination'?
#1120: FILE: drivers/target/target_core_pr.c:1056:
+		 * Locate the desination initiator ACL to be registered.
 		              ^^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1124: FILE: drivers/target/target_core_pr.c:1060:
+			printk(KERN_ERR "Unable to locate %s dest_node_acl"

WARNING:SPLIT_STRING: quoted string split across lines
#1125: FILE: drivers/target/target_core_pr.c:1061:
+			printk(KERN_ERR "Unable to locate %s dest_node_acl"
+				" for TransportID: %s %s\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "iport_ptr"
#1127: FILE: drivers/target/target_core_pr.c:1063:
+				i_str, (iport_ptr != NULL) ? iport_ptr : "");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1133: FILE: drivers/target/target_core_pr.c:1069:
+		ret = configfs_depend_item(TPG_TFO(tpg)->tf_subsys,
+				&dest_node_acl->acl_group.cg_item);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1135: FILE: drivers/target/target_core_pr.c:1071:
+			printk(KERN_ERR "configfs_depend_item() failed for"

WARNING:SPLIT_STRING: quoted string split across lines
#1136: FILE: drivers/target/target_core_pr.c:1072:
+			printk(KERN_ERR "configfs_depend_item() failed for"
+				" dest_node_acl->acl_group\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "iport_ptr"
#1146: FILE: drivers/target/target_core_pr.c:1082:
+		if (iport_ptr != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dest_node_acl->nacl_sess"
#1148: FILE: drivers/target/target_core_pr.c:1084:
+			if (dest_node_acl->nacl_sess == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1149: FILE: drivers/target/target_core_pr.c:1085:
+				printk(KERN_ERR "SPC-3 SPEC_I_PT: iport_ptr: %s"

WARNING:SPLIT_STRING: quoted string split across lines
#1150: FILE: drivers/target/target_core_pr.c:1086:
+				printk(KERN_ERR "SPC-3 SPEC_I_PT: iport_ptr: %s"
+					" presented in Transport ID, but no "

WARNING:SPLIT_STRING: quoted string split across lines
#1151: FILE: drivers/target/target_core_pr.c:1087:
+					" presented in Transport ID, but no "
+					" active nexus exists for %s Fabric"

WARNING:SPLIT_STRING: quoted string split across lines
#1152: FILE: drivers/target/target_core_pr.c:1088:
+					" active nexus exists for %s Fabric"
+					" Node: %s\n", iport_ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1158: FILE: drivers/target/target_core_pr.c:1094:
+				configfs_undepend_item(TPG_TFO(tpg)->tf_subsys,
+					&dest_node_acl->acl_group.cg_item);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1163: FILE: drivers/target/target_core_pr.c:1099:
+			TPG_TFO(tpg)->sess_get_initiator_wwn(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1169: FILE: drivers/target/target_core_pr.c:1105:
+				printk(KERN_ERR "SPC-3 SPEC_I_PT: dest_iport:"

WARNING:SPLIT_STRING: quoted string split across lines
#1170: FILE: drivers/target/target_core_pr.c:1106:
+				printk(KERN_ERR "SPC-3 SPEC_I_PT: dest_iport:"
+					" %s and iport_ptr: %s do not match!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1174: FILE: drivers/target/target_core_pr.c:1110:
+				configfs_undepend_item(TPG_TFO(tpg)->tf_subsys,
+					&dest_node_acl->acl_group.cg_item);

WARNING:TYPO_SPELLING: 'desintation' may be misspelled - perhaps 'destination'?
#1181: FILE: drivers/target/target_core_pr.c:1117:
+		 * Locate the desintation se_dev_entry_t pointer for matching
 		              ^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1190: FILE: drivers/target/target_core_pr.c:1126:
+		dest_se_deve = core_get_se_deve_from_rtpi(dest_node_acl,
+					port->sep_rtpi);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1192: FILE: drivers/target/target_core_pr.c:1128:
+			printk(KERN_ERR "Unable to locate %s dest_se_deve"

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#1192: FILE: drivers/target/target_core_pr.c:1128:
+			printk(KERN_ERR "Unable to locate %s dest_se_deve"
+				" from local RTPI: %hu\n",
+				TPG_TFO(tpg)->get_fabric_name(),
+				port->sep_rtpi);

WARNING:SPLIT_STRING: quoted string split across lines
#1193: FILE: drivers/target/target_core_pr.c:1129:
+			printk(KERN_ERR "Unable to locate %s dest_se_deve"
+				" from local RTPI: %hu\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1198: FILE: drivers/target/target_core_pr.c:1134:
+			configfs_undepend_item(TPG_TFO(tpg)->tf_subsys,
+				&dest_node_acl->acl_group.cg_item);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1203: FILE: drivers/target/target_core_pr.c:1139:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1204: FILE: drivers/target/target_core_pr.c:1140:
+		printk(KERN_INFO "SPC-3 PR SPEC_I_PT: Located %s Node: %s"

WARNING:SPLIT_STRING: quoted string split across lines
#1205: FILE: drivers/target/target_core_pr.c:1141:
+		printk(KERN_INFO "SPC-3 PR SPEC_I_PT: Located %s Node: %s"
+			" dest_se_deve mapped_lun: %u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1215: FILE: drivers/target/target_core_pr.c:1151:
+			configfs_undepend_item(TPG_TFO(tpg)->tf_subsys,
+			    &dest_se_deve->se_lun_acl->se_lun_group.cg_item);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1217: FILE: drivers/target/target_core_pr.c:1153:
+			configfs_undepend_item(TPG_TFO(tpg)->tf_subsys,
+			    &dest_node_acl->acl_group.cg_item);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*tidh_new)...) over kzalloc(sizeof(struct pr_transport_id_holder)...)
#1227: FILE: drivers/target/target_core_pr.c:1163:
+		tidh_new = kzalloc(sizeof(struct pr_transport_id_holder),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1228: FILE: drivers/target/target_core_pr.c:1164:
+		tidh_new = kzalloc(sizeof(struct pr_transport_id_holder),
+				GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1230: FILE: drivers/target/target_core_pr.c:1166:
+			printk(KERN_ERR "Unable to allocate tidh_new\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1255: FILE: drivers/target/target_core_pr.c:1191:
+		dest_pr_reg = __core_scsi3_alloc_registration(SE_DEV(cmd),
+				dest_node_acl, dest_se_deve,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1259: FILE: drivers/target/target_core_pr.c:1195:
+			configfs_undepend_item(TPG_TFO(tpg)->tf_subsys,
+			    &dest_se_deve->se_lun_acl->se_lun_group.cg_item);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1261: FILE: drivers/target/target_core_pr.c:1197:
+			configfs_undepend_item(TPG_TFO(tpg)->tf_subsys,
+			    &dest_node_acl->acl_group.cg_item);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1272: FILE: drivers/target/target_core_pr.c:1208:
+
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1296: FILE: drivers/target/target_core_pr.c:1232:
+		__core_scsi3_add_registration(SE_DEV(cmd), dest_node_acl,
+					dest_pr_reg, 0, 0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1298: FILE: drivers/target/target_core_pr.c:1234:
+		printk(KERN_INFO "SPC-3 PR [%s] SPEC_I_PT: Successfully"

WARNING:SPLIT_STRING: quoted string split across lines
#1299: FILE: drivers/target/target_core_pr.c:1235:
+		printk(KERN_INFO "SPC-3 PR [%s] SPEC_I_PT: Successfully"
+			" registered Transport ID for Node: %s Mapped LUN:"

WARNING:SPLIT_STRING: quoted string split across lines
#1300: FILE: drivers/target/target_core_pr.c:1236:
+			" registered Transport ID for Node: %s Mapped LUN:"
+			" %u\n", TPG_TFO(tpg)->get_fabric_name(),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1308: FILE: drivers/target/target_core_pr.c:1244:
+		configfs_undepend_item(TPG_TFO(tpg)->tf_subsys,
+			&dest_se_deve->se_lun_acl->se_lun_group.cg_item);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1310: FILE: drivers/target/target_core_pr.c:1246:
+		configfs_undepend_item(TPG_TFO(tpg)->tf_subsys,
+			&dest_node_acl->acl_group.cg_item);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1335: FILE: drivers/target/target_core_pr.c:1271:
+		configfs_undepend_item(TPG_TFO(tpg)->tf_subsys,
+			&dest_se_deve->se_lun_acl->se_lun_group.cg_item);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1337: FILE: drivers/target/target_core_pr.c:1273:
+		configfs_undepend_item(TPG_TFO(tpg)->tf_subsys,
+			&dest_node_acl->acl_group.cg_item);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1345: FILE: drivers/target/target_core_pr.c:1281:
+static int __core_scsi3_update_aptpl_buf(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1365: FILE: drivers/target/target_core_pr.c:1301:
+		snprintf(buf, pr_aptpl_buf_len,
+				"No Registrations or Reservations\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1373: FILE: drivers/target/target_core_pr.c:1309:
+	list_for_each_entry(pr_reg, &T10_RES(su_dev)->registration_list,
+			pr_reg_list) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1374: FILE: drivers/target/target_core_pr.c:1310:
+			pr_reg_list) {
+

WARNING:SPLIT_STRING: quoted string split across lines
#1384: FILE: drivers/target/target_core_pr.c:1320:
+			snprintf(tmp, 1024, "PR_REG_START: %d"
+				"\ninitiator_fabric=%s\n"

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1407: FILE: drivers/target/target_core_pr.c:1343:
+			printk(KERN_ERR "Unable to update renaming"

WARNING:SPLIT_STRING: quoted string split across lines
#1408: FILE: drivers/target/target_core_pr.c:1344:
+			printk(KERN_ERR "Unable to update renaming"
+				" APTPL metadata\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1412: FILE: drivers/target/target_core_pr.c:1348:
+		len += sprintf(buf+len, "%s", tmp);
 		                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#1419: FILE: drivers/target/target_core_pr.c:1355:
+			"tpgt=%hu\nport_rtpi=%hu\ntarget_lun=%u\nPR_REG_END:"
+			" %d\n", TPG_TFO(tpg)->get_fabric_name(),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1425: FILE: drivers/target/target_core_pr.c:1361:
+			printk(KERN_ERR "Unable to update renaming"

WARNING:SPLIT_STRING: quoted string split across lines
#1426: FILE: drivers/target/target_core_pr.c:1362:
+			printk(KERN_ERR "Unable to update renaming"
+				" APTPL metadata\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1430: FILE: drivers/target/target_core_pr.c:1366:
+		len += sprintf(buf+len, "%s", tmp);
 		                  ^

WARNING:TABSTOP: Statements should start on a tabstop
#1435: FILE: drivers/target/target_core_pr.c:1371:
+	 if (!(reg_count))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1436: FILE: drivers/target/target_core_pr.c:1372:
+		len += sprintf(buf+len, "No Registrations or Reservations");
 		                  ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1441: FILE: drivers/target/target_core_pr.c:1377:
+static int core_scsi3_update_aptpl_buf(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1451: FILE: drivers/target/target_core_pr.c:1387:
+	ret = __core_scsi3_update_aptpl_buf(dev, buf, pr_aptpl_buf_len,
+				clear_aptpl_metadata);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1460: FILE: drivers/target/target_core_pr.c:1396:
+static int __core_scsi3_write_aptpl_to_file(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1477: FILE: drivers/target/target_core_pr.c:1413:
+		printk(KERN_ERR "WWN value for se_device_t does not fit"

WARNING:SPLIT_STRING: quoted string split across lines
#1478: FILE: drivers/target/target_core_pr.c:1414:
+		printk(KERN_ERR "WWN value for se_device_t does not fit"
+			" into path buffer\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1485: FILE: drivers/target/target_core_pr.c:1421:
+		printk(KERN_ERR "filp_open(%s) for APTPL metadata"

WARNING:SPLIT_STRING: quoted string split across lines
#1486: FILE: drivers/target/target_core_pr.c:1422:
+		printk(KERN_ERR "filp_open(%s) for APTPL metadata"
+			" failed\n", path);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1502: FILE: drivers/target/target_core_pr.c:1438:
+		printk("Error writing APTPL metadata file: %s\n", path);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1511: FILE: drivers/target/target_core_pr.c:1447:
+static int core_scsi3_update_and_write_aptpl(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1537: FILE: drivers/target/target_core_pr.c:1473:
+	ret = core_scsi3_update_aptpl_buf(dev, buf, pr_aptpl_buf_len,
+				clear_aptpl_metadata);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1551: FILE: drivers/target/target_core_pr.c:1487:
+static int core_scsi3_emulate_pro_register(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1572: FILE: drivers/target/target_core_pr.c:1508:
+		printk(KERN_ERR "SPC-3 PR: se_sess || se_lun_t is NULL!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1582: FILE: drivers/target/target_core_pr.c:1518:
+			printk(KERN_WARNING "SPC-3 PR: Reservation Key non-zero"

WARNING:SPLIT_STRING: quoted string split across lines
#1583: FILE: drivers/target/target_core_pr.c:1519:
+			printk(KERN_WARNING "SPC-3 PR: Reservation Key non-zero"
+				" for SA REGISTER, returning CONFLICT\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1599: FILE: drivers/target/target_core_pr.c:1535:
+			ret = core_scsi3_alloc_registration(SE_DEV(cmd),
+					se_sess->se_node_acl, se_deve,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1603: FILE: drivers/target/target_core_pr.c:1539:
+				printk(KERN_ERR "Unable to allocate"

WARNING:SPLIT_STRING: quoted string split across lines
#1604: FILE: drivers/target/target_core_pr.c:1540:
+				printk(KERN_ERR "Unable to allocate"
+					" t10_pr_registration_t\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1617: FILE: drivers/target/target_core_pr.c:1553:
+			ret = core_scsi3_decode_spec_i_port(cmd, se_tpg,
+						sa_res_key, all_tg_pt, aptpl);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1627: FILE: drivers/target/target_core_pr.c:1563:
+			printk("SPC-3 PR: Set APTPL Bit Deactivated for"

WARNING:SPLIT_STRING: quoted string split across lines
#1628: FILE: drivers/target/target_core_pr.c:1564:
+			printk("SPC-3 PR: Set APTPL Bit Deactivated for"
+					" REGISTER\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1637: FILE: drivers/target/target_core_pr.c:1573:
+		pr_reg = core_scsi3_locate_pr_reg(SE_DEV(cmd),
+				se_sess->se_node_acl);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1640: FILE: drivers/target/target_core_pr.c:1576:
+		ret = core_scsi3_update_and_write_aptpl(SE_DEV(cmd),
+				&pr_reg->pr_aptpl_buf[0],

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1644: FILE: drivers/target/target_core_pr.c:1580:
+			printk("SPC-3 PR: Set APTPL Bit Activated for REGISTER\n");

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1649: FILE: drivers/target/target_core_pr.c:1585:
+		return ret;
+	} else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1654: FILE: drivers/target/target_core_pr.c:1590:
+		pr_reg = core_scsi3_locate_pr_reg(SE_DEV(cmd),
+				se_sess->se_node_acl);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1656: FILE: drivers/target/target_core_pr.c:1592:
+			printk(KERN_ERR "SPC-3 PR: Unable to locate"

WARNING:SPLIT_STRING: quoted string split across lines
#1657: FILE: drivers/target/target_core_pr.c:1593:
+			printk(KERN_ERR "SPC-3 PR: Unable to locate"
+				" PR_REGISTERED *pr_reg for REGISTER\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1664: FILE: drivers/target/target_core_pr.c:1600:
+				printk(KERN_ERR "SPC-3 PR REGISTER: Received"

WARNING:SPLIT_STRING: quoted string split across lines
#1665: FILE: drivers/target/target_core_pr.c:1601:
+				printk(KERN_ERR "SPC-3 PR REGISTER: Received"
+					" res_key: 0x%016Lx does not match"

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#1665: FILE: drivers/target/target_core_pr.c:1601:
+					" res_key: 0x%016Lx does not match"

WARNING:SPLIT_STRING: quoted string split across lines
#1666: FILE: drivers/target/target_core_pr.c:1602:
+					" res_key: 0x%016Lx does not match"
+					" existing SA REGISTER res_key:"

WARNING:SPLIT_STRING: quoted string split across lines
#1667: FILE: drivers/target/target_core_pr.c:1603:
+					" existing SA REGISTER res_key:"
+					" 0x%016Lx\n", res_key,

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#1667: FILE: drivers/target/target_core_pr.c:1603:
+					" 0x%016Lx\n", res_key,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1674: FILE: drivers/target/target_core_pr.c:1610:
+			printk(KERN_ERR "SPC-3 PR UNREGISTER: SPEC_I_PT"

WARNING:SPLIT_STRING: quoted string split across lines
#1675: FILE: drivers/target/target_core_pr.c:1611:
+			printk(KERN_ERR "SPC-3 PR UNREGISTER: SPEC_I_PT"
+				" set while sa_res_key=0\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1684: FILE: drivers/target/target_core_pr.c:1620:
+			pr_aptpl_buf = kzalloc(pr_tmpl->pr_aptpl_buf_len,
+						GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1686: FILE: drivers/target/target_core_pr.c:1622:
+				printk(KERN_ERR "Unable to allocate"

WARNING:SPLIT_STRING: quoted string split across lines
#1687: FILE: drivers/target/target_core_pr.c:1623:
+				printk(KERN_ERR "Unable to allocate"
+					" pr_aptpl_buf\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1698: FILE: drivers/target/target_core_pr.c:1634:
+			pr_holder = core_scsi3_check_implict_release(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1706: FILE: drivers/target/target_core_pr.c:1642:
+			__core_scsi3_free_registration(SE_DEV(cmd), pr_reg,
+							NULL, 1);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type == PR_TYPE_WRITE_EXCLUSIVE_REGONLY'
#1718: FILE: drivers/target/target_core_pr.c:1654:
+			if (pr_holder &&
+			   ((type == PR_TYPE_WRITE_EXCLUSIVE_REGONLY) ||
+			    (type == PR_TYPE_EXCLUSIVE_ACCESS_REGONLY))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type == PR_TYPE_EXCLUSIVE_ACCESS_REGONLY'
#1718: FILE: drivers/target/target_core_pr.c:1654:
+			if (pr_holder &&
+			   ((type == PR_TYPE_WRITE_EXCLUSIVE_REGONLY) ||
+			    (type == PR_TYPE_EXCLUSIVE_ACCESS_REGONLY))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1719: FILE: drivers/target/target_core_pr.c:1655:
+			if (pr_holder &&
+			   ((type == PR_TYPE_WRITE_EXCLUSIVE_REGONLY) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1722: FILE: drivers/target/target_core_pr.c:1658:
+				list_for_each_entry(pr_reg_p,
+						&pr_tmpl->registration_list,

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1724: FILE: drivers/target/target_core_pr.c:1660:
+						pr_reg_list) {
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1725: FILE: drivers/target/target_core_pr.c:1661:
+					core_scsi3_ua_allocate(

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1737: FILE: drivers/target/target_core_pr.c:1673:
+				printk("SPC-3 PR: Set APTPL Bit Deactivated"

WARNING:SPLIT_STRING: quoted string split across lines
#1738: FILE: drivers/target/target_core_pr.c:1674:
+				printk("SPC-3 PR: Set APTPL Bit Deactivated"
+						" for UNREGISTER\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1743: FILE: drivers/target/target_core_pr.c:1679:
+			ret = core_scsi3_update_and_write_aptpl(dev,
+					&pr_aptpl_buf[0],

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1747: FILE: drivers/target/target_core_pr.c:1683:
+				printk("SPC-3 PR: Set APTPL Bit Activated"

WARNING:SPLIT_STRING: quoted string split across lines
#1748: FILE: drivers/target/target_core_pr.c:1684:
+				printk("SPC-3 PR: Set APTPL Bit Activated"
+						" for UNREGISTER\n");

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1753: FILE: drivers/target/target_core_pr.c:1689:
+			return ret;
+		} else {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1759: FILE: drivers/target/target_core_pr.c:1695:
+			pr_reg->pr_res_generation = core_scsi3_pr_generation(

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1762: FILE: drivers/target/target_core_pr.c:1698:
+			printk("SPC-3 PR [%s] REGISTER%s: Changed Reservation"

WARNING:SPLIT_STRING: quoted string split across lines
#1763: FILE: drivers/target/target_core_pr.c:1699:
+			printk("SPC-3 PR [%s] REGISTER%s: Changed Reservation"
+				" Key for %s to: 0x%016Lx PRgeneration:"

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#1763: FILE: drivers/target/target_core_pr.c:1699:
+				" Key for %s to: 0x%016Lx PRgeneration:"

WARNING:SPLIT_STRING: quoted string split across lines
#1764: FILE: drivers/target/target_core_pr.c:1700:
+				" Key for %s to: 0x%016Lx PRgeneration:"
+				" 0x%08x\n", CMD_TFO(cmd)->get_fabric_name(),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1797: FILE: drivers/target/target_core_pr.c:1733:
+static int core_scsi3_pro_reserve(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1813: FILE: drivers/target/target_core_pr.c:1749:
+		printk(KERN_ERR "SPC-3 PR: se_sess || se_lun_t is NULL!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1823: FILE: drivers/target/target_core_pr.c:1759:
+		printk(KERN_ERR "SPC-3 PR: Unable to locate"

WARNING:SPLIT_STRING: quoted string split across lines
#1824: FILE: drivers/target/target_core_pr.c:1760:
+		printk(KERN_ERR "SPC-3 PR: Unable to locate"
+			" PR_REGISTERED *pr_reg for RESERVE\n");

WARNING:TYPO_SPELLING: 'recevied' may be misspelled - perhaps 'received'?
#1828: FILE: drivers/target/target_core_pr.c:1764:
+	 * For a given ALL_TG_PT=0 PR registration, a recevied PR reserve must
 	                                              ^^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pr_reg->pr_reg_tg_pt_lun != se_lun'
#1831: FILE: drivers/target/target_core_pr.c:1767:
+	if (!(pr_reg->pr_reg_all_tg_pt) &&
+	     (pr_reg->pr_reg_tg_pt_lun != se_lun)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1832: FILE: drivers/target/target_core_pr.c:1768:
+	if (!(pr_reg->pr_reg_all_tg_pt) &&
+	     (pr_reg->pr_reg_tg_pt_lun != se_lun)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1833: FILE: drivers/target/target_core_pr.c:1769:
+		printk(KERN_ERR "SPC-3 PR: Unable to handle RESERVE because"

WARNING:SPLIT_STRING: quoted string split across lines
#1834: FILE: drivers/target/target_core_pr.c:1770:
+		printk(KERN_ERR "SPC-3 PR: Unable to handle RESERVE because"
+			" ALL_TG_PT=0 and RESERVE was not received on same"

WARNING:SPLIT_STRING: quoted string split across lines
#1835: FILE: drivers/target/target_core_pr.c:1771:
+			" ALL_TG_PT=0 and RESERVE was not received on same"
+			" target port as REGISTER\n");

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1846: FILE: drivers/target/target_core_pr.c:1782:
+^I * ^I registered with the logical unit for the I_T nexus; and$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1849: FILE: drivers/target/target_core_pr.c:1785:
+		printk(KERN_ERR "SPC-3 PR RESERVE: Received res_key: 0x%016Lx"

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#1849: FILE: drivers/target/target_core_pr.c:1785:
+		printk(KERN_ERR "SPC-3 PR RESERVE: Received res_key: 0x%016Lx"

WARNING:SPLIT_STRING: quoted string split across lines
#1850: FILE: drivers/target/target_core_pr.c:1786:
+		printk(KERN_ERR "SPC-3 PR RESERVE: Received res_key: 0x%016Lx"
+			" does not match existing SA REGISTER res_key:"

WARNING:SPLIT_STRING: quoted string split across lines
#1851: FILE: drivers/target/target_core_pr.c:1787:
+			" does not match existing SA REGISTER res_key:"
+			" 0x%016Lx\n", res_key, pr_reg->pr_res_key);

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#1851: FILE: drivers/target/target_core_pr.c:1787:
+			" 0x%016Lx\n", res_key, pr_reg->pr_res_key);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1866: FILE: drivers/target/target_core_pr.c:1802:
+		printk(KERN_ERR "SPC-3 PR: Illegal SCOPE: 0x%02x\n", scope);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1890: FILE: drivers/target/target_core_pr.c:1826:
+			se_node_acl_t *pr_res_nacl = pr_res_holder->pr_reg_nacl;
+			printk(KERN_ERR "SPC-3 PR: Attempted RESERVE from"

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1890: FILE: drivers/target/target_core_pr.c:1826:
+			printk(KERN_ERR "SPC-3 PR: Attempted RESERVE from"

WARNING:SPLIT_STRING: quoted string split across lines
#1891: FILE: drivers/target/target_core_pr.c:1827:
+			printk(KERN_ERR "SPC-3 PR: Attempted RESERVE from"
+				" [%s]: %s while reservation already held by"

WARNING:SPLIT_STRING: quoted string split across lines
#1892: FILE: drivers/target/target_core_pr.c:1828:
+				" [%s]: %s while reservation already held by"
+				" [%s]: %s, returning RESERVATION_CONFLICT\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pr_res_holder->pr_res_type != type'
#1909: FILE: drivers/target/target_core_pr.c:1845:
+		if ((pr_res_holder->pr_res_type != type) ||
+		    (pr_res_holder->pr_res_scope != scope)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pr_res_holder->pr_res_scope != scope'
#1909: FILE: drivers/target/target_core_pr.c:1845:
+		if ((pr_res_holder->pr_res_type != type) ||
+		    (pr_res_holder->pr_res_scope != scope)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1912: FILE: drivers/target/target_core_pr.c:1848:
+			se_node_acl_t *pr_res_nacl = pr_res_holder->pr_reg_nacl;
+			printk(KERN_ERR "SPC-3 PR: Attempted RESERVE from"

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1912: FILE: drivers/target/target_core_pr.c:1848:
+			printk(KERN_ERR "SPC-3 PR: Attempted RESERVE from"

WARNING:SPLIT_STRING: quoted string split across lines
#1913: FILE: drivers/target/target_core_pr.c:1849:
+			printk(KERN_ERR "SPC-3 PR: Attempted RESERVE from"
+				" [%s]: %s trying to change TYPE and/or SCOPE,"

WARNING:SPLIT_STRING: quoted string split across lines
#1914: FILE: drivers/target/target_core_pr.c:1850:
+				" [%s]: %s trying to change TYPE and/or SCOPE,"
+				" while reservation already held by [%s]: %s,"

WARNING:SPLIT_STRING: quoted string split across lines
#1915: FILE: drivers/target/target_core_pr.c:1851:
+				" while reservation already held by [%s]: %s,"
+				" returning RESERVATION_CONFLICT\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1948: FILE: drivers/target/target_core_pr.c:1884:
+	printk(KERN_INFO "SPC-3 PR [%s] Service Action: RESERVE created new"

WARNING:SPLIT_STRING: quoted string split across lines
#1949: FILE: drivers/target/target_core_pr.c:1885:
+	printk(KERN_INFO "SPC-3 PR [%s] Service Action: RESERVE created new"
+		" reservation holder TYPE: %s ALL_TG_PT: %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1952: FILE: drivers/target/target_core_pr.c:1888:
+	printk(KERN_INFO "SPC-3 PR [%s] RESERVE Node: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1953: FILE: drivers/target/target_core_pr.c:1889:
+	printk(KERN_INFO "SPC-3 PR [%s] RESERVE Node: %s\n",
+			CMD_TFO(cmd)->get_fabric_name(),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1959: FILE: drivers/target/target_core_pr.c:1895:
+		ret = core_scsi3_update_and_write_aptpl(SE_DEV(cmd),
+				&pr_reg->pr_aptpl_buf[0],

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1962: FILE: drivers/target/target_core_pr.c:1898:
+			printk(KERN_INFO "SPC-3 PR: Updated APTPL metadata"

WARNING:SPLIT_STRING: quoted string split across lines
#1963: FILE: drivers/target/target_core_pr.c:1899:
+			printk(KERN_INFO "SPC-3 PR: Updated APTPL metadata"
+					" for RESERVE\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1970: FILE: drivers/target/target_core_pr.c:1906:
+static int core_scsi3_emulate_pro_reserve(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1989: FILE: drivers/target/target_core_pr.c:1925:
+		printk(KERN_ERR "SPC-3 PR: Unknown Service Action RESERVE Type:"

WARNING:SPLIT_STRING: quoted string split across lines
#1990: FILE: drivers/target/target_core_pr.c:1926:
+		printk(KERN_ERR "SPC-3 PR: Unknown Service Action RESERVE Type:"
+			" 0x%02x\n", type);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2000: FILE: drivers/target/target_core_pr.c:1936:
+static void __core_scsi3_complete_pro_release(

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#2004: FILE: drivers/target/target_core_pr.c:1940:
+	int explict)
 	    ^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2012: FILE: drivers/target/target_core_pr.c:1948:
+	printk(KERN_INFO "SPC-3 PR [%s] Service Action: %s RELEASE cleared"

WARNING:SPLIT_STRING: quoted string split across lines
#2013: FILE: drivers/target/target_core_pr.c:1949:
+	printk(KERN_INFO "SPC-3 PR [%s] Service Action: %s RELEASE cleared"
+		" reservation holder TYPE: %s ALL_TG_PT: %d\n",

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#2014: FILE: drivers/target/target_core_pr.c:1950:
+		tfo->get_fabric_name(), (explict) ? "explict" : "implict",
 		                         ^^^^^^^

WARNING:TYPO_SPELLING: 'explict' may be misspelled - perhaps 'explicit'?
#2014: FILE: drivers/target/target_core_pr.c:1950:
+		tfo->get_fabric_name(), (explict) ? "explict" : "implict",
 		                                     ^^^^^^^

WARNING:TYPO_SPELLING: 'implict' may be misspelled - perhaps 'implicit'?
#2014: FILE: drivers/target/target_core_pr.c:1950:
+		tfo->get_fabric_name(), (explict) ? "explict" : "implict",
 		                                                 ^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2017: FILE: drivers/target/target_core_pr.c:1953:
+	printk(KERN_INFO "SPC-3 PR [%s] RELEASE Node: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2018: FILE: drivers/target/target_core_pr.c:1954:
+	printk(KERN_INFO "SPC-3 PR [%s] RELEASE Node: %s\n",
+		tfo->get_fabric_name(),

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2023: FILE: drivers/target/target_core_pr.c:1959:
+	pr_reg->pr_res_holder = pr_reg->pr_res_type = pr_reg->pr_res_scope = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2026: FILE: drivers/target/target_core_pr.c:1962:
+static int core_scsi3_emulate_pro_release(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2040: FILE: drivers/target/target_core_pr.c:1976:
+		printk(KERN_ERR "SPC-3 PR: se_sess || se_lun_t is NULL!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2048: FILE: drivers/target/target_core_pr.c:1984:
+		printk(KERN_ERR "SPC-3 PR: Unable to locate"

WARNING:SPLIT_STRING: quoted string split across lines
#2049: FILE: drivers/target/target_core_pr.c:1985:
+		printk(KERN_ERR "SPC-3 PR: Unable to locate"
+			" PR_REGISTERED *pr_reg for RELEASE\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2098: FILE: drivers/target/target_core_pr.c:2034:
+		printk(KERN_ERR "SPC-3 PR RELEASE: Received res_key: 0x%016Lx"

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#2098: FILE: drivers/target/target_core_pr.c:2034:
+		printk(KERN_ERR "SPC-3 PR RELEASE: Received res_key: 0x%016Lx"

WARNING:SPLIT_STRING: quoted string split across lines
#2099: FILE: drivers/target/target_core_pr.c:2035:
+		printk(KERN_ERR "SPC-3 PR RELEASE: Received res_key: 0x%016Lx"
+			" does not match existing SA REGISTER res_key:"

WARNING:SPLIT_STRING: quoted string split across lines
#2100: FILE: drivers/target/target_core_pr.c:2036:
+			" does not match existing SA REGISTER res_key:"
+			" 0x%016Lx\n", res_key, pr_reg->pr_res_key);

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#2100: FILE: drivers/target/target_core_pr.c:2036:
+			" 0x%016Lx\n", res_key, pr_reg->pr_res_key);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pr_res_holder->pr_res_type != type'
#2111: FILE: drivers/target/target_core_pr.c:2047:
+	if ((pr_res_holder->pr_res_type != type) ||
+	    (pr_res_holder->pr_res_scope != scope)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pr_res_holder->pr_res_scope != scope'
#2111: FILE: drivers/target/target_core_pr.c:2047:
+	if ((pr_res_holder->pr_res_type != type) ||
+	    (pr_res_holder->pr_res_scope != scope)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#2114: FILE: drivers/target/target_core_pr.c:2050:
+		se_node_acl_t *pr_res_nacl = pr_res_holder->pr_reg_nacl;
+		printk(KERN_ERR "SPC-3 PR RELEASE: Attempted to release"

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2114: FILE: drivers/target/target_core_pr.c:2050:
+		printk(KERN_ERR "SPC-3 PR RELEASE: Attempted to release"

WARNING:SPLIT_STRING: quoted string split across lines
#2115: FILE: drivers/target/target_core_pr.c:2051:
+		printk(KERN_ERR "SPC-3 PR RELEASE: Attempted to release"
+			" reservation from [%s]: %s with different TYPE "

WARNING:SPLIT_STRING: quoted string split across lines
#2116: FILE: drivers/target/target_core_pr.c:2052:
+			" reservation from [%s]: %s with different TYPE "
+			"and/or SCOPE  while reservation already held by"

WARNING:SPLIT_STRING: quoted string split across lines
#2117: FILE: drivers/target/target_core_pr.c:2053:
+			"and/or SCOPE  while reservation already held by"
+			" [%s]: %s, returning RESERVATION_CONFLICT\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2144: FILE: drivers/target/target_core_pr.c:2080:
+	__core_scsi3_complete_pro_release(dev, se_sess->se_node_acl,
+			pr_reg, 1);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type != PR_TYPE_WRITE_EXCLUSIVE_REGONLY'
#2146: FILE: drivers/target/target_core_pr.c:2082:
+	if ((type != PR_TYPE_WRITE_EXCLUSIVE_REGONLY) &&
+	    (type != PR_TYPE_EXCLUSIVE_ACCESS_REGONLY) &&
+	    (type != PR_TYPE_WRITE_EXCLUSIVE_ALLREG) &&
+	    (type != PR_TYPE_EXCLUSIVE_ACCESS_ALLREG)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type != PR_TYPE_EXCLUSIVE_ACCESS_REGONLY'
#2146: FILE: drivers/target/target_core_pr.c:2082:
+	if ((type != PR_TYPE_WRITE_EXCLUSIVE_REGONLY) &&
+	    (type != PR_TYPE_EXCLUSIVE_ACCESS_REGONLY) &&
+	    (type != PR_TYPE_WRITE_EXCLUSIVE_ALLREG) &&
+	    (type != PR_TYPE_EXCLUSIVE_ACCESS_ALLREG)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type != PR_TYPE_WRITE_EXCLUSIVE_ALLREG'
#2146: FILE: drivers/target/target_core_pr.c:2082:
+	if ((type != PR_TYPE_WRITE_EXCLUSIVE_REGONLY) &&
+	    (type != PR_TYPE_EXCLUSIVE_ACCESS_REGONLY) &&
+	    (type != PR_TYPE_WRITE_EXCLUSIVE_ALLREG) &&
+	    (type != PR_TYPE_EXCLUSIVE_ACCESS_ALLREG)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type != PR_TYPE_EXCLUSIVE_ACCESS_ALLREG'
#2146: FILE: drivers/target/target_core_pr.c:2082:
+	if ((type != PR_TYPE_WRITE_EXCLUSIVE_REGONLY) &&
+	    (type != PR_TYPE_EXCLUSIVE_ACCESS_REGONLY) &&
+	    (type != PR_TYPE_WRITE_EXCLUSIVE_ALLREG) &&
+	    (type != PR_TYPE_EXCLUSIVE_ACCESS_ALLREG)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2158: FILE: drivers/target/target_core_pr.c:2094:
+	list_for_each_entry(pr_reg_p, &pr_tmpl->registration_list,
+			pr_reg_list) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2167: FILE: drivers/target/target_core_pr.c:2103:
+		core_scsi3_ua_allocate(pr_reg_p->pr_reg_nacl,
+				pr_reg_p->pr_res_mapped_lun,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2174: FILE: drivers/target/target_core_pr.c:2110:
+		ret = core_scsi3_update_and_write_aptpl(SE_DEV(cmd),
+				&pr_reg->pr_aptpl_buf[0],

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2177: FILE: drivers/target/target_core_pr.c:2113:
+			printk("SPC-3 PR: Updated APTPL metadata for RELEASE\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2184: FILE: drivers/target/target_core_pr.c:2120:
+static int core_scsi3_emulate_pro_clear(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2199: FILE: drivers/target/target_core_pr.c:2135:
+	pr_reg_n = core_scsi3_locate_pr_reg(SE_DEV(cmd),
+			se_sess->se_node_acl);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2201: FILE: drivers/target/target_core_pr.c:2137:
+		printk(KERN_ERR "SPC-3 PR: Unable to locate"

WARNING:SPLIT_STRING: quoted string split across lines
#2202: FILE: drivers/target/target_core_pr.c:2138:
+		printk(KERN_ERR "SPC-3 PR: Unable to locate"
+			" PR_REGISTERED *pr_reg for CLEAR\n");

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2214: FILE: drivers/target/target_core_pr.c:2150:
+^I * ^I   that is registered with the logical unit for the I_T nexus.$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2217: FILE: drivers/target/target_core_pr.c:2153:
+		printk(KERN_ERR "SPC-3 PR REGISTER: Received"

WARNING:SPLIT_STRING: quoted string split across lines
#2218: FILE: drivers/target/target_core_pr.c:2154:
+		printk(KERN_ERR "SPC-3 PR REGISTER: Received"
+			" res_key: 0x%016Lx does not match"

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#2218: FILE: drivers/target/target_core_pr.c:2154:
+			" res_key: 0x%016Lx does not match"

WARNING:SPLIT_STRING: quoted string split across lines
#2219: FILE: drivers/target/target_core_pr.c:2155:
+			" res_key: 0x%016Lx does not match"
+			" existing SA REGISTER res_key:"

WARNING:SPLIT_STRING: quoted string split across lines
#2220: FILE: drivers/target/target_core_pr.c:2156:
+			" existing SA REGISTER res_key:"
+			" 0x%016Lx\n", res_key, pr_reg_n->pr_res_key);

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#2220: FILE: drivers/target/target_core_pr.c:2156:
+			" 0x%016Lx\n", res_key, pr_reg_n->pr_res_key);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2231: FILE: drivers/target/target_core_pr.c:2167:
+		se_node_acl_t *pr_res_nacl = pr_res_holder->pr_reg_nacl;
+		__core_scsi3_complete_pro_release(dev, pr_res_nacl,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2232: FILE: drivers/target/target_core_pr.c:2168:
+		__core_scsi3_complete_pro_release(dev, pr_res_nacl,
+			pr_res_holder, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2240: FILE: drivers/target/target_core_pr.c:2176:
+	list_for_each_entry_safe(pr_reg, pr_reg_tmp,
+			&pr_tmpl->registration_list, pr_reg_list) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2241: FILE: drivers/target/target_core_pr.c:2177:
+			&pr_tmpl->registration_list, pr_reg_list) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2246: FILE: drivers/target/target_core_pr.c:2182:
+		__core_scsi3_free_registration(dev, pr_reg, NULL,
+					calling_it_nexus);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2256: FILE: drivers/target/target_core_pr.c:2192:
+			core_scsi3_ua_allocate(pr_reg_nacl, pr_res_mapped_lun,
+				0x2A, ASCQ_2AH_RESERVATIONS_PREEMPTED);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2260: FILE: drivers/target/target_core_pr.c:2196:
+	printk(KERN_INFO "SPC-3 PR [%s] Service Action: CLEAR complete\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2261: FILE: drivers/target/target_core_pr.c:2197:
+	printk(KERN_INFO "SPC-3 PR [%s] Service Action: CLEAR complete\n",
+		CMD_TFO(cmd)->get_fabric_name());

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2265: FILE: drivers/target/target_core_pr.c:2201:
+		printk(KERN_INFO "SPC-3 PR: Updated APTPL metadata"

WARNING:SPLIT_STRING: quoted string split across lines
#2266: FILE: drivers/target/target_core_pr.c:2202:
+		printk(KERN_INFO "SPC-3 PR: Updated APTPL metadata"
+				" for CLEAR\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2276: FILE: drivers/target/target_core_pr.c:2212:
+static void __core_scsi3_complete_pro_preempt(

WARNING:TYPO_SPELLING: 'implict' may be misspelled - perhaps 'implicit'?
#2287: FILE: drivers/target/target_core_pr.c:2223:
+	 * Do an implict RELEASE of the existing reservation.
 	         ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2291: FILE: drivers/target/target_core_pr.c:2227:
+		__core_scsi3_complete_pro_release(dev, nacl,
+				dev->dev_pr_res_holder, 0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2298: FILE: drivers/target/target_core_pr.c:2234:
+	printk(KERN_INFO "SPC-3 PR [%s] Service Action: PREEMPT%s created new"

WARNING:SPLIT_STRING: quoted string split across lines
#2299: FILE: drivers/target/target_core_pr.c:2235:
+	printk(KERN_INFO "SPC-3 PR [%s] Service Action: PREEMPT%s created new"
+		" reservation holder TYPE: %s ALL_TG_PT: %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2303: FILE: drivers/target/target_core_pr.c:2239:
+	printk(KERN_INFO "SPC-3 PR [%s] PREEMPT%s from Node: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2304: FILE: drivers/target/target_core_pr.c:2240:
+	printk(KERN_INFO "SPC-3 PR [%s] PREEMPT%s from Node: %s\n",
+		tfo->get_fabric_name(), (abort) ? "_AND_ABORT" : "",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2313: FILE: drivers/target/target_core_pr.c:2249:
+		list_add_tail(&pr_reg->pr_reg_abort_list,
+				preempt_and_abort_list);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2316: FILE: drivers/target/target_core_pr.c:2252:
+static void core_scsi3_release_preempt_and_abort(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2323: FILE: drivers/target/target_core_pr.c:2259:
+	list_for_each_entry_safe(pr_reg, pr_reg_tmp, preempt_and_abort_list,
+				pr_reg_abort_list) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2324: FILE: drivers/target/target_core_pr.c:2260:
+				pr_reg_abort_list) {
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2329: FILE: drivers/target/target_core_pr.c:2265:
+			printk(KERN_WARNING "pr_reg->pr_res_holder still set\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2340: FILE: drivers/target/target_core_pr.c:2276:
+int core_scsi3_check_cdb_abort_and_preempt(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2347: FILE: drivers/target/target_core_pr.c:2283:
+	list_for_each_entry_safe(pr_reg, pr_reg_tmp, preempt_and_abort_list,
+				pr_reg_abort_list) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2355: FILE: drivers/target/target_core_pr.c:2291:
+static int core_scsi3_pro_preempt(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2383: FILE: drivers/target/target_core_pr.c:2319:
+		printk(KERN_ERR "SPC-3 PR: Unable to locate"

WARNING:SPLIT_STRING: quoted string split across lines
#2384: FILE: drivers/target/target_core_pr.c:2320:
+		printk(KERN_ERR "SPC-3 PR: Unable to locate"
+			" PR_REGISTERED *pr_reg for PREEMPT%s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2393: FILE: drivers/target/target_core_pr.c:2329:
+		printk(KERN_ERR "SPC-3 PR: Illegal SCOPE: 0x%02x\n", scope);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pr_res_holder->pr_res_type == PR_TYPE_WRITE_EXCLUSIVE_ALLREG'
#2401: FILE: drivers/target/target_core_pr.c:2337:
+	if (pr_res_holder &&
+	   ((pr_res_holder->pr_res_type == PR_TYPE_WRITE_EXCLUSIVE_ALLREG) ||
+	    (pr_res_holder->pr_res_type == PR_TYPE_EXCLUSIVE_ACCESS_ALLREG)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pr_res_holder->pr_res_type == PR_TYPE_EXCLUSIVE_ACCESS_ALLREG'
#2401: FILE: drivers/target/target_core_pr.c:2337:
+	if (pr_res_holder &&
+	   ((pr_res_holder->pr_res_type == PR_TYPE_WRITE_EXCLUSIVE_ALLREG) ||
+	    (pr_res_holder->pr_res_type == PR_TYPE_EXCLUSIVE_ACCESS_ALLREG)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2402: FILE: drivers/target/target_core_pr.c:2338:
+	if (pr_res_holder &&
+	   ((pr_res_holder->pr_res_type == PR_TYPE_WRITE_EXCLUSIVE_ALLREG) ||

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pr_res_holder->pr_res_key != sa_res_key'
#2420: FILE: drivers/target/target_core_pr.c:2356:
+	if (!(pr_res_holder) || (pr_res_holder->pr_res_key != sa_res_key)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2429: FILE: drivers/target/target_core_pr.c:2365:
+		list_for_each_entry_safe(pr_reg, pr_reg_tmp,
+				&pr_tmpl->registration_list, pr_reg_list) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2455: FILE: drivers/target/target_core_pr.c:2391:
+				__core_scsi3_free_registration(dev, pr_reg,
+					(abort) ? &preempt_and_abort_list :

WARNING:TYPO_SPELLING: 'implict' may be misspelled - perhaps 'implicit'?
#2465: FILE: drivers/target/target_core_pr.c:2401:
+				 * all other registrations and do an implict
 				                                     ^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pr_reg->pr_res_key != sa_res_key'
#2472: FILE: drivers/target/target_core_pr.c:2408:
+				if ((sa_res_key) &&
+				     (pr_reg->pr_res_key != sa_res_key))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2473: FILE: drivers/target/target_core_pr.c:2409:
+				if ((sa_res_key) &&
+				     (pr_reg->pr_res_key != sa_res_key))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2483: FILE: drivers/target/target_core_pr.c:2419:
+				__core_scsi3_free_registration(dev, pr_reg,
+					(abort) ? &preempt_and_abort_list :

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2489: FILE: drivers/target/target_core_pr.c:2425:
+				core_scsi3_ua_allocate(pr_reg_nacl,
+					pr_res_mapped_lun, 0x2A,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2512: FILE: drivers/target/target_core_pr.c:2448:
+			__core_scsi3_complete_pro_preempt(dev, pr_reg_n,
+				(abort) ? &preempt_and_abort_list : NULL,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2516: FILE: drivers/target/target_core_pr.c:2452:
+				core_scsi3_release_preempt_and_abort(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2523: FILE: drivers/target/target_core_pr.c:2459:
+			ret = core_scsi3_update_and_write_aptpl(SE_DEV(cmd),
+					&pr_reg_n->pr_aptpl_buf[0],

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2526: FILE: drivers/target/target_core_pr.c:2462:
+				printk(KERN_INFO "SPC-3 PR: Updated APTPL"

WARNING:SPLIT_STRING: quoted string split across lines
#2527: FILE: drivers/target/target_core_pr.c:2463:
+				printk(KERN_INFO "SPC-3 PR: Updated APTPL"
+					" metadata for  PREEMPT%s\n", (abort) ?

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2567: FILE: drivers/target/target_core_pr.c:2503:
+		__core_scsi3_complete_pro_release(dev,
+				pr_res_holder->pr_reg_nacl,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2581: FILE: drivers/target/target_core_pr.c:2517:
+	list_for_each_entry_safe(pr_reg, pr_reg_tmp,
+			&pr_tmpl->registration_list, pr_reg_list) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2582: FILE: drivers/target/target_core_pr.c:2518:
+			&pr_tmpl->registration_list, pr_reg_list) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2593: FILE: drivers/target/target_core_pr.c:2529:
+		__core_scsi3_free_registration(dev, pr_reg,
+				(abort) ? &preempt_and_abort_list : NULL,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2602: FILE: drivers/target/target_core_pr.c:2538:
+		core_scsi3_ua_allocate(pr_reg_nacl, pr_res_mapped_lun, 0x2A,
+				ASCQ_2AH_RESERVATIONS_PREEMPTED);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2610: FILE: drivers/target/target_core_pr.c:2546:
+	__core_scsi3_complete_pro_preempt(dev, pr_reg_n,
+			(abort) ? &preempt_and_abort_list : NULL,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'prh_type != type'
#2625: FILE: drivers/target/target_core_pr.c:2561:
+	if ((prh_type != type) || (prh_scope != scope)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'prh_scope != scope'
#2625: FILE: drivers/target/target_core_pr.c:2561:
+	if ((prh_type != type) || (prh_scope != scope)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2628: FILE: drivers/target/target_core_pr.c:2564:
+		list_for_each_entry_safe(pr_reg, pr_reg_tmp,
+				&pr_tmpl->registration_list, pr_reg_list) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2629: FILE: drivers/target/target_core_pr.c:2565:
+				&pr_tmpl->registration_list, pr_reg_list) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2635: FILE: drivers/target/target_core_pr.c:2571:
+			core_scsi3_ua_allocate(pr_reg->pr_reg_nacl,
+					pr_reg->pr_res_mapped_lun, 0x2A,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2654: FILE: drivers/target/target_core_pr.c:2590:
+		core_scsi3_release_preempt_and_abort(&preempt_and_abort_list,
+						pr_reg_n);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2659: FILE: drivers/target/target_core_pr.c:2595:
+		ret = core_scsi3_update_and_write_aptpl(SE_DEV(cmd),
+				&pr_reg_n->pr_aptpl_buf[0],

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2662: FILE: drivers/target/target_core_pr.c:2598:
+			printk("SPC-3 PR: Updated APTPL metadata for PREEMPT"

WARNING:SPLIT_STRING: quoted string split across lines
#2663: FILE: drivers/target/target_core_pr.c:2599:
+			printk("SPC-3 PR: Updated APTPL metadata for PREEMPT"
+				"%s\n", (abort) ? "_AND_ABORT" : "");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2671: FILE: drivers/target/target_core_pr.c:2607:
+static int core_scsi3_emulate_pro_preempt(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2689: FILE: drivers/target/target_core_pr.c:2625:
+		ret = core_scsi3_pro_preempt(cmd, type, scope,
+				res_key, sa_res_key, abort);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2692: FILE: drivers/target/target_core_pr.c:2628:
+		printk(KERN_ERR "SPC-3 PR: Unknown Service Action PREEMPT%s"

WARNING:SPLIT_STRING: quoted string split across lines
#2693: FILE: drivers/target/target_core_pr.c:2629:
+		printk(KERN_ERR "SPC-3 PR: Unknown Service Action PREEMPT%s"
+			" Type: 0x%02x\n", (abort) ? "_AND_ABORT" : "", type);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2700: FILE: drivers/target/target_core_pr.c:2636:
+
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2701: FILE: drivers/target/target_core_pr.c:2637:
+static int core_scsi3_emulate_pro_register_and_move(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2727: FILE: drivers/target/target_core_pr.c:2663:
+		printk(KERN_ERR "SPC-3 PR: se_sess || se_lun_t is NULL!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2739: FILE: drivers/target/target_core_pr.c:2675:
+		printk(KERN_WARNING "SPC-3 PR: Received REGISTER_AND_MOVE SA"

WARNING:SPLIT_STRING: quoted string split across lines
#2740: FILE: drivers/target/target_core_pr.c:2676:
+		printk(KERN_WARNING "SPC-3 PR: Received REGISTER_AND_MOVE SA"
+				" from unregistered nexus\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2748: FILE: drivers/target/target_core_pr.c:2684:
+		printk(KERN_ERR "SPC-3 PR: Unable to locate PR_REGISTERED"

WARNING:SPLIT_STRING: quoted string split across lines
#2749: FILE: drivers/target/target_core_pr.c:2685:
+		printk(KERN_ERR "SPC-3 PR: Unable to locate PR_REGISTERED"
+			" *pr_reg for REGISTER_AND_MOVE\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2757: FILE: drivers/target/target_core_pr.c:2693:
+		printk(KERN_WARNING "SPC-3 PR REGISTER_AND_MOVE: Received"

WARNING:SPLIT_STRING: quoted string split across lines
#2758: FILE: drivers/target/target_core_pr.c:2694:
+		printk(KERN_WARNING "SPC-3 PR REGISTER_AND_MOVE: Received"
+			" res_key: 0x%016Lx does not match existing SA REGISTER"

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#2758: FILE: drivers/target/target_core_pr.c:2694:
+			" res_key: 0x%016Lx does not match existing SA REGISTER"

WARNING:SPLIT_STRING: quoted string split across lines
#2759: FILE: drivers/target/target_core_pr.c:2695:
+			" res_key: 0x%016Lx does not match existing SA REGISTER"
+			" res_key: 0x%016Lx\n", res_key, pr_reg->pr_res_key);

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#2759: FILE: drivers/target/target_core_pr.c:2695:
+			" res_key: 0x%016Lx\n", res_key, pr_reg->pr_res_key);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2767: FILE: drivers/target/target_core_pr.c:2703:
+		printk(KERN_WARNING "SPC-3 PR REGISTER_AND_MOVE: Received zero"

WARNING:SPLIT_STRING: quoted string split across lines
#2768: FILE: drivers/target/target_core_pr.c:2704:
+		printk(KERN_WARNING "SPC-3 PR REGISTER_AND_MOVE: Received zero"
+			" sa_res_key\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2785: FILE: drivers/target/target_core_pr.c:2721:
+		printk(KERN_ERR "SPC-3 PR: Illegal tid_len: %u + 24 byte header"

WARNING:SPLIT_STRING: quoted string split across lines
#2786: FILE: drivers/target/target_core_pr.c:2722:
+		printk(KERN_ERR "SPC-3 PR: Illegal tid_len: %u + 24 byte header"
+			" does not equal CDB data_length: %u\n", tid_len,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2805: FILE: drivers/target/target_core_pr.c:2741:
+		ret = configfs_depend_item(dest_tf_ops->tf_subsys,
+				&dest_se_tpg->tpg_group.cg_item);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2807: FILE: drivers/target/target_core_pr.c:2743:
+			printk(KERN_ERR "configfs_depend_item() failed for"

WARNING:SPLIT_STRING: quoted string split across lines
#2808: FILE: drivers/target/target_core_pr.c:2744:
+			printk(KERN_ERR "configfs_depend_item() failed for"
+				" dest_se_tpg->tpg_group\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!dest_tf_ops'
#2818: FILE: drivers/target/target_core_pr.c:2754:
+	if (!(dest_se_tpg) || (!dest_tf_ops)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2819: FILE: drivers/target/target_core_pr.c:2755:
+		printk(KERN_ERR "SPC-3 PR REGISTER_AND_MOVE: Unable to locate"

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#2819: FILE: drivers/target/target_core_pr.c:2755:
+		printk(KERN_ERR "SPC-3 PR REGISTER_AND_MOVE: Unable to locate"
+			" fabric ops from Relative Target Port Identifier:"
+			" %hu\n", rtpi);

WARNING:SPLIT_STRING: quoted string split across lines
#2820: FILE: drivers/target/target_core_pr.c:2756:
+		printk(KERN_ERR "SPC-3 PR REGISTER_AND_MOVE: Unable to locate"
+			" fabric ops from Relative Target Port Identifier:"

WARNING:SPLIT_STRING: quoted string split across lines
#2821: FILE: drivers/target/target_core_pr.c:2757:
+			" fabric ops from Relative Target Port Identifier:"
+			" %hu\n", rtpi);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2826: FILE: drivers/target/target_core_pr.c:2762:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2827: FILE: drivers/target/target_core_pr.c:2763:
+	printk("SPC-3 PR REGISTER_AND_MOVE: Extracted Protocol Identifier:"

WARNING:SPLIT_STRING: quoted string split across lines
#2828: FILE: drivers/target/target_core_pr.c:2764:
+	printk("SPC-3 PR REGISTER_AND_MOVE: Extracted Protocol Identifier:"
+			" 0x%02x\n", proto_ident);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2831: FILE: drivers/target/target_core_pr.c:2767:
+		printk(KERN_ERR "SPC-3 PR REGISTER_AND_MOVE: Received"

WARNING:SPLIT_STRING: quoted string split across lines
#2832: FILE: drivers/target/target_core_pr.c:2768:
+		printk(KERN_ERR "SPC-3 PR REGISTER_AND_MOVE: Received"
+			" proto_ident: 0x%02x does not match ident: 0x%02x"

WARNING:SPLIT_STRING: quoted string split across lines
#2833: FILE: drivers/target/target_core_pr.c:2769:
+			" proto_ident: 0x%02x does not match ident: 0x%02x"
+			" from fabric: %s\n", proto_ident,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dest_tf_ops->tpg_parse_pr_out_transport_id"
#2839: FILE: drivers/target/target_core_pr.c:2775:
+	if (dest_tf_ops->tpg_parse_pr_out_transport_id == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2840: FILE: drivers/target/target_core_pr.c:2776:
+		printk(KERN_ERR "SPC-3 PR REGISTER_AND_MOVE: Fabric does not"

WARNING:TYPO_SPELLING: 'containg' may be misspelled - perhaps 'containing'?
#2841: FILE: drivers/target/target_core_pr.c:2777:
+			" containg a valid tpg_parse_pr_out_transport_id"
 			  ^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#2841: FILE: drivers/target/target_core_pr.c:2777:
+		printk(KERN_ERR "SPC-3 PR REGISTER_AND_MOVE: Fabric does not"
+			" containg a valid tpg_parse_pr_out_transport_id"

WARNING:SPLIT_STRING: quoted string split across lines
#2842: FILE: drivers/target/target_core_pr.c:2778:
+			" containg a valid tpg_parse_pr_out_transport_id"
+			" function pointer\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2846: FILE: drivers/target/target_core_pr.c:2782:
+	initiator_str = dest_tf_ops->tpg_parse_pr_out_transport_id(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2849: FILE: drivers/target/target_core_pr.c:2785:
+		printk(KERN_ERR "SPC-3 PR REGISTER_AND_MOVE: Unable to locate"

WARNING:SPLIT_STRING: quoted string split across lines
#2850: FILE: drivers/target/target_core_pr.c:2786:
+		printk(KERN_ERR "SPC-3 PR REGISTER_AND_MOVE: Unable to locate"
+			" initiator_str from Transport ID\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2855: FILE: drivers/target/target_core_pr.c:2791:
+	printk(KERN_INFO "SPC-3 PR [%s] Extracted initiator %s identifier: %s"

WARNING:SPLIT_STRING: quoted string split across lines
#2856: FILE: drivers/target/target_core_pr.c:2792:
+	printk(KERN_INFO "SPC-3 PR [%s] Extracted initiator %s identifier: %s"
+		" %s\n", dest_tf_ops->get_fabric_name(), (iport_ptr != NULL) ?

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "iport_ptr"
#2856: FILE: drivers/target/target_core_pr.c:2792:
+		" %s\n", dest_tf_ops->get_fabric_name(), (iport_ptr != NULL) ?

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "iport_ptr"
#2857: FILE: drivers/target/target_core_pr.c:2793:
+		"port" : "device", initiator_str, (iport_ptr != NULL) ?

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2869: FILE: drivers/target/target_core_pr.c:2805:
+		printk(KERN_ERR "SPC-3 PR REGISTER_AND_MOVE: TransportID: %s"

WARNING:SPLIT_STRING: quoted string split across lines
#2870: FILE: drivers/target/target_core_pr.c:2806:
+		printk(KERN_ERR "SPC-3 PR REGISTER_AND_MOVE: TransportID: %s"
+			" matches: %s on received I_T Nexus\n", initiator_str,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2879: FILE: drivers/target/target_core_pr.c:2815:
+	dest_node_acl = core_tpg_get_initiator_node_acl(dest_se_tpg,
+				initiator_str);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2881: FILE: drivers/target/target_core_pr.c:2817:
+		printk(KERN_ERR "Unable to locate %s dest_node_acl for"

WARNING:SPLIT_STRING: quoted string split across lines
#2882: FILE: drivers/target/target_core_pr.c:2818:
+		printk(KERN_ERR "Unable to locate %s dest_node_acl for"
+			" TransportID%s\n", dest_tf_ops->get_fabric_name(),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2888: FILE: drivers/target/target_core_pr.c:2824:
+	ret = configfs_depend_item(dest_tf_ops->tf_subsys,
+				&dest_node_acl->acl_group.cg_item);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2890: FILE: drivers/target/target_core_pr.c:2826:
+		printk(KERN_ERR "configfs_depend_item() failed for"

WARNING:SPLIT_STRING: quoted string split across lines
#2891: FILE: drivers/target/target_core_pr.c:2827:
+		printk(KERN_ERR "configfs_depend_item() failed for"
+			" dest_node_acl->acl_group\n");

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2896: FILE: drivers/target/target_core_pr.c:2832:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2897: FILE: drivers/target/target_core_pr.c:2833:
+	printk(KERN_INFO "SPC-3 PR REGISTER_AND_MOVE: Found %s dest_node_acl:"

WARNING:SPLIT_STRING: quoted string split across lines
#2898: FILE: drivers/target/target_core_pr.c:2834:
+	printk(KERN_INFO "SPC-3 PR REGISTER_AND_MOVE: Found %s dest_node_acl:"
+		" %s from TransportID\n", dest_tf_ops->get_fabric_name(),

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "iport_ptr"
#2907: FILE: drivers/target/target_core_pr.c:2843:
+	if (iport_ptr != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dest_node_acl->nacl_sess"
#2909: FILE: drivers/target/target_core_pr.c:2845:
+		if (dest_node_acl->nacl_sess == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2910: FILE: drivers/target/target_core_pr.c:2846:
+			printk(KERN_ERR "SPC-3 PR REGISTER_AND_MOVE: "

WARNING:SPLIT_STRING: quoted string split across lines
#2911: FILE: drivers/target/target_core_pr.c:2847:
+			printk(KERN_ERR "SPC-3 PR REGISTER_AND_MOVE: "
+				"iport_ptr: %s presented in Transport ID,"

WARNING:SPLIT_STRING: quoted string split across lines
#2912: FILE: drivers/target/target_core_pr.c:2848:
+				"iport_ptr: %s presented in Transport ID,"
+				" but no active nexus exists for %s Fabric"

WARNING:SPLIT_STRING: quoted string split across lines
#2913: FILE: drivers/target/target_core_pr.c:2849:
+				" but no active nexus exists for %s Fabric"
+				" Node: %s\n", iport_ptr,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2920: FILE: drivers/target/target_core_pr.c:2856:
+		TPG_TFO(se_tpg)->sess_get_initiator_wwn(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2926: FILE: drivers/target/target_core_pr.c:2862:
+			printk(KERN_ERR "SPC-3 PR REGISTER_AND_MOVE:"

WARNING:SPLIT_STRING: quoted string split across lines
#2927: FILE: drivers/target/target_core_pr.c:2863:
+			printk(KERN_ERR "SPC-3 PR REGISTER_AND_MOVE:"
+				" dest_iport: %s and iport_ptr: %s do not"

WARNING:SPLIT_STRING: quoted string split across lines
#2928: FILE: drivers/target/target_core_pr.c:2864:
+				" dest_iport: %s and iport_ptr: %s do not"
+				" match!\n", dest_iport, iport_ptr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2940: FILE: drivers/target/target_core_pr.c:2876:
+		printk(KERN_ERR "Unable to locate %s dest_se_deve from RTPI:"

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#2940: FILE: drivers/target/target_core_pr.c:2876:
+		printk(KERN_ERR "Unable to locate %s dest_se_deve from RTPI:"
+			" %hu\n",  dest_tf_ops->get_fabric_name(), rtpi);

WARNING:SPLIT_STRING: quoted string split across lines
#2941: FILE: drivers/target/target_core_pr.c:2877:
+		printk(KERN_ERR "Unable to locate %s dest_se_deve from RTPI:"
+			" %hu\n",  dest_tf_ops->get_fabric_name(), rtpi);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2945: FILE: drivers/target/target_core_pr.c:2881:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2946: FILE: drivers/target/target_core_pr.c:2882:
+	printk(KERN_INFO "SPC-3 PR REGISTER_AND_MOVE: Located %s node %s LUN"

WARNING:SPLIT_STRING: quoted string split across lines
#2947: FILE: drivers/target/target_core_pr.c:2883:
+	printk(KERN_INFO "SPC-3 PR REGISTER_AND_MOVE: Located %s node %s LUN"
+		" ACL for dest_se_deve->mapped_lun: %u\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2958: FILE: drivers/target/target_core_pr.c:2894:
+		printk(KERN_WARNING "SPC-3 PR REGISTER_AND_MOVE: No reservation"

WARNING:SPLIT_STRING: quoted string split across lines
#2959: FILE: drivers/target/target_core_pr.c:2895:
+		printk(KERN_WARNING "SPC-3 PR REGISTER_AND_MOVE: No reservation"
+			" currently held\n");

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2968: FILE: drivers/target/target_core_pr.c:2904:
+^I * ^IRegister behaviors for a REGISTER AND MOVE service action$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2971: FILE: drivers/target/target_core_pr.c:2907:
+		printk(KERN_WARNING "SPC-3 PR REGISTER_AND_MOVE: Calling I_T"

WARNING:SPLIT_STRING: quoted string split across lines
#2972: FILE: drivers/target/target_core_pr.c:2908:
+		printk(KERN_WARNING "SPC-3 PR REGISTER_AND_MOVE: Calling I_T"
+			" Nexus is not reservation holder\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pr_res_holder->pr_res_type == PR_TYPE_WRITE_EXCLUSIVE_ALLREG'
#2986: FILE: drivers/target/target_core_pr.c:2922:
+	if ((pr_res_holder->pr_res_type == PR_TYPE_WRITE_EXCLUSIVE_ALLREG) ||
+	    (pr_res_holder->pr_res_type == PR_TYPE_EXCLUSIVE_ACCESS_ALLREG)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pr_res_holder->pr_res_type == PR_TYPE_EXCLUSIVE_ACCESS_ALLREG'
#2986: FILE: drivers/target/target_core_pr.c:2922:
+	if ((pr_res_holder->pr_res_type == PR_TYPE_WRITE_EXCLUSIVE_ALLREG) ||
+	    (pr_res_holder->pr_res_type == PR_TYPE_EXCLUSIVE_ACCESS_ALLREG)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2988: FILE: drivers/target/target_core_pr.c:2924:
+		printk(KERN_WARNING "SPC-3 PR REGISTER_AND_MOVE: Unable to move"

WARNING:SPLIT_STRING: quoted string split across lines
#2989: FILE: drivers/target/target_core_pr.c:2925:
+		printk(KERN_WARNING "SPC-3 PR REGISTER_AND_MOVE: Unable to move"
+			" reservation for type: %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3023: FILE: drivers/target/target_core_pr.c:2959:
+		ret = core_scsi3_alloc_registration(SE_DEV(cmd),
+				dest_node_acl, dest_se_deve,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3038: FILE: drivers/target/target_core_pr.c:2974:
+		printk(KERN_ERR "Unable to locate dest_pr_reg for"

WARNING:SPLIT_STRING: quoted string split across lines
#3039: FILE: drivers/target/target_core_pr.c:2975:
+		printk(KERN_ERR "Unable to locate dest_pr_reg for"
+			" REGISTERED I_T Nexus for %s\n", initiator_str);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3049: FILE: drivers/target/target_core_pr.c:2985:
+	__core_scsi3_complete_pro_release(dev, pr_res_nacl,
+			dev->dev_pr_res_holder, 0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3066: FILE: drivers/target/target_core_pr.c:3002:
+	printk(KERN_INFO "SPC-3 PR [%s] Service Action: REGISTER_AND_MOVE"

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#3066: FILE: drivers/target/target_core_pr.c:3002:
+	printk(KERN_INFO "SPC-3 PR [%s] Service Action: REGISTER_AND_MOVE"
+		" created new reservation holder TYPE: %s on object RTPI:"
+		" %hu  PRGeneration: 0x%08x\n", dest_tf_ops->get_fabric_name(),
+		core_scsi3_pr_dump_type(type), rtpi,
+		dest_pr_reg->pr_res_generation);

WARNING:SPLIT_STRING: quoted string split across lines
#3067: FILE: drivers/target/target_core_pr.c:3003:
+	printk(KERN_INFO "SPC-3 PR [%s] Service Action: REGISTER_AND_MOVE"
+		" created new reservation holder TYPE: %s on object RTPI:"

WARNING:SPLIT_STRING: quoted string split across lines
#3068: FILE: drivers/target/target_core_pr.c:3004:
+		" created new reservation holder TYPE: %s on object RTPI:"
+		" %hu  PRGeneration: 0x%08x\n", dest_tf_ops->get_fabric_name(),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3071: FILE: drivers/target/target_core_pr.c:3007:
+	printk(KERN_INFO "SPC-3 PR Successfully moved reservation from"

WARNING:SPLIT_STRING: quoted string split across lines
#3072: FILE: drivers/target/target_core_pr.c:3008:
+	printk(KERN_INFO "SPC-3 PR Successfully moved reservation from"
+		" %s Fabric Node: %s -> %s Fabric Node: %s %s\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "iport_ptr"
#3075: FILE: drivers/target/target_core_pr.c:3011:
+		(iport_ptr != NULL) ? iport_ptr : "");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3081: FILE: drivers/target/target_core_pr.c:3017:
+	configfs_undepend_item(dest_tf_ops->tf_subsys,
+			&dest_se_deve->se_lun_acl->se_lun_group.cg_item);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3083: FILE: drivers/target/target_core_pr.c:3019:
+	configfs_undepend_item(dest_tf_ops->tf_subsys,
+			&dest_node_acl->acl_group.cg_item);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3085: FILE: drivers/target/target_core_pr.c:3021:
+	configfs_undepend_item(dest_tf_ops->tf_subsys,
+			&dest_se_tpg->tpg_group.cg_item);

CHECK:BRACES: braces {} should be used on all arms of this statement
#3090: FILE: drivers/target/target_core_pr.c:3026:
+	if (unreg) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3094: FILE: drivers/target/target_core_pr.c:3030:
+	} else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3104: FILE: drivers/target/target_core_pr.c:3040:
+		printk("SPC-3 PR: Set APTPL Bit Deactivated for"

WARNING:SPLIT_STRING: quoted string split across lines
#3105: FILE: drivers/target/target_core_pr.c:3041:
+		printk("SPC-3 PR: Set APTPL Bit Deactivated for"
+				" REGISTER_AND_MOVE\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3109: FILE: drivers/target/target_core_pr.c:3045:
+		ret = core_scsi3_update_and_write_aptpl(SE_DEV(cmd),
+				&dest_pr_reg->pr_aptpl_buf[0],

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3112: FILE: drivers/target/target_core_pr.c:3048:
+			printk("SPC-3 PR: Set APTPL Bit Activated for"

WARNING:SPLIT_STRING: quoted string split across lines
#3113: FILE: drivers/target/target_core_pr.c:3049:
+			printk("SPC-3 PR: Set APTPL Bit Activated for"
+					" REGISTER_AND_MOVE\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3121: FILE: drivers/target/target_core_pr.c:3057:
+		configfs_undepend_item(dest_tf_ops->tf_subsys,
+			&dest_se_deve->se_lun_acl->se_lun_group.cg_item);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3124: FILE: drivers/target/target_core_pr.c:3060:
+		configfs_undepend_item(dest_tf_ops->tf_subsys,
+				&dest_node_acl->acl_group.cg_item);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3126: FILE: drivers/target/target_core_pr.c:3062:
+	configfs_undepend_item(dest_tf_ops->tf_subsys,
+			&dest_se_tpg->tpg_group.cg_item);

WARNING:TYPO_SPELLING: 'Recieved' may be misspelled - perhaps 'Received'?
#3158: FILE: drivers/target/target_core_pr.c:3094:
+		printk(KERN_WARNING "SPC-PR: Recieved PR OUT parameter list"
 		                             ^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3158: FILE: drivers/target/target_core_pr.c:3094:
+		printk(KERN_WARNING "SPC-PR: Recieved PR OUT parameter list"

WARNING:SPLIT_STRING: quoted string split across lines
#3159: FILE: drivers/target/target_core_pr.c:3095:
+		printk(KERN_WARNING "SPC-PR: Recieved PR OUT parameter list"
+			" length too small: %u\n", cmd->data_length);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd->data_length != 24'
#3199: FILE: drivers/target/target_core_pr.c:3135:
+	if (!(spec_i_pt) && ((cdb[1] & 0x1f) != PRO_REGISTER_AND_MOVE) &&
+	    (cmd->data_length != 24)) {

WARNING:TYPO_SPELLING: 'Recieved' may be misspelled - perhaps 'Received'?
#3201: FILE: drivers/target/target_core_pr.c:3137:
+		printk(KERN_WARNING "SPC-PR: Recieved PR OUT illegal parameter"
 		                             ^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3201: FILE: drivers/target/target_core_pr.c:3137:
+		printk(KERN_WARNING "SPC-PR: Recieved PR OUT illegal parameter"

WARNING:SPLIT_STRING: quoted string split across lines
#3202: FILE: drivers/target/target_core_pr.c:3138:
+		printk(KERN_WARNING "SPC-PR: Recieved PR OUT illegal parameter"
+			" list length: %u\n", cmd->data_length);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3235: FILE: drivers/target/target_core_pr.c:3171:
+		printk(KERN_ERR "Unknown PERSISTENT_RESERVE_OUT service"

WARNING:SPLIT_STRING: quoted string split across lines
#3236: FILE: drivers/target/target_core_pr.c:3172:
+		printk(KERN_ERR "Unknown PERSISTENT_RESERVE_OUT service"
+			" action: 0x%02x\n", cdb[1] & 0x1f);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3257: FILE: drivers/target/target_core_pr.c:3193:
+		printk(KERN_ERR "PRIN SA READ_KEYS SCSI Data Length: %u"

WARNING:SPLIT_STRING: quoted string split across lines
#3258: FILE: drivers/target/target_core_pr.c:3194:
+		printk(KERN_ERR "PRIN SA READ_KEYS SCSI Data Length: %u"
+			" too small\n", cmd->data_length);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3269: FILE: drivers/target/target_core_pr.c:3205:
+	list_for_each_entry(pr_reg, &T10_RES(su_dev)->registration_list,
+			pr_reg_list) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3313: FILE: drivers/target/target_core_pr.c:3249:
+		printk(KERN_ERR "PRIN SA READ_RESERVATIONS SCSI Data Length: %u"

WARNING:SPLIT_STRING: quoted string split across lines
#3314: FILE: drivers/target/target_core_pr.c:3250:
+		printk(KERN_ERR "PRIN SA READ_RESERVATIONS SCSI Data Length: %u"
+			" too small\n", cmd->data_length);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pr_reg->pr_res_type == PR_TYPE_WRITE_EXCLUSIVE_ALLREG'
#3354: FILE: drivers/target/target_core_pr.c:3290:
+		if ((pr_reg->pr_res_type == PR_TYPE_WRITE_EXCLUSIVE_ALLREG) ||
+		    (pr_reg->pr_res_type == PR_TYPE_EXCLUSIVE_ACCESS_ALLREG))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pr_reg->pr_res_type == PR_TYPE_EXCLUSIVE_ACCESS_ALLREG'
#3354: FILE: drivers/target/target_core_pr.c:3290:
+		if ((pr_reg->pr_res_type == PR_TYPE_WRITE_EXCLUSIVE_ALLREG) ||
+		    (pr_reg->pr_res_type == PR_TYPE_EXCLUSIVE_ACCESS_ALLREG))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3392: FILE: drivers/target/target_core_pr.c:3328:
+		printk(KERN_ERR "PRIN SA REPORT_CAPABILITIES SCSI Data Length:"

WARNING:SPLIT_STRING: quoted string split across lines
#3393: FILE: drivers/target/target_core_pr.c:3329:
+		printk(KERN_ERR "PRIN SA REPORT_CAPABILITIES SCSI Data Length:"
+			" %u too small\n", cmd->data_length);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#3402: FILE: drivers/target/target_core_pr.c:3338:
+#if 0

WARNING:TYPO_SPELLING: 'Hanlding' may be misspelled - perhaps 'Handling'?
#3403: FILE: drivers/target/target_core_pr.c:3339:
+	buf[2] |= 0x10; /* CRH: Compatible Reservation Hanlding bit. */
 	                                               ^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3454: FILE: drivers/target/target_core_pr.c:3390:
+		printk(KERN_ERR "PRIN SA READ_FULL_STATUS SCSI Data Length: %u"

WARNING:SPLIT_STRING: quoted string split across lines
#3455: FILE: drivers/target/target_core_pr.c:3391:
+		printk(KERN_ERR "PRIN SA READ_FULL_STATUS SCSI Data Length: %u"
+			" too small\n", cmd->data_length);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3466: FILE: drivers/target/target_core_pr.c:3402:
+	list_for_each_entry_safe(pr_reg, pr_reg_tmp,
+			&pr_tmpl->registration_list, pr_reg_list) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#3467: FILE: drivers/target/target_core_pr.c:3403:
+			&pr_tmpl->registration_list, pr_reg_list) {
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#3475: FILE: drivers/target/target_core_pr.c:3411:
+		exp_desc_len = TPG_TFO(se_tpg)->tpg_get_pr_transport_id_len(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3479: FILE: drivers/target/target_core_pr.c:3415:
+			printk(KERN_WARNING "SPC-3 PRIN READ_FULL_STATUS ran"

WARNING:SPLIT_STRING: quoted string split across lines
#3480: FILE: drivers/target/target_core_pr.c:3416:
+			printk(KERN_WARNING "SPC-3 PRIN READ_FULL_STATUS ran"
+				" out of buffer: %d\n", cmd->data_length);

CHECK:BRACES: braces {} should be used on all arms of this statement
#3508: FILE: drivers/target/target_core_pr.c:3444:
+		if (pr_reg->pr_res_holder) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3512: FILE: drivers/target/target_core_pr.c:3448:
+		} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#3526: FILE: drivers/target/target_core_pr.c:3462:
+		if (!(pr_reg->pr_reg_all_tg_pt)) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3531: FILE: drivers/target/target_core_pr.c:3467:
+		} else

WARNING:TYPO_SPELLING: 'IDENTIFER' may be misspelled - perhaps 'IDENTIFIER'?
#3532: FILE: drivers/target/target_core_pr.c:3468:
+			off += 2; /* Skip over RELATIVE TARGET PORT IDENTIFER */
 			                                            ^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3538: FILE: drivers/target/target_core_pr.c:3474:
+		desc_len = TPG_TFO(se_tpg)->tpg_get_pr_transport_id(se_tpg,
+				se_nacl, &format_code, &buf[off+4]);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3538: FILE: drivers/target/target_core_pr.c:3474:
+				se_nacl, &format_code, &buf[off+4]);
 				                               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3582: FILE: drivers/target/target_core_pr.c:3518:
+		printk(KERN_ERR "Unknown PERSISTENT_RESERVE_IN service"

WARNING:SPLIT_STRING: quoted string split across lines
#3583: FILE: drivers/target/target_core_pr.c:3519:
+		printk(KERN_ERR "Unknown PERSISTENT_RESERVE_IN service"
+			" action: 0x%02x\n", cdb[1] & 0x1f);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#3587: FILE: drivers/target/target_core_pr.c:3523:
+
+}

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#3613: FILE: drivers/target/target_core_pr.c:3549:
+static int core_pt_seq_non_holder(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3638: FILE: drivers/target/target_core_pr.c:3574:
+		printk(KERN_INFO "%s: Using SPC_PASSTHROUGH, no reservation"

WARNING:SPLIT_STRING: quoted string split across lines
#3639: FILE: drivers/target/target_core_pr.c:3575:
+		printk(KERN_INFO "%s: Using SPC_PASSTHROUGH, no reservation"
+			" emulation\n", TRANSPORT(dev)->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3652: FILE: drivers/target/target_core_pr.c:3588:
+		printk(KERN_INFO "%s: Using SPC3_PERSISTENT_RESERVATIONS"

WARNING:SPLIT_STRING: quoted string split across lines
#3653: FILE: drivers/target/target_core_pr.c:3589:
+		printk(KERN_INFO "%s: Using SPC3_PERSISTENT_RESERVATIONS"
+			" emulation\n", TRANSPORT(dev)->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3661: FILE: drivers/target/target_core_pr.c:3597:
+		printk(KERN_INFO "%s: Using SPC2_RESERVATIONS emulation\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3662: FILE: drivers/target/target_core_pr.c:3598:
+		printk(KERN_INFO "%s: Using SPC2_RESERVATIONS emulation\n",
+			TRANSPORT(dev)->name);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3673: FILE: include/target/target_core_pr.h:1:
+#ifndef TARGET_CORE_PR_H

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#3720: FILE: include/target/target_core_pr.h:48:
+extern int core_scsi3_alloc_aptpl_registration(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3720: FILE: include/target/target_core_pr.h:48:
+extern int core_scsi3_alloc_aptpl_registration(

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct t10_reservation_template_s *' should also have an identifier name
#3720: FILE: include/target/target_core_pr.h:48:
+extern int core_scsi3_alloc_aptpl_registration(

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#3720: FILE: include/target/target_core_pr.h:48:
+extern int core_scsi3_alloc_aptpl_registration(

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#3720: FILE: include/target/target_core_pr.h:48:
+extern int core_scsi3_alloc_aptpl_registration(

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#3720: FILE: include/target/target_core_pr.h:48:
+extern int core_scsi3_alloc_aptpl_registration(

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#3720: FILE: include/target/target_core_pr.h:48:
+extern int core_scsi3_alloc_aptpl_registration(

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16' should also have an identifier name
#3720: FILE: include/target/target_core_pr.h:48:
+extern int core_scsi3_alloc_aptpl_registration(

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#3720: FILE: include/target/target_core_pr.h:48:
+extern int core_scsi3_alloc_aptpl_registration(

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#3720: FILE: include/target/target_core_pr.h:48:
+extern int core_scsi3_alloc_aptpl_registration(

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#3720: FILE: include/target/target_core_pr.h:48:
+extern int core_scsi3_alloc_aptpl_registration(

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#3720: FILE: include/target/target_core_pr.h:48:
+extern int core_scsi3_alloc_aptpl_registration(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3724: FILE: include/target/target_core_pr.h:52:
+extern int core_scsi3_check_aptpl_registration(struct se_device_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_device_s *' should also have an identifier name
#3724: FILE: include/target/target_core_pr.h:52:
+extern int core_scsi3_check_aptpl_registration(struct se_device_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#3724: FILE: include/target/target_core_pr.h:52:
+extern int core_scsi3_check_aptpl_registration(struct se_device_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_lun_s *' should also have an identifier name
#3724: FILE: include/target/target_core_pr.h:52:
+extern int core_scsi3_check_aptpl_registration(struct se_device_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_lun_acl_s *' should also have an identifier name
#3724: FILE: include/target/target_core_pr.h:52:
+extern int core_scsi3_check_aptpl_registration(struct se_device_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3725: FILE: include/target/target_core_pr.h:53:
+extern int core_scsi3_check_aptpl_registration(struct se_device_s *,
+			struct se_portal_group_s *, struct se_lun_s *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3727: FILE: include/target/target_core_pr.h:55:
+extern void core_scsi3_free_pr_reg_from_nacl(struct se_device_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_device_s *' should also have an identifier name
#3727: FILE: include/target/target_core_pr.h:55:
+extern void core_scsi3_free_pr_reg_from_nacl(struct se_device_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_node_acl_s *' should also have an identifier name
#3727: FILE: include/target/target_core_pr.h:55:
+extern void core_scsi3_free_pr_reg_from_nacl(struct se_device_s *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3729: FILE: include/target/target_core_pr.h:57:
+extern void core_scsi3_free_all_registrations(struct se_device_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_device_s *' should also have an identifier name
#3729: FILE: include/target/target_core_pr.h:57:
+extern void core_scsi3_free_all_registrations(struct se_device_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3730: FILE: include/target/target_core_pr.h:58:
+extern unsigned char *core_scsi3_pr_dump_type(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#3730: FILE: include/target/target_core_pr.h:58:
+extern unsigned char *core_scsi3_pr_dump_type(int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3731: FILE: include/target/target_core_pr.h:59:
+extern int core_scsi3_check_cdb_abort_and_preempt(struct list_head *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct list_head *' should also have an identifier name
#3731: FILE: include/target/target_core_pr.h:59:
+extern int core_scsi3_check_cdb_abort_and_preempt(struct list_head *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#3731: FILE: include/target/target_core_pr.h:59:
+extern int core_scsi3_check_cdb_abort_and_preempt(struct list_head *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3733: FILE: include/target/target_core_pr.h:61:
+extern int core_scsi3_emulate_pr(struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#3733: FILE: include/target/target_core_pr.h:61:
+extern int core_scsi3_emulate_pr(struct se_cmd_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3734: FILE: include/target/target_core_pr.h:62:
+extern int core_setup_reservations(struct se_device_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_device_s *' should also have an identifier name
#3734: FILE: include/target/target_core_pr.h:62:
+extern int core_setup_reservations(struct se_device_s *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000070296.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 353 warnings, 228 checks, 3666 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000070296.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
