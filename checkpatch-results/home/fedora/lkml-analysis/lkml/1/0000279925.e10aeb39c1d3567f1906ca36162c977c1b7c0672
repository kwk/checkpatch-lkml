WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#39: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#44: FILE: fs/aufs/i_op_add.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#58: FILE: fs/aufs/i_op_add.c:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#59: FILE: fs/aufs/i_op_add.c:16:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#65: FILE: fs/aufs/i_op_add.c:22:
+ * $Id: i_op_add.c,v 1.4 2008/05/04 23:54:53 sfjro Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

CHECK:CAMELCASE: Avoid CamelCase: <LKTRTrace>
#86: FILE: fs/aufs/i_op_add.c:43:
+	LKTRTrace("wh %p, %.*s\n", wh_dentry, AuDLNPair(dentry));

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <AuDLNPair>
#86: FILE: fs/aufs/i_op_add.c:43:
+	LKTRTrace("wh %p, %.*s\n", wh_dentry, AuDLNPair(dentry));

CHECK:CAMELCASE: Avoid CamelCase: <IMustLock>
#91: FILE: fs/aufs/i_op_add.c:48:
+		IMustLock(h_dir);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#123: FILE: fs/aufs/i_op_add.c:80:
+	ndx.nd = NULL;
 	    ^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:CAMELCASE: Avoid CamelCase: <AuIOErr>
#133: FILE: fs/aufs/i_op_add.c:90:
+	AuIOErr("%.*s reverting whiteout failed(%d, %d)\n",

CHECK:CAMELCASE: Avoid CamelCase: <AuTraceErr>
#138: FILE: fs/aufs/i_op_add.c:95:
+	AuTraceErr(err);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#249: FILE: fs/aufs/i_op_add.c:206:
+	if (unlikely(dt && au_opt_test(mnt_flags, UDBA_INOTIFY)
+		     && !IS_ROOT(parent))) {

CHECK:CAMELCASE: Avoid CamelCase: <AuDbgSleep_UdbaRace>
#261: FILE: fs/aufs/i_op_add.c:218:
+	AuDbgSleep_UdbaRace();

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#269: FILE: fs/aufs/i_op_add.c:226:
+	ndx.nd = NULL;
 	    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#274: FILE: fs/aufs/i_op_add.c:231:
+		struct nameidata nd;
 		                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#278: FILE: fs/aufs/i_op_add.c:235:
+			ndx.nd = &nd;
 			    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#278: FILE: fs/aufs/i_op_add.c:235:
+			ndx.nd = &nd;
 			          ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#280: FILE: fs/aufs/i_op_add.c:237:
+			memset(&nd, 0, sizeof(nd));
 			        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#280: FILE: fs/aufs/i_op_add.c:237:
+			memset(&nd, 0, sizeof(nd));
 			                      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#281: FILE: fs/aufs/i_op_add.c:238:
+			nd.flags = LOOKUP_CREATE;
 			^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#282: FILE: fs/aufs/i_op_add.c:239:
+			nd.intent.open.flags = O_EXCL;
 			^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#290: FILE: fs/aufs/i_op_add.c:247:
+		ndx.nd = NULL;
 		    ^^

CHECK:CAMELCASE: Avoid CamelCase: <AuTraceErrPtr>
#307: FILE: fs/aufs/i_op_add.c:264:
+	AuTraceErrPtr(wh_dentry);

WARNING:TYPO_SPELLING: 'Creat' may be misspelled - perhaps 'Create'?
#313: FILE: fs/aufs/i_op_add.c:270:
+enum { Mknod, Symlink, Creat };
                        ^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <Mknod>
#313: FILE: fs/aufs/i_op_add.c:270:
+enum { Mknod, Symlink, Creat };

CHECK:CAMELCASE: Avoid CamelCase: <Symlink>
#313: FILE: fs/aufs/i_op_add.c:270:
+enum { Mknod, Symlink, Creat };

CHECK:CAMELCASE: Avoid CamelCase: <Creat>
#313: FILE: fs/aufs/i_op_add.c:270:
+enum { Mknod, Symlink, Creat };

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#319: FILE: fs/aufs/i_op_add.c:276:
+			struct nameidata *nd;
 			                  ^^

CHECK:CAMELCASE: Avoid CamelCase: <AuWrDir_ADD_ENTRY>
#343: FILE: fs/aufs/i_op_add.c:300:
+		.flags		= AuWrDir_ADD_ENTRY

CHECK:CAMELCASE: Avoid CamelCase: <AuLock_DW>
#349: FILE: fs/aufs/i_op_add.c:306:
+	aufs_read_lock(dentry, AuLock_DW);

WARNING:IF_1: Consider removing the #if 1 and its #endif
#367: FILE: fs/aufs/i_op_add.c:324:
+#if 1 // partial testing

WARNING:TYPO_SPELLING: 'Creat' may be misspelled - perhaps 'Create'?
#369: FILE: fs/aufs/i_op_add.c:326:
+	case Creat:
 	     ^^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#370: FILE: fs/aufs/i_op_add.c:327:
+		AuDebugOn(au_test_nfs(h_dir->i_sb) && !arg->u.c.nd);
 		                                                ^^

CHECK:CAMELCASE: Avoid CamelCase: <AuDebugOn>
#370: FILE: fs/aufs/i_op_add.c:327:
+		AuDebugOn(au_test_nfs(h_dir->i_sb) && !arg->u.c.nd);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#372: FILE: fs/aufs/i_op_add.c:329:
+				  arg->u.c.nd, au_nfsmnt(sb, bstart));
 				           ^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#383: FILE: fs/aufs/i_op_add.c:340:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LINE_SPACING: Missing a blank line after declarations
#396: FILE: fs/aufs/i_op_add.c:353:
+		int rerr;
+		vfsub_args_init(&vargs, NULL, dlgt, 0);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#445: FILE: fs/aufs/i_op_add.c:402:
+		struct nameidata *nd)
 		                  ^^

WARNING:TYPO_SPELLING: 'Creat' may be misspelled - perhaps 'Create'?
#448: FILE: fs/aufs/i_op_add.c:405:
+		.type = Creat,
 		        ^^^^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#451: FILE: fs/aufs/i_op_add.c:408:
+			.nd	= nd
 			 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#451: FILE: fs/aufs/i_op_add.c:408:
+			.nd	= nd
 			   	  ^^

CHECK:CAMELCASE: Avoid CamelCase: <AuTraceEnter>
#473: FILE: fs/aufs/i_op_add.c:430:
+	AuTraceEnter();

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#478: FILE: fs/aufs/i_op_add.c:435:
+	if (unlikely(au_opt_test(au_mntflags(src_dentry->d_sb), UDBA_INOTIFY)
+		     && !IS_ROOT(a->src_parent))) {

CHECK:CAMELCASE: Avoid CamelCase: <AuLock_IR>
#492: FILE: fs/aufs/i_op_add.c:449:
+		di_read_lock_parent2(a->src_parent, AuLock_IR);

CHECK:CAMELCASE: Avoid CamelCase: <AuLsc_I_CHILD>
#515: FILE: fs/aufs/i_op_add.c:472:
+	mutex_lock_nested(&hi->i_mutex, AuLsc_I_CHILD);

CHECK:CAMELCASE: Avoid CamelCase: <AuCpup_DTIME>
#516: FILE: fs/aufs/i_op_add.c:473:
+	err = au_sio_cpup_simple(src_dentry, a->bdst, -1, AuCpup_DTIME);

CHECK:BRACES: Unbalanced braces around else statement
#661: FILE: fs/aufs/i_op_add.c:618:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#678: FILE: fs/aufs/i_op_add.c:635:
+#if 0 // cannot support it

CHECK:CAMELCASE: Avoid CamelCase: <LKTRLabel>
#681: FILE: fs/aufs/i_op_add.c:638:
+		LKTRLabel(here);

CHECK:BRACES: Unbalanced braces around else statement
#700: FILE: fs/aufs/i_op_add.c:657:
+	} else

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#703: FILE: fs/aufs/i_op_add.c:660:
+#if 0 // debug

CHECK:CAMELCASE: Avoid CamelCase: <AuDbgInode>
#705: FILE: fs/aufs/i_op_add.c:662:
+	AuDbgInode(a.inode);

WARNING:LINE_SPACING: Missing a blank line after declarations
#709: FILE: fs/aufs/i_op_add.c:666:
+		aufs_bindex_t i;
+		for (i = au_ibstart(a.inode); i <= au_ibend(a.inode); i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#712: FILE: fs/aufs/i_op_add.c:669:
+			struct inode *hi;
+			hi = au_h_iptr(a.inode, i);

CHECK:CAMELCASE: Avoid CamelCase: <AuDbg>
#715: FILE: fs/aufs/i_op_add.c:672:
+				AuDbg("hi%lu, i%lu\n", hi->i_ino, xinoe.ino);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#723: FILE: fs/aufs/i_op_add.c:680:
+#if 0 // remove

WARNING:LINE_SPACING: Missing a blank line after declarations
#728: FILE: fs/aufs/i_op_add.c:685:
+		const struct qstr *name = &a.h_dentry->d_name;
+		AuDebugOn(a.h_dentry->d_parent->d_inode != a.h_dir);

ERROR:SPACING: spaces required around that '?' (ctx:VxO)
#731: FILE: fs/aufs/i_op_add.c:688:
+				name->len, au_nfsmnt(sb, a.bdst)??,
 				                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '?' (ctx:OxO)
#731: FILE: fs/aufs/i_op_add.c:688:
+				name->len, au_nfsmnt(sb, a.bdst)??,
 				                                 ^

CHECK:CAMELCASE: Avoid CamelCase: <AuWrDir_ISDIR>
#780: FILE: fs/aufs/i_op_add.c:737:
+		.flags		= AuWrDir_ADD_ENTRY | AuWrDir_ISDIR

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000279925.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 31 warnings, 25 checks, 828 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000279925.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
