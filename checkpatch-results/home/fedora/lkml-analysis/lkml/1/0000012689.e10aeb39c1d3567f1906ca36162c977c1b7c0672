WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#71: FILE: samples/kfifo/bytestream-example.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#107: FILE: samples/kfifo/bytestream-example.c:37:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#123: FILE: samples/kfifo/bytestream-example.c:53:
+	printk(KERN_INFO "byte stream fifo test start\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#133: FILE: samples/kfifo/bytestream-example.c:63:
+	printk(KERN_INFO "fifo len: %u\n", kfifo_len(&test));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#137: FILE: samples/kfifo/bytestream-example.c:67:
+	printk(KERN_INFO "buf: %.*s\n", i, buf);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#141: FILE: samples/kfifo/bytestream-example.c:71:
+	printk(KERN_INFO "ret: %d\n", ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#144: FILE: samples/kfifo/bytestream-example.c:74:
+	printk(KERN_INFO "ret: %d\n", ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#150: FILE: samples/kfifo/bytestream-example.c:80:
+	printk(KERN_INFO "queue len: %u\n", kfifo_len(&test));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#154: FILE: samples/kfifo/bytestream-example.c:84:
+		printk("%d ", i);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#155: FILE: samples/kfifo/bytestream-example.c:85:
+	printk("\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: samples/kfifo/bytestream-example.c:91:
+static ssize_t fifo_write(struct file *file, const char __user *buf,
+						size_t count, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#177: FILE: samples/kfifo/bytestream-example.c:107:
+static ssize_t fifo_read(struct file *file, char __user *buf,
+						size_t count, loff_t *ppos)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#205: FILE: samples/kfifo/bytestream-example.c:135:
+		printk(KERN_ERR "error kfifo_alloc\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!proc_create"
#213: FILE: samples/kfifo/bytestream-example.c:143:
+	if (proc_create(PROC_FIFO, 0, NULL, &fifo_fops) == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#239: FILE: samples/kfifo/dma-example.c:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#263: FILE: samples/kfifo/dma-example.c:25:
+^Iint ^I^I^Ii;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#264: FILE: samples/kfifo/dma-example.c:26:
+^Iunsigned int ^I^Iret;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#267: FILE: samples/kfifo/dma-example.c:29:
+	printk(KERN_INFO "DMA fifo test start\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#270: FILE: samples/kfifo/dma-example.c:32:
+		printk(KERN_ERR "error kfifo_alloc\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#274: FILE: samples/kfifo/dma-example.c:36:
+	printk(KERN_INFO "queue size: %u\n", kfifo_size(&fifo));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#284: FILE: samples/kfifo/dma-example.c:46:
+	printk(KERN_INFO "queue len: %u\n", kfifo_len(&fifo));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#287: FILE: samples/kfifo/dma-example.c:49:
+	printk(KERN_INFO "DMA sgl entries: %d\n", ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#291: FILE: samples/kfifo/dma-example.c:53:
+		printk(KERN_INFO "scatterlist for receive:\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#293: FILE: samples/kfifo/dma-example.c:55:
+			printk(KERN_INFO

WARNING:SPLIT_STRING: quoted string split across lines
#295: FILE: samples/kfifo/dma-example.c:57:
+			"sg[%d] -> "
+			"page_link 0x%.8lx offset 0x%.8x length 0x%.8x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#313: FILE: samples/kfifo/dma-example.c:75:
+	printk(KERN_INFO "DMA sgl entries: %d\n", ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#317: FILE: samples/kfifo/dma-example.c:79:
+		printk(KERN_INFO "scatterlist for transmit:\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#319: FILE: samples/kfifo/dma-example.c:81:
+			printk(KERN_INFO

WARNING:SPLIT_STRING: quoted string split across lines
#321: FILE: samples/kfifo/dma-example.c:83:
+			"sg[%d] -> "
+			"page_link 0x%.8lx offset 0x%.8x length 0x%.8x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#338: FILE: samples/kfifo/dma-example.c:100:
+	printk(KERN_INFO "queue len: %u\n", kfifo_len(&fifo));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#358: FILE: samples/kfifo/inttype-example.c:1:
+/*

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#394: FILE: samples/kfifo/inttype-example.c:37:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#410: FILE: samples/kfifo/inttype-example.c:53:
+	printk(KERN_INFO "int fifo test start\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#417: FILE: samples/kfifo/inttype-example.c:60:
+	printk(KERN_INFO "fifo len: %u\n", kfifo_len(&test));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#421: FILE: samples/kfifo/inttype-example.c:64:
+	printk(KERN_INFO "ret: %d\n", ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#424: FILE: samples/kfifo/inttype-example.c:67:
+	printk(KERN_INFO "ret: %d\n", ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#429: FILE: samples/kfifo/inttype-example.c:72:
+	printk(KERN_INFO "queue len: %u\n", kfifo_len(&test));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#433: FILE: samples/kfifo/inttype-example.c:76:
+		printk(KERN_INFO "%d\n", i);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#437: FILE: samples/kfifo/inttype-example.c:80:
+		printk("%d ", i);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#438: FILE: samples/kfifo/inttype-example.c:81:
+	printk("\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#444: FILE: samples/kfifo/inttype-example.c:87:
+static ssize_t fifo_write(struct file *file, const char __user *buf,
+						size_t count, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#460: FILE: samples/kfifo/inttype-example.c:103:
+static ssize_t fifo_read(struct file *file, char __user *buf,
+						size_t count, loff_t *ppos)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#488: FILE: samples/kfifo/inttype-example.c:131:
+		printk(KERN_ERR "error kfifo_alloc\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!proc_create"
#494: FILE: samples/kfifo/inttype-example.c:137:
+	if (proc_create(PROC_FIFO, 0, NULL, &fifo_fops) == NULL) {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#524: FILE: samples/kfifo/record-example.c:1:
+/*

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#560: FILE: samples/kfifo/record-example.c:37:
+#if 0

WARNING:NEW_TYPEDEFS: do not add new typedefs
#576: FILE: samples/kfifo/record-example.c:53:
+typedef STRUCT_KFIFO_REC_1(FIFO_SIZE) mytest;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#588: FILE: samples/kfifo/record-example.c:65:
+	printk(KERN_INFO "record fifo test start\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#593: FILE: samples/kfifo/record-example.c:70:
+	printk(KERN_INFO "fifo peek len: %u\n", kfifo_peek_len(&test));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#601: FILE: samples/kfifo/record-example.c:78:
+	printk(KERN_INFO "fifo len: %u\n", kfifo_len(&test));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#606: FILE: samples/kfifo/record-example.c:83:
+		printk(KERN_INFO "%.*s\n", ret, buf);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#611: FILE: samples/kfifo/record-example.c:88:
+		printk(KERN_INFO "%.*s\n", ret, buf);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#618: FILE: samples/kfifo/record-example.c:95:
+static ssize_t fifo_write(struct file *file, const char __user *buf,
+						size_t count, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#634: FILE: samples/kfifo/record-example.c:111:
+static ssize_t fifo_read(struct file *file, char __user *buf,
+						size_t count, loff_t *ppos)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#662: FILE: samples/kfifo/record-example.c:139:
+		printk(KERN_ERR "error kfifo_alloc\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!proc_create"
#670: FILE: samples/kfifo/record-example.c:147:
+	if (proc_create(PROC_FIFO, 0, NULL, &fifo_fops) == NULL) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000012689.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 47 warnings, 9 checks, 622 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000012689.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
