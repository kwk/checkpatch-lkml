WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
get_user_pages(). It tidies up follow_hugetlb_page(), and get_user_pages() to

WARNING:LONG_LINE: line length of 143 exceeds 100 columns
#58: FILE: include/linux/hugetlb.h:23:
+int follow_hugetlb_page(struct mm_struct *, struct vm_area_struct *, struct page **, struct vm_area_struct **, unsigned long *, int, int, int);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#58: FILE: include/linux/hugetlb.h:23:
+int follow_hugetlb_page(struct mm_struct *, struct vm_area_struct *, struct page **, struct vm_area_struct **, unsigned long *, int, int, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct *' should also have an identifier name
#58: FILE: include/linux/hugetlb.h:23:
+int follow_hugetlb_page(struct mm_struct *, struct vm_area_struct *, struct page **, struct vm_area_struct **, unsigned long *, int, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page **' should also have an identifier name
#58: FILE: include/linux/hugetlb.h:23:
+int follow_hugetlb_page(struct mm_struct *, struct vm_area_struct *, struct page **, struct vm_area_struct **, unsigned long *, int, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct **' should also have an identifier name
#58: FILE: include/linux/hugetlb.h:23:
+int follow_hugetlb_page(struct mm_struct *, struct vm_area_struct *, struct page **, struct vm_area_struct **, unsigned long *, int, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long *' should also have an identifier name
#58: FILE: include/linux/hugetlb.h:23:
+int follow_hugetlb_page(struct mm_struct *, struct vm_area_struct *, struct page **, struct vm_area_struct **, unsigned long *, int, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#58: FILE: include/linux/hugetlb.h:23:
+int follow_hugetlb_page(struct mm_struct *, struct vm_area_struct *, struct page **, struct vm_area_struct **, unsigned long *, int, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#58: FILE: include/linux/hugetlb.h:23:
+int follow_hugetlb_page(struct mm_struct *, struct vm_area_struct *, struct page **, struct vm_area_struct **, unsigned long *, int, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#58: FILE: include/linux/hugetlb.h:23:
+int follow_hugetlb_page(struct mm_struct *, struct vm_area_struct *, struct page **, struct vm_area_struct **, unsigned long *, int, int, int);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#103: FILE: mm/hugetlb.c:1007:
+		if (i < length && vaddr < vma->vm_end &&
 				pfn_offset < HPAGE_SIZE/PAGE_SIZE) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: mm/memory.c:992:
+ ^IBUG_ON(len <= 0);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#124: FILE: mm/memory.c:992:
+ ^IBUG_ON(len <= 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: mm/memory.c:992:
+ ^IBUG_ON(len <= 0);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#124: FILE: mm/memory.c:992:
+ 	BUG_ON(len <= 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: mm/memory.c:1006:
+ ^I^Iif (!vma)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#139: FILE: mm/memory.c:1006:
+ ^I^Iif (!vma)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: mm/memory.c:1006:
+ ^I^Iif (!vma)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: mm/memory.c:1007:
+ ^I^I^Igoto finish_or_fault;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#140: FILE: mm/memory.c:1007:
+ ^I^I^Igoto finish_or_fault;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: mm/memory.c:1007:
+ ^I^I^Igoto finish_or_fault;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: mm/memory.c:1008:
+ ^I^Iif (in_gate_area(tsk, start)) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#141: FILE: mm/memory.c:1008:
+ ^I^Iif (in_gate_area(tsk, start)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: mm/memory.c:1008:
+ ^I^Iif (in_gate_area(tsk, start)) {$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000322987.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 19 warnings, 1 checks, 155 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000322987.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
