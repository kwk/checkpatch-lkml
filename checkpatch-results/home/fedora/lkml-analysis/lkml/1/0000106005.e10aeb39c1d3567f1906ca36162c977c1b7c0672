WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
  git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound-2.6.git for-linus

WARNING:TYPO_SPELLING: 'hda' may be misspelled - perhaps 'had'?
#61: 
      ALSA: hda - Fix unsigned comparison in patch_sigmatel.c
            ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'hda' may be misspelled - perhaps 'had'?
#62: 
      ALSA: hda - Get back Input Source for ALC262 toshiba-s06 model
            ^^^

WARNING:TYPO_SPELLING: 'hda' may be misspelled - perhaps 'had'?
#63: 
      ALSA: hda - Add quirk for Sony VAIO Z21MN
            ^^^

WARNING:TYPO_SPELLING: 'hda' may be misspelled - perhaps 'had'?
#64: 
      ALSA: hda - Fix check of input source type for realtek codecs
            ^^^

WARNING:TYPO_SPELLING: 'hda' may be misspelled - perhaps 'had'?
#65: 
      ALSA: hda - Add digital-mic support to ALC262 auto model
            ^^^

WARNING:TYPO_SPELLING: 'hda' may be misspelled - perhaps 'had'?
#66: 
      ALSA: hda - Make jack-plug notification selectable
            ^^^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#292: FILE: sound/pci/ctxfi/ctatc.c:1188:
+	if (NULL == atc)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#303: FILE: sound/pci/ctxfi/ctatc.c:1199:
+	if (NULL != atc->mixer)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#318: FILE: sound/pci/ctxfi/ctatc.c:1249:
+			printk(KERN_ERR "ctxfi: "

WARNING:SPLIT_STRING: quoted string split across lines
#319: FILE: sound/pci/ctxfi/ctatc.c:1250:
+			printk(KERN_ERR "ctxfi: "
+			       "Device %04x:%04x is black-listed\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#436: FILE: sound/pci/ctxfi/ctatc.c:1576:
+		printk(KERN_ERR "ctxfi: pci_enable_device failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#437: FILE: sound/pci/ctxfi/ctatc.c:1577:
+		printk(KERN_ERR "ctxfi: pci_enable_device failed, "
+		       "disabling device\n");

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#452: FILE: sound/pci/ctxfi/ctatc.c:1592:
 static struct ct_atc atc_preset __devinitdata = {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#472: FILE: sound/pci/ctxfi/ctatc.c:1684:
+		printk(KERN_ERR "ctxfi: Failed to create mixer obj!!!\n");

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#550: FILE: sound/pci/ctxfi/cthw20k1.c:1924:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#572: FILE: sound/pci/ctxfi/cthw20k1.c:1938:
+			printk(KERN_ERR "XFi: Cannot get irq %d\n", pci->irq);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#592: FILE: sound/pci/ctxfi/cthw20k1.c:1965:
+	hw_write_20kx(hw, PLLCTL, (data & (~(0x0F<<12))));
 	                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'SWH_CAPTURE_START <= type'
#780: FILE: sound/pci/ctxfi/ctmixer.c:470:
+	if ((SWH_CAPTURE_START <= type) && (SWH_CAPTURE_END >= type)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'SWH_CAPTURE_END >= type'
#780: FILE: sound/pci/ctxfi/ctmixer.c:470:
+	if ((SWH_CAPTURE_START <= type) && (SWH_CAPTURE_END >= type)) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#780: FILE: sound/pci/ctxfi/ctmixer.c:470:
+	if ((SWH_CAPTURE_START <= type) && (SWH_CAPTURE_END >= type)) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#792: FILE: sound/pci/ctxfi/ctmixer.c:482:
+	else if (MIXER_WAVEF_P_S == type)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#794: FILE: sound/pci/ctxfi/ctmixer.c:484:
+	else if (MIXER_WAVES_P_S == type)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#796: FILE: sound/pci/ctxfi/ctmixer.c:486:
+	else if (MIXER_WAVEC_P_S == type)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#798: FILE: sound/pci/ctxfi/ctmixer.c:488:
+	else if (MIXER_WAVER_P_S == type)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#800: FILE: sound/pci/ctxfi/ctmixer.c:490:
+	else if (MIXER_LINEIN_P_S == type)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#802: FILE: sound/pci/ctxfi/ctmixer.c:492:
+	else if (MIXER_SPDIFO_P_S == type)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#804: FILE: sound/pci/ctxfi/ctmixer.c:494:
+	else if (MIXER_SPDIFI_P_S == type)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#806: FILE: sound/pci/ctxfi/ctmixer.c:496:
+	else if (MIXER_DIGITAL_IO_S == type)

WARNING:RETURN_VOID: void function return statements are not generally useful
#810: FILE: sound/pci/ctxfi/ctmixer.c:500:
+	return;
+}

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#863: FILE: sound/pci/ctxfi/ctmixer.c:1058:
+	for (i = 0; i < NUM_CT_AMIXERS*CHN_NUM; i++) {
 	                              ^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#973: FILE: sound/pci/hda/Kconfig:41:
+config SND_HDA_INPUT_JACK
+	bool "Support jack plugging notification via input layer"
+	depends on INPUT=y || INPUT=SND_HDA_INTEL
+	select SND_JACK
+	help
+	  Say Y here to enable the jack plugging notification via
+	  input layer.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:LINE_SPACING: Missing a blank line after declarations
#1102: FILE: sound/pci/hda/patch_realtek.c:10918:
+		struct hda_input_mux *imux = &spec->private_imux[0];
+		imux->items[imux->num_items].label = "Int Mic";

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000106005.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 28 warnings, 5 checks, 1120 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000106005.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
