WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
master.kernel.org:/pub/scm/linux/kernel/git/jgarzik/netdev-2.6.git davem-next

WARNING:TYPO_SPELLING: 'declerations' may be misspelled - perhaps 'declarations'?
#110: 
      DM9000: Cleanup source code - remove forward declerations
                                                   ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#144: 
Márton Németh (1):
 ^

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#341: FILE: MAINTAINERS:3441:
+P:	Matti Linnanvuori
+M:	mattilinnanvuori@yahoo.com

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#443: FILE: drivers/net/8139too.c:137:
+#  define DPRINTK(fmt, args...) printk(KERN_DEBUG "%s: " fmt, __func__ , ## args)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#443: FILE: drivers/net/8139too.c:137:
+#  define DPRINTK(fmt, args...) printk(KERN_DEBUG "%s: " fmt, __func__ , ## args)
                                                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#461: FILE: drivers/net/8139too.c:222:
+#define RTL8139_CAPS	(HAS_CHIP_XCVR|HAS_LNK_CHNG)
                     	              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#471: FILE: drivers/net/8139too.c:1893:
+static inline void wrap_copy(struct sk_buff *skb, const unsigned char *ring,
 				 u32 offset, unsigned int size)

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#498: FILE: drivers/net/Kconfig:949:
+config DM9000_FORCE_SIMPLE_PHY_POLL
+	bool "Force simple NSR based PHY polling"
+	depends on DM9000
+	---help---
+	  This configuration forces the DM9000 to use the NSR's LinkStatus
+	  bit to determine if the link is up or down instead of the more
+	  costly MII PHY reads. Note, this will not work if the chip is
+	  operating with an external PHY.
+
 config ENC28J60
 	tristate "ENC28J60 support"
 	depends on EXPERIMENTAL && SPI && NET_ETHERNET

Kconfig symbols should have a help text which fully describes
it.

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#572: FILE: drivers/net/cxgb3/cxgb3_offload.c:1270:
 void __devinit cxgb3_adapter_ofld(struct adapter *adapter)

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#691: FILE: drivers/net/dm9000.c:132:
+	spinlock_t	lock;

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#796: FILE: drivers/net/dm9000.c:343:
+		msleep(1);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#839: FILE: drivers/net/dm9000.c:380:
+	msleep(1);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#856: FILE: drivers/net/dm9000.c:395:
+/*
+ * Write a word data to SROM

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#912: FILE: drivers/net/dm9000.c:555:
+				unsigned carrier, unsigned nsr)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#912: FILE: drivers/net/dm9000.c:555:
+				unsigned carrier, unsigned nsr)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#915: FILE: drivers/net/dm9000.c:558:
+	unsigned ncr = dm9000_read_locked(db, DM9000_NCR);

CHECK:BRACES: braces {} should be used on all arms of this statement
#932: FILE: drivers/net/dm9000.c:575:
+	if (db->flags & DM9000_PLATF_SIMPLE_PHY &&
[...]
+		}
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#934: FILE: drivers/net/dm9000.c:577:
+		unsigned nsr = dm9000_read_locked(db, DM9000_NSR);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#935: FILE: drivers/net/dm9000.c:578:
+		unsigned old_carrier = netif_carrier_ok(ndev) ? 1 : 0;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#936: FILE: drivers/net/dm9000.c:579:
+		unsigned new_carrier;

CHECK:BRACES: Unbalanced braces around else statement
#950: FILE: drivers/net/dm9000.c:592:
+	} else

CHECK:SPACING: No space is necessary after a cast
#1291: FILE: drivers/net/dm9000.c:670:
+		hash_table[hash_val / 16] |= (u16) 1 << (hash_val % 16);

CHECK:SPACING: No space is necessary after a cast
#1339: FILE: drivers/net/dm9000.c:735:
+	board_info_t *db = (board_info_t *) dev->priv;

WARNING:TYPO_SPELLING: 'Trnasmit' may be misspelled - perhaps 'Transmit'?
#1551: FILE: drivers/net/dm9000.c:964:
+	/* Trnasmit Interrupt check */
 	   ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1666: FILE: drivers/net/dm9000.c:1012:
+	 * may work, and tell the user that this is a problem */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1704: FILE: drivers/net/dm9000.c:1031:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1743: FILE: drivers/net/dm9000.c:1153:
+/*
+ * Stop the interface.

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_r' - possible side-effects?
#1767: FILE: drivers/net/dm9000.c:1177:
+#define res_size(_r) (((_r)->end - (_r)->start) + 1)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1770: FILE: drivers/net/dm9000.c:1180:
+/*
+ * Search DM9000 board, allocate space and register it

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1772: FILE: drivers/net/dm9000.c:1182:
+static int __devinit

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dm9000_probe', this function's name, in a string
#1793: FILE: drivers/net/dm9000.c:1203:
+	dev_dbg(&pdev->dev, "dm9000_probe()\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!db->addr_res"
#1811: FILE: drivers/net/dm9000.c:1221:
+	if (db->addr_res == NULL || db->data_res == NULL ||

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!db->data_res"
#1811: FILE: drivers/net/dm9000.c:1221:
+	if (db->addr_res == NULL || db->data_res == NULL ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!db->irq_res"
#1812: FILE: drivers/net/dm9000.c:1222:
+	    db->irq_res == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!db->addr_req"
#1822: FILE: drivers/net/dm9000.c:1232:
+	if (db->addr_req == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!db->io_addr"
#1830: FILE: drivers/net/dm9000.c:1240:
+	if (db->io_addr == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!db->data_req"
#1840: FILE: drivers/net/dm9000.c:1250:
+	if (db->data_req == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!db->io_data"
#1848: FILE: drivers/net/dm9000.c:1258:
+	if (db->io_data == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pdata"
#1862: FILE: drivers/net/dm9000.c:1272:
+	if (pdata != NULL) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1864: FILE: drivers/net/dm9000.c:1274:
+		 * default IO width */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1876: FILE: drivers/net/dm9000.c:1286:
+		 * over-rides */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pdata->inblk"
#1878: FILE: drivers/net/dm9000.c:1288:
+		if (pdata->inblk != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pdata->outblk"
#1881: FILE: drivers/net/dm9000.c:1291:
+		if (pdata->outblk != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pdata->dumpblk"
#1884: FILE: drivers/net/dm9000.c:1294:
+		if (pdata->dumpblk != NULL)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1962: FILE: drivers/net/dm9000.c:1372:
+		dm9000_read_eeprom(db, i / 2, ndev->dev_addr+i);
 		                                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1966: FILE: drivers/net/dm9000.c:1376:
+^I^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1969: FILE: drivers/net/dm9000.c:1379:
+			ndev->dev_addr[i] = ior(db, i+DM9000_PAR);
 			                             ^

WARNING:SPLIT_STRING: quoted string split across lines
#1974: FILE: drivers/net/dm9000.c:1384:
+		dev_warn(db->dev, "%s: Invalid ethernet MAC address. Please "
+			 "set using ifconfig\n", ndev->name);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LINE_SPACING: Missing a blank line after declarations
#1981: FILE: drivers/net/dm9000.c:1391:
+		DECLARE_MAC_BUF(mac);
+		printk(KERN_INFO "%s: dm9000%c at %p,%p IRQ %d MAC: %s (%s)\n",

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1981: FILE: drivers/net/dm9000.c:1391:
+		printk(KERN_INFO "%s: dm9000%c at %p,%p IRQ %d MAC: %s (%s)\n",

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2029: FILE: drivers/net/dm9000.h:139:
+#define IMR_LNKCHNG		(1<<5)
                    		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2029: FILE: drivers/net/dm9000.h:139:
+#define IMR_LNKCHNG		(1<<5)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2030: FILE: drivers/net/dm9000.h:140:
+#define IMR_UNDERRUN		(1<<4)
                     		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2030: FILE: drivers/net/dm9000.h:140:
+#define IMR_UNDERRUN		(1<<4)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2032: FILE: drivers/net/dm9000.h:142:
+#define ISR_LNKCHNG		(1<<5)
                    		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2032: FILE: drivers/net/dm9000.h:142:
+#define ISR_LNKCHNG		(1<<5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2033: FILE: drivers/net/dm9000.h:143:
+#define ISR_UNDERRUN		(1<<4)
                     		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2033: FILE: drivers/net/dm9000.h:143:
+#define ISR_UNDERRUN		(1<<4)

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#2286: FILE: drivers/net/fealnx.c:871:
+#if defined(__i386__) && !defined(MODULE)

Architecture specific defines should be avoided wherever
possible.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2293: FILE: drivers/net/fealnx.c:878:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#2545: FILE: drivers/net/ixgbe/ixgbe_main.c:399:
+                              union ixgbe_adv_rx_desc *rx_desc)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2545: FILE: drivers/net/ixgbe/ixgbe_main.c:399:
+                              union ixgbe_adv_rx_desc *rx_desc)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2561: FILE: drivers/net/ixgbe/ixgbe_main.c:408:
+^I^I^I                             adapter->vlgrp, tag,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2562: FILE: drivers/net/ixgbe/ixgbe_main.c:409:
+^I^I^I                             rx_desc);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2637: FILE: drivers/net/ixgbe/ixgbe_main.c:1409:
+                             u64 *hdr_flags, void *priv)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2637: FILE: drivers/net/ixgbe/ixgbe_main.c:1409:
+                             u64 *hdr_flags, void *priv)$

WARNING:TYPO_SPELLING: 'Intitial' may be misspelled - perhaps 'Initial'?
#2663: FILE: drivers/net/ixgbe/ixgbe_main.c:1516:
+	/* Intitial LRO Settings */
 	   ^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2902: FILE: drivers/net/tulip/interrupt.c:12:
+        Please submit bugs to http://bugzilla.kernel.org/ .$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2974: FILE: drivers/net/tulip/pnic2.c:14:
+        Please submit bugs to http://bugzilla.kernel.org/ .$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3001: FILE: drivers/net/tulip/timer.c:16:
 
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3027: FILE: drivers/net/tulip/tulip_core.c:1:
+/*	tulip_core.c: A DEC 21x4x-family ethernet driver for Linux.

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: No space is necessary after a cast
#3121: FILE: drivers/net/usb/rndis_host.c:427:
+	(void) rndis_command(dev, (void *)u.halt, CONTROL_BUFFER_SIZE);

CHECK:SPACING: No space is necessary after a cast
#3130: FILE: drivers/net/usb/rndis_host.c:452:
+		(void) rndis_command(dev, (void *)halt, CONTROL_BUFFER_SIZE);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3172: FILE: drivers/net/wan/retina.c:1:
+/* retina.c: */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3175: FILE: drivers/net/wan/retina.c:4:
+/*
+	This driver is based on:

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3204: FILE: drivers/net/wan/retina.c:33:
+#define CHANNELS ^I4u$

WARNING:INCLUDE_LINUX: Use #include <linux/pgtable.h> instead of <asm/pgtable.h>
#3251: FILE: drivers/net/wan/retina.c:80:
+#include <asm/pgtable.h>

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#3258: FILE: drivers/net/wan/retina.c:87:
+static struct pci_device_id fepci_pci_tbl[] __devinitdata = {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3308: FILE: drivers/net/wan/retina.c:137:
+	unsigned bufsize;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3309: FILE: drivers/net/wan/retina.c:138:
+	unsigned unit_sz;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3310: FILE: drivers/net/wan/retina.c:139:
+	unsigned units;		/* 2,4,8,16,...,256 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3312: FILE: drivers/net/wan/retina.c:141:
+	 * the user than what is the maximum internal unit size in FEPCI */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3313: FILE: drivers/net/wan/retina.c:142:
+	unsigned fake_unit_sz;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3314: FILE: drivers/net/wan/retina.c:143:
+	unsigned fake_units;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#3322: FILE: drivers/net/wan/retina.c:151:
+	uint8_t __iomem *ioaddr;

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#3323: FILE: drivers/net/wan/retina.c:152:
+	struct mutex mutex;

CHECK:CAMELCASE: Avoid CamelCase: <Rx_fifo_threshold>
#3371: FILE: drivers/net/wan/retina.c:200:
+	Rx_fifo_threshold = 0x7,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Receive_enable>
#3372: FILE: drivers/net/wan/retina.c:201:
+	Receive_enable = 0x80000000,

CHECK:CAMELCASE: Avoid CamelCase: <Tx_fifo_threshold>
#3376: FILE: drivers/net/wan/retina.c:205:
+	Tx_fifo_threshold = 0x7,

CHECK:CAMELCASE: Avoid CamelCase: <Tx_desc_threshold>
#3377: FILE: drivers/net/wan/retina.c:206:
+	Tx_desc_threshold = 0x700,

CHECK:CAMELCASE: Avoid CamelCase: <Transmit_enable>
#3378: FILE: drivers/net/wan/retina.c:207:
+	Transmit_enable = 0x80000000,

CHECK:CAMELCASE: Avoid CamelCase: <MaskFrameReceived>
#3382: FILE: drivers/net/wan/retina.c:211:
+	MaskFrameReceived = 0x01, MaskRxFifoError =

CHECK:CAMELCASE: Avoid CamelCase: <MaskRxFifoError>
#3382: FILE: drivers/net/wan/retina.c:211:
+	MaskFrameReceived = 0x01, MaskRxFifoError =

CHECK:CAMELCASE: Avoid CamelCase: <MaskRxFrameDroppedError>
#3383: FILE: drivers/net/wan/retina.c:212:
+	    0x02, MaskRxFrameDroppedError = 0x04,

CHECK:CAMELCASE: Avoid CamelCase: <MaskFrameTransmitted>
#3384: FILE: drivers/net/wan/retina.c:213:
+	MaskFrameTransmitted = 0x40, MaskTxFifoError = 0x80,

CHECK:CAMELCASE: Avoid CamelCase: <MaskTxFifoError>
#3384: FILE: drivers/net/wan/retina.c:213:
+	MaskFrameTransmitted = 0x40, MaskTxFifoError = 0x80,

CHECK:CAMELCASE: Avoid CamelCase: <MaskAllInts>
#3385: FILE: drivers/net/wan/retina.c:214:
+	MaskAllInts = 0xc7,

CHECK:CAMELCASE: Avoid CamelCase: <IntrFrameReceived>
#3386: FILE: drivers/net/wan/retina.c:215:
+	IntrFrameReceived = 0x01, IntrRxFifoError =

CHECK:CAMELCASE: Avoid CamelCase: <IntrRxFifoError>
#3386: FILE: drivers/net/wan/retina.c:215:
+	IntrFrameReceived = 0x01, IntrRxFifoError =

CHECK:CAMELCASE: Avoid CamelCase: <IntrRxFrameDroppedError>
#3387: FILE: drivers/net/wan/retina.c:216:
+	    0x02, IntrRxFrameDroppedError = 0x04,

CHECK:CAMELCASE: Avoid CamelCase: <IntrFrameTransmitted>
#3388: FILE: drivers/net/wan/retina.c:217:
+	IntrFrameTransmitted = 0x40, IntrTxFifoError = 0x80,

CHECK:CAMELCASE: Avoid CamelCase: <IntrTxFifoError>
#3388: FILE: drivers/net/wan/retina.c:217:
+	IntrFrameTransmitted = 0x40, IntrTxFifoError = 0x80,

CHECK:CAMELCASE: Avoid CamelCase: <IntrAllInts>
#3389: FILE: drivers/net/wan/retina.c:218:
+	IntrAllInts = 0xc7,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3393: FILE: drivers/net/wan/retina.c:222:
+ * Elements are written as 32 bit for endian portability */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3416: FILE: drivers/net/wan/retina.c:245:
+static void set_int_mask(unsigned char channel, unsigned value,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#3419: FILE: drivers/net/wan/retina.c:248:
+	uint8_t __iomem *address = cp->ioaddr + reg_first_int_mask;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3420: FILE: drivers/net/wan/retina.c:249:
+	const unsigned shift = 8 * channel;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3421: FILE: drivers/net/wan/retina.c:250:
+	uint32_t oldvalue = readl(address);

WARNING:LINE_SPACING: Missing a blank line after declarations
#3422: FILE: drivers/net/wan/retina.c:251:
+	uint32_t oldvalue = readl(address);
+	oldvalue &= ~(0xff << shift);	/* clear bits */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3433: FILE: drivers/net/wan/retina.c:262:
+static inline unsigned get_int_status(unsigned char channel,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3436: FILE: drivers/net/wan/retina.c:265:
+	const uint32_t oldvalue = readl(ioaddr + reg_first_int_status);

WARNING:LINE_SPACING: Missing a blank line after declarations
#3437: FILE: drivers/net/wan/retina.c:266:
+	const uint32_t oldvalue = readl(ioaddr + reg_first_int_status);
+	return (oldvalue >> (8 * channel)) & 0xff; /* clear other bits */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3463: FILE: drivers/net/wan/retina.c:292:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#3464: FILE: drivers/net/wan/retina.c:293:
+static int fepci_char_open(struct inode *inode, struct file *filp);
                                                              ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#3468: FILE: drivers/net/wan/retina.c:297:
+ * @filp:       pointer to struct file.
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#3478: FILE: drivers/net/wan/retina.c:307:
+static int fepci_char_mmap(struct file *filp, struct vm_area_struct *vma);
                                         ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#3479: FILE: drivers/net/wan/retina.c:308:
+static int fepci_char_ioctl(struct inode *inode, struct file *filp,
                                                               ^^^^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#3482: FILE: drivers/net/wan/retina.c:311:
+static struct file_operations fepci_char_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3528: FILE: drivers/net/wan/retina.c:357:
+static inline struct fepci_card_private *retina_card(unsigned number)

WARNING:LINE_SPACING: Missing a blank line after declarations
#3531: FILE: drivers/net/wan/retina.c:360:
+	struct fepci_card_private *card;
+	rcu_read_lock();

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#3537: FILE: drivers/net/wan/retina.c:366:
+static int fepci_char_open(struct inode *inode, struct file *filp)
                                                              ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#3541: FILE: drivers/net/wan/retina.c:370:
+	struct fepci_card_private *card;
+	if (unlikely(minor >= find_cnt))

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#3550: FILE: drivers/net/wan/retina.c:379:
+static int fepci_char_mmap(struct file *filp, struct vm_area_struct *vma)
                                         ^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3555: FILE: drivers/net/wan/retina.c:384:
+	unsigned pfn;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#3558: FILE: drivers/net/wan/retina.c:387:
+	vma->vm_file = filp;
 	               ^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3563: FILE: drivers/net/wan/retina.c:392:
+			printk(KERN_WARNING

WARNING:LINE_SPACING: Missing a blank line after declarations
#3572: FILE: drivers/net/wan/retina.c:401:
+		struct fepci_card_private *device = filp->private_data;
+		if (unlikely(device->removed))

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'device->ch_privates[channel]->rx_buffer'
#3576: FILE: drivers/net/wan/retina.c:405:
+			virtual_address = (unsigned long)device->
+						ch_privates[channel]->rx_buffer;

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'device->ch_privates[channel]->tx_buffer'
#3579: FILE: drivers/net/wan/retina.c:408:
+			virtual_address = (unsigned long)device->
+						ch_privates[channel]->tx_buffer;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3599: FILE: drivers/net/wan/retina.c:428:
+			      unsigned len, bool shrink)

WARNING:LINE_SPACING: Missing a blank line after declarations
#3603: FILE: drivers/net/wan/retina.c:432:
+		unsigned int i;
+		for (i = 0; i < len; i += 2) {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3604: FILE: drivers/net/wan/retina.c:433:
+			uint32_t longword = readl_relaxed(from + i / 2 *

WARNING:LINE_SPACING: Missing a blank line after declarations
#3619: FILE: drivers/net/wan/retina.c:448:
+		unsigned int i;
+		for (i = 0; i < len; i += 4) {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3620: FILE: drivers/net/wan/retina.c:449:
+			uint32_t longword = readl_relaxed(from + i);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#3630: FILE: drivers/net/wan/retina.c:459:
+static int fepci_copy_from_user(uint8_t __iomem *to, unsigned long from,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3631: FILE: drivers/net/wan/retina.c:460:
+				unsigned len, bool enlarge)

WARNING:LINE_SPACING: Missing a blank line after declarations
#3635: FILE: drivers/net/wan/retina.c:464:
+		unsigned int i;
+		for (i = 0; i < len; i += 2) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#3652: FILE: drivers/net/wan/retina.c:481:
+		unsigned int i;
+		for (i = 0; i < len; i += 4) {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3653: FILE: drivers/net/wan/retina.c:482:
+			uint32_t longword;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3664: FILE: drivers/net/wan/retina.c:493:
+static unsigned get_semafore(struct fepci_real_mailbox __iomem *mailbox)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3666: FILE: drivers/net/wan/retina.c:495:
+	unsigned semafore = readb_relaxed(&mailbox->Semafore_Mail_number);

CHECK:CAMELCASE: Avoid CamelCase: <Semafore_Mail_number>
#3666: FILE: drivers/net/wan/retina.c:495:
+	unsigned semafore = readb_relaxed(&mailbox->Semafore_Mail_number);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#3671: FILE: drivers/net/wan/retina.c:500:
+			 unsigned semafore)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3673: FILE: drivers/net/wan/retina.c:502:
+	uint32_t number = readl_relaxed(&mailbox->Semafore_Mail_number);

WARNING:LINE_SPACING: Missing a blank line after declarations
#3674: FILE: drivers/net/wan/retina.c:503:
+	uint32_t number = readl_relaxed(&mailbox->Semafore_Mail_number);
+	number = ((number & ~0xFF) | semafore) + (1 << 8);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#3678: FILE: drivers/net/wan/retina.c:507:
+static int fepci_char_ioctl(struct inode *inode, struct file *filp,
                                                               ^^^^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#3682: FILE: drivers/net/wan/retina.c:511:
+	uint8_t __iomem *ioaddr;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3688: FILE: drivers/net/wan/retina.c:517:
+		printk(KERN_WARNING

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#3711: FILE: drivers/net/wan/retina.c:540:
+		if (unlikely(arg < 0 || arg >= CHANNELS
+		    || !(card->ch_privates[arg]->stream_on)))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#3727: FILE: drivers/net/wan/retina.c:556:
+		if (unlikely(arg < 0 || arg >= CHANNELS
+		    || !(card->ch_privates[arg]->stream_on)))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#3743: FILE: drivers/net/wan/retina.c:572:
+		if (unlikely(arg < 0 || arg >= CHANNELS
+		    || !(card->ch_privates[arg]->stream_on)))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#3756: FILE: drivers/net/wan/retina.c:585:
+						  (minor, arg, stream_pointers))
+						 || (temp_rx_pointer !=

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#3802: FILE: drivers/net/wan/retina.c:631:
+			msleep(1);	/* delay at least 1 millisecond */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3913: FILE: drivers/net/wan/retina.c:742:
+			retval = fepci_copy_to_user(arg,
+						ioaddr +

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3926: FILE: drivers/net/wan/retina.c:755:
+			retval = fepci_copy_to_user(arg,
+						ioaddr + FEPCI_MAILBOX_OFFSETT,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around card->alarm_manager_wait_q
#3935: FILE: drivers/net/wan/retina.c:764:
+		interruptible_sleep_on(&(card->alarm_manager_wait_q));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#3978: FILE: drivers/net/wan/retina.c:807:
+		register_chrdev(0 /* dynamic */ , fepci_name, &fepci_char_fops);
 		                                ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#3980: FILE: drivers/net/wan/retina.c:809:
+		printk(KERN_WARNING

WARNING:LINE_SPACING: Missing a blank line after declarations
#4000: FILE: drivers/net/wan/retina.c:829:
+	int error;
+	mutex_lock(&cp->mutex);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4009: FILE: drivers/net/wan/retina.c:838:
+	unsigned tx_pages, rx_pages, tx_order, rx_order;

WARNING:LINE_SPACING: Missing a blank line after declarations
#4011: FILE: drivers/net/wan/retina.c:840:
+	unsigned int i;
+	mutex_lock(&cp->mutex);

WARNING:SPLIT_STRING: quoted string split across lines
#4016: FILE: drivers/net/wan/retina.c:845:
+			 "Interface is in Ethernet mode, "
+			 "cannot open stream interface\n");

CHECK:SPACING: No space is necessary after a cast
#4069: FILE: drivers/net/wan/retina.c:898:
+	fp->tx_buffer = (u32 *) __get_free_pages(GFP_KERNEL, tx_order);

CHECK:SPACING: No space is necessary after a cast
#4072: FILE: drivers/net/wan/retina.c:901:
+	fp->rx_buffer = (u32 *) __get_free_pages(GFP_KERNEL, rx_order);

CHECK:SPACING: No space is necessary after a cast
#4101: FILE: drivers/net/wan/retina.c:930:
+		    (u32 *) ((u32) (fp->rx_buffer) + (fp->unit_sz * i));

CHECK:SPACING: No space is necessary after a cast
#4104: FILE: drivers/net/wan/retina.c:933:
+		    (u32 *) ((u32) (fp->tx_buffer) + (fp->unit_sz * i));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4121: FILE: drivers/net/wan/retina.c:950:
+	unsigned i;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#4122: FILE: drivers/net/wan/retina.c:951:
+	uint8_t __iomem *ioaddr = cp->ioaddr;

WARNING:LINE_SPACING: Missing a blank line after declarations
#4124: FILE: drivers/net/wan/retina.c:953:
+	struct net_device *dev = fp->this_dev;
+	mutex_lock(&cp->mutex);

WARNING:SPLIT_STRING: quoted string split across lines
#4129: FILE: drivers/net/wan/retina.c:958:
+			 "interface is not in stream mode: "
+			 "streaming cannot be started\n");

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#4135: FILE: drivers/net/wan/retina.c:964:
+		return 0;
+	} else {

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'fp->rx_unit'
#4160: FILE: drivers/net/wan/retina.c:989:
+						    fp->
+						    rx_unit[(fp->cur_rx_unit +

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4168: FILE: drivers/net/wan/retina.c:997:
+			unsigned next = (fp->cur_rx + i) & (RX_RING_SIZE - 1);

WARNING:LINE_SPACING: Missing a blank line after declarations
#4169: FILE: drivers/net/wan/retina.c:998:
+			unsigned next = (fp->cur_rx + i) & (RX_RING_SIZE - 1);
+			pci_unmap_addr_set(fp->rx + next, address, address);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4184: FILE: drivers/net/wan/retina.c:1013:
+			unsigned next = (fp->cur_tx + i) & (TX_RING_SIZE - 1);

WARNING:LINE_SPACING: Missing a blank line after declarations
#4185: FILE: drivers/net/wan/retina.c:1014:
+			unsigned next = (fp->cur_tx + i) & (TX_RING_SIZE - 1);
+			pci_unmap_addr_set(fp->tx + next, address, address);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#4216: FILE: drivers/net/wan/retina.c:1045:
+	uint8_t __iomem *ioaddr = cp->ioaddr;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4217: FILE: drivers/net/wan/retina.c:1046:
+	unsigned i = min(RX_RING_SIZE, TX_RING_SIZE) - 1;

WARNING:LINE_SPACING: Missing a blank line after declarations
#4219: FILE: drivers/net/wan/retina.c:1048:
+	struct net_device *dev = fp->this_dev;
+	fp->stream_on = 0;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#4231: FILE: drivers/net/wan/retina.c:1060:
+		if (likely(!pci_dma_mapping_error(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#4237: FILE: drivers/net/wan/retina.c:1066:
+		if (likely(!pci_dma_mapping_error(

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4248: FILE: drivers/net/wan/retina.c:1077:
+	unsigned rx_pages, tx_pages, rx_order, tx_order;

WARNING:LINE_SPACING: Missing a blank line after declarations
#4249: FILE: drivers/net/wan/retina.c:1078:
+	unsigned rx_pages, tx_pages, rx_order, tx_order;
+	if (unlikely(!(fp->in_stream_mode)))

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#4280: FILE: drivers/net/wan/retina.c:1109:
+	uint8_t __iomem *ioaddr = (uint8_t __iomem *)dev->base_addr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4282: FILE: drivers/net/wan/retina.c:1111:
+	const uint32_t intr_status = get_int_status(channel, ioaddr);

WARNING:LINE_SPACING: Missing a blank line after declarations
#4287: FILE: drivers/net/wan/retina.c:1116:
+	unsigned int temp_tx_unit;
+	if (!intr_status)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#4291: FILE: drivers/net/wan/retina.c:1120:
+	/* First update cur_rx, and do stuff if it has moved
+	   (+ packets have been received). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4291: FILE: drivers/net/wan/retina.c:1120:
+	   (+ packets have been received). */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#4296: FILE: drivers/net/wan/retina.c:1125:
+	       /* Stop if made one round. */
+	       && temp_rx != ((fp->cur_rx + 1) & (RX_RING_SIZE - 1))) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#4297: FILE: drivers/net/wan/retina.c:1126:
+		if (likely(!pci_dma_mapping_error(

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around fp->this_card_priv->stream_receive_q
#4313: FILE: drivers/net/wan/retina.c:1142:
+		wake_up_interruptible(&(fp->this_card_priv->stream_receive_q));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around fp->this_card_priv->stream_both_q
#4314: FILE: drivers/net/wan/retina.c:1143:
+		wake_up_interruptible(&(fp->this_card_priv->stream_both_q));

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4321: FILE: drivers/net/wan/retina.c:1150:
+		uint32_t desc_b = readl(&fp->rx_desc[temp_rx].desc_b);

WARNING:LINE_SPACING: Missing a blank line after declarations
#4322: FILE: drivers/net/wan/retina.c:1151:
+		uint32_t desc_b = readl(&fp->rx_desc[temp_rx].desc_b);
+		if ((desc_b & transfer_not_done) == 0) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4344: FILE: drivers/net/wan/retina.c:1173:
+				writel(bus_address,
+					&fp->rx_desc[temp_rx].desc_a);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4346: FILE: drivers/net/wan/retina.c:1175:
+				writel(enable_transfer,
+					&fp->rx_desc[temp_rx].desc_b);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#4358: FILE: drivers/net/wan/retina.c:1187:
+	/* first update cur_tx, and do stuff if it has moved
+	   (+ packets have been transmitted) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4358: FILE: drivers/net/wan/retina.c:1187:
+	   (+ packets have been transmitted) */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#4364: FILE: drivers/net/wan/retina.c:1193:
+		/* stop if made one round */
+	       && temp_tx != ((fp->cur_tx + 1) & (TX_RING_SIZE - 1))) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#4365: FILE: drivers/net/wan/retina.c:1194:
+		if (likely(!pci_dma_mapping_error(

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'fp->this_card_priv->card_number'
#4378: FILE: drivers/net/wan/retina.c:1207:
+		*USER_TX_S_FAKE_POINTER(fp->this_card_priv->
+					card_number,

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'fp->this_card_priv->stream_transmit_q'
#4383: FILE: drivers/net/wan/retina.c:1212:
+		wake_up_interruptible(&(fp->this_card_priv->
+					stream_transmit_q));

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'fp->this_card_priv->stream_both_q'
#4385: FILE: drivers/net/wan/retina.c:1214:
+		wake_up_interruptible(&(fp->this_card_priv->
+					stream_both_q));

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4394: FILE: drivers/net/wan/retina.c:1223:
+		uint32_t desc_b = readl_relaxed(&fp->tx_desc[temp_tx].desc_b);

WARNING:LINE_SPACING: Missing a blank line after declarations
#4395: FILE: drivers/net/wan/retina.c:1224:
+		uint32_t desc_b = readl_relaxed(&fp->tx_desc[temp_tx].desc_b);
+		if ((desc_b & transfer_not_done) == 0) {

WARNING:TYPO_SPELLING: 'offsett' may be misspelled - perhaps 'offset'?
#4428: FILE: drivers/net/wan/retina.c:1257:
+static inline u16 get_common_reg_word(uint8_t __iomem *ioaddr, unsigned offsett)
                                                                         ^^^^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4428: FILE: drivers/net/wan/retina.c:1257:
+static inline u16 get_common_reg_word(uint8_t __iomem *ioaddr, unsigned offsett)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#4428: FILE: drivers/net/wan/retina.c:1257:
+static inline u16 get_common_reg_word(uint8_t __iomem *ioaddr, unsigned offsett)

WARNING:TYPO_SPELLING: 'offsett' may be misspelled - perhaps 'offset'?
#4431: FILE: drivers/net/wan/retina.c:1260:
+				 (offsett << 1));
 				  ^^^^^^^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#4438: FILE: drivers/net/wan/retina.c:1267:
+	uint8_t __iomem *ioaddr_reg_custom = card_private->ioaddr + reg_custom;

WARNING:LINE_SPACING: Missing a blank line after declarations
#4439: FILE: drivers/net/wan/retina.c:1268:
+	uint8_t __iomem *ioaddr_reg_custom = card_private->ioaddr + reg_custom;
+	if (readl_relaxed(ioaddr_reg_custom) & AM_interrupt_status) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around card_private->alarm_manager_wait_q
#4443: FILE: drivers/net/wan/retina.c:1272:
+		wake_up(&(card_private->alarm_manager_wait_q));

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#4450: FILE: drivers/net/wan/retina.c:1279:
+static int __devinit fepci_init_one(struct pci_dev *pdev,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4454: FILE: drivers/net/wan/retina.c:1283:
+	unsigned j;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#4455: FILE: drivers/net/wan/retina.c:1284:
+	uint8_t __iomem *ioaddr;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4456: FILE: drivers/net/wan/retina.c:1285:
+	unsigned position = 0u;

WARNING:LINE_SPACING: Missing a blank line after declarations
#4458: FILE: drivers/net/wan/retina.c:1287:
+	struct fepci_card_private *card_private, **cards, **old;
+	for (; position < find_cnt; position++) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!card_private->pci_dev"
#4460: FILE: drivers/net/wan/retina.c:1289:
+		if (card_private->pci_dev == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cards"
#4469: FILE: drivers/net/wan/retina.c:1298:
+	if (cards == NULL)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*card_private)...) over kzalloc(sizeof(struct fepci_card_private)...)
#4471: FILE: drivers/net/wan/retina.c:1300:
+	card_private = kzalloc(sizeof(struct fepci_card_private), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!card_private"
#4472: FILE: drivers/net/wan/retina.c:1301:
+	if (card_private == NULL) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around card_private->alarm_manager_wait_q
#4477: FILE: drivers/net/wan/retina.c:1306:
+	init_waitqueue_head(&(card_private->alarm_manager_wait_q));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around card_private->stream_transmit_q
#4478: FILE: drivers/net/wan/retina.c:1307:
+	init_waitqueue_head(&(card_private->stream_transmit_q));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around card_private->stream_receive_q
#4479: FILE: drivers/net/wan/retina.c:1308:
+	init_waitqueue_head(&(card_private->stream_receive_q));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around card_private->stream_both_q
#4480: FILE: drivers/net/wan/retina.c:1309:
+	init_waitqueue_head(&(card_private->stream_both_q));

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#4550: FILE: drivers/net/wan/retina.c:1379:
+		uint8_t *address = dev->dev_addr;

WARNING:LINE_SPACING: Missing a blank line after declarations
#4551: FILE: drivers/net/wan/retina.c:1380:
+		uint8_t *address = dev->dev_addr;
+		if (unlikely(!dev)) {

CHECK:CAMELCASE: Avoid CamelCase: <Size_Command>
#4571: FILE: drivers/net/wan/retina.c:1400:
+		       &real_mailbox->Size_Command);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#4576: FILE: drivers/net/wan/retina.c:1405:
+			msleep(1);

CHECK:CAMELCASE: Avoid CamelCase: <Data>
#4578: FILE: drivers/net/wan/retina.c:1407:
+			u32 __iomem *data = real_mailbox->Data + 3 * j;

WARNING:LINE_SPACING: Missing a blank line after declarations
#4579: FILE: drivers/net/wan/retina.c:1408:
+			u32 __iomem *data = real_mailbox->Data + 3 * j;
+			address[5] = readb_relaxed(data);

CHECK:SPACING: No space is necessary after a cast
#4580: FILE: drivers/net/wan/retina.c:1409:
+			address[4] = readb_relaxed(((u8 __iomem *) data)

CHECK:SPACING: No space is necessary after a cast
#4583: FILE: drivers/net/wan/retina.c:1412:
+			address[2] = readb_relaxed(((u8 __iomem *) data)

CHECK:SPACING: No space is necessary after a cast
#4586: FILE: drivers/net/wan/retina.c:1415:
+			address[0] = readb_relaxed(((u8 __iomem *) data)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#4640: FILE: drivers/net/wan/retina.c:1469:
+	uint8_t __iomem *ioaddr = (uint8_t __iomem *)dev->base_addr;

WARNING:LINE_SPACING: Missing a blank line after declarations
#4642: FILE: drivers/net/wan/retina.c:1471:
+	struct fepci_card_private *cp = fp->this_card_priv;
+	if (unlikely(cp->removed)) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#4644: FILE: drivers/net/wan/retina.c:1473:
+		return -ENXIO;
+	} else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#4697: FILE: drivers/net/wan/retina.c:1526:
+	int error;
+	mutex_lock(&cp->mutex);

WARNING:LINE_SPACING: Missing a blank line after declarations
#4723: FILE: drivers/net/wan/retina.c:1552:
+	struct fepci_ch_private *fp = netdev_priv(dev);
+	tasklet_schedule(&fp->transmission);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4730: FILE: drivers/net/wan/retina.c:1559:
+	unsigned i;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#4737: FILE: drivers/net/wan/retina.c:1566:
+		if (unlikely(skb == NULL)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#4743: FILE: drivers/net/wan/retina.c:1572:
+			dma_addr_t bus_address;
+			skb_reserve(skb, NET_IP_ALIGN);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4746: FILE: drivers/net/wan/retina.c:1575:
+				pci_map_single(fp->this_card_priv->pci_dev,
+						skb->data, RETINA_MRU,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4773: FILE: drivers/net/wan/retina.c:1602:
+	unsigned cur_tx;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4774: FILE: drivers/net/wan/retina.c:1603:
+	unsigned next;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4775: FILE: drivers/net/wan/retina.c:1604:
+	unsigned tx_length = skb->len;

WARNING:LINE_SPACING: Missing a blank line after declarations
#4791: FILE: drivers/net/wan/retina.c:1620:
+		struct fepci_desc __iomem *descriptor;
+		pci_unmap_addr_set(fp->tx + cur_tx, address, bus_address);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "fp->tx[next].skbuff"
#4807: FILE: drivers/net/wan/retina.c:1636:
+	if (fp->tx[next].skbuff != NULL)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4816: FILE: drivers/net/wan/retina.c:1645:
+	unsigned next;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4820: FILE: drivers/net/wan/retina.c:1649:
+	unsigned i = 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#4821: FILE: drivers/net/wan/retina.c:1650:
+	unsigned i = 0;
+	do {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4822: FILE: drivers/net/wan/retina.c:1651:
+		uint32_t desc_b;

WARNING:LINE_SPACING: Missing a blank line after declarations
#4825: FILE: drivers/net/wan/retina.c:1654:
+		struct fepci_desc __iomem *desc;
+		if (skb == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#4825: FILE: drivers/net/wan/retina.c:1654:
+		if (skb == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fp->tx[next].skbuff"
#4846: FILE: drivers/net/wan/retina.c:1675:
+	    fp->tx[next].skbuff == NULL &&

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4854: FILE: drivers/net/wan/retina.c:1683:
+	unsigned i, old_cur_rx = fp->cur_rx;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4855: FILE: drivers/net/wan/retina.c:1684:
+	unsigned last = (old_cur_rx + RX_RING_SIZE - 1) & (RX_RING_SIZE - 1);

WARNING:LINE_SPACING: Missing a blank line after declarations
#4856: FILE: drivers/net/wan/retina.c:1685:
+	unsigned last = (old_cur_rx + RX_RING_SIZE - 1) & (RX_RING_SIZE - 1);
+	for (i = old_cur_rx;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4859: FILE: drivers/net/wan/retina.c:1688:
+		uint32_t desc_b;

WARNING:LINE_SPACING: Missing a blank line after declarations
#4863: FILE: drivers/net/wan/retina.c:1692:
+		struct fepci_desc __iomem *rx_desc = fp->rx_desc + i;
+		if (unlikely(skb == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#4863: FILE: drivers/net/wan/retina.c:1692:
+		if (unlikely(skb == NULL))

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4867: FILE: drivers/net/wan/retina.c:1696:
+			uint32_t length;

WARNING:LINE_SPACING: Missing a blank line after declarations
#4868: FILE: drivers/net/wan/retina.c:1697:
+			uint32_t length;
+			fp->cur_rx = (i + 1) & (RX_RING_SIZE - 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4888: FILE: drivers/net/wan/retina.c:1717:
+			pci_unmap_single(fp->this_card_priv->pci_dev,
+				pci_unmap_addr(fp->rx + i, address),

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4897: FILE: drivers/net/wan/retina.c:1726:
+					 * are bogus. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4905: FILE: drivers/net/wan/retina.c:1734:
+					 * broadcast. */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#4919: FILE: drivers/net/wan/retina.c:1748:
+			if (unlikely(skb == NULL)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#4924: FILE: drivers/net/wan/retina.c:1753:
+				dma_addr_t address;
+				skb_reserve(skb, NET_IP_ALIGN);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'fp->this_card_priv->pci_dev'
#4926: FILE: drivers/net/wan/retina.c:1755:
+				address = pci_map_single(fp->this_card_priv->
+							 pci_dev, skb->data,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#4951: FILE: drivers/net/wan/retina.c:1780:
+	uint8_t __iomem *ioaddr = (uint8_t __iomem *)dev->base_addr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#4954: FILE: drivers/net/wan/retina.c:1783:
+	const uint32_t intr_status = get_int_status(channel, ioaddr);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4972: FILE: drivers/net/wan/retina.c:1801:
+	unsigned i;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#4973: FILE: drivers/net/wan/retina.c:1802:
+	uint8_t __iomem *ioaddr;

WARNING:LINE_SPACING: Missing a blank line after declarations
#4975: FILE: drivers/net/wan/retina.c:1804:
+	struct pci_dev *pdev;
+	if (unlikely(!fp->in_eth_mode))

WARNING:LINE_SPACING: Missing a blank line after declarations
#4996: FILE: drivers/net/wan/retina.c:1825:
+		struct sk_buff *skb = fp->rx[i].skbuff;
+		if (skb != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "skb"
#4996: FILE: drivers/net/wan/retina.c:1825:
+		if (skb != NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#5007: FILE: drivers/net/wan/retina.c:1836:
+		struct sk_buff *skb = fp->tx[i].skbuff;
+		if (skb != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "skb"
#5007: FILE: drivers/net/wan/retina.c:1836:
+		if (skb != NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#5021: FILE: drivers/net/wan/retina.c:1850:
+	struct fepci_card_private *card = fp->this_card_priv;
+	if (unlikely(!netif_device_present(dev)))

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#5027: FILE: drivers/net/wan/retina.c:1856:
+static void alarm_off(uint8_t __iomem *ioaddr, unsigned int irq)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#5029: FILE: drivers/net/wan/retina.c:1858:
+	uint8_t __iomem *ioaddr_reg_custom = ioaddr + reg_custom;

WARNING:LINE_SPACING: Missing a blank line after declarations
#5030: FILE: drivers/net/wan/retina.c:1859:
+	uint8_t __iomem *ioaddr_reg_custom = ioaddr + reg_custom;
+	do {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#5041: FILE: drivers/net/wan/retina.c:1870:
+	uint8_t __iomem *ioaddr = cardp->ioaddr;

WARNING:LINE_SPACING: Missing a blank line after declarations
#5043: FILE: drivers/net/wan/retina.c:1872:
+	unsigned int irq = pdev->irq;
+	cardp->removed = true;

WARNING:LINE_SPACING: Missing a blank line after declarations
#5049: FILE: drivers/net/wan/retina.c:1878:
+		struct net_device *dev = fp->this_dev;
+		if (unlikely(dev == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#5049: FILE: drivers/net/wan/retina.c:1878:
+		if (unlikely(dev == NULL))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#5072: FILE: drivers/net/wan/retina.c:1901:
+	unsigned channel;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#5073: FILE: drivers/net/wan/retina.c:1902:
+	unsigned irq = pdev->irq;

WARNING:LINE_SPACING: Missing a blank line after declarations
#5074: FILE: drivers/net/wan/retina.c:1903:
+	unsigned irq = pdev->irq;
+	cardp->removed = true;

WARNING:LINE_SPACING: Missing a blank line after declarations
#5082: FILE: drivers/net/wan/retina.c:1911:
+		bool stream_on;
+		if (unlikely(dev == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#5082: FILE: drivers/net/wan/retina.c:1911:
+		if (unlikely(dev == NULL))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#5112: FILE: drivers/net/wan/retina.c:1941:
+	unsigned channel;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#5114: FILE: drivers/net/wan/retina.c:1943:
+	unsigned irq;

WARNING:LINE_SPACING: Missing a blank line after declarations
#5115: FILE: drivers/net/wan/retina.c:1944:
+	unsigned irq;
+	pci_set_power_state(pdev, PCI_D0);

WARNING:LINE_SPACING: Missing a blank line after declarations
#5136: FILE: drivers/net/wan/retina.c:1965:
+		struct net_device *dev = fp->this_dev;
+		if (unlikely(dev == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#5136: FILE: drivers/net/wan/retina.c:1965:
+		if (unlikely(dev == NULL))

WARNING:LINE_SPACING: Missing a blank line after declarations
#5142: FILE: drivers/net/wan/retina.c:1971:
+			int open = fepci_open_down(dev, fp);
+			if (unlikely(open))

WARNING:LINE_SPACING: Missing a blank line after declarations
#5146: FILE: drivers/net/wan/retina.c:1975:
+			int open;
+			fp->in_stream_mode = 0;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#5195: FILE: drivers/net/wan/retina.c:2024:
+	unsigned card;

WARNING:LINE_SPACING: Missing a blank line after declarations
#5196: FILE: drivers/net/wan/retina.c:2025:
+	unsigned card;
+	pci_unregister_driver(&fepci_driver);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#5212: FILE: drivers/net/wan/retina.h:1:
+/* V1.0.0 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#5215: FILE: drivers/net/wan/retina.h:4:
+/*
+	Copyright (C) 2002-2003 Jouni Kujala, Flexibilis Oy.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5240: FILE: drivers/net/wan/retina.h:29:
+#define FEPCI_IDENTIFICATION_OFFSETT (FEPCI_SHARED_MEM_OFFSETT+0x0)
                                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5241: FILE: drivers/net/wan/retina.h:30:
+#define FEPCI_FEATURES_OFFSETT (FEPCI_SHARED_MEM_OFFSETT+0x40)
                                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5242: FILE: drivers/net/wan/retina.h:31:
+#define FEPCI_SETTINGS_OFFSETT (FEPCI_SHARED_MEM_OFFSETT+0x80)
                                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5243: FILE: drivers/net/wan/retina.h:32:
+#define FEPCI_STATUS_OFFSETT (FEPCI_SHARED_MEM_OFFSETT+0xE0)
                                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5244: FILE: drivers/net/wan/retina.h:33:
+#define FEPCI_MAILBOX_OFFSETT (FEPCI_SHARED_MEM_OFFSETT+0x100)
                                                        ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#5250: FILE: drivers/net/wan/retina.h:39:
+};
+struct fepci_real_identification {

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#5251: FILE: drivers/net/wan/retina.h:40:
+	unsigned long int data[0x10];

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#5257: FILE: drivers/net/wan/retina.h:46:
+};
+struct fepci_real_features {

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#5258: FILE: drivers/net/wan/retina.h:47:
+	unsigned long int data[0x10];

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#5264: FILE: drivers/net/wan/retina.h:53:
+};
+struct fepci_real_settings {

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#5265: FILE: drivers/net/wan/retina.h:54:
+	unsigned long int data[0x15];

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#5271: FILE: drivers/net/wan/retina.h:60:
+};
+struct fepci_real_status {

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#5272: FILE: drivers/net/wan/retina.h:61:
+	unsigned long int data[0x5];

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'unsigned long int' as the int is unnecessary
#5276: FILE: drivers/net/wan/retina.h:65:
+	unsigned long int data[0x80];

CHECK:CAMELCASE: Avoid CamelCase: <Semafore>
#5304: FILE: drivers/net/wan/retina.h:93:
+	unsigned char Semafore;

CHECK:CAMELCASE: Avoid CamelCase: <Mail_number>
#5305: FILE: drivers/net/wan/retina.h:94:
+	unsigned char Mail_number;

CHECK:CAMELCASE: Avoid CamelCase: <Size>
#5306: FILE: drivers/net/wan/retina.h:95:
+	unsigned char Size;

CHECK:CAMELCASE: Avoid CamelCase: <Command>
#5307: FILE: drivers/net/wan/retina.h:96:
+	unsigned char Command;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5339: FILE: drivers/net/wan/retina.h:128:
+ *             channel     */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5352: FILE: drivers/net/wan/retina.h:141:
+ *                       channel     */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5359: FILE: drivers/net/wan/retina.h:148:
+ * what is the maximum internal unit size in FEPCI */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '__card' may be better as '(__card)' to avoid precedence issues
#5360: FILE: drivers/net/wan/retina.h:149:
+#define USER_RX_S_FAKE_POINTER(__card, __channel, __offset) \
+((u32 *)(((__card << CARD_POINTER_SHIFT) | \
+(__channel << CHANNEL_POINTER_SHIFT) | 0x0) + __offset))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '__channel' may be better as '(__channel)' to avoid precedence issues
#5360: FILE: drivers/net/wan/retina.h:149:
+#define USER_RX_S_FAKE_POINTER(__card, __channel, __offset) \
+((u32 *)(((__card << CARD_POINTER_SHIFT) | \
+(__channel << CHANNEL_POINTER_SHIFT) | 0x0) + __offset))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '__offset' may be better as '(__offset)' to avoid precedence issues
#5360: FILE: drivers/net/wan/retina.h:149:
+#define USER_RX_S_FAKE_POINTER(__card, __channel, __offset) \
+((u32 *)(((__card << CARD_POINTER_SHIFT) | \
+(__channel << CHANNEL_POINTER_SHIFT) | 0x0) + __offset))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '__card' may be better as '(__card)' to avoid precedence issues
#5363: FILE: drivers/net/wan/retina.h:152:
+#define USER_TX_S_FAKE_POINTER(__card, __channel, __offset) \
+((u32 *)(((__card << CARD_POINTER_SHIFT) | \
+(__channel << CHANNEL_POINTER_SHIFT) | 0x4) + __offset))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '__channel' may be better as '(__channel)' to avoid precedence issues
#5363: FILE: drivers/net/wan/retina.h:152:
+#define USER_TX_S_FAKE_POINTER(__card, __channel, __offset) \
+((u32 *)(((__card << CARD_POINTER_SHIFT) | \
+(__channel << CHANNEL_POINTER_SHIFT) | 0x4) + __offset))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '__offset' may be better as '(__offset)' to avoid precedence issues
#5363: FILE: drivers/net/wan/retina.h:152:
+#define USER_TX_S_FAKE_POINTER(__card, __channel, __offset) \
+((u32 *)(((__card << CARD_POINTER_SHIFT) | \
+(__channel << CHANNEL_POINTER_SHIFT) | 0x4) + __offset))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '__card' may be better as '(__card)' to avoid precedence issues
#5367: FILE: drivers/net/wan/retina.h:156:
+#define USER_RX_S_POINTER(__card, __channel, __offset) \
+((u32 *)(((__card << CARD_POINTER_SHIFT) | \
+(__channel << CHANNEL_POINTER_SHIFT) | 0x8) + __offset))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '__channel' may be better as '(__channel)' to avoid precedence issues
#5367: FILE: drivers/net/wan/retina.h:156:
+#define USER_RX_S_POINTER(__card, __channel, __offset) \
+((u32 *)(((__card << CARD_POINTER_SHIFT) | \
+(__channel << CHANNEL_POINTER_SHIFT) | 0x8) + __offset))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '__offset' may be better as '(__offset)' to avoid precedence issues
#5367: FILE: drivers/net/wan/retina.h:156:
+#define USER_RX_S_POINTER(__card, __channel, __offset) \
+((u32 *)(((__card << CARD_POINTER_SHIFT) | \
+(__channel << CHANNEL_POINTER_SHIFT) | 0x8) + __offset))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '__card' may be better as '(__card)' to avoid precedence issues
#5370: FILE: drivers/net/wan/retina.h:159:
+#define USER_TX_S_POINTER(__card, __channel, __offset) \
+((u32 *)(((__card << CARD_POINTER_SHIFT) | \
+(__channel << CHANNEL_POINTER_SHIFT) | 0xC) + __offset))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '__channel' may be better as '(__channel)' to avoid precedence issues
#5370: FILE: drivers/net/wan/retina.h:159:
+#define USER_TX_S_POINTER(__card, __channel, __offset) \
+((u32 *)(((__card << CARD_POINTER_SHIFT) | \
+(__channel << CHANNEL_POINTER_SHIFT) | 0xC) + __offset))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '__offset' may be better as '(__offset)' to avoid precedence issues
#5370: FILE: drivers/net/wan/retina.h:159:
+#define USER_TX_S_POINTER(__card, __channel, __offset) \
+((u32 *)(((__card << CARD_POINTER_SHIFT) | \
+(__channel << CHANNEL_POINTER_SHIFT) | 0xC) + __offset))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000262386.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 168 warnings, 158 checks, 4981 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000262386.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
