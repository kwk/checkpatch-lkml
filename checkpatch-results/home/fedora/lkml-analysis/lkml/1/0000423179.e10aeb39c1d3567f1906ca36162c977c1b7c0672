WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#46: FILE: fs/logfs/gc.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#47: FILE: fs/logfs/gc.c:2:
+ * fs/logfs/gc.c	- garbage collection code

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#55: FILE: fs/logfs/gc.c:10:
+#if 0

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#89: FILE: fs/logfs/gc.c:44:
+	if (t >= 32*theta)
 	           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#92: FILE: fs/logfs/gc.c:47:
+	shift = t/theta;
 	         ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#93: FILE: fs/logfs/gc.c:48:
+	fac = theta - (t%theta)/2;
 	                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#93: FILE: fs/logfs/gc.c:48:
+	fac = theta - (t%theta)/2;
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#115: FILE: fs/logfs/gc.c:70:
+	for (i=0; i<LOGFS_NO_AREAS; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#115: FILE: fs/logfs/gc.c:70:
+	for (i=0; i<LOGFS_NO_AREAS; i++) {
 	           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#117: FILE: fs/logfs/gc.c:72:
+		struct logfs_area *area = super->s_area[i];
+		if (area->a_is_open && (area->a_segno == segno)) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'area->a_segno == segno'
#117: FILE: fs/logfs/gc.c:72:
+		if (area->a_is_open && (area->a_segno == segno)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BRACES: braces {} are not necessary for single statement blocks
#117: FILE: fs/logfs/gc.c:72:
+		if (area->a_is_open && (area->a_segno == segno)) {
+			return super->s_segsize;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#123: FILE: fs/logfs/gc.c:78:
+	BUG_ON(err);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#130: FILE: fs/logfs/gc.c:85:
+		BUG_ON(err);

WARNING:UNNECESSARY_KERN_LEVEL: Possible unnecessary KERN_INFO
#142: FILE: fs/logfs/gc.c:97:
+	pr_debug(KERN_INFO "LOGFS valid(%x) = %x\n", segno, valid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#147: FILE: fs/logfs/gc.c:102:
+static void logfs_cleanse_block(struct super_block *sb, u64 ofs, u64 ino,
+		u64 pos, int level)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#153: FILE: fs/logfs/gc.c:108:
+	BUG_ON(!inode);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#155: FILE: fs/logfs/gc.c:110:
+	BUG_ON(err);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#169: FILE: fs/logfs/gc.c:124:
+	BUG_ON(err);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#170: FILE: fs/logfs/gc.c:125:
+	sh = (void*)&h;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#176: FILE: fs/logfs/gc.c:131:
+		BUG_ON(err);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#197: FILE: fs/logfs/gc.c:152:
+	for (i=0; i<LOGFS_NO_AREAS; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#197: FILE: fs/logfs/gc.c:152:
+	for (i=0; i<LOGFS_NO_AREAS; i++) {
 	           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#199: FILE: fs/logfs/gc.c:154:
+		struct logfs_area *area = super->s_area[i];
+		BUG_ON(area->a_is_open && (area->a_segno == segno));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#199: FILE: fs/logfs/gc.c:154:
+		BUG_ON(area->a_is_open && (area->a_segno == segno));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: fs/logfs/gc.c:160:
+static void __add_segment(struct list_head *list, int *count, u32 segno,
+		int valid)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#220: FILE: fs/logfs/gc.c:175:
+static void add_segment(struct list_head *list, int *count, u32 segno,
+		int valid)

WARNING:LINE_SPACING: Missing a blank line after declarations
#246: FILE: fs/logfs/gc.c:201:
+	struct logfs_super *super = logfs_super(sb);
+	add_segment(&super->s_free_list, &super->s_free_count, segno, 0);

WARNING:LINE_SPACING: Missing a blank line after declarations
#252: FILE: fs/logfs/gc.c:207:
+	struct logfs_super *super = logfs_super(sb);
+	add_segment(&super->s_low_list, &super->s_low_count, segno, valid);

WARNING:LINE_SPACING: Missing a blank line after declarations
#258: FILE: fs/logfs/gc.c:213:
+	struct logfs_super *super = logfs_super(sb);
+	del_segment(&super->s_low_list, &super->s_low_count, segno);

CHECK:BRACES: braces {} should be used on all arms of this statement
#268: FILE: fs/logfs/gc.c:223:
+	if (valid == 0) {
[...]
+	} else if (valid < full)
[...]

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#280: FILE: fs/logfs/gc.c:235:
+	for (i = super->s_sweeper+1; i != super->s_sweeper; i++) {
 	                         ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#298: FILE: fs/logfs/gc.c:253:
+	unsigned min_valid = super->s_segsize;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#301: FILE: fs/logfs/gc.c:256:
+	BUG_ON(list_empty(&super->s_low_list));

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#321: FILE: fs/logfs/gc.c:276:
+ * If we made enough room, return */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#361: FILE: fs/logfs/gc.c:316:
+	for (i=4; i; i--) {
 	      ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000423179.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 21 warnings, 10 checks, 352 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000423179.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
