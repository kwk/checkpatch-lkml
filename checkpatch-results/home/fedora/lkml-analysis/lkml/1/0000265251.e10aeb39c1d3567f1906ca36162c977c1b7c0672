WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
struct but this can then be changed if it turns out that when it all settles

ERROR:TRAILING_WHITESPACE: trailing whitespace
#138: FILE: drivers/char/ip2/i2lib.c:871:
+^IpCh->pTTY->ldisc.ops->receive_buf( pCh->pTTY, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#138: FILE: drivers/char/ip2/i2lib.c:871:
+	pCh->pTTY->ldisc.ops->receive_buf( pCh->pTTY, 

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <pCh>
#138: FILE: drivers/char/ip2/i2lib.c:871:
+	pCh->pTTY->ldisc.ops->receive_buf( pCh->pTTY, 

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <pTTY>
#138: FILE: drivers/char/ip2/i2lib.c:871:
+	pCh->pTTY->ldisc.ops->receive_buf( pCh->pTTY, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: drivers/char/ip2/i2lib.c:875:
+^I^IpCh->pTTY->ldisc.ops->receive_buf( pCh->pTTY, $

ERROR:SPACING: space prohibited after that open parenthesis '('
#143: FILE: drivers/char/ip2/i2lib.c:875:
+		pCh->pTTY->ldisc.ops->receive_buf( pCh->pTTY, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: drivers/char/ip2/ip2main.c:1270:
+^I^Iif ( tty->ldisc.ops->flush_buffer )  $

ERROR:SPACING: space prohibited after that open parenthesis '('
#161: FILE: drivers/char/ip2/ip2main.c:1270:
+		if ( tty->ldisc.ops->flush_buffer )  

ERROR:SPACING: space prohibited before that close parenthesis ')'
#161: FILE: drivers/char/ip2/ip2main.c:1270:
+		if ( tty->ldisc.ops->flush_buffer )  

ERROR:SPACING: space prohibited after that open parenthesis '('
#171: FILE: drivers/char/ip2/ip2main.c:1320:
+		pCh->pTTY->ldisc->ops.receive_buf( pCh->pTTY, &brkc, &brkf, 1 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#171: FILE: drivers/char/ip2/ip2main.c:1320:
+		pCh->pTTY->ldisc->ops.receive_buf( pCh->pTTY, &brkc, &brkf, 1 );

CHECK:LINE_SPACING: Please don't use multiple blank lines
#400: FILE: drivers/char/tty_io.c:750:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#416: FILE: drivers/char/tty_io.c:766:
+^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#423: FILE: drivers/char/tty_io.c:773:
+		if (!try_module_get(ldops->owner))
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#425: FILE: drivers/char/tty_io.c:775:
+		else {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#508: FILE: drivers/char/tty_io.c:840:
+static void * tty_ldiscs_seq_start(struct seq_file *m, loff_t *pos)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#513: FILE: drivers/char/tty_io.c:845:
+static void * tty_ldiscs_seq_next(struct seq_file *m, void *v, loff_t *pos)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#527: FILE: drivers/char/tty_io.c:859:
+^I$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 32)
#597: FILE: drivers/char/tty_io.c:1053:
+				if (r < 0)
+				panic("Couldn't open N_TTY ldisc for "

WARNING:SPLIT_STRING: quoted string split across lines
#599: FILE: drivers/char/tty_io.c:1055:
+				panic("Couldn't open N_TTY ldisc for "
+				      "%s --- error %d.",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#638: FILE: drivers/char/tty_io.c:1083:
+	/* This is a bit ugly for now but means we can break the 'ldisc
+	   is part of the tty struct' assumption later */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#638: FILE: drivers/char/tty_io.c:1083:
+	   is part of the tty struct' assumption later */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#690: FILE: drivers/char/tty_io.c:1159:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (o_ldisc.ops->close)
#705: FILE: drivers/char/tty_io.c:1174:
+		(o_ldisc.ops->close)(tty);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (new_ldisc.ops->open)
#714: FILE: drivers/char/tty_io.c:1180:
+		retval = (new_ldisc.ops->open)(tty);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (ld->ops->read)
#809: FILE: drivers/char/tty_io.c:1910:
+		i = (ld->ops->read)(tty, file, buf, count);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#838: FILE: drivers/char/tty_io.c:2309:
+^I $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (ld->ops->open)
#844: FILE: drivers/char/tty_io.c:2313:
+		retval = (ld->ops->open)(tty);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (o_tty->ldisc.ops->open)
#851: FILE: drivers/char/tty_io.c:2318:
+		retval = (o_tty->ldisc.ops->open)(o_tty);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (ld->ops->close)
#856: FILE: drivers/char/tty_io.c:2321:
+				(ld->ops->close)(tty);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (tty->ldisc.ops->close)
#880: FILE: drivers/char/tty_io.c:2703:
+		(tty->ldisc.ops->close)(tty);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (o_tty->ldisc.ops->close)
#898: FILE: drivers/char/tty_io.c:2716:
+			(o_tty->ldisc.ops->close)(o_tty);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#912: FILE: drivers/char/tty_io.c:2966:
+		ret = (ld->ops->poll)(tty, filp, wait);
 		                           ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (ld->ops->poll)
#912: FILE: drivers/char/tty_io.c:2966:
+		ret = (ld->ops->poll)(tty, filp, wait);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (ld->ops->set_termios)
#991: FILE: drivers/char/tty_ioctl.c:495:
+			(ld->ops->set_termios)(tty, &old_termios);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ld->ops->receive_buf"
#1045: FILE: drivers/isdn/capi/capi.c:468:
+	if (ld->ops->receive_buf == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#1158: FILE: drivers/net/wan/pc300_tty.c:691:
+						if (ld->ops->receive_buf) {

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#1161: FILE: drivers/net/wan/pc300_tty.c:693:
+							ld->ops->receive_buf(cpc_tty->tty, (char *)(buf->data), &flags, buf->size);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1267: FILE: include/linux/tty.h:293:
+extern int tty_register_ldisc(int disc, struct tty_ldisc_ops *new_ldisc);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000265251.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 15 errors, 8 warnings, 17 checks, 1098 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000265251.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
