WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
> >>> The patch below fixes the problem with MSI-X vectors allocation by the PCIe

WARNING:TYPO_SPELLING: 'entires' may be misspelled - perhaps 'entries'?
#136: FILE: drivers/pci/pcie/portdrv_core.c:52:
+	 * the MSI-X table entires used by port services must not exceed 31
 	                   ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*msix_entries)...) over kzalloc(sizeof(struct msix_entry)...)
#141: FILE: drivers/pci/pcie/portdrv_core.c:57:
+	msix_entries = kzalloc(sizeof(struct msix_entry) * nr_entries,

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#141: FILE: drivers/pci/pcie/portdrv_core.c:57:
+	msix_entries = kzalloc(sizeof(struct msix_entry) * nr_entries,
+				GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#142: FILE: drivers/pci/pcie/portdrv_core.c:58:
+	msix_entries = kzalloc(sizeof(struct msix_entry) * nr_entries,
+				GFP_KERNEL);

CHECK:CAMELCASE: Avoid CamelCase: <Exit>
#156: FILE: drivers/pci/pcie/portdrv_core.c:72:
+		goto Exit;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Error>
#172: FILE: drivers/pci/pcie/portdrv_core.c:88:
+		goto Error;

CHECK:CAMELCASE: Avoid CamelCase: <Fallback>
#222: FILE: drivers/pci/pcie/portdrv_core.c:140:
+		goto Fallback;

CHECK:BIT_MACRO: Prefer using the BIT macro
#297: FILE: include/linux/pcieport_if.h:20:
+#define PCIE_PORT_SERVICE_PME		(1 << PCIE_PORT_SERVICE_PME_SHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#299: FILE: include/linux/pcieport_if.h:22:
+#define PCIE_PORT_SERVICE_AER		(1 << PCIE_PORT_SERVICE_AER_SHIFT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#301: FILE: include/linux/pcieport_if.h:24:
+#define PCIE_PORT_SERVICE_HP		(1 << PCIE_PORT_SERVICE_HP_SHIFT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#303: FILE: include/linux/pcieport_if.h:26:
+#define PCIE_PORT_SERVICE_VC		(1 << PCIE_PORT_SERVICE_VC_SHIFT)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#388: FILE: include/linux/pci.h:830:
+extern int pci_msix_table_size(struct pci_dev *dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000179316.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 10 checks, 253 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000179316.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
