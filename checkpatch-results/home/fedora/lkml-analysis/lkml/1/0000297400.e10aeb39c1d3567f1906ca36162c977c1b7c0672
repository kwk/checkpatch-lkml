WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
Don't make smp_{r,w,}mb() interpolate a MEMBAR instruction when CONFIG_SMP=n as

WARNING:MEMORY_BARRIER: memory barrier without comment
#64: FILE: include/asm-frv/system.h:185:
+#define smp_mb()			mb()

WARNING:MEMORY_BARRIER: memory barrier without comment
#65: FILE: include/asm-frv/system.h:186:
+#define smp_rmb()			rmb()

WARNING:MEMORY_BARRIER: memory barrier without comment
#66: FILE: include/asm-frv/system.h:187:
+#define smp_wmb()			wmb()

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'var' may be better as '(var)' to avoid precedence issues
#68: FILE: include/asm-frv/system.h:189:
+#define set_mb(var, value) \
+	do { xchg(&var, (value)); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#68: FILE: include/asm-frv/system.h:189:
+#define set_mb(var, value) \
+	do { xchg(&var, (value)); } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:MEMORY_BARRIER: memory barrier without comment
#71: FILE: include/asm-frv/system.h:192:
+#define smp_mb()			barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#72: FILE: include/asm-frv/system.h:193:
+#define smp_rmb()			barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#73: FILE: include/asm-frv/system.h:194:
+#define smp_wmb()			barrier()

ERROR:SPACING: space required before the open parenthesis '('
#74: FILE: include/asm-frv/system.h:195:
+#define smp_read_barrier_depends()	do {} while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000297400.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 8 warnings, 1 checks, 29 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000297400.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
