CHECK:SPACING: No space is necessary after a cast
#74: FILE: drivers/scsi/hpsa.c:1541:
+			lunid = le32_to_cpu(*((__le32 *) lunaddrbytes));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#82: FILE: drivers/scsi/hpsa.c:1547:
+			lunid = le32_to_cpu(*((__le32 *) lunaddrbytes));

CHECK:BRACES: braces {} should be used on all arms of this statement
#102: FILE: drivers/scsi/hpsa.c:1566:
+			if (unlikely(is_scsi_rev_5(h))) {
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#107: FILE: drivers/scsi/hpsa.c:1571:
+				return;
+			} else

CHECK:BRACES: Unbalanced braces around else statement
#107: FILE: drivers/scsi/hpsa.c:1571:
+			} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#130: FILE: drivers/scsi/hpsa.c:1681:
+u8 *figure_lunaddrbytes(struct ctlr_info *h, int raid_ctlr_position, int i,
+	int nphysicals, int nlogicals, struct ReportLUNdata *physdev_list,

CHECK:CAMELCASE: Avoid CamelCase: <ReportLUNdata>
#130: FILE: drivers/scsi/hpsa.c:1681:
+	int nphysicals, int nlogicals, struct ReportLUNdata *physdev_list,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#150: FILE: drivers/scsi/hpsa.c:1701:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#190: FILE: drivers/scsi/hpsa.c:1778:
+		lunaddrbytes = figure_lunaddrbytes(h, raid_ctlr_position,
+			i, nphysicals, nlogicals, physdev_list, logdev_list);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'raid_ctlr_position == 0'
#193: FILE: drivers/scsi/hpsa.c:1780:
+		if (lunaddrbytes[3] & 0xC0 &&
+			i < nphysicals + (raid_ctlr_position == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#194: FILE: drivers/scsi/hpsa.c:1781:
+		if (lunaddrbytes[3] & 0xC0 &&
+			i < nphysicals + (raid_ctlr_position == 0))

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#202: FILE: drivers/scsi/hpsa.c:3411:
+static void __devinit hpsa_hba_inquiry(struct ctlr_info *h)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: drivers/scsi/hpsa.c:3420:
+	rc = hpsa_scsi_do_inquiry(h, RAID_CTLR_LUNID, 0,
+		h->hba_inquiry_data, HBA_INQUIRY_BYTE_COUNT);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#218: FILE: drivers/scsi/hpsa.c:3427:
 static int __devinit hpsa_init_one(struct pci_dev *pdev,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000015490.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 10 checks, 191 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000015490.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
