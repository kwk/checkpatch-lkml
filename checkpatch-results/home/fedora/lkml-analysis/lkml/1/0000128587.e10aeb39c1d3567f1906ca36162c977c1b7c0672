WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#47: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#52: FILE: drivers/edac/amd64_edac_inj.c:1:
+#include "amd64_edac.h"

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#63: FILE: drivers/edac/amd64_edac_inj.c:12:
+static ssize_t amd64_inject_section_store(struct mem_ctl_info *mci,
+					const char *data, size_t count)

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#69: FILE: drivers/edac/amd64_edac_inj.c:18:
+	rc = strict_strtoul(data, 10, &value);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#71: FILE: drivers/edac/amd64_edac_inj.c:20:
+	if (rc != -EINVAL) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#73: FILE: drivers/edac/amd64_edac_inj.c:22:
+		pvt->injection.section = (u32) value;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#89: FILE: drivers/edac/amd64_edac_inj.c:38:
+static ssize_t amd64_inject_word_store(struct mem_ctl_info *mci,
+					const char *data, size_t count)

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#95: FILE: drivers/edac/amd64_edac_inj.c:44:
+	rc = strict_strtoul(data, 10, &value);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#97: FILE: drivers/edac/amd64_edac_inj.c:46:
+	if (rc != -EINVAL) {
+

CHECK:SPACING: No space is necessary after a cast
#100: FILE: drivers/edac/amd64_edac_inj.c:49:
+		pvt->injection.word = (u32) value;

WARNING:TYPO_SPELLING: 'hexidecimal' may be misspelled - perhaps 'hexadecimal'?
#110: FILE: drivers/edac/amd64_edac_inj.c:59:
+ *	accept and store error injection hexidecimal bit value
   	                                 ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: drivers/edac/amd64_edac_inj.c:63:
+static ssize_t amd64_inject_bit_store(struct mem_ctl_info *mci,
+					const char *data, size_t count)

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#120: FILE: drivers/edac/amd64_edac_inj.c:69:
+	rc = strict_strtoul(data, 16, &value);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#122: FILE: drivers/edac/amd64_edac_inj.c:71:
+	if (rc != -EINVAL) {
+

CHECK:SPACING: No space is necessary after a cast
#124: FILE: drivers/edac/amd64_edac_inj.c:73:
+		pvt->injection.bit_map = (u32) value & 0xFFFF;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#139: FILE: drivers/edac/amd64_edac_inj.c:88:
+static ssize_t amd64_inject_read_store(struct mem_ctl_info *mci,
+					const char *data, size_t count)

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#146: FILE: drivers/edac/amd64_edac_inj.c:95:
+	rc = strict_strtoul(data, 10, &value);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#148: FILE: drivers/edac/amd64_edac_inj.c:97:
+	if (rc != -EINVAL) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: drivers/edac/amd64_edac_inj.c:102:
+		pci_write_config_dword(pvt->misc_f3_ctl,
+					F10_NB_ARRAY_ADDR, section);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#156: FILE: drivers/edac/amd64_edac_inj.c:105:
+		word_bits = SET_NB_DRAM_INJECTION_READ(pvt->injection.word,
+						pvt->injection.bit_map);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#160: FILE: drivers/edac/amd64_edac_inj.c:109:
+		pci_write_config_dword(pvt->misc_f3_ctl,
+					F10_NB_ARRAY_DATA, word_bits);

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#185: FILE: drivers/edac/amd64_edac_inj.c:134:
+	rc = strict_strtoul(data, 10, &value);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#187: FILE: drivers/edac/amd64_edac_inj.c:136:
+	if (rc != -EINVAL) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#192: FILE: drivers/edac/amd64_edac_inj.c:141:
+		pci_write_config_dword(pvt->misc_f3_ctl,
+					F10_NB_ARRAY_ADDR, section);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: drivers/edac/amd64_edac_inj.c:144:
+		word_bits = SET_NB_DRAM_INJECTION_WRITE(pvt->injection.word,
+						pvt->injection.bit_map);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#199: FILE: drivers/edac/amd64_edac_inj.c:148:
+		pci_write_config_dword(pvt->misc_f3_ctl,
+					F10_NB_ARRAY_DATA, word_bits);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#210: FILE: drivers/edac/amd64_edac_inj.c:159:
+struct mcidev_sysfs_attribute amd64_inj_attrs[] = {
+

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#214: FILE: drivers/edac/amd64_edac_inj.c:163:
+			.mode = (S_IRUGO | S_IWUSR)

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#222: FILE: drivers/edac/amd64_edac_inj.c:171:
+			.mode = (S_IRUGO | S_IWUSR)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#230: FILE: drivers/edac/amd64_edac_inj.c:179:
+			.mode = (S_IRUGO | S_IWUSR)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#238: FILE: drivers/edac/amd64_edac_inj.c:187:
+			.mode = (S_IRUGO | S_IWUSR)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#246: FILE: drivers/edac/amd64_edac_inj.c:195:
+			.mode = (S_IRUGO | S_IWUSR)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000128587.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 13 warnings, 19 checks, 200 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000128587.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
