CHECK:SPACING: No space is necessary after a cast
#99: FILE: block/cfq-iosched.c:37:
+#define RQ_CFQQ(rq)	(struct cfq_queue *) (ioq_sched_queue((rq)->ioq))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#99: FILE: block/cfq-iosched.c:37:
+#define RQ_CFQQ(rq)	(struct cfq_queue *) (ioq_sched_queue((rq)->ioq))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rbprev"
#364: FILE: block/cfq-iosched.c:323:
+	if (rbprev != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rbnext"
#368: FILE: block/cfq-iosched.c:326:
+	if (rbnext != NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#520: FILE: block/cfq-iosched.c:416:
+static void cfq_active_ioq_set(struct request_queue *q, void *sched_queue,
+				int coop)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#722: FILE: block/cfq-iosched.c:694:
+static struct io_queue *cfq_close_cooperator(struct request_queue *q,
+					      void *cur_sched_queue,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#905: FILE: block/cfq-iosched.c:836:
+	 * that all the busy queues have expired */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#909: FILE: block/cfq-iosched.c:839:
+	BUG_ON(elv_nr_busy_ioq(cfqd->queue->elevator));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#965: FILE: block/cfq-iosched.c:936:
+	if (elv_nr_busy_ioq(q->elevator) > 1 && ((!cfq_cfqq_sync(cfqq) &&
 	    cfqq->slice_dispatch >= cfq_prio_to_maxrq(cfqd, cfqq)) ||

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#992: FILE: block/cfq-iosched.c:950:
+	BUG_ON(!cfqq);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1167: FILE: block/cfq-iosched.c:1276:
+			new_ioq = elv_alloc_ioq(q,
+					gfp_mask | __GFP_NOFAIL | __GFP_ZERO);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1195: FILE: block/cfq-iosched.c:1301:
+		elv_init_ioq(q->elevator, ioq, cfqq, cfqq->org_ioprio_class,
+				cfqq->org_ioprio, is_sync);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1249: FILE: block/cfq-iosched.c:1335:
+		async_cfqq = io_group_async_queue_prio(iog, ioprio_class,
+								ioprio);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1346: FILE: block/cfq-iosched.c:1533:
+cfq_update_idle_window(struct elevator_queue *eq, void *cfqq,
+					struct request *rq)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1626: FILE: block/cfq-iosched.c:1679:
+	if ((elv_ioq_wait_request(cfqq->ioq) ||
+	   cfq_cfqq_must_alloc(cfqq)) && !cfq_cfqq_must_alloc_slice(cfqq)) {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1856: FILE: block/cfq-iosched.c:1965:
+^I^I.elevator_active_ioq_set_fn = ^Icfq_active_ioq_set,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1858: FILE: block/cfq-iosched.c:1967:
+^I^I.elevator_arm_slice_timer_fn = ^Icfq_arm_slice_timer,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1859: FILE: block/cfq-iosched.c:1968:
+^I^I.elevator_should_preempt_fn = ^Icfq_should_preempt,$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000107438.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 6 warnings, 11 checks, 1776 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000107438.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
