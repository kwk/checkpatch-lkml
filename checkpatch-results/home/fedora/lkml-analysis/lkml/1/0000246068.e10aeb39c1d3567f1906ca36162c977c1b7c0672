WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#69: FILE: security/integrity/ima/ima_policy.c:46:
+#define IMA_FUNC ^I0x0001$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#70: FILE: security/integrity/ima/ima_policy.c:47:
+#define IMA_MASK ^I0x0002$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#86: FILE: security/integrity/ima/ima_policy.c:55:
+	{.action = DONT_MEASURE,.fsmagic = PROC_SUPER_MAGIC,
 	                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#88: FILE: security/integrity/ima/ima_policy.c:57:
+	{.action = DONT_MEASURE,.fsmagic = SYSFS_MAGIC,.flags = IMA_FSMAGIC},
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#88: FILE: security/integrity/ima/ima_policy.c:57:
+	{.action = DONT_MEASURE,.fsmagic = SYSFS_MAGIC,.flags = IMA_FSMAGIC},
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#89: FILE: security/integrity/ima/ima_policy.c:58:
+	{.action = DONT_MEASURE,.fsmagic = DEBUGFS_MAGIC,.flags = IMA_FSMAGIC},
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#89: FILE: security/integrity/ima/ima_policy.c:58:
+	{.action = DONT_MEASURE,.fsmagic = DEBUGFS_MAGIC,.flags = IMA_FSMAGIC},
 	                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#90: FILE: security/integrity/ima/ima_policy.c:59:
+	{.action = DONT_MEASURE,.fsmagic = TMPFS_MAGIC,.flags = IMA_FSMAGIC},
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#90: FILE: security/integrity/ima/ima_policy.c:59:
+	{.action = DONT_MEASURE,.fsmagic = TMPFS_MAGIC,.flags = IMA_FSMAGIC},
 	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#91: FILE: security/integrity/ima/ima_policy.c:60:
+	{.action = DONT_MEASURE,.fsmagic = SECURITYFS_MAGIC,
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#93: FILE: security/integrity/ima/ima_policy.c:62:
+	{.action = MEASURE,.func = FILE_MMAP,.mask = MAY_EXEC,
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#93: FILE: security/integrity/ima/ima_policy.c:62:
+	{.action = MEASURE,.func = FILE_MMAP,.mask = MAY_EXEC,
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#95: FILE: security/integrity/ima/ima_policy.c:64:
+	{.action = MEASURE,.func = BPRM_CHECK,.mask = MAY_EXEC,
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#95: FILE: security/integrity/ima/ima_policy.c:64:
+	{.action = MEASURE,.func = BPRM_CHECK,.mask = MAY_EXEC,
 	                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#97: FILE: security/integrity/ima/ima_policy.c:66:
+	{.action = MEASURE,.func = INODE_PERMISSION,.mask = MAY_READ,.uid = 0,
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#97: FILE: security/integrity/ima/ima_policy.c:66:
+	{.action = MEASURE,.func = INODE_PERMISSION,.mask = MAY_READ,.uid = 0,
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#97: FILE: security/integrity/ima/ima_policy.c:66:
+	{.action = MEASURE,.func = INODE_PERMISSION,.mask = MAY_READ,.uid = 0,
 	                                                            ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#120: FILE: security/integrity/ima/ima_policy.c:96:
+	if ((rule->flags & IMA_FSMAGIC)
+	    && rule->fsmagic != inode->i_sb->s_magic)

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#290: FILE: security/integrity/ima/ima_policy.c:313:
+		rc = strict_strtoul(uid, 10, &lnum);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:BRACES: Unbalanced braces around else statement
#293: FILE: security/integrity/ima/ima_policy.c:316:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#294: FILE: security/integrity/ima/ima_policy.c:317:
+			entry->uid = (uid_t) lnum;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#379: FILE: security/integrity/ima/ima.h:81:
+int ima_add_rule(int, char *subj_user, char *subj_role, char *subj_type,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000246068.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 15 errors, 4 warnings, 3 checks, 373 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000246068.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
