WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
I send a patch to the UTF-8 part of the vt driver. I know that this code has

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: drivers/char/vt.c:1952:
+  int first;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: drivers/char/vt.c:1953:
+  int last;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#166: FILE: drivers/char/vt.c:1956:
+static int bisearch(long ucs, const struct interval *table, int max) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: drivers/char/vt.c:1957:
+  int min = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: drivers/char/vt.c:1958:
+  int mid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: drivers/char/vt.c:1960:
+  if (ucs < table[0].first || ucs > table[max].last)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#170: FILE: drivers/char/vt.c:1960:
+  if (ucs < table[0].first || ucs > table[max].last)
+    return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: drivers/char/vt.c:1961:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: drivers/char/vt.c:1962:
+  while (max >= min) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#172: FILE: drivers/char/vt.c:1962:
+  while (max >= min) {
+    mid = (min + max) / 2;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: drivers/char/vt.c:1963:
+    mid = (min + max) / 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: drivers/char/vt.c:1964:
+    if (ucs > table[mid].last)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#174: FILE: drivers/char/vt.c:1964:
+    if (ucs > table[mid].last)
+      min = mid + 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: drivers/char/vt.c:1965:
+      min = mid + 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: drivers/char/vt.c:1966:
+    else if (ucs < table[mid].first)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#176: FILE: drivers/char/vt.c:1966:
+    else if (ucs < table[mid].first)
+      max = mid - 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: drivers/char/vt.c:1967:
+      max = mid - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: drivers/char/vt.c:1968:
+    else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#178: FILE: drivers/char/vt.c:1968:
+    else
+      return 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: drivers/char/vt.c:1969:
+      return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: drivers/char/vt.c:1970:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: drivers/char/vt.c:1972:
+  return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: drivers/char/vt.c:1977:
+  static const struct interval unprintable[] = {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: drivers/char/vt.c:1978:
+    { 0xD800, 0xDFFF }, { 0xFFFE, 0xFFFF }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: drivers/char/vt.c:1979:
+  };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: drivers/char/vt.c:1980:
+  static const struct interval zero_width[] = {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: drivers/char/vt.c:1981:
+    { 0x0300, 0x0357 }, { 0x035D, 0x036F }, { 0x0483, 0x0486 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: drivers/char/vt.c:1982:
+    { 0x0488, 0x0489 }, { 0x0591, 0x05A1 }, { 0x05A3, 0x05B9 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: drivers/char/vt.c:1983:
+    { 0x05BB, 0x05BD }, { 0x05BF, 0x05BF }, { 0x05C1, 0x05C2 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: drivers/char/vt.c:1984:
+    { 0x05C4, 0x05C4 }, { 0x0600, 0x0603 }, { 0x0610, 0x0615 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: drivers/char/vt.c:1985:
+    { 0x064B, 0x0658 }, { 0x0670, 0x0670 }, { 0x06D6, 0x06E4 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: drivers/char/vt.c:1986:
+    { 0x06E7, 0x06E8 }, { 0x06EA, 0x06ED }, { 0x070F, 0x070F },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: drivers/char/vt.c:1987:
+    { 0x0711, 0x0711 }, { 0x0730, 0x074A }, { 0x07A6, 0x07B0 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: drivers/char/vt.c:1988:
+    { 0x0901, 0x0902 }, { 0x093C, 0x093C }, { 0x0941, 0x0948 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: drivers/char/vt.c:1989:
+    { 0x094D, 0x094D }, { 0x0951, 0x0954 }, { 0x0962, 0x0963 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: drivers/char/vt.c:1990:
+    { 0x0981, 0x0981 }, { 0x09BC, 0x09BC }, { 0x09C1, 0x09C4 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: drivers/char/vt.c:1991:
+    { 0x09CD, 0x09CD }, { 0x09E2, 0x09E3 }, { 0x0A01, 0x0A02 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: drivers/char/vt.c:1992:
+    { 0x0A3C, 0x0A3C }, { 0x0A41, 0x0A42 }, { 0x0A47, 0x0A48 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: drivers/char/vt.c:1993:
+    { 0x0A4B, 0x0A4D }, { 0x0A70, 0x0A71 }, { 0x0A81, 0x0A82 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: drivers/char/vt.c:1994:
+    { 0x0ABC, 0x0ABC }, { 0x0AC1, 0x0AC5 }, { 0x0AC7, 0x0AC8 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: drivers/char/vt.c:1995:
+    { 0x0ACD, 0x0ACD }, { 0x0AE2, 0x0AE3 }, { 0x0B01, 0x0B01 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: drivers/char/vt.c:1996:
+    { 0x0B3C, 0x0B3C }, { 0x0B3F, 0x0B3F }, { 0x0B41, 0x0B43 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: drivers/char/vt.c:1997:
+    { 0x0B4D, 0x0B4D }, { 0x0B56, 0x0B56 }, { 0x0B82, 0x0B82 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: drivers/char/vt.c:1998:
+    { 0x0BC0, 0x0BC0 }, { 0x0BCD, 0x0BCD }, { 0x0C3E, 0x0C40 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: drivers/char/vt.c:1999:
+    { 0x0C46, 0x0C48 }, { 0x0C4A, 0x0C4D }, { 0x0C55, 0x0C56 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: drivers/char/vt.c:2000:
+    { 0x0CBC, 0x0CBC }, { 0x0CBF, 0x0CBF }, { 0x0CC6, 0x0CC6 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: drivers/char/vt.c:2001:
+    { 0x0CCC, 0x0CCD }, { 0x0D41, 0x0D43 }, { 0x0D4D, 0x0D4D },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: drivers/char/vt.c:2002:
+    { 0x0DCA, 0x0DCA }, { 0x0DD2, 0x0DD4 }, { 0x0DD6, 0x0DD6 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: drivers/char/vt.c:2003:
+    { 0x0E31, 0x0E31 }, { 0x0E34, 0x0E3A }, { 0x0E47, 0x0E4E },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: drivers/char/vt.c:2004:
+    { 0x0EB1, 0x0EB1 }, { 0x0EB4, 0x0EB9 }, { 0x0EBB, 0x0EBC },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: drivers/char/vt.c:2005:
+    { 0x0EC8, 0x0ECD }, { 0x0F18, 0x0F19 }, { 0x0F35, 0x0F35 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: drivers/char/vt.c:2006:
+    { 0x0F37, 0x0F37 }, { 0x0F39, 0x0F39 }, { 0x0F71, 0x0F7E },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: drivers/char/vt.c:2007:
+    { 0x0F80, 0x0F84 }, { 0x0F86, 0x0F87 }, { 0x0F90, 0x0F97 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: drivers/char/vt.c:2008:
+    { 0x0F99, 0x0FBC }, { 0x0FC6, 0x0FC6 }, { 0x102D, 0x1030 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: drivers/char/vt.c:2009:
+    { 0x1032, 0x1032 }, { 0x1036, 0x1037 }, { 0x1039, 0x1039 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: drivers/char/vt.c:2010:
+    { 0x1058, 0x1059 }, { 0x1160, 0x11FF }, { 0x1712, 0x1714 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: drivers/char/vt.c:2011:
+    { 0x1732, 0x1734 }, { 0x1752, 0x1753 }, { 0x1772, 0x1773 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: drivers/char/vt.c:2012:
+    { 0x17B4, 0x17B5 }, { 0x17B7, 0x17BD }, { 0x17C6, 0x17C6 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: drivers/char/vt.c:2013:
+    { 0x17C9, 0x17D3 }, { 0x17DD, 0x17DD }, { 0x180B, 0x180D },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: drivers/char/vt.c:2014:
+    { 0x18A9, 0x18A9 }, { 0x1920, 0x1922 }, { 0x1927, 0x1928 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: drivers/char/vt.c:2015:
+    { 0x1932, 0x1932 }, { 0x1939, 0x193B }, { 0x200B, 0x200F },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: drivers/char/vt.c:2016:
+    { 0x202A, 0x202E }, { 0x2060, 0x2063 }, { 0x206A, 0x206F },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: drivers/char/vt.c:2017:
+    { 0x20D0, 0x20EA }, { 0x302A, 0x302F }, { 0x3099, 0x309A },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: drivers/char/vt.c:2018:
+    { 0xFB1E, 0xFB1E }, { 0xFE00, 0xFE0F }, { 0xFE20, 0xFE23 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: drivers/char/vt.c:2019:
+    { 0xFEFF, 0xFEFF }, { 0xFFF9, 0xFFFB }, { 0x1D167, 0x1D169 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: drivers/char/vt.c:2020:
+    { 0x1D173, 0x1D182 }, { 0x1D185, 0x1D18B }, { 0x1D1AA, 0x1D1AD },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: drivers/char/vt.c:2021:
+    { 0xE0001, 0xE0001 }, { 0xE0020, 0xE007F }, { 0xE0100, 0xE01EF }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: drivers/char/vt.c:2022:
+  };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: drivers/char/vt.c:2023:
+  static const struct interval double_width[] = {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: drivers/char/vt.c:2024:
+    { 0x1100, 0x115F }, { 0x2329, 0x232A }, { 0x2E80, 0x303E },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: drivers/char/vt.c:2025:
+    { 0x3040, 0xA4CF }, { 0xAC00, 0xD7A3 }, { 0xF900, 0xFAFF },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: drivers/char/vt.c:2026:
+    { 0xFE30, 0xFE6F }, { 0xFF00, 0xFF60 }, { 0xFFE0, 0xFFE6 },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: drivers/char/vt.c:2027:
+    { 0x20000, 0x2FFFD }, { 0x30000, 0x3FFFD }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: drivers/char/vt.c:2028:
+  };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: drivers/char/vt.c:2030:
+  if (ucs == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#240: FILE: drivers/char/vt.c:2030:
+  if (ucs == 0)
+    return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: drivers/char/vt.c:2031:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: drivers/char/vt.c:2032:
+  if (ucs < 0x20 || (ucs >= 0x7F && ucs < 0xA0))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#242: FILE: drivers/char/vt.c:2032:
+  if (ucs < 0x20 || (ucs >= 0x7F && ucs < 0xA0))
+    return -1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: drivers/char/vt.c:2033:
+    return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: drivers/char/vt.c:2034:
+  if (ucs < 0x0300)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#244: FILE: drivers/char/vt.c:2034:
+  if (ucs < 0x0300)
+    return 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: drivers/char/vt.c:2035:
+    return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: drivers/char/vt.c:2037:
+  if (bisearch(ucs, unprintable,$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#247: FILE: drivers/char/vt.c:2037:
+  if (bisearch(ucs, unprintable,
[...]
+    return -1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: drivers/char/vt.c:2039:
+    return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: drivers/char/vt.c:2040:
+  if (bisearch(ucs, zero_width,$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#250: FILE: drivers/char/vt.c:2040:
+  if (bisearch(ucs, zero_width,
[...]
+    return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: drivers/char/vt.c:2042:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: drivers/char/vt.c:2043:
+  if (bisearch(ucs, double_width,$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#253: FILE: drivers/char/vt.c:2043:
+  if (bisearch(ucs, double_width,
[...]
+    return 2;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: drivers/char/vt.c:2045:
+    return 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: drivers/char/vt.c:2047:
+  return 1;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#285: FILE: drivers/char/vt.c:2139:
 		} else if (vc->vc_utf && !vc->vc_disp_ctrl) {
[...]
+		    inverse = 0;

WARNING:TABSTOP: Statements should start on a tabstop
#295: FILE: drivers/char/vt.c:2146:
+		    if ((c & 0xc0) == 0x80) {

WARNING:LONG_LINE: line length of 140 exceeds 100 columns
#297: FILE: drivers/char/vt.c:2148:
+			static const int utf8_length_changes[] = { 0x0000007f, 0x000007ff, 0x0000ffff, 0x001fffff, 0x03ffffff, 0x7fffffff };

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#298: FILE: drivers/char/vt.c:2149:
 			if (vc->vc_utf_count) {
+			    vc->vc_utf_char = (vc->vc_utf_char << 6) | (c & 0x3f);

WARNING:TABSTOP: Statements should start on a tabstop
#329: FILE: drivers/char/vt.c:2152:
+			    if (--vc->vc_utf_count) {

WARNING:TABSTOP: Statements should start on a tabstop
#333: FILE: drivers/char/vt.c:2155:
+			    }

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#337: FILE: drivers/char/vt.c:2159:
+			    if (c <= utf8_length_changes[vc->vc_npar - 1] || c > utf8_length_changes[vc->vc_npar]) {

WARNING:TABSTOP: Statements should start on a tabstop
#337: FILE: drivers/char/vt.c:2159:
+			    if (c <= utf8_length_changes[vc->vc_npar - 1] || c > utf8_length_changes[vc->vc_npar]) {

WARNING:TABSTOP: Statements should start on a tabstop
#340: FILE: drivers/char/vt.c:2162:
+			    }

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#341: FILE: drivers/char/vt.c:2163:
+			} else {
[...]
+			    vc->vc_utf_count = 0;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#351: FILE: drivers/char/vt.c:2170:
+			if (vc->vc_utf_count) {
[...]
+			    rescan = 1;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#356: FILE: drivers/char/vt.c:2175:
+			} else if (c > 0x7f) {
[...]
+			    vc->vc_npar = 0;

WARNING:TABSTOP: Statements should start on a tabstop
#359: FILE: drivers/char/vt.c:2178:
+			    if ((c & 0xe0) == 0xc0) {

WARNING:TABSTOP: Statements should start on a tabstop
#362: FILE: drivers/char/vt.c:2181:
+			    } else if ((c & 0xf0) == 0xe0) {

WARNING:TABSTOP: Statements should start on a tabstop
#365: FILE: drivers/char/vt.c:2184:
+			    } else if ((c & 0xf8) == 0xf0) {

WARNING:TABSTOP: Statements should start on a tabstop
#368: FILE: drivers/char/vt.c:2187:
+			    } else if ((c & 0xfc) == 0xf8) {

WARNING:TABSTOP: Statements should start on a tabstop
#371: FILE: drivers/char/vt.c:2190:
+			    } else if ((c & 0xfe) == 0xfc) {

WARNING:TABSTOP: Statements should start on a tabstop
#374: FILE: drivers/char/vt.c:2193:
+			    } else {

WARNING:TABSTOP: Statements should start on a tabstop
#377: FILE: drivers/char/vt.c:2196:
+			    }

WARNING:TABSTOP: Statements should start on a tabstop
#378: FILE: drivers/char/vt.c:2197:
+			    if (vc->vc_utf_count) {

WARNING:TABSTOP: Statements should start on a tabstop
#381: FILE: drivers/char/vt.c:2200:
+			    }

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#401: FILE: drivers/char/vt.c:2234:
+					tc = c = 0xfffd;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 36)
#423: FILE: drivers/char/vt.c:2241:
+				if ( tc == -3 ) {
+				    continue; /* nothing to display */

ERROR:SPACING: space prohibited after that open parenthesis '('
#423: FILE: drivers/char/vt.c:2241:
+				if ( tc == -3 ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#423: FILE: drivers/char/vt.c:2241:
+				if ( tc == -3 ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#423: FILE: drivers/char/vt.c:2241:
+				if ( tc == -3 ) {
+				    continue; /* nothing to display */
+				}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TABSTOP: Statements should start on a tabstop
#424: FILE: drivers/char/vt.c:2242:
+				    continue; /* nothing to display */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 36)
#427: FILE: drivers/char/vt.c:2245:
+				if (!(vc->vc_utf && !vc->vc_disp_ctrl) && !(c & ~charmask)) {
[...]
+				    tc = c;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#429: FILE: drivers/char/vt.c:2247:
+				    /* In legacy mode use the glyph we get by a 1:1 mapping.
+				       This would make absolutely no sense with Unicode in mind. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#429: FILE: drivers/char/vt.c:2247:
+				       This would make absolutely no sense with Unicode in mind. */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 36)
#431: FILE: drivers/char/vt.c:2249:
+				} else {
[...]
+				    inverse = 1;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#433: FILE: drivers/char/vt.c:2251:
+				    /* Display an inverse dot,
+				       except for 0xfffd which is displayed as

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#434: FILE: drivers/char/vt.c:2252:
+				       an inverse question mark. */

WARNING:TABSTOP: Statements should start on a tabstop
#437: FILE: drivers/char/vt.c:2255:
+				    if (tc < 0) tc = (c == 0xfffd ? '?' : '.');

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#437: FILE: drivers/char/vt.c:2255:
+				    if (tc < 0) tc = (c == 0xfffd ? '?' : '.');

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#467: FILE: drivers/char/vt.c:2263:
+				if (!vc->vc_can_do_color) {
[...]
+				} else if (vc->vc_hi_font_mask == 0x100) {
[...]
+				} else {
[...]

WARNING:LONG_LINE: line length of 137 exceeds 100 columns
#470: FILE: drivers/char/vt.c:2266:
+					vc_attr = ((vc->vc_attr) & 0x11) | (((vc->vc_attr) & 0xe0) >> 4) | (((vc->vc_attr) & 0x0e) << 4);

WARNING:LONG_LINE: line length of 137 exceeds 100 columns
#472: FILE: drivers/char/vt.c:2268:
+					vc_attr = ((vc->vc_attr) & 0x88) | (((vc->vc_attr) & 0x70) >> 4) | (((vc->vc_attr) & 0x07) << 4);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#482: FILE: drivers/char/vt.c:2274:
+					FLUSH
+				if (vc->vc_need_wrap) {

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#491: FILE: drivers/char/vt.c:2282:
+					     ((vc_attr << 8) & ~himask) + ((tc & 0x100) ? himask : 0) + (tc & 0xff) :

CHECK:SPACING: No space is necessary after a cast
#493: FILE: drivers/char/vt.c:2284:
+					   (u16 *) vc->vc_pos);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#506: FILE: drivers/char/vt.c:2297:
+				if (!--width) break;

WARNING:LONG_LINE_COMMENT: line length of 107 exceeds 100 columns
#508: FILE: drivers/char/vt.c:2299:
+				tc = conv_uni_to_pc(vc, ' '); /* A space is printed in the second column */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#509: FILE: drivers/char/vt.c:2300:
+				if (tc < 0) tc = ' ';

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000447928.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 129 warnings, 2 checks, 386 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000447928.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
