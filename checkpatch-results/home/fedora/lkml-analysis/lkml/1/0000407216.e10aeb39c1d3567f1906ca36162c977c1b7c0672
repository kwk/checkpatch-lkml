WARNING:TYPO_SPELLING: 'formated' may be misspelled - perhaps 'formatted'?
#28: 
. retabed code that was inconsistently formated
                                       ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int*' should also have an identifier name
#99: FILE: arch/m68knommu/kernel/setup.c:46:
+void (*mach_gettod)(int*, int*, int*, int*, int*, int*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int*' should also have an identifier name
#99: FILE: arch/m68knommu/kernel/setup.c:46:
+void (*mach_gettod)(int*, int*, int*, int*, int*, int*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int*' should also have an identifier name
#99: FILE: arch/m68knommu/kernel/setup.c:46:
+void (*mach_gettod)(int*, int*, int*, int*, int*, int*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int*' should also have an identifier name
#99: FILE: arch/m68knommu/kernel/setup.c:46:
+void (*mach_gettod)(int*, int*, int*, int*, int*, int*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int*' should also have an identifier name
#99: FILE: arch/m68knommu/kernel/setup.c:46:
+void (*mach_gettod)(int*, int*, int*, int*, int*, int*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int*' should also have an identifier name
#99: FILE: arch/m68knommu/kernel/setup.c:46:
+void (*mach_gettod)(int*, int*, int*, int*, int*, int*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#100: FILE: arch/m68knommu/kernel/setup.c:47:
+int (*mach_set_clock_mmss)(unsigned long);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#149: FILE: arch/m68knommu/kernel/setup.c:188:
+	printk(KERN_DEBUG "MEMORY -> ROMFS=0x%06x-0x%06x MEM=0x%06x-0x%06x\n ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: arch/m68knommu/kernel/setup.c:189:
+	printk(KERN_DEBUG "MEMORY -> ROMFS=0x%06x-0x%06x MEM=0x%06x-0x%06x\n ",
 		(int) &_ebss, (int) memory_start,

CHECK:SPACING: No space is necessary after a cast
#154: FILE: arch/m68knommu/kernel/setup.c:190:
+		(int) memory_start, (int) memory_end);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000407216.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 2 checks, 168 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000407216.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
