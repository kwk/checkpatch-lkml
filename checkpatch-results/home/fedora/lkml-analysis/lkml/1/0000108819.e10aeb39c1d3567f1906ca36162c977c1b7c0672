CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#295: FILE: include/linux/percpu.h:84:
+extern ssize_t __init pcpu_lpage_first_chunk(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#295: FILE: include/linux/percpu.h:84:
+extern ssize_t __init pcpu_lpage_first_chunk(

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#302: FILE: include/linux/percpu.h:91:
+extern void *pcpu_lpage_remapped(void *kaddr);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#304: FILE: include/linux/percpu.h:93:
+static inline ssize_t __init pcpu_lpage_first_chunk(

WARNING:SPLIT_STRING: quoted string split across lines
#434: FILE: mm/percpu.c:1475:
+		pr_warning("PERCPU: static data is larger than large page, "
+			   "can't use large page\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#448: FILE: mm/percpu.c:1489:
+			pr_warning("PERCPU: failed to allocate large page "
+				   "for cpu%u\n", cpu);

WARNING:SPLIT_STRING: quoted string split across lines
#479: FILE: mm/percpu.c:1520:
+	pr_info("PERCPU: Remapped at %p with large pages, static data "
+		"%zu bytes\n", pcpul_vm.addr, static_size);

WARNING:LINE_SPACING: Missing a blank line after declarations
#490: FILE: mm/percpu.c:1531:
+				struct pcpul_ent tmp = pcpul_map[i];
+				pcpul_map[i] = pcpul_map[j];

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#536: FILE: mm/percpu.c:1577:
+		if (pcpul_map[pos].ptr < lpage_addr)
[...]
+		else if (pcpul_map[pos].ptr > lpage_addr)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#540: FILE: mm/percpu.c:1581:
+		else {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000108819.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 6 checks, 477 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000108819.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
