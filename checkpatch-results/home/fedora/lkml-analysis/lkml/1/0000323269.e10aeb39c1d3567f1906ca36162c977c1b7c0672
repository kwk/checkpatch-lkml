CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#69: FILE: include/linux/aio.h:209:
+extern ssize_t wait_on_sync_kiocb(struct kiocb *iocb);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#70: FILE: include/linux/aio.h:210:
+extern int aio_put_req(struct kiocb *iocb);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#71: FILE: include/linux/aio.h:211:
+extern void kick_iocb(struct kiocb *iocb);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#72: FILE: include/linux/aio.h:212:
+extern int aio_complete(struct kiocb *iocb, long res, long res2);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#73: FILE: include/linux/aio.h:213:
+extern void __put_ioctx(struct kioctx *ctx);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#76: FILE: include/linux/aio.h:215:
+extern void exit_aio(struct mm_struct *mm);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#80: FILE: include/linux/aio.h:217:
+extern int io_submit_one(struct kioctx *ctx, struct iocb __user *user_iocb,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#126: FILE: include/linux/file.h:62:
+extern void __fput(struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#126: FILE: include/linux/file.h:62:
+extern void __fput(struct file *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#127: FILE: include/linux/file.h:63:
+extern void fput(struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#127: FILE: include/linux/file.h:63:
+extern void fput(struct file *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#138: FILE: include/linux/file.h:80:
+extern struct file * fget(unsigned int fd);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#138: FILE: include/linux/file.h:80:
+extern struct file * fget(unsigned int fd);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#139: FILE: include/linux/file.h:81:
+extern struct file * fget_light(unsigned int fd, int *fput_needed);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#139: FILE: include/linux/file.h:81:
+extern struct file * fget_light(unsigned int fd, int *fput_needed);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#140: FILE: include/linux/file.h:82:
+extern void set_close_on_exec(unsigned int fd, int flag);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#145: FILE: include/linux/file.h:86:
+extern void put_unused_fd(unsigned int fd);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#154: FILE: include/linux/file.h:113:
+extern void fd_install(unsigned int fd, struct file * file);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#154: FILE: include/linux/file.h:113:
+extern void fd_install(unsigned int fd, struct file * file);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#174: FILE: include/linux/gfp.h:175:
+extern struct page *__alloc_pages(gfp_t, unsigned int, struct zonelist *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#184: FILE: include/linux/gfp.h:211:
+extern unsigned long __get_free_pages(gfp_t gfp_mask, unsigned int order);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#185: FILE: include/linux/gfp.h:212:
+extern unsigned long get_zeroed_page(gfp_t gfp_mask);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#197: FILE: include/linux/gfp.h:220:
+extern void __free_pages(struct page *page, unsigned int order);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#198: FILE: include/linux/gfp.h:221:
+extern void free_pages(unsigned long addr, unsigned int order);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#199: FILE: include/linux/gfp.h:222:
+extern void free_hot_page(struct page *page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#200: FILE: include/linux/gfp.h:223:
+extern void free_cold_page(struct page *page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#214: FILE: include/linux/interrupt.h:276:
+extern void raise_softirq_irqoff(unsigned int nr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#215: FILE: include/linux/interrupt.h:277:
+extern void raise_softirq(unsigned int nr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#224: FILE: include/linux/interrupt.h:344:
+extern void __tasklet_schedule(struct tasklet_struct *t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#233: FILE: include/linux/interrupt.h:352:
+extern void __tasklet_hi_schedule(struct tasklet_struct *t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#255: FILE: include/linux/mm.h:832:
+extern pte_t *get_locked_pte(struct mm_struct *mm, unsigned long addr, spinlock_t **ptl);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#268: FILE: include/linux/mutex-debug.h:21:
+extern void mutex_destroy(struct mutex *lock);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#281: FILE: include/linux/namei.h:65:
+extern int __user_walk(const char __user *, unsigned, struct nameidata *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#281: FILE: include/linux/namei.h:65:
+extern int __user_walk(const char __user *, unsigned, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char __user *' should also have an identifier name
#281: FILE: include/linux/namei.h:65:
+extern int __user_walk(const char __user *, unsigned, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#281: FILE: include/linux/namei.h:65:
+extern int __user_walk(const char __user *, unsigned, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nameidata *' should also have an identifier name
#281: FILE: include/linux/namei.h:65:
+extern int __user_walk(const char __user *, unsigned, struct nameidata *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#282: FILE: include/linux/namei.h:66:
+extern int __user_walk_fd(int dfd, const char __user *, unsigned, struct nameidata *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#282: FILE: include/linux/namei.h:66:
+extern int __user_walk_fd(int dfd, const char __user *, unsigned, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char __user *' should also have an identifier name
#282: FILE: include/linux/namei.h:66:
+extern int __user_walk_fd(int dfd, const char __user *, unsigned, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#282: FILE: include/linux/namei.h:66:
+extern int __user_walk_fd(int dfd, const char __user *, unsigned, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nameidata *' should also have an identifier name
#282: FILE: include/linux/namei.h:66:
+extern int __user_walk_fd(int dfd, const char __user *, unsigned, struct nameidata *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#288: FILE: include/linux/namei.h:71:
+extern int path_lookup(const char *, unsigned, struct nameidata *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#288: FILE: include/linux/namei.h:71:
+extern int path_lookup(const char *, unsigned, struct nameidata *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#301: FILE: include/linux/netdevice.h:325:
+extern void __napi_schedule(struct napi_struct *n);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#317: FILE: include/linux/pagemap.h:159:
+extern void __lock_page(struct page *page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#318: FILE: include/linux/pagemap.h:160:
+extern int __lock_page_killable(struct page *page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#319: FILE: include/linux/pagemap.h:161:
+extern void __lock_page_nosync(struct page *page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#320: FILE: include/linux/pagemap.h:162:
+extern void unlock_page(struct page *page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#329: FILE: include/linux/pagemap.h:202:
+extern void wait_on_page_bit(struct page *page, int bit_nr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#345: FILE: include/linux/pid.h:82:
+extern void put_pid(struct pid *pid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#346: FILE: include/linux/pid.h:83:
+extern struct task_struct *pid_task(struct pid *pid, enum pid_type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#347: FILE: include/linux/pid.h:84:
+extern struct task_struct *get_pid_task(struct pid *pid, enum pid_type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#360: FILE: include/linux/pid.h:92:
+extern int attach_pid(struct task_struct *task, enum pid_type type,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#362: FILE: include/linux/pid.h:94:
+extern void detach_pid(struct task_struct *task, enum pid_type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#363: FILE: include/linux/pid.h:95:
+extern void transfer_pid(struct task_struct *old, struct task_struct *new,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#373: FILE: include/linux/pid.h:111:
+extern struct pid *find_pid_ns(int nr, struct pid_namespace *ns);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#382: FILE: include/linux/pid.h:123:
+extern void free_pid(struct pid *pid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#402: FILE: include/linux/rwsem-spinlock.h:63:
+extern void __down_read(struct rw_semaphore *sem);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#403: FILE: include/linux/rwsem-spinlock.h:64:
+extern int __down_read_trylock(struct rw_semaphore *sem);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#404: FILE: include/linux/rwsem-spinlock.h:65:
+extern void __down_write(struct rw_semaphore *sem);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#405: FILE: include/linux/rwsem-spinlock.h:66:
+extern void __down_write_nested(struct rw_semaphore *sem, int subclass);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#406: FILE: include/linux/rwsem-spinlock.h:67:
+extern int __down_write_trylock(struct rw_semaphore *sem);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#407: FILE: include/linux/rwsem-spinlock.h:68:
+extern void __up_read(struct rw_semaphore *sem);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#408: FILE: include/linux/rwsem-spinlock.h:69:
+extern void __up_write(struct rw_semaphore *sem);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#409: FILE: include/linux/rwsem-spinlock.h:70:
+extern void __downgrade_write(struct rw_semaphore *sem);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#422: FILE: include/linux/sched.h:326:
+extern signed long schedule_timeout(signed long timeout);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#434: FILE: include/linux/sched.h:1651:
+extern int wake_up_state(struct task_struct * tsk, unsigned int state);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#434: FILE: include/linux/sched.h:1651:
+extern int wake_up_state(struct task_struct * tsk, unsigned int state);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#435: FILE: include/linux/sched.h:1652:
+extern int wake_up_process(struct task_struct * tsk);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#435: FILE: include/linux/sched.h:1652:
+extern int wake_up_process(struct task_struct * tsk);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#436: FILE: include/linux/sched.h:1653:
+extern void wake_up_new_task(struct task_struct * tsk,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#436: FILE: include/linux/sched.h:1653:
+extern void wake_up_new_task(struct task_struct * tsk,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#446: FILE: include/linux/sched.h:1744:
+extern void __mmdrop(struct mm_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#446: FILE: include/linux/sched.h:1744:
+extern void __mmdrop(struct mm_struct *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#455: FILE: include/linux/sched.h:1928:
+extern int __fatal_signal_pending(struct task_struct *p);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#471: FILE: include/linux/swap.h:174:
+extern void lru_cache_add(struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#471: FILE: include/linux/swap.h:174:
+extern void lru_cache_add(struct page *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#472: FILE: include/linux/swap.h:175:
+extern void lru_cache_add_active(struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#472: FILE: include/linux/swap.h:175:
+extern void lru_cache_add_active(struct page *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#473: FILE: include/linux/swap.h:176:
+extern void activate_page(struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#473: FILE: include/linux/swap.h:176:
+extern void activate_page(struct page *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#474: FILE: include/linux/swap.h:177:
+extern void mark_page_accessed(struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#474: FILE: include/linux/swap.h:177:
+extern void mark_page_accessed(struct page *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#489: FILE: include/linux/wait.h:120:
+extern void add_wait_queue(wait_queue_head_t *q, wait_queue_t * wait);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#489: FILE: include/linux/wait.h:120:
+extern void add_wait_queue(wait_queue_head_t *q, wait_queue_t * wait);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#490: FILE: include/linux/wait.h:121:
+extern void add_wait_queue_exclusive(wait_queue_head_t *q, wait_queue_t * wait);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#490: FILE: include/linux/wait.h:121:
+extern void add_wait_queue_exclusive(wait_queue_head_t *q, wait_queue_t * wait);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#491: FILE: include/linux/wait.h:122:
+extern void remove_wait_queue(wait_queue_head_t *q, wait_queue_t * wait);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#491: FILE: include/linux/wait.h:122:
+extern void remove_wait_queue(wait_queue_head_t *q, wait_queue_t * wait);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#510: FILE: include/linux/wait.h:145:
+extern void __wake_up_locked(wait_queue_head_t *q, unsigned int mode);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#511: FILE: include/linux/wait.h:146:
+extern void __wake_up_sync(wait_queue_head_t *q, unsigned int mode, int nr);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'wait_queue_head_t *' should also have an identifier name
#512: FILE: include/linux/wait.h:147:
+void __wake_up_bit(wait_queue_head_t *, void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#512: FILE: include/linux/wait.h:147:
+void __wake_up_bit(wait_queue_head_t *, void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#512: FILE: include/linux/wait.h:147:
+void __wake_up_bit(wait_queue_head_t *, void *, int);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#513: FILE: include/linux/wait.h:148:
+int __wait_on_bit(wait_queue_head_t *, struct wait_bit_queue *, int (*)(void *), unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'wait_queue_head_t *' should also have an identifier name
#513: FILE: include/linux/wait.h:148:
+int __wait_on_bit(wait_queue_head_t *, struct wait_bit_queue *, int (*)(void *), unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct wait_bit_queue *' should also have an identifier name
#513: FILE: include/linux/wait.h:148:
+int __wait_on_bit(wait_queue_head_t *, struct wait_bit_queue *, int (*)(void *), unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#513: FILE: include/linux/wait.h:148:
+int __wait_on_bit(wait_queue_head_t *, struct wait_bit_queue *, int (*)(void *), unsigned);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#514: FILE: include/linux/wait.h:149:
+int __wait_on_bit_lock(wait_queue_head_t *, struct wait_bit_queue *, int (*)(void *), unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'wait_queue_head_t *' should also have an identifier name
#514: FILE: include/linux/wait.h:149:
+int __wait_on_bit_lock(wait_queue_head_t *, struct wait_bit_queue *, int (*)(void *), unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct wait_bit_queue *' should also have an identifier name
#514: FILE: include/linux/wait.h:149:
+int __wait_on_bit_lock(wait_queue_head_t *, struct wait_bit_queue *, int (*)(void *), unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#514: FILE: include/linux/wait.h:149:
+int __wait_on_bit_lock(wait_queue_head_t *, struct wait_bit_queue *, int (*)(void *), unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#515: FILE: include/linux/wait.h:150:
+void wake_up_bit(void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#515: FILE: include/linux/wait.h:150:
+void wake_up_bit(void *, int);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#516: FILE: include/linux/wait.h:151:
+int out_of_line_wait_on_bit(void *, int, int (*)(void *), unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#516: FILE: include/linux/wait.h:151:
+int out_of_line_wait_on_bit(void *, int, int (*)(void *), unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#516: FILE: include/linux/wait.h:151:
+int out_of_line_wait_on_bit(void *, int, int (*)(void *), unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#516: FILE: include/linux/wait.h:151:
+int out_of_line_wait_on_bit(void *, int, int (*)(void *), unsigned);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#517: FILE: include/linux/wait.h:152:
+int out_of_line_wait_on_bit_lock(void *, int, int (*)(void *), unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#517: FILE: include/linux/wait.h:152:
+int out_of_line_wait_on_bit_lock(void *, int, int (*)(void *), unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#517: FILE: include/linux/wait.h:152:
+int out_of_line_wait_on_bit_lock(void *, int, int (*)(void *), unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#517: FILE: include/linux/wait.h:152:
+int out_of_line_wait_on_bit_lock(void *, int, int (*)(void *), unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#518: FILE: include/linux/wait.h:153:
+wait_queue_head_t *bit_waitqueue(void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#518: FILE: include/linux/wait.h:153:
+wait_queue_head_t *bit_waitqueue(void *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#548: FILE: include/linux/workqueue.h:181:
+extern int queue_work(struct workqueue_struct *wq, struct work_struct *work);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#549: FILE: include/linux/workqueue.h:182:
+extern int queue_delayed_work(struct workqueue_struct *wq,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#550: FILE: include/linux/workqueue.h:183:
+extern int queue_delayed_work(struct workqueue_struct *wq,
+			struct delayed_work *work, unsigned long delay);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#555: FILE: include/linux/workqueue.h:187:
+extern void flush_workqueue(struct workqueue_struct *wq);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#561: FILE: include/linux/workqueue.h:190:
+extern int schedule_work(struct work_struct *work);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#562: FILE: include/linux/workqueue.h:191:
+extern int schedule_delayed_work(struct delayed_work *work, unsigned long delay);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000323269.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 39 warnings, 73 checks, 413 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000323269.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
