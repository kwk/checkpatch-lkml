WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
   git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip.git sched-core-for-linus

WARNING:TYPO_SPELLING: 'didnt' may be misspelled - perhaps 'didn't'?
#45: 
didnt want to wait with this for v2.6.33 and it fixes performance 
^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#262: FILE: arch/x86/include/asm/cpufeature.h:99:
+#define X86_FEATURE_APERFMPERF	(3*32+28) /* APERFMPERF */
                               	  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#262: FILE: arch/x86/include/asm/cpufeature.h:99:
+#define X86_FEATURE_APERFMPERF	(3*32+28) /* APERFMPERF */
                               	     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#348: FILE: arch/x86/include/asm/topology.h:144:
+				| 0*SD_BALANCE_WAKE			\
 				   ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#517: FILE: arch/x86/kernel/cpu/intel.c:354:
+		unsigned ecx = cpuid_ecx(6);

WARNING:LINE_SPACING: Missing a blank line after declarations
#518: FILE: arch/x86/kernel/cpu/intel.c:355:
+		unsigned ecx = cpuid_ecx(6);
+		if (ecx & 0x01)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#526: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#531: FILE: arch/x86/kernel/cpu/sched.c:1:
+#include <linux/sched.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/cpufeature.h> instead of <asm/cpufeature.h>
#536: FILE: arch/x86/kernel/cpu/sched.c:6:
+#include <asm/cpufeature.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#537: FILE: arch/x86/kernel/cpu/sched.c:7:
+#include <asm/processor.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#630: FILE: include/linux/sched.h:1009:
 
+

WARNING:TYPO_SPELLING: 'wakup' may be misspelled - perhaps 'wakeup'?
#641: FILE: include/linux/sched.h:1030:
+#define WF_SYNC		0x01		/* waker goes to sleep after wakup */
                		    		                             ^^^^^

WARNING:SPACING: Unnecessary space before function pointer arguments
#652: FILE: include/linux/sched.h:1040:
+	void (*check_preempt_curr) (struct rq *rq, struct task_struct *p, int flags);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#681: FILE: include/linux/topology.h:98:
+				| 0*SD_BALANCE_WAKE			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#706: FILE: include/linux/topology.h:130:
+				| 0*SD_BALANCE_WAKE			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#709: FILE: include/linux/topology.h:132:
+				| 1*SD_PREFER_LOCAL			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#735: FILE: include/linux/topology.h:163:
+				| 0*SD_BALANCE_WAKE			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#736: FILE: include/linux/topology.h:164:
+				| 1*SD_WAKE_AFFINE			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#737: FILE: include/linux/topology.h:165:
+				| 1*SD_PREFER_LOCAL			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#752: FILE: include/linux/topology.h:190:
+				| 0*SD_BALANCE_WAKE			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#753: FILE: include/linux/topology.h:191:
+				| 0*SD_WAKE_AFFINE			\
 				   ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#772: FILE: include/linux/wait.h:29:
+typedef int (*wait_queue_func_t)(wait_queue_t *wait, unsigned mode, int flags, void *key);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#773: FILE: include/linux/wait.h:30:
+int default_wake_function(wait_queue_t *wait, unsigned mode, int flags, void *key);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#859: FILE: kernel/sched.c:1517:
+	return min(rq->cpu_load[type-1], total);
 	                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#874: FILE: kernel/sched.c:1532:
+	return max(rq->cpu_load[type-1], total);
 	                            ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1289: FILE: kernel/sched.c:3555:
 
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1389: FILE: kernel/sched.c:5330:
+		runtime = min_t(u64, runtime, 2*sysctl_sched_migration_cost);
 		                               ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1404: FILE: kernel/sched.c:5567:
+int default_wake_function(wait_queue_t *curr, unsigned mode, int wake_flags,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1426: FILE: kernel/sched.c:5592:
+		if (curr->func(curr, mode, wake_flags, key) &&
 				(flags & WQ_FLAG_EXCLUSIVE) && !--nr_exclusive)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1476: FILE: kernel/sched.c:8553:
+		sd->flags &= ~(SD_BALANCE_WAKE|SD_BALANCE_NEWIDLE);
 		                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1480: FILE: kernel/sched.c:8556:
+		sd->flags |= (SD_BALANCE_WAKE|SD_BALANCE_NEWIDLE);
 		                             ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 15)
#1654: FILE: kernel/sched_fair.c:1175:
+	if (sync) {
+	       if (sched_feat(SYNC_LESS) &&

WARNING:TABSTOP: Statements should start on a tabstop
#1655: FILE: kernel/sched_fair.c:1176:
+	       if (sched_feat(SYNC_LESS) &&

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1655: FILE: kernel/sched_fair.c:1176:
+	       if (sched_feat(SYNC_LESS) &&
[...]
+		       sync = 0;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1697: FILE: kernel/sched_fair.c:1215:
+		100*(this_load + effective_load(tg, this_cpu, weight, weight)) <=
 		   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1741: FILE: kernel/sched_fair.c:1255:
+	int imbalance = 100 + (sd->imbalance_pct-100)/2;
 	                                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1741: FILE: kernel/sched_fair.c:1255:
+	int imbalance = 100 + (sd->imbalance_pct-100)/2;
 	                                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1793: FILE: kernel/sched_fair.c:1295:
+	if (!idlest || 100*this_load < imbalance*min_load)
 	                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1793: FILE: kernel/sched_fair.c:1295:
+	if (!idlest || 100*this_load < imbalance*min_load)
 	                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1860: FILE: kernel/sched_fair.c:1356:
+		if (tmp->flags & (SD_POWERSAVINGS_BALANCE|SD_PREFER_LOCAL)) {
 		                                         ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1882: FILE: kernel/sched_fair.c:1378:
+		    cpumask_test_cpu(prev_cpu, sched_domain_span(tmp))) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'elegible' may be misspelled - perhaps 'eligible'?
#2040: FILE: kernel/sched_fair.c:1663:
+		 * was elegible to run, let them earn it again.
 		       ^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2055: FILE: kernel/sched_features.h:1:
+/*

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000070792.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 16 warnings, 28 checks, 1937 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000070792.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
