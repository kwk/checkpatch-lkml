WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#101: 
[root@localhost ~]# ls /sys/devices/LNXSYSTM:00/device:00/PNP0A08:00/device:2f/device:30/wakeup

WARNING:TYPO_SPELLING: 'seperately' may be misspelled - perhaps 'separately'?
#134: 
ACPI: 'C0F9' and 'C229' have the same GPE, can't disable/enable one seperately
                                                                    ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'seperately' may be misspelled - perhaps 'separately'?
#135: 
ACPI: 'C21D' and 'C229' have the same GPE, can't disable/enable one seperately
                                                                    ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'seperately' may be misspelled - perhaps 'separately'?
#136: 
ACPI: 'C109' and 'C229' have the same GPE, can't disable/enable one seperately
                                                                    ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'seperately' may be misspelled - perhaps 'separately'?
#137: 
ACPI: 'C228' and 'C229' have the same GPE, can't disable/enable one seperately
                                                                    ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'seperately' may be misspelled - perhaps 'separately'?
#138: 
ACPI: 'C10F' and 'C229' have the same GPE, can't disable/enable one seperately
                                                                    ^^^^^^^^^^

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#183: FILE: drivers/acpi/scan.c:196:
+static char enabled[] = "enabled";

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#184: FILE: drivers/acpi/scan.c:197:
+static char disabled[] = "disabled";

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#185: FILE: drivers/acpi/scan.c:198:
+static char unsupported[] = "unsupported";

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: drivers/acpi/scan.c:218:
+acpi_device_status_store(struct device *dev, struct device_attribute *attr,
+		const char *buf, size_t count)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tmpp"
#213: FILE: drivers/acpi/scan.c:226:
+	if (tmpp != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'len == 1'
#217: FILE: drivers/acpi/scan.c:230:
+	if ((len == 1) && ((buf[0] == '0') || (buf[0] == '1')))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: braces {} should be used on all arms of this statement
#217: FILE: drivers/acpi/scan.c:230:
+	if ((len == 1) && ((buf[0] == '0') || (buf[0] == '1')))
[...]
+	else if ((len == strlen(enabled))
[...]
+	else if ((len == strlen(disabled))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#220: FILE: drivers/acpi/scan.c:233:
+	else if ((len == strlen(enabled))
+		 && (strnicmp(buf, enabled, strlen(enabled)) == 0))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#223: FILE: drivers/acpi/scan.c:236:
+	else if ((len == strlen(disabled))
+		 && (strnicmp(buf, disabled, strlen(disabled)) == 0))

CHECK:BRACES: Unbalanced braces around else statement
#225: FILE: drivers/acpi/scan.c:238:
+	else {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev != acpi_dev'
#236: FILE: drivers/acpi/scan.c:249:
+		if ((dev != acpi_dev)
+		    && (dev->wakeup.gpe_number == acpi_dev->wakeup.gpe_number)
+		    && (dev->wakeup.gpe_device ==
+				acpi_dev->wakeup.gpe_device)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->wakeup.gpe_number == acpi_dev->wakeup.gpe_number'
#236: FILE: drivers/acpi/scan.c:249:
+		if ((dev != acpi_dev)
+		    && (dev->wakeup.gpe_number == acpi_dev->wakeup.gpe_number)
+		    && (dev->wakeup.gpe_device ==
+				acpi_dev->wakeup.gpe_device)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->wakeup.gpe_device ==
 				acpi_dev->wakeup.gpe_device'
#236: FILE: drivers/acpi/scan.c:249:
+		if ((dev != acpi_dev)
+		    && (dev->wakeup.gpe_number == acpi_dev->wakeup.gpe_number)
+		    && (dev->wakeup.gpe_device ==
+				acpi_dev->wakeup.gpe_device)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#237: FILE: drivers/acpi/scan.c:250:
+		if ((dev != acpi_dev)
+		    && (dev->wakeup.gpe_number == acpi_dev->wakeup.gpe_number)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#238: FILE: drivers/acpi/scan.c:251:
+		    && (dev->wakeup.gpe_number == acpi_dev->wakeup.gpe_number)
+		    && (dev->wakeup.gpe_device ==

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#240: FILE: drivers/acpi/scan.c:253:
+			printk(KERN_WARNING

WARNING:TYPO_SPELLING: 'seperately' may be misspelled - perhaps 'separately'?
#242: FILE: drivers/acpi/scan.c:255:
+			       "can't disable/enable one seperately\n",
 			                                 ^^^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#242: FILE: drivers/acpi/scan.c:255:
+			       "ACPI: '%s' and '%s' have the same GPE, "
+			       "can't disable/enable one seperately\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'acpi_device_status_show' to 'status_show' 'acpi_device_status_store' to 'status_store'
#251: FILE: drivers/acpi/scan.c:264:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#258: FILE: drivers/acpi/scan.c:271:
+acpi_device_acpi_bus_id_show(struct device *dev, struct device_attribute *attr,
+				char *buf)

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'acpi_device_acpi_bus_id_show' to 'acpi_bus_id_show'
#263: FILE: drivers/acpi/scan.c:276:
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#267: FILE: drivers/acpi/scan.c:280:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#270: FILE: drivers/acpi/scan.c:283:
+acpi_device_sleep_state_show(struct device *dev, struct device_attribute *attr,
+				char *buf)

CHECK:SPACING: No space is necessary after a cast
#274: FILE: drivers/acpi/scan.c:287:
+	return sprintf(buf, "S%d\n", (u32) acpi_dev->wakeup.sleep_state);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'acpi_device_sleep_state_show' to 'sleep_state_show'
#275: FILE: drivers/acpi/scan.c:288:
+}

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'acpi_device_run_wakeup_show' to 'run_wakeup_show'
#286: FILE: drivers/acpi/scan.c:299:
+}

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'acpi_device_bus_id_show' to 'bus_id_show'
#307: FILE: drivers/acpi/scan.c:320:
+}

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'acpi_device_pci_id_show' to 'pci_id_show'
#326: FILE: drivers/acpi/scan.c:339:
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#384: FILE: drivers/acpi/scan.c:398:
+		result = sysfs_create_group(&dev->dev.kobj,
+				&acpi_wakeup_attr_group);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000338509.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 18 warnings, 17 checks, 229 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000338509.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
