WARNING:TYPO_SPELLING: 'availablity' may be misspelled - perhaps 'availability'?
#56: 
depending on the availablity of TDM devices. At every new request of a TDM
                 ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#113: FILE: drivers/misc/Kconfig:235:
+config UCC_TDM
+	bool "Freescale UCC  TDM Driver"
+	depends on QUICC_ENGINE && UCC_FAST
+	default n
+	---help---
+	  The TDM driver is for UCC based TDM devices for example, TDM device on
+	  MPC832x RDB. Select it to run PowerVoIP on MPC832x RDB board.
+	  The TDM driver can interface with SLIC kind of devices to transmit
+	  and receive TDM samples. The TDM driver receives Time Division
+	  multiplexed samples(for different channels) from the SLIC device,
+	  demutiplexes them and sends them to the upper layers. At the transmit
+	  end the TDM drivers receives samples for different channels, it
+	  multiplexes them and sends them to the SLIC device.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#138: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#143: FILE: drivers/misc/ucc_tdm.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#144: FILE: drivers/misc/ucc_tdm.c:2:
+ * drivers/misc/ucc_tdm.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#191: FILE: drivers/misc/ucc_tdm.c:49:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#258: FILE: drivers/misc/ucc_tdm.c:116:
+	pr_debug("%s Dumping UCC Registers\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#260: FILE: drivers/misc/ucc_tdm.c:118:
+	pr_debug("%s Dumping UCC Parameter RAM\n", __FUNCTION__);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#287: FILE: drivers/misc/ucc_tdm.c:145:
+ * ^I^Iignored$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#328: FILE: drivers/misc/ucc_tdm.c:186:
+		out_be16((u16 *)&qe_immr->sir.rx[(phy_num_ts - 1) * 2],
+								siram_code);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#331: FILE: drivers/misc/ucc_tdm.c:189:
+		out_be16((u16 *)&qe_immr->sir.tx[(phy_num_ts - 1) * 2],
+								siram_code);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#391: FILE: drivers/misc/ucc_tdm.c:249:
+			printk(KERN_ERR "%s: Failed to set %s\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#391: FILE: drivers/misc/ucc_tdm.c:249:
+			printk(KERN_ERR "%s: Failed to set %s\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#392: FILE: drivers/misc/ucc_tdm.c:250:
+			printk(KERN_ERR "%s: Failed to set %s\n", __FUNCTION__,
+				tdm_c->ut_info->uf_info.tdm_tx_clk);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#400: FILE: drivers/misc/ucc_tdm.c:258:
+			printk(KERN_ERR "%s: Failed to set %s\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#400: FILE: drivers/misc/ucc_tdm.c:258:
+			printk(KERN_ERR "%s: Failed to set %s\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#401: FILE: drivers/misc/ucc_tdm.c:259:
+			printk(KERN_ERR "%s: Failed to set %s\n", __FUNCTION__,
+				tdm_c->ut_info->uf_info.tdm_rx_clk);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#412: FILE: drivers/misc/ucc_tdm.c:270:
+			printk(KERN_ERR "%s: Failed to set %s\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#412: FILE: drivers/misc/ucc_tdm.c:270:
+			printk(KERN_ERR "%s: Failed to set %s\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#413: FILE: drivers/misc/ucc_tdm.c:271:
+			printk(KERN_ERR "%s: Failed to set %s\n", __FUNCTION__,
+				tdm_c->ut_info->uf_info.tdm_tx_sync);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#421: FILE: drivers/misc/ucc_tdm.c:279:
+			printk(KERN_ERR "%s: Failed to set %s\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#421: FILE: drivers/misc/ucc_tdm.c:279:
+			printk(KERN_ERR "%s: Failed to set %s\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#422: FILE: drivers/misc/ucc_tdm.c:280:
+			printk(KERN_ERR "%s: Failed to set %s\n", __FUNCTION__,
+				tdm_c->ut_info->uf_info.tdm_rx_sync);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tdm_c->ut_info->uf_info
#430: FILE: drivers/misc/ucc_tdm.c:288:
+	if (ucc_fast_init(&(tdm_c->ut_info->uf_info), &tdm_c->uf_private)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#431: FILE: drivers/misc/ucc_tdm.c:289:
+		printk(KERN_ERR "%s: Failed to init uccf\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#431: FILE: drivers/misc/ucc_tdm.c:289:
+		printk(KERN_ERR "%s: Failed to init uccf\n", __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#440: FILE: drivers/misc/ucc_tdm.c:298:
+	qe_issue_cmd(QE_STOP_TX, cecr_subblock,
+		(u8) QE_CR_PROTOCOL_UNSPECIFIED, 0);

CHECK:SPACING: No space is necessary after a cast
#440: FILE: drivers/misc/ucc_tdm.c:298:
+		(u8) QE_CR_PROTOCOL_UNSPECIFIED, 0);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#443: FILE: drivers/misc/ucc_tdm.c:301:
+	pram_offset = qe_muram_alloc(UCC_TRANSPARENT_PRAM_SIZE,
+					ALIGNMENT_OF_UCC_SLOW_PRAM);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#445: FILE: drivers/misc/ucc_tdm.c:303:
+		printk(KERN_ERR "%s: Cannot allocate MURAM memory for"

WARNING:SPLIT_STRING: quoted string split across lines
#446: FILE: drivers/misc/ucc_tdm.c:304:
+		printk(KERN_ERR "%s: Cannot allocate MURAM memory for"
+			" transparent UCC\n", __FUNCTION__);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#446: FILE: drivers/misc/ucc_tdm.c:304:
+			" transparent UCC\n", __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#453: FILE: drivers/misc/ucc_tdm.c:311:
+	qe_issue_cmd(QE_ASSIGN_PAGE_TO_DEVICE, cecr_subblock,
+			QE_CR_PROTOCOL_UNSPECIFIED, pram_offset);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#466: FILE: drivers/misc/ucc_tdm.c:324:
+	rxbdt_offset = qe_muram_alloc(NR_BUFS * sizeof(struct qe_bd),
+					QE_ALIGNMENT_OF_BD);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#468: FILE: drivers/misc/ucc_tdm.c:326:
+		printk(KERN_ERR "%s: Cannot allocate MURAM memory for RxBDs\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#469: FILE: drivers/misc/ucc_tdm.c:327:
+		printk(KERN_ERR "%s: Cannot allocate MURAM memory for RxBDs\n",
+				__FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#469: FILE: drivers/misc/ucc_tdm.c:327:
+				__FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#474: FILE: drivers/misc/ucc_tdm.c:332:
+	txbdt_offset = qe_muram_alloc(NR_BUFS * sizeof(struct qe_bd),
+				QE_ALIGNMENT_OF_BD);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#476: FILE: drivers/misc/ucc_tdm.c:334:
+		printk(KERN_ERR "%s: Cannot allocate MURAM memory for TxBDs\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#477: FILE: drivers/misc/ucc_tdm.c:335:
+		printk(KERN_ERR "%s: Cannot allocate MURAM memory for TxBDs\n",
+				__FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#477: FILE: drivers/misc/ucc_tdm.c:335:
+				__FUNCTION__);

CHECK:SPACING: No space is necessary after a cast
#490: FILE: drivers/misc/ucc_tdm.c:348:
+	out_be32(&tdm_c->ucc_pram->rbase, (u32) immrbar_virt_to_phys(rx_bd));

CHECK:SPACING: No space is necessary after a cast
#491: FILE: drivers/misc/ucc_tdm.c:349:
+	out_be32(&tdm_c->ucc_pram->tbase, (u32) immrbar_virt_to_phys(tx_bd));

CHECK:SPACING: No space is necessary after a cast
#494: FILE: drivers/misc/ucc_tdm.c:352:
+		bd_status = (u16) ((R_E | R_CM | R_I) >> 16);

CHECK:SPACING: No space is necessary after a cast
#502: FILE: drivers/misc/ucc_tdm.c:360:
+		bd_status = (u16) ((T_R | T_CM) >> 16);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#507: FILE: drivers/misc/ucc_tdm.c:365:
+		out_be32(&tx_bd->buf,
+			tdm_c->dma_output_addr + i * SAMPLE_DEPTH * act_num_ts);

CHECK:SPACING: No space is necessary after a cast
#511: FILE: drivers/misc/ucc_tdm.c:369:
+	bd_status = (u16) ((R_E | R_CM | R_I | R_W) >> 16);

CHECK:SPACING: No space is necessary after a cast
#518: FILE: drivers/misc/ucc_tdm.c:376:
+	bd_status = (u16) ((T_R | T_CM | T_W) >> 16);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#531: FILE: drivers/misc/ucc_tdm.c:389:
+		printk(KERN_ERR "%s: Cannot allocate MURAM mem for Rx"

WARNING:SPLIT_STRING: quoted string split across lines
#532: FILE: drivers/misc/ucc_tdm.c:390:
+		printk(KERN_ERR "%s: Cannot allocate MURAM mem for Rx"
+			 " ucode buf\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#532: FILE: drivers/misc/ucc_tdm.c:390:
+			 " ucode buf\n", __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#539: FILE: drivers/misc/ucc_tdm.c:397:
+		printk(KERN_ERR "%s: Cannot allocate MURAM mem for Tx"

WARNING:SPLIT_STRING: quoted string split across lines
#540: FILE: drivers/misc/ucc_tdm.c:398:
+		printk(KERN_ERR "%s: Cannot allocate MURAM mem for Tx"
+			 " ucode buf\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#540: FILE: drivers/misc/ucc_tdm.c:398:
+			 " ucode buf\n", __FUNCTION__);

CHECK:SPACING: No space is necessary after a cast
#544: FILE: drivers/misc/ucc_tdm.c:402:
+	out_be16(&tdm_c->ucc_pram->riptr, (u16) rx_ucode_buf_offset);

CHECK:SPACING: No space is necessary after a cast
#545: FILE: drivers/misc/ucc_tdm.c:403:
+	out_be16(&tdm_c->ucc_pram->tiptr, (u16) tx_ucode_buf_offset);

CHECK:SPACING: No space is necessary after a cast
#554: FILE: drivers/misc/ucc_tdm.c:412:
+	out_be16(&tdm_c->ucc_pram->mrblr, (u16) SAMPLE_DEPTH * act_num_ts);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#569: FILE: drivers/misc/ucc_tdm.c:427:
+	qe_issue_cmd(QE_INIT_TX_RX, cecr_subblock,
+			(u8) QE_CR_PROTOCOL_UNSPECIFIED, 0);

CHECK:SPACING: No space is necessary after a cast
#569: FILE: drivers/misc/ucc_tdm.c:427:
+			(u8) QE_CR_PROTOCOL_UNSPECIFIED, 0);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#608: FILE: drivers/misc/ucc_tdm.c:466:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#614: FILE: drivers/misc/ucc_tdm.c:472:
+	u32 ucc;
+	register u32 ucce = 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#616: FILE: drivers/misc/ucc_tdm.c:474:
+	struct tdm_ctrl *tdm_c;
+	tdm_c = (struct tdm_ctrl *)dev_id;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#626: FILE: drivers/misc/ucc_tdm.c:484:
+		out_be32(tdm_c->uf_private->p_ucce,
+					(UCC_TRANS_UCCE_BSY << 16));

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#628: FILE: drivers/misc/ucc_tdm.c:486:
+			__FUNCTION__);

WARNING:LINE_SPACING: Missing a blank line after declarations
#648: FILE: drivers/misc/ucc_tdm.c:506:
+			int i;
+			phase_rx = tdm_c->phase_rx;

WARNING:SPLIT_STRING: quoted string split across lines
#663: FILE: drivers/misc/ucc_tdm.c:521:
+			pr_debug("%s: check if loopback received data on TS0"
+				 " is correct\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#663: FILE: drivers/misc/ucc_tdm.c:521:
+				 " is correct\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#692: FILE: drivers/misc/ucc_tdm.c:550:
+				 __FUNCTION__);

WARNING:LINE_SPACING: Missing a blank line after declarations
#697: FILE: drivers/misc/ucc_tdm.c:555:
+				u32 cecr_subblock;
+				out_be32(tdm_c->uf_private->p_ucce,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#698: FILE: drivers/misc/ucc_tdm.c:556:
+				out_be32(tdm_c->uf_private->p_ucce,
+						(UCC_TRANS_UCCE_TXE << 16));

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#700: FILE: drivers/misc/ucc_tdm.c:558:
+					 __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#705: FILE: drivers/misc/ucc_tdm.c:563:
+				qe_issue_cmd(QE_RESTART_TX, cecr_subblock,
+					(u8) QE_CR_PROTOCOL_UNSPECIFIED,

CHECK:SPACING: No space is necessary after a cast
#705: FILE: drivers/misc/ucc_tdm.c:563:
+					(u8) QE_CR_PROTOCOL_UNSPECIFIED,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#722: FILE: drivers/misc/ucc_tdm.c:580:
+	if (request_irq(tdm_c->ut_info->uf_info.irq, tdm_isr,
+					0, "tdm", tdm_c)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#723: FILE: drivers/misc/ucc_tdm.c:581:
+		printk(KERN_ERR "%s: request_irq for tdm_isr failed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#724: FILE: drivers/misc/ucc_tdm.c:582:
+		printk(KERN_ERR "%s: request_irq for tdm_isr failed\n",
+			__FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#724: FILE: drivers/misc/ucc_tdm.c:582:
+			__FUNCTION__);

WARNING:SPLIT_STRING: quoted string split across lines
#731: FILE: drivers/misc/ucc_tdm.c:589:
+	pr_info("%s 16-bit linear pcm mode active with"
+		" slots 0 & 2\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#731: FILE: drivers/misc/ucc_tdm.c:589:
+		" slots 0 & 2\n", __FUNCTION__);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around qe_immr->si1.siglmr1_h
#736: FILE: drivers/misc/ucc_tdm.c:594:
+	setbits8(&(qe_immr->si1.siglmr1_h), (0x1 << tdm_c->tdm_port));

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#737: FILE: drivers/misc/ucc_tdm.c:595:
+	pr_info("%s UCC based TDM enabled\n", __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#754: FILE: drivers/misc/ucc_tdm.c:612:
+	qe_issue_cmd(QE_GRACEFUL_STOP_TX, cecr_subblock,
+			(u8) QE_CR_PROTOCOL_UNSPECIFIED, 0);

CHECK:SPACING: No space is necessary after a cast
#754: FILE: drivers/misc/ucc_tdm.c:612:
+			(u8) QE_CR_PROTOCOL_UNSPECIFIED, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#756: FILE: drivers/misc/ucc_tdm.c:614:
+	qe_issue_cmd(QE_CLOSE_RX_BD, cecr_subblock,
+			(u8) QE_CR_PROTOCOL_UNSPECIFIED, 0);

CHECK:SPACING: No space is necessary after a cast
#756: FILE: drivers/misc/ucc_tdm.c:614:
+			(u8) QE_CR_PROTOCOL_UNSPECIFIED, 0);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#764: FILE: drivers/misc/ucc_tdm.c:622:
+
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#811: FILE: drivers/misc/ucc_tdm.c:669:
+		pr_info("%s Delay for Legerity!\n", __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#819: FILE: drivers/misc/ucc_tdm.c:677:
+static void tdm_read(u32 client_id, short chn_id, short *pcm_buffer,
+								short len)

CHECK:SPACING: No space is necessary after a cast
#840: FILE: drivers/misc/ucc_tdm.c:698:
+	flush_dcache_range((size_t) &input_tdm_buffer[temp_rx],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#841: FILE: drivers/misc/ucc_tdm.c:699:
+	flush_dcache_range((size_t) &input_tdm_buffer[temp_rx],
+				(size_t) &input_tdm_buffer[temp_rx +

CHECK:SPACING: No space is necessary after a cast
#841: FILE: drivers/misc/ucc_tdm.c:699:
+				(size_t) &input_tdm_buffer[temp_rx +

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#848: FILE: drivers/misc/ucc_tdm.c:706:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#851: FILE: drivers/misc/ucc_tdm.c:709:
+static void tdm_write(u32 client_id, short chn_id, short *pcm_buffer,
+								short len)

WARNING:LINE_SPACING: Missing a blank line after declarations
#861: FILE: drivers/misc/ucc_tdm.c:719:
+	u16 *output_tdm_buffer;
+	output_tdm_buffer = (u16 *)tdm_c->tdm_output_data;

CHECK:SPACING: No space is necessary after a cast
#878: FILE: drivers/misc/ucc_tdm.c:736:
+	flush_dcache_range((size_t) &output_tdm_buffer[temp_tx],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#879: FILE: drivers/misc/ucc_tdm.c:737:
+	flush_dcache_range((size_t) &output_tdm_buffer[temp_tx],
+		(size_t) &output_tdm_buffer[temp_tx + SAMPLE_DEPTH *

CHECK:SPACING: No space is necessary after a cast
#879: FILE: drivers/misc/ucc_tdm.c:737:
+		(size_t) &output_tdm_buffer[temp_tx + SAMPLE_DEPTH *

CHECK:LINE_SPACING: Please don't use multiple blank lines
#884: FILE: drivers/misc/ucc_tdm.c:742:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#888: FILE: drivers/misc/ucc_tdm.c:746:
+	u32 i;
+	if (num_tdm_clients == num_tdm_devices) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#889: FILE: drivers/misc/ucc_tdm.c:747:
+		printk(KERN_ERR "all TDM devices busy\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tdm_ctrl[i]->wakeup_event
#904: FILE: drivers/misc/ucc_tdm.c:762:
+			&(tdm_ctrl[i]->wakeup_event);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!prop"
#930: FILE: drivers/misc/ucc_tdm.c:788:
+	if (prop == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#931: FILE: drivers/misc/ucc_tdm.c:789:
+		printk(KERN_ERR "ucc_tdm: device-id missing\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ucc_num < 0'
#936: FILE: drivers/misc/ucc_tdm.c:794:
+	if ((ucc_num < 0) || (ucc_num > 7))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ucc_num > 7'
#936: FILE: drivers/misc/ucc_tdm.c:794:
+	if ((ucc_num < 0) || (ucc_num > 7))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#941: FILE: drivers/misc/ucc_tdm.c:799:
+		printk(KERN_ERR "ucc_tdm: UCC in use by another TDM driver"

WARNING:SPLIT_STRING: quoted string split across lines
#942: FILE: drivers/misc/ucc_tdm.c:800:
+		printk(KERN_ERR "ucc_tdm: UCC in use by another TDM driver"
+			"instance\n");

WARNING:MISSING_SPACE: break quoted strings at a space character
#942: FILE: drivers/misc/ucc_tdm.c:800:
+		printk(KERN_ERR "ucc_tdm: UCC in use by another TDM driver"
+			"instance\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#946: FILE: drivers/misc/ucc_tdm.c:804:
+		printk(KERN_ERR "ucc_tdm: All TDM devices already"

WARNING:SPLIT_STRING: quoted string split across lines
#947: FILE: drivers/misc/ucc_tdm.c:805:
+		printk(KERN_ERR "ucc_tdm: All TDM devices already"
+				" initialized\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#955: FILE: drivers/misc/ucc_tdm.c:813:
+		printk(KERN_ERR "ucc_tdm: no memory to allocate for"

WARNING:SPLIT_STRING: quoted string split across lines
#956: FILE: drivers/misc/ucc_tdm.c:814:
+		printk(KERN_ERR "ucc_tdm: no memory to allocate for"
+			" tdm control structure\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!prop"
#968: FILE: drivers/misc/ucc_tdm.c:826:
+	if (prop == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!prop"
#981: FILE: drivers/misc/ucc_tdm.c:839:
+	if (prop == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tdm_ctrl[device_num]->ut_info->uf_info.tdm_tx_clk"
#990: FILE: drivers/misc/ucc_tdm.c:848:
+	if (tdm_ctrl[device_num]->ut_info->uf_info.tdm_tx_clk == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tdm_ctrl[device_num]->ut_info->uf_info.tdm_rx_clk"
#997: FILE: drivers/misc/ucc_tdm.c:855:
+	if (tdm_ctrl[device_num]->ut_info->uf_info.tdm_rx_clk == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tdm_ctrl[device_num]->ut_info->uf_info.tdm_tx_sync"
#1004: FILE: drivers/misc/ucc_tdm.c:862:
+	if (tdm_ctrl[device_num]->ut_info->uf_info.tdm_tx_sync == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tdm_ctrl[device_num]->ut_info->uf_info.tdm_rx_sync"
#1011: FILE: drivers/misc/ucc_tdm.c:869:
+	if (tdm_ctrl[device_num]->ut_info->uf_info.tdm_rx_sync == NULL) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1028: FILE: drivers/misc/ucc_tdm.c:886:
+	if (np_tmp != NULL) {
[...]
+	} else
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "np_tmp"
#1028: FILE: drivers/misc/ucc_tdm.c:886:
+	if (np_tmp != NULL) {

CHECK:BRACES: Unbalanced braces around else statement
#1031: FILE: drivers/misc/ucc_tdm.c:889:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1040: FILE: drivers/misc/ucc_tdm.c:898:
+		printk(KERN_ERR "ucc-tdm: could not allocate buffer"

WARNING:SPLIT_STRING: quoted string split across lines
#1041: FILE: drivers/misc/ucc_tdm.c:899:
+		printk(KERN_ERR "ucc-tdm: could not allocate buffer"
+					"descriptors\n");

WARNING:MISSING_SPACE: break quoted strings at a space character
#1041: FILE: drivers/misc/ucc_tdm.c:899:
+		printk(KERN_ERR "ucc-tdm: could not allocate buffer"
+					"descriptors\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tdm_ctrl[device_num]->wakeup_event
#1054: FILE: drivers/misc/ucc_tdm.c:912:
+	init_waitqueue_head(&(tdm_ctrl[device_num]->wakeup_event));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ofdev->dev
#1064: FILE: drivers/misc/ucc_tdm.c:922:
+	dev_set_drvdata(&(ofdev->dev), tdm_ctrl[device_num]);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1066: FILE: drivers/misc/ucc_tdm.c:924:
+	pr_info("%s UCC based tdm module installed\n", __FUNCTION__);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ofdev->dev
#1094: FILE: drivers/misc/ucc_tdm.c:952:
+	tdm_c = dev_get_drvdata(&(ofdev->dev));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ofdev->dev
#1095: FILE: drivers/misc/ucc_tdm.c:953:
+	dev_set_drvdata(&(ofdev->dev), NULL);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1116: FILE: drivers/misc/ucc_tdm.c:974:
+	pr_info("%s UCC based tdm module uninstalled\n", __FUNCTION__);

WARNING:UNDOCUMENTED_DT_STRING: DT compatible string "fsl,ucc-tdm" appears un-documented -- check /home/fedora/lkml-analysis/linux/Documentation/devicetree/bindings/
#1121: FILE: drivers/misc/ucc_tdm.c:979:
+	{ .type = "tdm", .compatible = "fsl,ucc-tdm", },

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around utdm_info[i]
#1144: FILE: drivers/misc/ucc_tdm.c:1002:
+		memcpy(&(utdm_info[i]), &utdm_primary_info,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1145: FILE: drivers/misc/ucc_tdm.c:1003:
+		memcpy(&(utdm_info[i]), &utdm_primary_info,
+			sizeof(utdm_primary_info));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1166: FILE: drivers/misc/ucc_tdm.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1167: FILE: drivers/misc/ucc_tdm.h:2:
+ * drivers/misc/ucc_tdm.h

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1224: FILE: drivers/misc/ucc_tdm.h:59:
+		out_be16((u16 *)&qe_immr->sir.rx[(n)*2], (u16)(val))
 		                                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1227: FILE: drivers/misc/ucc_tdm.h:62:
+		out_be16((u16 *)&qe_immr->sir.tx[(n)*2], (u16)(val))
 		                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1235: FILE: drivers/misc/ucc_tdm.h:70:
+#define SIR_UCC(uccx)	(((uccx+9)) << 5)
                      	       ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'uccx' may be better as '(uccx)' to avoid precedence issues
#1235: FILE: drivers/misc/ucc_tdm.h:70:
+#define SIR_UCC(uccx)	(((uccx+9)) << 5)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1238: FILE: drivers/misc/ucc_tdm.h:73:
+#define BRGC_RESET	(0x1<<17)
                   	    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1239: FILE: drivers/misc/ucc_tdm.h:74:
+#define BRGC_EN		(0x1<<16)
                		    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1240: FILE: drivers/misc/ucc_tdm.h:75:
+#define BRGC_EXTC_QE	(0x00<<14)
                     	     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1241: FILE: drivers/misc/ucc_tdm.h:76:
+#define BRGC_EXTC_CLK3	(0x01<<14)
                       	     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1242: FILE: drivers/misc/ucc_tdm.h:77:
+#define BRGC_EXTC_CLK5	(0x01<<15)
                       	     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1243: FILE: drivers/misc/ucc_tdm.h:78:
+#define BRGC_EXTC_CLK9	(0x01<<14)
                       	     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1244: FILE: drivers/misc/ucc_tdm.h:79:
+#define BRGC_EXTC_CLK11	(0x01<<14)
                        	     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1245: FILE: drivers/misc/ucc_tdm.h:80:
+#define BRGC_EXTC_CLK13	(0x01<<14)
                        	     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1246: FILE: drivers/misc/ucc_tdm.h:81:
+#define BRGC_EXTC_CLK15	(0x01<<15)
                        	     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1247: FILE: drivers/misc/ucc_tdm.h:82:
+#define BRGC_ATB	(0x1<<13)
                 	    ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1350: FILE: drivers/misc/ucc_tdm.h:185:
+	u16 physical_num_ts;	/* physical number of timeslots in the tdm
+				   frame */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1350: FILE: drivers/misc/ucc_tdm.h:185:
+				   frame */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1376: FILE: drivers/misc/ucc_tdm.h:211:
+		void (*tdm_read)(u32 client_id, short chn_id,
+					short *pcm_buffer, short len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1378: FILE: drivers/misc/ucc_tdm.h:213:
+		void (*tdm_write)(u32 client_id, short chn_id,
+					short *pcm_buffer, short len);

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1384: FILE: drivers/misc/ucc_tdm.h:219:
+#define EFF_ACTIVE_CH ACTIVE_CH / 2

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000332518.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 67 warnings, 86 checks, 1260 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000332518.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
