CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#70: FILE: fs/afs/internal.h:608:
+extern int afs_permission(struct inode *, int, struct nameidata *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#70: FILE: fs/afs/internal.h:608:
+extern int afs_permission(struct inode *, int, struct nameidata *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#70: FILE: fs/afs/internal.h:608:
+extern int afs_permission(struct inode *, int, struct nameidata *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nameidata *' should also have an identifier name
#70: FILE: fs/afs/internal.h:608:
+extern int afs_permission(struct inode *, int, struct nameidata *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cred *' should also have an identifier name
#70: FILE: fs/afs/internal.h:608:
+extern int afs_permission(struct inode *, int, struct nameidata *,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#84: FILE: fs/afs/security.c:287:
+int afs_permission(struct inode *inode, int mask, struct nameidata *nd,
                                                                     ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#107: FILE: fs/bad_inode.c:251:
+			struct nameidata *nd, struct cred *cred)
 			                  ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#120: FILE: fs/ext3/acl.c:302:
+ext3_permission(struct inode *inode, int mask, struct nameidata *nd,
                                                                  ^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#137: FILE: fs/ext3/acl.h:61:
+extern int ext3_permission (struct inode *, int, struct nameidata *,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#137: FILE: fs/ext3/acl.h:61:
+extern int ext3_permission (struct inode *, int, struct nameidata *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#137: FILE: fs/ext3/acl.h:61:
+extern int ext3_permission (struct inode *, int, struct nameidata *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#137: FILE: fs/ext3/acl.h:61:
+extern int ext3_permission (struct inode *, int, struct nameidata *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nameidata *' should also have an identifier name
#137: FILE: fs/ext3/acl.h:61:
+extern int ext3_permission (struct inode *, int, struct nameidata *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cred *' should also have an identifier name
#137: FILE: fs/ext3/acl.h:61:
+extern int ext3_permission (struct inode *, int, struct nameidata *,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#191: FILE: fs/namei.c:265:
+		retval = inode->i_op->permission(inode, submask, nd, cred);
 		                                                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#207: FILE: fs/nfs/dir.c:1995:
+int nfs_permission(struct inode *inode, int mask, struct nameidata *nd,
                                                                     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#232: FILE: fs/proc/base.c:1489:
+				struct nameidata *nd, struct cred *cred)
 				                  ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#251: FILE: fs/proc/proc_sysctl.c:373:
+			       struct nameidata *nd, struct cred *cred)
 			                         ^^

WARNING:SPACING: Unnecessary space before function pointer arguments
#273: FILE: include/linux/fs.h:1157:
+	int (*permission) (struct inode *, int, struct nameidata *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#273: FILE: include/linux/fs.h:1157:
+	int (*permission) (struct inode *, int, struct nameidata *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#273: FILE: include/linux/fs.h:1157:
+	int (*permission) (struct inode *, int, struct nameidata *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nameidata *' should also have an identifier name
#273: FILE: include/linux/fs.h:1157:
+	int (*permission) (struct inode *, int, struct nameidata *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cred *' should also have an identifier name
#273: FILE: include/linux/fs.h:1157:
+	int (*permission) (struct inode *, int, struct nameidata *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#285: FILE: include/linux/fs.h:1576:
+extern int generic_permission(struct inode *, int, check_acl_t, struct cred *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#285: FILE: include/linux/fs.h:1576:
+extern int generic_permission(struct inode *, int, check_acl_t, struct cred *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#285: FILE: include/linux/fs.h:1576:
+extern int generic_permission(struct inode *, int, check_acl_t, struct cred *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'check_acl_t' should also have an identifier name
#285: FILE: include/linux/fs.h:1576:
+extern int generic_permission(struct inode *, int, check_acl_t, struct cred *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cred *' should also have an identifier name
#285: FILE: include/linux/fs.h:1576:
+extern int generic_permission(struct inode *, int, check_acl_t, struct cred *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#298: FILE: include/linux/nfs_fs.h:292:
+extern int nfs_permission(struct inode *, int, struct nameidata *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#298: FILE: include/linux/nfs_fs.h:292:
+extern int nfs_permission(struct inode *, int, struct nameidata *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#298: FILE: include/linux/nfs_fs.h:292:
+extern int nfs_permission(struct inode *, int, struct nameidata *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nameidata *' should also have an identifier name
#298: FILE: include/linux/nfs_fs.h:292:
+extern int nfs_permission(struct inode *, int, struct nameidata *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cred *' should also have an identifier name
#298: FILE: include/linux/nfs_fs.h:292:
+extern int nfs_permission(struct inode *, int, struct nameidata *,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#325: FILE: mm/shmem_acl.c:194:
+shmem_permission(struct inode *inode, int mask, struct nameidata *nd,
                                                                   ^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000371055.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 30 warnings, 4 checks, 206 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000371055.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
