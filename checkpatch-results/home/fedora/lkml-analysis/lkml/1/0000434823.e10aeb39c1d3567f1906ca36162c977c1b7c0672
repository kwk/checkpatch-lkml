WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
Add support for HPET timers in "standard" interrupt delivery mode as opposed

WARNING:TYPO_SPELLING: 'targetted' may be misspelled - perhaps 'targeted'?
#35: 
be targetted to different CPUs. And with this change, HPET timer need not have
   ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#155: FILE: arch/i386/kernel/hpet.c:317:
+};
+static struct hpet_dev *cpu_hpet_dev; /* per CPU ptr */

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#172: FILE: arch/i386/kernel/hpet.c:334:
+static unsigned int cpu_hpet_irq[NR_CPUS] = {[0 ... NR_CPUS-1] = -1};
                                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#173: FILE: arch/i386/kernel/hpet.c:335:
+static unsigned long assigned_irqs_map = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#187: FILE: arch/i386/kernel/hpet.c:349:
+	if (cpu > NR_CPUS)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#202: FILE: arch/i386/kernel/hpet.c:364:
+		irq = find_first_bit((void *)&avail_irqs_map,
+				sizeof(unsigned int));

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: arch/i386/kernel/hpet.c:398:
+^I             (dev->irq << HPET_TN_ROUTE_SHIFT)),$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: arch/i386/kernel/hpet.c:407:
+	if (request_irq(dev->irq, hpet_std_interrupt,
+		       IRQF_SHARED|IRQF_NOBALANCING, dev->name, dev)) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#245: FILE: arch/i386/kernel/hpet.c:407:
+		       IRQF_SHARED|IRQF_NOBALANCING, dev->name, dev)) {
 		                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#256: FILE: arch/i386/kernel/hpet.c:418:
+static void hpet_std_timer_setup(enum clock_event_mode mode,
+			struct clock_event_device *evt);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#259: FILE: arch/i386/kernel/hpet.c:421:
+static int hpet_std_next_event(unsigned long delta,
+			struct clock_event_device *evt);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: arch/i386/kernel/hpet.c:436:
+static void hpet_std_timer_setup(enum clock_event_mode mode,
+			struct clock_event_device *evt)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#297: FILE: arch/i386/kernel/hpet.c:459:
+static int hpet_std_next_event(unsigned long delta,
+			struct clock_event_device *evt)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#309: FILE: arch/i386/kernel/hpet.c:471:
+	return ((long)(hpet_readl(HPET_COUNTER) - cnt ) > 0) ? -ETIME : 0;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#319: FILE: arch/i386/kernel/hpet.c:481:
+	if (!(status & (0x1 << dev->num))) {
+		return IRQ_NONE;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#335: FILE: arch/i386/kernel/hpet.c:497:
+		printk("Spurious HPET timer interrupt on HPET timer %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#336: FILE: arch/i386/kernel/hpet.c:498:
+		printk("Spurious HPET timer interrupt on HPET timer %d\n",
+			       dev->num);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#366: FILE: arch/i386/kernel/hpet.c:528:
+static int hpet_cpu_callback(struct notifier_block *nfb,
+					unsigned long action, void *hcpu)

WARNING:MISPLACED_INIT: __cpuinitdata should be placed after hpet_cpu_notifier
#388: FILE: arch/i386/kernel/hpet.c:550:
+static struct notifier_block __cpuinitdata hpet_cpu_notifier =

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#389: FILE: arch/i386/kernel/hpet.c:551:
+static struct notifier_block __cpuinitdata hpet_cpu_notifier =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: arch/i386/kernel/hpet.c:552:
+    .notifier_call = hpet_cpu_callback,$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#405: FILE: arch/i386/kernel/hpet.c:567:
+	uint64_t hpet_freq;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cpu_hpet_dev"
#436: FILE: arch/i386/kernel/hpet.c:598:
+	if (cpu_hpet_dev == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cpu_hpet_event"
#440: FILE: arch/i386/kernel/hpet.c:602:
+	if (cpu_hpet_event == NULL)

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#443: FILE: arch/i386/kernel/hpet.c:605:
+	hdev = kzalloc(sizeof(struct hpet_dev *) * hpet_num_timers_used,
+	               GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

ERROR:CODE_INDENT: code indent should use tabs where possible
#444: FILE: arch/i386/kernel/hpet.c:606:
+^I               GFP_KERNEL);$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hdev[i]->irq < 0'
#458: FILE: arch/i386/kernel/hpet.c:620:
+		if (hpet_assign_irq(hdev[i]) || (hdev[i]->irq < 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#459: FILE: arch/i386/kernel/hpet.c:621:
+			printk(KERN_DEBUG "HPET IRQ allocation failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#467: FILE: arch/i386/kernel/hpet.c:629:
+			printk(KERN_DEBUG "HPET setup interrupt failed\n");

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#468: FILE: arch/i386/kernel/hpet.c:630:
+			hpet_num_timers_used = i-1;
 			                        ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#494: FILE: arch/i386/kernel/hpet.c:656:
+			printk("HPET interrupt test failed on timer %d. "

WARNING:SPLIT_STRING: quoted string split across lines
#495: FILE: arch/i386/kernel/hpet.c:657:
+			printk("HPET interrupt test failed on timer %d. "
+				"expected int %d, got %d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LINE_SPACING: Missing a blank line after declarations
#533: FILE: arch/i386/kernel/hpet.c:695:
+		cpumask_t saved_mask;
+		saved_mask = current->cpus_allowed;

ERROR:CODE_INDENT: code indent should use tabs where possible
#551: FILE: arch/i386/kernel/hpet.c:713:
+^I^I            HPET_Tn_CFG((hdev[i])->num));$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#611: FILE: arch/i386/kernel/hpet.c:1040:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#611: FILE: arch/i386/kernel/hpet.c:1040:
+ $

CHECK:BRACES: braces {} should be used on all arms of this statement
#612: FILE: arch/i386/kernel/hpet.c:1041:
+	if (hpet_legacy_int_enabled && (id & HPET_ID_LEGSUP))
[...]
+	else if (cpu_hpet_dev) {
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#613: FILE: arch/i386/kernel/hpet.c:1042:
+ ^I^Ihpet_enable_legacy_int();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#613: FILE: arch/i386/kernel/hpet.c:1042:
+ ^I^Ihpet_enable_legacy_int();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#613: FILE: arch/i386/kernel/hpet.c:1042:
+ ^I^Ihpet_enable_legacy_int();$

WARNING:LINE_SPACING: Missing a blank line after declarations
#616: FILE: arch/i386/kernel/hpet.c:1045:
+		int i;
+		for (i = 0; i < hpet_num_timers_used; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#618: FILE: arch/i386/kernel/hpet.c:1047:
+			struct hpet_dev *hdev;
+			hdev = per_cpu_ptr(cpu_hpet_dev, i);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#622: FILE: arch/i386/kernel/hpet.c:1051:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#622: FILE: arch/i386/kernel/hpet.c:1051:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#631: FILE: arch/i386/kernel/hpet.c:1053:
+ ^Ireturn 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#631: FILE: arch/i386/kernel/hpet.c:1053:
+ ^Ireturn 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#631: FILE: arch/i386/kernel/hpet.c:1053:
+ ^Ireturn 0;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#645: FILE: include/asm-i386/io_apic.h:149:
+static inline int io_apic_set_pci_routing(int ioapic, int pin, int irq,
+				int edge_level, int active_high_low)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#657: FILE: include/asm-i386/io_apic.h:161:
+static inline int io_apic_set_pci_routing(int ioapic, int pin, int irq,
+				int edge_level, int active_high_low)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000434823.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 21 warnings, 19 checks, 601 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000434823.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
