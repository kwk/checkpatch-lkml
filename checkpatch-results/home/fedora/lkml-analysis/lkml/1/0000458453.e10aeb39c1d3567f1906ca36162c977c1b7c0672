WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#58: FILE: drivers/i2c/algos/Kconfig:52:
+config I2C_ALGO_PMCTWI
+	tristate "I2C PMC TWI interfaces"
+	depends on I2C && PMC_MSP
+	help
+	  Implements the PMC TWI SoC algorithm for various implementations.
 
+	  Be sure to select the proper bus for your platform below.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#80: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#85: FILE: drivers/i2c/algos/i2c-algo-pmctwi.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#110: FILE: drivers/i2c/algos/i2c-algo-pmctwi.c:26:
+ *  675 Mass Ave, Cambridge, MA 02139, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#118: FILE: drivers/i2c/algos/i2c-algo-pmctwi.c:34:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: drivers/i2c/algos/i2c-algo-pmctwi.c:39:
+static int pmctwi_master_xfer(struct i2c_adapter *adap,
+				struct i2c_msg *m, int num)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#157: FILE: drivers/i2c/algos/i2c-algo-pmctwi.c:73:
+			cmd.write_data = (u8*)cmsg->buf;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#159: FILE: drivers/i2c/algos/i2c-algo-pmctwi.c:75:
+			cmd.read_data = (u8*)nmsg->buf;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#163: FILE: drivers/i2c/algos/i2c-algo-pmctwi.c:79:
+			cmd.read_data = (u8*)cmsg->buf;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#171: FILE: drivers/i2c/algos/i2c-algo-pmctwi.c:87:
+			cmd.write_data = (u8*)cmsg->buf;

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#179: FILE: drivers/i2c/algos/i2c-algo-pmctwi.c:95:
+				return -1;
+			} else {

WARNING:SPLIT_STRING: quoted string split across lines
#222: FILE: drivers/i2c/algos/i2c-algo-pmctwi.c:138:
+			dev_dbg(&adap->dev, "We lost arbitration: "
+				"Could not become bus master\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#281: FILE: drivers/i2c/algos/i2c-algo-pmctwi.c:197:
+EXPORT_SYMBOL(pmctwi_algorithm);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#290: FILE: drivers/i2c/busses/Kconfig:576:
+config I2C_PMCMSP
+	tristate "PMC MSP I2C Controller"
+	depends on I2C && PMC_MSP
+	select I2C_ALGO_PMCTWI
+	help
+	  Supports the special PMC TWI SoC chip on the MSP platform
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#316: FILE: drivers/i2c/busses/i2c-pmcmsp.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#339: FILE: drivers/i2c/busses/i2c-pmcmsp.c:24:
+ *  675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#353: FILE: drivers/i2c/busses/i2c-pmcmsp.c:38:
+#include <asm/io.h>

CHECK:BIT_MACRO: Prefer using the BIT macro
#370: FILE: drivers/i2c/busses/i2c-pmcmsp.c:55:
+#define MSP_TW_INT_STS_DONE		(1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#371: FILE: drivers/i2c/busses/i2c-pmcmsp.c:56:
+#define MSP_TW_INT_STS_LOST_ARBITRATION	(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#372: FILE: drivers/i2c/busses/i2c-pmcmsp.c:57:
+#define MSP_TW_INT_STS_NO_RESPONSE	(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#373: FILE: drivers/i2c/busses/i2c-pmcmsp.c:58:
+#define MSP_TW_INT_STS_DATA_COLLISION	(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#374: FILE: drivers/i2c/busses/i2c-pmcmsp.c:59:
+#define MSP_TW_INT_STS_BUSY		(1 << 4)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#382: FILE: drivers/i2c/busses/i2c-pmcmsp.c:67:
+#define MSP_TW_IRQ ^I^I^IMSP_INT_2WIRE$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#384: FILE: drivers/i2c/busses/i2c-pmcmsp.c:69:
+/* #define MSP_TW_IRQ ^I^I^I0 */$

WARNING:STATIC_CONST: Move const after static - use 'static const struct pmctwi_clockcfg '
#401: FILE: drivers/i2c/busses/i2c-pmcmsp.c:86:
+const static struct pmctwi_clockcfg pmctwi_defclockcfg = {

WARNING:STATIC_CONST: Move const after static - use 'static const struct pmctwi_cfg '
#412: FILE: drivers/i2c/busses/i2c-pmcmsp.c:97:
+const static struct pmctwi_cfg pmctwi_deftwicfg = {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#427: FILE: drivers/i2c/busses/i2c-pmcmsp.c:112:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around cfg->standard
#431: FILE: drivers/i2c/busses/i2c-pmcmsp.c:116:
+				&(cfg->standard));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around cfg->highspeed
#434: FILE: drivers/i2c/busses/i2c-pmcmsp.c:119:
+				&(cfg->highspeed));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#442: FILE: drivers/i2c/busses/i2c-pmcmsp.c:127:
+static void pmcmsp_set_clock_config(const struct pmctwi_clockcfg *cfg,
+					void *data)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#445: FILE: drivers/i2c/busses/i2c-pmcmsp.c:130:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around cfg->standard
#447: FILE: drivers/i2c/busses/i2c-pmcmsp.c:132:
+	pmcmsp_twi_writel(pmctwi_clock_to_reg(&(cfg->standard)),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#448: FILE: drivers/i2c/busses/i2c-pmcmsp.c:133:
+	pmcmsp_twi_writel(pmctwi_clock_to_reg(&(cfg->standard)),
+				p->iobase + MSP_TW_SF_CLK_REG_OFFSET);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around cfg->highspeed
#449: FILE: drivers/i2c/busses/i2c-pmcmsp.c:134:
+	pmcmsp_twi_writel(pmctwi_clock_to_reg(&(cfg->highspeed)),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#450: FILE: drivers/i2c/busses/i2c-pmcmsp.c:135:
+	pmcmsp_twi_writel(pmctwi_clock_to_reg(&(cfg->highspeed)),
+				p->iobase + MSP_TW_HS_CLK_REG_OFFSET);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#460: FILE: drivers/i2c/busses/i2c-pmcmsp.c:145:
+^I$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#462: FILE: drivers/i2c/busses/i2c-pmcmsp.c:147:
+	pmctwi_reg_to_cfg(pmcmsp_twi_readl(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#473: FILE: drivers/i2c/busses/i2c-pmcmsp.c:158:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#476: FILE: drivers/i2c/busses/i2c-pmcmsp.c:161:
+	pmcmsp_twi_writel(pmctwi_cfg_to_reg(cfg),
+				p->iobase + MSP_TW_CFG_REG_OFFSET);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#511: FILE: drivers/i2c/busses/i2c-pmcmsp.c:196:
+static void pmcmsp_poll_complete(struct pmcmsp_priv_data* p)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#515: FILE: drivers/i2c/busses/i2c-pmcmsp.c:200:
+^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#537: FILE: drivers/i2c/busses/i2c-pmcmsp.c:222:
+static irqreturn_t pmcmsp_interrupt(int irq, void* data)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#540: FILE: drivers/i2c/busses/i2c-pmcmsp.c:225:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#542: FILE: drivers/i2c/busses/i2c-pmcmsp.c:227:
+	u32 reason = pmcmsp_twi_readl(p->iobase + MSP_TW_INT_STS_REG_OFFSET);
+	pmcmsp_twi_writel(reason, p->iobase + MSP_TW_INT_STS_REG_OFFSET);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#545: FILE: drivers/i2c/busses/i2c-pmcmsp.c:230:
+	dev_dbg(&pmcmsp_twi_adapter.dev, "    Got interrupt 0x%08x\n",
+			reason);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#562: FILE: drivers/i2c/busses/i2c-pmcmsp.c:247:
+static enum pmctwi_xfer_result pmcmsp_do_xfer(u32 reg,
+					struct pmcmsp_priv_data *p)

CHECK:BRACES: braces {} should be used on all arms of this statement
#566: FILE: drivers/i2c/busses/i2c-pmcmsp.c:251:
+	if (p->irq) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#567: FILE: drivers/i2c/busses/i2c-pmcmsp.c:252:
+		unsigned long timeleft = wait_for_completion_timeout(

CHECK:BRACES: Unbalanced braces around else statement
#575: FILE: drivers/i2c/busses/i2c-pmcmsp.c:260:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#595: FILE: drivers/i2c/busses/i2c-pmcmsp.c:280:
+static enum pmctwi_xfer_result pmcmsp_xfer_cmd(struct pmctwi_cmd *cmd,
+						void *data)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#601: FILE: drivers/i2c/busses/i2c-pmcmsp.c:286:
+	write_data = (u64*)cmd->write_data;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#602: FILE: drivers/i2c/busses/i2c-pmcmsp.c:287:
+	read_data = (u64*)cmd->read_data;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#608: FILE: drivers/i2c/busses/i2c-pmcmsp.c:293:
+		printk(KERN_ERR "%s: Cannot transfer less than 1 byte\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#609: FILE: drivers/i2c/busses/i2c-pmcmsp.c:294:
+^I^I        __FUNCTION__);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#609: FILE: drivers/i2c/busses/i2c-pmcmsp.c:294:
+		printk(KERN_ERR "%s: Cannot transfer less than 1 byte\n",
+		        __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#609: FILE: drivers/i2c/busses/i2c-pmcmsp.c:294:
+		        __FUNCTION__);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd->read_len > MSP_MAX_BYTES_PER_RW'
#613: FILE: drivers/i2c/busses/i2c-pmcmsp.c:298:
+	if ((cmd->read_len > MSP_MAX_BYTES_PER_RW) ||
+	    (cmd->write_len > MSP_MAX_BYTES_PER_RW)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd->write_len > MSP_MAX_BYTES_PER_RW'
#613: FILE: drivers/i2c/busses/i2c-pmcmsp.c:298:
+	if ((cmd->read_len > MSP_MAX_BYTES_PER_RW) ||
+	    (cmd->write_len > MSP_MAX_BYTES_PER_RW)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#615: FILE: drivers/i2c/busses/i2c-pmcmsp.c:300:
+		printk(KERN_ERR "%s: Cannot transfer more than %d bytes\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#616: FILE: drivers/i2c/busses/i2c-pmcmsp.c:301:
+		printk(KERN_ERR "%s: Cannot transfer more than %d bytes\n",
+			__FUNCTION__, MSP_MAX_BYTES_PER_RW);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#616: FILE: drivers/i2c/busses/i2c-pmcmsp.c:301:
+			__FUNCTION__, MSP_MAX_BYTES_PER_RW);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd->type == PMCTWI_CMD_WRITE'
#624: FILE: drivers/i2c/busses/i2c-pmcmsp.c:309:
+	if ((cmd->type == PMCTWI_CMD_WRITE) ||
+	    (cmd->type == PMCTWI_CMD_WRITE_READ)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd->type == PMCTWI_CMD_WRITE_READ'
#624: FILE: drivers/i2c/busses/i2c-pmcmsp.c:309:
+	if ((cmd->type == PMCTWI_CMD_WRITE) ||
+	    (cmd->type == PMCTWI_CMD_WRITE_READ)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#627: FILE: drivers/i2c/busses/i2c-pmcmsp.c:312:
+		u64 tmp = be64_to_cpu(*write_data);
+		tmp >>= (8 - cmd->write_len) * 8;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#630: FILE: drivers/i2c/busses/i2c-pmcmsp.c:315:
+		pmcmsp_twi_writel((u32)(tmp & 0x00000000ffffffffLL),
+				p->iobase + MSP_TW_DAT_0_REG_OFFSET);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#633: FILE: drivers/i2c/busses/i2c-pmcmsp.c:318:
+			pmcmsp_twi_writel((u32)(tmp >> 32),
+					p->iobase + MSP_TW_DAT_1_REG_OFFSET);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd->type == PMCTWI_CMD_READ'
#638: FILE: drivers/i2c/busses/i2c-pmcmsp.c:323:
+	if ((cmd->type == PMCTWI_CMD_READ) ||
+	    (cmd->type == PMCTWI_CMD_WRITE_READ)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd->type == PMCTWI_CMD_WRITE_READ'
#638: FILE: drivers/i2c/busses/i2c-pmcmsp.c:323:
+	if ((cmd->type == PMCTWI_CMD_READ) ||
+	    (cmd->type == PMCTWI_CMD_WRITE_READ)) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#641: FILE: drivers/i2c/busses/i2c-pmcmsp.c:326:
+		u64 rmsk = ~(0xffffffffffffffffLL << (cmd->read_len*8));
 		                                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#649: FILE: drivers/i2c/busses/i2c-pmcmsp.c:334:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#654: FILE: drivers/i2c/busses/i2c-pmcmsp.c:339:
+^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#661: FILE: drivers/i2c/busses/i2c-pmcmsp.c:346:
+	.data			= (void*)&pmcmsp_priv,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pmcmsp_priv.iobase"
#680: FILE: drivers/i2c/busses/i2c-pmcmsp.c:365:
+	if (pmcmsp_priv.iobase == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#683: FILE: drivers/i2c/busses/i2c-pmcmsp.c:368:
+^Iinit_completion(&pmcmsp_priv.wait); $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#701: FILE: drivers/i2c/busses/i2c-pmcmsp.c:386:
+			pmcmsp_twi_writel(MSP_TW_INT_STS_DONE,
+					pmcmsp_priv.iobase +

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#704: FILE: drivers/i2c/busses/i2c-pmcmsp.c:389:
+			printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#706: FILE: drivers/i2c/busses/i2c-pmcmsp.c:391:
+				"Could not assign TWI IRQ handler "
+				"to irq %d (continuing with poll)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#715: FILE: drivers/i2c/busses/i2c-pmcmsp.c:400:
+	printk(KERN_WARNING "Registering MSP7120 I2C adapter\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#724: FILE: drivers/i2c/busses/i2c-pmcmsp.c:409:
+		pmcmsp_twi_writel(0,
+			pmcmsp_priv.iobase + MSP_TW_INT_MSK_REG_OFFSET);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#741: FILE: include/linux/i2c-algo-pmctwi.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#766: FILE: include/linux/i2c-algo-pmctwi.h:26:
+ *  675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#788: FILE: include/linux/i2c-algo-pmctwi.h:48:
+static inline u32 pmctwi_clock_to_reg(const struct pmctwi_clock *clock) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#793: FILE: include/linux/i2c-algo-pmctwi.h:53:
+static inline void pmctwi_reg_to_clock(u32 reg, struct pmctwi_clock *clock) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#813: FILE: include/linux/i2c-algo-pmctwi.h:73:
+static inline u32 pmctwi_cfg_to_reg(const struct pmctwi_cfg *cfg) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#822: FILE: include/linux/i2c-algo-pmctwi.h:82:
+static inline void pmctwi_reg_to_cfg(u32 reg, struct pmctwi_cfg *cfg) {

ERROR:POINTER_LOCATION: "foo*bar" should be "foo *bar"
#837: FILE: include/linux/i2c-algo-pmctwi.h:97:
+	u8*write_data;	/* Buffer of characters to send */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#860: FILE: include/linux/i2c-algo-pmctwi.h:120:
+	void (*set_clock_config)(const struct pmctwi_clockcfg *cfg,
+					void *data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#870: FILE: include/linux/i2c-algo-pmctwi.h:130:
+	enum pmctwi_xfer_result (*xfer_cmd)(struct pmctwi_cmd *cmd,
+						void *data);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000458453.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 28 errors, 23 warnings, 37 checks, 789 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000458453.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
