WARNING:TYPO_SPELLING: 'skiped' may be misspelled - perhaps 'skipped'?
#114: FILE: lib/vsprintf.c:1076:
+ * is skiped.
       ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#159: FILE: lib/vsprintf.c:1121:
+		if (*fmt == '-' || *fmt == '+' || *fmt == ' '
+				|| *fmt == '#' || *fmt == '0')

CHECK:BRACES: braces {} should be used on all arms of this statement
#163: FILE: lib/vsprintf.c:1125:
+		if (isdigit(*fmt))
[...]
+		else if (*fmt == '*') {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#174: FILE: lib/vsprintf.c:1136:
+			if (isdigit(*fmt))
[...]
+			else if (*fmt == '*') {
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#204: FILE: lib/vsprintf.c:1166:
+			size_t len;
+			if ((unsigned long)save_str > (unsigned long)-PAGE_SIZE

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#205: FILE: lib/vsprintf.c:1167:
+			if ((unsigned long)save_str > (unsigned long)-PAGE_SIZE
+					|| (unsigned long)save_str < PAGE_SIZE)

WARNING:LINE_SPACING: Missing a blank line after declarations
#222: FILE: lib/vsprintf.c:1184:
+			void *skip_arg;
+			if (qualifier == 'l')

CHECK:SPACING: No space is necessary after a cast
#299: FILE: lib/vsprintf.c:1261:
+	if (unlikely((int) size < 0)) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#302: FILE: lib/vsprintf.c:1264:
+		static char warn = 1;
+		WARN_ON(warn);

CHECK:BRACES: braces {} should be used on all arms of this statement
#363: FILE: lib/vsprintf.c:1325:
+		if (isdigit(*fmt))
[...]
+		else if (*fmt == '*') {
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#379: FILE: lib/vsprintf.c:1341:
+			if (isdigit(*fmt))
[...]
+			else if (*fmt == '*') {
[...]

CHECK:SPACING: No space is necessary after a cast
#414: FILE: lib/vsprintf.c:1376:
+			c = (unsigned char) get_arg(char);

WARNING:LINE_SPACING: Missing a blank line after declarations
#428: FILE: lib/vsprintf.c:1390:
+			size_t len = strlen(str_arg);
+			args += len + 1;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#430: FILE: lib/vsprintf.c:1392:
+			str = string(str, end, (char *)str_arg, field_width,
+					precision, flags);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#435: FILE: lib/vsprintf.c:1397:
+			str = pointer(fmt+1, str, end, get_arg(void *),
 			                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#436: FILE: lib/vsprintf.c:1398:
+			str = pointer(fmt+1, str, end, get_arg(void *),
+					field_width, precision, flags);

CHECK:BRACES: braces {} should be used on all arms of this statement
#482: FILE: lib/vsprintf.c:1444:
+		if (qualifier == 'L')
[...]
+		else if (qualifier == 'l') {
[...]
+		} else if (qualifier == 'Z' || qualifier == 'z') {
[...]
+		} else if (qualifier == 't') {
[...]
+		} else if (qualifier == 'h') {
[...]
+		} else {
[...]

CHECK:SPACING: No space is necessary after a cast
#487: FILE: lib/vsprintf.c:1449:
+				num = (signed long) num;

CHECK:SPACING: No space is necessary after a cast
#493: FILE: lib/vsprintf.c:1455:
+			num = (unsigned short) get_arg(short);

CHECK:SPACING: No space is necessary after a cast
#495: FILE: lib/vsprintf.c:1457:
+				num = (signed short) num;

CHECK:SPACING: No space is necessary after a cast
#499: FILE: lib/vsprintf.c:1461:
+				num = (signed int) num;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#502: FILE: lib/vsprintf.c:1464:
+		str = number(str, end, num, base,
+				field_width, precision, flags);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000159201.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 17 checks, 476 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000159201.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
