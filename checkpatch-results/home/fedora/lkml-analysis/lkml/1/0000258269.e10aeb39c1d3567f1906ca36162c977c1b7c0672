WARNING:TYPO_SPELLING: 'accesible' may be misspelled - perhaps 'accessible'?
#37: 
themselves to directly accesible memory just to not have to deal with
                       ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#62: FILE: include/linux/scatterlist.h:14:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#63: FILE: include/linux/scatterlist.h:15:
 };
+struct sg_iterator {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#109: FILE: lib/scatterlist.c:311:
+	iter->sg =3D sgl;
 	         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#110: FILE: lib/scatterlist.c:312:
+	iter->nents =3D nents;
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#111: FILE: lib/scatterlist.c:313:
+	iter->offset =3D 0;
 	             ^

WARNING:TYPO_SPELLING: 'invokation' may be misspelled - perhaps 'invocation'?
#122: FILE: lib/scatterlist.c:324:
+ *    The main worker of sg list iteration. Each invokation will
                                                  ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'invokation' may be misspelled - perhaps 'invocation'?
#129: FILE: lib/scatterlist.c:331:
+ *    each invokation, allowing separate processing of different
            ^^^^^^^^^^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#147: FILE: lib/scatterlist.c:349:
+	if (iter->nents =3D=3D 0)
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#147: FILE: lib/scatterlist.c:349:
+	if (iter->nents =3D=3D 0)
 	                   ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#147: FILE: lib/scatterlist.c:349:
+	if (iter->nents =3D=3D 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#150: FILE: lib/scatterlist.c:352:
+	sg_offset =3D iter->sg->offset + iter->offset;
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#151: FILE: lib/scatterlist.c:353:
+	sg_remain =3D iter->sg->length - iter->offset;
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#153: FILE: lib/scatterlist.c:355:
+	n =3D sg_offset / PAGE_SIZE;
 	  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#154: FILE: lib/scatterlist.c:356:
+	page =3D nth_page(sg_page(iter->sg), n);
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#156: FILE: lib/scatterlist.c:358:
+	buflen =3D PAGE_SIZE - (sg_offset % PAGE_SIZE);
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#158: FILE: lib/scatterlist.c:360:
+		buflen =3D sg_remain;
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#160: FILE: lib/scatterlist.c:362:
+	buf =3D kmap_atomic(page, KM_BIO_SRC_IRQ);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#161: FILE: lib/scatterlist.c:363:
+	result =3D fn(buf, buflen, page, priv);
 	       ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#166: FILE: lib/scatterlist.c:368:
+	iter->offset +=3D result;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#168: FILE: lib/scatterlist.c:370:
+	if (iter->offset =3D=3D iter->sg->length) {
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#168: FILE: lib/scatterlist.c:370:
+	if (iter->offset =3D=3D iter->sg->length) {
 	                    ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#168: FILE: lib/scatterlist.c:370:
+	if (iter->offset =3D=3D iter->sg->length) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#171: FILE: lib/scatterlist.c:373:
+			iter->sg =3D sg_next(iter->sg);
 			         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#172: FILE: lib/scatterlist.c:374:
+		iter->offset =3D 0;
 		             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#188: FILE: lib/scatterlist.c:390:
+	struct sg_copy_state *st =3D priv;
 	                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#191: FILE: lib/scatterlist.c:393:
+		buflen =3D st->buflen - st->offset;
 		       ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#193: FILE: lib/scatterlist.c:395:
+	if (st->to_buffer)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#195: FILE: lib/scatterlist.c:397:
+	else {

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#200: FILE: lib/scatterlist.c:402:
+	st->offset +=3D buflen;
 	           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#220: FILE: lib/scatterlist.c:425:
+	struct sg_copy_state state;
+	sg_iter_init(&iter, sgl, nents);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#260: FILE: lib/scatterlist.c:426:
+	state.buf =3D buf;
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#261: FILE: lib/scatterlist.c:427:
+	state.offset =3D 0;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#262: FILE: lib/scatterlist.c:428:
+	state.buflen =3D buflen;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#263: FILE: lib/scatterlist.c:429:
+	state.to_buffer =3D to_buffer;
 	                ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#268: FILE: lib/scatterlist.c:430:
+	while (sg_iterate(&iter, sg_copy_worker, &state));

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000258269.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 29 errors, 4 warnings, 3 checks, 216 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000258269.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
