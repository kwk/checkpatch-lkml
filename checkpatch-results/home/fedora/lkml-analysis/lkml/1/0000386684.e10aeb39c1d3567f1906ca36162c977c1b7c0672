WARNING:TYPO_SPELLING: 'backupped' may be misspelled - perhaps 'backed-up'?
#116: 
   backupped before kexec and restored after jumping back.
   ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#141: 
CONFIG_RELOCATABLE=y # not needed strictly, but it is more convenient with it

WARNING:TYPO_SPELLING: 'refered' may be misspelled - perhaps 'referred'?
#158: 
   refered as /dev/hda, /dev/hdb, /dev/hdc in following text. This is
   ^^^^^^^

WARNING:TYPO_SPELLING: 'hda' may be misspelled - perhaps 'had'?
#158: 
   refered as /dev/hda, /dev/hdb, /dev/hdc in following text. This is
                   ^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#251: FILE: kexec/arch/i386/crashdump-x86.c:438:
+	 * in cmdline. Ensure 1K alignment*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#252: FILE: kexec/arch/i386/crashdump-x86.c:439:
+	if (addr%align)
 	        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#254: FILE: kexec/arch/i386/crashdump-x86.c:441:
+	addr = addr/align;
 	           ^

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#297: FILE: kexec/kexec-syscall.h:70:
+	return (long) syscall(__NR_reboot, LINUX_REBOOT_MAGIC1, LINUX_REBOOT_MAGIC2, LINUX_REBOOT_CMD_KJUMP_TO, 0);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#297: FILE: kexec/kexec-syscall.h:70:
+	return (long) syscall(__NR_reboot, LINUX_REBOOT_MAGIC1, LINUX_REBOOT_MAGIC2, LINUX_REBOOT_CMD_KJUMP_TO, 0);

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#302: FILE: kexec/kexec-syscall.h:75:
+	return (long) syscall(__NR_reboot, LINUX_REBOOT_MAGIC1, LINUX_REBOOT_MAGIC2, LINUX_REBOOT_CMD_KJUMP_BACK, 0);

CHECK:SPACING: No space is necessary after a cast
#302: FILE: kexec/kexec-syscall.h:75:
+	return (long) syscall(__NR_reboot, LINUX_REBOOT_MAGIC1, LINUX_REBOOT_MAGIC2, LINUX_REBOOT_CMD_KJUMP_BACK, 0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#349: FILE: kexec/kexec.c:773:
+ ^I       " -j, --jump-to        Jump to a currently loaded kernel.\n"$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#349: FILE: kexec/kexec.c:773:
+ ^I       " -j, --jump-to        Jump to a currently loaded kernel.\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: kexec/kexec.c:773:
+ ^I       " -j, --jump-to        Jump to a currently loaded kernel.\n"$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'kexec_crash_loaded', this function's name, in a string
#363: FILE: kexec/kexec.c:810:
+	fp = fopen("/sys/kernel/kexec_crash_loaded", "r");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fp"
#364: FILE: kexec/kexec.c:811:
+	if (fp == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'result == 0'
#410: FILE: kexec/kexec.c:999:
+	if ((result == 0) && do_jump_to && !kexec_crash_loaded()) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BRACES: braces {} are not necessary for single statement blocks
#410: FILE: kexec/kexec.c:999:
+	if ((result == 0) && do_jump_to && !kexec_crash_loaded()) {
+		die("Nothing has been loaded!\n");
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'result == 0'
#420: FILE: kexec/kexec.c:1015:
+	if ((result == 0) && do_jump_to) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#420: FILE: kexec/kexec.c:1015:
+	if ((result == 0) && do_jump_to) {
+		result = my_jump_to();
+	}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'result == 0'
#423: FILE: kexec/kexec.c:1018:
+	if ((result == 0) && do_jump_back) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#423: FILE: kexec/kexec.c:1018:
+	if ((result == 0) && do_jump_back) {
+		result = my_jump_back();
+	}

ERROR:CODE_INDENT: code indent should use tabs where possible
#446: FILE: kexec/kexec.h:177:
+ ^I{ "jump-to",^I^I0, 0, OPT_JUMP_TO }, \$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#446: FILE: kexec/kexec.h:177:
+ ^I{ "jump-to",^I^I0, 0, OPT_JUMP_TO }, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#446: FILE: kexec/kexec.h:177:
+ ^I{ "jump-to",^I^I0, 0, OPT_JUMP_TO }, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#447: FILE: kexec/kexec.h:178:
+ ^I{ "jump-back",^I^I0, 0, OPT_JUMP_BACK }, \$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#447: FILE: kexec/kexec.h:178:
+ ^I{ "jump-back",^I^I0, 0, OPT_JUMP_BACK }, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#447: FILE: kexec/kexec.h:178:
+ ^I{ "jump-back",^I^I0, 0, OPT_JUMP_BACK }, \$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000386684.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 17 warnings, 8 checks, 194 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000386684.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
