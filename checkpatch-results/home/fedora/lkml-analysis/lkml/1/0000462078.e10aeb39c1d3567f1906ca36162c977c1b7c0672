WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
reclaimed.  Basically, it works by breaking the list in zone->free_area list

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#50: FILE: include/linux/mmzone.h:32:
+#define for_each_migratetype_order(order, type) \
+	for (order = 0; order < MAX_ORDER; order++) \
+		for (type = 0; type < MIGRATE_TYPES; type++)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'order' - possible side-effects?
#50: FILE: include/linux/mmzone.h:32:
+#define for_each_migratetype_order(order, type) \
+	for (order = 0; order < MAX_ORDER; order++) \
+		for (type = 0; type < MIGRATE_TYPES; type++)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#86: FILE: mm/page_alloc.c:147:
+	set_pageblock_flags_group(page, (unsigned long)migratetype,
+					PB_migrate, PB_migrate_end);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#129: FILE: mm/page_alloc.c:454:
+	list_add(&page->lru,
+		&zone->free_area[order].free_list[migratetype]);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#160: FILE: mm/page_alloc.c:662:
+static int fallbacks[MIGRATE_TYPES][MIGRATE_TYPES-1] = {
                                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#167: FILE: mm/page_alloc.c:669:
+static struct page *__rmqueue_fallback(struct zone *zone, int order,
+						int start_migratetype)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#169: FILE: mm/page_alloc.c:671:
+	struct free_area * area;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#175: FILE: mm/page_alloc.c:677:
+	for (current_order = MAX_ORDER-1; current_order >= order;
 	                              ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around zone->free_area[current_order]
#180: FILE: mm/page_alloc.c:682:
+			area = &(zone->free_area[current_order]);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: mm/page_alloc.c:687:
+			page = list_entry(area->free_list[migratetype].next,
+					struct page, lru);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#199: FILE: mm/page_alloc.c:701:
+			__mod_zone_page_state(zone, NR_FREE_PAGES,
+							-(1UL << order));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: mm/page_alloc.c:705:
+				set_pageblock_migratetype(page,
+							start_migratetype);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: mm/page_alloc.c:720:
+static struct page *__rmqueue(struct zone *zone, unsigned int order,
+						int migratetype)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around zone->free_area[current_order]
#229: FILE: mm/page_alloc.c:728:
+		area = &(zone->free_area[current_order]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#235: FILE: mm/page_alloc.c:733:
+		page = list_entry(area->free_list[migratetype].next,
+							struct page, lru);

WARNING:LINE_SPACING: Missing a blank line after declarations
#350: FILE: mm/page_alloc.c:2196:
+	int order, t;
+	for_each_migratetype_order(order, t) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000462078.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 2 warnings, 13 checks, 289 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000462078.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
