WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#36: FILE: scripts/mod/modpost.c:1:
+/* Postprocess module symbol versions and do various other module checks.

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#64: FILE: scripts/mod/modpost.c:36:
+static int warn_missing_modules = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:LINE_SPACING: Missing a blank line after declarations
#77: FILE: scripts/mod/modpost.c:119:
+	char *p = strrchr(s, '/');
+	if (p)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#182: FILE: scripts/mod/modpost.c:262:
+	for (s = nsallowhash[tdb_hash(name)%NSALLOW_HASH_SIZE]; s; s=s->next) {
 	                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#182: FILE: scripts/mod/modpost.c:262:
+	for (s = nsallowhash[tdb_hash(name)%NSALLOW_HASH_SIZE]; s; s=s->next) {
 	                                                            ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#193: FILE: scripts/mod/modpost.c:273:
+	for (s = nsallowhash[tdb_hash(name)%NSALLOW_HASH_SIZE]; s; s=s->next) {
 	                                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#193: FILE: scripts/mod/modpost.c:273:
+	for (s = nsallowhash[tdb_hash(name)%NSALLOW_HASH_SIZE]; s; s=s->next) {
 	                                                            ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#205: FILE: scripts/mod/modpost.c:285:
+	unsigned len;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#227: FILE: scripts/mod/modpost.c:346:
+/* Check if all the name space that allows referencing the symbol's
+   namespace is in the same module as the export. This makes sure a

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#229: FILE: scripts/mod/modpost.c:348:
+   this too) */

WARNING:LINE_SPACING: Missing a blank line after declarations
#234: FILE: scripts/mod/modpost.c:353:
+	struct nsallow *nsa = find_nsallow_name(namespace);
+	if (!nsa) {

WARNING:SPLIT_STRING: quoted string split across lines
#236: FILE: scripts/mod/modpost.c:355:
+		warn("%s: namespace %s used for export `%s', but no module "
+		     "for it allowed\n", s->module->name, namespace, s->name);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#247: FILE: scripts/mod/modpost.c:366:
+	merror("No module allowed for namespace %s in %s exporting %s\n",
+		namespace,

WARNING:LINE_SPACING: Missing a blank line after declarations
#256: FILE: scripts/mod/modpost.c:375:
+	struct nsallow *nsa;
+	for (i = 0; i < NSALLOW_HASH_SIZE; i++) {

WARNING:SPLIT_STRING: quoted string split across lines
#260: FILE: scripts/mod/modpost.c:379:
+				warn("%s: namespace %s allowed for module %s, "
+				     "but no exports using it\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#272: FILE: scripts/mod/modpost.c:391:
+	const char *s = strchr(*name, NS_SEPARATOR);
+	if (!s)

WARNING:SPLIT_STRING: quoted string split across lines
#309: FILE: scripts/mod/modpost.c:425:
 			warn("%s: '%s' exported twice. Previous export "
+			     "was in %s%s\n", mod->name, oname,

WARNING:SPLIT_STRING: quoted string split across lines
#314: FILE: scripts/mod/modpost.c:430:
+				warn("%s: New namespace '%s' of '%s' doesn't "
+				     "match existing namespace '%s'\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: scripts/mod/modpost.c:462:
+^I^I    ^I " module %.*s\n", orig->name, namespace, sep, name);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#346: FILE: scripts/mod/modpost.c:462:
+^I^I    ^I " module %.*s\n", orig->name, namespace, sep, name);$

WARNING:SPLIT_STRING: quoted string split across lines
#346: FILE: scripts/mod/modpost.c:462:
+			warn("%s: Namespace allow for %s references unknown"
+		    	 " module %.*s\n", orig->name, namespace, sep, name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#364: FILE: scripts/mod/modpost.c:480:
+		warn("%s: Namespace allow '%s' incorrectly formatted\n",
+			orig->name, name);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#397: FILE: scripts/mod/modpost.c:671:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#399: FILE: scripts/mod/modpost.c:673:
+static void handle_nsallow(struct module *mod, struct elf_info *info,
+			       Elf_Sym *sym, const char *symname)

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Sym>
#399: FILE: scripts/mod/modpost.c:673:
+			       Elf_Sym *sym, const char *symname)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#407: FILE: scripts/mod/modpost.c:681:
+		if (!strncmp(symname, NSALLOW_PFX, sizeof(NSALLOW_PFX)-1))
 		                                                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#438: FILE: scripts/mod/modpost.c:751:
+			struct symbol *s;
+			s = sym_add_exported(symname + strlen(KSYMTAB_PFX), mod,

WARNING:LINE_SPACING: Missing a blank line after declarations
#450: FILE: scripts/mod/modpost.c:1499:
+	char m[strlen(modname) + 1];
+	strcpy(m, modname);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "mod"
#454: FILE: scripts/mod/modpost.c:1503:
+	assert(mod != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPLIT_STRING: quoted string split across lines
#500: FILE: scripts/mod/modpost.c:1651:
+		merror("%s: module not allowed to reference symbol "
+		       "'%.*s' in namespace %s\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#538: FILE: scripts/mod/modpost.c:1718:
+^I^I^I^I^I ^Is->namespace ?: "",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#538: FILE: scripts/mod/modpost.c:1718:
+^I^I^I^I^I ^Is->namespace ?: "",$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#538: FILE: scripts/mod/modpost.c:1718:
+					warn("\"%s%s%s\" [%s.ko] undefined!\n",
+					 	s->namespace ?: "",

ERROR:CODE_INDENT: code indent should use tabs where possible
#544: FILE: scripts/mod/modpost.c:1723:
+^I^I^I^I^I ^Is->namespace ?: "",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#544: FILE: scripts/mod/modpost.c:1723:
+^I^I^I^I^I ^Is->namespace ?: "",$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#544: FILE: scripts/mod/modpost.c:1723:
+					merror("\"%s%s%s\" [%s.ko] undefined!\n",
+					 	s->namespace ?: "",

WARNING:LINE_SPACING: Missing a blank line after declarations
#582: FILE: scripts/mod/modpost.c:1981:
+		char s[strlen(argv[c]) + 1];
+		strcpy(s, argv[c]);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000354812.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 20 warnings, 11 checks, 544 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000354812.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
