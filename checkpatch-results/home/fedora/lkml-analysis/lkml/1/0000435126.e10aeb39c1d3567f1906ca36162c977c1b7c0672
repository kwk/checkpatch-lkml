WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#40: FILE: include/linux/kmon.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#41: FILE: include/linux/kmon.h:2:
+ *  include/linux/kmon.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#54: FILE: include/linux/kmon.h:15:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kmon_notifier *' should also have an identifier name
#70: FILE: include/linux/kmon.h:31:
+	void (*write)(struct kmon_notifier *, const struct kmon_buffer *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct kmon_buffer *' should also have an identifier name
#70: FILE: include/linux/kmon.h:31:
+	void (*write)(struct kmon_notifier *, const struct kmon_buffer *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#70: FILE: include/linux/kmon.h:31:
+	void (*write)(struct kmon_notifier *, const struct kmon_buffer *, int);

CHECK:SPACING: No space is necessary after a cast
#89: FILE: include/linux/kmon.h:50:
+	*buf++ = (unsigned char) v;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#90: FILE: include/linux/kmon.h:51:
+	*buf = (unsigned char) (v >> 8);

CHECK:SPACING: No space is necessary after a cast
#95: FILE: include/linux/kmon.h:56:
+	*buf++ = (unsigned char) v;

CHECK:SPACING: No space is necessary after a cast
#96: FILE: include/linux/kmon.h:57:
+	*buf++ = (unsigned char) (v >> 8);

CHECK:SPACING: No space is necessary after a cast
#97: FILE: include/linux/kmon.h:58:
+	*buf++ = (unsigned char) (v >> 16);

CHECK:SPACING: No space is necessary after a cast
#98: FILE: include/linux/kmon.h:59:
+	*buf = (unsigned char) (v >> 24);

CHECK:SPACING: No space is necessary after a cast
#103: FILE: include/linux/kmon.h:64:
+	*buf++ = (unsigned char) v;

CHECK:SPACING: No space is necessary after a cast
#104: FILE: include/linux/kmon.h:65:
+	*buf++ = (unsigned char) (v >> 8);

CHECK:SPACING: No space is necessary after a cast
#105: FILE: include/linux/kmon.h:66:
+	*buf++ = (unsigned char) (v >> 16);

CHECK:SPACING: No space is necessary after a cast
#106: FILE: include/linux/kmon.h:67:
+	*buf++ = (unsigned char) (v >> 24);

CHECK:SPACING: No space is necessary after a cast
#107: FILE: include/linux/kmon.h:68:
+	*buf++ = (unsigned char) (v >> 32);

CHECK:SPACING: No space is necessary after a cast
#108: FILE: include/linux/kmon.h:69:
+	*buf++ = (unsigned char) (v >> 40);

CHECK:SPACING: No space is necessary after a cast
#109: FILE: include/linux/kmon.h:70:
+	*buf++ = (unsigned char) (v >> 48);

CHECK:SPACING: No space is necessary after a cast
#110: FILE: include/linux/kmon.h:71:
+	*buf = (unsigned char) (v >> 56);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#122: FILE: drivers/char/kmon-dev.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#123: FILE: drivers/char/kmon-dev.c:2:
+ *  drivers/char/kmon-dev.c

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#144: FILE: drivers/char/kmon-dev.c:23:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#145: FILE: drivers/char/kmon-dev.c:24:
+#include <asm/uaccess.h>

CHECK:BIT_MACRO: Prefer using the BIT macro
#151: FILE: drivers/char/kmon-dev.c:30:
+#define KMON_FL_OVERFLOW	(1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#155: FILE: drivers/char/kmon-dev.c:34:
+	struct mutex mtx;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rng->data"
#165: FILE: drivers/char/kmon-dev.c:44:
+	if (rng->data == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#167: FILE: drivers/char/kmon-dev.c:46:
+	rng->head = rng->tail = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#185: FILE: drivers/char/kmon-dev.c:64:
+	if (waitqueue_active(&ctx->wqh))

CHECK:SPACING: No space is necessary after a cast
#195: FILE: drivers/char/kmon-dev.c:74:
+	ctx = (struct kmon_ctx *) kzalloc(sizeof(struct kmon_ctx), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#195: FILE: drivers/char/kmon-dev.c:74:
+	ctx = (struct kmon_ctx *) kzalloc(sizeof(struct kmon_ctx), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ctx)...) over kzalloc(sizeof(struct kmon_ctx)...)
#195: FILE: drivers/char/kmon-dev.c:74:
+	ctx = (struct kmon_ctx *) kzalloc(sizeof(struct kmon_ctx), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ctx"
#196: FILE: drivers/char/kmon-dev.c:75:
+	if (ctx == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ctx->knfy.write"
#215: FILE: drivers/char/kmon-dev.c:94:
+	if (ctx->knfy.write != NULL)

CHECK:SPACING: No space is necessary after a cast
#275: FILE: drivers/char/kmon-dev.c:154:
+		for (i = 0, size = 0; size < (unsigned long) count &&

CHECK:SPACING: No space is necessary after a cast
#277: FILE: drivers/char/kmon-dev.c:156:
+			bcnt = min(kbuf[i].size, (unsigned long) count - size);

CHECK:SPACING: No space is necessary after a cast
#284: FILE: drivers/char/kmon-dev.c:163:
+		res = (ssize_t) size;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ctx->rng.data"
#303: FILE: drivers/char/kmon-dev.c:182:
+		if (ctx->rng.data != NULL) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#304: FILE: drivers/char/kmon-dev.c:183:
+			if (ctx->knfy.write == NULL) {
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ctx->knfy.write"
#304: FILE: drivers/char/kmon-dev.c:183:
+			if (ctx->knfy.write == NULL) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#305: FILE: drivers/char/kmon-dev.c:184:
+				ctx->rng.head = ctx->rng.tail = 0;

CHECK:BRACES: Unbalanced braces around else statement
#310: FILE: drivers/char/kmon-dev.c:189:
+			} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#318: FILE: drivers/char/kmon-dev.c:197:
+		if (ctx->knfy.write != NULL) {
[...]
+		} else
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ctx->knfy.write"
#318: FILE: drivers/char/kmon-dev.c:197:
+		if (ctx->knfy.write != NULL) {

CHECK:BRACES: Unbalanced braces around else statement
#322: FILE: drivers/char/kmon-dev.c:201:
+		} else

CHECK:SPACING: No space is necessary after a cast
#328: FILE: drivers/char/kmon-dev.c:207:
+		if (copy_from_user(&size, (void __user *) arg, sizeof(size)))

CHECK:BRACES: braces {} should be used on all arms of this statement
#331: FILE: drivers/char/kmon-dev.c:210:
+		if (ctx->knfy.write == NULL) {
[...]
+		} else
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ctx->knfy.write"
#331: FILE: drivers/char/kmon-dev.c:210:
+		if (ctx->knfy.write == NULL) {

CHECK:BRACES: Unbalanced braces around else statement
#335: FILE: drivers/char/kmon-dev.c:214:
+		} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#368: FILE: drivers/char/kmon-dev.c:247:
+		printk(KERN_ERR KMON " - unable to register misc device.\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#395: FILE: kernel/kmon.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#396: FILE: kernel/kmon.c:2:
+ *  kernel/kmon.c

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#423: FILE: kernel/kmon.c:29:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#424: FILE: kernel/kmon.c:30:
+#include <asm/uaccess.h>

CHECK:SPACING: No space is necessary after a cast
#429: FILE: kernel/kmon.c:35:
+#define CPUBUF_CPU(p)		((int) ((p) - cpubuf))

WARNING:MEMORY_BARRIER: memory barrier without comment
#463: FILE: kernel/kmon.c:69:
+	smp_wmb();

CHECK:SPACING: No space is necessary after a cast
#493: FILE: kernel/kmon.c:99:
+	buf[0] = (unsigned char) cpu;

CHECK:SPACING: No space is necessary after a cast
#495: FILE: kernel/kmon.c:101:
+	kmon_put16(buf + 9, (u16) size);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cpub->rng.data"
#510: FILE: kernel/kmon.c:116:
+	if (cpub->rng.data != NULL) {

CHECK:SPACING: No space is necessary after a cast
#514: FILE: kernel/kmon.c:120:
+		kbuf[1].data = (void *) data;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cpub->rng.data"
#549: FILE: kernel/kmon.c:155:
+	if (likely(cpub->rng.data != NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cpub->rng.data"
#571: FILE: kernel/kmon.c:177:
+	if (cpub->rng.data == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#573: FILE: kernel/kmon.c:179:
+		if (data == NULL) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#577: FILE: kernel/kmon.c:183:
+		cpub->rng.head = cpub->rng.tail = 0;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cpub->rng.data"
#595: FILE: kernel/kmon.c:201:
+	if (cpub->rng.data != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "data"
#601: FILE: kernel/kmon.c:207:
+	if (data != NULL) {

CHECK:SPACING: No space is necessary after a cast
#611: FILE: kernel/kmon.c:217:
+	int cpu = (long) v;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#710: FILE: kernel/kmon-stats.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#711: FILE: kernel/kmon-stats.c:2:
+ *  kernel/kmon-stats.c

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#730: FILE: kernel/kmon-stats.c:21:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#731: FILE: kernel/kmon-stats.c:22:
+#include <asm/uaccess.h>

CHECK:SPACING: No space is necessary after a cast
#739: FILE: kernel/kmon-stats.c:30:
+	kmon_put16(buf + 1, (u16) tsk->pid);

CHECK:SPACING: No space is necessary after a cast
#748: FILE: kernel/kmon-stats.c:39:
+	kmon_put16(buf + 1, (u16) tsk->pid);

CHECK:SPACING: No space is necessary after a cast
#757: FILE: kernel/kmon-stats.c:48:
+	kmon_put16(buf + 1, (u16) prev->pid);

CHECK:SPACING: No space is necessary after a cast
#758: FILE: kernel/kmon-stats.c:49:
+	kmon_put16(buf + 3, (u16) next->pid);

CHECK:SPACING: No space is necessary after a cast
#767: FILE: kernel/kmon-stats.c:58:
+	kmon_put16(buf + 1, from ? (u16) from->pid: 0);

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#767: FILE: kernel/kmon-stats.c:58:
+	kmon_put16(buf + 1, from ? (u16) from->pid: 0);
 	                                          ^

CHECK:SPACING: No space is necessary after a cast
#768: FILE: kernel/kmon-stats.c:59:
+	kmon_put16(buf + 3, (u16) to->pid);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#777: FILE: include/linux/kmon-stats.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#778: FILE: include/linux/kmon-stats.h:2:
+ *  include/linux/kmon-stats.h

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000435126.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 23 warnings, 56 checks, 754 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000435126.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
