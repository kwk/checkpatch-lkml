WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
This creates new control data layer over traditional control data (cfq_data).

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#44: 
   Signed-off-by: Satoshi UCHIDA <uchida@ap.jp.nec.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#66: FILE: block/cfq-cgroup.c:38:
+static struct cfq_meta_data *cfq_cgroup_init_meta_data(struct cfq_data *cfqd, struct request_queue *q)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#69: FILE: block/cfq-cgroup.c:41:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#71: FILE: block/cfq-cgroup.c:43:
+	if (!cfqmd) {
+		return NULL;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#79: FILE: block/cfq-cgroup.c:51:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: block/cfq-cgroup.c:51:
+       $

CHECK:SPACING: No space is necessary after a cast
#82: FILE: block/cfq-cgroup.c:54:
+	cfqmd->cfq_driv_d.idle_slice_timer.data = (unsigned long) cfqd;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#88: FILE: block/cfq-cgroup.c:60:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#88: FILE: block/cfq-cgroup.c:60:
+
+ 

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: block/cfq-cgroup.c:60:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#98: FILE: block/cfq-cgroup.c:70:
+       ^I^Icfqmd = cfq_cgroup_init_meta_data(cfqd, q);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#98: FILE: block/cfq-cgroup.c:70:
+       ^I^Icfqmd = cfq_cgroup_init_meta_data(cfqd, q);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: block/cfq-cgroup.c:70:
+       ^I^Icfqmd = cfq_cgroup_init_meta_data(cfqd, q);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#108: FILE: block/cfq-cgroup.c:80:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#116: FILE: block/cfq-cgroup.c:101:
 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#175: FILE: block/cfq-iosched.c:2012:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#196: FILE: block/cfq-iosched.c:2043:
+^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#196: FILE: block/cfq-iosched.c:2043:
+{
+	

CHECK:SPACING: No space is necessary after a cast
#242: FILE: block/cfq-iosched.c:2082:
+	CFQ_DRV_UNIQ_DATA(cfqd).idle_slice_timer.data = (unsigned long) cfqd;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#243: FILE: block/cfq-iosched.c:2083:
+^ICFQ_DRV_UNIQ_DATA(cfqd).cfq_slice_idle = cfq_slice_idle;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#293: FILE: include/linux/cfq-iosched.h:57:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#313: FILE: include/linux/cfq-iosched.h:100:
+static inline struct request_queue * __cfq_container_of_queue(struct work_struct *work) {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#313: FILE: include/linux/cfq-iosched.h:100:
+static inline struct request_queue * __cfq_container_of_queue(struct work_struct *work) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#314: FILE: include/linux/cfq-iosched.h:101:
+^Istruct cfq_driver_data *cfqdd = $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#342: FILE: include/linux/cfq-iosched.h:130:
 
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#343: FILE: include/linux/cfq-iosched.h:131:
+extern struct cfq_data *__cfq_init_cfq_data(struct request_queue *q);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#344: FILE: include/linux/cfq-iosched.h:132:
+extern void cfq_kick_queue(struct work_struct *work);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#345: FILE: include/linux/cfq-iosched.h:133:
+extern void cfq_idle_slice_timer(unsigned long data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#346: FILE: include/linux/cfq-iosched.h:134:
+extern void __cfq_exit_data(struct cfq_data *cfqd);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000300837.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 11 errors, 8 warnings, 11 checks, 276 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000300837.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
