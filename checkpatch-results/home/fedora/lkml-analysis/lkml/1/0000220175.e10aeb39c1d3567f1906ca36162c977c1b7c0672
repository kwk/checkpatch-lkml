WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
Describe the "Dynamic dynamic data structure" (DDDS) algorithm, and implement

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#84: FILE: fs/dcache.c:43:
+__cacheline_aligned_in_smp DEFINE_SPINLOCK(dcache_lock);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dcache_lock' should also have an identifier name
#84: FILE: fs/dcache.c:43:
+__cacheline_aligned_in_smp DEFINE_SPINLOCK(dcache_lock);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: fs/dcache.c:1127:
+static inline struct hlist_head *d_hash(struct dcache_hash *dh,
+				struct dentry *parent, unsigned long hash)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#176: FILE: fs/dcache.c:1389:
+static struct dentry * __d_lookup_table(struct dcache_hash *dh,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#177: FILE: fs/dcache.c:1390:
+static struct dentry * __d_lookup_table(struct dcache_hash *dh,
+			struct dentry * parent, struct qstr * name)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#177: FILE: fs/dcache.c:1390:
+			struct dentry * parent, struct qstr * name)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#177: FILE: fs/dcache.c:1390:
+			struct dentry * parent, struct qstr * name)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#204: FILE: fs/dcache.c:1450:
+static noinline struct dentry * __d_lookup_resize(struct dcache_hash *cur,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: fs/dcache.c:1451:
+static noinline struct dentry * __d_lookup_resize(struct dcache_hash *cur,
+			struct dcache_hash *old,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#206: FILE: fs/dcache.c:1452:
+			struct dentry * parent, struct qstr * name)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#206: FILE: fs/dcache.c:1452:
+			struct dentry * parent, struct qstr * name)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#208: FILE: fs/dcache.c:1454:
+	unsigned seq;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#225: FILE: fs/dcache.c:1471:
+struct dentry * __d_lookup(struct dentry * parent, struct qstr * name)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#225: FILE: fs/dcache.c:1471:
+struct dentry * __d_lookup(struct dentry * parent, struct qstr * name)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#225: FILE: fs/dcache.c:1471:
+struct dentry * __d_lookup(struct dentry * parent, struct qstr * name)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#250: FILE: fs/dcache.c:1515:
+static int d_validate_table(struct dcache_hash *dh,
+		struct dentry *dentry, struct dentry *dparent)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#270: FILE: fs/dcache.c:1535:
+static noinline int d_validate_resize(struct dcache_hash *cur,
+			struct dcache_hash *old,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#273: FILE: fs/dcache.c:1538:
+	unsigned seq;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#340: FILE: fs/dcache.c:1648:
+	__d_rehash(entry, d_hash(d_hash_ins, entry->d_parent,
+						entry->d_name.hash));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#378: FILE: fs/dcache.c:2361:
+	BUG_ON(size != 1UL << shift);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*dh)...) over kmalloc(sizeof(struct dcache_hash)...)
#381: FILE: fs/dcache.c:2364:
+	dh = kmalloc(sizeof(struct dcache_hash), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#385: FILE: fs/dcache.c:2368:
+	if (bytes <= PAGE_SIZE) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#400: FILE: fs/dcache.c:2383:
+        printk(KERN_INFO "Dentry cache hash table entries: %d (order: %d, %lu bytes)\n",$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: fs/dcache.c:2383:
+        printk(KERN_INFO "Dentry cache hash table entries: %d (order: %d, %lu bytes)\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#400: FILE: fs/dcache.c:2383:
+        printk(KERN_INFO "Dentry cache hash table entries: %d (order: %d, %lu bytes)\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#401: FILE: fs/dcache.c:2384:
+               size,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: fs/dcache.c:2384:
+               size,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#402: FILE: fs/dcache.c:2385:
+               shift - PAGE_SHIFT,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: fs/dcache.c:2385:
+               shift - PAGE_SHIFT,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#403: FILE: fs/dcache.c:2386:
+               bytes);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: fs/dcache.c:2386:
+               bytes);$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#416: FILE: fs/dcache.c:2399:
+	if (bytes <= PAGE_SIZE) {
[...]
+	} else {
[...]

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#563: FILE: fs/dcache.c:2539:
+	d_hash_cur = d_hash_ins = dh;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#593: FILE: fs/dcache.c:2558:
+	d_hash_cur = d_hash_ins = alloc_dhash(MIN_DHASH_SIZE);

WARNING:TYPO_SPELLING: 'opeation' may be misspelled - perhaps 'operation'?
#669: FILE: Documentation/RCU/ddds.txt:66:
+D1. Enter RCU read-side critical section (covering the whole delete opeation).
                                                                     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:REPEATED_WORD: Possible repeated word: 'that'
#733: FILE: Documentation/RCU/ddds.txt:130:
+After step R2, it will be guaranteed that that all concurrent lookup operations

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000220175.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 13 errors, 15 warnings, 9 checks, 672 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000220175.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
