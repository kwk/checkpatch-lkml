CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#134: FILE: lib/list_sort.c:15:
+static struct list_head *merge(void *priv,
+				int (*cmp)(void *priv, struct list_head *a,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#135: FILE: lib/list_sort.c:16:
+				int (*cmp)(void *priv, struct list_head *a,
+					struct list_head *b),

CHECK:SPACING: spaces required around that '?:' (ctx:VxV)
#151: FILE: lib/list_sort.c:32:
+	tail->next = a?:b;
 	              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#163: FILE: lib/list_sort.c:44:
+static void merge_and_restore_back_links(void *priv,
+				int (*cmp)(void *priv, struct list_head *a,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#164: FILE: lib/list_sort.c:45:
+				int (*cmp)(void *priv, struct list_head *a,
+					struct list_head *b),

CHECK:SPACING: spaces required around that '?:' (ctx:VxV)
#183: FILE: lib/list_sort.c:64:
+	tail->next = a?:b;
 	              ^

CHECK:SPACING: No space is necessary after a cast
#192: FILE: lib/list_sort.c:73:
+		(void) (*cmp)(priv, tail, tail);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#222: FILE: lib/list_sort.c:98:
+		int (*cmp)(void *priv, struct list_head *a,
+			struct list_head *b))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#226: FILE: lib/list_sort.c:100:
+	struct list_head *part[MAX_LIST_LENGTH_BITS+1]; /* sorted partial lists
 	                                           ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#227: FILE: lib/list_sort.c:101:
+	struct list_head *part[MAX_LIST_LENGTH_BITS+1]; /* sorted partial lists
+						-- last slot is a sentinel */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#227: FILE: lib/list_sort.c:101:
+						-- last slot is a sentinel */

WARNING:LINE_SPACING: Missing a blank line after declarations
#292: FILE: lib/list_sort.c:116:
+		struct list_head *cur = list;
+		list = list->next;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#300: FILE: lib/list_sort.c:124:
+			if (unlikely(lev >= ARRAY_SIZE(part)-1)) {
 			                                    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg_once([subsystem]dev, ... then dev_dbg_once(dev, ... then pr_debug_once(...  to printk_once(KERN_DEBUG ...
#301: FILE: lib/list_sort.c:125:
+				printk_once(KERN_DEBUG "list passed to"

WARNING:SPLIT_STRING: quoted string split across lines
#302: FILE: lib/list_sort.c:126:
+				printk_once(KERN_DEBUG "list passed to"
+					" list_sort() too long for"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#303: FILE: lib/list_sort.c:127:
+					" list_sort() too long for"
+					" efficiency\n");

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#330: FILE: lib/list_sort.c:147:
+	unsigned serial;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#348: FILE: lib/list_sort.c:160:
+#define LIST_SORT_TEST_LENGTH (512+128+2) /* not including head */
                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#348: FILE: lib/list_sort.c:160:
+#define LIST_SORT_TEST_LENGTH (512+128+2) /* not including head */
                                       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#356: FILE: lib/list_sort.c:168:
+	printk(KERN_WARNING "testing list_sort()\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#361: FILE: lib/list_sort.c:173:
+		struct debug_el *el = kmalloc(sizeof(*el), GFP_KERNEL);
+		BUG_ON(!el);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#361: FILE: lib/list_sort.c:173:
+		BUG_ON(!el);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#363: FILE: lib/list_sort.c:175:
+		el->value = (r = (r * 725861) % 6599) % (LIST_SORT_TEST_LENGTH/3);
 		                                                              ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#378: FILE: lib/list_sort.c:190:
+		int cmp_result = cmp(NULL, cur, cur->next);
+		if (cur->next->prev != cur) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#379: FILE: lib/list_sort.c:191:
+			printk(KERN_EMERG "list_sort() returned "

WARNING:SPLIT_STRING: quoted string split across lines
#380: FILE: lib/list_sort.c:192:
+			printk(KERN_EMERG "list_sort() returned "
+						"a corrupted list!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#383: FILE: lib/list_sort.c:195:
+			printk(KERN_EMERG "list_sort() failed to sort!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#388: FILE: lib/list_sort.c:200:
+			printk(KERN_EMERG "list_sort() failed to preserve order"

WARNING:SPLIT_STRING: quoted string split across lines
#389: FILE: lib/list_sort.c:201:
+			printk(KERN_EMERG "list_sort() failed to preserve order"
+						 " of equivalent elements!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#397: FILE: lib/list_sort.c:209:
+		printk(KERN_EMERG "list_sort() returned list of"

WARNING:SPLIT_STRING: quoted string split across lines
#398: FILE: lib/list_sort.c:210:
+		printk(KERN_EMERG "list_sort() returned list of"
+						"different length!\n");

WARNING:MISSING_SPACE: break quoted strings at a space character
#398: FILE: lib/list_sort.c:210:
+		printk(KERN_EMERG "list_sort() returned list of"
+						"different length!\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000019181.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 19 warnings, 13 checks, 282 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000019181.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
