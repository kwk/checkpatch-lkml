WARNING:TYPO_SPELLING: 'Seleted' may be misspelled - perhaps 'Selected'?
#60: FILE: fs/Kconfig:342:
+# Generic support for tree structured quota files. Seleted when needed.
                                                    ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#88: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#93: FILE: fs/quota_tree.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:NEW_TYPEDEFS: do not add new typedefs
#117: FILE: fs/quota_tree.c:25:
+typedef char *dqbuf_t;

WARNING:LINE_SPACING: Missing a blank line after declarations
#139: FILE: fs/quota_tree.c:47:
+	dqbuf_t buf = kmalloc(size, GFP_NOFS);
+	if (!buf)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#140: FILE: fs/quota_tree.c:48:
+		printk(KERN_WARNING "VFS: Not enough memory for quota buffers.\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#140: FILE: fs/quota_tree.c:48:
+	if (!buf)
+		printk(KERN_WARNING "VFS: Not enough memory for quota buffers.\n");

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#182: FILE: fs/quota_tree.c:90:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#182: FILE: fs/quota_tree.c:90:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#249: FILE: fs/quota_tree.c:157:
+	dh->dqdh_next_free = dh->dqdh_prev_free = cpu_to_le32(0);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#252: FILE: fs/quota_tree.c:160:
+		printk(KERN_ERR "VFS: Can't write block (%u) with free entries.\n", blk);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#340: FILE: fs/quota_tree.c:248:
+			printk(KERN_ERR "VFS: find_free_dqentry(): Can't "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'find_free_dqentry', this function's name, in a string
#340: FILE: fs/quota_tree.c:248:
+			printk(KERN_ERR "VFS: find_free_dqentry(): Can't "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#341: FILE: fs/quota_tree.c:249:
+			printk(KERN_ERR "VFS: find_free_dqentry(): Can't "
+			       "remove block (%u) from entry free list.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#348: FILE: fs/quota_tree.c:256:
+	for (i = 0, ddquot = ((char *)buf) + sizeof(struct qt_disk_dqdbheader);
[...]
+	     i++, ddquot += info->dqi_entry_size);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#353: FILE: fs/quota_tree.c:261:
+		printk(KERN_ERR "VFS: find_free_dqentry(): Data block full "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'find_free_dqentry', this function's name, in a string
#353: FILE: fs/quota_tree.c:261:
+		printk(KERN_ERR "VFS: find_free_dqentry(): Data block full "

WARNING:SPLIT_STRING: quoted string split across lines
#354: FILE: fs/quota_tree.c:262:
+		printk(KERN_ERR "VFS: find_free_dqentry(): Data block full "
+				"but it shouldn't.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#361: FILE: fs/quota_tree.c:269:
+		printk(KERN_ERR "VFS: find_free_dqentry(): Can't write quota "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'find_free_dqentry', this function's name, in a string
#361: FILE: fs/quota_tree.c:269:
+		printk(KERN_ERR "VFS: find_free_dqentry(): Can't write quota "

WARNING:SPLIT_STRING: quoted string split across lines
#362: FILE: fs/quota_tree.c:270:
+		printk(KERN_ERR "VFS: find_free_dqentry(): Can't write quota "
+				"data block %u.\n", blk);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#396: FILE: fs/quota_tree.c:304:
+			printk(KERN_ERR "VFS: Can't read tree quota block "

WARNING:SPLIT_STRING: quoted string split across lines
#397: FILE: fs/quota_tree.c:305:
+			printk(KERN_ERR "VFS: Can't read tree quota block "
+					"%u.\n", *treeblk);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#408: FILE: fs/quota_tree.c:316:
+			printk(KERN_ERR "VFS: Inserting already present quota "

WARNING:SPLIT_STRING: quoted string split across lines
#409: FILE: fs/quota_tree.c:317:
+			printk(KERN_ERR "VFS: Inserting already present quota "
+					"entry (block %u).\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#411: FILE: fs/quota_tree.c:319:
+			       le32_to_cpu(ref[get_index(info,
+						dquot->dq_id, depth)]));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#418: FILE: fs/quota_tree.c:326:
+		ret = do_insert_tree(info, dquot, &newblk, depth+1);
 		                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#437: FILE: fs/quota_tree.c:345:
+	int tmp = QT_TREEOFF;
+	return do_insert_tree(info, dquot, &tmp, 0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#457: FILE: fs/quota_tree.c:365:
+			printk(KERN_ERR "VFS: Error %zd occurred while "

WARNING:SPLIT_STRING: quoted string split across lines
#458: FILE: fs/quota_tree.c:366:
+			printk(KERN_ERR "VFS: Error %zd occurred while "
+					"creating quota.\n", ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#469: FILE: fs/quota_tree.c:377:
+		printk(KERN_WARNING "VFS: dquota write failed on dev %s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#494: FILE: fs/quota_tree.c:402:
+		printk(KERN_ERR "VFS: Quota structure has offset to other "

WARNING:SPLIT_STRING: quoted string split across lines
#495: FILE: fs/quota_tree.c:403:
+		printk(KERN_ERR "VFS: Quota structure has offset to other "
+		  "block (%u) than it should (%u).\n", blk,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#501: FILE: fs/quota_tree.c:409:
+		printk(KERN_ERR "VFS: Can't read quota data block %u\n", blk);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#511: FILE: fs/quota_tree.c:419:
+			printk(KERN_ERR "VFS: Can't move quota data block (%u) "

WARNING:SPLIT_STRING: quoted string split across lines
#512: FILE: fs/quota_tree.c:420:
+			printk(KERN_ERR "VFS: Can't move quota data block (%u) "
+			  "to free list.\n", blk);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#524: FILE: fs/quota_tree.c:432:
+				printk(KERN_ERR "VFS: Can't insert quota data "

WARNING:SPLIT_STRING: quoted string split across lines
#525: FILE: fs/quota_tree.c:433:
+				printk(KERN_ERR "VFS: Can't insert quota data "
+				       "block (%u) to free entry list.\n", blk);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#531: FILE: fs/quota_tree.c:439:
+				printk(KERN_ERR "VFS: Can't write quota data "

WARNING:SPLIT_STRING: quoted string split across lines
#532: FILE: fs/quota_tree.c:440:
+				printk(KERN_ERR "VFS: Can't write quota data "
+				  "block %u\n", blk);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#556: FILE: fs/quota_tree.c:464:
+		printk(KERN_ERR "VFS: Can't read quota data block %u\n", *blk);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#564: FILE: fs/quota_tree.c:472:
+		ret = remove_tree(info, dquot, &newblk, depth+1);
 		                                             ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#568: FILE: fs/quota_tree.c:476:
+		int i;
+		ref[get_index(info, dquot->dq_id, depth)] = cpu_to_le32(0);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#570: FILE: fs/quota_tree.c:478:
+		for (i = 0;
[...]
+		     i++);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#575: FILE: fs/quota_tree.c:483:
+		if (i == (info->dqi_usable_bs >> 2)
+		    && *blk != QT_TREEOFF) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#581: FILE: fs/quota_tree.c:489:
+				printk(KERN_ERR "VFS: Can't write quota tree "

WARNING:SPLIT_STRING: quoted string split across lines
#582: FILE: fs/quota_tree.c:490:
+				printk(KERN_ERR "VFS: Can't write quota tree "
+				  "block %u.\n", *blk);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#614: FILE: fs/quota_tree.c:522:
+		printk(KERN_ERR "VFS: Can't read quota tree block %u.\n", blk);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#617: FILE: fs/quota_tree.c:525:
+	for (i = 0, ddquot = ((char *)buf) + sizeof(struct qt_disk_dqdbheader);
[...]
+	     i++, ddquot += info->dqi_entry_size);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#621: FILE: fs/quota_tree.c:529:
+		printk(KERN_ERR "VFS: Quota for id %u referenced "

WARNING:SPLIT_STRING: quoted string split across lines
#622: FILE: fs/quota_tree.c:530:
+		printk(KERN_ERR "VFS: Quota for id %u referenced "
+		  "but not present.\n", dquot->dq_id);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#646: FILE: fs/quota_tree.c:554:
+		printk(KERN_ERR "VFS: Can't read quota tree block %u.\n", blk);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#654: FILE: fs/quota_tree.c:562:
+		ret = find_tree_dqentry(info, dquot, blk, depth+1);
 		                                               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#680: FILE: fs/quota_tree.c:588:
+		printk(KERN_ERR "VFS: Quota invalidated while reading!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#689: FILE: fs/quota_tree.c:597:
+				printk(KERN_ERR "VFS: Can't read quota "

WARNING:SPLIT_STRING: quoted string split across lines
#690: FILE: fs/quota_tree.c:598:
+				printk(KERN_ERR "VFS: Can't read quota "
+				  "structure for id %u.\n", dquot->dq_id);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#707: FILE: fs/quota_tree.c:615:
+		printk(KERN_ERR "VFS: Error while reading quota "

WARNING:SPLIT_STRING: quoted string split across lines
#708: FILE: fs/quota_tree.c:616:
+		printk(KERN_ERR "VFS: Error while reading quota "
+				"structure for id %u.\n", dquot->dq_id);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#730: FILE: fs/quota_tree.c:638:
+ * the only one operating on dquot (thanks to dq_lock) */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#733: FILE: fs/quota_tree.c:641:
+	if (test_bit(DQ_FAKE_B, &dquot->dq_flags) && !(dquot->dq_dqb.dqb_curinodes | dquot->dq_dqb.dqb_curspace))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#744: FILE: fs/quota_tree.h:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1517: FILE: include/linux/dqblk_qtree.h:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1527: FILE: include/linux/dqblk_qtree.h:11:
+ * possible block size (1024) */

WARNING:LONG_LINE_COMMENT: line length of 131 exceeds 100 columns
#1537: FILE: include/linux/dqblk_qtree.h:21:
+	void (*mem2disk_dqblk)(void *disk, struct dquot *dquot);	/* Convert given entry from in memory format to disk one */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 131 exceeds 100 columns
#1538: FILE: include/linux/dqblk_qtree.h:22:
+	void (*disk2mem_dqblk)(struct dquot *dquot, void *disk);	/* Convert given entry from disk format to in memory one */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000190654.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 54 warnings, 7 checks, 1506 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000190654.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
