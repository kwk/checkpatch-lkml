WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
physical page frame number, allowing precise determination of what pages are

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#62: FILE: fs/proc/base.c:2033:
+	REG("pagemap",    S_IRUSR, pagemap),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#70: FILE: fs/proc/base.c:2320:
+	REG("pagemap",    S_IRUSR, pagemap),

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#82: FILE: fs/proc/internal.h:48:
+extern loff_t mem_lseek(struct file *file, loff_t offset, int orig);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#118: FILE: fs/proc/task_mmu.c:533:
+#define PM_RESERVED_MASK    (((1LL<<PM_RESERVED_BITS)-1) << PM_RESERVED_OFFSET)
                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#118: FILE: fs/proc/task_mmu.c:533:
+#define PM_RESERVED_MASK    (((1LL<<PM_RESERVED_BITS)-1) << PM_RESERVED_OFFSET)
                                                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#146: FILE: fs/proc/task_mmu.c:561:
+static int pagemap_pte_hole(unsigned long start, unsigned long end,
+				void *private)

WARNING:LINE_SPACING: Missing a blank line after declarations
#151: FILE: fs/proc/task_mmu.c:566:
+	int err = 0;
+	for (addr = start; addr < end; addr += PAGE_SIZE) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#162: FILE: fs/proc/task_mmu.c:577:
+	swp_entry_t e = pte_to_swp_entry(pte);
+	return PM_SWAP | swp_type(e) | (swp_offset(e) << MAX_SWAPFILES_SHIFT);

WARNING:LINE_SPACING: Missing a blank line after declarations
#175: FILE: fs/proc/task_mmu.c:590:
+		u64 pfn = PM_NOT_PRESENT;
+		if (is_swap_pte(*pte))

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#243: FILE: fs/proc/task_mmu.c:658:
+	pages = kmalloc(pagecount * sizeof(struct page *), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#277: FILE: fs/proc/task_mmu.c:692:
+		ret = walk_page_range(mm, start_vaddr, end_vaddr,
+					&pagemap_walk, &pm);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#287: FILE: fs/proc/task_mmu.c:702:
+		page = pages[pagecount-1];
 		                      ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000364790.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 6 checks, 249 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000364790.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
