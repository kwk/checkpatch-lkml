WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
Within DRBD the activity log is used to track extents (4MB each) in which IO

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#39: FILE: drivers/block/drbd/drbd_actlog.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#40: FILE: drivers/block/drbd/drbd_actlog.c:2:
+/*
+-*- linux-c -*-

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#62: FILE: drivers/block/drbd/drbd_actlog.c:24:
+   the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#74: FILE: drivers/block/drbd/drbd_actlog.c:36:
+ * sizeof() = 512 byte */

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#75: FILE: drivers/block/drbd/drbd_actlog.c:37:
+struct __attribute__((packed)) al_transaction {

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#79: FILE: drivers/block/drbd/drbd_actlog.c:41:
+	struct __attribute__((packed)) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#106: FILE: drivers/block/drbd/drbd_actlog.c:68:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#107: FILE: drivers/block/drbd/drbd_actlog.c:69:
+int w_al_write_transaction(struct drbd_conf *, struct drbd_work *, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct drbd_conf *' should also have an identifier name
#107: FILE: drivers/block/drbd/drbd_actlog.c:69:
+int w_al_write_transaction(struct drbd_conf *, struct drbd_work *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct drbd_work *' should also have an identifier name
#107: FILE: drivers/block/drbd/drbd_actlog.c:69:
+int w_al_write_transaction(struct drbd_conf *, struct drbd_work *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#107: FILE: drivers/block/drbd/drbd_actlog.c:69:
+int w_al_write_transaction(struct drbd_conf *, struct drbd_work *, int);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#123: FILE: drivers/block/drbd/drbd_actlog.c:85:
+		rw |= (1<<BIO_RW_BARRIER);
 		        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#124: FILE: drivers/block/drbd/drbd_actlog.c:86:
+	rw |= (1<<BIO_RW_SYNC);
 	        ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#148: FILE: drivers/block/drbd/drbd_actlog.c:110:
+	 * don't try again for ANY return value != 0 */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#172: FILE: drivers/block/drbd/drbd_actlog.c:134:
+		if (DRBD_ratelimit(5*HZ, 5)) {
 		                    ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#187: FILE: drivers/block/drbd/drbd_actlog.c:149:
+			struct page *page = alloc_page(GFP_NOIO);
+			if (!page)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#191: FILE: drivers/block/drbd/drbd_actlog.c:153:
+			drbd_WARN("Meta data's bdev hardsect = %d != %d\n",
+			     hardsect, MD_HARDSECT);

WARNING:TYPO_SPELLING: 'performace' may be misspelled - perhaps 'performance'?
#192: FILE: drivers/block/drbd/drbd_actlog.c:154:
+			drbd_WARN("Workaround engaged (has performace impact).\n");
 			                                   ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#199: FILE: drivers/block/drbd/drbd_actlog.c:161:
+		D_ASSERT(hardsect == (mask+1) * MD_HARDSECT);
 		                          ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'drbd_md_sync_page_io', this function's name, in a string
#212: FILE: drivers/block/drbd/drbd_actlog.c:174:
+				ERR("drbd_md_sync_page_io(,%llus,"

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#213: FILE: drivers/block/drbd/drbd_actlog.c:175:
+				ERR("drbd_md_sync_page_io(,%llus,"
+				    "READ [hardsect!=512]) failed!\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#218: FILE: drivers/block/drbd/drbd_actlog.c:180:
+			memcpy(hp + offset*MD_HARDSECT , p, MD_HARDSECT);
 			                  ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#218: FILE: drivers/block/drbd/drbd_actlog.c:180:
+			memcpy(hp + offset*MD_HARDSECT , p, MD_HARDSECT);
 			                               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: drivers/block/drbd/drbd_actlog.c:187:
+		ALERT("%s [%d]:%s(,%llus,%s) out of range md access!\n",
+		     current->comm, current->pid, __func__,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'drbd_md_sync_page_io', this function's name, in a string
#230: FILE: drivers/block/drbd/drbd_actlog.c:192:
+		ERR("drbd_md_sync_page_io(,%llus,%s) failed!\n",

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#239: FILE: drivers/block/drbd/drbd_actlog.c:201:
+		memcpy(p, hp + offset*MD_HARDSECT, MD_HARDSECT);
 		                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#254: FILE: drivers/block/drbd/drbd_actlog.c:216:
+		lc_find(mdev->resync, enr/AL_EXT_PER_BM_SECT);
 		                         ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "bm_ext"
#255: FILE: drivers/block/drbd/drbd_actlog.c:217:
+	if (unlikely(bm_ext != NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#266: FILE: drivers/block/drbd/drbd_actlog.c:228:
+	/*
+	if (!al_ext) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#279: FILE: drivers/block/drbd/drbd_actlog.c:241:
+	unsigned int enr = (sector >> (AL_EXTENT_SIZE_B-9));
 	                                               ^

CHECK:CAMELCASE: Avoid CamelCase: <TraceTypeALExts>
#285: FILE: drivers/block/drbd/drbd_actlog.c:247:
+	MTRACE(TraceTypeALExts, TraceLvlMetrics,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <TraceLvlMetrics>
#285: FILE: drivers/block/drbd/drbd_actlog.c:247:
+	MTRACE(TraceTypeALExts, TraceLvlMetrics,

CHECK:SPACING: No space is necessary after a cast
#287: FILE: drivers/block/drbd/drbd_actlog.c:249:
+		    (unsigned long long) sector, enr,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#295: FILE: drivers/block/drbd/drbd_actlog.c:257:
+		/* drbd_al_write_transaction(mdev,al_ext,enr);
+		   generic_make_request() are serialized on the

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#298: FILE: drivers/block/drbd/drbd_actlog.c:260:
+		   worker thread. */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#318: FILE: drivers/block/drbd/drbd_actlog.c:280:
+	unsigned int enr = (sector >> (AL_EXTENT_SIZE_B-9));
 	                                               ^

CHECK:SPACING: No space is necessary after a cast
#324: FILE: drivers/block/drbd/drbd_actlog.c:286:
+		    (unsigned long long) sector, enr,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'w_al_write_transaction', this function's name, in a string
#359: FILE: drivers/block/drbd/drbd_actlog.c:321:
+		ERR("inc_local() failed in w_al_write_transaction\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#366: FILE: drivers/block/drbd/drbd_actlog.c:328:
+	 * instead of doing two synchronous sector writes. */

CHECK:CAMELCASE: Avoid CamelCase: <Connected>
#367: FILE: drivers/block/drbd/drbd_actlog.c:329:
+	if (mdev->state.conn < Connected && evicted != LC_FREE)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#368: FILE: drivers/block/drbd/drbd_actlog.c:330:
+		drbd_bm_write_sect(mdev, evicted/AL_EXT_PER_BM_SECT);
 		                                ^

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be32 should be cpu_to_be32
#373: FILE: drivers/block/drbd/drbd_actlog.c:335:
+	buffer->magic = __constant_cpu_to_be32(DRBD_MAGIC);

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#387: FILE: drivers/block/drbd/drbd_actlog.c:349:
+				     mdev->al_tr_cycle+i)->lc_number;
 				                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#388: FILE: drivers/block/drbd/drbd_actlog.c:350:
+		buffer->updates[i+1].pos = cpu_to_be32(mdev->al_tr_cycle+i);
 		                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#388: FILE: drivers/block/drbd/drbd_actlog.c:350:
+		buffer->updates[i+1].pos = cpu_to_be32(mdev->al_tr_cycle+i);
 		                                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#389: FILE: drivers/block/drbd/drbd_actlog.c:351:
+		buffer->updates[i+1].extent = cpu_to_be32(extent_nr);
 		                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#393: FILE: drivers/block/drbd/drbd_actlog.c:355:
+		buffer->updates[i+1].pos = __constant_cpu_to_be32(-1);
 		                 ^

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be32 should be cpu_to_be32
#393: FILE: drivers/block/drbd/drbd_actlog.c:355:
+		buffer->updates[i+1].pos = __constant_cpu_to_be32(-1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#394: FILE: drivers/block/drbd/drbd_actlog.c:356:
+		buffer->updates[i+1].extent = __constant_cpu_to_be32(LC_FREE);
 		                 ^

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be32 should be cpu_to_be32
#394: FILE: drivers/block/drbd/drbd_actlog.c:356:
+		buffer->updates[i+1].extent = __constant_cpu_to_be32(LC_FREE);

WARNING:TYPO_SPELLING: 'atached' may be misspelled - perhaps 'attached'?
#444: FILE: drivers/block/drbd/drbd_actlog.c:406:
+	 * as this is done before disk is atached! */
 	                                  ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#444: FILE: drivers/block/drbd/drbd_actlog.c:406:
+	 * as this is done before disk is atached! */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#517: FILE: drivers/block/drbd/drbd_actlog.c:479:
+	 * INFO("Reading from %d to %d.\n",from,to); */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#536: FILE: drivers/block/drbd/drbd_actlog.c:498:
+		/* This loop runs backwards because in the cyclic
+		   elements there might be an old version of the

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#538: FILE: drivers/block/drbd/drbd_actlog.c:500:
+		   can overwrite old versions. */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#561: FILE: drivers/block/drbd/drbd_actlog.c:523:
+	mdev->al_tr_number = to_tnr+1;
 	                           ^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#581: FILE: drivers/block/drbd/drbd_actlog.c:543:
+	int uptodate = bio_flagged(bio, BIO_UPTODATE);
 	    ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#584: FILE: drivers/block/drbd/drbd_actlog.c:546:
+	 * fail the request by clearing the uptodate flag,
 	                                    ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#585: FILE: drivers/block/drbd/drbd_actlog.c:547:
+	 * but do not return any error?! */

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#586: FILE: drivers/block/drbd/drbd_actlog.c:548:
+	if (!error && !uptodate)
 	               ^^^^^^^^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#604: FILE: drivers/block/drbd/drbd_actlog.c:566:
+#define S2W(s)	((s)<<(BM_EXT_SIZE_B-BM_BLOCK_SIZE_B-LN2_BPL))
               	    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#604: FILE: drivers/block/drbd/drbd_actlog.c:566:
+#define S2W(s)	((s)<<(BM_EXT_SIZE_B-BM_BLOCK_SIZE_B-LN2_BPL))
               	                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#604: FILE: drivers/block/drbd/drbd_actlog.c:566:
+#define S2W(s)	((s)<<(BM_EXT_SIZE_B-BM_BLOCK_SIZE_B-LN2_BPL))
               	                                    ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#606: FILE: drivers/block/drbd/drbd_actlog.c:568:
+ * is already covered by previously prepared bios */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bio"
#636: FILE: drivers/block/drbd/drbd_actlog.c:598:
+	if (bio == NULL)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#640: FILE: drivers/block/drbd/drbd_actlog.c:602:
+		const struct bio_vec *prev_bv = bios[i-1]->bi_io_vec;
 		                                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#641: FILE: drivers/block/drbd/drbd_actlog.c:603:
+		const struct bio_vec *prev_bv = bios[i-1]->bi_io_vec;
+		page_offset = prev_bv->bv_offset + prev_bv->bv_len;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!page"
#646: FILE: drivers/block/drbd/drbd_actlog.c:608:
+		if (page == NULL)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#700: FILE: drivers/block/drbd/drbd_actlog.c:662:
+	ERR_IF (!inc_local_if_state(mdev, Attaching))

CHECK:CAMELCASE: Avoid CamelCase: <Attaching>
#700: FILE: drivers/block/drbd/drbd_actlog.c:662:
+	ERR_IF (!inc_local_if_state(mdev, Attaching))

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#707: FILE: drivers/block/drbd/drbd_actlog.c:669:
+	bios = kzalloc(sizeof(struct bio *) * nr_elements, GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#722: FILE: drivers/block/drbd/drbd_actlog.c:684:
+		if (atodb_prepare_unless_covered(mdev, bios,
+						enr/AL_EXT_PER_BM_SECT,

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#722: FILE: drivers/block/drbd/drbd_actlog.c:684:
+						enr/AL_EXT_PER_BM_SECT,
 						   ^

WARNING:TYPO_SPELLING: 'unneccessary' may be misspelled - perhaps 'unnecessary'?
#727: FILE: drivers/block/drbd/drbd_actlog.c:689:
+	/* unneccessary optimization? */
 	   ^^^^^^^^^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bios[i]"
#733: FILE: drivers/block/drbd/drbd_actlog.c:695:
+		if (bios[i] == NULL)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#753: FILE: drivers/block/drbd/drbd_actlog.c:715:
+	 * Therefore this if () ... */

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'drbd_al_to_on_disk_bm', this function's name, in a string
#772: FILE: drivers/block/drbd/drbd_actlog.c:734:
+	drbd_WARN("Using the slow drbd_al_to_on_disk_bm()\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#779: FILE: drivers/block/drbd/drbd_actlog.c:741:
+		 * sector 4 will be written four times! Synchronous! */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#780: FILE: drivers/block/drbd/drbd_actlog.c:742:
+		drbd_bm_write_sect(mdev, enr/AL_EXT_PER_BM_SECT);
 		                            ^

CHECK:CAMELCASE: Avoid CamelCase: <drbd_bm_ALe_set_all>
#805: FILE: drivers/block/drbd/drbd_actlog.c:767:
+		add += drbd_bm_ALe_set_all(mdev, enr);

CHECK:CAMELCASE: Avoid CamelCase: <Bit2KB>
#812: FILE: drivers/block/drbd/drbd_actlog.c:774:
+	     ppsize(ppb, Bit2KB(add)));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#826: FILE: drivers/block/drbd/drbd_actlog.c:788:
+	MTRACE(TraceTypeALExts, TraceLvlMetrics,
+		if (unlikely(!rv))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#860: FILE: drivers/block/drbd/drbd_actlog.c:822:
+		if (DRBD_ratelimit(5*HZ, 5))
 		                    ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#885: FILE: drivers/block/drbd/drbd_actlog.c:847:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#903: FILE: drivers/block/drbd/drbd_actlog.c:865:
+	 * a 16 MB extent border. (Currently this is true...) */

CHECK:SPACING: No space is necessary after a cast
#906: FILE: drivers/block/drbd/drbd_actlog.c:868:
+	ext = (struct bm_extent *) lc_get(mdev->resync, enr);

WARNING:SPLIT_STRING: quoted string split across lines
#915: FILE: drivers/block/drbd/drbd_actlog.c:877:
+				ERR("BAD! sector=%llus enr=%u rs_left=%d "
+				    "rs_failed=%d count=%d\n",

CHECK:CAMELCASE: Avoid CamelCase: <Disconnecting>
#922: FILE: drivers/block/drbd/drbd_actlog.c:884:
+				drbd_force_state(mdev, NS(conn, Disconnecting));

WARNING:LINE_SPACING: Missing a blank line after declarations
#933: FILE: drivers/block/drbd/drbd_actlog.c:895:
+			int rs_left = drbd_bm_e_weight(mdev, enr);
+			if (ext->flags != 0) {

WARNING:SPLIT_STRING: quoted string split across lines
#935: FILE: drivers/block/drbd/drbd_actlog.c:897:
+				drbd_WARN("changing resync lce: %d[%u;%02lx]"
+				     " -> %d[%u;00]\n",

WARNING:SPLIT_STRING: quoted string split across lines
#942: FILE: drivers/block/drbd/drbd_actlog.c:904:
+				drbd_WARN("Kicking resync_lru element enr=%u "
+				     "out with rs_failed=%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#982: FILE: drivers/block/drbd/drbd_actlog.c:944:
+void __drbd_set_in_sync(struct drbd_conf *mdev, sector_t sector, int size,
+		       const char *file, const unsigned int line)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#993: FILE: drivers/block/drbd/drbd_actlog.c:955:
+		ERR("drbd_set_in_sync: sector=%llus size=%d nonsense!\n",
+				(unsigned long long)sector, size);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1000: FILE: drivers/block/drbd/drbd_actlog.c:962:
+	ERR_IF(esector >= nr_sectors) esector = (nr_sectors-1);
 	                                                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1002: FILE: drivers/block/drbd/drbd_actlog.c:964:
+	lbnr = BM_SECT_TO_BIT(nr_sectors-1);
 	                                ^

WARNING:TYPO_SPELLING: 'alligned' may be misspelled - perhaps 'aligned'?
#1006: FILE: drivers/block/drbd/drbd_actlog.c:968:
+	 * clear full, alligned, BM_BLOCK_SIZE (4K) blocks */
 	               ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1006: FILE: drivers/block/drbd/drbd_actlog.c:968:
+	 * clear full, alligned, BM_BLOCK_SIZE (4K) blocks */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1007: FILE: drivers/block/drbd/drbd_actlog.c:969:
+	if (unlikely(esector < BM_SECT_PER_BIT-1))
 	                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1009: FILE: drivers/block/drbd/drbd_actlog.c:971:
+	if (unlikely(esector == (nr_sectors-1)))
 	                                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1012: FILE: drivers/block/drbd/drbd_actlog.c:974:
+		ebnr = BM_SECT_TO_BIT(esector - (BM_SECT_PER_BIT-1));
 		                                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1013: FILE: drivers/block/drbd/drbd_actlog.c:975:
+	sbnr = BM_SECT_TO_BIT(sector + BM_SECT_PER_BIT-1);
 	                                              ^

CHECK:CAMELCASE: Avoid CamelCase: <TraceTypeResync>
#1015: FILE: drivers/block/drbd/drbd_actlog.c:977:
+	MTRACE(TraceTypeResync, TraceLvlMetrics,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1031: FILE: drivers/block/drbd/drbd_actlog.c:993:
+		if (jiffies - mdev->rs_mark_time > HZ*10) {
 		                                     ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1033: FILE: drivers/block/drbd/drbd_actlog.c:995:
+			 * but we estimate only anyways. */

CHECK:CAMELCASE: Avoid CamelCase: <PausedSyncT>
#1035: FILE: drivers/block/drbd/drbd_actlog.c:997:
+			    mdev->state.conn != PausedSyncT &&

CHECK:CAMELCASE: Avoid CamelCase: <PausedSyncS>
#1036: FILE: drivers/block/drbd/drbd_actlog.c:998:
+			    mdev->state.conn != PausedSyncS) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1046: FILE: drivers/block/drbd/drbd_actlog.c:1008:
+		 * lc_put() in drbd_try_clear_on_disk_bm(). */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1072: FILE: drivers/block/drbd/drbd_actlog.c:1034:
+		ERR("sector: %llus, size: %d\n",
+			(unsigned long long)sector, size);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1085: FILE: drivers/block/drbd/drbd_actlog.c:1047:
+		esector = (nr_sectors-1);
 		                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1087: FILE: drivers/block/drbd/drbd_actlog.c:1049:
+	lbnr = BM_SECT_TO_BIT(nr_sectors-1);
 	                                ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1090: FILE: drivers/block/drbd/drbd_actlog.c:1052:
+	 * we do not need to round anything here */

WARNING:SPLIT_STRING: quoted string split across lines
#1096: FILE: drivers/block/drbd/drbd_actlog.c:1058:
+	       INFO("drbd_set_out_of_sync: sector=%llus size=%u "
+		    "sbnr=%lu ebnr=%lu\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1101: FILE: drivers/block/drbd/drbd_actlog.c:1063:
+	 * we count rs_{total,left} in bits, not sectors.  */

CHECK:SPACING: No space is necessary after a cast
#1106: FILE: drivers/block/drbd/drbd_actlog.c:1068:
+	ext = (struct bm_extent *) lc_find(mdev->resync, enr);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1123: FILE: drivers/block/drbd/drbd_actlog.c:1085:
+	if (mdev->resync_locked > mdev->resync->nr_elements/2) {
 	                                                   ^

CHECK:SPACING: No space is necessary after a cast
#1127: FILE: drivers/block/drbd/drbd_actlog.c:1089:
+	bm_ext = (struct bm_extent *) lc_get(mdev->resync, enr);

WARNING:SPLIT_STRING: quoted string split across lines
#1147: FILE: drivers/block/drbd/drbd_actlog.c:1109:
+			drbd_WARN("Have to wait for element"
+			     " (resync LRU too small?)\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1148: FILE: drivers/block/drbd/drbd_actlog.c:1110:
+		BUG_ON(rs_flags & LC_DIRTY);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: braces {} should be used on all arms of this statement
#1160: FILE: drivers/block/drbd/drbd_actlog.c:1122:
+	if (unlikely(enr == mdev->act_log->new_number))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1162: FILE: drivers/block/drbd/drbd_actlog.c:1124:
+	else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1172: FILE: drivers/block/drbd/drbd_actlog.c:1134:
+	/*
+	if (unlikely(rv)) {

CHECK:CAMELCASE: Avoid CamelCase: <TraceLvlAll>
#1195: FILE: drivers/block/drbd/drbd_actlog.c:1157:
+	MTRACE(TraceTypeResync, TraceLvlAll,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'drbd_rs_begin_io', this function's name, in a string
#1196: FILE: drivers/block/drbd/drbd_actlog.c:1158:
+	       INFO("drbd_rs_begin_io: sector=%llus (rs_end=%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1201: FILE: drivers/block/drbd/drbd_actlog.c:1163:
+	sig = wait_event_interruptible(mdev->al_wait,
+			(bm_ext = _bme_get(mdev, enr)));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1210: FILE: drivers/block/drbd/drbd_actlog.c:1172:
+		sig = wait_event_interruptible(mdev->al_wait,
+				!_is_in_al(mdev, enr * AL_EXT_PER_BM_SECT + i));

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1241: FILE: drivers/block/drbd/drbd_actlog.c:1203:
+	const unsigned int al_enr = enr*AL_EXT_PER_BM_SECT;
 	                               ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'drbd_try_rs_begin_io', this function's name, in a string
#1246: FILE: drivers/block/drbd/drbd_actlog.c:1208:
+	       INFO("drbd_try_rs_begin_io: sector=%llus\n",

WARNING:TYPO_SPELLING: 'keept' may be misspelled - perhaps 'kept'?
#1259: FILE: drivers/block/drbd/drbd_actlog.c:1221:
+		 * extent we keept the refcount on.
 		             ^^^^^

WARNING:TYPO_SPELLING: 'agin' may be misspelled - perhaps 'again'?
#1260: FILE: drivers/block/drbd/drbd_actlog.c:1222:
+		 * so we remembered which extent we had to try agin, and
 		                                               ^^^^

WARNING:TYPO_SPELLING: 'aparently' may be misspelled - perhaps 'apparently'?
#1266: FILE: drivers/block/drbd/drbd_actlog.c:1228:
+			INFO("dropping %u, aparently got 'synced' "
 			                   ^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1266: FILE: drivers/block/drbd/drbd_actlog.c:1228:
+		MTRACE(TraceTypeResync, TraceLvlAll,
+			INFO("dropping %u, aparently got 'synced' "

WARNING:SPLIT_STRING: quoted string split across lines
#1267: FILE: drivers/block/drbd/drbd_actlog.c:1229:
+			INFO("dropping %u, aparently got 'synced' "
+			     "by application io\n", mdev->resync_wenr);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1293: FILE: drivers/block/drbd/drbd_actlog.c:1255:
+			 * drop the extra reference. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1295: FILE: drivers/block/drbd/drbd_actlog.c:1257:
+			MTRACE(TraceTypeResync, TraceLvlAll,
+				INFO("dropping extra reference on %u\n", enr);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1302: FILE: drivers/block/drbd/drbd_actlog.c:1264:
+		if (mdev->resync_locked > mdev->resync->nr_elements-3) {
 		                                                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1304: FILE: drivers/block/drbd/drbd_actlog.c:1266:
+			MTRACE(TraceTypeResync, TraceLvlAll,
+				INFO("resync_locked = %u!\n", mdev->resync_locked);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1311: FILE: drivers/block/drbd/drbd_actlog.c:1273:
+			const unsigned long rs_flags = mdev->resync->flags;
+			if (rs_flags & LC_STARVING)

WARNING:SPLIT_STRING: quoted string split across lines
#1313: FILE: drivers/block/drbd/drbd_actlog.c:1275:
+				drbd_WARN("Have to wait for element"
+				     " (resync LRU too small?)\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1314: FILE: drivers/block/drbd/drbd_actlog.c:1276:
+			BUG_ON(rs_flags & LC_DIRTY);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1331: FILE: drivers/block/drbd/drbd_actlog.c:1293:
+	MTRACE(TraceTypeResync, TraceLvlAll,
+		INFO("checking al for %u\n", enr);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1334: FILE: drivers/block/drbd/drbd_actlog.c:1296:
+		if (unlikely(al_enr+i == mdev->act_log->new_number))
 		                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1336: FILE: drivers/block/drbd/drbd_actlog.c:1298:
+		if (lc_is_used(mdev->act_log, al_enr+i))
 		                                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1347: FILE: drivers/block/drbd/drbd_actlog.c:1309:
+	MTRACE(TraceTypeResync, TraceLvlAll,
+		INFO("need to try again for %u\n", enr);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'drbd_rs_complete_io', this function's name, in a string
#1362: FILE: drivers/block/drbd/drbd_actlog.c:1324:
+	       INFO("drbd_rs_complete_io: sector=%llus (rs_enr=%d)\n",

CHECK:SPACING: No space is necessary after a cast
#1367: FILE: drivers/block/drbd/drbd_actlog.c:1329:
+	bm_ext = (struct bm_extent *) lc_find(mdev->resync, enr);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'drbd_rs_complete_io', this function's name, in a string
#1370: FILE: drivers/block/drbd/drbd_actlog.c:1332:
+		ERR("drbd_rs_complete_io() called, but extent not found\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'drbd_rs_complete_io', this function's name, in a string
#1376: FILE: drivers/block/drbd/drbd_actlog.c:1338:
+		ERR("drbd_rs_complete_io(,%llu [=%u]) called, "

WARNING:SPLIT_STRING: quoted string split across lines
#1377: FILE: drivers/block/drbd/drbd_actlog.c:1339:
+		ERR("drbd_rs_complete_io(,%llu [=%u]) called, "
+		    "but refcnt is 0!?\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'drbd_rs_cancel_all', this function's name, in a string
#1399: FILE: drivers/block/drbd/drbd_actlog.c:1361:
+	       INFO("drbd_rs_cancel_all\n");

CHECK:CAMELCASE: Avoid CamelCase: <Failed>
#1404: FILE: drivers/block/drbd/drbd_actlog.c:1366:
+	if (inc_local_if_state(mdev, Failed)) { /* Makes sure ->resync is there. */

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'drbd_rs_del_all', this function's name, in a string
#1426: FILE: drivers/block/drbd/drbd_actlog.c:1388:
+	       INFO("drbd_rs_del_all\n");

CHECK:SPACING: No space is necessary after a cast
#1434: FILE: drivers/block/drbd/drbd_actlog.c:1396:
+			bm_ext = (struct bm_extent *) lc_entry(mdev->resync, i);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'drbd_rs_del_all', this function's name, in a string
#1438: FILE: drivers/block/drbd/drbd_actlog.c:1400:
+				INFO("dropping %u in drbd_rs_del_all, apparently"

WARNING:SPLIT_STRING: quoted string split across lines
#1439: FILE: drivers/block/drbd/drbd_actlog.c:1401:
+				INFO("dropping %u in drbd_rs_del_all, apparently"
+				     " got 'synced' by application io\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'drbd_rs_del_all', this function's name, in a string
#1448: FILE: drivers/block/drbd/drbd_actlog.c:1410:
+				INFO("Retrying drbd_rs_del_all() later. "

WARNING:SPLIT_STRING: quoted string split across lines
#1449: FILE: drivers/block/drbd/drbd_actlog.c:1411:
+				INFO("Retrying drbd_rs_del_all() later. "
+				     "refcnt=%d\n", bm_ext->lce.refcnt);

CHECK:CAMELCASE: Avoid CamelCase: <TraceLvlSummary>
#1479: FILE: drivers/block/drbd/drbd_actlog.c:1441:
+	MTRACE(TraceTypeResync, TraceLvlSummary,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'drbd_rs_failed_io', this function's name, in a string
#1480: FILE: drivers/block/drbd/drbd_actlog.c:1442:
+	       INFO("drbd_rs_failed_io: sector=%llus, size=%u\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'drbd_rs_failed_io', this function's name, in a string
#1485: FILE: drivers/block/drbd/drbd_actlog.c:1447:
+		ERR("drbd_rs_failed_io: sector=%llus size=%d nonsense!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1486: FILE: drivers/block/drbd/drbd_actlog.c:1448:
+		ERR("drbd_rs_failed_io: sector=%llus size=%d nonsense!\n",
+				(unsigned long long)sector, size);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1493: FILE: drivers/block/drbd/drbd_actlog.c:1455:
+	ERR_IF(esector >= nr_sectors) esector = (nr_sectors-1);
 	                                                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1495: FILE: drivers/block/drbd/drbd_actlog.c:1457:
+	lbnr = BM_SECT_TO_BIT(nr_sectors-1);
 	                                ^

WARNING:TYPO_SPELLING: 'alligned' may be misspelled - perhaps 'aligned'?
#1499: FILE: drivers/block/drbd/drbd_actlog.c:1461:
+	 * handle full, alligned, BM_BLOCK_SIZE (4K) blocks */
 	                ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1499: FILE: drivers/block/drbd/drbd_actlog.c:1461:
+	 * handle full, alligned, BM_BLOCK_SIZE (4K) blocks */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1500: FILE: drivers/block/drbd/drbd_actlog.c:1462:
+	if (unlikely(esector < BM_SECT_PER_BIT-1))
 	                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1502: FILE: drivers/block/drbd/drbd_actlog.c:1464:
+	if (unlikely(esector == (nr_sectors-1)))
 	                                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1505: FILE: drivers/block/drbd/drbd_actlog.c:1467:
+		ebnr = BM_SECT_TO_BIT(esector - (BM_SECT_PER_BIT-1));
 		                                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1506: FILE: drivers/block/drbd/drbd_actlog.c:1468:
+	sbnr = BM_SECT_TO_BIT(sector + BM_SECT_PER_BIT-1);
 	                                              ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1526: FILE: drivers/block/drbd/drbd_actlog.c:1488:
+		 * lc_put() in drbd_try_clear_on_disk_bm(). */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000150932.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 81 warnings, 87 checks, 1494 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000150932.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
