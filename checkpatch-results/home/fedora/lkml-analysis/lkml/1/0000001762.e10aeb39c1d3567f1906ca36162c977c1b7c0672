WARNING:EMAIL_SUBJECT: A patch subject line should describe the change not the tool that found it
#20: 
Subject: [PATCH] Staging: arlan: fixed coding style issues in arlan-proc.c This is a patch to the arlan-proc.c file that fixes up multiple coding style errors and warnings found by the checkpatch.pl tool Signed-off-by: Andre Silva <andre.beat@gmail.com>

Naming the tool that found the issue is not very useful in the
subject line.  A good subject line summarizes the change that
the patch brings.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'var' may be better as '(var)' to avoid precedence issues
#50: FILE: drivers/staging/arlan/arlan-proc.c:15:
+#define SARLG(type, var) {\
+	pos += sprintf(arlan_drive_info+pos, "%s\t=\t0x%x\n", #var,\
+		READSHMB(priva->card->var));\
 	}

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#51: FILE: drivers/staging/arlan/arlan-proc.c:16:
+	pos += sprintf(arlan_drive_info+pos, "%s\t=\t0x%x\n", #var,\
 	                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'var' may be better as '(var)' to avoid precedence issues
#59: FILE: drivers/staging/arlan/arlan-proc.c:20:
+#define SARLBN(type, var, nn) {\
+	pos += sprintf(arlan_drive_info+pos, "%s\t=\t0x", #var);\
+	for (i = 0; i < nn; i++)\
+		pos += sprintf(arlan_drive_info+pos, "%02x",\
+			READSHMB(priva->card->var[i]));\
+		pos += sprintf(arlan_drive_info+pos, "\n");\
 	}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'nn' may be better as '(nn)' to avoid precedence issues
#59: FILE: drivers/staging/arlan/arlan-proc.c:20:
+#define SARLBN(type, var, nn) {\
+	pos += sprintf(arlan_drive_info+pos, "%s\t=\t0x", #var);\
+	for (i = 0; i < nn; i++)\
+		pos += sprintf(arlan_drive_info+pos, "%02x",\
+			READSHMB(priva->card->var[i]));\
+		pos += sprintf(arlan_drive_info+pos, "\n");\
 	}

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#60: FILE: drivers/staging/arlan/arlan-proc.c:21:
+	pos += sprintf(arlan_drive_info+pos, "%s\t=\t0x", #var);\
 	                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#62: FILE: drivers/staging/arlan/arlan-proc.c:23:
+		pos += sprintf(arlan_drive_info+pos, "%02x",\
 		                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#64: FILE: drivers/staging/arlan/arlan-proc.c:25:
+		pos += sprintf(arlan_drive_info+pos, "\n");\
 		                               ^

CHECK:CAMELCASE: Avoid CamelCase: <SARLBNpln>
#69: FILE: drivers/staging/arlan/arlan-proc.c:28:
+#define SARLBNpln(type, var, nn) {\

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'var' may be better as '(var)' to avoid precedence issues
#69: FILE: drivers/staging/arlan/arlan-proc.c:28:
+#define SARLBNpln(type, var, nn) {\
+	for (i = 0; i < nn; i++)\
+		pos += sprintf(arlan_drive_info+pos, "%02x",\
+			READSHMB(priva->card->var[i]));\
 	}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'nn' may be better as '(nn)' to avoid precedence issues
#69: FILE: drivers/staging/arlan/arlan-proc.c:28:
+#define SARLBNpln(type, var, nn) {\
+	for (i = 0; i < nn; i++)\
+		pos += sprintf(arlan_drive_info+pos, "%02x",\
+			READSHMB(priva->card->var[i]));\
 	}

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#71: FILE: drivers/staging/arlan/arlan-proc.c:30:
+		pos += sprintf(arlan_drive_info+pos, "%02x",\
 		                               ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'var' - possible side-effects?
#76: FILE: drivers/staging/arlan/arlan-proc.c:34:
+#define SARLSTR(var, nn) {\
 	char tmpStr[400];\
 	int  tmpLn = nn;\
+	if (nn > 399)\
+		tmpLn = 399;\
+	memcpy(tmpStr, (char *) priva->conf->var, tmpLn);\
 	tmpStr[tmpLn] = 0; \
+	pos += sprintf(arlan_drive_info+pos, "%s\t=\t%s\n",\
+		#var, priva->conf->var);\
 	}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'var' may be better as '(var)' to avoid precedence issues
#76: FILE: drivers/staging/arlan/arlan-proc.c:34:
+#define SARLSTR(var, nn) {\
 	char tmpStr[400];\
 	int  tmpLn = nn;\
+	if (nn > 399)\
+		tmpLn = 399;\
+	memcpy(tmpStr, (char *) priva->conf->var, tmpLn);\
 	tmpStr[tmpLn] = 0; \
+	pos += sprintf(arlan_drive_info+pos, "%s\t=\t%s\n",\
+		#var, priva->conf->var);\
 	}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nn' - possible side-effects?
#76: FILE: drivers/staging/arlan/arlan-proc.c:34:
+#define SARLSTR(var, nn) {\
 	char tmpStr[400];\
 	int  tmpLn = nn;\
+	if (nn > 399)\
+		tmpLn = 399;\
+	memcpy(tmpStr, (char *) priva->conf->var, tmpLn);\
 	tmpStr[tmpLn] = 0; \
+	pos += sprintf(arlan_drive_info+pos, "%s\t=\t%s\n",\
+		#var, priva->conf->var);\
 	}

CHECK:CAMELCASE: Avoid CamelCase: <tmpLn>
#82: FILE: drivers/staging/arlan/arlan-proc.c:38:
+		tmpLn = 399;\

CHECK:SPACING: No space is necessary after a cast
#83: FILE: drivers/staging/arlan/arlan-proc.c:39:
+	memcpy(tmpStr, (char *) priva->conf->var, tmpLn);\

CHECK:CAMELCASE: Avoid CamelCase: <tmpStr>
#83: FILE: drivers/staging/arlan/arlan-proc.c:39:
+	memcpy(tmpStr, (char *) priva->conf->var, tmpLn);\

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#86: FILE: drivers/staging/arlan/arlan-proc.c:41:
+	pos += sprintf(arlan_drive_info+pos, "%s\t=\t%s\n",\
 	                               ^

CHECK:SPACING: No space is necessary after a cast
#103: FILE: drivers/staging/arlan/arlan-proc.c:53:
+	memcpy(&tmpVar, (short *) priva->conf->var, 2); \

CHECK:CAMELCASE: Avoid CamelCase: <tmpVar>
#103: FILE: drivers/staging/arlan/arlan-proc.c:53:
+	memcpy(&tmpVar, (short *) priva->conf->var, 2); \

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#104: FILE: drivers/staging/arlan/arlan-proc.c:54:
+	pos += sprintf(arlan_drive_info+pos, "%s\t=\t0x%x\n", #var, tmpVar);\
 	                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#112: FILE: drivers/staging/arlan/arlan-proc.c:60:
+	pos += sprintf(arlan_drive_info+pos, "%s\t=\t0x%x\n", #var, tmpVar);\
 	                               ^

CHECK:CAMELCASE: Avoid CamelCase: <diagnosticInfo>
#123: FILE: drivers/staging/arlan/arlan-proc.c:73:
+	switch (diagnosticInfo) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#124: FILE: drivers/staging/arlan/arlan-proc.c:74:
+	switch (diagnosticInfo) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <hardwareType>
#280: FILE: drivers/staging/arlan/arlan-proc.c:127:
+	switch (hardwareType) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#355: FILE: drivers/staging/arlan/arlan-proc.c:205:
+		printk(KERN_WARNING "Arlan: Card NOT configured\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#358: FILE: drivers/staging/arlan/arlan-proc.c:207:
+		printk(KERN_INFO "Arlan: Card is configured\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#367: FILE: drivers/staging/arlan/arlan-proc.c:215:
+		printk(KERN_INFO "%s arlan: Diagnostic Offset %d\n",\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#367: FILE: drivers/staging/arlan/arlan-proc.c:215:
+		printk(KERN_INFO "%s arlan: Diagnostic Offset %d\n",\

CHECK:CAMELCASE: Avoid CamelCase: <diagnosticOffset>
#368: FILE: drivers/staging/arlan/arlan-proc.c:216:
+			dev->name, diagnosticOffset);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#371: FILE: drivers/staging/arlan/arlan-proc.c:218:
+	printk(KERN_INFO "arlan: LAN CODE ID = ");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#377: FILE: drivers/staging/arlan/arlan-proc.c:223:
+	printk(KERN_INFO "arlan: Arlan BroadCast address  = ");

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#386: FILE: drivers/staging/arlan/arlan-proc.c:239:
+	DEBUGSHM(1, "arlan: registration mode is %d\n",\

CHECK:CAMELCASE: Avoid CamelCase: <registrationMode>
#387: FILE: drivers/staging/arlan/arlan-proc.c:240:
+		arlan->registrationMode, u_char);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#390: FILE: drivers/staging/arlan/arlan-proc.c:242:
+	printk(KERN_INFO "arlan: name= ");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#419: FILE: drivers/staging/arlan/arlan-proc.c:265:
+	int memlen = sizeof(struct arlan_shmem) - 0xF;	/* avoid
+										control register */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#419: FILE: drivers/staging/arlan/arlan-proc.c:265:
+										control register */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#436: FILE: drivers/staging/arlan/arlan-proc.c:286:
+			printk(KERN_ERR "Arlan driver memory test 1 failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#453: FILE: drivers/staging/arlan/arlan-proc.c:300:
+			printk(KERN_ERR "Arlan driver memory test 2 failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#465: FILE: drivers/staging/arlan/arlan-proc.c:319:
+		printk(KERN_ERR "%s arlan: failed to come\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#465: FILE: drivers/staging/arlan/arlan-proc.c:319:
+		printk(KERN_ERR "%s arlan: failed to come\

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#482: FILE: drivers/staging/arlan/arlan-proc.c:338:
+		IFDEBUG(10) printk(KERN_INFO "arlan: CARD IS CONFIGURED\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#485: FILE: drivers/staging/arlan/arlan-proc.c:340:
+		IFDEBUG(10) printk(KERN_WARNING\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#485: FILE: drivers/staging/arlan/arlan-proc.c:340:
+		IFDEBUG(10) printk(KERN_WARNING\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#494: FILE: drivers/staging/arlan/arlan-proc.c:347:
+	DEBUGSHM(4, "arlan configuredStatus = %d\n",\

CHECK:CAMELCASE: Avoid CamelCase: <configuredStatusFlag>
#495: FILE: drivers/staging/arlan/arlan-proc.c:348:
+		arlan->configuredStatusFlag, u_char);

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#496: FILE: drivers/staging/arlan/arlan-proc.c:349:
+	DEBUGSHM(4, "arlan driver diagnostic: 0x%2x\n",\

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#505: FILE: drivers/staging/arlan/arlan-proc.c:357:
+	IFDEBUG(50) printk(KERN_INFO "1st Noop successfully executed !!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#514: FILE: drivers/staging/arlan/arlan-proc.c:371:
+	IFDEBUG(50) printk(KERN_INFO "2nd Noop successfully executed !!\n");

CHECK:CAMELCASE: Avoid CamelCase: <irqLevel>
#523: FILE: drivers/staging/arlan/arlan-proc.c:375:
+	if (irqLevel != dev->irq) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#523: FILE: drivers/staging/arlan/arlan-proc.c:375:
+	if (irqLevel != dev->irq) {
[...]
-	}
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#524: FILE: drivers/staging/arlan/arlan-proc.c:376:
+		IFDEBUG(1) printk(KERN_WARNING "arlan dip switches\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#524: FILE: drivers/staging/arlan/arlan-proc.c:376:
+		IFDEBUG(1) printk(KERN_WARNING "arlan dip switches\

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#526: FILE: drivers/staging/arlan/arlan-proc.c:378:
+		printk(KERN_WARNING "device driver irq set to %d-\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#526: FILE: drivers/staging/arlan/arlan-proc.c:378:
+		printk(KERN_WARNING "device driver irq set to %d-\

CHECK:BRACES: Unbalanced braces around else statement
#532: FILE: drivers/staging/arlan/arlan-proc.c:381:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#533: FILE: drivers/staging/arlan/arlan-proc.c:382:
+		IFDEBUG(2) printk(KERN_INFO "irq level is OK\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#562: FILE: drivers/staging/arlan/arlan-proc.c:412:
+static int arlan_sysctl_info(ctl_table *ctl, int write,
 		      void __user *buffer, size_t * lenp, loff_t *ppos)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#573: FILE: drivers/staging/arlan/arlan-proc.c:420:
+		printk(KERN_INFO "wrirte: ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#576: FILE: drivers/staging/arlan/arlan-proc.c:422:
+			printk("adi %x\n", arlan_drive_info[i]);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ctl->procname"
#581: FILE: drivers/staging/arlan/arlan-proc.c:424:
+	if (ctl->procname == NULL || arlan_drive_info == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!arlan_drive_info"
#581: FILE: drivers/staging/arlan/arlan-proc.c:424:
+	if (ctl->procname == NULL || arlan_drive_info == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#582: FILE: drivers/staging/arlan/arlan-proc.c:425:
+		printk(KERN_WARNING " procname is NULL in sysctl_table or arlan_drive_info is NULL\n at arlan module\n ");

CHECK:BRACES: braces {} should be used on all arms of this statement
#588: FILE: drivers/staging/arlan/arlan-proc.c:429:
+	if (devnum < 0 || devnum > MAX_ARLANS - 1) {
[...]
-	}
[...]
+			pos += sprintf(arlan_drive_info + pos,\
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!arlan_device[devnum]"
#594: FILE: drivers/staging/arlan/arlan-proc.c:432:
+	} else if (arlan_device[devnum] == NULL) {

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#598: FILE: drivers/staging/arlan/arlan-proc.c:434:
+			pos += sprintf(arlan_drive_info + pos,\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#600: FILE: drivers/staging/arlan/arlan-proc.c:436:
+		pos += sprintf(arlan_drive_info + pos,\

CHECK:BRACES: Unbalanced braces around else statement
#605: FILE: drivers/staging/arlan/arlan-proc.c:439:
+	} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!priva"
#610: FILE: drivers/staging/arlan/arlan-proc.c:442:
+	if (priva == NULL) {

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#624: FILE: drivers/staging/arlan/arlan-proc.c:454:
+	pos += sprintf(arlan_drive_info + pos,\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#632: FILE: drivers/staging/arlan/arlan-proc.c:461:
+	pos += sprintf(arlan_drive_info + pos,\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#654: FILE: drivers/staging/arlan/arlan-proc.c:618:
+		pos += sprintf(arlan_drive_info + pos, "%02x",\

CHECK:SPACING: No space is necessary after a cast
#655: FILE: drivers/staging/arlan/arlan-proc.c:619:
+			((char *) priva->conf)[priva->conf->rxOffset + i]);

CHECK:CAMELCASE: Avoid CamelCase: <rxOffset>
#655: FILE: drivers/staging/arlan/arlan-proc.c:619:
+			((char *) priva->conf)[priva->conf->rxOffset + i]);

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#664: FILE: drivers/staging/arlan/arlan-proc.c:631:
+			pos += sprintf(arlan_drive_info + pos,\

CHECK:BRACES: Unbalanced braces around else statement
#673: FILE: drivers/staging/arlan/arlan-proc.c:638:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#683: FILE: drivers/staging/arlan/arlan-proc.c:647:
+static int arlan_sysctl_info161719(ctl_table *ctl, int write,
 			    void __user *buffer, size_t * lenp, loff_t *ppos)

CHECK:BRACES: braces {} should be used on all arms of this statement
#693: FILE: drivers/staging/arlan/arlan-proc.c:655:
+	if (arlan_device[devnum] == NULL) {
[...]
-	}
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!arlan_device[devnum]"
#693: FILE: drivers/staging/arlan/arlan-proc.c:655:
+	if (arlan_device[devnum] == NULL) {

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#694: FILE: drivers/staging/arlan/arlan-proc.c:656:
+		pos += sprintf(arlan_drive_info + pos,\

CHECK:BRACES: Unbalanced braces around else statement
#699: FILE: drivers/staging/arlan/arlan-proc.c:659:
+	} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!priva"
#705: FILE: drivers/staging/arlan/arlan-proc.c:662:
+	if (priva == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#706: FILE: drivers/staging/arlan/arlan-proc.c:663:
+		printk(KERN_WARNING " Could not find the device\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#706: FILE: drivers/staging/arlan/arlan-proc.c:663:
+		printk(KERN_WARNING " Could not find the device\

CHECK:CAMELCASE: Avoid CamelCase: <arlan_sysctl_infotxRing>
#716: FILE: drivers/staging/arlan/arlan-proc.c:680:
+static int arlan_sysctl_infotxRing(ctl_table *ctl, int write,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#717: FILE: drivers/staging/arlan/arlan-proc.c:681:
+static int arlan_sysctl_infotxRing(ctl_table *ctl, int write,
 			    void __user *buffer, size_t * lenp, loff_t *ppos)

CHECK:BRACES: braces {} should be used on all arms of this statement
#730: FILE: drivers/staging/arlan/arlan-proc.c:689:
+	if (arlan_device[devnum] == NULL) {
[...]
+	} else
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!arlan_device[devnum]"
#730: FILE: drivers/staging/arlan/arlan-proc.c:689:
+	if (arlan_device[devnum] == NULL) {

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#731: FILE: drivers/staging/arlan/arlan-proc.c:690:
+		pos += sprintf(arlan_drive_info + pos,\

CHECK:BRACES: Unbalanced braces around else statement
#734: FILE: drivers/staging/arlan/arlan-proc.c:693:
+	} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!priva"
#739: FILE: drivers/staging/arlan/arlan-proc.c:696:
+	if (priva == NULL) {

CHECK:CAMELCASE: Avoid CamelCase: <arlan_sysctl_inforxRing>
#748: FILE: drivers/staging/arlan/arlan-proc.c:708:
+static int arlan_sysctl_inforxRing(ctl_table *ctl, int write,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#749: FILE: drivers/staging/arlan/arlan-proc.c:709:
+static int arlan_sysctl_inforxRing(ctl_table *ctl, int write,
 			    void __user *buffer, size_t * lenp, loff_t *ppos)

CHECK:BRACES: braces {} should be used on all arms of this statement
#760: FILE: drivers/staging/arlan/arlan-proc.c:717:
+	if (arlan_device[devnum] == NULL) {
[...]
 	} else
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!arlan_device[devnum]"
#760: FILE: drivers/staging/arlan/arlan-proc.c:717:
+	if (arlan_device[devnum] == NULL) {

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#761: FILE: drivers/staging/arlan/arlan-proc.c:718:
+		pos += sprintf(arlan_drive_info + pos,\

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!priva"
#768: FILE: drivers/staging/arlan/arlan-proc.c:723:
+	if (priva == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#778: FILE: drivers/staging/arlan/arlan-proc.c:736:
+static int arlan_sysctl_info18(ctl_table *ctl, int write,
 			void __user *buffer, size_t * lenp, loff_t *ppos)

CHECK:BRACES: braces {} should be used on all arms of this statement
#788: FILE: drivers/staging/arlan/arlan-proc.c:744:
+	if (arlan_device[devnum] == NULL) {
[...]
-	}
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!arlan_device[devnum]"
#788: FILE: drivers/staging/arlan/arlan-proc.c:744:
+	if (arlan_device[devnum] == NULL) {

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#789: FILE: drivers/staging/arlan/arlan-proc.c:745:
+		pos += sprintf(arlan_drive_info + pos,\

CHECK:BRACES: Unbalanced braces around else statement
#794: FILE: drivers/staging/arlan/arlan-proc.c:748:
+	} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!priva"
#799: FILE: drivers/staging/arlan/arlan-proc.c:751:
+	if (priva == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#813: FILE: drivers/staging/arlan/arlan-proc.c:772:
+static int arlan_configure(ctl_table *ctl, int write,
 		    void __user *buffer, size_t * lenp, loff_t *ppos)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 18)
#822: FILE: drivers/staging/arlan/arlan-proc.c:778:
+	if (devnum < 0 || devnum > MAX_ARLANS - 1) {
+		  printk(KERN_WARNING "too strange devnum in procfs parse\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#822: FILE: drivers/staging/arlan/arlan-proc.c:778:
+	if (devnum < 0 || devnum > MAX_ARLANS - 1) {
[...]
-	}
[...]
-
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#823: FILE: drivers/staging/arlan/arlan-proc.c:779:
+		  printk(KERN_WARNING "too strange devnum in procfs parse\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "arlan_device[devnum]"
#833: FILE: drivers/staging/arlan/arlan-proc.c:781:
+	} else if (arlan_device[devnum] != NULL) {

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#835: FILE: drivers/staging/arlan/arlan-proc.c:783:
+		arlan_command(arlan_device[devnum],\

CHECK:BRACES: Unbalanced braces around else statement
#837: FILE: drivers/staging/arlan/arlan-proc.c:785:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#846: FILE: drivers/staging/arlan/arlan-proc.c:793:
+static int arlan_sysctl_reset(ctl_table *ctl, int write,
 		       void __user *buffer, size_t * lenp, loff_t *ppos)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 18)
#855: FILE: drivers/staging/arlan/arlan-proc.c:799:
+	if (devnum < 0 || devnum > MAX_ARLANS - 1) {
+		  printk(KERN_WARNING "too strange devnum in procfs parse\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#855: FILE: drivers/staging/arlan/arlan-proc.c:799:
+	if (devnum < 0 || devnum > MAX_ARLANS - 1) {
[...]
-	else if (arlan_device[devnum] != NULL)
[...]
-		arlan_command(arlan_device[devnum], ARLAN_COMMAND_CLEAN_AND_RESET);
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#856: FILE: drivers/staging/arlan/arlan-proc.c:800:
+		  printk(KERN_WARNING "too strange devnum in procfs parse\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "arlan_device[devnum]"
#862: FILE: drivers/staging/arlan/arlan-proc.c:803:
+	} else if (arlan_device[devnum] != NULL) {

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#865: FILE: drivers/staging/arlan/arlan-proc.c:805:
+		arlan_command(arlan_device[devnum], \

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around arlan_conf[card].nam
#883: FILE: drivers/staging/arlan/arlan-proc.c:819:
+	.data = &(arlan_conf[card].nam),\

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#893: FILE: drivers/staging/arlan/arlan-proc.c:825:
+	{ .procname = "entry_exit_debug",\

CHECK:CAMELCASE: Avoid CamelCase: <cardNo>
#908: FILE: drivers/staging/arlan/arlan-proc.c:837:
+	CTBLN(cardNo, spreadingCode),\

CHECK:CAMELCASE: Avoid CamelCase: <spreadingCode>
#908: FILE: drivers/staging/arlan/arlan-proc.c:837:
+	CTBLN(cardNo, spreadingCode),\

CHECK:CAMELCASE: Avoid CamelCase: <channelSet>
#917: FILE: drivers/staging/arlan/arlan-proc.c:865:
+	CTBLN(cardNo, channelSet),\

CHECK:CAMELCASE: Avoid CamelCase: <waitTime>
#938: FILE: drivers/staging/arlan/arlan-proc.c:869:
+	CTBLN(cardNo, waitTime),\

CHECK:CAMELCASE: Avoid CamelCase: <lParameter>
#939: FILE: drivers/staging/arlan/arlan-proc.c:870:
+	CTBLN(cardNo, lParameter),\

CHECK:CAMELCASE: Avoid CamelCase: <headerSize>
#941: FILE: drivers/staging/arlan/arlan-proc.c:872:
+	CTBLN(cardNo, headerSize),\

CHECK:CAMELCASE: Avoid CamelCase: <ReTransmitPacketMaxSize>
#944: FILE: drivers/staging/arlan/arlan-proc.c:875:
+	CTBLN(cardNo, ReTransmitPacketMaxSize),\

CHECK:CAMELCASE: Avoid CamelCase: <waitReTransmitPacketMaxSize>
#945: FILE: drivers/staging/arlan/arlan-proc.c:876:
+	CTBLN(cardNo, waitReTransmitPacketMaxSize),\

CHECK:CAMELCASE: Avoid CamelCase: <fastReTransCount>
#946: FILE: drivers/staging/arlan/arlan-proc.c:877:
+	CTBLN(cardNo, fastReTransCount),\

CHECK:CAMELCASE: Avoid CamelCase: <driverRetransmissions>
#947: FILE: drivers/staging/arlan/arlan-proc.c:878:
+	CTBLN(cardNo, driverRetransmissions),\

CHECK:CAMELCASE: Avoid CamelCase: <txAckTimeoutMs>
#948: FILE: drivers/staging/arlan/arlan-proc.c:879:
+	CTBLN(cardNo, txAckTimeoutMs),\

CHECK:CAMELCASE: Avoid CamelCase: <registrationInterrupts>
#949: FILE: drivers/staging/arlan/arlan-proc.c:880:
+	CTBLN(cardNo, registrationInterrupts),\

CHECK:CAMELCASE: Avoid CamelCase: <radioType>
#951: FILE: drivers/staging/arlan/arlan-proc.c:882:
+	CTBLN(cardNo, radioType),\

CHECK:CAMELCASE: Avoid CamelCase: <writeEEPROM>
#952: FILE: drivers/staging/arlan/arlan-proc.c:883:
+	CTBLN(cardNo, writeEEPROM),\

CHECK:CAMELCASE: Avoid CamelCase: <writeRadioType>
#953: FILE: drivers/staging/arlan/arlan-proc.c:884:
+	CTBLN(cardNo, writeRadioType),\

CHECK:CAMELCASE: Avoid CamelCase: <pre_Command_Wait>
#978: FILE: drivers/staging/arlan/arlan-proc.c:893:
+	CTBLN(cardNo, pre_Command_Wait),\

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000001762.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 49 warnings, 86 checks, 991 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000001762.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
