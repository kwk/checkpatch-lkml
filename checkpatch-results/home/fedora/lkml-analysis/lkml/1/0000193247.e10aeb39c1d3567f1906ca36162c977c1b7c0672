WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
Subject: [PATCH] [Target_Core_Mod]: Update target_core_transport.c for new generic code

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#67: FILE: drivers/lio-core/target_core_transport.c:268:
+        if (!(global->hba_list = kzalloc((sizeof(se_hba_t) * TRANSPORT_MAX_GLOBAL_HBAS), GFP_KERNEL))) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#67: FILE: drivers/lio-core/target_core_transport.c:268:
+        if (!(global->hba_list = kzalloc((sizeof(se_hba_t) * TRANSPORT_MAX_GLOBAL_HBAS), GFP_KERNEL))) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: drivers/lio-core/target_core_transport.c:268:
+        if (!(global->hba_list = kzalloc((sizeof(se_hba_t) * TRANSPORT_MAX_GLOBAL_HBAS), GFP_KERNEL))) {$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#67: FILE: drivers/lio-core/target_core_transport.c:268:
+        if (!(global->hba_list = kzalloc((sizeof(se_hba_t) * TRANSPORT_MAX_GLOBAL_HBAS), GFP_KERNEL))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#74: FILE: drivers/lio-core/target_core_transport.c:273:
+        for (i = 0; i < TRANSPORT_MAX_GLOBAL_HBAS; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: drivers/lio-core/target_core_transport.c:273:
+        for (i = 0; i < TRANSPORT_MAX_GLOBAL_HBAS; i++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: drivers/lio-core/target_core_transport.c:286:
+        if (!(global->plugin_class_list = kzalloc((sizeof(se_plugin_class_t) * MAX_PLUGIN_CLASSES),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: drivers/lio-core/target_core_transport.c:286:
+        if (!(global->plugin_class_list = kzalloc((sizeof(se_plugin_class_t) * MAX_PLUGIN_CLASSES),$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#83: FILE: drivers/lio-core/target_core_transport.c:286:
+        if (!(global->plugin_class_list = kzalloc((sizeof(se_plugin_class_t) * MAX_PLUGIN_CLASSES),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#84: FILE: drivers/lio-core/target_core_transport.c:287:
+        if (!(global->plugin_class_list = kzalloc((sizeof(se_plugin_class_t) * MAX_PLUGIN_CLASSES),
 			GFP_KERNEL))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#104: FILE: drivers/lio-core/target_core_transport.c:341:
+			TRACE_ERROR("HBA[%u] - Failing PSCSI Task for %d/%d/%d\n",
+				dev->se_hba->hba_id, sd->channel, sd->id, sd->lun);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: drivers/lio-core/target_core_transport.c:349:
+			TRACE_ERROR("HBA[%u] - Failing FILEIO Task for %u\n",
+				dev->se_hba->hba_id, fd_dev->fd_dev_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#124: FILE: drivers/lio-core/target_core_transport.c:357:
+			TRACE_ERROR("HBA[%u] - Failing VTAPE Task for %u\n",
+				dev->se_hba->hba_id, vt_dev->vt_dev_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#134: FILE: drivers/lio-core/target_core_transport.c:365:
+			TRACE_ERROR("HBA[%u] - Failing MEDIA_CHANGER Task for %u\n",
+				dev->se_hba->hba_id, mc_dev->mc_dev_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#145: FILE: drivers/lio-core/target_core_transport.c:374:
+			TRACE_ERROR("HBA[%u] - Failing RAMDISK Task for %u\n",
+				dev->se_hba->hba_id, rd_dev->rd_dev_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#154: FILE: drivers/lio-core/target_core_transport.c:381:
+			TRACE_ERROR("HBA[%u] - Failing unknown Task\n",
+				dev->se_hba->hba_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#170: FILE: drivers/lio-core/target_core_transport.c:407:
+			TRACE_ERROR("HBA[%u] - Failing PSCSI Task for %d/%d/%d\n",
+				dev->se_hba->hba_id, sd->channel, sd->id, sd->lun);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#180: FILE: drivers/lio-core/target_core_transport.c:415:
+			TRACE_ERROR("HBA[%u] - Failing FILEIO Task for %u\n",
+				dev->se_hba->hba_id, fd_dev->fd_dev_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#190: FILE: drivers/lio-core/target_core_transport.c:423:
+			TRACE_ERROR("HBA[%u] - Failing VTAPE Task for %u\n",
+				dev->se_hba->hba_id, vt_dev->vt_dev_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#200: FILE: drivers/lio-core/target_core_transport.c:431:
+			TRACE_ERROR("HBA[%u] - Failing MEDIA_CHANGER Task for %u\n",
+				dev->se_hba->hba_id, mc_dev->mc_dev_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: drivers/lio-core/target_core_transport.c:440:
+			TRACE_ERROR("HBA[%u] - Failing RAMDISK Task for %u\n",
+				dev->se_hba->hba_id, rd_dev->rd_dev_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#220: FILE: drivers/lio-core/target_core_transport.c:447:
+			TRACE_ERROR("HBA[%u] - Failing unknown Task\n",
+				dev->se_hba->hba_id);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#229: FILE: drivers/lio-core/target_core_transport.c:574:
+extern se_session_t *transport_allocate_session (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#229: FILE: drivers/lio-core/target_core_transport.c:574:
+extern se_session_t *transport_allocate_session (

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#229: FILE: drivers/lio-core/target_core_transport.c:574:
+extern se_session_t *transport_allocate_session (

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#243: FILE: drivers/lio-core/target_core_transport.c:587:
+	printk("TARGET_CORE[%s]: Allocated se_sess: %p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#244: FILE: drivers/lio-core/target_core_transport.c:588:
+	printk("TARGET_CORE[%s]: Allocated se_sess: %p\n",
+		TPG_TFO(se_tpg)->get_fabric_name(), se_sess);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#250: FILE: drivers/lio-core/target_core_transport.c:593:
+extern int transport_register_session (se_session_t *se_sess, void *fabric_sess)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#255: FILE: drivers/lio-core/target_core_transport.c:598:
+	printk("TARGET_CORE[%s]: Registered fabric_sess_ptr: %p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#256: FILE: drivers/lio-core/target_core_transport.c:599:
+	printk("TARGET_CORE[%s]: Registered fabric_sess_ptr: %p\n",
+		TPG_TFO(se_tpg)->get_fabric_name(), se_sess->fabric_sess_ptr);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#258: FILE: drivers/lio-core/target_core_transport.c:601:
+	return(0);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#261: FILE: drivers/lio-core/target_core_transport.c:604:
+extern void transport_deregister_session (se_session_t *se_sess)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#269: FILE: drivers/lio-core/target_core_transport.c:612:
+	printk("TARGET_CORE[%s]: Deregistered fabric_sess\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#270: FILE: drivers/lio-core/target_core_transport.c:613:
+	printk("TARGET_CORE[%s]: Deregistered fabric_sess\n",
+		TPG_TFO(se_tpg)->get_fabric_name());

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#280: FILE: drivers/lio-core/target_core_transport.c:631:
+		if (!(dev = task->se_dev))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#362: FILE: drivers/lio-core/target_core_transport.c:1277:
+extern int transport_check_device_tcq (se_device_t *dev, __u32 unpacked_lun, __u32 device_tcq)

WARNING:SPLIT_STRING: quoted string split across lines
#368: FILE: drivers/lio-core/target_core_transport.c:1281:
 		TRACE_ERROR("Attempting to set storage device queue depth to"
+		" %d while transport maximum is %d on LUN: %u,"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#369: FILE: drivers/lio-core/target_core_transport.c:1282:
+		" %d while transport maximum is %d on LUN: %u,"
+		" ignoring request\n", device_tcq, dev->queue_depth, unpacked_lun);

WARNING:SPLIT_STRING: quoted string split across lines
#374: FILE: drivers/lio-core/target_core_transport.c:1286:
 		TRACE_ERROR("Attempting to set storage device queue depth to"
+			" 0 on LUN: %u, ignoring request\n", unpacked_lun);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#382: FILE: drivers/lio-core/target_core_transport.c:1292:
+	printk("Reset Device Queue Depth to %u for Logical Unit Number:"

WARNING:SPLIT_STRING: quoted string split across lines
#383: FILE: drivers/lio-core/target_core_transport.c:1293:
+	printk("Reset Device Queue Depth to %u for Logical Unit Number:"
+			" %u\n", dev->queue_depth, unpacked_lun);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxO)
#416: FILE: drivers/lio-core/target_core_transport.c:1373:
+		*bl += sprintf(b+*bl, "        Core Host ID: %u LUN: %u",
 		                ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#416: FILE: drivers/lio-core/target_core_transport.c:1373:
+		*bl += sprintf(b+*bl, "        Core Host ID: %u LUN: %u",
 		                 ^

WARNING:LONG_LINE_STRING: line length of 111 exceeds 100 columns
#427: FILE: drivers/lio-core/target_core_transport.c:1383:
+			*bl += sprintf(b+*bl, "        Core Host ID: %u  Active Cmds: %d  Total Bytes: %llu\n",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '+' (ctx:VxO)
#427: FILE: drivers/lio-core/target_core_transport.c:1383:
+			*bl += sprintf(b+*bl, "        Core Host ID: %u  Active Cmds: %d  Total Bytes: %llu\n",
 			                ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#427: FILE: drivers/lio-core/target_core_transport.c:1383:
+			*bl += sprintf(b+*bl, "        Core Host ID: %u  Active Cmds: %d  Total Bytes: %llu\n",
 			                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxO)
#432: FILE: drivers/lio-core/target_core_transport.c:1386:
+			*bl += sprintf(b+*bl, "        CoreI Host ID: %u  Active Cmds: %d\n",
 			                ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#432: FILE: drivers/lio-core/target_core_transport.c:1386:
+			*bl += sprintf(b+*bl, "        CoreI Host ID: %u  Active Cmds: %d\n",
 			                 ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#464: FILE: drivers/lio-core/target_core_transport.c:1742:
+	if (!(dev->dev_obj_api = se_obj_get_api(TRANSPORT_LUN_TYPE_DEVICE)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#474: FILE: drivers/lio-core/target_core_transport.c:1873:
+	if (!(hba = dev->se_hba)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#515: FILE: drivers/lio-core/target_core_transport.c:2276:
+	return(__transport_alloc_se_cmd(tfo_api, se_sess, fabric_cmd_ptr,
+				data_length, data_direction));

ERROR:CODE_INDENT: code indent should use tabs where possible
#527: FILE: drivers/lio-core/target_core_transport.c:2323:
+        spin_lock(&cmd->se_lun->lun_sep_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: drivers/lio-core/target_core_transport.c:2323:
+        spin_lock(&cmd->se_lun->lun_sep_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#528: FILE: drivers/lio-core/target_core_transport.c:2324:
+        if (cmd->se_lun->lun_sep)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: drivers/lio-core/target_core_transport.c:2324:
+        if (cmd->se_lun->lun_sep)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#529: FILE: drivers/lio-core/target_core_transport.c:2325:
+                cmd->se_lun->lun_sep->sep_stats.cmd_pdus++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#529: FILE: drivers/lio-core/target_core_transport.c:2325:
+                cmd->se_lun->lun_sep->sep_stats.cmd_pdus++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#530: FILE: drivers/lio-core/target_core_transport.c:2326:
+        spin_unlock(&cmd->se_lun->lun_sep_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#530: FILE: drivers/lio-core/target_core_transport.c:2326:
+        spin_unlock(&cmd->se_lun->lun_sep_lock);$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#615: FILE: drivers/lio-core/target_core_transport.c:3931:
+		if (!(dev = task->se_dev))

ERROR:CODE_INDENT: code indent should use tabs where possible
#633: FILE: drivers/lio-core/target_core_transport.c:4502:
+        return(__transport_alloc_se_cmd(&passthrough_fabric_ops, NULL, NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#633: FILE: drivers/lio-core/target_core_transport.c:4502:
+        return(__transport_alloc_se_cmd(&passthrough_fabric_ops, NULL, NULL,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#634: FILE: drivers/lio-core/target_core_transport.c:4503:
+        return(__transport_alloc_se_cmd(&passthrough_fabric_ops, NULL, NULL,
                 data_length, data_direction));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#643: FILE: drivers/lio-core/target_core_transport.c:4543:
+	if (!(cmd->se_lun = kmalloc(sizeof(se_lun_t), GFP_KERNEL))) {

CHECK:SPACING: No space is necessary after a cast
#660: FILE: drivers/lio-core/target_core_transport.c:4557:
+	ISCSI_LUN(cmd)->se_dev = (se_device_t *) type_ptr;

WARNING:SPLIT_STRING: quoted string split across lines
#790: FILE: drivers/lio-core/target_core_transport.c:6046:
                 DEBUG_CLEAR_L("SE_LUN[%d] - Setting T_TASK(cmd)->transport"
+			"_lun_stop for  ITT: 0x%08x\n", ISCSI_LUN(cmd)->unpacked_lun,

WARNING:MISSING_SPACE: break quoted strings at a space character
#790: FILE: drivers/lio-core/target_core_transport.c:6046:
                 DEBUG_CLEAR_L("SE_LUN[%d] - Setting T_TASK(cmd)->transport"
+			"_lun_stop for  ITT: 0x%08x\n", ISCSI_LUN(cmd)->unpacked_lun,

WARNING:SPLIT_STRING: quoted string split across lines
#799: FILE: drivers/lio-core/target_core_transport.c:6065:
                 DEBUG_CLEAR_L("SE_LUN[%d] - ITT: 0x%08x before transport"
+			"_lun_wait_for_tasks()\n", ISCSI_LUN(cmd)->unpacked_lun,

WARNING:MISSING_SPACE: break quoted strings at a space character
#799: FILE: drivers/lio-core/target_core_transport.c:6065:
                 DEBUG_CLEAR_L("SE_LUN[%d] - ITT: 0x%08x before transport"
+			"_lun_wait_for_tasks()\n", ISCSI_LUN(cmd)->unpacked_lun,

WARNING:SPLIT_STRING: quoted string split across lines
#808: FILE: drivers/lio-core/target_core_transport.c:6074:
                 DEBUG_CLEAR_L("SE_LUN[%d] - ITT: 0x%08x after transport_lun"
+			"_wait_for_tasks(): SUCCESS\n", ISCSI_LUN(cmd)->unpacked_lun,

WARNING:MISSING_SPACE: break quoted strings at a space character
#808: FILE: drivers/lio-core/target_core_transport.c:6074:
                 DEBUG_CLEAR_L("SE_LUN[%d] - ITT: 0x%08x after transport_lun"
+			"_wait_for_tasks(): SUCCESS\n", ISCSI_LUN(cmd)->unpacked_lun,

WARNING:SPLIT_STRING: quoted string split across lines
#817: FILE: drivers/lio-core/target_core_transport.c:6091:
                         DEBUG_CLEAR_L("SE_LUN[%d] - Detected FE stop for"
+				" iscsi_cmd_t: %p ITT: 0x%08x\n", lun->unpacked_lun,

ERROR:CODE_INDENT: code indent should use tabs where possible
#826: FILE: drivers/lio-core/target_core_transport.c:6102:
+                        lun->unpacked_lun, CMD_TFO(cmd)->get_task_tag(cmd));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#826: FILE: drivers/lio-core/target_core_transport.c:6102:
+                        lun->unpacked_lun, CMD_TFO(cmd)->get_task_tag(cmd));$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#836: FILE: drivers/lio-core/target_core_transport.c:6303:
+extern int core_tpg_persistent_reservation_check (se_cmd_t *cmd)

ERROR:CODE_INDENT: code indent should use tabs where possible
#850: FILE: drivers/lio-core/target_core_transport.c:6310:
+        if (!lun->lun_reserved_node_acl || !sess) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#850: FILE: drivers/lio-core/target_core_transport.c:6310:
+        if (!lun->lun_reserved_node_acl || !sess) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#855: FILE: drivers/lio-core/target_core_transport.c:6314:
+        ret = (lun->lun_reserved_node_acl != sess->node_acl) ? -1 : 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#855: FILE: drivers/lio-core/target_core_transport.c:6314:
+        ret = (lun->lun_reserved_node_acl != sess->node_acl) ? -1 : 0;$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#866: FILE: drivers/lio-core/target_core_transport.c:6320:
+EXPORT_SYMBOL(core_tpg_persistent_reservation_check);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#870: FILE: drivers/lio-core/target_core_transport.c:6322:
+extern int core_tpg_persistent_reservation_release (se_cmd_t *cmd)

ERROR:CODE_INDENT: code indent should use tabs where possible
#886: FILE: drivers/lio-core/target_core_transport.c:6329:
+        if (!lun->lun_reserved_node_acl || !sess) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#886: FILE: drivers/lio-core/target_core_transport.c:6329:
+        if (!lun->lun_reserved_node_acl || !sess) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#892: FILE: drivers/lio-core/target_core_transport.c:6334:
+        if (lun->lun_reserved_node_acl != sess->node_acl) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#892: FILE: drivers/lio-core/target_core_transport.c:6334:
+        if (lun->lun_reserved_node_acl != sess->node_acl) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#899: FILE: drivers/lio-core/target_core_transport.c:6339:
+        PYXPRINT("Released %s TPG LUN: %u -> MAPPED LUN: %u for %s\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#899: FILE: drivers/lio-core/target_core_transport.c:6339:
+        PYXPRINT("Released %s TPG LUN: %u -> MAPPED LUN: %u for %s\n",$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#900: FILE: drivers/lio-core/target_core_transport.c:6340:
+        PYXPRINT("Released %s TPG LUN: %u -> MAPPED LUN: %u for %s\n",
+		TPG_TFO(tpg)->get_fabric_name(),

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#912: FILE: drivers/lio-core/target_core_transport.c:6348:
+EXPORT_SYMBOL(core_tpg_persistent_reservation_release);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#917: FILE: drivers/lio-core/target_core_transport.c:6351:
+extern int core_tpg_persistent_reservation_reserve (se_cmd_t *cmd)

ERROR:CODE_INDENT: code indent should use tabs where possible
#943: FILE: drivers/lio-core/target_core_transport.c:6366:
+        if (lun->lun_reserved_node_acl && (lun->lun_reserved_node_acl != sess->node_acl)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#943: FILE: drivers/lio-core/target_core_transport.c:6366:
+        if (lun->lun_reserved_node_acl && (lun->lun_reserved_node_acl != sess->node_acl)) {$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lun->lun_reserved_node_acl != sess->node_acl'
#943: FILE: drivers/lio-core/target_core_transport.c:6366:
+        if (lun->lun_reserved_node_acl && (lun->lun_reserved_node_acl != sess->node_acl)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TYPO_SPELLING: 'CONFLIFT' may be misspelled - perhaps 'CONFLICT'?
#944: FILE: drivers/lio-core/target_core_transport.c:6367:
+                TRACE_ERROR("RESERVATION CONFLIFT for %s fabric\n",
                                          ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#944: FILE: drivers/lio-core/target_core_transport.c:6367:
+                TRACE_ERROR("RESERVATION CONFLIFT for %s fabric\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#944: FILE: drivers/lio-core/target_core_transport.c:6367:
+                TRACE_ERROR("RESERVATION CONFLIFT for %s fabric\n",$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#945: FILE: drivers/lio-core/target_core_transport.c:6368:
+                TRACE_ERROR("RESERVATION CONFLIFT for %s fabric\n",
+				TPG_TFO(tpg)->get_fabric_name());

ERROR:CODE_INDENT: code indent should use tabs where possible
#946: FILE: drivers/lio-core/target_core_transport.c:6369:
+                TRACE_ERROR("Original reserver TPG LUN: %u %s\n", lun->unpacked_lun,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#946: FILE: drivers/lio-core/target_core_transport.c:6369:
+                TRACE_ERROR("Original reserver TPG LUN: %u %s\n", lun->unpacked_lun,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#947: FILE: drivers/lio-core/target_core_transport.c:6370:
+                TRACE_ERROR("Original reserver TPG LUN: %u %s\n", lun->unpacked_lun,
                                 lun->lun_reserved_node_acl->initiatorname);

ERROR:CODE_INDENT: code indent should use tabs where possible
#951: FILE: drivers/lio-core/target_core_transport.c:6372:
+                                lun->unpacked_lun, cmd->se_deve->mapped_lun,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#951: FILE: drivers/lio-core/target_core_transport.c:6372:
+                                lun->unpacked_lun, cmd->se_deve->mapped_lun,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#952: FILE: drivers/lio-core/target_core_transport.c:6373:
+                                sess->node_acl->initiatorname);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#952: FILE: drivers/lio-core/target_core_transport.c:6373:
+                                sess->node_acl->initiatorname);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#960: FILE: drivers/lio-core/target_core_transport.c:6378:
+        lun->lun_reserved_node_acl = sess->node_acl;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#960: FILE: drivers/lio-core/target_core_transport.c:6378:
+        lun->lun_reserved_node_acl = sess->node_acl;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#961: FILE: drivers/lio-core/target_core_transport.c:6379:
+        PYXPRINT("Reserved %s TPG LUN: %u -> MAPPED LUN: %u for %s\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#961: FILE: drivers/lio-core/target_core_transport.c:6379:
+        PYXPRINT("Reserved %s TPG LUN: %u -> MAPPED LUN: %u for %s\n",$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#962: FILE: drivers/lio-core/target_core_transport.c:6380:
+        PYXPRINT("Reserved %s TPG LUN: %u -> MAPPED LUN: %u for %s\n",
+		TPG_TFO(tpg)->get_fabric_name(),

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#974: FILE: drivers/lio-core/target_core_transport.c:6388:
+EXPORT_SYMBOL(core_tpg_persistent_reservation_reserve);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#1085: FILE: drivers/lio-core/target_core_transport.h:113:
+extern struct se_session_s *transport_allocate_session (struct se_portal_group_s *, struct se_node_acl_s *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1085: FILE: drivers/lio-core/target_core_transport.h:113:
+extern struct se_session_s *transport_allocate_session (struct se_portal_group_s *, struct se_node_acl_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1085: FILE: drivers/lio-core/target_core_transport.h:113:
+extern struct se_session_s *transport_allocate_session (struct se_portal_group_s *, struct se_node_acl_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#1085: FILE: drivers/lio-core/target_core_transport.h:113:
+extern struct se_session_s *transport_allocate_session (struct se_portal_group_s *, struct se_node_acl_s *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_node_acl_s *' should also have an identifier name
#1085: FILE: drivers/lio-core/target_core_transport.h:113:
+extern struct se_session_s *transport_allocate_session (struct se_portal_group_s *, struct se_node_acl_s *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1086: FILE: drivers/lio-core/target_core_transport.h:114:
+extern int transport_register_session (struct se_session_s *, void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1086: FILE: drivers/lio-core/target_core_transport.h:114:
+extern int transport_register_session (struct se_session_s *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_session_s *' should also have an identifier name
#1086: FILE: drivers/lio-core/target_core_transport.h:114:
+extern int transport_register_session (struct se_session_s *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1086: FILE: drivers/lio-core/target_core_transport.h:114:
+extern int transport_register_session (struct se_session_s *, void *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1087: FILE: drivers/lio-core/target_core_transport.h:115:
+extern void transport_deregister_session (struct se_session_s *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1087: FILE: drivers/lio-core/target_core_transport.h:115:
+extern void transport_deregister_session (struct se_session_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_session_s *' should also have an identifier name
#1087: FILE: drivers/lio-core/target_core_transport.h:115:
+extern void transport_deregister_session (struct se_session_s *);

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#1096: FILE: drivers/lio-core/target_core_transport.h:136:
+extern se_cmd_t *transport_alloc_se_cmd (struct target_core_fabric_ops *, struct se_session_s *, void *, u32, int);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1096: FILE: drivers/lio-core/target_core_transport.h:136:
+extern se_cmd_t *transport_alloc_se_cmd (struct target_core_fabric_ops *, struct se_session_s *, void *, u32, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1096: FILE: drivers/lio-core/target_core_transport.h:136:
+extern se_cmd_t *transport_alloc_se_cmd (struct target_core_fabric_ops *, struct se_session_s *, void *, u32, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct target_core_fabric_ops *' should also have an identifier name
#1096: FILE: drivers/lio-core/target_core_transport.h:136:
+extern se_cmd_t *transport_alloc_se_cmd (struct target_core_fabric_ops *, struct se_session_s *, void *, u32, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_session_s *' should also have an identifier name
#1096: FILE: drivers/lio-core/target_core_transport.h:136:
+extern se_cmd_t *transport_alloc_se_cmd (struct target_core_fabric_ops *, struct se_session_s *, void *, u32, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1096: FILE: drivers/lio-core/target_core_transport.h:136:
+extern se_cmd_t *transport_alloc_se_cmd (struct target_core_fabric_ops *, struct se_session_s *, void *, u32, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#1096: FILE: drivers/lio-core/target_core_transport.h:136:
+extern se_cmd_t *transport_alloc_se_cmd (struct target_core_fabric_ops *, struct se_session_s *, void *, u32, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1096: FILE: drivers/lio-core/target_core_transport.h:136:
+extern se_cmd_t *transport_alloc_se_cmd (struct target_core_fabric_ops *, struct se_session_s *, void *, u32, int);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1101: FILE: drivers/lio-core/target_core_transport.h:140:
+extern int transport_generic_handle_tmr (se_cmd_t *, se_tmr_req_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1101: FILE: drivers/lio-core/target_core_transport.h:140:
+extern int transport_generic_handle_tmr (se_cmd_t *, se_tmr_req_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_cmd_t *' should also have an identifier name
#1101: FILE: drivers/lio-core/target_core_transport.h:140:
+extern int transport_generic_handle_tmr (se_cmd_t *, se_tmr_req_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_tmr_req_t *' should also have an identifier name
#1101: FILE: drivers/lio-core/target_core_transport.h:140:
+extern int transport_generic_handle_tmr (se_cmd_t *, se_tmr_req_t *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1112: FILE: drivers/lio-core/target_core_transport.h:180:
+extern int core_tpg_persistent_reservation_check (se_cmd_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1112: FILE: drivers/lio-core/target_core_transport.h:180:
+extern int core_tpg_persistent_reservation_check (se_cmd_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_cmd_t *' should also have an identifier name
#1112: FILE: drivers/lio-core/target_core_transport.h:180:
+extern int core_tpg_persistent_reservation_check (se_cmd_t *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1113: FILE: drivers/lio-core/target_core_transport.h:181:
+extern int core_tpg_persistent_reservation_release (se_cmd_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1113: FILE: drivers/lio-core/target_core_transport.h:181:
+extern int core_tpg_persistent_reservation_release (se_cmd_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_cmd_t *' should also have an identifier name
#1113: FILE: drivers/lio-core/target_core_transport.h:181:
+extern int core_tpg_persistent_reservation_release (se_cmd_t *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1114: FILE: drivers/lio-core/target_core_transport.h:182:
+extern int core_tpg_persistent_reservation_reserve (se_cmd_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1114: FILE: drivers/lio-core/target_core_transport.h:182:
+extern int core_tpg_persistent_reservation_reserve (se_cmd_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_cmd_t *' should also have an identifier name
#1114: FILE: drivers/lio-core/target_core_transport.h:182:
+extern int core_tpg_persistent_reservation_reserve (se_cmd_t *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000193247.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 32 errors, 76 warnings, 36 checks, 992 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000193247.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
