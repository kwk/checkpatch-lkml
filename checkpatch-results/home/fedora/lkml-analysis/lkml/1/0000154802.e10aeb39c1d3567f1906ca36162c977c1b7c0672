WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
Gitweb:     http://git.kernel.org/tip/9766cdbcb260389669e9679b2aa87c11832f479f

WARNING:TYPO_SPELLING: 'varibles' may be misspelled - perhaps 'variables'?
#43: 
 - declare varibles before they get used
           ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#80: FILE: arch/x86/kernel/cpu/common.c:1:
+#include <linux/topology.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#105: FILE: arch/x86/kernel/cpu/common.c:19:
+#include <asm/processor.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#108: FILE: arch/x86/kernel/cpu/common.c:22:
+#include <asm/pgtable.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/atomic.h> instead of <asm/atomic.h>
#109: FILE: arch/x86/kernel/cpu/common.c:23:
+#include <asm/atomic.h>

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#228: FILE: arch/x86/kernel/cpu/common.c:496:
+		printk(KERN_ERR "CPU: vendor_id '%s'"

WARNING:SPLIT_STRING: quoted string split across lines
#229: FILE: arch/x86/kernel/cpu/common.c:497:
+		printk(KERN_ERR "CPU: vendor_id '%s'"
+			"unknown, using generic init.\n", v);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#238: FILE: arch/x86/kernel/cpu/common.c:643:
+	printk(KERN_INFO "KERNEL supported cpus:\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#247: FILE: arch/x86/kernel/cpu/common.c:656:
+			printk(KERN_INFO "  %s %s\n", cpudev->c_vendor,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#248: FILE: arch/x86/kernel/cpu/common.c:657:
+			printk(KERN_INFO "  %s %s\n", cpudev->c_vendor,
 				cpudev->c_ident[j]);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i == 4'
#272: FILE: arch/x86/kernel/cpu/common.c:1012:
+		if ((i == 4) || (i == 5))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i == 5'
#272: FILE: arch/x86/kernel/cpu/common.c:1012:
+		if ((i == 4) || (i == 5))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000154802.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 6 checks, 252 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000154802.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
