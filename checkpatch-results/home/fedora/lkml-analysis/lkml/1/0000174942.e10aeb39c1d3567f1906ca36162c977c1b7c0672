CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#70: FILE: fs/compat_ioctl.c:2781:
+	    copy_in_user(&p->l_pad,	&p32->l_pad,	4*sizeof(u32)))
 	                           	            	 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#90: FILE: fs/compat_ioctl.c:2824:
+		error = ioctl_preallocate(filp, arg);
 		                          ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#119: FILE: fs/ioctl.c:381:
+int ioctl_preallocate(struct file *filp, unsigned long arg)
                                    ^^^^

CHECK:SPACING: No space is necessary after a cast
#124: FILE: fs/ioctl.c:386:
+	if (copy_from_user(&sr, (struct space_resv __user *) arg, sizeof(sr)))

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#140: FILE: fs/ioctl.c:402:
+	return do_fallocate(filp, FALLOC_FL_KEEP_SIZE, sr.l_start, sr.l_len);
 	                    ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#152: FILE: fs/ioctl.c:422:
+		return ioctl_preallocate(filp, arg);
 		                         ^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#165: FILE: fs/open.c:380:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cmd' - possible side-effects?
#283: FILE: include/linux/falloc.h:28:
+#define  _NATIVE_IOC(cmd, type) \
+	  _IOC(_IOC_DIR(cmd), _IOC_TYPE(cmd), _IOC_NR(cmd), sizeof(type))

WARNING:LINE_SPACING: Missing a blank line after declarations
#290: FILE: include/linux/falloc.h:35:
+	__s16		l_whence;
+	__s64		l_start	__attribute__((packed));

ERROR:POINTER_LOCATION: "foo		l_start	bar" should be "foo		l_start bar"
#290: FILE: include/linux/falloc.h:35:
+	__s64		l_start	__attribute__((packed));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#290: FILE: include/linux/falloc.h:35:
+	__s64		l_start	__attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#292: FILE: include/linux/falloc.h:37:
+	__s64		l_len __attribute__((packed));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#314: FILE: include/linux/fs.h:1697:
+extern int do_fallocate(struct file *file, int mode, loff_t offset,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#325: FILE: include/linux/fs.h:1709:
+extern int ioctl_preallocate(struct file *filp, unsigned long arg);
                                           ^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#325: FILE: include/linux/fs.h:1709:
+extern int ioctl_preallocate(struct file *filp, unsigned long arg);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000174942.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 8 warnings, 6 checks, 252 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000174942.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
