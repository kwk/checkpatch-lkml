WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
Show a process's page-by-page address space infomation in /proc/<pid>/pmaps.

WARNING:TYPO_SPELLING: 'infomation' may be misspelled - perhaps 'information'?
#30: 
Show a process's page-by-page address space infomation in /proc/<pid>/pmaps.
                                            ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#42: 
	Y:young R:referenced A:active U:uptodate P:ptedirty D:dirty W:writeback
	                                ^^^^^^^^

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
# cat /proc/$$/pmaps

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#141: FILE: fs/proc/task_mmu.c:769:
+#define PMAPS_BUF_SIZE   (64<<10)  /* 64K */
                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#142: FILE: fs/proc/task_mmu.c:770:
+#define PMAPS_BATCH_SIZE (16<<20)  /* 16M */
                             ^

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#153: FILE: fs/proc/task_mmu.c:781:
+} page_flags [] = {

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#158: FILE: fs/proc/task_mmu.c:786:
+	{1 << PG_uptodate,	"U:uptodate",	0},
 	                  	   ^^^^^^^^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#164: FILE: fs/proc/task_mmu.c:792:
+static unsigned long pte_page_flags(pte_t ptent, struct page* page)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#196: FILE: fs/proc/task_mmu.c:824:
+static int pmaps_pte_range(pmd_t *pmd, unsigned long addr, unsigned long end,
+			    void *private)

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#201: FILE: fs/proc/task_mmu.c:829:
+	spinlock_t *ptl;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#208: FILE: fs/proc/task_mmu.c:836:
+	apte = pte = pte_offset_map_lock(vma->vm_mm, pmd, addr, &ptl);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#223: FILE: fs/proc/task_mmu.c:851:
+		if (offset == pp->offset + pp->len &&
+				mapcount == pp->mapcount &&

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#257: FILE: fs/proc/task_mmu.c:885:
+	if (end - addr > PMAPS_BATCH_SIZE)
+	    end = addr + PMAPS_BATCH_SIZE;

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#269: FILE: fs/proc/task_mmu.c:897:
+static struct seq_operations proc_pid_pmaps_op = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:LINE_SPACING: Missing a blank line after declarations
#293: FILE: fs/proc/task_mmu.c:921:
+	int i;
+	for (page_mask = 0, i = 0; i < ARRAY_SIZE(page_flags); i++)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#318: FILE: fs/proc/base.c:2052:
+	REG("pmaps",      S_IRUSR, pmaps),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#326: FILE: fs/proc/base.c:2345:
+	REG("pmaps",     S_IRUSR, pmaps),

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000389993.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 10 warnings, 6 checks, 206 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000389993.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
