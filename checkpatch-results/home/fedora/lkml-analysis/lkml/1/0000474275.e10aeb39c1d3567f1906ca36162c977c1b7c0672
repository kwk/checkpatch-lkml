WARNING:TYPO_SPELLING: 'exeception' may be misspelled - perhaps 'exception'?
#31: 
function before the kernel exeception table is sorted, there is an
                           ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#80: FILE: arch/s390/kernel/base.S:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#81: FILE: arch/s390/kernel/base.S:2:
+ *  arch/s390/kernel/base.S

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#234: FILE: arch/s390/kernel/early.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#235: FILE: arch/s390/kernel/early.c:2:
+ *  arch/s390/kernel/early.c

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#251: FILE: arch/s390/kernel/early.c:18:
+#include <asm/processor.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#263: FILE: arch/s390/kernel/early.c:30:
+extern int _eshared;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#314: FILE: arch/s390/kernel/early.c:81:
+		sprintf(defsys_cmd, "%s EW %.5X-%.5X", defsys_cmd,
+		sinitrd_pfn, einitrd_pfn);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#319: FILE: arch/s390/kernel/early.c:86:
+	sprintf(savesys_cmd, "SAVESYS %s \n IPL %s",

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#379: FILE: arch/s390/kernel/early.c:146:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#382: FILE: arch/s390/kernel/early.c:149:
+	int ret = -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#385: FILE: arch/s390/kernel/early.c:152:
+		return -ENOSYS;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#387: FILE: arch/s390/kernel/early.c:154:
+	asm volatile(

ERROR:SPACING: space required after that ',' (ctx:VxV)
#391: FILE: arch/s390/kernel/early.c:158:
+		EX_TABLE(0b,1b)
 		           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#395: FILE: arch/s390/kernel/early.c:162:
+		return -ENOSYS;

CHECK:BIT_MACRO: Prefer using the BIT macro
#401: FILE: arch/s390/kernel/early.c:168:
+#define ADDR2G	(1UL << 31)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: No space is necessary after a cast
#429: FILE: arch/s390/kernel/early.c:196:
+	return (unsigned long) memsize;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#436: FILE: arch/s390/kernel/early.c:203:
+	asm volatile(

ERROR:SPACING: space required after that ',' (ctx:VxV)
#441: FILE: arch/s390/kernel/early.c:208:
+		EX_TABLE(0b,1b)
 		           ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#447: FILE: arch/s390/kernel/early.c:214:
+#define CHUNK_INCR	(1UL << 17)

WARNING:TYPO_SPELLING: 'hsa' may be misspelled - perhaps 'has'?
#484: FILE: arch/s390/kernel/early.c:251:
+		 * - we reached the hsa -> skip it.
 		                    ^^^

CHECK:SPACING: No space is necessary after a cast
#511: FILE: arch/s390/kernel/early.c:278:
+	psw.addr = PSW_ADDR_AMODE | (unsigned long) s390_base_ext_handler;

CHECK:SPACING: No space is necessary after a cast
#513: FILE: arch/s390/kernel/early.c:280:
+	psw.addr = PSW_ADDR_AMODE | (unsigned long) s390_base_pgm_handler;

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#520: FILE: arch/s390/kernel/early.c:287:
+ * and create a kernel NSS at startup if the SAVESYS= parm is defined
                                                       ^^^^

CHECK:SPACING: No space is necessary after a cast
#964: FILE: arch/s390/kernel/ipl.c:1105:
+		PSW_ADDR_AMODE | (unsigned long) s390_base_mcck_handler;

CHECK:SPACING: No space is necessary after a cast
#970: FILE: arch/s390/kernel/ipl.c:1110:
+		PSW_ADDR_AMODE | (unsigned long) s390_base_pgm_handler;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1360: FILE: drivers/s390/char/sclp_info.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1361: FILE: drivers/s390/char/sclp_info.c:2:
+ *  drivers/s390/char/sclp_info.c

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1521: FILE: include/asm-s390/processor.h:333:
+extern void s390_base_mcck_handler(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1522: FILE: include/asm-s390/processor.h:334:
+extern void s390_base_pgm_handler(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1523: FILE: include/asm-s390/processor.h:335:
+extern void s390_base_ext_handler(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1548: FILE: include/asm-s390/sclp.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1549: FILE: include/asm-s390/sclp.h:2:
+ *  include/asm-s390/sclp.h

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1565: FILE: include/asm-s390/sclp.h:18:
+} __attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1581: FILE: include/asm-s390/sclp.h:34:
+} __attribute__((packed, aligned(4096)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(4096) over __attribute__((aligned(4096)))
#1581: FILE: include/asm-s390/sclp.h:34:
+} __attribute__((packed, aligned(4096)));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1584: FILE: include/asm-s390/sclp.h:37:
+extern void sclp_readinfo_early(void);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000474275.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 19 warnings, 16 checks, 1330 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000474275.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
