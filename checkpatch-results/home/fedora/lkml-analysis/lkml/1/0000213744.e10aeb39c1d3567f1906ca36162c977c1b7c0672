WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#68: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#73: FILE: drivers/staging/pcc-acpi/Kconfig:1:
+config PCC_ACPI
+	tristate "Panasonic ACPI Hotkey support"
+	depends on ACPI
+	default n
+	---help---
+	  This driver provides support for Panasonic hotkeys through the
+	  ACPI interface.  This works for the Panasonic R1 (N variant),
+	  R2, R3, T2, W2, and Y2 laptops.
+
+	  To compile this driver as a module, choose M here. The module
+	  will be called pcc-acpi.

Kconfig symbols should have a help text which fully describes
it.

WARNING:TYPO_SPELLING: 'dependancy' may be misspelled - perhaps 'dependency'?
#101: FILE: drivers/staging/pcc-acpi/TODO:5:
+	- remove /proc dependancy if needed (not sure yet.)
 	               ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#110: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#129: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:20:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#130: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:21:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#136: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:27:
+ * ^INov.04, 2006^IHiroshi Miura <miura@da-cha.org>$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#137: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:28:
+ * ^I^I-v0.9^Iremove warning about section reference.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#138: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:29:
+ * ^I^I^Iremove acpi_os_free$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#139: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:30:
+ * ^I^I^Iadd /proc/acpi/pcc/brightness interface to allow HAL to access.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#140: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:31:
+ * ^I^I^Imerge dbronaugh's enhancement$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#141: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:32:
+ * ^I^I^IAug.17, 2004 David Bronaugh (dbronaugh)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#142: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:33:
+ *  ^I^I^I^I- Added screen brightness setting interface$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#144: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:35:
+ * ^I^I^I^I  for the ideas I needed to accomplish it$

WARNING:TYPO_SPELLING: 'retrive' may be misspelled - perhaps 'retrieve'?
#193: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:84:
+ *		        add function to retrive SIFR
   		                        ^^^^^^^

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#216: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:107:
+#include <asm/uaccess.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#221: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:112:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#226: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:117:
+#define SEQ_OPEN_FS(_open_func_name_, _show_func_name_) \
+static int _open_func_name_(struct inode *inode, struct file *file) \
+{								      \
+	return single_open(file, _show_func_name_, PDE(inode)->data);  \
+}

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#248: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:139:
+	.open	 = _open_func_name_ ,		  \
 	     	                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#309: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:200:
+/* LCD_TYPEs: 0 = Normal, 1 = Semi-transparent
+   ENV_STATEs: Normal temp=0x01, High temp=0x81, N/A=0x00

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#312: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:203:
+                 SINF_LCD_TYPE,      /* 1 */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:203:
+                 SINF_LCD_TYPE,      /* 1 */$

WARNING:LONG_LINE_COMMENT: line length of 115 exceeds 100 columns
#314: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:205:
+		             /* 4 = R1 only handle SINF_AC_CUR_BRIGHT as SINF_CUR_BRIGHT and don't know AC state */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#314: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:205:
+^I^I             /* 4 = R1 only handle SINF_AC_CUR_BRIGHT as SINF_CUR_BRIGHT and don't know AC state */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#361: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:252:
+                           method access functions$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#361: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:252:
+/* --------------------------------------------------------------------------
+                           method access functions

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#362: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:253:
+   -------------------------------------------------------------------------- */

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#401: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:292:
+static int acpi_pcc_retrieve_biosdata(struct acpi_hotkey *hotkey, u32* sinf)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#410: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:301:
+	status = acpi_evaluate_object(hotkey->handle, METHOD_HKEY_SINF, 0 , &buffer);
 	                                                                  ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hkey->type != ACPI_TYPE_PACKAGE'
#417: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:308:
+	if (!hkey || (hkey->type != ACPI_TYPE_PACKAGE)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hkey->package.elements[i]
#429: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:320:
+		union acpi_object *element = &(hkey->package.elements[i]);

WARNING:LINE_SPACING: Missing a blank line after declarations
#430: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:321:
+		union acpi_object *element = &(hkey->package.elements[i]);
+		if (likely(element->type == ACPI_TYPE_INTEGER)) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#430: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:321:
+		if (likely(element->type == ACPI_TYPE_INTEGER)) {
[...]
+		} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#445: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:336:
+	struct acpi_hotkey *hotkey = (struct acpi_hotkey *) seq->private;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#446: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:337:
+	u32* sinf = kmalloc(sizeof(u32) * (hotkey->num_sifr + 1), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#452: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:343:
+		ACPI_DEBUG_PRINT((ACPI_DB_ERROR, "Couldn't allocate %li bytes\n",
+		       sizeof(u32) * hotkey->num_sifr));

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#456: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:347:
+	if (acpi_pcc_retrieve_biosdata(hotkey, sinf)) {
[...]
+	} else {
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#467: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:358:
+                       user interface functions$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#467: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:358:
+/* --------------------------------------------------------------------------
+                       user interface functions

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#468: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:359:
+   -------------------------------------------------------------------------- */

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#471: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:362:
+#define PCC_SINF_READ_F(_name_, FUNC) \
+static int _name_  (struct seq_file *seq, void *offset) \
+{ \
+	return acpi_pcc_read_sinf_field(seq, (FUNC)); \
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#472: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:363:
+static int _name_  (struct seq_file *seq, void *offset) \

WARNING:BRACES: braces {} are not necessary for single statement blocks
#494: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:385:
+	if (!hotkey || !hotkey->device) {
+		return_VALUE(0);
+	}

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#505: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:396:
+^Istruct acpi_hotkey ^I*hotkey = (struct acpi_hotkey *) seq->private;$

CHECK:SPACING: No space is necessary after a cast
#505: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:396:
+	struct acpi_hotkey 	*hotkey = (struct acpi_hotkey *) seq->private;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#506: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:397:
+^Istruct input_dev ^I*hotk_input_dev = hotkey->input_dev;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#507: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:398:
+^Istruct pcc_keyinput ^I*keyinput = input_get_drvdata(hotk_input_dev);$

CHECK:SPACING: No space is necessary after a cast
#518: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:409:
+	struct acpi_hotkey *hotkey = (struct acpi_hotkey *) seq->private;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#532: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:423:
+static ssize_t acpi_pcc_write_single_flag (struct file *file,

ERROR:CODE_INDENT: code indent should use tabs where possible
#533: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:424:
+                                           const char __user *buffer,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:424:
+                                           const char __user *buffer,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#534: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:425:
+                                           size_t count,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#534: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:425:
+                                           size_t count,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#535: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:426:
+                                           int sinf_func)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#535: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:426:
+                                           int sinf_func)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#540: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:431:
+^Iu32 ^I^I^Ival;$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#544: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:435:
+	if (!hotkey || (count > sizeof(write_string) - 1)) {
+		return_VALUE(-EINVAL);
+        }

ERROR:CODE_INDENT: code indent should use tabs where possible
#546: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:437:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#546: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:437:
+        }$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#548: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:439:
+	if (copy_from_user(write_string, buffer, count)) {
+		return_VALUE(-EFAULT);
+        }

ERROR:CODE_INDENT: code indent should use tabs where possible
#550: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:441:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#550: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:441:
+        }$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#553: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:444:
+	if (sscanf(write_string, "%i", &val) == 1 && (val == 0 || val == 1)) {
+		acpi_pcc_write_sset(hotkey, sinf_func, val);
+	}

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#553: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:444:
+	if (sscanf(write_string, "%i", &val) == 1 && (val == 0 || val == 1)) {
+		acpi_pcc_write_sset(hotkey, sinf_func, val);
+	}

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#569: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:460:
+	u32* sinf = kmalloc(sizeof(u32) * (hotkey->num_sifr + 1), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#578: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:469:
+		ACPI_DEBUG_PRINT((ACPI_DB_ERROR, "Couldn't allocate %li bytes\n",
+		       sizeof(u32) * hotkey->num_sifr));

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#592: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:483:
+	if (sscanf(write_string, "%i", &bright) == 1 &&
[...]
+			acpi_pcc_write_sset(hotkey, cur_index, bright);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#592: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:483:
+	if (sscanf(write_string, "%i", &bright) == 1 &&
+		bright >= sinf[min_index] && bright <= sinf[max_index]) {
+			acpi_pcc_write_sset(hotkey, cur_index, bright);
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#593: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:484:
+	if (sscanf(write_string, "%i", &bright) == 1 &&
+		bright >= sinf[min_index] && bright <= sinf[max_index]) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#603: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:494:
+static ssize_t acpi_pcc_write_ac_brightness(struct file *file, const char __user *buffer,
+					 size_t count, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#611: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:502:
+static ssize_t acpi_pcc_write_dc_brightness(struct file *file, const char __user *buffer,
+					 size_t count, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#619: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:510:
+static ssize_t acpi_pcc_write_no_brightness(struct file *file, const char __user *buffer,
+					 size_t count, loff_t *ppos)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#626: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:517:
+static ssize_t acpi_pcc_write_mute (struct file *file,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#633: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:524:
+static ssize_t acpi_pcc_write_sticky_key (struct file *file,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#641: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:532:
+static ssize_t acpi_pcc_write_keyinput(struct file *file, const char __user *buffer,
+					 size_t count, loff_t *ppos)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#645: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:536:
+^Istruct pcc_keyinput ^I*keyinput;$

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#659: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:550:
+	if (sscanf(write_string, "%i", &key_mode) == 1 && (key_mode == 0 || key_mode == 1)) {
+		keyinput = (struct pcc_keyinput *)input_get_drvdata(hotkey->input_dev);
+		keyinput->key_mode = key_mode;
+	}

ERROR:CODE_INDENT: code indent should use tabs where possible
#668: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:559:
+                            hotkey driver$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#668: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:559:
+/* --------------------------------------------------------------------------
+                            hotkey driver

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#669: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:560:
+   -------------------------------------------------------------------------- */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#692: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:583:
+	if (keyinput->key_mode == 0) { return_VOID; }

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#692: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:583:
+	if (keyinput->key_mode == 0) { return_VOID; }

ERROR:SPACING: space prohibited after that open parenthesis '('
#696: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:587:
+	if ((       0 > hkey_num	   ) ||

ERROR:SPACING: space prohibited before that close parenthesis ')'
#696: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:587:
+	if ((       0 > hkey_num	   ) ||

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hkey_num > ARRAY_SIZE(key_map)'
#696: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:587:
+	if ((       0 > hkey_num	   ) ||
+	    (hkey_num > ARRAY_SIZE(key_map))) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#696: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:587:
+	if ((       0 > hkey_num	   ) ||

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#722: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:613:
+	if (likely(ACPI_SUCCESS(status))) {
[...]
+	} else {
[...]

CHECK:SPACING: No space is necessary after a cast
#733: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:624:
+	struct acpi_hotkey *hotkey = (struct acpi_hotkey *) data;

ERROR:SPACING: space required before the open parenthesis '('
#737: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:628:
+	switch(event) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#753: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:644:
+                              FS Interface (/proc)$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#753: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:644:
+/* --------------------------------------------------------------------------
+                              FS Interface (/proc)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#754: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:645:
+   -------------------------------------------------------------------------- */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#770: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:661:
+typedef struct file_operations fops_t;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#770: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:661:
+typedef struct file_operations fops_t;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#771: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:662:
+static fops_t acpi_pcc_numbatteries_fops = SEQ_FILEOPS_R (acpi_pcc_numbatteries_open_fs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#772: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:663:
+static fops_t acpi_pcc_lcdtype_fops = SEQ_FILEOPS_R (acpi_pcc_lcdtype_open_fs);

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#774: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:665:
+static fops_t acpi_pcc_ac_brightness_fops = SEQ_FILEOPS_RW(acpi_pcc_ac_brightness_open_fs, acpi_pcc_write_ac_brightness);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#777: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:668:
+static fops_t acpi_pcc_dc_brightness_fops = SEQ_FILEOPS_RW(acpi_pcc_dc_brightness_open_fs, acpi_pcc_write_dc_brightness);

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#780: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:671:
+static fops_t acpi_pcc_brightness_fops = SEQ_FILEOPS_RW(acpi_pcc_brightness_open_fs, acpi_pcc_write_no_brightness);

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#781: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:672:
+static fops_t acpi_pcc_sticky_key_fops = SEQ_FILEOPS_RW(acpi_pcc_sticky_key_open_fs, acpi_pcc_write_sticky_key);

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#782: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:673:
+static fops_t acpi_pcc_keyinput_fops = SEQ_FILEOPS_RW(acpi_pcc_keyinput_open_fs, acpi_pcc_write_keyinput);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#783: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:674:
+static fops_t acpi_pcc_version_fops = SEQ_FILEOPS_R (acpi_pcc_version_open_fs);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#785: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:676:
+typedef struct _ProcItem

CHECK:CAMELCASE: Avoid CamelCase: <_ProcItem>
#785: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:676:
+typedef struct _ProcItem

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#786: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:677:
+typedef struct _ProcItem
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#787: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:678:
+	const char* name;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#788: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:679:
+	struct file_operations *fops;

CHECK:CAMELCASE: Avoid CamelCase: <ProcItem>
#790: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:681:
+} ProcItem;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#794: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:685:
+ProcItem pcc_proc_items_sifr[] =
+{

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#795: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:686:
+	{ "num_batteries",      &acpi_pcc_numbatteries_fops,     S_IRUGO },

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#796: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:687:
+	{ "lcd_type",           &acpi_pcc_lcdtype_fops,          S_IRUGO },

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#797: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:688:
+	{ "ac_brightness_max" , &acpi_pcc_ac_brightness_max_fops,S_IRUGO },
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#797: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:688:
+	{ "ac_brightness_max" , &acpi_pcc_ac_brightness_max_fops,S_IRUGO },
 	                                                        ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#797: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:688:
+	{ "ac_brightness_max" , &acpi_pcc_ac_brightness_max_fops,S_IRUGO },

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#798: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:689:
+	{ "ac_brightness_min" , &acpi_pcc_ac_brightness_min_fops,S_IRUGO },
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#798: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:689:
+	{ "ac_brightness_min" , &acpi_pcc_ac_brightness_min_fops,S_IRUGO },
 	                                                        ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#798: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:689:
+	{ "ac_brightness_min" , &acpi_pcc_ac_brightness_min_fops,S_IRUGO },

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#799: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:690:
+	{ "ac_brightness" ,     &acpi_pcc_ac_brightness_fops,    S_IFREG | S_IRUGO | S_IWUSR },
 	                  ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#799: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:690:
+	{ "ac_brightness" ,     &acpi_pcc_ac_brightness_fops,    S_IFREG | S_IRUGO | S_IWUSR },

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#800: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:691:
+	{ "dc_brightness_max" , &acpi_pcc_dc_brightness_max_fops,S_IRUGO },
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#800: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:691:
+	{ "dc_brightness_max" , &acpi_pcc_dc_brightness_max_fops,S_IRUGO },
 	                                                        ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#800: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:691:
+	{ "dc_brightness_max" , &acpi_pcc_dc_brightness_max_fops,S_IRUGO },

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#801: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:692:
+	{ "dc_brightness_min" , &acpi_pcc_dc_brightness_min_fops,S_IRUGO },
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#801: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:692:
+	{ "dc_brightness_min" , &acpi_pcc_dc_brightness_min_fops,S_IRUGO },
 	                                                        ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#801: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:692:
+	{ "dc_brightness_min" , &acpi_pcc_dc_brightness_min_fops,S_IRUGO },

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#802: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:693:
+	{ "dc_brightness" ,     &acpi_pcc_dc_brightness_fops,    S_IFREG | S_IRUGO | S_IWUSR },
 	                  ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#802: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:693:
+	{ "dc_brightness" ,     &acpi_pcc_dc_brightness_fops,    S_IFREG | S_IRUGO | S_IWUSR },

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#803: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:694:
+	{ "brightness" ,        &acpi_pcc_brightness_fops,    S_IFREG | S_IRUGO | S_IWUSR },
 	               ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#803: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:694:
+	{ "brightness" ,        &acpi_pcc_brightness_fops,    S_IFREG | S_IRUGO | S_IWUSR },

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#804: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:695:
+	{ "mute",               &acpi_pcc_mute_fops,             S_IFREG | S_IRUGO | S_IWUSR },

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#809: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:700:
+ProcItem pcc_proc_items[] =
+{

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#810: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:701:
+	{ "sticky_key",		&acpi_pcc_sticky_key_fops,	 S_IFREG | S_IRUGO | S_IWUSR },

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#811: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:702:
+	{ "keyinput",           &acpi_pcc_keyinput_fops,         S_IFREG | S_IRUGO | S_IWUSR },

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#812: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:703:
+	{ "version",            &acpi_pcc_version_fops,          S_IRUGO },

ERROR:CODE_INDENT: code indent should use tabs where possible
#817: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:708:
+                                      ProcItem *proc_items,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#817: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:708:
+static int acpi_pcc_add_device(struct acpi_device *device,
+                                      ProcItem *proc_items,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#817: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:708:
+                                      ProcItem *proc_items,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#818: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:709:
+                                      int num)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#818: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:709:
+                                      int num)$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#820: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:711:
+	struct proc_dir_entry* proc;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#821: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:712:
+	ProcItem* item;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#823: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:714:
+	struct acpi_hotkey *hotkey = (struct acpi_hotkey*)acpi_driver_data(device);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#844: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:735:
+	struct proc_dir_entry* acpi_pcc_dir;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#845: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:736:
+	struct acpi_hotkey *hotkey = (struct acpi_hotkey*)acpi_driver_data(device);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#861: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:752:
+	status |= acpi_pcc_add_device(device, pcc_proc_items, sizeof(pcc_proc_items)/sizeof(ProcItem));

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#861: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:752:
+	status |= acpi_pcc_add_device(device, pcc_proc_items, sizeof(pcc_proc_items)/sizeof(ProcItem));
 	                                                                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#872: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:763:
+                                          ProcItem *proc_items,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#872: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:763:
+static void acpi_pcc_remove_device(struct acpi_device *device,
+                                          ProcItem *proc_items,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#872: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:763:
+                                          ProcItem *proc_items,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#873: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:764:
+                                          int num)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#873: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:764:
+                                          int num)$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#875: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:766:
+	struct acpi_hotkey *hotkey = (struct acpi_hotkey*)acpi_driver_data(device);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#876: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:767:
+	ProcItem* item;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#879: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:770:
+	for (item = proc_items, i = 0; item->name != NULL && i < num; ++item, ++i) {
+		remove_proc_entry(item->name, hotkey->proc_dir_entry);
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "item->name"
#879: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:770:
+	for (item = proc_items, i = 0; item->name != NULL && i < num; ++item, ++i) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:RETURN_VOID: void function return statements are not generally useful
#884: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:775:
+	return;
+}

ERROR:CODE_INDENT: code indent should use tabs where possible
#887: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:778:
+                             input init$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#887: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:778:
+/* --------------------------------------------------------------------------
+                             input init

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#888: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:779:
+   -------------------------------------------------------------------------- */

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#896: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:787:
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,15)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#896: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:787:
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,15)
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#896: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:787:
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,15)
                                             ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#896: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:787:
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,15)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#903: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:794:
+	hotk_input_dev = kcalloc(1, sizeof(struct input_dev),GFP_KERNEL);
 	                                                    ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hotk_input_dev"
#904: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:795:
+	if (hotk_input_dev == NULL) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#910: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:801:
+	pcc_keyinput = kcalloc(1,sizeof(struct pcc_keyinput),GFP_KERNEL);
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#910: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:801:
+	pcc_keyinput = kcalloc(1,sizeof(struct pcc_keyinput),GFP_KERNEL);
 	                                                    ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pcc_keyinput"
#912: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:803:
+	if (pcc_keyinput == NULL) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#943: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:834:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#950: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:841:
+                         module init$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#950: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:841:
+/* --------------------------------------------------------------------------
+                         module init

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#951: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:842:
+   -------------------------------------------------------------------------- */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#960: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:851:
+	if (device == NULL || hotkey == NULL) { return_VALUE(-EINVAL); }

WARNING:BRACES: braces {} are not necessary for single statement blocks
#960: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:851:
+	if (device == NULL || hotkey == NULL) { return_VALUE(-EINVAL); }

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!device"
#960: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:851:
+	if (device == NULL || hotkey == NULL) { return_VALUE(-EINVAL); }

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hotkey"
#960: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:851:
+	if (device == NULL || hotkey == NULL) { return_VALUE(-EINVAL); }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#969: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:860:
+static int acpi_pcc_hotkey_add (struct acpi_device *device)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#977: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:868:
+	if (!device) {
+		return_VALUE(-EINVAL);
+	}

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*hotkey)...) over kmalloc(sizeof(struct acpi_hotkey)...)
#988: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:879:
+	hotkey = kmalloc(sizeof(struct acpi_hotkey), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1003: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:894:
+	status = acpi_install_notify_handler (

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1031: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:922:
+	if (acpi_disabled) {
+		return_VALUE(-ENODEV);
+	}

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1058: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:949:
+		acpi_pcc_remove_device(device, pcc_proc_items, sizeof(pcc_proc_items)/sizeof(ProcItem));

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1058: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:949:
+		acpi_pcc_remove_device(device, pcc_proc_items, sizeof(pcc_proc_items)/sizeof(ProcItem));
 		                                                                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1063: FILE: drivers/staging/pcc-acpi/pcc-acpi.c:954:
+	status = acpi_remove_notify_handler(hotkey->handle,
+		    ACPI_DEVICE_NOTIFY, acpi_pcc_hotkey_notify);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000213744.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 56 errors, 98 warnings, 30 checks, 1003 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000213744.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
