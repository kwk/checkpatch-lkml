WARNING:TYPO_SPELLING: 'neede' may be misspelled - perhaps 'needed'?
#42: 
To remove the neede for msi_lookup_irq I added first_msi_irq to struct
              ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#114: FILE: drivers/pci/msi.c:380:
+	irq = head = dev->first_msi_irq;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#147: FILE: drivers/pci/msi.c:432:
+	irq = head = dev->first_msi_irq;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#200: FILE: drivers/pci/msi.c:671:
+	if (pos > 0 && dev->msix_enabled) {
 			printk(KERN_INFO "PCI: %s: Can't enable MSI.  "

WARNING:SPLIT_STRING: quoted string split across lines
#203: FILE: drivers/pci/msi.c:673:
 			printk(KERN_INFO "PCI: %s: Can't enable MSI.  "
+			       "Device already has MSI-X enabled\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#223: FILE: drivers/pci/msi.c:704:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#241: FILE: drivers/pci/msi.c:718:
+		BUG_ON(irq_has_action(dev->first_msi_irq));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#332: FILE: drivers/pci/msi.c:853:
+	irq = head = dev->first_msi_irq;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#345: FILE: drivers/pci/msi.c:866:
+		printk(KERN_WARNING "PCI: %s: pci_disable_msix() called without "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pci_disable_msix', this function's name, in a string
#345: FILE: drivers/pci/msi.c:866:
+		printk(KERN_WARNING "PCI: %s: pci_disable_msix() called without "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#346: FILE: drivers/pci/msi.c:867:
+		printk(KERN_WARNING "PCI: %s: pci_disable_msix() called without "
+			"free_irq() on all MSI-X irqs\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#348: FILE: drivers/pci/msi.c:869:
+		BUG_ON(warning > 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#376: FILE: drivers/pci/msi.c:897:
+			BUG_ON(irq_has_action(dev->first_msi_irq));

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#389: FILE: drivers/pci/msi.c:906:
+		irq = head = dev->first_msi_irq;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000473807.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 5 checks, 331 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000473807.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
