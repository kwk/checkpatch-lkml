WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#37: FILE: Makefile:4:
+EXTRAVERSION = .20
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#72: FILE: arch/sparc64/kernel/trampoline.S:378:
+	ba,pt		%xcc, 3f
 	^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#107: FILE: drivers/acpi/dock.c:607:
+		if (!dock_in_progress(ds) && acpi_bus_get_device(ds->handle,
+		   &tmp)) {

WARNING:SPLIT_STRING: quoted string split across lines
#139: FILE: drivers/acpi/video.c:642:
+		ACPI_DEBUG_PRINT((ACPI_DB_INFO, "Could not query available "
+						"LCD brightness level\n"));

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#148: FILE: drivers/acpi/video.c:651:
+		printk(KERN_ERR "can't allocate memory\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#148: FILE: drivers/acpi/video.c:651:
+	if (!br) {
+		printk(KERN_ERR "can't allocate memory\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around br->levels
#152: FILE: drivers/acpi/video.c:655:
+	br->levels = kmalloc(obj->package.count * sizeof *(br->levels),

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: drivers/acpi/video.c:656:
+	br->levels = kmalloc(obj->package.count * sizeof *(br->levels),
+				GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#160: FILE: drivers/acpi/video.c:663:
+			printk(KERN_ERR PREFIX "Invalid data\n");

CHECK:SPACING: No space is necessary after a cast
#163: FILE: drivers/acpi/video.c:666:
+		br->levels[count] = (u32) o->integer.value;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#336: FILE: fs/ext2/dir.c:151:
+		ext2_error(sb, __func__,
+			"size of directory #%lu is not a multiple "

WARNING:SPLIT_STRING: quoted string split across lines
#337: FILE: fs/ext2/dir.c:152:
+			"size of directory #%lu is not a multiple "
+			"of chunk size", dir->i_ino);

WARNING:SPLIT_STRING: quoted string split across lines
#352: FILE: fs/ext2/dir.c:171:
+		ext2_error(sb, __func__, "bad entry in directory #%lu: : %s - "
+			"offset=%lu, inode=%lu, rec_len=%d, name_len=%d",

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#353: FILE: fs/ext2/dir.c:172:
+			dir->i_ino, error, (page->index<<PAGE_CACHE_SHIFT)+offs,
 			                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#353: FILE: fs/ext2/dir.c:172:
+			dir->i_ino, error, (page->index<<PAGE_CACHE_SHIFT)+offs,
 			                                                  ^

CHECK:SPACING: No space is necessary after a cast
#354: FILE: fs/ext2/dir.c:173:
+			(unsigned long) le32_to_cpu(p->inode),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#367: FILE: fs/ext2/dir.c:180:
+		ext2_error(sb, "ext2_check_page",
+			"entry in directory #%lu spans the page boundary"

WARNING:SPLIT_STRING: quoted string split across lines
#368: FILE: fs/ext2/dir.c:181:
+			"entry in directory #%lu spans the page boundary"
+			"offset=%lu, inode=%lu",

WARNING:MISSING_SPACE: break quoted strings at a space character
#368: FILE: fs/ext2/dir.c:181:
+			"entry in directory #%lu spans the page boundary"
+			"offset=%lu, inode=%lu",

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#369: FILE: fs/ext2/dir.c:182:
+			dir->i_ino, (page->index<<PAGE_CACHE_SHIFT)+offs,
 			                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#369: FILE: fs/ext2/dir.c:182:
+			dir->i_ino, (page->index<<PAGE_CACHE_SHIFT)+offs,
 			                                           ^

CHECK:SPACING: No space is necessary after a cast
#370: FILE: fs/ext2/dir.c:183:
+			(unsigned long) le32_to_cpu(p->inode));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#378: FILE: fs/ext2/dir.c:190:
+static struct page * ext2_get_page(struct inode *dir, unsigned long n,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#422: FILE: fs/ext2/dir.c:399:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#487: FILE: fs/ext3/dir.c:154:
+				ext3_error(sb, __func__, "directory #%lu "
+					"contains a hole at offset %lld",

WARNING:SPLIT_STRING: quoted string split across lines
#515: FILE: fs/ext4/dir.c:153:
+				ext4_error(sb, __func__, "directory #%lu "
+					   "contains a hole at offset %Lu",

WARNING:PRINTF_L: %Lu is non-standard C, use %llu
#515: FILE: fs/ext4/dir.c:153:
+					   "contains a hole at offset %Lu",

CHECK:SPACING: No space is necessary after a cast
#517: FILE: fs/ext4/dir.c:155:
+					   (unsigned long long) filp->f_pos);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#557: FILE: include/math-emu/op-common.h:151:
+		if (_FP_FRAC_HIGH_##fs(X)			\
+		   & (_FP_OVERFLOW_##fs >> 1))			\
+		  {						\

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 18)
#557: FILE: include/math-emu/op-common.h:151:
+		if (_FP_FRAC_HIGH_##fs(X)			\
[...]
+		  {						\

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#564: FILE: include/math-emu/op-common.h:158:
+		else						\
+		  {						\

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 18)
#564: FILE: include/math-emu/op-common.h:158:
+		else						\
+		  {						\

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#701: FILE: net/core/scm.c:122:
+				for (i=fpl->count-1; i>=0; i--)
 				      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#701: FILE: net/core/scm.c:122:
+				for (i=fpl->count-1; i>=0; i--)
 				                 ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#701: FILE: net/core/scm.c:122:
+				for (i=fpl->count-1; i>=0; i--)
 				                      ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000205909.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 16 warnings, 15 checks, 676 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000205909.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
