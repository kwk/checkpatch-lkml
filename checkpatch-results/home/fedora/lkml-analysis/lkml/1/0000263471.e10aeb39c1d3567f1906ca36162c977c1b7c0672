WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#71: FILE: arch/x86/kernel/setup.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#157: FILE: arch/x86/kernel/setup.c:85:
+#include <asm/ist.h>
               ^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#161: FILE: arch/x86/kernel/setup.c:89:
+#include <asm/cacheflush.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#162: FILE: arch/x86/kernel/setup.c:90:
+#include <asm/processor.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/mmu_context.h> instead of <asm/mmu_context.h>
#171: FILE: arch/x86/kernel/setup.c:99:
+#include <asm/mmu_context.h>

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#211: FILE: arch/x86/kernel/setup.c:629:
+/* This value is set up by the early boot code to point to the value
+   immediately after the boot time page tables.  It contains a *physical*

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#212: FILE: arch/x86/kernel/setup.c:630:
+   address, and must not be in the .bss segment! */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#240: FILE: arch/x86/kernel/setup.c:658:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#284: FILE: arch/x86/kernel/setup.c:702:
+
+

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#308: FILE: arch/x86/kernel/setup.c:726:
+extern int root_mountflags;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:MISPLACED_INIT: __initdata should be placed after command_line[COMMAND_LINE_SIZE]
#316: FILE: arch/x86/kernel/setup.c:734:
+static char __initdata command_line[COMMAND_LINE_SIZE];

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#318: FILE: arch/x86/kernel/setup.c:736:
+#if defined(CONFIG_EDD) || defined(CONFIG_EDD_MODULE)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: arch/x86/kernel/setup.c:748:
+     memcpy(edd.mbr_signature, boot_params.edd_mbr_sig_buffer,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: arch/x86/kernel/setup.c:750:
+     memcpy(edd.edd_info, boot_params.eddbuf, sizeof(edd.edd_info));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: arch/x86/kernel/setup.c:751:
+     edd.mbr_signature_nr = boot_params.edd_mbr_sig_buf_entries;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: arch/x86/kernel/setup.c:752:
+     edd.edd_info_nr = boot_params.eddbuf_entries;$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#374: FILE: arch/x86/kernel/setup.c:792:
+		if (clen > MAX_MAP_CHUNK-slop)
 		                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#375: FILE: arch/x86/kernel/setup.c:793:
+			clen = MAX_MAP_CHUNK-slop;
 			                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#377: FILE: arch/x86/kernel/setup.c:795:
+		p = early_ioremap(mapaddr, clen+slop);
 		                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#378: FILE: arch/x86/kernel/setup.c:796:
+		memcpy(q, p+slop, clen);
 		           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#379: FILE: arch/x86/kernel/setup.c:797:
+		early_iounmap(p, clen+slop);
 		                     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#387: FILE: arch/x86/kernel/setup.c:805:
+	printk(KERN_INFO "Move RAMDISK from %016llx - %016llx to"

WARNING:SPLIT_STRING: quoted string split across lines
#388: FILE: arch/x86/kernel/setup.c:806:
+	printk(KERN_INFO "Move RAMDISK from %016llx - %016llx to"
+		" %08llx - %08llx\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#410: FILE: arch/x86/kernel/setup.c:828:
+	if (ramdisk_size >= (end_of_lowmem>>1)) {
 	                                  ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#412: FILE: arch/x86/kernel/setup.c:830:
+		printk(KERN_ERR "initrd too large to handle, "

WARNING:SPLIT_STRING: quoted string split across lines
#413: FILE: arch/x86/kernel/setup.c:831:
+		printk(KERN_ERR "initrd too large to handle, "
+		       "disabling initrd\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#417: FILE: arch/x86/kernel/setup.c:835:
+	printk(KERN_INFO "RAMDISK: %08llx - %08llx\n", ramdisk_image,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#418: FILE: arch/x86/kernel/setup.c:836:
+	printk(KERN_INFO "RAMDISK: %08llx - %08llx\n", ramdisk_image,
+			ramdisk_end);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#420: FILE: arch/x86/kernel/setup.c:838:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#433: FILE: arch/x86/kernel/setup.c:851:
+	printk(KERN_ERR "initrd extends beyond end of memory "

WARNING:SPLIT_STRING: quoted string split across lines
#434: FILE: arch/x86/kernel/setup.c:852:
+	printk(KERN_ERR "initrd extends beyond end of memory "
+	       "(0x%08llx > 0x%08llx)\ndisabling initrd\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#441: FILE: arch/x86/kernel/setup.c:859:
+	ramdisk_here = find_e820_area(0, end_of_lowmem, ramdisk_size,
+					 PAGE_SIZE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#445: FILE: arch/x86/kernel/setup.c:863:
+		panic("Cannot find place for new RAMDISK of size %lld\n",
+			 ramdisk_size);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#448: FILE: arch/x86/kernel/setup.c:866:
+	/* Note: this includes all the lowmem currently occupied by
+	   the initrd, we rely on that fact to keep the data intact. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#448: FILE: arch/x86/kernel/setup.c:866:
+	   the initrd, we rely on that fact to keep the data intact. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#450: FILE: arch/x86/kernel/setup.c:868:
+	reserve_early(ramdisk_here, ramdisk_here + ramdisk_size,
+			 "NEW RAMDISK");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#453: FILE: arch/x86/kernel/setup.c:871:
+	printk(KERN_INFO "Allocated new RAMDISK: %08llx - %08llx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#454: FILE: arch/x86/kernel/setup.c:872:
+	printk(KERN_INFO "Allocated new RAMDISK: %08llx - %08llx\n",
+			 ramdisk_here, ramdisk_here + ramdisk_size);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#488: FILE: arch/x86/kernel/setup.c:906:
+	printk(KERN_INFO "Command line: %s\n", boot_command_line);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#514: FILE: arch/x86/kernel/setup.c:932:
+	if (!strncmp((char *)&boot_params.efi_info.efi_loader_signature,
+#ifdef CONFIG_X86_32

CHECK:SPACING: No space is necessary after a cast
#532: FILE: arch/x86/kernel/setup.c:950:
+	init_mm.start_code = (unsigned long) _text;

CHECK:SPACING: No space is necessary after a cast
#533: FILE: arch/x86/kernel/setup.c:951:
+	init_mm.end_code = (unsigned long) _etext;

CHECK:SPACING: No space is necessary after a cast
#534: FILE: arch/x86/kernel/setup.c:952:
+	init_mm.end_data = (unsigned long) _edata;

CHECK:SPACING: No space is necessary after a cast
#538: FILE: arch/x86/kernel/setup.c:956:
+	init_mm.brk = (unsigned long) &_end;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#542: FILE: arch/x86/kernel/setup.c:960:
+	code_resource.end = virt_to_phys(_etext)-1;
 	                                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#544: FILE: arch/x86/kernel/setup.c:962:
+	data_resource.end = virt_to_phys(_edata)-1;
 	                                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#546: FILE: arch/x86/kernel/setup.c:964:
+	bss_resource.end = virt_to_phys(&__bss_stop)-1;
 	                                            ^

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#551: FILE: arch/x86/kernel/setup.c:969:
+	strlcpy(command_line, boot_command_line, COMMAND_LINE_SIZE);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#593: FILE: arch/x86/kernel/setup.c:1011:
+		printk(KERN_INFO "fixed physical RAM map:\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#677: FILE: arch/x86/kernel/setup.c:1095:
+    defined(CONFIG_X86_MPPARSE) && defined(CONFIG_X86_64)$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#743: FILE: arch/x86/kernel/setup.c:1161:
+		printk(KERN_WARNING "More than 8 CPUs detected and "

WARNING:SPLIT_STRING: quoted string split across lines
#744: FILE: arch/x86/kernel/setup.c:1162:
+		printk(KERN_WARNING "More than 8 CPUs detected and "
+			"CONFIG_X86_PC cannot handle it.\nUse "

WARNING:SPLIT_STRING: quoted string split across lines
#745: FILE: arch/x86/kernel/setup.c:1163:
+			"CONFIG_X86_PC cannot handle it.\nUse "
+			"CONFIG_X86_GENERICARCH or CONFIG_X86_BIGSMP.\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000263471.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 29 warnings, 25 checks, 714 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000263471.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
