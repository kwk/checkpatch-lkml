WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#68: FILE: instrumentation/vmstat.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#97: FILE: instrumentation/vmstat.c:30:
+	while (cpu < NR_CPUS) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#102: FILE: instrumentation/vmstat.c:35:
+		if (cpu < NR_CPUS)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#105: FILE: instrumentation/vmstat.c:38:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#115: FILE: instrumentation/vmstat.c:48:
+ * during and after execution of this function.
+*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: instrumentation/vmstat.c:95:
+ ^I * fls() is used to have a cheap way of logarithmic scaling.$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#162: FILE: instrumentation/vmstat.c:95:
+ ^I * fls() is used to have a cheap way of logarithmic scaling.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#170: FILE: instrumentation/vmstat.c:103:
+^I * 20 ^I^I2^I^I2^I1-2 GB^I^I5$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#210: FILE: instrumentation/vmstat.c:143:
+	for_each_zone(zone) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: instrumentation/vmstat.c:158:
+void __mod_zone_page_state(struct zone *zone, enum zone_stat_item item,
+				int delta)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: instrumentation/vmstat.c:178:
+void mod_zone_page_state(struct zone *zone, enum zone_stat_item item,
+					int delta)

ERROR:SPACING: space prohibited after that '-' (ctx:WxW)
#306: FILE: instrumentation/vmstat.c:239:
+	if (unlikely(*p < - pcp->stat_threshold)) {
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#383: FILE: instrumentation/vmstat.c:316:
+				zone_page_state_add(p->vm_stat_diff[i],
+					zone, i);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#428: FILE: instrumentation/vmstat.c:361:
+ * z ^I    = the zone from which the allocation occurred.$

WARNING:LINE_SPACING: Missing a blank line after declarations
#462: FILE: instrumentation/vmstat.c:395:
+	loff_t node = *pos;
+	for (pgdat = first_online_pgdat();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#484: FILE: instrumentation/vmstat.c:417:
+static void walk_zones_in_node(struct seq_file *m, pg_data_t *pgdat,
+		void (*print)(struct seq_file *m, pg_data_t *, struct zone *))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#501: FILE: instrumentation/vmstat.c:434:
+static void frag_show_print(struct seq_file *m, pg_data_t *pgdat,
+						struct zone *zone)

WARNING:LINE_SPACING: Missing a blank line after declarations
#517: FILE: instrumentation/vmstat.c:450:
+	pg_data_t *pgdat = (pg_data_t *)arg;
+	walk_zones_in_node(m, pgdat, frag_show_print);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#528: FILE: instrumentation/vmstat.c:461:
+		seq_printf(m, "Node %4d, zone %8s, type %12s ",
+					pgdat->node_id,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around zone->free_area[order]
#536: FILE: instrumentation/vmstat.c:469:
+			area = &(zone->free_area[order]);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#564: FILE: instrumentation/vmstat.c:497:
+static void pagetypeinfo_showblockcount_print(struct seq_file *m,
+					pg_data_t *pgdat, struct zone *zone)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'xx' - possible side-effects?
#655: FILE: instrumentation/vmstat.c:588:
+#define TEXTS_FOR_ZONES(xx) TEXT_FOR_DMA(xx) TEXT_FOR_DMA32(xx) xx "_normal", \
+					TEXT_FOR_HIGHMEM(xx) xx "_movable",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#716: FILE: instrumentation/vmstat.c:649:
+static void zoneinfo_show_print(struct seq_file *m, pg_data_t *pgdat,
+							struct zone *zone)

WARNING:LINE_SPACING: Missing a blank line after declarations
#719: FILE: instrumentation/vmstat.c:652:
+	int i;
+	seq_printf(m, "Node %d, zone %8s", pgdat->node_id, zone->name);

WARNING:SPLIT_STRING: quoted string split across lines
#722: FILE: instrumentation/vmstat.c:655:
+		   "\n  pages free     %lu"
+		   "\n        min      %lu"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#723: FILE: instrumentation/vmstat.c:656:
+		   "\n        min      %lu"
+		   "\n        low      %lu"

WARNING:SPLIT_STRING: quoted string split across lines
#724: FILE: instrumentation/vmstat.c:657:
+		   "\n        low      %lu"
+		   "\n        high     %lu"

WARNING:SPLIT_STRING: quoted string split across lines
#725: FILE: instrumentation/vmstat.c:658:
+		   "\n        high     %lu"
+		   "\n        scanned  %lu (a: %lu i: %lu)"

WARNING:SPLIT_STRING: quoted string split across lines
#726: FILE: instrumentation/vmstat.c:659:
+		   "\n        scanned  %lu (a: %lu i: %lu)"
+		   "\n        spanned  %lu"

WARNING:SPLIT_STRING: quoted string split across lines
#727: FILE: instrumentation/vmstat.c:660:
+		   "\n        spanned  %lu"
+		   "\n        present  %lu",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#739: FILE: instrumentation/vmstat.c:672:
+		seq_printf(m, "\n    %-12s %lu", vmstat_text[i],
+				zone_page_state(zone, i));

WARNING:SPLIT_STRING: quoted string split across lines
#748: FILE: instrumentation/vmstat.c:681:
+		   ")"
+		   "\n  pagesets");

WARNING:SPLIT_STRING: quoted string split across lines
#757: FILE: instrumentation/vmstat.c:690:
+				   "\n    cpu: %i pcp: %i"
+				   "\n              count: %i"

WARNING:SPLIT_STRING: quoted string split across lines
#758: FILE: instrumentation/vmstat.c:691:
+				   "\n              count: %i"
+				   "\n              high:  %i"

WARNING:SPLIT_STRING: quoted string split across lines
#759: FILE: instrumentation/vmstat.c:692:
+				   "\n              high:  %i"
+				   "\n              batch: %i",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#767: FILE: instrumentation/vmstat.c:700:
+		seq_printf(m, "\n  vm stats threshold: %d",
+				pageset->stat_threshold);

WARNING:SPLIT_STRING: quoted string split across lines
#772: FILE: instrumentation/vmstat.c:705:
+		   "\n  all_unreclaimable: %u"
+		   "\n  prev_priority:     %i"

WARNING:SPLIT_STRING: quoted string split across lines
#773: FILE: instrumentation/vmstat.c:706:
+		   "\n  prev_priority:     %i"
+		   "\n  start_pfn:         %lu",

WARNING:LINE_SPACING: Missing a blank line after declarations
#786: FILE: instrumentation/vmstat.c:719:
+	pg_data_t *pgdat = (pg_data_t *)arg;
+	walk_zones_in_node(m, pgdat, zoneinfo_show_print);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#792: FILE: instrumentation/vmstat.c:725:
+			       * fragmentation. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#814: FILE: instrumentation/vmstat.c:747:
+	v = kmalloc(NR_VM_ZONE_STAT_ITEMS * sizeof(unsigned long),
+			GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#870: FILE: instrumentation/vmstat.c:803:
+	schedule_delayed_work(&__get_cpu_var(vmstat_work),
+		sysctl_stat_interval);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#873: FILE: instrumentation/vmstat.c:806:
+static void __devinit start_cpu_timer(int cpu)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#886: FILE: instrumentation/vmstat.c:819:
+static int __cpuinit vmstat_cpuup_callback(struct notifier_block *nfb,
+		unsigned long action,

WARNING:MISPLACED_INIT: __cpuinitdata should be placed after vmstat_notifier
#915: FILE: instrumentation/vmstat.c:848:
+static struct notifier_block __cpuinitdata vmstat_notifier =

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#916: FILE: instrumentation/vmstat.c:849:
+static struct notifier_block __cpuinitdata vmstat_notifier =
+	{ &vmstat_cpuup_callback, NULL, 0 };

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000363819.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 26 warnings, 17 checks, 879 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000363819.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
