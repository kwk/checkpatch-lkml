CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mcfg_res->start >= fixmem32->address'
#115: FILE: arch/i386/pci/mmconfig-shared.c:221:
+		if ((mcfg_res->start >= fixmem32->address) &&
+		    (mcfg_res->end < (fixmem32->address +
+		    		      fixmem32->address_length))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: arch/i386/pci/mmconfig-shared.c:223:
+^I^I    ^I^I      fixmem32->address_length))) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#117: FILE: arch/i386/pci/mmconfig-shared.c:223:
+^I^I    ^I^I      fixmem32->address_length))) {$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'res->type != ACPI_RESOURCE_TYPE_ADDRESS32'
#122: FILE: arch/i386/pci/mmconfig-shared.c:228:
+	if ((res->type != ACPI_RESOURCE_TYPE_ADDRESS32) &&
+	    (res->type != ACPI_RESOURCE_TYPE_ADDRESS64))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'res->type != ACPI_RESOURCE_TYPE_ADDRESS64'
#122: FILE: arch/i386/pci/mmconfig-shared.c:228:
+	if ((res->type != ACPI_RESOURCE_TYPE_ADDRESS32) &&
+	    (res->type != ACPI_RESOURCE_TYPE_ADDRESS64))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'address.address_length <= 0'
#127: FILE: arch/i386/pci/mmconfig-shared.c:233:
+	if (ACPI_FAILURE(status) ||
+	   (address.address_length <= 0) ||
+	   (address.resource_type != ACPI_MEMORY_RANGE))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'address.resource_type != ACPI_MEMORY_RANGE'
#127: FILE: arch/i386/pci/mmconfig-shared.c:233:
+	if (ACPI_FAILURE(status) ||
+	   (address.address_length <= 0) ||
+	   (address.resource_type != ACPI_MEMORY_RANGE))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#128: FILE: arch/i386/pci/mmconfig-shared.c:234:
+	if (ACPI_FAILURE(status) ||
+	   (address.address_length <= 0) ||

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mcfg_res->start >= address.minimum'
#132: FILE: arch/i386/pci/mmconfig-shared.c:238:
+	if ((mcfg_res->start >= address.minimum) &&
+	    (mcfg_res->end < (address.minimum + address.address_length))) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: arch/i386/pci/mmconfig-shared.c:252:
+^I  ^I^I    check_mcfg_resource, context);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#146: FILE: arch/i386/pci/mmconfig-shared.c:252:
+^I  ^I^I    check_mcfg_resource, context);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#146: FILE: arch/i386/pci/mmconfig-shared.c:252:
+	acpi_walk_resources(handle, METHOD_NAME__CRS,
+	  		    check_mcfg_resource, context);

WARNING:LINE_SPACING: Missing a blank line after declarations
#194: FILE: arch/i386/pci/mmconfig-shared.c:303:
+		u32 size = (cfg->end_bus_number + 1) << 20;
+		cfg = &pci_mmcfg_config[i];

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#195: FILE: arch/i386/pci/mmconfig-shared.c:304:
+		printk(KERN_NOTICE "PCI: MCFG configuration %d: base %lu "

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#195: FILE: arch/i386/pci/mmconfig-shared.c:304:
+		printk(KERN_NOTICE "PCI: MCFG configuration %d: base %lu "
+		       "segment %hu buses %u - %u\n",
+		       i, (unsigned long)cfg->address, cfg->pci_segment,
+		       (unsigned int)cfg->start_bus_number,
+		       (unsigned int)cfg->end_bus_number);

WARNING:SPLIT_STRING: quoted string split across lines
#196: FILE: arch/i386/pci/mmconfig-shared.c:305:
+		printk(KERN_NOTICE "PCI: MCFG configuration %d: base %lu "
+		       "segment %hu buses %u - %u\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#201: FILE: arch/i386/pci/mmconfig-shared.c:310:
+			printk(KERN_NOTICE "PCI: MCFG area at %Lx reserved "

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#201: FILE: arch/i386/pci/mmconfig-shared.c:310:
+			printk(KERN_NOTICE "PCI: MCFG area at %Lx reserved "

WARNING:SPLIT_STRING: quoted string split across lines
#202: FILE: arch/i386/pci/mmconfig-shared.c:311:
+			printk(KERN_NOTICE "PCI: MCFG area at %Lx reserved "
+			       "in ACPI motherboard resources\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#205: FILE: arch/i386/pci/mmconfig-shared.c:314:
+			printk(KERN_ERR "PCI: BIOS Bug: MCFG area at %Lx is not"

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#205: FILE: arch/i386/pci/mmconfig-shared.c:314:
+			printk(KERN_ERR "PCI: BIOS Bug: MCFG area at %Lx is not"

WARNING:SPLIT_STRING: quoted string split across lines
#206: FILE: arch/i386/pci/mmconfig-shared.c:315:
+			printk(KERN_ERR "PCI: BIOS Bug: MCFG area at %Lx is not"
+			       " reserved in ACPI motherboard resources\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#209: FILE: arch/i386/pci/mmconfig-shared.c:318:
+			/* Don't try to do this check unless configuration
+			   type 1 is available. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#209: FILE: arch/i386/pci/mmconfig-shared.c:318:
+			   type 1 is available. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: arch/i386/pci/mmconfig-shared.c:321:
+^I^I^I                    cfg->address + size - 1,$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#214: FILE: arch/i386/pci/mmconfig-shared.c:323:
+				printk(KERN_NOTICE

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#215: FILE: arch/i386/pci/mmconfig-shared.c:324:
+				       "PCI: MCFG area at %Lx reserved in "

WARNING:SPLIT_STRING: quoted string split across lines
#216: FILE: arch/i386/pci/mmconfig-shared.c:325:
+				       "PCI: MCFG area at %Lx reserved in "
+					"E820\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#237: FILE: arch/i386/pci/mmconfig-shared.c:347:
+	/* If type 1 access is available, no need to enable MMCONFIG yet, we can
+	   defer until later when the ACPI interpreter is available to better

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#238: FILE: arch/i386/pci/mmconfig-shared.c:348:
+	   validate things. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pci_mmcfg_config_num == 0'
#244: FILE: arch/i386/pci/mmconfig-shared.c:354:
+	if ((pci_mmcfg_config_num == 0) ||
+	    (pci_mmcfg_config == NULL) ||
+	    (pci_mmcfg_config[0].address == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pci_mmcfg_config == NULL'
#244: FILE: arch/i386/pci/mmconfig-shared.c:354:
+	if ((pci_mmcfg_config_num == 0) ||
+	    (pci_mmcfg_config == NULL) ||
+	    (pci_mmcfg_config[0].address == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pci_mmcfg_config[0].address == 0'
#244: FILE: arch/i386/pci/mmconfig-shared.c:354:
+	if ((pci_mmcfg_config_num == 0) ||
+	    (pci_mmcfg_config == NULL) ||
+	    (pci_mmcfg_config[0].address == 0))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pci_mmcfg_config"
#245: FILE: arch/i386/pci/mmconfig-shared.c:355:
+	    (pci_mmcfg_config == NULL) ||

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#329: FILE: include/linux/pci.h:897:
+extern void __init pci_mmcfg_early_init(int type);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#330: FILE: include/linux/pci.h:898:
+extern void __init pci_mmcfg_late_init(void);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000377876.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 19 warnings, 14 checks, 230 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000377876.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
