CHECK:BRACES: braces {} should be used on all arms of this statement
#106: FILE: fs/ocfs2/dlmfs/dlmfs.c:272:
+	if (got) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#107: FILE: fs/ocfs2/dlmfs/dlmfs.c:273:
+		BUG_ON(got != readlen);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: Unbalanced braces around else statement
#110: FILE: fs/ocfs2/dlmfs/dlmfs.c:276:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#217: FILE: fs/ocfs2/dlmfs/userdlm.c:44:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#254: FILE: fs/ocfs2/dlmfs/userdlm.c:109:
+^I^I_lockres->l_namelen, _lockres->l_name); ^I^I\$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lockres->l_blocking == DLM_LOCK_EX'
#439: FILE: fs/ocfs2/dlmfs/userdlm.c:352:
+	if ((lockres->l_blocking == DLM_LOCK_EX)
 	    && (lockres->l_ex_holders || lockres->l_ro_holders)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lockres->l_blocking == DLM_LOCK_PR'
#448: FILE: fs/ocfs2/dlmfs/userdlm.c:360:
+	if ((lockres->l_blocking == DLM_LOCK_PR)
 	    && lockres->l_ex_holders) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#468: FILE: fs/ocfs2/dlmfs/userdlm.c:378:
+				DLM_LKF_CONVERT|DLM_LKF_VALBLK,
 				               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#530: FILE: fs/ocfs2/dlmfs/userdlm.c:478:
+		BUG_ON(level == DLM_LOCK_IV);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#531: FILE: fs/ocfs2/dlmfs/userdlm.c:479:
+		BUG_ON(level == DLM_LOCK_NL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#599: FILE: fs/ocfs2/dlmfs/userdlm.c:550:
+	BUG_ON(lockres->l_level < DLM_LOCK_EX);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#624: FILE: fs/ocfs2/dlmfs/userdlm.c:569:
+	BUG_ON(lockres->l_level < DLM_LOCK_PR);

CHECK:BRACES: braces {} should be used on all arms of this statement
#625: FILE: fs/ocfs2/dlmfs/userdlm.c:570:
+	if (ocfs2_dlm_lvb_valid(&lockres->l_lksb)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#628: FILE: fs/ocfs2/dlmfs/userdlm.c:573:
+	} else

WARNING:RETURN_VOID: void function return statements are not generally useful
#697: FILE: fs/ocfs2/dlmfs/userdlm.c:657:
+	return;
+}

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000013463.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 8 checks, 672 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000013463.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
