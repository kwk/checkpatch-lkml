WARNING:MISPLACED_INIT: __initdata should be placed after hw_addr[2]
#52: FILE: arch/avr32/boards/atstk1000/atstk1002.c:30:
+static struct eth_addr __initdata hw_addr[2] = {{{0}}};

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:MISPLACED_INIT: __initdata should be placed after eth_data[2]
#55: FILE: arch/avr32/boards/atstk1000/atstk1002.c:32:
+static struct eth_platform_data __initdata eth_data[2] = {{0}};

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#67: FILE: arch/avr32/boards/atstk1000/setup.c:20:
+struct tag *bootloader_tags __initdata = NULL;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:MISPLACED_INIT: __initdata should be placed after command_line[COMMAND_LINE_SIZE]
#82: FILE: arch/avr32/kernel/setup.c:47:
+static char __initdata command_line[COMMAND_LINE_SIZE] = "";

WARNING:MISPLACED_INIT: __initdata should be placed after mem_range_cache[32]
#89: FILE: arch/avr32/kernel/setup.c:53:
+static struct tag_mem_range __initdata mem_range_cache[32] = {{0}};

ERROR:INITIALISED_STATIC: do not initialise statics to 0l
#99: FILE: arch/avr32/kernel/setup.c:90:
+static unsigned long __initdata fbmem_start = 0l;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:MISPLACED_INIT: __initdata should be placed after fbmem_start
#99: FILE: arch/avr32/kernel/setup.c:90:
+static unsigned long __initdata fbmem_start = 0l;

ERROR:INITIALISED_STATIC: do not initialise statics to 0l
#100: FILE: arch/avr32/kernel/setup.c:91:
+static unsigned long __initdata fbmem_size = 0l;

WARNING:MISPLACED_INIT: __initdata should be placed after fbmem_size
#100: FILE: arch/avr32/kernel/setup.c:91:
+static unsigned long __initdata fbmem_size = 0l;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000469436.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 6 warnings, 0 checks, 47 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000469436.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
