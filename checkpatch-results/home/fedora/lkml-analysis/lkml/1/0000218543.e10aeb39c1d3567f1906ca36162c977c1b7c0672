WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#58: 
   git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip.git x86-v28-for-linus-phase3-B

WARNING:TYPO_SPELLING: 'mapppings' may be misspelled - perhaps 'mappings'?
#112: 
      x86: gart alloc_coherent does virtual mapppings only when necessary
                                            ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#288: FILE: arch/x86/kernel/amd_iommu.c:71:
+	printk(KERN_ERR "AMD IOMMU: Event logged [");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#292: FILE: arch/x86/kernel/amd_iommu.c:75:
+		printk("ILLEGAL_DEV_TABLE_ENTRY device=%02x:%02x.%x "

WARNING:SPLIT_STRING: quoted string split across lines
#293: FILE: arch/x86/kernel/amd_iommu.c:76:
+		printk("ILLEGAL_DEV_TABLE_ENTRY device=%02x:%02x.%x "
+		       "address=0x%016llx flags=0x%04x]\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#298: FILE: arch/x86/kernel/amd_iommu.c:81:
+		printk("IO_PAGE_FAULT device=%02x:%02x.%x "

WARNING:SPLIT_STRING: quoted string split across lines
#299: FILE: arch/x86/kernel/amd_iommu.c:82:
+		printk("IO_PAGE_FAULT device=%02x:%02x.%x "
+		       "domain=0x%04x address=0x%016llx flags=0x%04x]\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#304: FILE: arch/x86/kernel/amd_iommu.c:87:
+		printk("DEV_TAB_HARDWARE_ERROR device=%02x:%02x.%x "

WARNING:SPLIT_STRING: quoted string split across lines
#305: FILE: arch/x86/kernel/amd_iommu.c:88:
+		printk("DEV_TAB_HARDWARE_ERROR device=%02x:%02x.%x "
+		       "address=0x%016llx flags=0x%04x]\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#310: FILE: arch/x86/kernel/amd_iommu.c:93:
+		printk("PAGE_TAB_HARDWARE_ERROR device=%02x:%02x.%x "

WARNING:SPLIT_STRING: quoted string split across lines
#311: FILE: arch/x86/kernel/amd_iommu.c:94:
+		printk("PAGE_TAB_HARDWARE_ERROR device=%02x:%02x.%x "
+		       "domain=0x%04x address=0x%016llx flags=0x%04x]\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#316: FILE: arch/x86/kernel/amd_iommu.c:99:
+		printk("ILLEGAL_COMMAND_ERROR address=0x%016llx]\n", address);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#319: FILE: arch/x86/kernel/amd_iommu.c:102:
+		printk("COMMAND_HARDWARE_ERROR address=0x%016llx "

WARNING:SPLIT_STRING: quoted string split across lines
#320: FILE: arch/x86/kernel/amd_iommu.c:103:
+		printk("COMMAND_HARDWARE_ERROR address=0x%016llx "
+		       "flags=0x%04x]\n", address, flags);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#323: FILE: arch/x86/kernel/amd_iommu.c:106:
+		printk("IOTLB_INV_TIMEOUT device=%02x:%02x.%x "

WARNING:SPLIT_STRING: quoted string split across lines
#324: FILE: arch/x86/kernel/amd_iommu.c:107:
+		printk("IOTLB_INV_TIMEOUT device=%02x:%02x.%x "
+		       "address=0x%016llx]\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#329: FILE: arch/x86/kernel/amd_iommu.c:112:
+		printk("INVALID_DEVICE_REQUEST device=%02x:%02x.%x "

WARNING:SPLIT_STRING: quoted string split across lines
#330: FILE: arch/x86/kernel/amd_iommu.c:113:
+		printk("INVALID_DEVICE_REQUEST device=%02x:%02x.%x "
+		       "address=0x%016llx flags=0x%04x]\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#335: FILE: arch/x86/kernel/amd_iommu.c:118:
+		printk(KERN_ERR "UNKNOWN type=0x%02x]\n", type);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#431: FILE: arch/x86/kernel/amd_iommu.c:510:
+				   0 , boundary_size, align_mask);
 				     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#593: FILE: arch/x86/kernel/amd_iommu.c:957:
+	if (unlikely(dma_dom->need_flush && !amd_iommu_unmap_flush)) {
[...]
+	} else if (unlikely(iommu_has_npcache(iommu)))
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#902: FILE: arch/x86/kernel/amd_iommu_init.c:247:
+	printk(KERN_INFO "AMD IOMMU: Enabling IOMMU "

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hx' is unnecessary
#902: FILE: arch/x86/kernel/amd_iommu_init.c:247:
+	printk(KERN_INFO "AMD IOMMU: Enabling IOMMU "
+	       "at %02x:%02x.%x cap 0x%hx\n",
+	       iommu->dev->bus->number,
+	       PCI_SLOT(iommu->dev->devfn),
+	       PCI_FUNC(iommu->dev->devfn),
+	       iommu->cap_ptr);

WARNING:SPLIT_STRING: quoted string split across lines
#903: FILE: arch/x86/kernel/amd_iommu_init.c:248:
+	printk(KERN_INFO "AMD IOMMU: Enabling IOMMU "
+	       "at %02x:%02x.%x cap 0x%hx\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#959: FILE: arch/x86/kernel/amd_iommu_init.c:445:
+	u64 entry;
+	iommu->evt_buf = (u8 *)__get_free_pages(GFP_KERNEL | __GFP_ZERO,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!iommu->evt_buf"
#962: FILE: arch/x86/kernel/amd_iommu_init.c:448:
+	if (iommu->evt_buf == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1119: FILE: arch/x86/kernel/amd_iommu_init.c:826:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1176: FILE: arch/x86/kernel/amd_iommu_init.c:1149:
+		printk(KERN_INFO "AMD IOMMU: IO/TLB flush on unmap enabled\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1178: FILE: arch/x86/kernel/amd_iommu_init.c:1151:
+		printk(KERN_INFO "AMD IOMMU: Lazy IO/TLB flushing enabled\n");

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1186: FILE: arch/x86/kernel/amd_iommu_init.c:1158:
+		   get_order(MAX_DOMAIN_ID/8));
 		                          ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1218: FILE: arch/x86/kernel/early-quirks.c:106:
+		printk(KERN_INFO "BIOS BUG: DMAR advertised on Intel G31/G33 chipset -- ignoring\n");

CHECK:SPACING: No space is necessary after a cast
#1564: FILE: arch/x86/kernel/pci-gart_64.c:178:
+		printk_address((unsigned long) iommu_leak_tab[iommu_pages-i],

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1564: FILE: arch/x86/kernel/pci-gart_64.c:178:
+		printk_address((unsigned long) iommu_leak_tab[iommu_pages-i],
 		                                                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1565: FILE: arch/x86/kernel/pci-gart_64.c:179:
+		printk_address((unsigned long) iommu_leak_tab[iommu_pages-i],
+				0);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1649: FILE: arch/x86/kernel/pci-gart_64.c:495:
+	if (force_iommu && !(flag & GFP_DMA)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1665: FILE: arch/x86/kernel/pci-gart_64.c:511:
+	} else

WARNING:SPLIT_STRING: quoted string split across lines
#1705: FILE: arch/x86/kernel/pci-gart_64.c:692:
+		panic("Could not register gart_sysdev -- "
+		      "would corrupt data on next suspend");

WARNING:SPLIT_STRING: quoted string split across lines
#1738: FILE: arch/x86/kernel/pci-gart_64.c:774:
 			printk(KERN_WARNING "More than 4GB of memory "
+			       "but GART IOMMU not available.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1739: FILE: arch/x86/kernel/pci-gart_64.c:775:
+			printk(KERN_WARNING "falling back to iommu=soft.\n");

CHECK:SPACING: No space is necessary after a cast
#1748: FILE: arch/x86/kernel/pci-gart_64.c:793:
+	iommu_gart_bitmap = (void *) __get_free_pages(GFP_KERNEL | __GFP_ZERO,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1757: FILE: arch/x86/kernel/pci-gart_64.c:800:
+		iommu_leak_tab = (void *)__get_free_pages(GFP_KERNEL|__GFP_ZERO,
 		                                                    ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1841: FILE: include/asm-x86/amd_iommu.h:29:
+extern irqreturn_t amd_iommu_int_handler(int irq, void *data);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#1915: FILE: include/asm-x86/amd_iommu_types.h:164:
+#define IOMMU_PTE_TV (1ULL << 1)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2075: FILE: include/asm-x86/dma-mapping.h:92:
+extern void *dma_generic_alloc_coherent(struct device *dev, size_t size,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2108: FILE: include/asm-x86/dma-mapping.h:264:
+       return gfp;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2113: FILE: include/asm-x86/dma-mapping.h:269:
+dma_alloc_coherent(struct device *dev, size_t size, dma_addr_t *dma_handle,
+		gfp_t gfp)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2161: FILE: include/asm-x86/gart.h:32:
+extern int agp_amd64_init(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2213: FILE: include/linux/iommu-helper.h:1:
+#ifndef _LINUX_IOMMU_HELPER_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2229: FILE: include/linux/iommu-helper.h:17:
+extern void iommu_area_reserve(unsigned long *map, unsigned long i, int len);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000218543.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 31 warnings, 17 checks, 2013 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000218543.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
