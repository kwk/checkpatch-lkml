WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
Make request_key() and co fundamentally asynchronous to make it easier for NFS

WARNING:TYPO_SPELLING: 'contruction' may be misspelled - perhaps 'construction'?
#158: FILE: Documentation/keys.txt:820:
+    construction.  To wait for contruction completion, the following should be
                                ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#305: FILE: include/keys/rxrpc-type.h:22:
+extern struct key *rxrpc_get_null_key(const char *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#305: FILE: include/keys/rxrpc-type.h:22:
+extern struct key *rxrpc_get_null_key(const char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#309: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#314: FILE: include/linux/key-type.h:1:
+/* Definitions for key type implementations

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#409: FILE: include/linux/key-type.h:96:
+extern int register_key_type(struct key_type *ktype);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#410: FILE: include/linux/key-type.h:97:
+extern void unregister_key_type(struct key_type *ktype);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#412: FILE: include/linux/key-type.h:99:
+extern int key_payload_reserve(struct key *key, size_t datalen);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#413: FILE: include/linux/key-type.h:100:
+extern int key_instantiate_and_link(struct key *key,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#418: FILE: include/linux/key-type.h:105:
+extern int key_negate_and_link(struct key *key,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#419: FILE: include/linux/key-type.h:106:
+			       unsigned timeout,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#422: FILE: include/linux/key-type.h:109:
+extern void complete_request_key(struct key_construction *cons, int error);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#432: FILE: include/linux/key.h:1:
+/* Authentication token and access key management

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#539: FILE: include/linux/key.h:214:
+extern struct key *request_key_async(struct key_type *type,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#543: FILE: include/linux/key.h:218:
+extern struct key *request_key_async_with_auxdata(struct key_type *type,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#548: FILE: include/linux/key.h:223:
+extern int wait_for_key_construction(struct key *key, bool intr);

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#653: FILE: security/keys/internal.h:18:
+static inline __attribute__((format(printf, 1, 2)))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#660: FILE: security/keys/internal.h:25:
+	printk(KERN_DEBUG "==> %s("FMT")\n", __FUNCTION__, ##__VA_ARGS__)

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#660: FILE: security/keys/internal.h:25:
+	printk(KERN_DEBUG "==> %s("FMT")\n", __FUNCTION__, ##__VA_ARGS__)

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#660: FILE: security/keys/internal.h:25:
+	printk(KERN_DEBUG "==> %s("FMT")\n", __FUNCTION__, ##__VA_ARGS__)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#662: FILE: security/keys/internal.h:27:
+	printk(KERN_DEBUG "<== %s()"FMT"\n", __FUNCTION__, ##__VA_ARGS__)

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#662: FILE: security/keys/internal.h:27:
+	printk(KERN_DEBUG "<== %s()"FMT"\n", __FUNCTION__, ##__VA_ARGS__)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#662: FILE: security/keys/internal.h:27:
+	printk(KERN_DEBUG "<== %s()"FMT"\n", __FUNCTION__, ##__VA_ARGS__)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#664: FILE: security/keys/internal.h:29:
+	printk(KERN_DEBUG "xxx" FMT"yyy\n", ##__VA_ARGS__)

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#664: FILE: security/keys/internal.h:29:
+	printk(KERN_DEBUG "xxx" FMT"yyy\n", ##__VA_ARGS__)

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#670: FILE: security/keys/internal.h:32:
+	no_printk(KERN_DEBUG "==> %s("FMT")\n", __FUNCTION__, ##__VA_ARGS__)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#670: FILE: security/keys/internal.h:32:
+	no_printk(KERN_DEBUG "==> %s("FMT")\n", __FUNCTION__, ##__VA_ARGS__)

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#672: FILE: security/keys/internal.h:34:
+	no_printk(KERN_DEBUG "<== %s()"FMT"\n", __FUNCTION__, ##__VA_ARGS__)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#672: FILE: security/keys/internal.h:34:
+	no_printk(KERN_DEBUG "<== %s()"FMT"\n", __FUNCTION__, ##__VA_ARGS__)

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#674: FILE: security/keys/internal.h:36:
+	no_printk(KERN_DEBUG FMT"\n", ##__VA_ARGS__)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#711: FILE: security/keys/key.c:1:
+/* Basic authentication token and access key management

CHECK:UNCOMMENTED_DEFINITION: DEFINE_MUTEX definition without comment
#723: FILE: security/keys/key.c:37:
+DEFINE_MUTEX(key_construction_mutex);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#846: FILE: security/keys/request_key.c:1:
+/* Request a key from userspace

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#940: FILE: security/keys/request_key.c:147:
+			 * instantiated */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1142: FILE: security/keys/request_key.c:195:
+		 * returning an error */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1261: FILE: security/keys/request_key.c:292:
+	 * waited for locks */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000380167.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 20 warnings, 17 checks, 1408 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000380167.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
