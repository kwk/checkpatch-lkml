WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#193: FILE: drivers/md/dm-uevent.c:75:
+					      unsigned nr_valid_paths)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#199: FILE: drivers/md/dm-uevent.c:81:
+		DMERR("%s: dm_uevent_alloc() failed", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#207: FILE: drivers/md/dm-uevent.c:89:
+		      __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#213: FILE: drivers/md/dm-uevent.c:95:
+		      __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#220: FILE: drivers/md/dm-uevent.c:102:
+		      __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#225: FILE: drivers/md/dm-uevent.c:107:
+		DMERR("%s: add_uevent_var() for DM_PATH failed", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#232: FILE: drivers/md/dm-uevent.c:114:
+		      __FUNCTION__);

WARNING:TYPO_SPELLING: 'compatable' may be misspelled - perhaps 'compatible'?
#262: FILE: drivers/md/dm-uevent.c:144:
+		 * hash_cell not compatable.
 		                 ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#267: FILE: drivers/md/dm-uevent.c:149:
+			      __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#273: FILE: drivers/md/dm-uevent.c:155:
+			      __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#279: FILE: drivers/md/dm-uevent.c:161:
+			      __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#285: FILE: drivers/md/dm-uevent.c:167:
+			DMERR("%s: kobject_uevent_env failed", __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#302: FILE: drivers/md/dm-uevent.c:184:
+void dm_path_uevent(enum dm_uevent_type event_type, struct dm_target *ti,
+		   const char *path, unsigned nr_valid_paths)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#302: FILE: drivers/md/dm-uevent.c:184:
+		   const char *path, unsigned nr_valid_paths)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#308: FILE: drivers/md/dm-uevent.c:190:
+		DMERR("%s: Invalid event_type %d", __FUNCTION__, event_type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#346: FILE: drivers/md/dm-uevent.h:33:
+extern void dm_send_uevents(struct list_head *events, struct kobject *kobj);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#347: FILE: drivers/md/dm-uevent.h:34:
+extern void dm_path_uevent(enum dm_uevent_type event_type,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#349: FILE: drivers/md/dm-uevent.h:36:
+			   unsigned nr_valid_paths);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#357: FILE: drivers/md/dm-uevent.h:47:
 }
+static inline void dm_send_uevents(struct list_head *events,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#361: FILE: drivers/md/dm-uevent.h:51:
+}
+static inline void dm_path_uevent(enum dm_uevent_type event_type,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#363: FILE: drivers/md/dm-uevent.h:53:
+				  unsigned nr_valid_paths)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000369058.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 16 warnings, 5 checks, 373 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000369058.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
