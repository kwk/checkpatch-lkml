WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
Building on menuconfig, this patch implements a more modern look interface using

WARNING:TYPO_SPELLING: 'fucntion' may be misspelled - perhaps 'function'?
#34: 
lkc.h define a fucntion named menu_init(). I changed the internal version's
               ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#75: FILE: scripts/kconfig/Makefile:121:
+nconf-objs^I:= nconf.o zconf.tab.o $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: scripts/kconfig/Makefile:171:
+HOSTLOADLIBES_nconf^I= -lmenu -lpanel -lform -lncurses $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: scripts/kconfig/Makefile:172:
+HOSTCFLAGS_nconf.o^I= $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: scripts/kconfig/Makefile:173:
+LDFLAGS_nconf.o^I= $

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#150: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#155: FILE: scripts/kconfig/nconf.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#183: FILE: scripts/kconfig/nconf.c:29:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#188: FILE: scripts/kconfig/nconf.c:34:
+#define max(a,b) ({\
              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#193: FILE: scripts/kconfig/nconf.c:39:
+#define min(a,b) ({\
              ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#198: FILE: scripts/kconfig/nconf.c:44:
+
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#199: FILE: scripts/kconfig/nconf.c:45:
+static const char mconf_readme[] = N_(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#351: FILE: scripts/kconfig/nconf.c:197:
+menu_instructions[] = N_(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#358: FILE: scripts/kconfig/nconf.c:204:
+radiolist_instructions[] = N_(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#363: FILE: scripts/kconfig/nconf.c:209:
+inputbox_instructions_int[] = N_(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#367: FILE: scripts/kconfig/nconf.c:213:
+inputbox_instructions_hex[] = N_(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#370: FILE: scripts/kconfig/nconf.c:216:
+inputbox_instructions_string[] = N_(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#373: FILE: scripts/kconfig/nconf.c:219:
+setmod_text[] = N_(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#377: FILE: scripts/kconfig/nconf.c:223:
+nohelp_text[] = N_(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#379: FILE: scripts/kconfig/nconf.c:225:
+load_config_text[] = N_(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#383: FILE: scripts/kconfig/nconf.c:229:
+load_config_help[] = N_(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#394: FILE: scripts/kconfig/nconf.c:240:
+save_config_text[] = N_(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#397: FILE: scripts/kconfig/nconf.c:243:
+save_config_help[] = N_(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#408: FILE: scripts/kconfig/nconf.c:254:
+search_help[] = N_(

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#516: FILE: scripts/kconfig/nconf.c:362:
+} attributes[ATTR_MAX+1];
                      ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#519: FILE: scripts/kconfig/nconf.c:365:
+/* available colors:
+   COLOR_BLACK   0

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#563: FILE: scripts/kconfig/nconf.c:409:
+/* available attributes:
+   A_NORMAL        Normal display (no highlight)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#579: FILE: scripts/kconfig/nconf.c:425:
+#define mkattr(name, attr) { attributes[name] = attr | COLOR_PAIR(name); }

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'attr' may be better as '(attr)' to avoid precedence issues
#579: FILE: scripts/kconfig/nconf.c:425:
+#define mkattr(name, attr) { attributes[name] = attr | COLOR_PAIR(name); }

CHECK:LINE_SPACING: Please don't use multiple blank lines
#611: FILE: scripts/kconfig/nconf.c:457:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#637: FILE: scripts/kconfig/nconf.c:483:
+	return text+i;
 	           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#643: FILE: scripts/kconfig/nconf.c:489:
+	int index = item_index(current_item(btns_menu));
+	switch (index) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#656: FILE: scripts/kconfig/nconf.c:502:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#659: FILE: scripts/kconfig/nconf.c:505:
+static void print_in_middle(WINDOW *win,
+		int starty,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#667: FILE: scripts/kconfig/nconf.c:513:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!win"
#668: FILE: scripts/kconfig/nconf.c:514:
+	if (win == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#689: FILE: scripts/kconfig/nconf.c:535:
+	int i;
+	for (i = 0; curses_menu_items[i]; i++)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#700: FILE: scripts/kconfig/nconf.c:546:
+	if (items_num > MAX_MENU_ITEMS-1)
 	                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#709: FILE: scripts/kconfig/nconf.c:555:
+	vsnprintf(k_menu_items[items_num].str,
+		sizeof(k_menu_items[items_num].str),

CHECK:LINE_SPACING: Please don't use multiple blank lines
#713: FILE: scripts/kconfig/nconf.c:559:
+
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#714: FILE: scripts/kconfig/nconf.c:560:
+	curses_menu_items[items_num] = new_item(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#718: FILE: scripts/kconfig/nconf.c:564:
+	set_item_userptr(curses_menu_items[items_num],
+			&k_menu_items[items_num]);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#728: FILE: scripts/kconfig/nconf.c:574:
+	int index = items_num-1;
 	                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#729: FILE: scripts/kconfig/nconf.c:575:
+	int index = items_num-1;
+	if (index < 0)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#741: FILE: scripts/kconfig/nconf.c:587:
+	curses_menu_items[index] = new_item(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#745: FILE: scripts/kconfig/nconf.c:591:
+	set_item_userptr(curses_menu_items[index],
+			&k_menu_items[index]);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cur"
#756: FILE: scripts/kconfig/nconf.c:602:
+	if (cur == NULL)

CHECK:SPACING: No space is necessary after a cast
#758: FILE: scripts/kconfig/nconf.c:604:
+	mcur = (struct mitem *) item_userptr(cur);

CHECK:SPACING: No space is necessary after a cast
#773: FILE: scripts/kconfig/nconf.c:619:
+	mcur = (struct mitem *) item_userptr(cur);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#776: FILE: scripts/kconfig/nconf.c:622:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#786: FILE: scripts/kconfig/nconf.c:632:
+	int res = 0;
+	while (*line != '\0' && *line != '\n') {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#815: FILE: scripts/kconfig/nconf.c:661:
+	ITEM *btns[btn_num+1];
 	                  ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#819: FILE: scripts/kconfig/nconf.c:665:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#824: FILE: scripts/kconfig/nconf.c:670:
+		btns_width += strlen(btn)+1;
 		                         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#834: FILE: scripts/kconfig/nconf.c:680:
+		int len = get_line_length(line);
+		if (msg_width < len)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#840: FILE: scripts/kconfig/nconf.c:686:
+	y = (LINES-(msg_lines+4))/2;
 	          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#840: FILE: scripts/kconfig/nconf.c:686:
+	y = (LINES-(msg_lines+4))/2;
 	                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#840: FILE: scripts/kconfig/nconf.c:686:
+	y = (LINES-(msg_lines+4))/2;
 	                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#841: FILE: scripts/kconfig/nconf.c:687:
+	x = (COLS-(total_width+4))/2;
 	         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#841: FILE: scripts/kconfig/nconf.c:687:
+	x = (COLS-(total_width+4))/2;
 	                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#841: FILE: scripts/kconfig/nconf.c:687:
+	x = (COLS-(total_width+4))/2;
 	                          ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#843: FILE: scripts/kconfig/nconf.c:689:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#846: FILE: scripts/kconfig/nconf.c:692:
+		win_rows = msg_lines+4;
 		                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#848: FILE: scripts/kconfig/nconf.c:694:
+		win_rows = msg_lines+2;
 		                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#850: FILE: scripts/kconfig/nconf.c:696:
+	win = newwin(win_rows, total_width+4, y, x);
 	                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#852: FILE: scripts/kconfig/nconf.c:698:
+	menu_win = derwin(win, 1, btns_width, win_rows-2,
 	                                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#853: FILE: scripts/kconfig/nconf.c:699:
+	menu_win = derwin(win, 1, btns_width, win_rows-2,
+			1+(total_width+2-btns_width)/2);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#853: FILE: scripts/kconfig/nconf.c:699:
+			1+(total_width+2-btns_width)/2);
 			 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#853: FILE: scripts/kconfig/nconf.c:699:
+			1+(total_width+2-btns_width)/2);
 			              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#853: FILE: scripts/kconfig/nconf.c:699:
+			1+(total_width+2-btns_width)/2);
 			                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#853: FILE: scripts/kconfig/nconf.c:699:
+			1+(total_width+2-btns_width)/2);
 			                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#855: FILE: scripts/kconfig/nconf.c:701:
+	msg_win = derwin(win, win_rows-2, msg_width, 1,
 	                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#856: FILE: scripts/kconfig/nconf.c:702:
+	msg_win = derwin(win, win_rows-2, msg_width, 1,
+			1+(total_width+2-msg_width)/2);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#856: FILE: scripts/kconfig/nconf.c:702:
+			1+(total_width+2-msg_width)/2);
 			 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#856: FILE: scripts/kconfig/nconf.c:702:
+			1+(total_width+2-msg_width)/2);
 			              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#856: FILE: scripts/kconfig/nconf.c:702:
+			1+(total_width+2-msg_width)/2);
 			                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#856: FILE: scripts/kconfig/nconf.c:702:
+			1+(total_width+2-msg_width)/2);
 			                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#867: FILE: scripts/kconfig/nconf.c:713:
+		char tmp[total_width+1];
 		                    ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#885: FILE: scripts/kconfig/nconf.c:731:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#927: FILE: scripts/kconfig/nconf.c:773:
+static int dialog_inputbox(const char *title, const char *prompt,
+		const char *init, char *result, int result_len)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#940: FILE: scripts/kconfig/nconf.c:786:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#946: FILE: scripts/kconfig/nconf.c:792:
+		int len = get_line_length(line);
+		prompt_width = max(prompt_width, len);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#953: FILE: scripts/kconfig/nconf.c:799:
+	y = (LINES-(prompt_lines+4))/2;
 	          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#953: FILE: scripts/kconfig/nconf.c:799:
+	y = (LINES-(prompt_lines+4))/2;
 	                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#953: FILE: scripts/kconfig/nconf.c:799:
+	y = (LINES-(prompt_lines+4))/2;
 	                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#954: FILE: scripts/kconfig/nconf.c:800:
+	x = (COLS-(prompt_width+4))/2;
 	         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#954: FILE: scripts/kconfig/nconf.c:800:
+	x = (COLS-(prompt_width+4))/2;
 	                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#954: FILE: scripts/kconfig/nconf.c:800:
+	x = (COLS-(prompt_width+4))/2;
 	                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#965: FILE: scripts/kconfig/nconf.c:811:
+	win = newwin(prompt_lines+5, prompt_width+4, y, x);
 	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#965: FILE: scripts/kconfig/nconf.c:811:
+	win = newwin(prompt_lines+5, prompt_width+4, y, x);
 	                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#967: FILE: scripts/kconfig/nconf.c:813:
+	prompt_win = derwin(win, prompt_lines+1, prompt_width, 2, 2);
 	                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#968: FILE: scripts/kconfig/nconf.c:814:
+	form_win = derwin(win, 1, prompt_width, prompt_lines+3, 2);
 	                                                    ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#972: FILE: scripts/kconfig/nconf.c:818:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#982: FILE: scripts/kconfig/nconf.c:828:
+		char tmp[prompt_width+1];
 		                     ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#990: FILE: scripts/kconfig/nconf.c:836:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#999: FILE: scripts/kconfig/nconf.c:845:
+		int len;
+		switch (res) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1011: FILE: scripts/kconfig/nconf.c:857:
+				result[len-1] = '\0';
 				          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1018: FILE: scripts/kconfig/nconf.c:864:
+			    len-1 < result_len) {
 			       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1020: FILE: scripts/kconfig/nconf.c:866:
+				result[len+1] = '\0';
 				          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1055: FILE: scripts/kconfig/nconf.c:901:
+	str_printf(r, _("  Defined at %s:%d\n"), prop->menu->file->name,
+		prop->menu->lineno);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1069: FILE: scripts/kconfig/nconf.c:915:
+			str_printf(r, "%*c-> %s", j, ' ',
+					_(menu_get_prompt(menu)));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1087: FILE: scripts/kconfig/nconf.c:933:
+		str_printf(r, "Symbol: %s [ = %s]\n", sym->name,
+				sym_get_string_value(sym));

CHECK:BRACES: braces {} should be used on all arms of this statement
#1092: FILE: scripts/kconfig/nconf.c:938:
+		if (!hit) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1095: FILE: scripts/kconfig/nconf.c:941:
+		} else

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1122: FILE: scripts/kconfig/nconf.c:968:
+static char filename[PATH_MAX+1];
                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1125: FILE: scripts/kconfig/nconf.c:971:
+	static char menu_backtitle[PATH_MAX+128];
 	                                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1135: FILE: scripts/kconfig/nconf.c:981:
+		menu_backtitle[sizeof(menu_backtitle)-1] = '\0';
 		                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1139: FILE: scripts/kconfig/nconf.c:985:
+		filename[sizeof(filename)-1] = '\0';
 		                         ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1143: FILE: scripts/kconfig/nconf.c:989:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1154: FILE: scripts/kconfig/nconf.c:1000:
+	dres = dialog_inputbox(_("Search Configuration Parameter"),
+			      _("Enter CONFIG_ (sub)string to search for "

WARNING:SPLIT_STRING: quoted string split across lines
#1155: FILE: scripts/kconfig/nconf.c:1001:
+			      _("Enter CONFIG_ (sub)string to search for "
+				"(with or without \"CONFIG\")"),

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1179: FILE: scripts/kconfig/nconf.c:1025:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1189: FILE: scripts/kconfig/nconf.c:1035:
+
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#1196: FILE: scripts/kconfig/nconf.c:1042:
+		if (prop && menu != current_menu) {
[...]
+		} else
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#1198: FILE: scripts/kconfig/nconf.c:1044:
+			const char *prompt = menu_get_prompt(menu);
+			switch (prop->type) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1204: FILE: scripts/kconfig/nconf.c:1050:
+					item_make(menu, 'm',
+						"%s%*c%s",

CHECK:BRACES: Unbalanced braces around else statement
#1207: FILE: scripts/kconfig/nconf.c:1053:
+				} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1209: FILE: scripts/kconfig/nconf.c:1055:
+					item_make(menu, 'm',
+							"   %*c%s  --->",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1220: FILE: scripts/kconfig/nconf.c:1066:
+					item_make(menu, ':',
+							"   %*c*** %s ***",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1229: FILE: scripts/kconfig/nconf.c:1075:
+					item_make(menu, ':', "---%*c%s",
+							indent + 1, ' ',

CHECK:BRACES: Unbalanced braces around else statement
#1233: FILE: scripts/kconfig/nconf.c:1079:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1254: FILE: scripts/kconfig/nconf.c:1100:
+				item_make(menu, 't', "[%c]",
+						val == no ? ' ' : '*');

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1276: FILE: scripts/kconfig/nconf.c:1122:
+		item_add_str("%*c%s", indent + 1,
+				' ', _(menu_get_prompt(menu)));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1280: FILE: scripts/kconfig/nconf.c:1126:
+				item_add_str(" (%s)",
+					_(menu_get_prompt(def_menu)));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1293: FILE: scripts/kconfig/nconf.c:1139:
+			item_make(menu, ':',
+				"---%*c%s", indent + 1,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1306: FILE: scripts/kconfig/nconf.c:1152:
+					item_make(menu, 't', "[%c]",
+						val == no ? ' ' : '*');

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1309: FILE: scripts/kconfig/nconf.c:1155:
+					item_make(menu, 't', "-%c-",
+						val == no ? ' ' : '*');

CHECK:BRACES: braces {} should be used on all arms of this statement
#1323: FILE: scripts/kconfig/nconf.c:1169:
+				if (sym_is_changable(sym)) {
[...]
+				} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1326: FILE: scripts/kconfig/nconf.c:1172:
+						item_make(menu,
+							't', "{%c}", ch);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1329: FILE: scripts/kconfig/nconf.c:1175:
+						item_make(menu,
+							't', "<%c>", ch);

CHECK:BRACES: Unbalanced braces around else statement
#1330: FILE: scripts/kconfig/nconf.c:1176:
+				} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1336: FILE: scripts/kconfig/nconf.c:1182:
+				item_make(menu, 's', "(%s)",
+					sym_get_string_value(sym));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1341: FILE: scripts/kconfig/nconf.c:1187:
+				item_add_str("%*c%s%s", tmp, ' ',
+					_(menu_get_prompt(menu)),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1349: FILE: scripts/kconfig/nconf.c:1195:
+		item_add_str("%*c%s%s", indent + 1, ' ',
+			_(menu_get_prompt(menu)),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1382: FILE: scripts/kconfig/nconf.c:1228:
+static void show_menu(const char *prompt, const char *instructions,
+		int selected_index, int toprow)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1405: FILE: scripts/kconfig/nconf.c:1251:
+	set_menu_format(curses_menu, LINES-20, 1);
 	                                  ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1418: FILE: scripts/kconfig/nconf.c:1264:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1439: FILE: scripts/kconfig/nconf.c:1285:
+			item_make(NULL, 'L',
+				_("    Load an Alternate Configuration File"));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1441: FILE: scripts/kconfig/nconf.c:1287:
+			item_make(NULL, 'S',
+				_("    Save an Alternate Configuration File"));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1445: FILE: scripts/kconfig/nconf.c:1291:
+		show_menu(prompt ? _(prompt) : _("Main Menu"),
+				_(menu_instructions),

CHECK:SPACING: No space is necessary after a cast
#1491: FILE: scripts/kconfig/nconf.c:1337:
+		submenu = (struct menu *) item_data();

CHECK:SPACING: No space is necessary after a cast
#1512: FILE: scripts/kconfig/nconf.c:1358:
+						(void *) (long) !submenu->data;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 48)
#1517: FILE: scripts/kconfig/nconf.c:1363:
+				if (sym_is_choice(sym) &&
[...]
+						conf_choice(submenu);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1518: FILE: scripts/kconfig/nconf.c:1364:
+				if (sym_is_choice(sym) &&
+					sym_get_tristate_value(sym) == yes)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1589: FILE: scripts/kconfig/nconf.c:1435:
+		int len = get_line_length(line);
+		cols = max(cols, len);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1592: FILE: scripts/kconfig/nconf.c:1438:
+	lines = min(total_lines, LINES-10);
 	                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1595: FILE: scripts/kconfig/nconf.c:1441:
+	y = (LINES-lines-4)/2;
 	          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1595: FILE: scripts/kconfig/nconf.c:1441:
+	y = (LINES-lines-4)/2;
 	                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1595: FILE: scripts/kconfig/nconf.c:1441:
+	y = (LINES-lines-4)/2;
 	                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1596: FILE: scripts/kconfig/nconf.c:1442:
+	x = (COLS-cols-4)/2;
 	         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1596: FILE: scripts/kconfig/nconf.c:1442:
+	x = (COLS-cols-4)/2;
 	              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1596: FILE: scripts/kconfig/nconf.c:1442:
+	x = (COLS-cols-4)/2;
 	                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1598: FILE: scripts/kconfig/nconf.c:1444:
+	win = newwin(lines+4, cols+4, y, x);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1598: FILE: scripts/kconfig/nconf.c:1444:
+	win = newwin(lines+4, cols+4, y, x);
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1613: FILE: scripts/kconfig/nconf.c:1459:
+		for (i = 0; i < lines && i+position < total_lines; i++) {
 		                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1614: FILE: scripts/kconfig/nconf.c:1460:
+			char tmp[cols+1];
 			             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1615: FILE: scripts/kconfig/nconf.c:1461:
+			const char *line = get_line(text, i+position);
 			                                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1630: FILE: scripts/kconfig/nconf.c:1476:
+			position += cols-2;
 			                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1633: FILE: scripts/kconfig/nconf.c:1479:
+			position -= cols+2;
 			                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1646: FILE: scripts/kconfig/nconf.c:1492:
+		if (position >= total_lines-lines)
 		                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1647: FILE: scripts/kconfig/nconf.c:1493:
+			position = total_lines-lines;
 			                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1696: FILE: scripts/kconfig/nconf.c:1542:
+				item_make(child, ':', "(X) %s",
+					_(menu_get_prompt(child)));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1699: FILE: scripts/kconfig/nconf.c:1545:
+				item_make(child, ':', "    %s",
+					_(menu_get_prompt(child)));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1707: FILE: scripts/kconfig/nconf.c:1553:
+		show_menu(prompt ? _(prompt) : _("Choice Menu"),
+				_(radiolist_instructions),

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 40)
#1796: FILE: scripts/kconfig/nconf.c:1642:
+			if (sym_set_string_value(menu->sym,
[...]
+					return;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1797: FILE: scripts/kconfig/nconf.c:1643:
+			if (sym_set_string_value(menu->sym,
+				dialog_input_result))

WARNING:LINE_SPACING: Missing a blank line after declarations
#1813: FILE: scripts/kconfig/nconf.c:1659:
+	char dialog_input_result[256];
+	while (1) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1815: FILE: scripts/kconfig/nconf.c:1661:
+		int res;
+		res = dialog_inputbox(NULL, load_config_text,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1832: FILE: scripts/kconfig/nconf.c:1678:
+			show_scroll_win(_("Load Alternate Configuration"),
+				load_config_help);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1843: FILE: scripts/kconfig/nconf.c:1689:
+	char dialog_input_result[256];
+	while (1) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1845: FILE: scripts/kconfig/nconf.c:1691:
+		int res;
+		res = dialog_inputbox(NULL, save_config_text,

WARNING:SPLIT_STRING: quoted string split across lines
#1858: FILE: scripts/kconfig/nconf.c:1704:
+			btn_dialog(_("Can't create file! "
+				"Probably a nonexistent directory."), 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1862: FILE: scripts/kconfig/nconf.c:1708:
+			show_scroll_win(_("Save Alternate Configuration"),
+				save_config_help);

WARNING:SPLIT_STRING: quoted string split across lines
#1902: FILE: scripts/kconfig/nconf.c:1748:
+		printf("Your terminal should have at "
+			"least 25 lines and 60 columns");

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1918: FILE: scripts/kconfig/nconf.c:1764:
+	main_window = newwin(LINES-10, COLS-4, 10, 2);
 	                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1918: FILE: scripts/kconfig/nconf.c:1764:
+	main_window = newwin(LINES-10, COLS-4, 10, 2);
 	                                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1920: FILE: scripts/kconfig/nconf.c:1766:
+	insts_window = newwin(7, COLS-4, 2, 2);
 	                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1921: FILE: scripts/kconfig/nconf.c:1767:
+	menu_window = newwin(LINES-20, COLS-30, 12, (COLS-(COLS-20))/2+10);
 	                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1921: FILE: scripts/kconfig/nconf.c:1767:
+	menu_window = newwin(LINES-20, COLS-30, 12, (COLS-(COLS-20))/2+10);
 	                                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1921: FILE: scripts/kconfig/nconf.c:1767:
+	menu_window = newwin(LINES-20, COLS-30, 12, (COLS-(COLS-20))/2+10);
 	                                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1921: FILE: scripts/kconfig/nconf.c:1767:
+	menu_window = newwin(LINES-20, COLS-30, 12, (COLS-(COLS-20))/2+10);
 	                                                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1921: FILE: scripts/kconfig/nconf.c:1767:
+	menu_window = newwin(LINES-20, COLS-30, 12, (COLS-(COLS-20))/2+10);
 	                                                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1921: FILE: scripts/kconfig/nconf.c:1767:
+	menu_window = newwin(LINES-20, COLS-30, 12, (COLS-(COLS-20))/2+10);
 	                                                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1923: FILE: scripts/kconfig/nconf.c:1769:
+	btns_window = newwin(1, 30,  LINES-3, (COLS-30)/2);
 	                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1923: FILE: scripts/kconfig/nconf.c:1769:
+	btns_window = newwin(1, 30,  LINES-3, (COLS-30)/2);
 	                                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1923: FILE: scripts/kconfig/nconf.c:1769:
+	btns_window = newwin(1, 30,  LINES-3, (COLS-30)/2);
 	                                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1935: FILE: scripts/kconfig/nconf.c:1781:
+	set_menu_format(curses_menu, LINES-20, 1);
 	                                  ^

WARNING:SPLIT_STRING: quoted string split across lines
#1965: FILE: scripts/kconfig/nconf.c:1811:
+			res = btn_dialog(_("Do you wish to save your "
+					     "new kernel configuration?\n"

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1982: FILE: scripts/kconfig/nconf.c:1828:
+
+

WARNING:SPLIT_STRING: quoted string split across lines
#1989: FILE: scripts/kconfig/nconf.c:1835:
+			"Your kernel configuration changes were NOT saved."
+			"\n\n"));

WARNING:SPLIT_STRING: quoted string split across lines
#1996: FILE: scripts/kconfig/nconf.c:1842:
+		"*** Execute 'make' to build the kernel or try 'make help'."
+		"\n\n"));

WARNING:SPLIT_STRING: quoted string split across lines
#2001: FILE: scripts/kconfig/nconf.c:1847:
+			"Your kernel configuration changes were NOT saved."
+			"\n\n"));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000232012.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 28 warnings, 159 checks, 1928 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000232012.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
