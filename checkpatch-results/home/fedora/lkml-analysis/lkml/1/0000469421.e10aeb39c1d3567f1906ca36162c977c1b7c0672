ERROR:TRAILING_WHITESPACE: trailing whitespace
#52: FILE: drivers/video/console/sticore.c:292:
+static int __initdata^Ifont_index[MAX_STI_ROMS] = {0}, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo __initdata	bar" should be "foo __initdata bar"
#52: FILE: drivers/video/console/sticore.c:292:
+static int __initdata	font_index[MAX_STI_ROMS] = {0}, 

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MISPLACED_INIT: __initdata should be placed after font_index[MAX_STI_ROMS]
#52: FILE: drivers/video/console/sticore.c:292:
+static int __initdata	font_index[MAX_STI_ROMS] = {0}, 

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:MISPLACED_INIT: __initdata should be placed after current_par
#66: FILE: drivers/video/skeletonfb.c:126:
+static struct xxx_par __initdata current_par = {0};

WARNING:MISPLACED_INIT: __initdata should be placed after stifb_bpp_pref[MAX_STI_ROMS]
#78: FILE: drivers/video/stifb.c:114:
+static int __initdata stifb_bpp_pref[MAX_STI_ROMS] = {0};

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#87: FILE: drivers/video/stifb.c:1301:
+static int stifb_disabled __initdata = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#100: FILE: drivers/video/vesafb.c:52:
+static int   vram_remap __initdata = 0;		/* Set amount of memory to be used */

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#101: FILE: drivers/video/vesafb.c:53:
+static int   vram_total __initdata = 0;		/* Set total amount of memory */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000469421.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 3 warnings, 0 checks, 46 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000469421.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
