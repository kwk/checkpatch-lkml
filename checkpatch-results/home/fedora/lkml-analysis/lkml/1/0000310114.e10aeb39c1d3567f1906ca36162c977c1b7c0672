WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
in particular free_pages_check and prep_new_page. Do that using mm/internal.h

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#168: FILE: mm/internal.h:52:
+extern void bad_page(struct page *page);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'page->mapping != NULL'
#172: FILE: mm/internal.h:56:
+	if (unlikely(page_mapcount(page) |
+		(page->mapping != NULL)  |
+		(page_get_page_cgroup(page) != NULL) |
+		(page_count(page) != 0)  |
+		(page->flags & (
+			addflags |
+			1 << PG_lru	|
+			1 << PG_private |
+			1 << PG_locked	|
+			1 << PG_active	|
+			1 << PG_slab	|
+			1 << PG_swapcache |
+			1 << PG_writeback |
+			1 << PG_reserved |
+			1 << PG_buddy))))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "page->mapping"
#173: FILE: mm/internal.h:57:
+		(page->mapping != NULL)  |

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "page_get_page_cgroup"
#174: FILE: mm/internal.h:58:
+		(page_get_page_cgroup(page) != NULL) |

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#176: FILE: mm/internal.h:60:
+		(page->flags & (

CHECK:CAMELCASE: Avoid CamelCase: <__ClearPageDirty>
#189: FILE: mm/internal.h:73:
+		__ClearPageDirty(page);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:TYPO_SPELLING: 'struc' may be misspelled - perhaps 'struct'?
#198: FILE: mm/internal.h:82:
+/* Set up a struc page for business during allocation */
             ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'page->mapping != NULL'
#201: FILE: mm/internal.h:85:
+	if (unlikely(page_mapcount(page) |
+		(page->mapping != NULL)  |
+		(page_get_page_cgroup(page) != NULL) |
+		(page_count(page) != 0)  |
+		(page->flags & (
+			1 << PG_lru	|
+			1 << PG_private	|
+			1 << PG_locked	|
+			1 << PG_active	|
+			1 << PG_dirty	|
+			1 << PG_slab    |
+			1 << PG_swapcache |
+			1 << PG_writeback |
+			1 << PG_reserved |
+			1 << PG_buddy))))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "page->mapping"
#202: FILE: mm/internal.h:86:
+		(page->mapping != NULL)  |

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "page_get_page_cgroup"
#203: FILE: mm/internal.h:87:
+		(page_get_page_cgroup(page) != NULL) |

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#205: FILE: mm/internal.h:89:
+		(page->flags & (

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000310114.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 10 checks, 180 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000310114.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
