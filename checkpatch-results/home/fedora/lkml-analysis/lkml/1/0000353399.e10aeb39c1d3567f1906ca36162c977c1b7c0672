ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#75: FILE: arch/x86/kernel/process_32.c:455:
+		struct task_struct * p, struct pt_regs * regs)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#75: FILE: arch/x86/kernel/process_32.c:455:
+		struct task_struct * p, struct pt_regs * regs)

WARNING:MEMORY_BARRIER: memory barrier without comment
#225: FILE: arch/x86/kernel/process_64.c:217:
+	wmb();

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#315: FILE: arch/x86/kernel/process_64.c:344:
+	printk("FS:  %016lx(%04x) GS:%016lx(%04x) knlGS:%016lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#316: FILE: arch/x86/kernel/process_64.c:345:
+	printk("FS:  %016lx(%04x) GS:%016lx(%04x) knlGS:%016lx\n",
+		fs, fsindex, gs, gsindex, shadowgs);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#317: FILE: arch/x86/kernel/process_64.c:346:
+	printk("CS:  %04x DS: %04x ES: %04x CR0: %016lx\n", cs, ds, es, cr0);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#367: FILE: arch/x86/kernel/process_64.c:462:
+		struct task_struct * p, struct pt_regs * regs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#367: FILE: arch/x86/kernel/process_64.c:462:
+		struct task_struct * p, struct pt_regs * regs)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'thread' may be better as '(thread)' to avoid precedence issues
#409: FILE: arch/x86/kernel/process_64.c:528:
+#define loaddebug(thread, r) set_debugreg(thread->debugreg ## r, r)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#488: FILE: arch/x86/kernel/process_64.c:629:
+		/* segment register != 0 always requires a reload.
+		   also reload when it has changed.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#500: FILE: arch/x86/kernel/process_64.c:638:
 			if (fsindex)
+			prev->fs = 0;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#518: FILE: arch/x86/kernel/process_64.c:651:
 			if (gsindex)
+			prev->gs = 0;

WARNING:TYPO_SPELLING: 'childs' may be misspelled - perhaps 'children'?
#576: FILE: arch/x86/kernel/process_64.c:730:
+	   32bit childs are affected again. */
 	         ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#576: FILE: arch/x86/kernel/process_64.c:730:
+	   32bit childs are affected again. */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#602: FILE: arch/x86/kernel/process_64.c:780:
+		rip = *(u64 *)(fp+8);
 		                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000353399.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 8 warnings, 3 checks, 679 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000353399.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
