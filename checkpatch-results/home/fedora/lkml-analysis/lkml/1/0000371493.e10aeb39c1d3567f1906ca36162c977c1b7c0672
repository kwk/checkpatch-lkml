WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#83: FILE: drivers/input/keyboard/Kconfig:256:
+config KEYBOARD_BFIN
+	tristate "Blackfin BF54x keypad support"
+	depends on (BF54x)
+	help
+	  Say Y here if you want to use the BF54x keypad.
+
+	  To compile this driver as a module, choose M here: the
+	  module will be called bf54x-keypad.
+	  

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: drivers/input/keyboard/Kconfig:264:
+^I  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#104: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#109: FILE: drivers/input/keyboard/bf54x-keys.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#110: FILE: drivers/input/keyboard/bf54x-keys.c:2:
+ * File:         drivers/input/keyboard/bf54x-keys.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#136: FILE: drivers/input/keyboard/bf54x-keys.c:28:
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#158: FILE: drivers/input/keyboard/bf54x-keys.c:50:
+#define DRV_NAME ^I"bf54x-keys"$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: drivers/input/keyboard/bf54x-keys.c:89:
+static inline int bfin_kpad_find_key(struct bf54x_kpad *bf54x_kpad,
+			 struct input_dev *input, u16 keyident)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#207: FILE: drivers/input/keyboard/bf54x-keys.c:99:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#228: FILE: drivers/input/keyboard/bf54x-keys.c:120:
+	struct platform_device *pdev =  (struct platform_device *) data;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#277: FILE: drivers/input/keyboard/bf54x-keys.c:169:
+static int __devinit bfin_kpad_probe(struct platform_device *pdev)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#284: FILE: drivers/input/keyboard/bf54x-keys.c:176:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#286: FILE: drivers/input/keyboard/bf54x-keys.c:178:
+		printk(KERN_ERR DRV_NAME"No rows, cols or keymap from pdata\n");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#286: FILE: drivers/input/keyboard/bf54x-keys.c:178:
+		printk(KERN_ERR DRV_NAME"No rows, cols or keymap from pdata\n");

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#291: FILE: drivers/input/keyboard/bf54x-keys.c:183:
+		printk(KERN_ERR DRV_NAME"Invalid keymapsize\n");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#291: FILE: drivers/input/keyboard/bf54x-keys.c:183:
+		printk(KERN_ERR DRV_NAME"Invalid keymapsize\n");

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*bf54x_kpad)...) over kzalloc(sizeof(struct bf54x_kpad)...)
#295: FILE: drivers/input/keyboard/bf54x-keys.c:187:
+	bf54x_kpad = kzalloc(sizeof(struct bf54x_kpad), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#302: FILE: drivers/input/keyboard/bf54x-keys.c:194:
+	bf54x_kpad->keycode = kmalloc(pdata->keymapsize * sizeof(unsigned int), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#310: FILE: drivers/input/keyboard/bf54x-keys.c:202:
+	if (!pdata->debounce_time || !pdata->debounce_time > MAX_MULT ||
+		!pdata->coldrive_time || !pdata->coldrive_time > MAX_MULT) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#311: FILE: drivers/input/keyboard/bf54x-keys.c:203:
+		printk(KERN_ERR DRV_NAME

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#319: FILE: drivers/input/keyboard/bf54x-keys.c:211:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#329: FILE: drivers/input/keyboard/bf54x-keys.c:221:
+		printk(KERN_ERR DRV_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#336: FILE: drivers/input/keyboard/bf54x-keys.c:228:
+		printk(KERN_ERR DRV_NAME

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#350: FILE: drivers/input/keyboard/bf54x-keys.c:242:
+	error = request_irq(bf54x_kpad->irq, bfin_kpad_isr,
+				 IRQF_SAMPLE_RANDOM, DRV_NAME, pdev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#353: FILE: drivers/input/keyboard/bf54x-keys.c:245:
+		printk(KERN_ERR DRV_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#401: FILE: drivers/input/keyboard/bf54x-keys.c:293:
+		printk(KERN_ERR DRV_NAME

CHECK:SPACING: No space is necessary after a cast
#408: FILE: drivers/input/keyboard/bf54x-keys.c:300:
+	setup_timer(&bf54x_kpad->timer, bfin_kpad_timer, (unsigned long) pdev);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#416: FILE: drivers/input/keyboard/bf54x-keys.c:308:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#419: FILE: drivers/input/keyboard/bf54x-keys.c:311:
+	printk(KERN_ERR DRV_NAME

CHECK:LINE_SPACING: Please don't use multiple blank lines
#424: FILE: drivers/input/keyboard/bf54x-keys.c:316:
+
+

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#442: FILE: drivers/input/keyboard/bf54x-keys.c:334:
+static int __devexit bfin_kpad_remove(struct platform_device *pdev)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#447: FILE: drivers/input/keyboard/bf54x-keys.c:339:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#493: FILE: include/asm-blackfin/mach-bf548/bf54x_keys.h:1:
+#ifndef _BFIN_KPAD_H

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'col' may be better as '(col)' to avoid precedence issues
#507: FILE: include/asm-blackfin/mach-bf548/bf54x_keys.h:15:
+#define KEYVAL(col, row, val) (((1 << col) << 24) | ((1 << row) << 16) | (val))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'row' may be better as '(row)' to avoid precedence issues
#507: FILE: include/asm-blackfin/mach-bf548/bf54x_keys.h:15:
+#define KEYVAL(col, row, val) (((1 << col) << 24) | ((1 << row) << 16) | (val))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000371493.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 17 warnings, 16 checks, 421 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000371493.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
