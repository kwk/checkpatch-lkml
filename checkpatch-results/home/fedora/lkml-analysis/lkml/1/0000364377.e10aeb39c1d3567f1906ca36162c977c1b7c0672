WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
> > > > This crashes and burns on bootup, but I'm too tired to figure out what I

WARNING:TYPO_SPELLING: 'handfull' may be misspelled - perhaps 'handful'?
#54: 
> > > Really, it should not be this hard to use, trying to expose a handfull
                                                                    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'bdi' - possible side-effects?
#163: FILE: include/linux/backing-dev.h:63:
+#define bdi_init_fmt(bdi, fmt...)				\
+	({							\
+	 	int ret;					\
+	 	ret = bdi_init(bdi);				\
+	 	if (!ret) {					\
+	 		ret = bdi_register(bdi, ##fmt);		\
+	 		if (ret)				\
+	 			bdi_destroy(bdi);		\
+	 	}						\
+	 	ret;						\
+	 })

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: include/linux/backing-dev.h:65:
+^I ^Iint ret;^I^I^I^I^I\$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#165: FILE: include/linux/backing-dev.h:65:
+^I ^Iint ret;^I^I^I^I^I\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: include/linux/backing-dev.h:66:
+^I ^Iret = bdi_init(bdi);^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#166: FILE: include/linux/backing-dev.h:66:
+^I ^Iret = bdi_init(bdi);^I^I^I^I\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: include/linux/backing-dev.h:67:
+^I ^Iif (!ret) {^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#167: FILE: include/linux/backing-dev.h:67:
+^I ^Iif (!ret) {^I^I^I^I^I\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: include/linux/backing-dev.h:68:
+^I ^I^Iret = bdi_register(bdi, ##fmt);^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#168: FILE: include/linux/backing-dev.h:68:
+^I ^I^Iret = bdi_register(bdi, ##fmt);^I^I\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: include/linux/backing-dev.h:69:
+^I ^I^Iif (ret)^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#169: FILE: include/linux/backing-dev.h:69:
+^I ^I^Iif (ret)^I^I^I^I\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: include/linux/backing-dev.h:70:
+^I ^I^I^Ibdi_destroy(bdi);^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#170: FILE: include/linux/backing-dev.h:70:
+^I ^I^I^Ibdi_destroy(bdi);^I^I\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: include/linux/backing-dev.h:71:
+^I ^I}^I^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#171: FILE: include/linux/backing-dev.h:71:
+^I ^I}^I^I^I^I^I^I\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: include/linux/backing-dev.h:72:
+^I ^Iret;^I^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#172: FILE: include/linux/backing-dev.h:72:
+^I ^Iret;^I^I^I^I^I^I\$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: include/linux/writeback.h:117:
+void get_dirty_limits(long *pbackground, long *pdirty, long *pbdi_dirty,
+		 struct backing_dev_info *bdi);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#219: FILE: mm/backing-dev.c:10:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#229: FILE: mm/backing-dev.c:20:
+	bdi->ra_pages = simple_strtoul(buf, &end, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#240: FILE: mm/backing-dev.c:31:
+	return snprintf(page, PAGE_SIZE-1, "%lld\n", (long long)expr);	\
 	                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#274: FILE: mm/backing-dev.c:65:
+__initcall(bdi_class_init);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#290: FILE: mm/backing-dev.c:81:
+	bdi->dev = device_create(bdi_class, NULL, MKDEV(0,0), name);
 	                                                 ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#319: FILE: mm/backing-dev.c:110:
+EXPORT_SYMBOL(bdi_register);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#320: FILE: mm/backing-dev.c:111:
+EXPORT_SYMBOL(bdi_unregister);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#345: FILE: mm/backing-dev.c:202:
 
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000364377.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 14 warnings, 5 checks, 275 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000364377.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
