WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#2444: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2449: FILE: drivers/ata/libahci.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2453: FILE: drivers/ata/libahci.c:5:
+ *    ^I^I    Please ALWAYS copy linux-ide@vger.kernel.org$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2471: FILE: drivers/ata/libahci.c:23:
+ *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2506: FILE: drivers/ata/libahci.c:58:
+static int ahci_enable_alpm(struct ata_port *ap,
+		enum link_pm policy);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2512: FILE: drivers/ata/libahci.c:64:
+static ssize_t ahci_transmit_led_message(struct ata_port *ap, u32 state,
+					ssize_t size);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2514: FILE: drivers/ata/libahci.c:66:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'ahci_show_host_caps' to 'ahci_host_caps_show'
#2558: FILE: drivers/ata/libahci.c:110:
+static DEVICE_ATTR(ahci_host_caps, S_IRUGO, ahci_show_host_caps, NULL);

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#2558: FILE: drivers/ata/libahci.c:110:
+static DEVICE_ATTR(ahci_host_caps, S_IRUGO, ahci_show_host_caps, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'ahci_show_host_cap2' to 'ahci_host_cap2_show'
#2559: FILE: drivers/ata/libahci.c:111:
+static DEVICE_ATTR(ahci_host_cap2, S_IRUGO, ahci_show_host_cap2, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#2559: FILE: drivers/ata/libahci.c:111:
+static DEVICE_ATTR(ahci_host_cap2, S_IRUGO, ahci_show_host_cap2, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'ahci_show_host_version' to 'ahci_host_version_show'
#2560: FILE: drivers/ata/libahci.c:112:
+static DEVICE_ATTR(ahci_host_version, S_IRUGO, ahci_show_host_version, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#2560: FILE: drivers/ata/libahci.c:112:
+static DEVICE_ATTR(ahci_host_version, S_IRUGO, ahci_show_host_version, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'ahci_show_port_cmd' to 'ahci_port_cmd_show'
#2561: FILE: drivers/ata/libahci.c:113:
+static DEVICE_ATTR(ahci_port_cmd, S_IRUGO, ahci_show_port_cmd, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#2561: FILE: drivers/ata/libahci.c:113:
+static DEVICE_ATTR(ahci_port_cmd, S_IRUGO, ahci_show_port_cmd, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2630: FILE: drivers/ata/libahci.c:182:
+MODULE_PARM_DESC(ahci_em_messages,
+	"Set AHCI Enclosure Management Message type (0 = disabled, 1 = LED");

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#2651: FILE: drivers/ata/libahci.c:203:
+		msleep(10);

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#2660: FILE: drivers/ata/libahci.c:212:
+	struct Scsi_Host *shost = class_to_shost(dev);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2678: FILE: drivers/ata/libahci.c:230:
+static ssize_t ahci_show_host_version(struct device *dev,
+				   struct device_attribute *attr, char *buf)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2730: FILE: drivers/ata/libahci.c:282:
+	hpriv->saved_cap = cap = readl(mmio + HOST_CAP);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2731: FILE: drivers/ata/libahci.c:283:
+	hpriv->saved_port_map = port_map = readl(mmio + HOST_PORTS_IMPL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2736: FILE: drivers/ata/libahci.c:288:
+	if ((vers >> 16) > 1 ||
+	   ((vers >> 16) == 1 && (vers & 0xFFFF) >= 0x200))

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2737: FILE: drivers/ata/libahci.c:289:
+		hpriv->saved_cap2 = cap2 = readl(mmio + HOST_CAP2);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2739: FILE: drivers/ata/libahci.c:291:
+		hpriv->saved_cap2 = cap2 = 0;

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#2743: FILE: drivers/ata/libahci.c:295:
+		dev_printk(KERN_INFO, dev,

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#2749: FILE: drivers/ata/libahci.c:301:
+		dev_printk(KERN_INFO, dev,

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#2755: FILE: drivers/ata/libahci.c:307:
+		dev_printk(KERN_INFO, dev,

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#2761: FILE: drivers/ata/libahci.c:313:
+		dev_printk(KERN_INFO, dev,

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#2767: FILE: drivers/ata/libahci.c:319:
+		dev_printk(KERN_INFO, dev,

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#2773: FILE: drivers/ata/libahci.c:325:
+		dev_printk(KERN_INFO, dev, "forcing port_map 0x%x -> 0x%x\n",

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#2779: FILE: drivers/ata/libahci.c:331:
+		dev_printk(KERN_ERR, dev, "masking port_map 0x%x -> 0x%x\n",

WARNING:PREFER_DEV_LEVEL: Prefer dev_warn(... to dev_printk(KERN_WARNING, ...
#2797: FILE: drivers/ata/libahci.c:349:
+			dev_printk(KERN_WARNING, dev,

WARNING:SPLIT_STRING: quoted string split across lines
#2799: FILE: drivers/ata/libahci.c:351:
+				   "implemented port map (0x%x) contains more "
+				   "ports than nr_ports (%u), using nr_ports\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_DEV_LEVEL: Prefer dev_warn(... to dev_printk(KERN_WARNING, ...
#2808: FILE: drivers/ata/libahci.c:360:
+		dev_printk(KERN_WARNING, dev,

CHECK:SPACING: No space is necessary after a cast
#2839: FILE: drivers/ata/libahci.c:391:
+	(void) readl(mmio + HOST_PORTS_IMPL);	/* flush */

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2842: FILE: drivers/ata/libahci.c:394:
+static unsigned ahci_scr_offset(struct ata_port *ap, unsigned int sc_reg)

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#3006: FILE: drivers/ata/libahci.c:558:
+	msleep(10);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3033: FILE: drivers/ata/libahci.c:585:
+static int ahci_enable_alpm(struct ata_port *ap,
+	enum link_pm policy)

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#3154: FILE: drivers/ata/libahci.c:706:
+					msleep(1);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#3165: FILE: drivers/ata/libahci.c:717:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#3217: FILE: drivers/ata/libahci.c:769:
+			dev_printk(KERN_ERR, host->dev,

CHECK:BRACES: Unbalanced braces around else statement
#3229: FILE: drivers/ata/libahci.c:781:
+	} else

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#3230: FILE: drivers/ata/libahci.c:782:
+		dev_printk(KERN_INFO, host->dev,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#3301: FILE: drivers/ata/libahci.c:853:
+	emp->saved_activity = emp->activity = 0;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3324: FILE: drivers/ata/libahci.c:876:
+static ssize_t ahci_transmit_led_message(struct ata_port *ap, u32 state,
+					ssize_t size)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3365: FILE: drivers/ata/libahci.c:917:
+	writel(message[1], mmio + hpriv->em_loc+4);
 	                                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3394: FILE: drivers/ata/libahci.c:946:
+static ssize_t ahci_led_store(struct ata_port *ap, const char *buf,
+				size_t size)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#3401: FILE: drivers/ata/libahci.c:953:
+	state = simple_strtoul(buf, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:BRACES: braces {} should be used on all arms of this statement
#3616: FILE: drivers/ata/libahci.c:1168:
+	if (timeout_msec) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3623: FILE: drivers/ata/libahci.c:1175:
+	} else

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#3665: FILE: drivers/ata/libahci.c:1217:
+	msleep(1);

CHECK:BRACES: braces {} should be used on all arms of this statement
#3673: FILE: drivers/ata/libahci.c:1225:
+	if (rc == -EBUSY && hpriv->flags & AHCI_HFLAG_SRST_TOUT_IS_OFFLINE) {
[...]
+	} else if (rc) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3686: FILE: drivers/ata/libahci.c:1238:
+	} else

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#3756: FILE: drivers/ata/libahci.c:1308:
+	new_tmp = tmp = readl(port_mmio + PORT_CMD);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3847: FILE: drivers/ata/libahci.c:1399:
+	BUG_ON(!pp->fbs_enabled);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#3860: FILE: drivers/ata/libahci.c:1412:
+		dev_printk(KERN_ERR, ap->host->dev,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pmp < ap->nr_pmp_links'
#3881: FILE: drivers/ata/libahci.c:1433:
+		if ((fbs & PORT_FBS_SDE) && (pmp < ap->nr_pmp_links) &&
+		    ata_link_online(&ap->pmp_link[pmp])) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: Unbalanced braces around else statement
#3887: FILE: drivers/ata/libahci.c:1439:
+	} else

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#3931: FILE: drivers/ata/libahci.c:1483:
+				  "unknown FIS %08x %08x %08x %08x" ,
 				                                    ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#3948: FILE: drivers/ata/libahci.c:1500:
+		if (fbs_need_dec)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3950: FILE: drivers/ata/libahci.c:1502:
+		else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3961: FILE: drivers/ata/libahci.c:1513:
+		ata_ehi_push_desc(host_ehi, "%s",
+			irq_stat & PORT_IRQ_CONNECT ?

CHECK:BRACES: braces {} should be used on all arms of this statement
#3967: FILE: drivers/ata/libahci.c:1519:
+	if (irq_stat & PORT_IRQ_FREEZE)
[...]
+	else if (fbs_need_dec) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3972: FILE: drivers/ata/libahci.c:1524:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3999: FILE: drivers/ata/libahci.c:1551:
+	if ((hpriv->flags & AHCI_HFLAG_NO_HOTPLUG) &&
+		(status & PORT_IRQ_PHYRDY)) {

WARNING:TYPO_SPELLING: 'constrollers' may be misspelled - perhaps 'controllers'?
#4015: FILE: drivers/ata/libahci.c:1567:
+		 * poking SNotification but some constrollers which
 		                                 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: braces {} should be used on all arms of this statement
#4019: FILE: drivers/ata/libahci.c:1571:
+		if (hpriv->cap & HOST_CAP_SNTF)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#4021: FILE: drivers/ata/libahci.c:1573:
+		else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#4030: FILE: drivers/ata/libahci.c:1582:
+			if (pp->fbs_enabled)
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#4032: FILE: drivers/ata/libahci.c:1584:
+			else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#4035: FILE: drivers/ata/libahci.c:1587:
+				u32 f0 = le32_to_cpu(f[0]);
+				if (f0 & (1 << 15))

WARNING:PREFER_DEV_LEVEL: Prefer dev_warn(... to dev_printk(KERN_WARNING, ...
#4092: FILE: drivers/ata/libahci.c:1644:
+				dev_printk(KERN_WARNING, host->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4093: FILE: drivers/ata/libahci.c:1645:
+				dev_printk(KERN_WARNING, host->dev,
+					"interrupt on disabled port %u\n", i);

WARNING:LINE_SPACING: Missing a blank line after declarations
#4134: FILE: drivers/ata/libahci.c:1686:
+		u32 fbs = readl(port_mmio + PORT_FBS);
+		fbs &= ~(PORT_FBS_DEV_MASK | PORT_FBS_DEC);

CHECK:BRACES: braces {} should be used on all arms of this statement
#4227: FILE: drivers/ata/libahci.c:1779:
+	if (fbs & PORT_FBS_EN) {
[...]
+	} else
[...]

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#4228: FILE: drivers/ata/libahci.c:1780:
+		dev_printk(KERN_INFO, ap->host->dev, "FBS is enabled.\n");

CHECK:BRACES: Unbalanced braces around else statement
#4231: FILE: drivers/ata/libahci.c:1783:
+	} else

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#4232: FILE: drivers/ata/libahci.c:1784:
+		dev_printk(KERN_ERR, ap->host->dev, "Failed to enable FBS\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#4259: FILE: drivers/ata/libahci.c:1811:
+	if (fbs & PORT_FBS_EN)
[...]
+	else {
[...]

WARNING:PREFER_DEV_LEVEL: Prefer dev_err(... to dev_printk(KERN_ERR, ...
#4260: FILE: drivers/ata/libahci.c:1812:
+		dev_printk(KERN_ERR, ap->host->dev, "Failed to disable FBS\n");

CHECK:BRACES: Unbalanced braces around else statement
#4261: FILE: drivers/ata/libahci.c:1813:
+	else {

WARNING:PREFER_DEV_LEVEL: Prefer dev_info(... to dev_printk(KERN_INFO, ...
#4262: FILE: drivers/ata/libahci.c:1814:
+		dev_printk(KERN_INFO, ap->host->dev, "FBS is disabled.\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#4321: FILE: drivers/ata/libahci.c:1873:
+	if (rc == 0)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#4323: FILE: drivers/ata/libahci.c:1875:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#4349: FILE: drivers/ata/libahci.c:1901:
+		u32 cmd = readl(port_mmio + PORT_CMD);
+		if (cmd & PORT_CMD_FBSCP)

WARNING:PREFER_DEV_LEVEL: Prefer dev_warn(... to dev_printk(KERN_WARNING, ...
#4352: FILE: drivers/ata/libahci.c:1904:
+			dev_printk(KERN_WARNING, dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4441: FILE: drivers/ata/libahci.c:1993:
+	dev_info(host->dev,
+		"AHCI %02x%02x.%02x%02x "

WARNING:SPLIT_STRING: quoted string split across lines
#4442: FILE: drivers/ata/libahci.c:1994:
+		"AHCI %02x%02x.%02x%02x "
+		"%u slots %u ports %s Gbps 0x%x impl %s mode\n"

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4457: FILE: drivers/ata/libahci.c:2009:
+	dev_info(host->dev,
+		"flags: "

WARNING:SPLIT_STRING: quoted string split across lines
#4458: FILE: drivers/ata/libahci.c:2010:
+		"flags: "
+		"%s%s%s%s%s%s%s"

WARNING:SPLIT_STRING: quoted string split across lines
#4459: FILE: drivers/ata/libahci.c:2011:
+		"%s%s%s%s%s%s%s"
+		"%s%s%s%s%s%s%s"

WARNING:SPLIT_STRING: quoted string split across lines
#4460: FILE: drivers/ata/libahci.c:2012:
+		"%s%s%s%s%s%s%s"
+		"%s%s%s%s%s%s\n"

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ahci_em_messages == 1'
#4500: FILE: drivers/ata/libahci.c:2052:
+	if ((messages & 0x01) && (ahci_em_messages == 1)) {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4514: FILE: drivers/ata/libahci.h:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4518: FILE: drivers/ata/libahci.h:5:
+ *    ^I^I    Please ALWAYS copy linux-ide@vger.kernel.org$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#4536: FILE: drivers/ata/libahci.h:23:
+ *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:TYPO_SPELLING: 'compliancy' may be misspelled - perhaps 'compliance'?
#4595: FILE: drivers/ata/libahci.h:82:
+	HOST_VERSION		= 0x10, /* AHCI spec. version compliancy */
 	            		                              ^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#4720: FILE: drivers/ata/libahci.h:207:
+	AHCI_HFLAG_SRST_TOUT_IS_OFFLINE	= (1 << 11), /* treat SRST timeout as
+							link offline */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4720: FILE: drivers/ata/libahci.h:207:
+							link offline */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4777: FILE: drivers/ata/libahci.h:264:
+^Iu32 ^I^I^Iintr_mask;^I/* interrupts to enable */$

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#4786: FILE: drivers/ata/libahci.h:273:
+	void __iomem *		mmio;		/* bus-independant mem map */

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4794: FILE: drivers/ata/libahci.h:281:
+^Iu32 ^I^I^Iem_loc; /* enclosure management location */$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000004716.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 52 warnings, 46 checks, 4766 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000004716.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
