WARNING:TYPO_SPELLING: 'memmory' may be misspelled - perhaps 'memory'?
#64: 
   ZONE_DMA32 .. in x86-64 4G+ memmory
                               ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'bahavior' may be misspelled - perhaps 'behavior'?
#72: 
 - add sysctl for new bahavior.
                      ^^^^^^^^

WARNING:TYPO_SPELLING: 'kerenl' may be misspelled - perhaps 'kernel'?
#89: 
 the kerenl panics before killing tasks after this patch.
     ^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#189: FILE: include/linux/oom.h:56:
+unsigned long oom_badness(struct task_struct *p,
+		unsigned long uptime, int constraint);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: mm/oom_kill.c:92:
+unsigned long oom_badness(struct task_struct *p, unsigned long uptime,
+			int constraint)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#282: FILE: mm/oom_kill.c:148:
+				points += child->mm->total_vm/2 + 1;
 				                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'high_zoneidx <= lowmem_zone'
#292: FILE: mm/oom_kill.c:244:
+	if (oom_extension(EXT_LOWMEM_OOM) && (high_zoneidx <= lowmem_zone))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'zone_idx <= lowmem_zone'
#304: FILE: mm/oom_kill.c:270:
+	if (oom_extension(EXT_LOWMEM_OOM) && (zone_idx <= lowmem_zone))

WARNING:SPLIT_STRING: quoted string split across lines
#333: FILE: mm/oom_kill.c:399:
 	pr_warning("%s invoked oom-killer: gfp_mask=0x%x, order=%d, "
+		"oom_adj=%d extension=%x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#380: FILE: mm/oom_kill.c:620:
+			printk("Lowmem is exhausted and no process has lowmem\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#389: FILE: mm/oom_kill.c:628:
+		if (oom_kill_process(p, gfp_mask, order, points, NULL,
+			"Out of memory (in lowmem)"))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#394: FILE: mm/oom_kill.c:633:
+		if (oom_kill_process(p, gfp_mask, order, points, NULL,
 			     "Out of memory"))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#498: FILE: fs/proc/base.c:469:
+	points = oom_badness(task->group_leader,
+			uptime.tv_sec, CONSTRAINT_NONE);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000019426.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 8 checks, 295 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000019426.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
