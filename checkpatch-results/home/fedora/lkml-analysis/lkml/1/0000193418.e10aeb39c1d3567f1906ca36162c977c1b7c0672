WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#51: 
three contended cache lines in new_inode(), and five cache lines in iput()
                                                                    ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#114: FILE: fs/inode.c:597:
+ *^I__new_inode ^I- obtain an inode$

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: fs/inode.c:623:
+ ^I^Iif (single) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#144: FILE: fs/inode.c:623:
+ ^I^Iif (single) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: fs/inode.c:623:
+ ^I^Iif (single) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: fs/inode.c:624:
+  ^I^I^IINIT_LIST_HEAD(&inode->i_list);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#145: FILE: fs/inode.c:624:
+  ^I^I^IINIT_LIST_HEAD(&inode->i_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: fs/inode.c:624:
+  ^I^I^IINIT_LIST_HEAD(&inode->i_list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: fs/inode.c:625:
+  ^I^I^IINIT_LIST_HEAD(&inode->i_sb_list);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#146: FILE: fs/inode.c:625:
+  ^I^I^IINIT_LIST_HEAD(&inode->i_sb_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: fs/inode.c:625:
+  ^I^I^IINIT_LIST_HEAD(&inode->i_sb_list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: fs/inode.c:626:
+ ^I^I} else {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#147: FILE: fs/inode.c:626:
+ ^I^I} else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: fs/inode.c:626:
+ ^I^I} else {$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#158: FILE: fs/inode.c:636:
+EXPORT_SYMBOL(__new_inode);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#184: FILE: include/linux/fs.h:1902:
+extern struct inode *__new_inode(struct super_block *, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#184: FILE: include/linux/fs.h:1902:
+extern struct inode *__new_inode(struct super_block *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#184: FILE: include/linux/fs.h:1902:
+extern struct inode *__new_inode(struct super_block *, int);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#189: FILE: include/linux/fs.h:1907:
+}
+static inline struct inode *new_inode_single(struct super_block *sb)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#193: FILE: include/linux/fs.h:1911:
+}
+extern void iput_single(struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#193: FILE: include/linux/fs.h:1911:
+extern void iput_single(struct inode *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000193418.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 13 warnings, 4 checks, 113 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000193418.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
