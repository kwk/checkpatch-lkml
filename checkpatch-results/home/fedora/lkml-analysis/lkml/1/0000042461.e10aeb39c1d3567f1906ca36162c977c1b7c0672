CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#103: FILE: mm/memcontrol.c:2857:
+static inline void mem_cgroup_set_thresholds(struct res_counter *counter,
+		u64 above, u64 below)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#105: FILE: mm/memcontrol.c:2859:
+	BUG_ON(res_counter_set_thresholds(counter, above, below));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#109: FILE: mm/memcontrol.c:2863:
+static void mem_cgroup_threshold(struct res_counter *counter, u64 usage,
+		u64 threshold)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#112: FILE: mm/memcontrol.c:2866:
+			struct mem_cgroup,res);
 			                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#115: FILE: mm/memcontrol.c:2869:
+	above = below = memcg->current_threshold;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#119: FILE: mm/memcontrol.c:2873:
+		list_for_each_entry_continue(above, &memcg->thresholds,
+				list) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#127: FILE: mm/memcontrol.c:2881:
+		list_for_each_entry_continue_reverse(below,
+				&memcg->thresholds, list) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#136: FILE: mm/memcontrol.c:2890:
+	mem_cgroup_set_thresholds(&memcg->res, above->threshold,
+			below->threshold);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#148: FILE: mm/memcontrol.c:2902:
+			BUG_ON(!prev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#156: FILE: mm/memcontrol.c:2910:
+	mem_cgroup_set_thresholds(&memcg->res, tmp->threshold,
+			prev->threshold);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#160: FILE: mm/memcontrol.c:2914:
+static int mem_cgroup_register_event(struct cgroup *cgrp, struct cftype *cft,
+		struct eventfd_ctx *eventfd, const char *args)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#169: FILE: mm/memcontrol.c:2923:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#193: FILE: mm/memcontrol.c:2947:
+static int mem_cgroup_unregister_event(struct cgroup *cgrp, struct cftype *cft,
+		struct eventfd_ctx *eventfd)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000042461.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 3 warnings, 9 checks, 197 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000042461.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
