WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#51: FILE: drivers/scsi/scsi_lib.c:2119:
+ * ^Isdev_evt_thread - send a uevent for each scsi event$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#89: FILE: drivers/scsi/scsi_lib.c:2157:
+ * ^Isdev_evt_notify - send asserted events to uevent thread$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#93: FILE: drivers/scsi/scsi_lib.c:2161:
+ *^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#127: FILE: drivers/scsi/scsi_scan.c:239:
+	extern void scsi_evt_thread(struct work_struct *work);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:CAMELCASE: Avoid CamelCase: <Cap_name>
#156: FILE: drivers/scsi/scsi_sysfs.c:619:
+#define DECLARE_EVT_SHOW(name, Cap_name)				\

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <SDEV_EVT_##Cap_name>
#162: FILE: drivers/scsi/scsi_sysfs.c:625:
+	int val = test_bit(SDEV_EVT_##Cap_name, sdev->supported_events);\

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#166: FILE: drivers/scsi/scsi_sysfs.c:629:
+#define DECLARE_EVT(name, Cap_name) \
+	DECLARE_EVT_SHOW(name, Cap_name) \
+	static DEVICE_ATTR(evt_##name, S_IRUGO, sdev_show_##name, NULL);

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#166: FILE: drivers/scsi/scsi_sysfs.c:629:
+#define DECLARE_EVT(name, Cap_name) \
+	DECLARE_EVT_SHOW(name, Cap_name) \
+	static DEVICE_ATTR(evt_##name, S_IRUGO, sdev_show_##name, NULL);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#168: FILE: drivers/scsi/scsi_sysfs.c:631:
+	static DEVICE_ATTR(evt_##name, S_IRUGO, sdev_show_##name, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#169: FILE: drivers/scsi/scsi_sysfs.c:632:
+#define REF_EVT(name) &dev_attr_evt_##name.attr

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#217: FILE: include/scsi/scsi_device.h:289:
+extern void sdev_evt_notify(struct scsi_device *sdev, const unsigned long *map);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000363811.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 5 warnings, 3 checks, 160 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000363811.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
