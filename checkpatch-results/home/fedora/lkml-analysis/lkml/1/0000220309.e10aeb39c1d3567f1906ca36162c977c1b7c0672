WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
The current Intel IOMMU code assumes that both host page size and Intel IOMMU page size are 4K. This patch supports variable page size. It provides support for IA64 which has multiple page sizes.

CHECK:SPACING: No space is necessary after a cast
#228: FILE: drivers/pci/intel-iommu.c:662:
+			(unsigned long long) DMA_TLB_IAIG(val));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#237: FILE: drivers/pci/intel-iommu.c:686:
+	BUG_ON(addr & (~VTD_PAGE_MASK));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#317: FILE: drivers/pci/intel-iommu.c:1485:
+static int iommu_prepare_identity_map(struct pci_dev *pdev,
+	 unsigned long long start, unsigned long long end)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#427: FILE: drivers/pci/intel-iommu.c:1946:
+intel_unmap_single(struct device *dev, dma_addr_t dev_addr,
 	size_t size, int dir)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#460: FILE: drivers/pci/intel-iommu.c:1989:
+intel_alloc_coherent(struct device *hwdev, size_t size,
 		       dma_addr_t *dma_handle, gfp_t flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#477: FILE: drivers/pci/intel-iommu.c:2012:
+intel_free_coherent(struct device *hwdev, size_t size,
 	void *vaddr, dma_addr_t dma_handle)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#493: FILE: drivers/pci/intel-iommu.c:2026:
+intel_unmap_sg(struct device *hwdev, struct scatterlist *sglist,
 	int nelems, int dir)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#521: FILE: drivers/pci/intel-iommu.c:2081:
+intel_map_sg(struct device *hwdev, struct scatterlist *sglist,
 				int nelems, int dir)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#605: FILE: drivers/pci/quirks.c:39:
+static __devinit void via_no_dac(struct pci_dev *dev)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#609: FILE: drivers/pci/quirks.c:43:
+		dev_info(&dev->dev,
+			"VIA PCI bridge detected. Disabling DAC.\n");

CHECK:SPACING: No space is necessary after a cast
#631: FILE: include/asm-x86/iommu.h:15:
+#define DMAR_OPERATION_TIMEOUT ((cycles_t) tsc_khz*10*1000)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#631: FILE: include/asm-x86/iommu.h:15:
+#define DMAR_OPERATION_TIMEOUT ((cycles_t) tsc_khz*10*1000)
                                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#631: FILE: include/asm-x86/iommu.h:15:
+#define DMAR_OPERATION_TIMEOUT ((cycles_t) tsc_khz*10*1000)
                                                      ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#653: FILE: include/linux/dma_remapping.h:8:
+#define VTD_PAGE_SIZE		(1UL << VTD_PAGE_SHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#667: FILE: include/linux/dma_remapping.h:27:
 };
+#define ROOT_ENTRY_NR (VTD_PAGE_SIZE/sizeof(struct root_entry))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#667: FILE: include/linux/dma_remapping.h:27:
+#define ROOT_ENTRY_NR (VTD_PAGE_SIZE/sizeof(struct root_entry))
                                     ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#715: FILE: include/linux/dma_remapping.h:111:
+		(p).val |= ((addr) & VTD_PAGE_MASK); } while (0)

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:INCLUDE_LINUX: Use #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#730: FILE: include/linux/intel-iommu.h:32:
+#include <asm/cacheflush.h>

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'd' may be better as '(d)' to avoid precedence issues
#750: FILE: include/linux/intel-iommu.h:205:
+#define dma_frcd_page_addr(d) (d & (((u64)-1) << PAGE_SHIFT))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'iommu' may be better as '(iommu)' to avoid precedence issues
#752: FILE: include/linux/intel-iommu.h:207:
+#define IOMMU_WAIT_OP(iommu, offset, op, cond, sts)			\
+do {									\
+	cycles_t start_time = get_cycles();				\
+	while (1) {							\
+		sts = op(iommu->reg + offset);				\
+		if (cond)						\
+			break;						\
 		if (DMAR_OPERATION_TIMEOUT < (get_cycles() - start_time))\
+			panic("DMAR hardware is malfunctioning\n");	\
+		cpu_relax();						\
+	}								\
+} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#752: FILE: include/linux/intel-iommu.h:207:
+#define IOMMU_WAIT_OP(iommu, offset, op, cond, sts)			\
+do {									\
+	cycles_t start_time = get_cycles();				\
+	while (1) {							\
+		sts = op(iommu->reg + offset);				\
+		if (cond)						\
+			break;						\
 		if (DMAR_OPERATION_TIMEOUT < (get_cycles() - start_time))\
+			panic("DMAR hardware is malfunctioning\n");	\
+		cpu_relax();						\
+	}								\
+} while (0)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#775: FILE: include/linux/intel-iommu.h:319:
+extern void *intel_alloc_coherent(struct device *, size_t, dma_addr_t *, gfp_t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#775: FILE: include/linux/intel-iommu.h:319:
+extern void *intel_alloc_coherent(struct device *, size_t, dma_addr_t *, gfp_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#775: FILE: include/linux/intel-iommu.h:319:
+extern void *intel_alloc_coherent(struct device *, size_t, dma_addr_t *, gfp_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dma_addr_t *' should also have an identifier name
#775: FILE: include/linux/intel-iommu.h:319:
+extern void *intel_alloc_coherent(struct device *, size_t, dma_addr_t *, gfp_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gfp_t' should also have an identifier name
#775: FILE: include/linux/intel-iommu.h:319:
+extern void *intel_alloc_coherent(struct device *, size_t, dma_addr_t *, gfp_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#776: FILE: include/linux/intel-iommu.h:320:
+extern void intel_free_coherent(struct device *, size_t, void *, dma_addr_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#776: FILE: include/linux/intel-iommu.h:320:
+extern void intel_free_coherent(struct device *, size_t, void *, dma_addr_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#776: FILE: include/linux/intel-iommu.h:320:
+extern void intel_free_coherent(struct device *, size_t, void *, dma_addr_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#776: FILE: include/linux/intel-iommu.h:320:
+extern void intel_free_coherent(struct device *, size_t, void *, dma_addr_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dma_addr_t' should also have an identifier name
#776: FILE: include/linux/intel-iommu.h:320:
+extern void intel_free_coherent(struct device *, size_t, void *, dma_addr_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#777: FILE: include/linux/intel-iommu.h:321:
+extern dma_addr_t intel_map_single(struct device *, unsigned long, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#777: FILE: include/linux/intel-iommu.h:321:
+extern dma_addr_t intel_map_single(struct device *, unsigned long, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#777: FILE: include/linux/intel-iommu.h:321:
+extern dma_addr_t intel_map_single(struct device *, unsigned long, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#777: FILE: include/linux/intel-iommu.h:321:
+extern dma_addr_t intel_map_single(struct device *, unsigned long, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#777: FILE: include/linux/intel-iommu.h:321:
+extern dma_addr_t intel_map_single(struct device *, unsigned long, size_t, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#778: FILE: include/linux/intel-iommu.h:322:
+extern void intel_unmap_single(struct device *, dma_addr_t, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#778: FILE: include/linux/intel-iommu.h:322:
+extern void intel_unmap_single(struct device *, dma_addr_t, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dma_addr_t' should also have an identifier name
#778: FILE: include/linux/intel-iommu.h:322:
+extern void intel_unmap_single(struct device *, dma_addr_t, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#778: FILE: include/linux/intel-iommu.h:322:
+extern void intel_unmap_single(struct device *, dma_addr_t, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#778: FILE: include/linux/intel-iommu.h:322:
+extern void intel_unmap_single(struct device *, dma_addr_t, size_t, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#779: FILE: include/linux/intel-iommu.h:323:
+extern int intel_map_sg(struct device *, struct scatterlist *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#779: FILE: include/linux/intel-iommu.h:323:
+extern int intel_map_sg(struct device *, struct scatterlist *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scatterlist *' should also have an identifier name
#779: FILE: include/linux/intel-iommu.h:323:
+extern int intel_map_sg(struct device *, struct scatterlist *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#779: FILE: include/linux/intel-iommu.h:323:
+extern int intel_map_sg(struct device *, struct scatterlist *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#779: FILE: include/linux/intel-iommu.h:323:
+extern int intel_map_sg(struct device *, struct scatterlist *, int, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#780: FILE: include/linux/intel-iommu.h:324:
+extern void intel_unmap_sg(struct device *, struct scatterlist *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#780: FILE: include/linux/intel-iommu.h:324:
+extern void intel_unmap_sg(struct device *, struct scatterlist *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scatterlist *' should also have an identifier name
#780: FILE: include/linux/intel-iommu.h:324:
+extern void intel_unmap_sg(struct device *, struct scatterlist *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#780: FILE: include/linux/intel-iommu.h:324:
+extern void intel_unmap_sg(struct device *, struct scatterlist *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#780: FILE: include/linux/intel-iommu.h:324:
+extern void intel_unmap_sg(struct device *, struct scatterlist *, int, int);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000220309.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 28 warnings, 23 checks, 630 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000220309.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
