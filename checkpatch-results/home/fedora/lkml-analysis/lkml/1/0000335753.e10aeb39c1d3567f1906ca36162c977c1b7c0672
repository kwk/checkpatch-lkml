CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#91: FILE: arch/x86/kernel/e820_64.c:58:
+};
+static struct early_res early_res[MAX_EARLY_RES] __initdata = {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#94: FILE: arch/x86/kernel/e820_64.c:61:
+	{ SMP_TRAMPOLINE_BASE, SMP_TRAMPOLINE_BASE + 2*PAGE_SIZE },
 	                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#107: FILE: arch/x86/kernel/e820_64.c:70:
+	struct early_res *r;
+	for (i = 0; i < MAX_EARLY_RES && early_res[i].end; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#126: FILE: arch/x86/kernel/e820_64.c:86:
+	int i;
+	for (i = 0; i < MAX_EARLY_RES && early_res[i].end; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#128: FILE: arch/x86/kernel/e820_64.c:88:
+		struct early_res *r = &early_res[i];
+		reserve_bootmem_generic(r->start, r->end - r->start);

WARNING:LINE_SPACING: Missing a blank line after declarations
#147: FILE: arch/x86/kernel/e820_64.c:102:
+		struct early_res *r = &early_res[i];
+		if (last >= r->start && addr < r->end) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#180: FILE: arch/x86/kernel/head64.c:56:
+	unsigned ebda_addr, ebda_size;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#199: FILE: arch/x86/kernel/head64.c:75:
+	if (ebda_size > 64*1024)
 	                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#200: FILE: arch/x86/kernel/head64.c:76:
+		ebda_size = 64*1024;
 		              ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#219: FILE: arch/x86/kernel/head64.c:115:
+		unsigned long ramdisk_end   = ramdisk_image + ramdisk_size;
+		reserve_early(ramdisk_image, ramdisk_end);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#358: FILE: include/asm-x86/e820_64.h:44:
+extern void reserve_early(unsigned long start, unsigned long end);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#359: FILE: include/asm-x86/e820_64.h:45:
+extern void early_res_to_bootmem(void);

WARNING:MISPLACED_INIT: __initdata should be placed after table_start
#372: FILE: arch/x86/mm/init_64.c:179:
+static unsigned long __initdata table_start;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:MISPLACED_INIT: __meminitdata should be placed after table_end
#373: FILE: arch/x86/mm/init_64.c:180:
+static unsigned long __meminitdata table_end;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000335753.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 6 checks, 311 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000335753.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
