WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#77: FILE: arch/i386/kernel/ksysfs.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#128: FILE: arch/i386/kernel/ksysfs.c:52:
+		.mode = S_IRUGO,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#153: FILE: arch/i386/kernel/ksysfs.c:77:
+		.mode = S_IRUGO,

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#160: FILE: arch/i386/kernel/ksysfs.c:84:
+struct setup_data_kobj
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#168: FILE: arch/i386/kernel/ksysfs.c:92:
+	ssize_t (*show) (struct setup_data_kobj *setup_data_kobj, char *buf);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#175: FILE: arch/i386/kernel/ksysfs.c:99:
+	struct setup_data data;
+	copy_from_phys(&data, setup_data_kobj->pa_setup_data, sizeof(data));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#182: FILE: arch/i386/kernel/ksysfs.c:106:
+		.mode = S_IRUGO,

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#210: FILE: arch/i386/kernel/ksysfs.c:134:
+static struct sysfs_ops setup_data_attr_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*setup_data_kobj)...) over kzalloc(sizeof(struct setup_data_kobj)...)
#247: FILE: arch/i386/kernel/ksysfs.c:171:
+	setup_data_kobj = kzalloc(sizeof(struct setup_data_kobj), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*data_attr)...) over kzalloc(sizeof(struct bin_attribute)...)
#260: FILE: arch/i386/kernel/ksysfs.c:184:
+	data_attr = kzalloc(sizeof(struct bin_attribute), GFP_KERNEL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#267: FILE: arch/i386/kernel/ksysfs.c:191:
+	data_attr->attr.mode = S_IRUGO;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000371297.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 8 warnings, 2 checks, 297 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000371297.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
