WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
In commit 2da31939a42f7a676a0bc5155d6a0a39ed8451f2 ("Bluetooth: Implement raw

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '2da31939a42f7a676a0bc5155d6a0a39ed8451f2', maybe rebased or not pulled?
#30: 
In commit 2da31939a42f7a676a0bc5155d6a0a39ed8451f2 ("Bluetooth: Implement raw

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#73: FILE: drivers/hid/usbhid/hid-core.c:778:
+static int usbhid_output_raw_report(struct hid_device *hid, __u8 *buf, size_t count,
+		unsigned char report_type)

WARNING:SPACING: Unnecessary space before function pointer arguments
#95: FILE: include/linux/hid.h:504:
+	int (*hid_output_raw_report) (struct hid_device *, __u8 *, size_t, unsigned char);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_device *' should also have an identifier name
#95: FILE: include/linux/hid.h:504:
+	int (*hid_output_raw_report) (struct hid_device *, __u8 *, size_t, unsigned char);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u8 *' should also have an identifier name
#95: FILE: include/linux/hid.h:504:
+	int (*hid_output_raw_report) (struct hid_device *, __u8 *, size_t, unsigned char);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#95: FILE: include/linux/hid.h:504:
+	int (*hid_output_raw_report) (struct hid_device *, __u8 *, size_t, unsigned char);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char' should also have an identifier name
#95: FILE: include/linux/hid.h:504:
+	int (*hid_output_raw_report) (struct hid_device *, __u8 *, size_t, unsigned char);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#108: FILE: net/bluetooth/hidp/core.c:247:
+static int __hidp_send_ctrl_message(struct hidp_session *session,
+			unsigned char hdr, unsigned char *data, int size)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#114: FILE: net/bluetooth/hidp/core.c:253:
+	if (!(skb = alloc_skb(size + 1, GFP_ATOMIC))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#129: FILE: net/bluetooth/hidp/core.c:268:
+static inline int hidp_send_ctrl_message(struct hidp_session *session,
+			unsigned char hdr, unsigned char *data, int size)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#149: FILE: net/bluetooth/hidp/core.c:317:
+static int hidp_output_raw_report(struct hid_device *hid, unsigned char *data, size_t count,
+		unsigned char report_type)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#160: FILE: net/bluetooth/hidp/core.c:327:
+	if (hidp_send_ctrl_message(hid->driver_data, report_type,
+			data, count))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000018502.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 7 warnings, 5 checks, 131 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000018502.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
