WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
diff -urNp --exclude=.git linux-2.6.22.orig/arch/arm/kernel/entry-common.S linux-2.6.22.base/arch/arm/kernel/entry-common.S

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#86: FILE: arch/mips/kernel/smp.c:206:
+int smp_call_function_single (int cpu, void (*func) (void *info), void *info, int retry,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: arch/mips/kernel/smp.c:209:
+  struct call_data_struct data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: arch/mips/kernel/smp.c:210:
+  int me = smp_processor_id();$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#93: FILE: arch/mips/kernel/smp.c:213:
+  /*
+     * Can die spectacularly if this CPU isn't yet marked online

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#94: FILE: arch/mips/kernel/smp.c:214:
+     * Can die spectacularly if this CPU isn't yet marked online
+      */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: arch/mips/kernel/smp.c:215:
+  BUG_ON(!cpu_online(me));$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#95: FILE: arch/mips/kernel/smp.c:215:
+  BUG_ON(!cpu_online(me));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: arch/mips/kernel/smp.c:216:
+  if (cpu == me) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#96: FILE: arch/mips/kernel/smp.c:216:
+  if (cpu == me) {
+    WARN_ON(1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: arch/mips/kernel/smp.c:217:
+    WARN_ON(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: arch/mips/kernel/smp.c:218:
+    return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: arch/mips/kernel/smp.c:219:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: arch/mips/kernel/smp.c:222:
+  WARN_ON(irqs_disabled());$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: arch/mips/kernel/smp.c:224:
+  data.func = func;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: arch/mips/kernel/smp.c:225:
+  data.info = info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: arch/mips/kernel/smp.c:226:
+  atomic_set(&data.started, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: arch/mips/kernel/smp.c:227:
+  data.wait = wait;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: arch/mips/kernel/smp.c:228:
+  if (wait)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#108: FILE: arch/mips/kernel/smp.c:228:
+  if (wait)
+    atomic_set(&data.finished, 0);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: arch/mips/kernel/smp.c:229:
+    atomic_set(&data.finished, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: arch/mips/kernel/smp.c:231:
+  spin_lock(&smp_call_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: arch/mips/kernel/smp.c:232:
+  call_data = &data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: arch/mips/kernel/smp.c:233:
+  mb();$

WARNING:MEMORY_BARRIER: memory barrier without comment
#113: FILE: arch/mips/kernel/smp.c:233:
+  mb();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: arch/mips/kernel/smp.c:236:
+  core_send_ipi(cpu, SMP_CALL_FUNCTION);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: arch/mips/kernel/smp.c:240:
+  while (atomic_read(&data.started) != 1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#120: FILE: arch/mips/kernel/smp.c:240:
+  while (atomic_read(&data.started) != 1)
+    barrier();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: arch/mips/kernel/smp.c:241:
+    barrier();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: arch/mips/kernel/smp.c:243:
+  if (wait)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#123: FILE: arch/mips/kernel/smp.c:243:
+  if (wait)
+    while (atomic_read(&data.finished) != 1)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: arch/mips/kernel/smp.c:244:
+    while (atomic_read(&data.finished) != 1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#124: FILE: arch/mips/kernel/smp.c:244:
+    while (atomic_read(&data.finished) != 1)
+      barrier();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: arch/mips/kernel/smp.c:245:
+      barrier();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: arch/mips/kernel/smp.c:246:
+  call_data = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: arch/mips/kernel/smp.c:247:
+  spin_unlock(&smp_call_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: arch/mips/kernel/smp.c:249:
+  return 0;$

CHECK:BIT_MACRO: Prefer using the BIT macro
#464: FILE: include/asm-ia64/thread_info.h:100:
+#define _TIF_PERFMON_WORK	(1 << TIF_PERFMON_WORK)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#473: FILE: include/asm-ia64/thread_info.h:109:
+#define TIF_ALLWORK_MASK	(_TIF_SIGPENDING|_TIF_PERFMON_WORK|_TIF_SYSCALL_AUDIT|\
                         	                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#473: FILE: include/asm-ia64/thread_info.h:109:
+#define TIF_ALLWORK_MASK	(_TIF_SIGPENDING|_TIF_PERFMON_WORK|_TIF_SYSCALL_AUDIT|\
                         	                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#473: FILE: include/asm-ia64/thread_info.h:109:
+#define TIF_ALLWORK_MASK	(_TIF_SIGPENDING|_TIF_PERFMON_WORK|_TIF_SYSCALL_AUDIT|\
                         	                                                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxW)
#474: FILE: include/asm-ia64/thread_info.h:110:
+				 _TIF_NEED_RESCHED| _TIF_SYSCALL_TRACE|\
 				                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#474: FILE: include/asm-ia64/thread_info.h:110:
+				 _TIF_NEED_RESCHED| _TIF_SYSCALL_TRACE|\
 				                                      ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#535: FILE: include/asm-mips/smp.h:112:
+extern int smp_call_function_single(int cpuid, void (*func) (void *info),

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#536: FILE: include/asm-mips/smp.h:113:
+extern int smp_call_function_single(int cpuid, void (*func) (void *info),
+				void *info, int retry, int wait);

ERROR:SPACING: space prohibited after that open parenthesis '('
#647: FILE: include/asm-powerpc/thread_info.h:143:
+#define _TIF_USER_WORK_MASK	( _TIF_SIGPENDING | \

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#718: FILE: include/asm-x86_64/thread_info.h:112:
+#define TIF_SINGLESTEP		3	/* reenable singlestep on user return*/
                       		 	   ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000425432.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 38 warnings, 8 checks, 612 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000425432.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
