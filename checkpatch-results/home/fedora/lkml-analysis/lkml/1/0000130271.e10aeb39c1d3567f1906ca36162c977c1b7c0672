WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
We are developing drivers for multimedia devices on S3C64XX SOC (which is an embedded UMA platform). This SOC includes the following 'multimedia' devices: frame buffer, 2D graphics accelerator (rotator, blitter and post processor which is capable of color space conversion), JPEG and multi-format video codecs and 3D graphics accelerator. Also a camera device interface can be considered as a multimedia device.

WARNING:TYPO_SPELLING: 'indentifies' may be misspelled - perhaps 'identifies'?
#57: 
- a pair of user-space buffer pointer address and the buffer size indentifies memory region unambiguously
                                                                  ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#60: 
With these facts I decided to define a translation layer that would convert the passed userspace virtual pointer to something useable by device drivers. If such a translation succeeds the physical memory region will be properly locked and is guaranteed to be in the memory till the end of transaction. The transaction must be closed explicitly.
                                                                                                                              ^^^^^^^

WARNING:TYPO_SPELLING: 'accidently' may be misspelled - perhaps 'accidentally'?
#66: 
The only problem is how to guarantee the security of this solution. VM_PFNMAP-type area does not have associated page structures so that memory pages cannot be locked directly in page cache. However I found that every such an area in user-space has associated special file that keeps the mapping. So it can be correctly locked by increasing reference counter of that special file (vm_area->vm_file). This would lock the mapping from being freed if user would accidently do something really nasty like unmapping that area.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ^^^^^^^^^^

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#86: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#91: FILE: drivers/s3cmm/upbuffer.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#124: FILE: drivers/s3cmm/upbuffer.c:34:
+#define debug(fmt, args...) printk(KERN_INFO fmt, ##args)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#130: FILE: drivers/s3cmm/upbuffer.c:40:
+/* case 0:
+   userspace physical memory cannot be directly used (non-continous, not a real

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#135: FILE: drivers/s3cmm/upbuffer.c:45:
+/* TODO: use DMA to copy from/to non-continous userspace buffers
+   (if possible) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#135: FILE: drivers/s3cmm/upbuffer.c:45:
+   (if possible) */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: drivers/s3cmm/upbuffer.c:48:
+       int res = 0;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#139: FILE: drivers/s3cmm/upbuffer.c:49:
+       int res = 0;
+       switch (dir) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: drivers/s3cmm/upbuffer.c:49:
+       switch (dir) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: drivers/s3cmm/upbuffer.c:51:
+       case UPBUF_FROM_USER:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: drivers/s3cmm/upbuffer.c:52:
+               res = copy_from_user(buf->vaddr, (const void __user *)buf->user_vaddr,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: drivers/s3cmm/upbuffer.c:52:
+               res = copy_from_user(buf->vaddr, (const void __user *)buf->user_vaddr,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: drivers/s3cmm/upbuffer.c:53:
+                       buf->size);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#143: FILE: drivers/s3cmm/upbuffer.c:53:
+               res = copy_from_user(buf->vaddr, (const void __user *)buf->user_vaddr,
+                       buf->size);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: drivers/s3cmm/upbuffer.c:53:
+                       buf->size);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: drivers/s3cmm/upbuffer.c:54:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: drivers/s3cmm/upbuffer.c:54:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: drivers/s3cmm/upbuffer.c:56:
+       case UPBUF_TO_USER:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: drivers/s3cmm/upbuffer.c:57:
+               res = copy_to_user((void __user *)buf->user_vaddr, buf->vaddr, buf->size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: drivers/s3cmm/upbuffer.c:57:
+               res = copy_to_user((void __user *)buf->user_vaddr, buf->vaddr, buf->size);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: drivers/s3cmm/upbuffer.c:58:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: drivers/s3cmm/upbuffer.c:58:
+               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: drivers/s3cmm/upbuffer.c:61:
+               res = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: drivers/s3cmm/upbuffer.c:61:
+               res = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: drivers/s3cmm/upbuffer.c:62:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: drivers/s3cmm/upbuffer.c:63:
+       return res;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: drivers/s3cmm/upbuffer.c:68:
+       debug("shadow_buffer_release\n");$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'shadow_buffer_release', this function's name, in a string
#158: FILE: drivers/s3cmm/upbuffer.c:68:
+       debug("shadow_buffer_release\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: drivers/s3cmm/upbuffer.c:69:
+       BUG_ON(buf->vaddr == NULL);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#159: FILE: drivers/s3cmm/upbuffer.c:69:
+       BUG_ON(buf->vaddr == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buf->vaddr"
#159: FILE: drivers/s3cmm/upbuffer.c:69:
+       BUG_ON(buf->vaddr == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: drivers/s3cmm/upbuffer.c:71:
+       dma_free_coherent(NULL, buf->size, buf->vaddr, buf->paddr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: drivers/s3cmm/upbuffer.c:72:
+       buf->vaddr = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: drivers/s3cmm/upbuffer.c:73:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: drivers/s3cmm/upbuffer.c:78:
+       void *dma_buff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: drivers/s3cmm/upbuffer.c:79:
+       dma_addr_t dma_addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: drivers/s3cmm/upbuffer.c:80:
+       int res = 0;$

WARNING:TYPO_SPELLING: 'shaddow' may be misspelled - perhaps 'shadow'?
#172: FILE: drivers/s3cmm/upbuffer.c:82:
+       debug("Preparing shaddow buffer for virt buffer 0x%08lx, size %ld\n",
                         ^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: drivers/s3cmm/upbuffer.c:82:
+       debug("Preparing shaddow buffer for virt buffer 0x%08lx, size %ld\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: drivers/s3cmm/upbuffer.c:83:
+               buf->user_vaddr, buf->size);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#173: FILE: drivers/s3cmm/upbuffer.c:83:
+       debug("Preparing shaddow buffer for virt buffer 0x%08lx, size %ld\n",
+               buf->user_vaddr, buf->size);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: drivers/s3cmm/upbuffer.c:83:
+               buf->user_vaddr, buf->size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: drivers/s3cmm/upbuffer.c:85:
+       dma_buff = dma_alloc_coherent(NULL, buf->size, &dma_addr, GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: drivers/s3cmm/upbuffer.c:86:
+       if (dma_buff != NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#176: FILE: drivers/s3cmm/upbuffer.c:86:
+       if (dma_buff != NULL) {
+               debug("Allocated continous memory area: phys addrr 0x%08lx, size %ld\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dma_buff"
#176: FILE: drivers/s3cmm/upbuffer.c:86:
+       if (dma_buff != NULL) {

WARNING:TYPO_SPELLING: 'continous' may be misspelled - perhaps 'continuous'?
#177: FILE: drivers/s3cmm/upbuffer.c:87:
+               debug("Allocated continous memory area: phys addrr 0x%08lx, size %ld\n",
                                 ^^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: drivers/s3cmm/upbuffer.c:87:
+               debug("Allocated continous memory area: phys addrr 0x%08lx, size %ld\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: drivers/s3cmm/upbuffer.c:87:
+               debug("Allocated continous memory area: phys addrr 0x%08lx, size %ld\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: drivers/s3cmm/upbuffer.c:88:
+               (unsigned long)dma_addr, buf->size);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#178: FILE: drivers/s3cmm/upbuffer.c:88:
+               debug("Allocated continous memory area: phys addrr 0x%08lx, size %ld\n",
+               (unsigned long)dma_addr, buf->size);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: drivers/s3cmm/upbuffer.c:88:
+               (unsigned long)dma_addr, buf->size);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: drivers/s3cmm/upbuffer.c:89:
+               buf->page_pa_first = dma_addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: drivers/s3cmm/upbuffer.c:89:
+               buf->page_pa_first = dma_addr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: drivers/s3cmm/upbuffer.c:90:
+               buf->paddr = dma_addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: drivers/s3cmm/upbuffer.c:90:
+               buf->paddr = dma_addr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: drivers/s3cmm/upbuffer.c:91:
+               buf->vaddr = dma_buff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: drivers/s3cmm/upbuffer.c:91:
+               buf->vaddr = dma_buff;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: drivers/s3cmm/upbuffer.c:92:
+               /* shadow buffers are always mapped into kernel space */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: drivers/s3cmm/upbuffer.c:93:
+               buf->flags |= UPBUF_MAP_KERNEL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: drivers/s3cmm/upbuffer.c:93:
+               buf->flags |= UPBUF_MAP_KERNEL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#184: FILE: drivers/s3cmm/upbuffer.c:94:
+               buf->priv = dma_buff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: drivers/s3cmm/upbuffer.c:94:
+               buf->priv = dma_buff;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: drivers/s3cmm/upbuffer.c:95:
+               buf->sync = shadow_buffer_sync;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: drivers/s3cmm/upbuffer.c:95:
+               buf->sync = shadow_buffer_sync;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: drivers/s3cmm/upbuffer.c:96:
+               buf->release = shadow_buffer_release;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: drivers/s3cmm/upbuffer.c:96:
+               buf->release = shadow_buffer_release;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: drivers/s3cmm/upbuffer.c:97:
+               /* success */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: drivers/s3cmm/upbuffer.c:98:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: drivers/s3cmm/upbuffer.c:98:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: drivers/s3cmm/upbuffer.c:99:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#189: FILE: drivers/s3cmm/upbuffer.c:99:
+       } else {
+               debug("Error: cannot allocate shadow buffer!\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#190: FILE: drivers/s3cmm/upbuffer.c:100:
+               debug("Error: cannot allocate shadow buffer!\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: drivers/s3cmm/upbuffer.c:100:
+               debug("Error: cannot allocate shadow buffer!\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: drivers/s3cmm/upbuffer.c:101:
+               res = -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: drivers/s3cmm/upbuffer.c:101:
+               res = -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: drivers/s3cmm/upbuffer.c:102:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: drivers/s3cmm/upbuffer.c:104:
+       return res;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#198: FILE: drivers/s3cmm/upbuffer.c:108:
+/* case 1:
+   physical memory mapped directly into userspace vma, VM_PFNMAP flag is set,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: drivers/s3cmm/upbuffer.c:114:
+       int res = 0;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#205: FILE: drivers/s3cmm/upbuffer.c:115:
+       int res = 0;
+       switch (dir) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: drivers/s3cmm/upbuffer.c:115:
+       switch (dir) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: drivers/s3cmm/upbuffer.c:117:
+       case UPBUF_FROM_USER:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: drivers/s3cmm/upbuffer.c:118:
+               if (b->vaddr)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: drivers/s3cmm/upbuffer.c:118:
+               if (b->vaddr)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#208: FILE: drivers/s3cmm/upbuffer.c:118:
+               if (b->vaddr)
+                       dmac_flush_range(b->vaddr, (char *)b->vaddr + b->size);

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: drivers/s3cmm/upbuffer.c:119:
+                       dmac_flush_range(b->vaddr, (char *)b->vaddr + b->size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: drivers/s3cmm/upbuffer.c:119:
+                       dmac_flush_range(b->vaddr, (char *)b->vaddr + b->size);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: drivers/s3cmm/upbuffer.c:120:
+               outer_flush_range(b->page_pa_first,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: drivers/s3cmm/upbuffer.c:120:
+               outer_flush_range(b->page_pa_first,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: drivers/s3cmm/upbuffer.c:121:
+                       b->page_pa_first + b->page_buff_size - 1);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: drivers/s3cmm/upbuffer.c:121:
+               outer_flush_range(b->page_pa_first,
+                       b->page_pa_first + b->page_buff_size - 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: drivers/s3cmm/upbuffer.c:121:
+                       b->page_pa_first + b->page_buff_size - 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: drivers/s3cmm/upbuffer.c:122:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: drivers/s3cmm/upbuffer.c:122:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: drivers/s3cmm/upbuffer.c:124:
+       case UPBUF_TO_USER:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: drivers/s3cmm/upbuffer.c:125:
+               if (b->vaddr)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: drivers/s3cmm/upbuffer.c:125:
+               if (b->vaddr)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#215: FILE: drivers/s3cmm/upbuffer.c:125:
+               if (b->vaddr)
+                       dmac_inv_range(b->vaddr, (char *)b->vaddr + b->size);

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: drivers/s3cmm/upbuffer.c:126:
+                       dmac_inv_range(b->vaddr, (char *)b->vaddr + b->size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: drivers/s3cmm/upbuffer.c:126:
+                       dmac_inv_range(b->vaddr, (char *)b->vaddr + b->size);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: drivers/s3cmm/upbuffer.c:127:
+               outer_inv_range(b->page_pa_first,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: drivers/s3cmm/upbuffer.c:127:
+               outer_inv_range(b->page_pa_first,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: drivers/s3cmm/upbuffer.c:128:
+                       b->page_pa_first + b->page_buff_size - 1);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#218: FILE: drivers/s3cmm/upbuffer.c:128:
+               outer_inv_range(b->page_pa_first,
+                       b->page_pa_first + b->page_buff_size - 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: drivers/s3cmm/upbuffer.c:128:
+                       b->page_pa_first + b->page_buff_size - 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: drivers/s3cmm/upbuffer.c:129:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: drivers/s3cmm/upbuffer.c:129:
+               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: drivers/s3cmm/upbuffer.c:132:
+               res = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: drivers/s3cmm/upbuffer.c:132:
+               res = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: drivers/s3cmm/upbuffer.c:133:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: drivers/s3cmm/upbuffer.c:134:
+       return res;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: drivers/s3cmm/upbuffer.c:139:
+       struct vm_area_struct *vma = b->priv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: drivers/s3cmm/upbuffer.c:141:
+       debug("direct_pfn_release\n");$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'direct_pfn_release', this function's name, in a string
#231: FILE: drivers/s3cmm/upbuffer.c:141:
+       debug("direct_pfn_release\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: drivers/s3cmm/upbuffer.c:142:
+       BUG_ON(vma == NULL);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#232: FILE: drivers/s3cmm/upbuffer.c:142:
+       BUG_ON(vma == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vma"
#232: FILE: drivers/s3cmm/upbuffer.c:142:
+       BUG_ON(vma == NULL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: drivers/s3cmm/upbuffer.c:143:
+       BUG_ON(vma->vm_file == NULL);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#233: FILE: drivers/s3cmm/upbuffer.c:143:
+       BUG_ON(vma->vm_file == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vma->vm_file"
#233: FILE: drivers/s3cmm/upbuffer.c:143:
+       BUG_ON(vma->vm_file == NULL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: drivers/s3cmm/upbuffer.c:146:
+       fput(vma->vm_file);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: drivers/s3cmm/upbuffer.c:147:
+       return 0;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#241: FILE: drivers/s3cmm/upbuffer.c:151:
+static int get_pte(struct vm_area_struct *vma, unsigned long address,
+       unsigned int flags, pte_t *dst)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: drivers/s3cmm/upbuffer.c:151:
+       unsigned int flags, pte_t *dst)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: drivers/s3cmm/upbuffer.c:153:
+       pgd_t *pgd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: drivers/s3cmm/upbuffer.c:154:
+       pud_t *pud;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: drivers/s3cmm/upbuffer.c:155:
+       pmd_t *pmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: drivers/s3cmm/upbuffer.c:156:
+       pte_t *pte;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: drivers/s3cmm/upbuffer.c:157:
+       struct mm_struct *mm = vma->vm_mm;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: drivers/s3cmm/upbuffer.c:159:
+       pgd = pgd_offset(mm, address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: drivers/s3cmm/upbuffer.c:160:
+       if (pgd_none(*pgd) || unlikely(pgd_bad(*pgd)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#250: FILE: drivers/s3cmm/upbuffer.c:160:
+       if (pgd_none(*pgd) || unlikely(pgd_bad(*pgd)))
+               goto no_page_table;

ERROR:CODE_INDENT: code indent should use tabs where possible
#251: FILE: drivers/s3cmm/upbuffer.c:161:
+               goto no_page_table;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: drivers/s3cmm/upbuffer.c:161:
+               goto no_page_table;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: drivers/s3cmm/upbuffer.c:163:
+       pud = pud_offset(pgd, address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: drivers/s3cmm/upbuffer.c:164:
+       if (pud_none(*pud) || unlikely(pgd_bad(*pud)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#254: FILE: drivers/s3cmm/upbuffer.c:164:
+       if (pud_none(*pud) || unlikely(pgd_bad(*pud)))
+               goto no_page_table;

ERROR:CODE_INDENT: code indent should use tabs where possible
#255: FILE: drivers/s3cmm/upbuffer.c:165:
+               goto no_page_table;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: drivers/s3cmm/upbuffer.c:165:
+               goto no_page_table;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: drivers/s3cmm/upbuffer.c:167:
+       pmd = pmd_offset(pud, address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: drivers/s3cmm/upbuffer.c:168:
+       if (pmd_none(*pmd) || unlikely(pmd_bad(*pmd)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#258: FILE: drivers/s3cmm/upbuffer.c:168:
+       if (pmd_none(*pmd) || unlikely(pmd_bad(*pmd)))
+               goto no_page_table;

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: drivers/s3cmm/upbuffer.c:169:
+               goto no_page_table;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: drivers/s3cmm/upbuffer.c:169:
+               goto no_page_table;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: drivers/s3cmm/upbuffer.c:171:
+       pte = pte_offset_map(pmd, address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: drivers/s3cmm/upbuffer.c:172:
+       if (!pte_present(*pte))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#262: FILE: drivers/s3cmm/upbuffer.c:172:
+       if (!pte_present(*pte))
+               goto unlock;

ERROR:CODE_INDENT: code indent should use tabs where possible
#263: FILE: drivers/s3cmm/upbuffer.c:173:
+               goto unlock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: drivers/s3cmm/upbuffer.c:173:
+               goto unlock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: drivers/s3cmm/upbuffer.c:174:
+       *dst = *pte;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: drivers/s3cmm/upbuffer.c:176:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: drivers/s3cmm/upbuffer.c:179:
+       return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: drivers/s3cmm/upbuffer.c:186:
+       unsigned long start = (unsigned long)b->page_va_first;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: drivers/s3cmm/upbuffer.c:187:
+       int page_count = b->page_count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: drivers/s3cmm/upbuffer.c:188:
+       int res = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: drivers/s3cmm/upbuffer.c:190:
+       debug("direct_pfn_prepare\n");$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'direct_pfn_prepare', this function's name, in a string
#280: FILE: drivers/s3cmm/upbuffer.c:190:
+       debug("direct_pfn_prepare\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: drivers/s3cmm/upbuffer.c:192:
+       if ((vma->vm_flags & VM_PFNMAP) && vma->vm_file) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#282: FILE: drivers/s3cmm/upbuffer.c:192:
+       if ((vma->vm_flags & VM_PFNMAP) && vma->vm_file) {
+               pte_t *area;

CHECK:BRACES: braces {} should be used on all arms of this statement
#282: FILE: drivers/s3cmm/upbuffer.c:192:
+       if ((vma->vm_flags & VM_PFNMAP) && vma->vm_file) {
[...]
+       } else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#283: FILE: drivers/s3cmm/upbuffer.c:193:
+               pte_t *area;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: drivers/s3cmm/upbuffer.c:193:
+               pte_t *area;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#284: FILE: drivers/s3cmm/upbuffer.c:194:
+               int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: drivers/s3cmm/upbuffer.c:194:
+               int i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#285: FILE: drivers/s3cmm/upbuffer.c:195:
+               unsigned long base = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: drivers/s3cmm/upbuffer.c:195:
+               unsigned long base = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#286: FILE: drivers/s3cmm/upbuffer.c:196:
+               debug("Direct PFN mapping found, using special file reference "$

WARNING:LINE_SPACING: Missing a blank line after declarations
#286: FILE: drivers/s3cmm/upbuffer.c:196:
+               unsigned long base = 0;
+               debug("Direct PFN mapping found, using special file reference "

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: drivers/s3cmm/upbuffer.c:196:
+               debug("Direct PFN mapping found, using special file reference "$

ERROR:CODE_INDENT: code indent should use tabs where possible
#287: FILE: drivers/s3cmm/upbuffer.c:197:
+                       "counter.\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: drivers/s3cmm/upbuffer.c:197:
+                       "counter.\n");$

WARNING:SPLIT_STRING: quoted string split across lines
#287: FILE: drivers/s3cmm/upbuffer.c:197:
+               debug("Direct PFN mapping found, using special file reference "
+                       "counter.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:CODE_INDENT: code indent should use tabs where possible
#289: FILE: drivers/s3cmm/upbuffer.c:199:
+               area = kmalloc(page_count * sizeof(pte_t *), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: drivers/s3cmm/upbuffer.c:199:
+               area = kmalloc(page_count * sizeof(pte_t *), GFP_KERNEL);$

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#289: FILE: drivers/s3cmm/upbuffer.c:199:
+               area = kmalloc(page_count * sizeof(pte_t *), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

ERROR:CODE_INDENT: code indent should use tabs where possible
#291: FILE: drivers/s3cmm/upbuffer.c:201:
+               /* increment vma file use count before hacking with pte map */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#292: FILE: drivers/s3cmm/upbuffer.c:202:
+               get_file(vma->vm_file);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: drivers/s3cmm/upbuffer.c:202:
+               get_file(vma->vm_file);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#294: FILE: drivers/s3cmm/upbuffer.c:204:
+               for (i = 0; res == 0 && i < page_count; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: drivers/s3cmm/upbuffer.c:204:
+               for (i = 0; res == 0 && i < page_count; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#294: FILE: drivers/s3cmm/upbuffer.c:204:
+               for (i = 0; res == 0 && i < page_count; i++)
+                       res = get_pte(vma, start+i*PAGE_SIZE, 0, &area[i]);

ERROR:CODE_INDENT: code indent should use tabs where possible
#295: FILE: drivers/s3cmm/upbuffer.c:205:
+                       res = get_pte(vma, start+i*PAGE_SIZE, 0, &area[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: drivers/s3cmm/upbuffer.c:205:
+                       res = get_pte(vma, start+i*PAGE_SIZE, 0, &area[i]);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#295: FILE: drivers/s3cmm/upbuffer.c:205:
+                       res = get_pte(vma, start+i*PAGE_SIZE, 0, &area[i]);
                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#295: FILE: drivers/s3cmm/upbuffer.c:205:
+                       res = get_pte(vma, start+i*PAGE_SIZE, 0, &area[i]);
                                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#297: FILE: drivers/s3cmm/upbuffer.c:207:
+               if (res == 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: drivers/s3cmm/upbuffer.c:207:
+               if (res == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#297: FILE: drivers/s3cmm/upbuffer.c:207:
+               if (res == 0) {
+                       base = pte_phys(area[0]);

ERROR:CODE_INDENT: code indent should use tabs where possible
#298: FILE: drivers/s3cmm/upbuffer.c:208:
+                       base = pte_phys(area[0]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: drivers/s3cmm/upbuffer.c:208:
+                       base = pte_phys(area[0]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#299: FILE: drivers/s3cmm/upbuffer.c:209:
+                       for (i = 1; i < page_count; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: drivers/s3cmm/upbuffer.c:209:
+                       for (i = 1; i < page_count; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#299: FILE: drivers/s3cmm/upbuffer.c:209:
+                       for (i = 1; i < page_count; i++)
+                               if (pte_phys(area[i]) != base + PAGE_SIZE*i)

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: drivers/s3cmm/upbuffer.c:210:
+                               if (pte_phys(area[i]) != base + PAGE_SIZE*i)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: drivers/s3cmm/upbuffer.c:210:
+                               if (pte_phys(area[i]) != base + PAGE_SIZE*i)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#300: FILE: drivers/s3cmm/upbuffer.c:210:
+                               if (pte_phys(area[i]) != base + PAGE_SIZE*i)
+                                       break;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#300: FILE: drivers/s3cmm/upbuffer.c:210:
+                               if (pte_phys(area[i]) != base + PAGE_SIZE*i)
                                                                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: drivers/s3cmm/upbuffer.c:211:
+                                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: drivers/s3cmm/upbuffer.c:211:
+                                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#303: FILE: drivers/s3cmm/upbuffer.c:213:
+                       if (i == page_count) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: drivers/s3cmm/upbuffer.c:213:
+                       if (i == page_count) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#303: FILE: drivers/s3cmm/upbuffer.c:213:
+                       if (i == page_count) {
+                               debug("Found buffer that is continous memory area: vaddr "

CHECK:BRACES: braces {} should be used on all arms of this statement
#303: FILE: drivers/s3cmm/upbuffer.c:213:
+                       if (i == page_count) {
[...]
+                       } else
[...]

WARNING:TYPO_SPELLING: 'continous' may be misspelled - perhaps 'continuous'?
#304: FILE: drivers/s3cmm/upbuffer.c:214:
+                               debug("Found buffer that is continous memory area: vaddr "
                                                            ^^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#304: FILE: drivers/s3cmm/upbuffer.c:214:
+                               debug("Found buffer that is continous memory area: vaddr "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: drivers/s3cmm/upbuffer.c:214:
+                               debug("Found buffer that is continous memory area: vaddr "$

ERROR:CODE_INDENT: code indent should use tabs where possible
#305: FILE: drivers/s3cmm/upbuffer.c:215:
+                                       "(userspace) 0x%08lx, phys 0x%08lx, size %ld\n", start,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: drivers/s3cmm/upbuffer.c:215:
+                                       "(userspace) 0x%08lx, phys 0x%08lx, size %ld\n", start,$

WARNING:SPLIT_STRING: quoted string split across lines
#305: FILE: drivers/s3cmm/upbuffer.c:215:
+                               debug("Found buffer that is continous memory area: vaddr "
+                                       "(userspace) 0x%08lx, phys 0x%08lx, size %ld\n", start,

ERROR:CODE_INDENT: code indent should use tabs where possible
#306: FILE: drivers/s3cmm/upbuffer.c:216:
+                                       base, b->page_buff_size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: drivers/s3cmm/upbuffer.c:216:
+                                       base, b->page_buff_size);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#307: FILE: drivers/s3cmm/upbuffer.c:217:
+                               b->page_pa_first = base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: drivers/s3cmm/upbuffer.c:217:
+                               b->page_pa_first = base;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#308: FILE: drivers/s3cmm/upbuffer.c:218:
+                               b->paddr = b->page_pa_first + b->page_offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: drivers/s3cmm/upbuffer.c:218:
+                               b->paddr = b->page_pa_first + b->page_offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#309: FILE: drivers/s3cmm/upbuffer.c:219:
+                               b->priv = vma;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: drivers/s3cmm/upbuffer.c:219:
+                               b->priv = vma;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#310: FILE: drivers/s3cmm/upbuffer.c:220:
+                               b->sync = direct_pfn_sync;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: drivers/s3cmm/upbuffer.c:220:
+                               b->sync = direct_pfn_sync;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#311: FILE: drivers/s3cmm/upbuffer.c:221:
+                               b->release = direct_pfn_release;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: drivers/s3cmm/upbuffer.c:221:
+                               b->release = direct_pfn_release;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#312: FILE: drivers/s3cmm/upbuffer.c:222:
+                               kfree(area);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: drivers/s3cmm/upbuffer.c:222:
+                               kfree(area);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#313: FILE: drivers/s3cmm/upbuffer.c:223:
+                               /* success */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#314: FILE: drivers/s3cmm/upbuffer.c:224:
+                               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: drivers/s3cmm/upbuffer.c:224:
+                               return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#315: FILE: drivers/s3cmm/upbuffer.c:225:
+                       } else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: drivers/s3cmm/upbuffer.c:225:
+                       } else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#315: FILE: drivers/s3cmm/upbuffer.c:225:
+                       } else
+                               res = -EINVAL;

CHECK:BRACES: Unbalanced braces around else statement
#315: FILE: drivers/s3cmm/upbuffer.c:225:
+                       } else

ERROR:CODE_INDENT: code indent should use tabs where possible
#316: FILE: drivers/s3cmm/upbuffer.c:226:
+                               res = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: drivers/s3cmm/upbuffer.c:226:
+                               res = -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#317: FILE: drivers/s3cmm/upbuffer.c:227:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: drivers/s3cmm/upbuffer.c:227:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#318: FILE: drivers/s3cmm/upbuffer.c:228:
+               fput(vma->vm_file);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: drivers/s3cmm/upbuffer.c:228:
+               fput(vma->vm_file);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: drivers/s3cmm/upbuffer.c:229:
+               kfree(area);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: drivers/s3cmm/upbuffer.c:229:
+               kfree(area);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: drivers/s3cmm/upbuffer.c:230:
+       } else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#320: FILE: drivers/s3cmm/upbuffer.c:230:
+       } else
+               res = -EINVAL;

CHECK:BRACES: Unbalanced braces around else statement
#320: FILE: drivers/s3cmm/upbuffer.c:230:
+       } else

ERROR:CODE_INDENT: code indent should use tabs where possible
#321: FILE: drivers/s3cmm/upbuffer.c:231:
+               res = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: drivers/s3cmm/upbuffer.c:231:
+               res = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: drivers/s3cmm/upbuffer.c:233:
+       return res;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#329: FILE: drivers/s3cmm/upbuffer.c:239:
+/* case 2:
+   normal process memory, struct page * available for every page,

WARNING:TYPO_SPELLING: 'usualy' may be misspelled - perhaps 'usually'?
#330: FILE: drivers/s3cmm/upbuffer.c:240:
+   this can be either stack or heap, usualy can be continous only
                                      ^^^^^^

WARNING:TYPO_SPELLING: 'continous' may be misspelled - perhaps 'continuous'?
#330: FILE: drivers/s3cmm/upbuffer.c:240:
+   this can be either stack or heap, usualy can be continous only
                                                    ^^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: drivers/s3cmm/upbuffer.c:246:
+       struct page **pages = b->priv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: drivers/s3cmm/upbuffer.c:247:
+       int page_count = b->page_count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: drivers/s3cmm/upbuffer.c:248:
+       int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: drivers/s3cmm/upbuffer.c:249:
+       int res = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: drivers/s3cmm/upbuffer.c:251:
+       switch (dir) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: drivers/s3cmm/upbuffer.c:253:
+       case UPBUF_FROM_USER:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: drivers/s3cmm/upbuffer.c:254:
+               if (b->vaddr)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: drivers/s3cmm/upbuffer.c:254:
+               if (b->vaddr)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#344: FILE: drivers/s3cmm/upbuffer.c:254:
+               if (b->vaddr)
+                       dmac_flush_range(b->vaddr, (char *)b->vaddr + b->size);

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: drivers/s3cmm/upbuffer.c:255:
+                       dmac_flush_range(b->vaddr, (char *)b->vaddr + b->size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: drivers/s3cmm/upbuffer.c:255:
+                       dmac_flush_range(b->vaddr, (char *)b->vaddr + b->size);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: drivers/s3cmm/upbuffer.c:256:
+               outer_flush_range(b->page_pa_first,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: drivers/s3cmm/upbuffer.c:256:
+               outer_flush_range(b->page_pa_first,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: drivers/s3cmm/upbuffer.c:257:
+                       b->page_pa_first + b->page_buff_size - 1);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#347: FILE: drivers/s3cmm/upbuffer.c:257:
+               outer_flush_range(b->page_pa_first,
+                       b->page_pa_first + b->page_buff_size - 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: drivers/s3cmm/upbuffer.c:257:
+                       b->page_pa_first + b->page_buff_size - 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#348: FILE: drivers/s3cmm/upbuffer.c:258:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: drivers/s3cmm/upbuffer.c:258:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: drivers/s3cmm/upbuffer.c:260:
+       case UPBUF_TO_USER:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#351: FILE: drivers/s3cmm/upbuffer.c:261:
+               if (b->vaddr)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: drivers/s3cmm/upbuffer.c:261:
+               if (b->vaddr)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#351: FILE: drivers/s3cmm/upbuffer.c:261:
+               if (b->vaddr)
+                       dmac_inv_range(b->vaddr, (char *)b->vaddr + b->size);

ERROR:CODE_INDENT: code indent should use tabs where possible
#352: FILE: drivers/s3cmm/upbuffer.c:262:
+                       dmac_inv_range(b->vaddr, (char *)b->vaddr + b->size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: drivers/s3cmm/upbuffer.c:262:
+                       dmac_inv_range(b->vaddr, (char *)b->vaddr + b->size);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: drivers/s3cmm/upbuffer.c:263:
+               outer_inv_range(b->page_pa_first,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: drivers/s3cmm/upbuffer.c:263:
+               outer_inv_range(b->page_pa_first,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#354: FILE: drivers/s3cmm/upbuffer.c:264:
+                       b->page_pa_first + b->page_buff_size - 1);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#354: FILE: drivers/s3cmm/upbuffer.c:264:
+               outer_inv_range(b->page_pa_first,
+                       b->page_pa_first + b->page_buff_size - 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: drivers/s3cmm/upbuffer.c:264:
+                       b->page_pa_first + b->page_buff_size - 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#355: FILE: drivers/s3cmm/upbuffer.c:265:
+               for (i = 0; i < page_count; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: drivers/s3cmm/upbuffer.c:265:
+               for (i = 0; i < page_count; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#355: FILE: drivers/s3cmm/upbuffer.c:265:
+               for (i = 0; i < page_count; i++)
+                       if (!PageReserved(pages[i]))

ERROR:CODE_INDENT: code indent should use tabs where possible
#356: FILE: drivers/s3cmm/upbuffer.c:266:
+                       if (!PageReserved(pages[i]))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: drivers/s3cmm/upbuffer.c:266:
+                       if (!PageReserved(pages[i]))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#356: FILE: drivers/s3cmm/upbuffer.c:266:
+                       if (!PageReserved(pages[i]))
+                               SetPageDirty(pages[i]);

ERROR:CODE_INDENT: code indent should use tabs where possible
#357: FILE: drivers/s3cmm/upbuffer.c:267:
+                               SetPageDirty(pages[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#357: FILE: drivers/s3cmm/upbuffer.c:267:
+                               SetPageDirty(pages[i]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#358: FILE: drivers/s3cmm/upbuffer.c:268:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: drivers/s3cmm/upbuffer.c:268:
+               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#361: FILE: drivers/s3cmm/upbuffer.c:271:
+               res = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: drivers/s3cmm/upbuffer.c:271:
+               res = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: drivers/s3cmm/upbuffer.c:272:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: drivers/s3cmm/upbuffer.c:273:
+       return res;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: drivers/s3cmm/upbuffer.c:278:
+       struct page **pages = b->priv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: drivers/s3cmm/upbuffer.c:279:
+       int page_count = b->page_count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: drivers/s3cmm/upbuffer.c:280:
+       int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: drivers/s3cmm/upbuffer.c:282:
+       debug("direct_usermem_release\n");$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'direct_usermem_release', this function's name, in a string
#372: FILE: drivers/s3cmm/upbuffer.c:282:
+       debug("direct_usermem_release\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: drivers/s3cmm/upbuffer.c:283:
+       BUG_ON(pages == NULL);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#373: FILE: drivers/s3cmm/upbuffer.c:283:
+       BUG_ON(pages == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pages"
#373: FILE: drivers/s3cmm/upbuffer.c:283:
+       BUG_ON(pages == NULL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: drivers/s3cmm/upbuffer.c:285:
+       for (i = 0; i < page_count; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#375: FILE: drivers/s3cmm/upbuffer.c:285:
+       for (i = 0; i < page_count; i++)
+               page_cache_release(pages[i]);

ERROR:CODE_INDENT: code indent should use tabs where possible
#376: FILE: drivers/s3cmm/upbuffer.c:286:
+               page_cache_release(pages[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: drivers/s3cmm/upbuffer.c:286:
+               page_cache_release(pages[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: drivers/s3cmm/upbuffer.c:287:
+       kfree(pages);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: drivers/s3cmm/upbuffer.c:289:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: drivers/s3cmm/upbuffer.c:294:
+       int page_count = b->page_count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: drivers/s3cmm/upbuffer.c:295:
+       struct page **pages;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: drivers/s3cmm/upbuffer.c:296:
+       int res = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: drivers/s3cmm/upbuffer.c:297:
+       int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: drivers/s3cmm/upbuffer.c:299:
+       debug("direct_usermem_prepare\n");$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'direct_usermem_prepare', this function's name, in a string
#389: FILE: drivers/s3cmm/upbuffer.c:299:
+       debug("direct_usermem_prepare\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: drivers/s3cmm/upbuffer.c:301:
+       pages = kmalloc(page_count * sizeof(struct page *), GFP_KERNEL);$

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#391: FILE: drivers/s3cmm/upbuffer.c:301:
+       pages = kmalloc(page_count * sizeof(struct page *), GFP_KERNEL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: drivers/s3cmm/upbuffer.c:302:
+       if (pages == NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#392: FILE: drivers/s3cmm/upbuffer.c:302:
+       if (pages == NULL)
+               return -ENOMEM;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pages"
#392: FILE: drivers/s3cmm/upbuffer.c:302:
+       if (pages == NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: drivers/s3cmm/upbuffer.c:303:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: drivers/s3cmm/upbuffer.c:303:
+               return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: drivers/s3cmm/upbuffer.c:305:
+       res = get_user_pages(current, current->mm, b->page_va_first, page_count,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#396: FILE: drivers/s3cmm/upbuffer.c:306:
+                            1, 1, pages, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: drivers/s3cmm/upbuffer.c:306:
+                            1, 1, pages, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: drivers/s3cmm/upbuffer.c:308:
+       if (res == page_count) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#398: FILE: drivers/s3cmm/upbuffer.c:308:
+       if (res == page_count) {
+               unsigned long base = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#399: FILE: drivers/s3cmm/upbuffer.c:309:
+               unsigned long base = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: drivers/s3cmm/upbuffer.c:309:
+               unsigned long base = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#401: FILE: drivers/s3cmm/upbuffer.c:311:
+               base = page_to_pfn(pages[0])<<PAGE_SHIFT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: drivers/s3cmm/upbuffer.c:311:
+               base = page_to_pfn(pages[0])<<PAGE_SHIFT;$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#401: FILE: drivers/s3cmm/upbuffer.c:311:
+               base = page_to_pfn(pages[0])<<PAGE_SHIFT;
                                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#403: FILE: drivers/s3cmm/upbuffer.c:313:
+               for (i = 1; i < page_count; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: drivers/s3cmm/upbuffer.c:313:
+               for (i = 1; i < page_count; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#403: FILE: drivers/s3cmm/upbuffer.c:313:
+               for (i = 1; i < page_count; i++)
+                       if (page_to_pfn(pages[i])<<PAGE_SHIFT != base + PAGE_SIZE*i)

ERROR:CODE_INDENT: code indent should use tabs where possible
#404: FILE: drivers/s3cmm/upbuffer.c:314:
+                       if (page_to_pfn(pages[i])<<PAGE_SHIFT != base + PAGE_SIZE*i)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: drivers/s3cmm/upbuffer.c:314:
+                       if (page_to_pfn(pages[i])<<PAGE_SHIFT != base + PAGE_SIZE*i)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#404: FILE: drivers/s3cmm/upbuffer.c:314:
+                       if (page_to_pfn(pages[i])<<PAGE_SHIFT != base + PAGE_SIZE*i)
+                               break;

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#404: FILE: drivers/s3cmm/upbuffer.c:314:
+                       if (page_to_pfn(pages[i])<<PAGE_SHIFT != base + PAGE_SIZE*i)
                                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#404: FILE: drivers/s3cmm/upbuffer.c:314:
+                       if (page_to_pfn(pages[i])<<PAGE_SHIFT != base + PAGE_SIZE*i)
                                                                                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#405: FILE: drivers/s3cmm/upbuffer.c:315:
+                               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#405: FILE: drivers/s3cmm/upbuffer.c:315:
+                               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#407: FILE: drivers/s3cmm/upbuffer.c:317:
+               if (i == page_count) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: drivers/s3cmm/upbuffer.c:317:
+               if (i == page_count) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#407: FILE: drivers/s3cmm/upbuffer.c:317:
+               if (i == page_count) {
+                       debug("Found userspace buffer that is continous memory area: vaddr "

WARNING:TYPO_SPELLING: 'continous' may be misspelled - perhaps 'continuous'?
#408: FILE: drivers/s3cmm/upbuffer.c:318:
+                       debug("Found userspace buffer that is continous memory area: vaddr "
                                                              ^^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#408: FILE: drivers/s3cmm/upbuffer.c:318:
+                       debug("Found userspace buffer that is continous memory area: vaddr "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: drivers/s3cmm/upbuffer.c:318:
+                       debug("Found userspace buffer that is continous memory area: vaddr "$

ERROR:CODE_INDENT: code indent should use tabs where possible
#409: FILE: drivers/s3cmm/upbuffer.c:319:
+                               "(userspace) 0x%08lx, phys 0x%08lx, size %ld\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: drivers/s3cmm/upbuffer.c:319:
+                               "(userspace) 0x%08lx, phys 0x%08lx, size %ld\n",$

WARNING:SPLIT_STRING: quoted string split across lines
#409: FILE: drivers/s3cmm/upbuffer.c:319:
+                       debug("Found userspace buffer that is continous memory area: vaddr "
+                               "(userspace) 0x%08lx, phys 0x%08lx, size %ld\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#410: FILE: drivers/s3cmm/upbuffer.c:320:
+                               b->page_va_first, base, b->size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: drivers/s3cmm/upbuffer.c:320:
+                               b->page_va_first, base, b->size);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#411: FILE: drivers/s3cmm/upbuffer.c:321:
+                       b->page_pa_first = base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: drivers/s3cmm/upbuffer.c:321:
+                       b->page_pa_first = base;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#412: FILE: drivers/s3cmm/upbuffer.c:322:
+                       b->paddr = b->page_pa_first + b->page_offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: drivers/s3cmm/upbuffer.c:322:
+                       b->paddr = b->page_pa_first + b->page_offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#413: FILE: drivers/s3cmm/upbuffer.c:323:
+                       b->priv = pages;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: drivers/s3cmm/upbuffer.c:323:
+                       b->priv = pages;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#414: FILE: drivers/s3cmm/upbuffer.c:324:
+                       b->sync = direct_usermem_sync;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: drivers/s3cmm/upbuffer.c:324:
+                       b->sync = direct_usermem_sync;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#415: FILE: drivers/s3cmm/upbuffer.c:325:
+                       b->release = direct_usermem_release;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#415: FILE: drivers/s3cmm/upbuffer.c:325:
+                       b->release = direct_usermem_release;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#416: FILE: drivers/s3cmm/upbuffer.c:326:
+                       /* success */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#417: FILE: drivers/s3cmm/upbuffer.c:327:
+                       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: drivers/s3cmm/upbuffer.c:327:
+                       return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#418: FILE: drivers/s3cmm/upbuffer.c:328:
+               } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: drivers/s3cmm/upbuffer.c:328:
+               } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#418: FILE: drivers/s3cmm/upbuffer.c:328:
+               } else {
+                       debug("This userspace memory is not continous physical memory\n");

WARNING:TYPO_SPELLING: 'continous' may be misspelled - perhaps 'continuous'?
#419: FILE: drivers/s3cmm/upbuffer.c:329:
+                       debug("This userspace memory is not continous physical memory\n");
                                                            ^^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#419: FILE: drivers/s3cmm/upbuffer.c:329:
+                       debug("This userspace memory is not continous physical memory\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: drivers/s3cmm/upbuffer.c:329:
+                       debug("This userspace memory is not continous physical memory\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#420: FILE: drivers/s3cmm/upbuffer.c:330:
+                       res = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: drivers/s3cmm/upbuffer.c:330:
+                       res = -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#421: FILE: drivers/s3cmm/upbuffer.c:331:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: drivers/s3cmm/upbuffer.c:331:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: drivers/s3cmm/upbuffer.c:332:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#422: FILE: drivers/s3cmm/upbuffer.c:332:
+       } else {
+               if (res > 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#423: FILE: drivers/s3cmm/upbuffer.c:333:
+               if (res > 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: drivers/s3cmm/upbuffer.c:333:
+               if (res > 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#423: FILE: drivers/s3cmm/upbuffer.c:333:
+               if (res > 0)
+                       page_count = res;

ERROR:CODE_INDENT: code indent should use tabs where possible
#424: FILE: drivers/s3cmm/upbuffer.c:334:
+                       page_count = res;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: drivers/s3cmm/upbuffer.c:334:
+                       page_count = res;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#425: FILE: drivers/s3cmm/upbuffer.c:335:
+               res = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: drivers/s3cmm/upbuffer.c:335:
+               res = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: drivers/s3cmm/upbuffer.c:336:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: drivers/s3cmm/upbuffer.c:338:
+       for (i = 0; i < page_count; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#428: FILE: drivers/s3cmm/upbuffer.c:338:
+       for (i = 0; i < page_count; i++)
+               page_cache_release(pages[i]);

ERROR:CODE_INDENT: code indent should use tabs where possible
#429: FILE: drivers/s3cmm/upbuffer.c:339:
+               page_cache_release(pages[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#429: FILE: drivers/s3cmm/upbuffer.c:339:
+               page_cache_release(pages[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#430: FILE: drivers/s3cmm/upbuffer.c:340:
+       kfree(pages);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#432: FILE: drivers/s3cmm/upbuffer.c:342:
+       return res;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#438: FILE: drivers/s3cmm/upbuffer.c:348:
+int upbuf_prepare(struct upbuf *buf, unsigned long vaddr, unsigned long size,
+       enum upbuf_flags flags)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: drivers/s3cmm/upbuffer.c:348:
+       enum upbuf_flags flags)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#440: FILE: drivers/s3cmm/upbuffer.c:350:
+       struct mm_struct *mm = current->mm;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: drivers/s3cmm/upbuffer.c:351:
+       struct vm_area_struct *vma;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: drivers/s3cmm/upbuffer.c:352:
+       int res;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: drivers/s3cmm/upbuffer.c:353:
+       unsigned int page_va_last;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#445: FILE: drivers/s3cmm/upbuffer.c:355:
+       BUG_ON(buf == NULL || current == NULL);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#445: FILE: drivers/s3cmm/upbuffer.c:355:
+       BUG_ON(buf == NULL || current == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buf"
#445: FILE: drivers/s3cmm/upbuffer.c:355:
+       BUG_ON(buf == NULL || current == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!current"
#445: FILE: drivers/s3cmm/upbuffer.c:355:
+       BUG_ON(buf == NULL || current == NULL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#447: FILE: drivers/s3cmm/upbuffer.c:357:
+       debug("upbuf_prepare: vaddr 0x%08lx, size 0x%ld, flags %d\n", vaddr, size,$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'upbuf_prepare', this function's name, in a string
#447: FILE: drivers/s3cmm/upbuffer.c:357:
+       debug("upbuf_prepare: vaddr 0x%08lx, size 0x%ld, flags %d\n", vaddr, size,

ERROR:PRINTF_0XDECIMAL: Prefixing 0x with decimal output is defective
#447: FILE: drivers/s3cmm/upbuffer.c:357:
+       debug("upbuf_prepare: vaddr 0x%08lx, size 0x%ld, flags %d\n", vaddr, size,

Prefixing 0x with decimal output is defective and should be corrected.

ERROR:CODE_INDENT: code indent should use tabs where possible
#448: FILE: drivers/s3cmm/upbuffer.c:358:
+               flags);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#448: FILE: drivers/s3cmm/upbuffer.c:358:
+       debug("upbuf_prepare: vaddr 0x%08lx, size 0x%ld, flags %d\n", vaddr, size,
+               flags);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: drivers/s3cmm/upbuffer.c:358:
+               flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: drivers/s3cmm/upbuffer.c:360:
+       mm = current->mm;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#451: FILE: drivers/s3cmm/upbuffer.c:361:
+       vma = find_extend_vma(mm, vaddr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#453: FILE: drivers/s3cmm/upbuffer.c:363:
+       debug("vma: %p\n", vma);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#455: FILE: drivers/s3cmm/upbuffer.c:365:
+       if (!vma)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#455: FILE: drivers/s3cmm/upbuffer.c:365:
+       if (!vma)
+               return -EFAULT;

ERROR:CODE_INDENT: code indent should use tabs where possible
#456: FILE: drivers/s3cmm/upbuffer.c:366:
+               return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#456: FILE: drivers/s3cmm/upbuffer.c:366:
+               return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#458: FILE: drivers/s3cmm/upbuffer.c:368:
+       memset(buf, 0, sizeof(*buf));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: drivers/s3cmm/upbuffer.c:370:
+       buf->flags = flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: drivers/s3cmm/upbuffer.c:371:
+       buf->size = size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: drivers/s3cmm/upbuffer.c:372:
+       buf->user_vaddr = vaddr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: drivers/s3cmm/upbuffer.c:373:
+       buf->page_offset = vaddr & ~PAGE_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: drivers/s3cmm/upbuffer.c:374:
+       buf->page_va_first = (vaddr          & PAGE_MASK);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: drivers/s3cmm/upbuffer.c:375:
+       page_va_last  = ((vaddr+size-1) & PAGE_MASK);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#465: FILE: drivers/s3cmm/upbuffer.c:375:
+       page_va_last  = ((vaddr+size-1) & PAGE_MASK);
                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#465: FILE: drivers/s3cmm/upbuffer.c:375:
+       page_va_last  = ((vaddr+size-1) & PAGE_MASK);
                                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#466: FILE: drivers/s3cmm/upbuffer.c:376:
+       buf->page_count = ((page_va_last-buf->page_va_first) >> PAGE_SHIFT) + 1;$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#466: FILE: drivers/s3cmm/upbuffer.c:376:
+       buf->page_count = ((page_va_last-buf->page_va_first) >> PAGE_SHIFT) + 1;
                                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: drivers/s3cmm/upbuffer.c:377:
+       buf->page_buff_size = buf->page_count << PAGE_SHIFT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#469: FILE: drivers/s3cmm/upbuffer.c:379:
+       if (vma->vm_end < vaddr + size) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#469: FILE: drivers/s3cmm/upbuffer.c:379:
+       if (vma->vm_end < vaddr + size) {
+               debug("Virtual area from 0x%08lx + 0x%08lx does not belong to single "

ERROR:CODE_INDENT: code indent should use tabs where possible
#470: FILE: drivers/s3cmm/upbuffer.c:380:
+               debug("Virtual area from 0x%08lx + 0x%08lx does not belong to single "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: drivers/s3cmm/upbuffer.c:380:
+               debug("Virtual area from 0x%08lx + 0x%08lx does not belong to single "$

ERROR:CODE_INDENT: code indent should use tabs where possible
#471: FILE: drivers/s3cmm/upbuffer.c:381:
+                       " vm_area, cannot map it directly!\n", vaddr, size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: drivers/s3cmm/upbuffer.c:381:
+                       " vm_area, cannot map it directly!\n", vaddr, size);$

WARNING:SPLIT_STRING: quoted string split across lines
#471: FILE: drivers/s3cmm/upbuffer.c:381:
+               debug("Virtual area from 0x%08lx + 0x%08lx does not belong to single "
+                       " vm_area, cannot map it directly!\n", vaddr, size);

ERROR:CODE_INDENT: code indent should use tabs where possible
#472: FILE: drivers/s3cmm/upbuffer.c:382:
+               goto shadow_buffer;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: drivers/s3cmm/upbuffer.c:382:
+               goto shadow_buffer;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#473: FILE: drivers/s3cmm/upbuffer.c:383:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#475: FILE: drivers/s3cmm/upbuffer.c:385:
+       if ((res = direct_pfn_prepare(buf, vma)) == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#475: FILE: drivers/s3cmm/upbuffer.c:385:
+       if ((res = direct_pfn_prepare(buf, vma)) == 0)
+               goto map_kernel;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#475: FILE: drivers/s3cmm/upbuffer.c:385:
+       if ((res = direct_pfn_prepare(buf, vma)) == 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#476: FILE: drivers/s3cmm/upbuffer.c:386:
+               goto map_kernel;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: drivers/s3cmm/upbuffer.c:386:
+               goto map_kernel;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: drivers/s3cmm/upbuffer.c:388:
+       if ((res = direct_usermem_prepare(buf)) == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#478: FILE: drivers/s3cmm/upbuffer.c:388:
+       if ((res = direct_usermem_prepare(buf)) == 0)
+               goto map_kernel;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#478: FILE: drivers/s3cmm/upbuffer.c:388:
+       if ((res = direct_usermem_prepare(buf)) == 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#479: FILE: drivers/s3cmm/upbuffer.c:389:
+               goto map_kernel;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: drivers/s3cmm/upbuffer.c:389:
+               goto map_kernel;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: drivers/s3cmm/upbuffer.c:392:
+       if (flags & UPBUF_NO_SHADOW)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#482: FILE: drivers/s3cmm/upbuffer.c:392:
+       if (flags & UPBUF_NO_SHADOW)
+               return -EINVAL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#483: FILE: drivers/s3cmm/upbuffer.c:393:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: drivers/s3cmm/upbuffer.c:393:
+               return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: drivers/s3cmm/upbuffer.c:394:
+       res = shadow_buffer_prepare(buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: drivers/s3cmm/upbuffer.c:397:
+       if (res == 0 && buf->vaddr == NULL && (flags & UPBUF_MAP_KERNEL)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#487: FILE: drivers/s3cmm/upbuffer.c:397:
+       if (res == 0 && buf->vaddr == NULL && (flags & UPBUF_MAP_KERNEL)) {
+               void *kernel_vaddr;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buf->vaddr"
#487: FILE: drivers/s3cmm/upbuffer.c:397:
+       if (res == 0 && buf->vaddr == NULL && (flags & UPBUF_MAP_KERNEL)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#488: FILE: drivers/s3cmm/upbuffer.c:398:
+               void *kernel_vaddr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: drivers/s3cmm/upbuffer.c:398:
+               void *kernel_vaddr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#489: FILE: drivers/s3cmm/upbuffer.c:399:
+               if ((kernel_vaddr = ioremap(buf->paddr, size)) != NULL) {$

WARNING:LINE_SPACING: Missing a blank line after declarations
#489: FILE: drivers/s3cmm/upbuffer.c:399:
+               void *kernel_vaddr;
+               if ((kernel_vaddr = ioremap(buf->paddr, size)) != NULL) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: drivers/s3cmm/upbuffer.c:399:
+               if ((kernel_vaddr = ioremap(buf->paddr, size)) != NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#489: FILE: drivers/s3cmm/upbuffer.c:399:
+               if ((kernel_vaddr = ioremap(buf->paddr, size)) != NULL) {
+                       debug("Buffer is available at 0x%08lx in kernel space.\n",

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#489: FILE: drivers/s3cmm/upbuffer.c:399:
+               if ((kernel_vaddr = ioremap(buf->paddr, size)) != NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#490: FILE: drivers/s3cmm/upbuffer.c:400:
+                       debug("Buffer is available at 0x%08lx in kernel space.\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: drivers/s3cmm/upbuffer.c:400:
+                       debug("Buffer is available at 0x%08lx in kernel space.\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#491: FILE: drivers/s3cmm/upbuffer.c:401:
+                               (unsigned long)kernel_vaddr);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#491: FILE: drivers/s3cmm/upbuffer.c:401:
+                       debug("Buffer is available at 0x%08lx in kernel space.\n",
+                               (unsigned long)kernel_vaddr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: drivers/s3cmm/upbuffer.c:401:
+                               (unsigned long)kernel_vaddr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#492: FILE: drivers/s3cmm/upbuffer.c:402:
+                       buf->vaddr = kernel_vaddr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: drivers/s3cmm/upbuffer.c:402:
+                       buf->vaddr = kernel_vaddr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#493: FILE: drivers/s3cmm/upbuffer.c:403:
+                       buf->flags = UPBUF_MAP_KERNEL_DONE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: drivers/s3cmm/upbuffer.c:403:
+                       buf->flags = UPBUF_MAP_KERNEL_DONE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#494: FILE: drivers/s3cmm/upbuffer.c:404:
+               } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: drivers/s3cmm/upbuffer.c:404:
+               } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#494: FILE: drivers/s3cmm/upbuffer.c:404:
+               } else {
+                       if (buf->release)

ERROR:CODE_INDENT: code indent should use tabs where possible
#495: FILE: drivers/s3cmm/upbuffer.c:405:
+                       if (buf->release)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#495: FILE: drivers/s3cmm/upbuffer.c:405:
+                       if (buf->release)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#495: FILE: drivers/s3cmm/upbuffer.c:405:
+                       if (buf->release)
+                               buf->release(buf);

ERROR:CODE_INDENT: code indent should use tabs where possible
#496: FILE: drivers/s3cmm/upbuffer.c:406:
+                               buf->release(buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: drivers/s3cmm/upbuffer.c:406:
+                               buf->release(buf);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#497: FILE: drivers/s3cmm/upbuffer.c:407:
+                       res = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: drivers/s3cmm/upbuffer.c:407:
+                       res = -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#498: FILE: drivers/s3cmm/upbuffer.c:408:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: drivers/s3cmm/upbuffer.c:408:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#499: FILE: drivers/s3cmm/upbuffer.c:409:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#500: FILE: drivers/s3cmm/upbuffer.c:410:
+       return res;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: drivers/s3cmm/upbuffer.c:416:
+       int res = 0;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#507: FILE: drivers/s3cmm/upbuffer.c:417:
+       int res = 0;
+       BUG_ON(buf == NULL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#507: FILE: drivers/s3cmm/upbuffer.c:417:
+       BUG_ON(buf == NULL);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#507: FILE: drivers/s3cmm/upbuffer.c:417:
+       BUG_ON(buf == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buf"
#507: FILE: drivers/s3cmm/upbuffer.c:417:
+       BUG_ON(buf == NULL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#508: FILE: drivers/s3cmm/upbuffer.c:418:
+       debug("upbuf_sync\n");$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'upbuf_sync', this function's name, in a string
#508: FILE: drivers/s3cmm/upbuffer.c:418:
+       debug("upbuf_sync\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#509: FILE: drivers/s3cmm/upbuffer.c:419:
+       if (buf->sync)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#509: FILE: drivers/s3cmm/upbuffer.c:419:
+       if (buf->sync)
+               res = buf->sync(buf, dir);

ERROR:CODE_INDENT: code indent should use tabs where possible
#510: FILE: drivers/s3cmm/upbuffer.c:420:
+               res = buf->sync(buf, dir);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: drivers/s3cmm/upbuffer.c:420:
+               res = buf->sync(buf, dir);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#511: FILE: drivers/s3cmm/upbuffer.c:421:
+       return res;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#517: FILE: drivers/s3cmm/upbuffer.c:427:
+       int res = 0;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#518: FILE: drivers/s3cmm/upbuffer.c:428:
+       int res = 0;
+       BUG_ON(buf == NULL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#518: FILE: drivers/s3cmm/upbuffer.c:428:
+       BUG_ON(buf == NULL);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#518: FILE: drivers/s3cmm/upbuffer.c:428:
+       BUG_ON(buf == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buf"
#518: FILE: drivers/s3cmm/upbuffer.c:428:
+       BUG_ON(buf == NULL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#519: FILE: drivers/s3cmm/upbuffer.c:429:
+       debug("upbuf_release\n");$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'upbuf_release', this function's name, in a string
#519: FILE: drivers/s3cmm/upbuffer.c:429:
+       debug("upbuf_release\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#521: FILE: drivers/s3cmm/upbuffer.c:431:
+       if ((buf->flags & UPBUF_MAP_KERNEL_DONE) && buf->vaddr)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#521: FILE: drivers/s3cmm/upbuffer.c:431:
+       if ((buf->flags & UPBUF_MAP_KERNEL_DONE) && buf->vaddr)
+               iounmap(buf->vaddr);

ERROR:CODE_INDENT: code indent should use tabs where possible
#522: FILE: drivers/s3cmm/upbuffer.c:432:
+               iounmap(buf->vaddr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: drivers/s3cmm/upbuffer.c:432:
+               iounmap(buf->vaddr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#524: FILE: drivers/s3cmm/upbuffer.c:434:
+       if (buf->release)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#524: FILE: drivers/s3cmm/upbuffer.c:434:
+       if (buf->release)
+               res = buf->release(buf);

ERROR:CODE_INDENT: code indent should use tabs where possible
#525: FILE: drivers/s3cmm/upbuffer.c:435:
+               res = buf->release(buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: drivers/s3cmm/upbuffer.c:435:
+               res = buf->release(buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: drivers/s3cmm/upbuffer.c:436:
+       if (res == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#526: FILE: drivers/s3cmm/upbuffer.c:436:
+       if (res == 0)
+               memset(buf, 0, sizeof(*buf));

ERROR:CODE_INDENT: code indent should use tabs where possible
#527: FILE: drivers/s3cmm/upbuffer.c:437:
+               memset(buf, 0, sizeof(*buf));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: drivers/s3cmm/upbuffer.c:437:
+               memset(buf, 0, sizeof(*buf));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: drivers/s3cmm/upbuffer.c:438:
+       return res;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#537: FILE: include/linux/s3c/upbuffer.h:1:
+/*

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: include/linux/s3c/upbuffer.h:19:
+       UPBUF_ANY = 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#558: FILE: include/linux/s3c/upbuffer.h:22:
+       UPBUF_NO_SHADOW = 1<<1,$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#558: FILE: include/linux/s3c/upbuffer.h:22:
+       UPBUF_NO_SHADOW = 1<<1,
                           ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#561: FILE: include/linux/s3c/upbuffer.h:25:
+       UPBUF_MAP_KERNEL = 1<<2,$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#561: FILE: include/linux/s3c/upbuffer.h:25:
+       UPBUF_MAP_KERNEL = 1<<2,
                            ^

WARNING:TYPO_SPELLING: 'sucessfully' may be misspelled - perhaps 'successfully'?
#564: FILE: include/linux/s3c/upbuffer.h:28:
+       /* virtual address mapping in kernel space sucessfully created */
                                                   ^^^^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: include/linux/s3c/upbuffer.h:29:
+       UPBUF_MAP_KERNEL_DONE = 1<<16,$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#565: FILE: include/linux/s3c/upbuffer.h:29:
+       UPBUF_MAP_KERNEL_DONE = 1<<16,
                                 ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#569: FILE: include/linux/s3c/upbuffer.h:33:
+       UPBUF_FROM_USER,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#570: FILE: include/linux/s3c/upbuffer.h:34:
+       UPBUF_TO_USER,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#573: FILE: include/linux/s3c/upbuffer.h:37:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#576: FILE: include/linux/s3c/upbuffer.h:40:
+       unsigned long size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#579: FILE: include/linux/s3c/upbuffer.h:43:
+       unsigned long paddr;$

WARNING:TYPO_SPELLING: 'addres' may be misspelled - perhaps 'address'?
#581: FILE: include/linux/s3c/upbuffer.h:45:
+       /* Virtual addres (kernel space) */
                   ^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#582: FILE: include/linux/s3c/upbuffer.h:46:
+       void *vaddr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#585: FILE: include/linux/s3c/upbuffer.h:49:
+       unsigned int flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#586: FILE: include/linux/s3c/upbuffer.h:50:
+       unsigned long user_vaddr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#587: FILE: include/linux/s3c/upbuffer.h:51:
+       unsigned long page_va_first;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#588: FILE: include/linux/s3c/upbuffer.h:52:
+       unsigned long page_pa_first;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: include/linux/s3c/upbuffer.h:53:
+       unsigned long page_offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#590: FILE: include/linux/s3c/upbuffer.h:54:
+       unsigned long page_count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#591: FILE: include/linux/s3c/upbuffer.h:55:
+       unsigned long page_buff_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#593: FILE: include/linux/s3c/upbuffer.h:57:
+       void *priv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#594: FILE: include/linux/s3c/upbuffer.h:58:
+       int (*sync)(struct upbuf *upbuf, enum upbuf_direction dir);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: include/linux/s3c/upbuffer.h:59:
+       int (*release)(struct upbuf *upbuf);$

WARNING:REPEATED_WORD: Possible repeated word: 'it'
#604: FILE: include/linux/s3c/upbuffer.h:68:
+/** Prepare buffer, find its physical memory or create a shadow buffer it it is

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#605: FILE: include/linux/s3c/upbuffer.h:69:
+/** Prepare buffer, find its physical memory or create a shadow buffer it it is
+    not possible to use it directly */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#605: FILE: include/linux/s3c/upbuffer.h:69:
+    not possible to use it directly */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#607: FILE: include/linux/s3c/upbuffer.h:71:
+int __must_check upbuf_prepare(struct upbuf *upbuf, unsigned long u_vaddr,
+       unsigned long size, enum upbuf_flags flags);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#607: FILE: include/linux/s3c/upbuffer.h:71:
+       unsigned long size, enum upbuf_flags flags);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000130271.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 137 errors, 371 warnings, 40 checks, 520 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000130271.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
