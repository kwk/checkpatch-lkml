CHECK:LINE_SPACING: Please don't use multiple blank lines
#61: FILE: drivers/input/mouse/trackpoint.h:111:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_name' - possible side-effects?
#91: FILE: drivers/input/mouse/trackpoint.c:134:
+#define TRACKPOINT_BIT_ATTR(_name, _command, _mask, _inv)		      \
+	static struct trackpoint_attr_data trackpoint_attr_##_name = {	      \
+		.field_offset	= offsetof(struct trackpoint_data, _name),    \
+		.command	= _command,				      \
+		.mask		= _mask,				      \
+		.inverted	= _inv,					      \
+	};								      \
+	PSMOUSE_DEFINE_ATTR(_name, S_IWUSR | S_IRUGO,			      \
+			    &trackpoint_attr_##_name,			      \
 			    trackpoint_show_int_attr, trackpoint_set_bit_attr)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#98: FILE: drivers/input/mouse/trackpoint.c:141:
+	PSMOUSE_DEFINE_ATTR(_name, S_IWUSR | S_IRUGO,			      \

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_name' - possible side-effects?
#103: FILE: drivers/input/mouse/trackpoint.c:146:
+#define TRACKPOINT_CUSTOM_WRITE_ATTR(_name, _command, _mask, _inv, _writefn)  \
+	static struct trackpoint_attr_data trackpoint_attr_##_name = {	      \
+		.field_offset	= offsetof(struct trackpoint_data, _name),    \
+		.command	= _command,				      \
+		.mask		= _mask,				      \
+		.inverted	= _inv,					      \
+	};								      \
+	PSMOUSE_DEFINE_ATTR(_name, S_IWUSR | S_IRUGO,			      \
+			    &trackpoint_attr_##_name,			      \
+			    trackpoint_show_int_attr, _writefn)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#110: FILE: drivers/input/mouse/trackpoint.c:153:
+	PSMOUSE_DEFINE_ATTR(_name, S_IWUSR | S_IRUGO,			      \

CHECK:LINE_SPACING: Please don't use multiple blank lines
#114: FILE: drivers/input/mouse/trackpoint.c:157:
+
+

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_ps2dev' - possible side-effects?
#115: FILE: drivers/input/mouse/trackpoint.c:158:
+#define TRACKPOINT_SET_PTS_BUTTON(_ps2dev, _value)			      \
+ do {									      \
+	trackpoint_write(_ps2dev, TP_BUTTON1_MAP, ((1 == _value) ? 255 : 0)); \
+	trackpoint_write(_ps2dev, TP_BUTTON2_MAP, ((2 == _value) ? 255 : 0)); \
+	trackpoint_write(_ps2dev, TP_BUTTON3_MAP, ((3 == _value) ? 255 : 0)); \
+  } while (0)								      \
+

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_value' - possible side-effects?
#115: FILE: drivers/input/mouse/trackpoint.c:158:
+#define TRACKPOINT_SET_PTS_BUTTON(_ps2dev, _value)			      \
+ do {									      \
+	trackpoint_write(_ps2dev, TP_BUTTON1_MAP, ((1 == _value) ? 255 : 0)); \
+	trackpoint_write(_ps2dev, TP_BUTTON2_MAP, ((2 == _value) ? 255 : 0)); \
+	trackpoint_write(_ps2dev, TP_BUTTON3_MAP, ((3 == _value) ? 255 : 0)); \
+  } while (0)								      \
+

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '_value' may be better as '(_value)' to avoid precedence issues
#115: FILE: drivers/input/mouse/trackpoint.c:158:
+#define TRACKPOINT_SET_PTS_BUTTON(_ps2dev, _value)			      \
+ do {									      \
+	trackpoint_write(_ps2dev, TP_BUTTON1_MAP, ((1 == _value) ? 255 : 0)); \
+	trackpoint_write(_ps2dev, TP_BUTTON2_MAP, ((2 == _value) ? 255 : 0)); \
+	trackpoint_write(_ps2dev, TP_BUTTON3_MAP, ((3 == _value) ? 255 : 0)); \
+  } while (0)								      \
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: drivers/input/mouse/trackpoint.c:159:
+ do {^I^I^I^I^I^I^I^I^I      \$

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#117: FILE: drivers/input/mouse/trackpoint.c:160:
+	trackpoint_write(_ps2dev, TP_BUTTON1_MAP, ((1 == _value) ? 255 : 0)); \

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#118: FILE: drivers/input/mouse/trackpoint.c:161:
+	trackpoint_write(_ps2dev, TP_BUTTON2_MAP, ((2 == _value) ? 255 : 0)); \

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#119: FILE: drivers/input/mouse/trackpoint.c:162:
+	trackpoint_write(_ps2dev, TP_BUTTON3_MAP, ((3 == _value) ? 255 : 0)); \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: drivers/input/mouse/trackpoint.c:163:
+  } while (0)^I^I^I^I^I^I^I^I      \$

CHECK:SPACING: No space is necessary after a cast
#129: FILE: drivers/input/mouse/trackpoint.c:172:
+	unsigned char *field = (unsigned char *) ((char *)tp +

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONSIDER_KSTRTO: strict_strtoul is obsolete, use kstrtoul instead
#134: FILE: drivers/input/mouse/trackpoint.c:177:
+	value = strict_strtoul(buf, &rest, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#139: FILE: drivers/input/mouse/trackpoint.c:182:
+	if (*field != value) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#144: FILE: drivers/input/mouse/trackpoint.c:187:
+		if (0 < value)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#153: FILE: drivers/input/mouse/trackpoint.c:196:
+
+

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#166: FILE: drivers/input/mouse/trackpoint.c:211:
TP_MASK_PTSON, 0,

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#167: FILE: drivers/input/mouse/trackpoint.c:212:
+TRACKPOINT_CUSTOM_WRITE_ATTR(press_to_select, TP_TOGGLE_PTSON,
+				   trackpoint_set_press_to_select);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#180: FILE: drivers/input/mouse/trackpoint.c:287:
+	    (0 < tp->press_to_select))

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#185: FILE: drivers/input/mouse/trackpoint.c:292:
+	if (0 < tp->press_to_select)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000104560.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 11 warnings, 11 checks, 140 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000104560.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
