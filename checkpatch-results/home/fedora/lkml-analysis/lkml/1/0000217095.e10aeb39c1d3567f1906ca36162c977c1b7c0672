WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
Adds an interface to configure the Backward Congestion Notification (BCN) feature.  In a BCN capabale network, congestion notifications from congested points out in the network can cause the end station limit the rate of a given traffic flow.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#60: FILE: drivers/net/ixgbe/ixgbe_dcb.h:112:
+/*
+ * This structure contains many values encoded as fixed-point

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#147: FILE: drivers/net/ixgbe/ixgbe_dcb_nl.c:436:
+static void ixgbe_dcbnl_getbcnrp(struct net_device *netdev, int priority,
+				  u8 *setting)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#154: FILE: drivers/net/ixgbe/ixgbe_dcb_nl.c:443:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#215: FILE: drivers/net/ixgbe/ixgbe_dcb_nl.c:504:
+static void ixgbe_dcbnl_setbcncfg(struct net_device *netdev, int enum_index,
+				 u32 setting)

WARNING:TYPO_SPELLING: 'configration' may be misspelled - perhaps 'configuration'?
#321: FILE: include/linux/dcbnl.h:50:
+ * @DCB_CMD_SBCN: get backward congestion notification configration.
                                                        ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACING: missing space after enum definition
#371: FILE: include/linux/dcbnl.h:295:
+enum dcbnl_bcn_attrs{

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct net_device *' should also have an identifier name
#414: FILE: include/net/dcbnl.h:47:
+	void (*getbcncfg)(struct net_device *, int, u32 *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#414: FILE: include/net/dcbnl.h:47:
+	void (*getbcncfg)(struct net_device *, int, u32 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32 *' should also have an identifier name
#414: FILE: include/net/dcbnl.h:47:
+	void (*getbcncfg)(struct net_device *, int, u32 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct net_device *' should also have an identifier name
#415: FILE: include/net/dcbnl.h:48:
+	void (*setbcncfg)(struct net_device *, int, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#415: FILE: include/net/dcbnl.h:48:
+	void (*setbcncfg)(struct net_device *, int, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#415: FILE: include/net/dcbnl.h:48:
+	void (*setbcncfg)(struct net_device *, int, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct net_device *' should also have an identifier name
#416: FILE: include/net/dcbnl.h:49:
+	void (*getbcnrp)(struct net_device *, int, u8 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#416: FILE: include/net/dcbnl.h:49:
+	void (*getbcnrp)(struct net_device *, int, u8 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8 *' should also have an identifier name
#416: FILE: include/net/dcbnl.h:49:
+	void (*getbcnrp)(struct net_device *, int, u8 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct net_device *' should also have an identifier name
#417: FILE: include/net/dcbnl.h:50:
+	void (*setbcnrp)(struct net_device *, int, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#417: FILE: include/net/dcbnl.h:50:
+	void (*setbcnrp)(struct net_device *, int, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#417: FILE: include/net/dcbnl.h:50:
+	void (*setbcnrp)(struct net_device *, int, u8);

ERROR:CODE_INDENT: code indent should use tabs where possible
#487: FILE: net/dcb/dcbnl.c:879:
+                            u32 pid, u32 seq, u16 flags)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: net/dcb/dcbnl.c:879:
+                            u32 pid, u32 seq, u16 flags)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#505: FILE: net/dcb/dcbnl.c:897:
+^I                       tb[DCB_ATTR_BCN], dcbnl_bcn_nest);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#532: FILE: net/dcb/dcbnl.c:924:
+^I^I                            &value_byte);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#543: FILE: net/dcb/dcbnl.c:935:
+^I^I                             &value_integer);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#570: FILE: net/dcb/dcbnl.c:962:
+                            u32 pid, u32 seq, u16 flags)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#570: FILE: net/dcb/dcbnl.c:962:
+                            u32 pid, u32 seq, u16 flags)$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#579: FILE: net/dcb/dcbnl.c:971:
+	if (!tb[DCB_ATTR_BCN] || !netdev->dcbnl_ops->setbcncfg
+	    || !netdev->dcbnl_ops->setbcnrp)

ERROR:CODE_INDENT: code indent should use tabs where possible
#583: FILE: net/dcb/dcbnl.c:975:
+^I                       tb[DCB_ATTR_BCN],$

ERROR:CODE_INDENT: code indent should use tabs where possible
#584: FILE: net/dcb/dcbnl.c:976:
+^I                       dcbnl_pfc_up_nest);$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data[i]"
#589: FILE: net/dcb/dcbnl.c:981:
+		if (data[i] == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data[i]"
#597: FILE: net/dcb/dcbnl.c:989:
+		if (data[i] == NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#601: FILE: net/dcb/dcbnl.c:993:
+^I                                     i, value_int);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#605: FILE: net/dcb/dcbnl.c:997:
+^I                  pid, seq, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#619: FILE: net/dcb/dcbnl.c:1052:
+^I^I                       nlh->nlmsg_flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#630: FILE: net/dcb/dcbnl.c:1097:
+^I^I                       nlh->nlmsg_flags);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000217095.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 11 errors, 18 warnings, 6 checks, 546 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000217095.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
