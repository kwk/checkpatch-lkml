WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#64: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#69: FILE: drivers/staging/altpciechdma/Kconfig:1:
+config ALTERA_PCIE_CHDMA
+	tristate "Altera PCI Express Chaining DMA driver"
+	depends on PCI
+	default N
+	---help---
+	  A reference driver that exercises the Chaining DMA logic reference
+	  design generated along the Altera FPGA PCI Express soft or hard core,
+	  only if instantiated using the MegaWizard, not the SOPC builder, of
+	  Quartus 8.1.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#114: FILE: drivers/staging/altpciechdma/altpciechdma.c:1:
+/**

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#131: FILE: drivers/staging/altpciechdma/altpciechdma.c:18:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#132: FILE: drivers/staging/altpciechdma/altpciechdma.c:19:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

WARNING:TYPO_SPELLING: 'reproducable' may be misspelled - perhaps 'reproducible'?
#149: FILE: drivers/staging/altpciechdma/altpciechdma.c:36:
+ * loopback test had reproducable compare errors. I assume a change
                      ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#171: FILE: drivers/staging/altpciechdma/altpciechdma.c:58:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'mimicks' may be misspelled - perhaps 'mimics'?
#184: FILE: drivers/staging/altpciechdma/altpciechdma.c:71:
+/** driver name, mimicks Altera naming of the reference design */
                  ^^^^^^^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#211: FILE: drivers/staging/altpciechdma/altpciechdma.c:98:
+static const unsigned long bar_min_len[APE_BAR_NUM] =
+	{ 32768, 0, 256, 0, 32768, 0 };

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#246: FILE: drivers/staging/altpciechdma/altpciechdma.c:133:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#273: FILE: drivers/staging/altpciechdma/altpciechdma.c:160:
+} __attribute__ ((packed));

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#296: FILE: drivers/staging/altpciechdma/altpciechdma.c:183:
+	/* the actual array of descriptors
+    * 0x10-0x1f, 0x20-0x2f, ... 0xff0-0xfff (255 entries)

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#299: FILE: drivers/staging/altpciechdma/altpciechdma.c:186:
+} __attribute__ ((packed));

WARNING:TYPO_SPELLING: 'endianess' may be misspelled - perhaps 'endianness'?
#319: FILE: drivers/staging/altpciechdma/altpciechdma.c:206:
+	 * CPU-native endianess
 	              ^^^^^^^^^

WARNING:TYPO_SPELLING: 'succesfully' may be misspelled - perhaps 'successfully'?
#330: FILE: drivers/staging/altpciechdma/altpciechdma.c:217:
+	/* irq line succesfully requested by this driver, -1 otherwise */
 	            ^^^^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#373: FILE: drivers/staging/altpciechdma/altpciechdma.c:260:
+	struct ape_dev *ape = (struct ape_dev *)dev_id;
+	if (!ape)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#379: FILE: drivers/staging/altpciechdma/altpciechdma.c:266:
+static int __devinit scan_bars(struct ape_dev *ape, struct pci_dev *dev)

WARNING:LINE_SPACING: Missing a blank line after declarations
#382: FILE: drivers/staging/altpciechdma/altpciechdma.c:269:
+	int i;
+	for (i = 0; i < APE_BAR_NUM; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#384: FILE: drivers/staging/altpciechdma/altpciechdma.c:271:
+		unsigned long bar_start = pci_resource_start(dev, i);
+		if (bar_start) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#387: FILE: drivers/staging/altpciechdma/altpciechdma.c:274:
+			unsigned long bar_flags = pci_resource_flags(dev, i);
+			printk(KERN_DEBUG "BAR%d 0x%08lx-0x%08lx flags 0x%08lx\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#387: FILE: drivers/staging/altpciechdma/altpciechdma.c:274:
+			printk(KERN_DEBUG "BAR%d 0x%08lx-0x%08lx flags 0x%08lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#388: FILE: drivers/staging/altpciechdma/altpciechdma.c:275:
+			printk(KERN_DEBUG "BAR%d 0x%08lx-0x%08lx flags 0x%08lx\n",
+			  i, bar_start, bar_end, bar_flags);

WARNING:LINE_SPACING: Missing a blank line after declarations
#400: FILE: drivers/staging/altpciechdma/altpciechdma.c:287:
+	int i;
+	for (i = 0; i < APE_BAR_NUM; i++) {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#415: FILE: drivers/staging/altpciechdma/altpciechdma.c:302:
+static int __devinit map_bars(struct ape_dev *ape, struct pci_dev *dev)

WARNING:LINE_SPACING: Missing a blank line after declarations
#424: FILE: drivers/staging/altpciechdma/altpciechdma.c:311:
+		unsigned long bar_length = bar_end - bar_start + 1;
+		ape->bar[i] = NULL;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 12)
#429: FILE: drivers/staging/altpciechdma/altpciechdma.c:316:
+		if (!bar_start || !bar_end) {
+            printk(KERN_DEBUG "BAR #%d is not present?!\n", i);

ERROR:CODE_INDENT: code indent should use tabs where possible
#430: FILE: drivers/staging/altpciechdma/altpciechdma.c:317:
+            printk(KERN_DEBUG "BAR #%d is not present?!\n", i);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#430: FILE: drivers/staging/altpciechdma/altpciechdma.c:317:
+            printk(KERN_DEBUG "BAR #%d is not present?!\n", i);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#430: FILE: drivers/staging/altpciechdma/altpciechdma.c:317:
+            printk(KERN_DEBUG "BAR #%d is not present?!\n", i);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 12)
#436: FILE: drivers/staging/altpciechdma/altpciechdma.c:323:
+		if (bar_length < bar_min_len[i]) {
+            printk(KERN_DEBUG "BAR #%d length = %lu bytes but driver "

ERROR:CODE_INDENT: code indent should use tabs where possible
#437: FILE: drivers/staging/altpciechdma/altpciechdma.c:324:
+            printk(KERN_DEBUG "BAR #%d length = %lu bytes but driver "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#437: FILE: drivers/staging/altpciechdma/altpciechdma.c:324:
+            printk(KERN_DEBUG "BAR #%d length = %lu bytes but driver "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#437: FILE: drivers/staging/altpciechdma/altpciechdma.c:324:
+            printk(KERN_DEBUG "BAR #%d length = %lu bytes but driver "

ERROR:CODE_INDENT: code indent should use tabs where possible
#438: FILE: drivers/staging/altpciechdma/altpciechdma.c:325:
+            "requires at least %lu bytes\n", i, bar_length, bar_min_len[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: drivers/staging/altpciechdma/altpciechdma.c:325:
+            "requires at least %lu bytes\n", i, bar_length, bar_min_len[i]);$

WARNING:SPLIT_STRING: quoted string split across lines
#438: FILE: drivers/staging/altpciechdma/altpciechdma.c:325:
+            printk(KERN_DEBUG "BAR #%d length = %lu bytes but driver "
+            "requires at least %lu bytes\n", i, bar_length, bar_min_len[i]);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#443: FILE: drivers/staging/altpciechdma/altpciechdma.c:330:
+		 * address space */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#446: FILE: drivers/staging/altpciechdma/altpciechdma.c:333:
+			printk(KERN_DEBUG "Could not map BAR #%d.\n", i);

ERROR:CODE_INDENT: code indent should use tabs where possible
#450: FILE: drivers/staging/altpciechdma/altpciechdma.c:337:
+        printk(KERN_DEBUG "BAR[%d] mapped at 0x%p with length %lu(/%lu).\n", i,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: drivers/staging/altpciechdma/altpciechdma.c:337:
+        printk(KERN_DEBUG "BAR[%d] mapped at 0x%p with length %lu(/%lu).\n", i,$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#450: FILE: drivers/staging/altpciechdma/altpciechdma.c:337:
+        printk(KERN_DEBUG "BAR[%d] mapped at 0x%p with length %lu(/%lu).\n", i,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#451: FILE: drivers/staging/altpciechdma/altpciechdma.c:338:
+        printk(KERN_DEBUG "BAR[%d] mapped at 0x%p with length %lu(/%lu).\n", i,
+			ape->bar[i], bar_min_len[i], bar_length);

WARNING:TYPO_SPELLING: 'succesfully' may be misspelled - perhaps 'successfully'?
#453: FILE: drivers/staging/altpciechdma/altpciechdma.c:340:
+	/* succesfully mapped all required BAR regions */
 	   ^^^^^^^^^^^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#463: FILE: drivers/staging/altpciechdma/altpciechdma.c:350:
+#if 0 /* not yet implemented fully FIXME add opcode */

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#464: FILE: drivers/staging/altpciechdma/altpciechdma.c:351:
+static void __devinit rcslave_test(struct ape_dev *ape, struct pci_dev *dev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#476: FILE: drivers/staging/altpciechdma/altpciechdma.c:363:
+		printk(KERN_DEBUG "Writing 0x%08x to 0x%p.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#477: FILE: drivers/staging/altpciechdma/altpciechdma.c:364:
+		printk(KERN_DEBUG "Writing 0x%08x to 0x%p.\n",
+			(u32)value, (void *)rcslave_mem + i);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#486: FILE: drivers/staging/altpciechdma/altpciechdma.c:373:
+			printk(KERN_DEBUG "Wrote 0x%08x to 0x%p, but read back 0x%08x.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#487: FILE: drivers/staging/altpciechdma/altpciechdma.c:374:
+			printk(KERN_DEBUG "Wrote 0x%08x to 0x%p, but read back 0x%08x.\n",
+				(u32)value, (void *)rcslave_mem + i, (u32)result);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'addr' may be better as '(addr)' to avoid precedence issues
#496: FILE: drivers/staging/altpciechdma/altpciechdma.c:383:
+#define pci_dma_h(addr) ((addr >> 16) >> 16)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'addr' may be better as '(addr)' to avoid precedence issues
#498: FILE: drivers/staging/altpciechdma/altpciechdma.c:385:
+#define pci_dma_l(addr) (addr & 0xffffffffUL)

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#507: FILE: drivers/staging/altpciechdma/altpciechdma.c:394:
+static inline void ape_chdma_desc_set(struct ape_chdma_desc *desc, dma_addr_t addr, u32 ep_addr, int len)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#509: FILE: drivers/staging/altpciechdma/altpciechdma.c:396:
+  BUG_ON(len & 3);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#509: FILE: drivers/staging/altpciechdma/altpciechdma.c:396:
+  BUG_ON(len & 3);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#529: FILE: drivers/staging/altpciechdma/altpciechdma.c:416:
+static int ape_sg_to_chdma_table(struct scatterlist *sgl, int nents, int first, struct ape_chdma_desc *desc, u32 ep_addr)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#544: FILE: drivers/staging/altpciechdma/altpciechdma.c:431:
+		printk(KERN_DEBUG "%04d: addr=0x%08x length=0x%08x\n", i, addr, len);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#548: FILE: drivers/staging/altpciechdma/altpciechdma.c:435:
+			printk(KERN_DEBUG "%4d: cont_addr=0x%08x cont_len=0x%08x\n", j, cont_addr, cont_len);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#548: FILE: drivers/staging/altpciechdma/altpciechdma.c:435:
+			printk(KERN_DEBUG "%4d: cont_addr=0x%08x cont_len=0x%08x\n", j, cont_addr, cont_len);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#564: FILE: drivers/staging/altpciechdma/altpciechdma.c:451:
+	printk(KERN_DEBUG "%04d: addr=0x%08x length=0x%08x\n", i, addr, len);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#565: FILE: drivers/staging/altpciechdma/altpciechdma.c:452:
+	printk(KERN_DEBUG "%4d: cont_addr=0x%08x length=0x%08x\n", j, cont_addr, cont_len);

WARNING:LINE_SPACING: Missing a blank line after declarations
#576: FILE: drivers/staging/altpciechdma/altpciechdma.c:463:
+	int i;
+	for (i = 0; i < len / 4; i++) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#580: FILE: drivers/staging/altpciechdma/altpciechdma.c:467:
+				printk(KERN_DEBUG "[%p] = 0x%08x    [%p] = 0x%08x\n", p, *p, q, *q);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 16)
#584: FILE: drivers/staging/altpciechdma/altpciechdma.c:471:
+			if (fail < 10) {
+                printk(KERN_DEBUG "[%p] = 0x%08x != [%p] = 0x%08x ?!\n", p, *p, q, *q);

ERROR:CODE_INDENT: code indent should use tabs where possible
#585: FILE: drivers/staging/altpciechdma/altpciechdma.c:472:
+                printk(KERN_DEBUG "[%p] = 0x%08x != [%p] = 0x%08x ?!\n", p, *p, q, *q);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#585: FILE: drivers/staging/altpciechdma/altpciechdma.c:472:
+                printk(KERN_DEBUG "[%p] = 0x%08x != [%p] = 0x%08x ?!\n", p, *p, q, *q);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#585: FILE: drivers/staging/altpciechdma/altpciechdma.c:472:
+                printk(KERN_DEBUG "[%p] = 0x%08x != [%p] = 0x%08x ?!\n", p, *p, q, *q);

ERROR:CODE_INDENT: code indent should use tabs where possible
#586: FILE: drivers/staging/altpciechdma/altpciechdma.c:473:
+            /* but stop after a while */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#587: FILE: drivers/staging/altpciechdma/altpciechdma.c:474:
+            } else if (fail == 10) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#587: FILE: drivers/staging/altpciechdma/altpciechdma.c:474:
+            } else if (fail == 10) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#588: FILE: drivers/staging/altpciechdma/altpciechdma.c:475:
+                printk(KERN_DEBUG "---more errors follow! not printed---\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#588: FILE: drivers/staging/altpciechdma/altpciechdma.c:475:
+                printk(KERN_DEBUG "---more errors follow! not printed---\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#588: FILE: drivers/staging/altpciechdma/altpciechdma.c:475:
+                printk(KERN_DEBUG "---more errors follow! not printed---\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#589: FILE: drivers/staging/altpciechdma/altpciechdma.c:476:
+^I^I  ^I} else {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#589: FILE: drivers/staging/altpciechdma/altpciechdma.c:476:
+^I^I  ^I} else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 16)
#589: FILE: drivers/staging/altpciechdma/altpciechdma.c:476:
+		  	} else {
[...]
+                break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#591: FILE: drivers/staging/altpciechdma/altpciechdma.c:478:
+                break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#591: FILE: drivers/staging/altpciechdma/altpciechdma.c:478:
+                break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#592: FILE: drivers/staging/altpciechdma/altpciechdma.c:479:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#592: FILE: drivers/staging/altpciechdma/altpciechdma.c:479:
+            }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#610: FILE: drivers/staging/altpciechdma/altpciechdma.c:497:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#620: FILE: drivers/staging/altpciechdma/altpciechdma.c:507:
+static int __devinit dma_test(struct ape_dev *ape, struct pci_dev *dev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#637: FILE: drivers/staging/altpciechdma/altpciechdma.c:524:
+	printk(KERN_DEBUG "bar_tests(), PAGE_SIZE = 0x%0x\n", (int)PAGE_SIZE);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#638: FILE: drivers/staging/altpciechdma/altpciechdma.c:525:
+	printk(KERN_DEBUG "write_header = 0x%p.\n", write_header);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#639: FILE: drivers/staging/altpciechdma/altpciechdma.c:526:
+	printk(KERN_DEBUG "read_header = 0x%p.\n", read_header);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#640: FILE: drivers/staging/altpciechdma/altpciechdma.c:527:
+	printk(KERN_DEBUG "&write_header->w3 = 0x%p\n", &write_header->w3);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#641: FILE: drivers/staging/altpciechdma/altpciechdma.c:528:
+	printk(KERN_DEBUG "&read_header->w3 = 0x%p\n", &read_header->w3);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#642: FILE: drivers/staging/altpciechdma/altpciechdma.c:529:
+	printk(KERN_DEBUG "ape->table_virt = 0x%p.\n", ape->table_virt);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#644: FILE: drivers/staging/altpciechdma/altpciechdma.c:531:
+	if (!write_header || !read_header || !ape->table_virt)
+        goto fail;

ERROR:CODE_INDENT: code indent should use tabs where possible
#645: FILE: drivers/staging/altpciechdma/altpciechdma.c:532:
+        goto fail;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#645: FILE: drivers/staging/altpciechdma/altpciechdma.c:532:
+        goto fail;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#651: FILE: drivers/staging/altpciechdma/altpciechdma.c:538:
+		printk(KERN_DEBUG "Could not allocate coherent DMA buffer.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#654: FILE: drivers/staging/altpciechdma/altpciechdma.c:541:
+	printk(KERN_DEBUG "Allocated cache-coherent DMA buffer (virtual address = 0x%016llx, bus address = 0x%016llx).\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#655: FILE: drivers/staging/altpciechdma/altpciechdma.c:542:
+	printk(KERN_DEBUG "Allocated cache-coherent DMA buffer (virtual address = 0x%016llx, bus address = 0x%016llx).\n",
+		(u64)buffer_virt, (u64)buffer_bus);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#659: FILE: drivers/staging/altpciechdma/altpciechdma.c:546:
+#if 0

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#664: FILE: drivers/staging/altpciechdma/altpciechdma.c:551:
+#if 0

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#665: FILE: drivers/staging/altpciechdma/altpciechdma.c:552:
+  compare((u32 *)buffer_virt, (u32 *)(buffer_virt + 2 * PAGE_SIZE), 8192);$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#668: FILE: drivers/staging/altpciechdma/altpciechdma.c:555:
+#if 0

WARNING:IF_1: Consider removing the #if 1 and its #endif
#681: FILE: drivers/staging/altpciechdma/altpciechdma.c:568:
+#if 1

WARNING:BRACES: braces {} are not necessary for single statement blocks
#682: FILE: drivers/staging/altpciechdma/altpciechdma.c:569:
+	for (i = 0; i < 255; i++) {
+		ape_chdma_desc_set(&ape->table_virt->desc[i], buffer_bus, 4096, 2 * PAGE_SIZE);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#688: FILE: drivers/staging/altpciechdma/altpciechdma.c:575:
+#if 0

WARNING:IF_1: Consider removing the #if 1 and its #endif
#695: FILE: drivers/staging/altpciechdma/altpciechdma.c:582:
+#if 1

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#700: FILE: drivers/staging/altpciechdma/altpciechdma.c:587:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#702: FILE: drivers/staging/altpciechdma/altpciechdma.c:589:
+	printk(KERN_DEBUG "Descriptor Table (Read, in Root Complex Memory, # = %d)\n", n + 1);

WARNING:LINE_SPACING: Missing a blank line after declarations
#705: FILE: drivers/staging/altpciechdma/altpciechdma.c:592:
+		u32 *p = (u32 *)ape->table_virt;
+		p += i;

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#706: FILE: drivers/staging/altpciechdma/altpciechdma.c:593:
+		printk(KERN_DEBUG "0x%08x/0x%02x: 0x%08x (LEN=0x%x)\n", (u32)p, (u32)p & 15, *p, 4 * le32_to_cpu(*p));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#706: FILE: drivers/staging/altpciechdma/altpciechdma.c:593:
+		printk(KERN_DEBUG "0x%08x/0x%02x: 0x%08x (LEN=0x%x)\n", (u32)p, (u32)p & 15, *p, 4 * le32_to_cpu(*p));

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#708: FILE: drivers/staging/altpciechdma/altpciechdma.c:595:
+		printk(KERN_DEBUG "0x%08x/0x%02x: 0x%08x (EPA=0x%x)\n", (u32)p, (u32)p & 15, *p, le32_to_cpu(*p));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#708: FILE: drivers/staging/altpciechdma/altpciechdma.c:595:
+		printk(KERN_DEBUG "0x%08x/0x%02x: 0x%08x (EPA=0x%x)\n", (u32)p, (u32)p & 15, *p, le32_to_cpu(*p));

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#710: FILE: drivers/staging/altpciechdma/altpciechdma.c:597:
+		printk(KERN_DEBUG "0x%08x/0x%02x: 0x%08x (RCH=0x%x)\n", (u32)p, (u32)p & 15, *p, le32_to_cpu(*p));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#710: FILE: drivers/staging/altpciechdma/altpciechdma.c:597:
+		printk(KERN_DEBUG "0x%08x/0x%02x: 0x%08x (RCH=0x%x)\n", (u32)p, (u32)p & 15, *p, le32_to_cpu(*p));

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#712: FILE: drivers/staging/altpciechdma/altpciechdma.c:599:
+		printk(KERN_DEBUG "0x%08x/0x%02x: 0x%08x (RCL=0x%x)\n", (u32)p, (u32)p & 15, *p, le32_to_cpu(*p));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#712: FILE: drivers/staging/altpciechdma/altpciechdma.c:599:
+		printk(KERN_DEBUG "0x%08x/0x%02x: 0x%08x (RCL=0x%x)\n", (u32)p, (u32)p & 15, *p, le32_to_cpu(*p));

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#718: FILE: drivers/staging/altpciechdma/altpciechdma.c:605:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#722: FILE: drivers/staging/altpciechdma/altpciechdma.c:609:
+	printk(KERN_DEBUG "writing 0x%08x to 0x%p\n", w, (void *)&read_header->w0);

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#726: FILE: drivers/staging/altpciechdma/altpciechdma.c:613:
+	printk(KERN_DEBUG "writing 0x%08x to 0x%p\n", (u32)((ape->table_bus >> 16) >> 16), (void *)&read_header->bdt_addr_h);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#726: FILE: drivers/staging/altpciechdma/altpciechdma.c:613:
+	printk(KERN_DEBUG "writing 0x%08x to 0x%p\n", (u32)((ape->table_bus >> 16) >> 16), (void *)&read_header->bdt_addr_h);

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#730: FILE: drivers/staging/altpciechdma/altpciechdma.c:617:
+	printk(KERN_DEBUG "writing 0x%08x to 0x%p\n", (u32)(ape->table_bus & 0xffffffffUL), (void *)&read_header->bdt_addr_l);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#730: FILE: drivers/staging/altpciechdma/altpciechdma.c:617:
+	printk(KERN_DEBUG "writing 0x%08x to 0x%p\n", (u32)(ape->table_bus & 0xffffffffUL), (void *)&read_header->bdt_addr_l);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#735: FILE: drivers/staging/altpciechdma/altpciechdma.c:622:
+	printk(KERN_DEBUG "Flush posted writes\n");

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#737: FILE: drivers/staging/altpciechdma/altpciechdma.c:624:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#744: FILE: drivers/staging/altpciechdma/altpciechdma.c:631:
+	printk(KERN_DEBUG "\nStart DMA read\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#745: FILE: drivers/staging/altpciechdma/altpciechdma.c:632:
+	printk(KERN_DEBUG "writing 0x%08x to 0x%p\n", (u32)n, (void *)&read_header->w3);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#747: FILE: drivers/staging/altpciechdma/altpciechdma.c:634:
+	printk(KERN_DEBUG "EPLAST = %lu\n", le32_to_cpu(*(u32 *)&ape->table_virt->w3) & 0xffffUL);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#753: FILE: drivers/staging/altpciechdma/altpciechdma.c:640:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#756: FILE: drivers/staging/altpciechdma/altpciechdma.c:643:
+	printk(KERN_DEBUG "POLL FOR READ:\n");

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#759: FILE: drivers/staging/altpciechdma/altpciechdma.c:646:
+		volatile u32 *p = &ape->table_virt->w3;

WARNING:LINE_SPACING: Missing a blank line after declarations
#761: FILE: drivers/staging/altpciechdma/altpciechdma.c:648:
+		u32 eplast = le32_to_cpu(*p) & 0xffffUL;
+		printk(KERN_DEBUG "EPLAST = %u, n = %d\n", eplast, n);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#761: FILE: drivers/staging/altpciechdma/altpciechdma.c:648:
+		printk(KERN_DEBUG "EPLAST = %u, n = %d\n", eplast, n);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#763: FILE: drivers/staging/altpciechdma/altpciechdma.c:650:
+			printk(KERN_DEBUG "DONE\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#764: FILE: drivers/staging/altpciechdma/altpciechdma.c:651:
+            /* print IRQ count before the transfer */$

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#765: FILE: drivers/staging/altpciechdma/altpciechdma.c:652:
+			printk(KERN_DEBUG "#IRQs during transfer: %d\n", ape->irq_count - irq_count);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#765: FILE: drivers/staging/altpciechdma/altpciechdma.c:652:
+			printk(KERN_DEBUG "#IRQs during transfer: %d\n", ape->irq_count - irq_count);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#768: FILE: drivers/staging/altpciechdma/altpciechdma.c:655:
+		udelay(100);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:IF_1: Consider removing the #if 1 and its #endif
#777: FILE: drivers/staging/altpciechdma/altpciechdma.c:664:
+#if 1

WARNING:BRACES: braces {} are not necessary for single statement blocks
#778: FILE: drivers/staging/altpciechdma/altpciechdma.c:665:
+	for (i = 0; i < 255; i++) {
+		ape_chdma_desc_set(&ape->table_virt->desc[i], buffer_bus + 8192, 4096, 2 * PAGE_SIZE);
+	}

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#779: FILE: drivers/staging/altpciechdma/altpciechdma.c:666:
+		ape_chdma_desc_set(&ape->table_virt->desc[i], buffer_bus + 8192, 4096, 2 * PAGE_SIZE);

WARNING:IF_1: Consider removing the #if 1 and its #endif
#784: FILE: drivers/staging/altpciechdma/altpciechdma.c:671:
+#if 1 /* test variable, make a module option later */

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#788: FILE: drivers/staging/altpciechdma/altpciechdma.c:675:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#790: FILE: drivers/staging/altpciechdma/altpciechdma.c:677:
+	printk(KERN_DEBUG "Descriptor Table (Write, in Root Complex Memory, # = %d)\n", n + 1);

WARNING:LINE_SPACING: Missing a blank line after declarations
#793: FILE: drivers/staging/altpciechdma/altpciechdma.c:680:
+		u32 *p = (u32 *)ape->table_virt;
+		p += i;

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#794: FILE: drivers/staging/altpciechdma/altpciechdma.c:681:
+		printk(KERN_DEBUG "0x%08x/0x%02x: 0x%08x (LEN=0x%x)\n", (u32)p, (u32)p & 15, *p, 4 * le32_to_cpu(*p));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#794: FILE: drivers/staging/altpciechdma/altpciechdma.c:681:
+		printk(KERN_DEBUG "0x%08x/0x%02x: 0x%08x (LEN=0x%x)\n", (u32)p, (u32)p & 15, *p, 4 * le32_to_cpu(*p));

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#796: FILE: drivers/staging/altpciechdma/altpciechdma.c:683:
+		printk(KERN_DEBUG "0x%08x/0x%02x: 0x%08x (EPA=0x%x)\n", (u32)p, (u32)p & 15, *p, le32_to_cpu(*p));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#796: FILE: drivers/staging/altpciechdma/altpciechdma.c:683:
+		printk(KERN_DEBUG "0x%08x/0x%02x: 0x%08x (EPA=0x%x)\n", (u32)p, (u32)p & 15, *p, le32_to_cpu(*p));

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#798: FILE: drivers/staging/altpciechdma/altpciechdma.c:685:
+		printk(KERN_DEBUG "0x%08x/0x%02x: 0x%08x (RCH=0x%x)\n", (u32)p, (u32)p & 15, *p, le32_to_cpu(*p));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#798: FILE: drivers/staging/altpciechdma/altpciechdma.c:685:
+		printk(KERN_DEBUG "0x%08x/0x%02x: 0x%08x (RCH=0x%x)\n", (u32)p, (u32)p & 15, *p, le32_to_cpu(*p));

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#800: FILE: drivers/staging/altpciechdma/altpciechdma.c:687:
+		printk(KERN_DEBUG "0x%08x/0x%02x: 0x%08x (RCL=0x%x)\n", (u32)p, (u32)p & 15, *p, le32_to_cpu(*p));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#800: FILE: drivers/staging/altpciechdma/altpciechdma.c:687:
+		printk(KERN_DEBUG "0x%08x/0x%02x: 0x%08x (RCL=0x%x)\n", (u32)p, (u32)p & 15, *p, le32_to_cpu(*p));

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#808: FILE: drivers/staging/altpciechdma/altpciechdma.c:695:
+#if 0 // test variable, make a module option later

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#821: FILE: drivers/staging/altpciechdma/altpciechdma.c:708:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#826: FILE: drivers/staging/altpciechdma/altpciechdma.c:713:
+	printk(KERN_DEBUG "\nStart DMA write\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#834: FILE: drivers/staging/altpciechdma/altpciechdma.c:721:
+	printk(KERN_DEBUG "POLL FOR WRITE:\n");

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#837: FILE: drivers/staging/altpciechdma/altpciechdma.c:724:
+		volatile u32 *p = &ape->table_virt->w3;

WARNING:LINE_SPACING: Missing a blank line after declarations
#839: FILE: drivers/staging/altpciechdma/altpciechdma.c:726:
+		u32 eplast = le32_to_cpu(*p) & 0xffffUL;
+		printk(KERN_DEBUG "EPLAST = %u, n = %d\n", eplast, n);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#839: FILE: drivers/staging/altpciechdma/altpciechdma.c:726:
+		printk(KERN_DEBUG "EPLAST = %u, n = %d\n", eplast, n);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#841: FILE: drivers/staging/altpciechdma/altpciechdma.c:728:
+			printk(KERN_DEBUG "DONE\n");

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#843: FILE: drivers/staging/altpciechdma/altpciechdma.c:730:
+			printk(KERN_DEBUG "#IRQs during transfer: %d\n", ape->irq_count - irq_count);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#843: FILE: drivers/staging/altpciechdma/altpciechdma.c:730:
+			printk(KERN_DEBUG "#IRQs during transfer: %d\n", ape->irq_count - irq_count);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#846: FILE: drivers/staging/altpciechdma/altpciechdma.c:733:
+		udelay(100);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#857: FILE: drivers/staging/altpciechdma/altpciechdma.c:744:
+#if 0^I$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#857: FILE: drivers/staging/altpciechdma/altpciechdma.c:744:
+#if 0	

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#862: FILE: drivers/staging/altpciechdma/altpciechdma.c:749:
+	printk(KERN_DEBUG "DMA loop back test %s.\n", result ? "FAILED" : "PASSED");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#866: FILE: drivers/staging/altpciechdma/altpciechdma.c:753:
+	printk(KERN_DEBUG "bar_tests() end, result %d\n", result);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#884: FILE: drivers/staging/altpciechdma/altpciechdma.c:771:
+static int __devinit probe(struct pci_dev *dev, const struct pci_device_id *id)

WARNING:LINE_SPACING: Missing a blank line after declarations
#889: FILE: drivers/staging/altpciechdma/altpciechdma.c:776:
+	u8 irq_pin, irq_line;
+	printk(KERN_DEBUG "probe(dev = 0x%p, pciid = 0x%p)\n", dev, id);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#889: FILE: drivers/staging/altpciechdma/altpciechdma.c:776:
+	printk(KERN_DEBUG "probe(dev = 0x%p, pciid = 0x%p)\n", dev, id);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'probe', this function's name, in a string
#889: FILE: drivers/staging/altpciechdma/altpciechdma.c:776:
+	printk(KERN_DEBUG "probe(dev = 0x%p, pciid = 0x%p)\n", dev, id);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ape)...) over kzalloc(sizeof(struct ape_dev)...)
#892: FILE: drivers/staging/altpciechdma/altpciechdma.c:779:
+	ape = kzalloc(sizeof(struct ape_dev), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#894: FILE: drivers/staging/altpciechdma/altpciechdma.c:781:
+		printk(KERN_DEBUG "Could not kzalloc()ate memory.\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#894: FILE: drivers/staging/altpciechdma/altpciechdma.c:781:
+	if (!ape) {
+		printk(KERN_DEBUG "Could not kzalloc()ate memory.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#899: FILE: drivers/staging/altpciechdma/altpciechdma.c:786:
+	printk(KERN_DEBUG "probe() ape = 0x%p\n", ape);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'probe', this function's name, in a string
#899: FILE: drivers/staging/altpciechdma/altpciechdma.c:786:
+	printk(KERN_DEBUG "probe() ape = 0x%p\n", ape);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#901: FILE: drivers/staging/altpciechdma/altpciechdma.c:788:
+	printk(KERN_DEBUG "sizeof(struct ape_chdma_table) = %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#902: FILE: drivers/staging/altpciechdma/altpciechdma.c:789:
+	printk(KERN_DEBUG "sizeof(struct ape_chdma_table) = %d.\n",
+		(int)sizeof(struct ape_chdma_table));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#904: FILE: drivers/staging/altpciechdma/altpciechdma.c:791:
+	BUG_ON(sizeof(struct ape_chdma_table) > APE_CHDMA_TABLE_SIZE);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#912: FILE: drivers/staging/altpciechdma/altpciechdma.c:799:
+		printk(KERN_DEBUG "Could not dma_alloc()ate_coherent memory.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#916: FILE: drivers/staging/altpciechdma/altpciechdma.c:803:
+	printk(KERN_DEBUG "table_virt = 0x%16llx, table_bus = 0x%16llx.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#917: FILE: drivers/staging/altpciechdma/altpciechdma.c:804:
+	printk(KERN_DEBUG "table_virt = 0x%16llx, table_bus = 0x%16llx.\n",
+		(u64)ape->table_virt, (u64)ape->table_bus);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#922: FILE: drivers/staging/altpciechdma/altpciechdma.c:809:
+		printk(KERN_DEBUG "pci_enable_device() failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#933: FILE: drivers/staging/altpciechdma/altpciechdma.c:820:
+		printk(KERN_DEBUG "Could not enable MSI interrupting.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#937: FILE: drivers/staging/altpciechdma/altpciechdma.c:824:
+		printk(KERN_DEBUG "Enabled MSI interrupting.\n");

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#942: FILE: drivers/staging/altpciechdma/altpciechdma.c:829:
+#if 0 /* example */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#944: FILE: drivers/staging/altpciechdma/altpciechdma.c:831:
+    if (ape->revision == 0x42) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 16)
#944: FILE: drivers/staging/altpciechdma/altpciechdma.c:831:
+    if (ape->revision == 0x42) {
+		printk(KERN_DEBUG "Revision 0x42 is not supported by this driver.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#945: FILE: drivers/staging/altpciechdma/altpciechdma.c:832:
+		printk(KERN_DEBUG "Revision 0x42 is not supported by this driver.\n");

WARNING:IF_1: Consider removing the #if 1 and its #endif
#961: FILE: drivers/staging/altpciechdma/altpciechdma.c:848:
+#if 1 // @todo For now, disable 64-bit, because I do not understand the implications (DAC!)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#967: FILE: drivers/staging/altpciechdma/altpciechdma.c:854:
+		printk(KERN_DEBUG "Using a 64-bit DMA mask.\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#968: FILE: drivers/staging/altpciechdma/altpciechdma.c:855:
+	} else
[...]
+	if (!pci_set_dma_mask(dev, DMA_32BIT_MASK)) {

CHECK:BRACES: Unbalanced braces around else statement
#968: FILE: drivers/staging/altpciechdma/altpciechdma.c:855:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#971: FILE: drivers/staging/altpciechdma/altpciechdma.c:858:
+		printk(KERN_DEBUG "Could not set 64-bit DMA mask.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#974: FILE: drivers/staging/altpciechdma/altpciechdma.c:861:
+		printk(KERN_DEBUG "Using a 32-bit DMA mask.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#976: FILE: drivers/staging/altpciechdma/altpciechdma.c:863:
+		printk(KERN_DEBUG "No suitable DMA possible.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#986: FILE: drivers/staging/altpciechdma/altpciechdma.c:873:
+	printk(KERN_DEBUG "IRQ pin #%d (0=none, 1=INTA#...4=INTD#).\n", irq_pin);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#992: FILE: drivers/staging/altpciechdma/altpciechdma.c:879:
+		printk(KERN_DEBUG "Could not query PCI_INTERRUPT_LINE, error %d\n", rc);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#995: FILE: drivers/staging/altpciechdma/altpciechdma.c:882:
+	printk(KERN_DEBUG "IRQ line #%d.\n", irq_line);

WARNING:IF_1: Consider removing the #if 1 and its #endif
#996: FILE: drivers/staging/altpciechdma/altpciechdma.c:883:
+#if 1

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1001: FILE: drivers/staging/altpciechdma/altpciechdma.c:888:
+		printk(KERN_DEBUG "Could not request IRQ #%d, error %d\n", irq_line, rc);

WARNING:TYPO_SPELLING: 'Succesfully' may be misspelled - perhaps 'Successfully'?
#1007: FILE: drivers/staging/altpciechdma/altpciechdma.c:894:
+	printk(KERN_DEBUG "Succesfully requested IRQ #%d with dev_id 0x%p\n", irq_line, ape);
 	                   ^^^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1007: FILE: drivers/staging/altpciechdma/altpciechdma.c:894:
+	printk(KERN_DEBUG "Succesfully requested IRQ #%d with dev_id 0x%p\n", irq_line, ape);

WARNING:TYPO_SPELLING: 'succesfully' may be misspelled - perhaps 'successfully'?
#1024: FILE: drivers/staging/altpciechdma/altpciechdma.c:911:
+	/* succesfully took the device */
 	   ^^^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1026: FILE: drivers/staging/altpciechdma/altpciechdma.c:913:
+	printk(KERN_DEBUG "probe() successful.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'probe', this function's name, in a string
#1026: FILE: drivers/staging/altpciechdma/altpciechdma.c:913:
+	printk(KERN_DEBUG "probe() successful.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1027: FILE: drivers/staging/altpciechdma/altpciechdma.c:914:
+^Igoto end;^I$

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1053: FILE: drivers/staging/altpciechdma/altpciechdma.c:940:
+	if (ape)
+		kfree(ape);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1059: FILE: drivers/staging/altpciechdma/altpciechdma.c:946:
+static void __devexit remove(struct pci_dev *dev)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1062: FILE: drivers/staging/altpciechdma/altpciechdma.c:949:
+	struct ape_dev *ape;
+	printk(KERN_DEBUG "remove(0x%p)\n", dev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1062: FILE: drivers/staging/altpciechdma/altpciechdma.c:949:
+	printk(KERN_DEBUG "remove(0x%p)\n", dev);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'remove', this function's name, in a string
#1062: FILE: drivers/staging/altpciechdma/altpciechdma.c:949:
+	printk(KERN_DEBUG "remove(0x%p)\n", dev);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev == 0'
#1063: FILE: drivers/staging/altpciechdma/altpciechdma.c:950:
+	if ((dev == 0) || (dev->dev.driver_data == 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->dev.driver_data == 0'
#1063: FILE: drivers/staging/altpciechdma/altpciechdma.c:950:
+	if ((dev == 0) || (dev->dev.driver_data == 0)) {

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#1064: FILE: drivers/staging/altpciechdma/altpciechdma.c:951:
+		printk(KERN_DEBUG "remove(dev = 0x%p) dev->dev.driver_data = 0x%p\n", dev, dev->dev.driver_data);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1064: FILE: drivers/staging/altpciechdma/altpciechdma.c:951:
+		printk(KERN_DEBUG "remove(dev = 0x%p) dev->dev.driver_data = 0x%p\n", dev, dev->dev.driver_data);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'remove', this function's name, in a string
#1064: FILE: drivers/staging/altpciechdma/altpciechdma.c:951:
+		printk(KERN_DEBUG "remove(dev = 0x%p) dev->dev.driver_data = 0x%p\n", dev, dev->dev.driver_data);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1068: FILE: drivers/staging/altpciechdma/altpciechdma.c:955:
+	printk(KERN_DEBUG "remove(dev = 0x%p) where dev->dev.driver_data = 0x%p\n", dev, ape);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'remove', this function's name, in a string
#1068: FILE: drivers/staging/altpciechdma/altpciechdma.c:955:
+	printk(KERN_DEBUG "remove(dev = 0x%p) where dev->dev.driver_data = 0x%p\n", dev, ape);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1070: FILE: drivers/staging/altpciechdma/altpciechdma.c:957:
+		printk(KERN_DEBUG "dev->dev.driver_data->pci_dev (0x%08lx) != dev (0x%08lx)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1071: FILE: drivers/staging/altpciechdma/altpciechdma.c:958:
+		printk(KERN_DEBUG "dev->dev.driver_data->pci_dev (0x%08lx) != dev (0x%08lx)\n",
+		(unsigned long)ape->pci_dev, (unsigned long)dev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1085: FILE: drivers/staging/altpciechdma/altpciechdma.c:972:
+		printk(KERN_DEBUG "Freeing IRQ #%d for dev_id 0x%08lx.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1086: FILE: drivers/staging/altpciechdma/altpciechdma.c:973:
+		printk(KERN_DEBUG "Freeing IRQ #%d for dev_id 0x%08lx.\n",
+		ape->irq_line, (unsigned long)ape);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1112: FILE: drivers/staging/altpciechdma/altpciechdma.c:999:
+	struct ape_dev *ape;
+	printk(KERN_DEBUG DRV_NAME "_open()\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1112: FILE: drivers/staging/altpciechdma/altpciechdma.c:999:
+	printk(KERN_DEBUG DRV_NAME "_open()\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#1129: FILE: drivers/staging/altpciechdma/altpciechdma.c:1016:
+	struct ape_dev *ape = (struct ape_dev *)file->private_data;
+	printk(KERN_DEBUG DRV_NAME "_close()\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1129: FILE: drivers/staging/altpciechdma/altpciechdma.c:1016:
+	printk(KERN_DEBUG DRV_NAME "_close()\n");

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1140: FILE: drivers/staging/altpciechdma/altpciechdma.c:1027:
+	printk(KERN_DEBUG DRV_NAME "_read(buf=0x%p, count=%lld, pos=%llu)\n", buf, (s64)count, (u64)*pos);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1140: FILE: drivers/staging/altpciechdma/altpciechdma.c:1027:
+	printk(KERN_DEBUG DRV_NAME "_read(buf=0x%p, count=%lld, pos=%llu)\n", buf, (s64)count, (u64)*pos);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1162: FILE: drivers/staging/altpciechdma/altpciechdma.c:1049:
+	struct ape_dev *ape = (struct ape_dev *)file->private_data;
+	printk(KERN_DEBUG DRV_NAME "_write(buf=0x%p, count=%lld, pos=%llu)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1162: FILE: drivers/staging/altpciechdma/altpciechdma.c:1049:
+	printk(KERN_DEBUG DRV_NAME "_write(buf=0x%p, count=%lld, pos=%llu)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1163: FILE: drivers/staging/altpciechdma/altpciechdma.c:1050:
+	printk(KERN_DEBUG DRV_NAME "_write(buf=0x%p, count=%lld, pos=%llu)\n",
+		buf, (s64)count, (u64)*pos);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1165: FILE: drivers/staging/altpciechdma/altpciechdma.c:1052:
+	while (remaining > 0)
+	{

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#1168: FILE: drivers/staging/altpciechdma/altpciechdma.c:1055:
+		transfer_len = (remaining < APE_CHDMA_MAX_TRANSFER_LEN)? remaining:
 		                                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#1168: FILE: drivers/staging/altpciechdma/altpciechdma.c:1055:
+		transfer_len = (remaining < APE_CHDMA_MAX_TRANSFER_LEN)? remaining:
 		                                                                  ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1172: FILE: drivers/staging/altpciechdma/altpciechdma.c:1059:
+		printk(KERN_DEBUG DRV_NAME "mapped_pages=%d\n", ape->sgm->mapped_pages);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#1174: FILE: drivers/staging/altpciechdma/altpciechdma.c:1061:
+		hwnents = pci_map_sg(ape->pci_dev, ape->sgm->sgl, ape->sgm->mapped_pages, DMA_TO_DEVICE);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1175: FILE: drivers/staging/altpciechdma/altpciechdma.c:1062:
+		printk(KERN_DEBUG DRV_NAME "hwnents=%d\n", hwnents);

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1177: FILE: drivers/staging/altpciechdma/altpciechdma.c:1064:
+		tents = ape_sg_to_chdma_table(ape->sgm->sgl, hwnents, 0, &ape->table_virt->desc[0], 4096);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1178: FILE: drivers/staging/altpciechdma/altpciechdma.c:1065:
+		printk(KERN_DEBUG DRV_NAME "tents=%d\n", hwnents);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1179: FILE: drivers/staging/altpciechdma/altpciechdma.c:1066:
+#if 0^I^I$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1179: FILE: drivers/staging/altpciechdma/altpciechdma.c:1066:
+#if 0		

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1186: FILE: drivers/staging/altpciechdma/altpciechdma.c:1073:
+#endif^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1187: FILE: drivers/staging/altpciechdma/altpciechdma.c:1074:
+^I^I$

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1202: FILE: drivers/staging/altpciechdma/altpciechdma.c:1089:
+static struct file_operations sg_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1203: FILE: drivers/staging/altpciechdma/altpciechdma.c:1090:
+  .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1204: FILE: drivers/staging/altpciechdma/altpciechdma.c:1091:
+  .open = sg_open,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1205: FILE: drivers/staging/altpciechdma/altpciechdma.c:1092:
+  .release = sg_close,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1206: FILE: drivers/staging/altpciechdma/altpciechdma.c:1093:
+  .read = sg_read,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1207: FILE: drivers/staging/altpciechdma/altpciechdma.c:1094:
+  .write = sg_write,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1215: FILE: drivers/staging/altpciechdma/altpciechdma.c:1102:
+{ $

WARNING:LINE_SPACING: Missing a blank line after declarations
#1217: FILE: drivers/staging/altpciechdma/altpciechdma.c:1104:
+	int rc;
+	printk(KERN_DEBUG DRV_NAME " sg_init()\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1217: FILE: drivers/staging/altpciechdma/altpciechdma.c:1104:
+	printk(KERN_DEBUG DRV_NAME " sg_init()\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sg_init', this function's name, in a string
#1217: FILE: drivers/staging/altpciechdma/altpciechdma.c:1104:
+	printk(KERN_DEBUG DRV_NAME " sg_init()\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1222: FILE: drivers/staging/altpciechdma/altpciechdma.c:1109:
+		printk("alloc_chrdev_region() = %d\n", rc);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1231: FILE: drivers/staging/altpciechdma/altpciechdma.c:1118:
+		printk("cdev_add() = %d\n", rc);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1234: FILE: drivers/staging/altpciechdma/altpciechdma.c:1121:
+	printk(KERN_DEBUG "altpciechdma = %d:%d\n", MAJOR(ape->cdevno), MINOR(ape->cdevno));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1238: FILE: drivers/staging/altpciechdma/altpciechdma.c:1125:
+    unregister_chrdev_region(ape->cdevno, 1/*count*/);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1250: FILE: drivers/staging/altpciechdma/altpciechdma.c:1137:
+	printk(KERN_DEBUG DRV_NAME " sg_exit()\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sg_exit', this function's name, in a string
#1250: FILE: drivers/staging/altpciechdma/altpciechdma.c:1137:
+	printk(KERN_DEBUG DRV_NAME " sg_exit()\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1275: FILE: drivers/staging/altpciechdma/altpciechdma.c:1162:
+  int rc = 0;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1276: FILE: drivers/staging/altpciechdma/altpciechdma.c:1163:
+	printk(KERN_DEBUG DRV_NAME " init(), built at " __DATE__ " " __TIME__ "\n");

ERROR:DATE_TIME: Use of the '__DATE__' macro makes the build non-deterministic
#1276: FILE: drivers/staging/altpciechdma/altpciechdma.c:1163:
+	printk(KERN_DEBUG DRV_NAME " init(), built at " __DATE__ " " __TIME__ "\n");

It is generally desirable that building the same source code with
the same set of tools is reproducible, i.e. the output is always
exactly the same.

The kernel does *not* use the ``__DATE__`` and ``__TIME__`` macros,
and enables warnings if they are used as they can lead to
non-deterministic builds.

See: https://www.kernel.org/doc/html/latest/kbuild/reproducible-builds.html#timestamps

ERROR:DATE_TIME: Use of the '__TIME__' macro makes the build non-deterministic
#1276: FILE: drivers/staging/altpciechdma/altpciechdma.c:1163:
+	printk(KERN_DEBUG DRV_NAME " init(), built at " __DATE__ " " __TIME__ "\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#1279: FILE: drivers/staging/altpciechdma/altpciechdma.c:1166:
+	if (rc < 0)
+	  return rc;

WARNING:TABSTOP: Statements should start on a tabstop
#1280: FILE: drivers/staging/altpciechdma/altpciechdma.c:1167:
+	  return rc;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1289: FILE: drivers/staging/altpciechdma/altpciechdma.c:1176:
+	printk(KERN_DEBUG DRV_NAME " exit(), built at " __DATE__ " " __TIME__ "\n");

ERROR:DATE_TIME: Use of the '__DATE__' macro makes the build non-deterministic
#1289: FILE: drivers/staging/altpciechdma/altpciechdma.c:1176:
+	printk(KERN_DEBUG DRV_NAME " exit(), built at " __DATE__ " " __TIME__ "\n");

ERROR:DATE_TIME: Use of the '__TIME__' macro makes the build non-deterministic
#1289: FILE: drivers/staging/altpciechdma/altpciechdma.c:1176:
+	printk(KERN_DEBUG DRV_NAME " exit(), built at " __DATE__ " " __TIME__ "\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000197667.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 30 errors, 216 warnings, 19 checks, 1225 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000197667.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
