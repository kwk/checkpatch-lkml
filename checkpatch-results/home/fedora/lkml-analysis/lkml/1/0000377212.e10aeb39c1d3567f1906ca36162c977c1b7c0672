WARNING:TYPO_SPELLING: 'psuedo' may be misspelled - perhaps 'pseudo'?
#33: 
"cgroup" psuedo filesystem) and control their cpu bandwidth usage.
         ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'psuedo' may be misspelled - perhaps 'pseudo'?
#86: FILE: init/Kconfig:346:
+		   using the "cgroup" psuedo filesystem and control
 		                      ^^^^^^

WARNING:TYPO_SPELLING: 'psuedo' may be misspelled - perhaps 'pseudo'?
#89: FILE: init/Kconfig:349:
+		   on "cgroup" psuedo filesystem.
 		               ^^^^^^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#93: FILE: init/Kconfig:353:
+config RESOURCE_COUNTERS
+	bool "Resource counters"
+	help
+	  This option enables controller independent resource accounting
+          infrastructure that works with cgroups
+	depends on CGROUPS
+

Kconfig symbols should have a help text which fully describes
it.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#130: FILE: kernel/sched.c:232:
+	tg = container_of(task_subsys_state(p, cpu_cgroup_subsys_id),
+				struct task_grp, css);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#174: FILE: kernel/sched.c:6998:
+static void cpu_cgroup_destroy(struct cgroup_subsys *ss,
+					struct cgroup *cont)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: kernel/sched.c:7006:
+static int cpu_cgroup_can_attach(struct cgroup_subsys *ss,
+			     struct cgroup *cont, struct task_struct *tsk)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#193: FILE: kernel/sched.c:7017:
+cpu_cgroup_attach(struct cgroup_subsys *ss, struct cgroup *cont,
+			struct cgroup *old_cont, struct task_struct *tsk)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#204: FILE: kernel/sched.c:7028:
+	char buffer[2*sizeof(unsigned long) + 1];
 	             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#207: FILE: kernel/sched.c:7031:
+	if (nbytes > 2*sizeof(unsigned long))	/* safety check */
 	              ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#214: FILE: kernel/sched.c:7038:
+	shareval = simple_strtoul(buffer, NULL, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:SPACING: No space is necessary after a cast
#225: FILE: kernel/sched.c:7049:
+	return (u64) tg->shares;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000377212.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 7 checks, 188 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000377212.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
