CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#124: FILE: fs/proc/kcore.c:103:
+}
+/*

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#133: FILE: fs/proc/kcore.c:112:
+	if (kcore_need_update) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#139: FILE: fs/proc/kcore.c:118:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#147: FILE: fs/proc/kcore.c:126:
+
+

WARNING:TYPO_SPELLING: 'inialized' may be misspelled - perhaps 'initialized'?
#197: FILE: fs/proc/kcore.c:176:
+	/* Not inialized....update now */
 	       ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#232: FILE: fs/proc/kcore.c:505:
+static int open_kcore(struct inode * inode, struct file *filp)
                                                          ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#232: FILE: fs/proc/kcore.c:505:
+static int open_kcore(struct inode * inode, struct file *filp)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#241: FILE: fs/proc/kcore.c:514:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#261: FILE: fs/proc/kcore.c:534:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#283: FILE: include/linux/ioport.h:193:
+extern int walk_memory_resource(unsigned long start_pfn,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#284: FILE: include/linux/ioport.h:194:
+extern int walk_memory_resource(unsigned long start_pfn,
+			unsigned long nr_pages, void *arg,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000094414.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 2 warnings, 8 checks, 312 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000094414.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
