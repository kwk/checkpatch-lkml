WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#35: 
    signed-off-by: Stephane Eranian <eranian@hpl.hp.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#35: 
    signed-off-by: Stephane Eranian <eranian@hpl.hp.com>

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#36: 
    signed-off-by: Phil Mucci <mucci@cs.utk.edu>

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#36: 
    signed-off-by: Phil Mucci <mucci@cs.utk.edu>

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#49: FILE: arch/mips/kernel/smp.c:199:
+  struct call_data_struct data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#50: FILE: arch/mips/kernel/smp.c:200:
+  int me = smp_processor_id();$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#53: FILE: arch/mips/kernel/smp.c:203:
+  /*
+     * Can die spectacularly if this CPU isn't yet marked online

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#54: FILE: arch/mips/kernel/smp.c:204:
+     * Can die spectacularly if this CPU isn't yet marked online
+      */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#55: FILE: arch/mips/kernel/smp.c:205:
+  BUG_ON(!cpu_online(me));$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#55: FILE: arch/mips/kernel/smp.c:205:
+  BUG_ON(!cpu_online(me));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#56: FILE: arch/mips/kernel/smp.c:206:
+  if (cpu == me) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#56: FILE: arch/mips/kernel/smp.c:206:
+  if (cpu == me) {
+    WARN_ON(1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#57: FILE: arch/mips/kernel/smp.c:207:
+    WARN_ON(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#58: FILE: arch/mips/kernel/smp.c:208:
+    return -EBUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: arch/mips/kernel/smp.c:209:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#62: FILE: arch/mips/kernel/smp.c:212:
+  WARN_ON(irqs_disabled());$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#64: FILE: arch/mips/kernel/smp.c:214:
+  data.func = func;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: arch/mips/kernel/smp.c:215:
+  data.info = info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: arch/mips/kernel/smp.c:216:
+  atomic_set(&data.started, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: arch/mips/kernel/smp.c:217:
+  data.wait = wait;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: arch/mips/kernel/smp.c:218:
+  if (wait)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#68: FILE: arch/mips/kernel/smp.c:218:
+  if (wait)
+    atomic_set(&data.finished, 0);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: arch/mips/kernel/smp.c:219:
+    atomic_set(&data.finished, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: arch/mips/kernel/smp.c:221:
+  spin_lock(&smp_call_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: arch/mips/kernel/smp.c:222:
+  call_data = &data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: arch/mips/kernel/smp.c:223:
+  mb();$

WARNING:MEMORY_BARRIER: memory barrier without comment
#73: FILE: arch/mips/kernel/smp.c:223:
+  mb();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: arch/mips/kernel/smp.c:226:
+  core_send_ipi(cpu, SMP_CALL_FUNCTION);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: arch/mips/kernel/smp.c:230:
+  while (atomic_read(&data.started) != 1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#80: FILE: arch/mips/kernel/smp.c:230:
+  while (atomic_read(&data.started) != 1)
+    barrier();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: arch/mips/kernel/smp.c:231:
+    barrier();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: arch/mips/kernel/smp.c:233:
+  if (wait)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#83: FILE: arch/mips/kernel/smp.c:233:
+  if (wait)
+    while (atomic_read(&data.finished) != 1)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: arch/mips/kernel/smp.c:234:
+    while (atomic_read(&data.finished) != 1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#84: FILE: arch/mips/kernel/smp.c:234:
+    while (atomic_read(&data.finished) != 1)
+      barrier();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: arch/mips/kernel/smp.c:235:
+      barrier();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: arch/mips/kernel/smp.c:236:
+  call_data = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: arch/mips/kernel/smp.c:237:
+  spin_unlock(&smp_call_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: arch/mips/kernel/smp.c:239:
+  return 0;$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#104: FILE: include/asm-mips/smp.h:105:
+extern int smp_call_function_single(int cpuid, void (*func) (void *info),

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#105: FILE: include/asm-mips/smp.h:106:
+extern int smp_call_function_single(int cpuid, void (*func) (void *info),
+				void *info, int retry, int wait);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000399759.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 39 warnings, 2 checks, 61 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000399759.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
