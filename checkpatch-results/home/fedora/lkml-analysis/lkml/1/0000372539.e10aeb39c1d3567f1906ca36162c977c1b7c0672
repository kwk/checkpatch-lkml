WARNING:TYPO_SPELLING: 'ot' may be misspelled - perhaps 'to'?
#28: 
my filesystem test setup so I didn't want ot send it (lucky, coz I found
                                          ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#67: FILE: fs/buffer.c:2399:
+	BUG_ON(!PageLocked(page));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#88: FILE: fs/buffer.c:2419:
+int nobh_write_begin(struct file *file, struct address_space *mapping,
+			loff_t pos, unsigned len, unsigned flags,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#88: FILE: fs/buffer.c:2419:
+			loff_t pos, unsigned len, unsigned flags,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#88: FILE: fs/buffer.c:2419:
+			loff_t pos, unsigned len, unsigned flags,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#99: FILE: fs/buffer.c:2429:
+	unsigned from, to;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#155: FILE: fs/buffer.c:2545:
+	BUG_ON(!ret);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#215: FILE: fs/buffer.c:2569:
+int nobh_write_end(struct file *file, struct address_space *mapping,
+			loff_t pos, unsigned len, unsigned copied,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#215: FILE: fs/buffer.c:2569:
+			loff_t pos, unsigned len, unsigned copied,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#215: FILE: fs/buffer.c:2569:
+			loff_t pos, unsigned len, unsigned copied,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#236: FILE: fs/buffer.c:2585:
+	if (pos+copied > inode->i_size) {
 	       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#237: FILE: fs/buffer.c:2586:
+		i_size_write(inode, pos+copied);
 		                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#268: FILE: fs/buffer.c:2656:
+int nobh_truncate_page(struct address_space *mapping,
+			loff_t from, get_block_t *get_block)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#275: FILE: fs/buffer.c:2660:
+	unsigned blocksize;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#277: FILE: fs/buffer.c:2662:
+	unsigned length, pos;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#373: FILE: fs/ext2/inode.c:748:
+ext2_nobh_write_begin(struct file *file, struct address_space *mapping,
+		loff_t pos, unsigned len, unsigned flags,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#373: FILE: fs/ext2/inode.c:748:
+		loff_t pos, unsigned len, unsigned flags,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#373: FILE: fs/ext2/inode.c:748:
+		loff_t pos, unsigned len, unsigned flags,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#404: FILE: fs/ext2/inode.c:1029:
+		nobh_truncate_page(inode->i_mapping,
+				inode->i_size, ext2_get_block);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#451: FILE: include/linux/buffer_head.h:229:
+int nobh_write_begin(struct file *, struct address_space *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct address_space *' should also have an identifier name
#451: FILE: include/linux/buffer_head.h:229:
+int nobh_write_begin(struct file *, struct address_space *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#451: FILE: include/linux/buffer_head.h:229:
+int nobh_write_begin(struct file *, struct address_space *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#451: FILE: include/linux/buffer_head.h:229:
+int nobh_write_begin(struct file *, struct address_space *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#451: FILE: include/linux/buffer_head.h:229:
+int nobh_write_begin(struct file *, struct address_space *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page **' should also have an identifier name
#451: FILE: include/linux/buffer_head.h:229:
+int nobh_write_begin(struct file *, struct address_space *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void **' should also have an identifier name
#451: FILE: include/linux/buffer_head.h:229:
+int nobh_write_begin(struct file *, struct address_space *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'get_block_t*' should also have an identifier name
#451: FILE: include/linux/buffer_head.h:229:
+int nobh_write_begin(struct file *, struct address_space *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#452: FILE: include/linux/buffer_head.h:230:
+int nobh_write_begin(struct file *, struct address_space *,
+				loff_t, unsigned, unsigned,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#452: FILE: include/linux/buffer_head.h:230:
+				loff_t, unsigned, unsigned,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#452: FILE: include/linux/buffer_head.h:230:
+				loff_t, unsigned, unsigned,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#454: FILE: include/linux/buffer_head.h:232:
+int nobh_write_end(struct file *, struct address_space *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct address_space *' should also have an identifier name
#454: FILE: include/linux/buffer_head.h:232:
+int nobh_write_end(struct file *, struct address_space *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#454: FILE: include/linux/buffer_head.h:232:
+int nobh_write_end(struct file *, struct address_space *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#454: FILE: include/linux/buffer_head.h:232:
+int nobh_write_end(struct file *, struct address_space *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#454: FILE: include/linux/buffer_head.h:232:
+int nobh_write_end(struct file *, struct address_space *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#454: FILE: include/linux/buffer_head.h:232:
+int nobh_write_end(struct file *, struct address_space *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#454: FILE: include/linux/buffer_head.h:232:
+int nobh_write_end(struct file *, struct address_space *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#455: FILE: include/linux/buffer_head.h:233:
+int nobh_write_end(struct file *, struct address_space *,
+				loff_t, unsigned, unsigned,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#455: FILE: include/linux/buffer_head.h:233:
+				loff_t, unsigned, unsigned,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#455: FILE: include/linux/buffer_head.h:233:
+				loff_t, unsigned, unsigned,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct address_space *' should also have an identifier name
#457: FILE: include/linux/buffer_head.h:235:
+int nobh_truncate_page(struct address_space *, loff_t, get_block_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#457: FILE: include/linux/buffer_head.h:235:
+int nobh_truncate_page(struct address_space *, loff_t, get_block_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'get_block_t *' should also have an identifier name
#457: FILE: include/linux/buffer_head.h:235:
+int nobh_truncate_page(struct address_space *, loff_t, get_block_t *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000372539.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 34 warnings, 9 checks, 389 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000372539.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
