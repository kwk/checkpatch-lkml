WARNING:PATCH_PREFIX: patch prefix 'net' exists, appears to be a -p0 patch

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#73: FILE: core/dev.c:2469:
*buf,

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:CODE_INDENT: code indent should use tabs where possible
#74: FILE: core/dev.c:2470:
+                                  size_t length, loff_t *ppos)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: core/dev.c:2470:
+                                  size_t length, loff_t *ppos)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#76: FILE: core/dev.c:2472:
+        char *buffer, *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: core/dev.c:2472:
+        char *buffer, *p;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#77: FILE: core/dev.c:2473:
+        char devname[IFNAMSIZ];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: core/dev.c:2473:
+        char devname[IFNAMSIZ];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: core/dev.c:2474:
+        struct net *net;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: core/dev.c:2474:
+        struct net *net;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: core/dev.c:2475:
+        struct net_device *dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: core/dev.c:2475:
+        struct net_device *dev;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#80: FILE: core/dev.c:2476:
+        int err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: core/dev.c:2476:
+        int err;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: core/dev.c:2478:
+        if (!buf || length > PAGE_SIZE)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: core/dev.c:2478:
+        if (!buf || length > PAGE_SIZE)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: core/dev.c:2479:
+                return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: core/dev.c:2479:
+                return -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: core/dev.c:2481:
+        buffer = (char *)__get_free_page(GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: core/dev.c:2481:
+        buffer = (char *)__get_free_page(GFP_KERNEL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#86: FILE: core/dev.c:2482:
+        if (!buffer)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: core/dev.c:2482:
+        if (!buffer)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#87: FILE: core/dev.c:2483:
+                return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: core/dev.c:2483:
+                return -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: core/dev.c:2485:
+        err = -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: core/dev.c:2485:
+        err = -EFAULT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: core/dev.c:2486:
+        if (copy_from_user(buffer, buf, length))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: core/dev.c:2486:
+        if (copy_from_user(buffer, buf, length))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#91: FILE: core/dev.c:2487:
+                goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: core/dev.c:2487:
+                goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#93: FILE: core/dev.c:2489:
+        err = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: core/dev.c:2489:
+        err = -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: core/dev.c:2490:
+        if (length < PAGE_SIZE)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: core/dev.c:2490:
+        if (length < PAGE_SIZE)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#95: FILE: core/dev.c:2491:
+                buffer[length] = '\0';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: core/dev.c:2491:
+                buffer[length] = '\0';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#96: FILE: core/dev.c:2492:
+        else if (buffer[PAGE_SIZE-1])$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: core/dev.c:2492:
+        else if (buffer[PAGE_SIZE-1])$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#96: FILE: core/dev.c:2492:
+        else if (buffer[PAGE_SIZE-1])
                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: core/dev.c:2493:
+                goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: core/dev.c:2493:
+                goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: core/dev.c:2495:
+        err = -ENXIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: core/dev.c:2495:
+        err = -ENXIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: core/dev.c:2496:
+        net = get_proc_net(file->f_dentry->d_inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: core/dev.c:2496:
+        net = get_proc_net(file->f_dentry->d_inode);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: core/dev.c:2497:
+        if (!net)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: core/dev.c:2497:
+        if (!net)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: core/dev.c:2498:
+                goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: core/dev.c:2498:
+                goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: core/dev.c:2500:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: core/dev.c:2501:
+         * Usage: echo "net clear-stats ifdev" >/proc/net/dev$

ERROR:CODE_INDENT: code indent should use tabs where possible
#106: FILE: core/dev.c:2502:
+         * with  "ifdev" replaced by the device name you wish to clear.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: core/dev.c:2503:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: core/dev.c:2504:
+        if (!strncmp("net clear-stats",buffer,15)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: core/dev.c:2504:
+        if (!strncmp("net clear-stats",buffer,15)) {$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#108: FILE: core/dev.c:2504:
+        if (!strncmp("net clear-stats",buffer,15)) {
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#108: FILE: core/dev.c:2504:
+        if (!strncmp("net clear-stats",buffer,15)) {
                                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: core/dev.c:2505:
+                p = buffer + 16;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: core/dev.c:2505:
+                p = buffer + 16;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: core/dev.c:2506:
+                sscanf(p,"%s",devname);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: core/dev.c:2506:
+                sscanf(p,"%s",devname);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#110: FILE: core/dev.c:2506:
+                sscanf(p,"%s",devname);
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#110: FILE: core/dev.c:2506:
+                sscanf(p,"%s",devname);
                              ^

WARNING:NAKED_SSCANF: unchecked sscanf return value
#110: FILE: core/dev.c:2506:
+                sscanf(p,"%s",devname);

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: core/dev.c:2507:
+                printk(KERN_INFO "net clearing stats - device is:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: core/dev.c:2507:
+                printk(KERN_INFO "net clearing stats - device is:$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#111: FILE: core/dev.c:2507:
+                printk(KERN_INFO "net clearing stats - device is:

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: core/dev.c:2508:
+                dev = dev_get_by_name(net,devname);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: core/dev.c:2508:
+                dev = dev_get_by_name(net,devname);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: core/dev.c:2509:
+                if (!dev) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: core/dev.c:2509:
+                if (!dev) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: core/dev.c:2510:
+                   printk(KERN_INFO "no interface named '%s'\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: core/dev.c:2510:
+                   printk(KERN_INFO "no interface named '%s'\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: core/dev.c:2511:
+                } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: core/dev.c:2511:
+                } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: core/dev.c:2512:
+                        if (dev->get_stats) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: core/dev.c:2512:
+                        if (dev->get_stats) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: core/dev.c:2513:
+                                struct net_device_stats *stats =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: core/dev.c:2513:
+                                struct net_device_stats *stats =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: core/dev.c:2514:
+                                memset(stats,0,sizeof(struct$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: core/dev.c:2514:
+                                memset(stats,0,sizeof(struct$

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: core/dev.c:2515:
+                                printk(KERN_INFO "stats cleared for$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: core/dev.c:2515:
+                                printk(KERN_INFO "stats cleared for$

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: core/dev.c:2516:
+                        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: core/dev.c:2516:
+                        } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: core/dev.c:2517:
+                                printk(KERN_INFO "%s has no stats to$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: core/dev.c:2517:
+                                printk(KERN_INFO "%s has no stats to$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#126: FILE: core/dev.c:2517:
+                                printk(KERN_INFO "%s has no stats to

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: core/dev.c:2518:
+                        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: core/dev.c:2518:
+                        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#129: FILE: core/dev.c:2519:
+                        dev_put(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: core/dev.c:2519:
+                        dev_put(dev);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: core/dev.c:2520:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: core/dev.c:2520:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: core/dev.c:2521:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: core/dev.c:2521:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: core/dev.c:2523:
+        /*$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: core/dev.c:2523:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: core/dev.c:2524:
+         * convert success returns so that we return the$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: core/dev.c:2524:
+         * convert success returns so that we return the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: core/dev.c:2525:
+         * number of bytes consumed.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: core/dev.c:2525:
+         * number of bytes consumed.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: core/dev.c:2526:
+         */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: core/dev.c:2526:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: core/dev.c:2527:
+        if (!err)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: core/dev.c:2527:
+        if (!err)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: core/dev.c:2528:
+                err = length;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: core/dev.c:2528:
+                err = length;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: core/dev.c:2530:
+ out:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: core/dev.c:2531:
+        free_page((unsigned long)buffer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: core/dev.c:2531:
+        free_page((unsigned long)buffer);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: core/dev.c:2532:
+        return err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: core/dev.c:2532:
+        return err;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: core/dev.c:2580:
+        .write   = proc_net_dev_write,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: core/dev.c:2580:
+        .write   = proc_net_dev_write,$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000281348.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 59 errors, 55 warnings, 1 checks, 99 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000281348.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
