ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#72: FILE: arch/x86/kvm/x86.c:45:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#91: FILE: arch/x86/kvm/x86.c:745:
 }
+static int set_msr_mce(struct kvm_vcpu *vcpu, u32 msr, u64 data)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#93: FILE: arch/x86/kvm/x86.c:747:
+	u64 mcg_cap =3D vcpu->arch.mcg_cap;
 	            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#94: FILE: arch/x86/kvm/x86.c:748:
+	unsigned bank_num =3D mcg_cap & 0xff;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#94: FILE: arch/x86/kvm/x86.c:748:
+	unsigned bank_num =3D mcg_cap & 0xff;
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#107: FILE: arch/x86/kvm/x86.c:752:
+		vcpu->arch.mcg_status =3D data;
 		                      ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#114: FILE: arch/x86/kvm/x86.c:757:
+		if (data !=3D 0 && data !=3D ~(u64)0)
 		         ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#114: FILE: arch/x86/kvm/x86.c:757:
+		if (data !=3D 0 && data !=3D ~(u64)0)
 		                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#116: FILE: arch/x86/kvm/x86.c:759:
+		vcpu->arch.mcg_ctl =3D data;
 		                   ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#119: FILE: arch/x86/kvm/x86.c:762:
+		if (msr >=3D MSR_IA32_MC0_CTL &&
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#121: FILE: arch/x86/kvm/x86.c:764:
+			u32 offset =3D msr - MSR_IA32_MC0_CTL;
 			           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#123: FILE: arch/x86/kvm/x86.c:766:
+			if ((offset & 0x3) =3D=3D 0 &&
 			                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#123: FILE: arch/x86/kvm/x86.c:766:
+			if ((offset & 0x3) =3D=3D 0 &&
 			                      ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#123: FILE: arch/x86/kvm/x86.c:766:
+			if ((offset & 0x3) =3D=3D 0 &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#124: FILE: arch/x86/kvm/x86.c:767:
+			    data !=3D 0 && data !=3D ~(u64)0)
 			         ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#124: FILE: arch/x86/kvm/x86.c:767:
+			    data !=3D 0 && data !=3D ~(u64)0)
 			                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#126: FILE: arch/x86/kvm/x86.c:769:
+			vcpu->arch.mce_banks[offset] =3D data;
 			                             ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#158: FILE: arch/x86/kvm/x86.c:896:
 }
+static int get_msr_mce(struct kvm_vcpu *vcpu, u32 msr, u64 *pdata)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#161: FILE: arch/x86/kvm/x86.c:899:
+	u64 mcg_cap =3D vcpu->arch.mcg_cap;
 	            ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#162: FILE: arch/x86/kvm/x86.c:900:
+	unsigned bank_num =3D mcg_cap & 0xff;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#162: FILE: arch/x86/kvm/x86.c:900:
+	unsigned bank_num =3D mcg_cap & 0xff;
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#172: FILE: arch/x86/kvm/x86.c:904:
+		data =3D 0;
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#175: FILE: arch/x86/kvm/x86.c:907:
+		data =3D vcpu->arch.mcg_cap;
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#186: FILE: arch/x86/kvm/x86.c:912:
+		data =3D vcpu->arch.mcg_ctl;
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#189: FILE: arch/x86/kvm/x86.c:915:
+		data =3D vcpu->arch.mcg_status;
 		     ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#192: FILE: arch/x86/kvm/x86.c:918:
+		if (msr >=3D MSR_IA32_MC0_CTL &&
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#194: FILE: arch/x86/kvm/x86.c:920:
+			u32 offset =3D msr - MSR_IA32_MC0_CTL;
 			           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#195: FILE: arch/x86/kvm/x86.c:921:
+			u32 offset =3D msr - MSR_IA32_MC0_CTL;
+			data =3D vcpu->arch.mce_banks[offset];

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#195: FILE: arch/x86/kvm/x86.c:921:
+			data =3D vcpu->arch.mce_banks[offset];
 			     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#200: FILE: arch/x86/kvm/x86.c:926:
+	*pdata =3D data;
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#234: FILE: arch/x86/kvm/x86.c:1110:
+		r =3D KVM_MAX_MCE_BANKS;
 		  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#246: FILE: arch/x86/kvm/x86.c:1175:
+		mce_cap =3D KVM_MCE_CAP_SUPPORTED;
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#247: FILE: arch/x86/kvm/x86.c:1176:
+		r =3D -EFAULT;
 		  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#247: FILE: arch/x86/kvm/x86.c:1176:
+		r =3D -EFAULT;
 		      ^

WARNING:SIZEOF_PARENTHESIS: sizeof mce_cap should be sizeof(mce_cap)
#248: FILE: arch/x86/kvm/x86.c:1177:
+		if (copy_to_user(argp, &mce_cap, sizeof mce_cap))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#250: FILE: arch/x86/kvm/x86.c:1179:
+		r =3D 0;
 		  ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#260: FILE: arch/x86/kvm/x86.c:1524:
 }
+static int kvm_vcpu_ioctl_x86_setup_mce(struct kvm_vcpu *vcpu,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#264: FILE: arch/x86/kvm/x86.c:1528:
+	unsigned bank_num =3D mcg_cap & 0xff, bank;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#264: FILE: arch/x86/kvm/x86.c:1528:
+	unsigned bank_num =3D mcg_cap & 0xff, bank;
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#266: FILE: arch/x86/kvm/x86.c:1530:
+	r =3D -EINVAL;
 	  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#266: FILE: arch/x86/kvm/x86.c:1530:
+	r =3D -EINVAL;
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#271: FILE: arch/x86/kvm/x86.c:1535:
+	r =3D 0;
 	  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#272: FILE: arch/x86/kvm/x86.c:1536:
+	vcpu->arch.mcg_cap =3D mcg_cap;
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#275: FILE: arch/x86/kvm/x86.c:1539:
+		vcpu->arch.mcg_ctl =3D ~(u64)0;
 		                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#277: FILE: arch/x86/kvm/x86.c:1541:
+	for (bank =3D 0; bank < bank_num; bank++)
 	          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#278: FILE: arch/x86/kvm/x86.c:1542:
+		vcpu->arch.mce_banks[bank*4] =3D ~(u64)0;
 		                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#278: FILE: arch/x86/kvm/x86.c:1542:
+		vcpu->arch.mce_banks[bank*4] =3D ~(u64)0;
 		                             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#286: FILE: arch/x86/kvm/x86.c:1550:
+	u64 mcg_cap =3D vcpu->arch.mcg_cap;
 	            ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#287: FILE: arch/x86/kvm/x86.c:1551:
+	unsigned bank_num =3D mcg_cap & 0xff;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#287: FILE: arch/x86/kvm/x86.c:1551:
+	unsigned bank_num =3D mcg_cap & 0xff;
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#288: FILE: arch/x86/kvm/x86.c:1552:
+	u64 *banks =3D vcpu->arch.mce_banks;
 	           ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#290: FILE: arch/x86/kvm/x86.c:1554:
+	if (mce->bank >=3D bank_num || !(mce->status & MCI_STATUS_VAL))
 	              ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#297: FILE: arch/x86/kvm/x86.c:1561:
+	    vcpu->arch.mcg_ctl !=3D ~(u64)0)
 	                       ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#299: FILE: arch/x86/kvm/x86.c:1563:
+	banks +=3D 4 * mce->bank;
 	      ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#304: FILE: arch/x86/kvm/x86.c:1568:
+	if ((mce->status & MCI_STATUS_UC) && banks[0] !=3D ~(u64)0)
 	                                              ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#306: FILE: arch/x86/kvm/x86.c:1570:
+	if (mce->status & MCI_STATUS_UC) {
[...]
+	} else if (!(banks[1] & MCI_STATUS_VAL)
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#309: FILE: arch/x86/kvm/x86.c:1573:
+			printk(KERN_DEBUG "kvm: set_mce: "

WARNING:SPLIT_STRING: quoted string split across lines
#310: FILE: arch/x86/kvm/x86.c:1574:
+			printk(KERN_DEBUG "kvm: set_mce: "
+			       "injects mce exception while "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#311: FILE: arch/x86/kvm/x86.c:1575:
+			       "injects mce exception while "
+			       "previous one is in progress!\n");

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#316: FILE: arch/x86/kvm/x86.c:1580:
+			mce->status |=3D MCI_STATUS_OVER;
 			            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#317: FILE: arch/x86/kvm/x86.c:1581:
+		banks[2] =3D mce->addr;
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#318: FILE: arch/x86/kvm/x86.c:1582:
+		banks[3] =3D mce->misc;
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#319: FILE: arch/x86/kvm/x86.c:1583:
+		vcpu->arch.mcg_status =3D mce->mcg_status;
 		                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#320: FILE: arch/x86/kvm/x86.c:1584:
+		banks[1] =3D mce->status;
 		         ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#323: FILE: arch/x86/kvm/x86.c:1587:
+	} else if (!(banks[1] & MCI_STATUS_VAL)
+		   || !(banks[1] & MCI_STATUS_UC)) {

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#325: FILE: arch/x86/kvm/x86.c:1589:
+			mce->status |=3D MCI_STATUS_OVER;
 			            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#326: FILE: arch/x86/kvm/x86.c:1590:
+		banks[2] =3D mce->addr;
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#327: FILE: arch/x86/kvm/x86.c:1591:
+		banks[3] =3D mce->misc;
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#328: FILE: arch/x86/kvm/x86.c:1592:
+		banks[1] =3D mce->status;
 		         ^

CHECK:BRACES: Unbalanced braces around else statement
#329: FILE: arch/x86/kvm/x86.c:1593:
+	} else

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#330: FILE: arch/x86/kvm/x86.c:1594:
+		banks[1] |=3D MCI_STATUS_OVER;
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#344: FILE: arch/x86/kvm/x86.c:1735:
+		r =3D -EFAULT;
 		  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#344: FILE: arch/x86/kvm/x86.c:1735:
+		r =3D -EFAULT;
 		      ^

WARNING:SIZEOF_PARENTHESIS: sizeof mcg_cap should be sizeof(mcg_cap)
#345: FILE: arch/x86/kvm/x86.c:1736:
+		if (copy_from_user(&mcg_cap, argp, sizeof mcg_cap))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#347: FILE: arch/x86/kvm/x86.c:1738:
+		r =3D kvm_vcpu_ioctl_x86_setup_mce(vcpu, mcg_cap);
 		  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#353: FILE: arch/x86/kvm/x86.c:1744:
+		r =3D -EFAULT;
 		  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#353: FILE: arch/x86/kvm/x86.c:1744:
+		r =3D -EFAULT;
 		      ^

WARNING:SIZEOF_PARENTHESIS: sizeof mce should be sizeof(mce)
#354: FILE: arch/x86/kvm/x86.c:1745:
+		if (copy_from_user(&mce, argp, sizeof mce))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#356: FILE: arch/x86/kvm/x86.c:1747:
+		r =3D kvm_vcpu_ioctl_x86_set_mce(vcpu, &mce);
 		  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#366: FILE: arch/x86/kvm/x86.c:4568:
+	vcpu->arch.mce_banks =3D kzalloc(KVM_MAX_MCE_BANKS * sizeof(u64) * 4,
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#369: FILE: arch/x86/kvm/x86.c:4571:
+		r =3D -ENOMEM;
 		  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#369: FILE: arch/x86/kvm/x86.c:4571:
+		r =3D -ENOMEM;
 		      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#372: FILE: arch/x86/kvm/x86.c:4574:
+	vcpu->arch.mcg_cap =3D KVM_MAX_MCE_BANKS;
 	                   ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000130319.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 60 errors, 11 warnings, 12 checks, 362 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000130319.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
