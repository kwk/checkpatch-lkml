WARNING:LINE_SPACING: Missing a blank line after declarations
#230: FILE: arch/x86/kernel/tls.c:95:
+	int ret = do_set_thread_area(current, -1, u_info, 1);
+	prevent_tail_call(ret);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#241: FILE: arch/x86/kernel/tls.c:145:
+	int ret = do_get_thread_area(current, -1, u_info);
+	prevent_tail_call(ret);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#256: FILE: arch/x86/kernel/vsyscall_64.c:227:
+vsyscall_sysctl_change(ctl_table *ctl, int write, struct file * filp,
                                                                 ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#256: FILE: arch/x86/kernel/vsyscall_64.c:227:
+vsyscall_sysctl_change(ctl_table *ctl, int write, struct file * filp,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#259: FILE: arch/x86/kernel/vsyscall_64.c:230:
+	return proc_dointvec(ctl, write, filp, buffer, lenp, ppos);
 	                                 ^^^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#348: FILE: arch/x86/mm/pageattr.c:666:
+		cpa->numpages = cpa->processed = numpages;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#359: FILE: arch/x86/mm/pageattr.c:683:
+		BUG_ON(cpa->processed > numpages);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000313379.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 5 warnings, 1 checks, 283 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000313379.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
