WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#79: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:TYPO_SPELLING: 'intialization' may be misspelled - perhaps 'initialization'?
#240: FILE: Documentation/pps/pps.txt:124:
+intialization routine as follow:
 ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'Documentaion' may be misspelled - perhaps 'Documentation'?
#311: FILE: Documentation/pps/pps.txt:195:
+and the userland tools provided into Documentaion/pps/ directory.
                                      ^^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#320: FILE: Documentation/pps/pps.txt:204:
+   $ ./ppstest $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#334: FILE: Documentation/pps/ppsctl.c:1:
+#include <stdio.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'usage', this function's name, in a string
#347: FILE: Documentation/pps/ppsctl.c:14:
+	fprintf(stderr, "usage: %s <ttyS> [enable|disable]\n", name);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:BRACES: braces {} should be used on all arms of this statement
#378: FILE: Documentation/pps/ppsctl.c:45:
+	if (argv[2][0] == 'e' || argv[2][0] == '1')
[...]
+	else if (argv[2][0] == 'd' || argv[2][0] == '0')
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#382: FILE: Documentation/pps/ppsctl.c:49:
+	else {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#401: FILE: Documentation/pps/ppstest.c:1:
+#include <stdio.h>

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#441: FILE: Documentation/pps/ppstest.c:41:
+	 * for a generic source) */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'infact' may be misspelled - perhaps 'in fact'?
#457: FILE: Documentation/pps/ppstest.c:57:
+	 * Note that this can be NOT enough anyway, infact you may need sending
 	                                            ^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#459: FILE: Documentation/pps/ppstest.c:59:
+	 * the PPS signal. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#491: FILE: Documentation/pps/ppstest.c:91:
+	 * propagation delay */

WARNING:SPLIT_STRING: quoted string split across lines
#542: FILE: Documentation/pps/ppstest.c:142:
+	printf("source %d - "
+	       "assert %ld.%09ld, sequence: %ld - "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#543: FILE: Documentation/pps/ppstest.c:143:
+	       "assert %ld.%09ld, sequence: %ld - "
+	       "clear  %ld.%09ld, sequence: %ld\n",

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#570: FILE: Documentation/pps/ppstest.c:170:
+			ret = sscanf(argv[i], "%d", &num);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#608: FILE: Documentation/pps/timepps.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#624: FILE: Documentation/pps/timepps.h:17:
+ *   along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#625: FILE: Documentation/pps/timepps.h:18:
+ *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#666: FILE: Documentation/pps/timepps.h:59:
+typedef int pps_handle_t;		/* represents a PPS source */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#667: FILE: Documentation/pps/timepps.h:60:
+typedef unsigned long pps_seq_t;	/* sequence number */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#668: FILE: Documentation/pps/timepps.h:61:
+typedef struct ntp_fp ntp_fp_t;		/* NTP-compatible time stamp */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#669: FILE: Documentation/pps/timepps.h:62:
+typedef union pps_timeu pps_timeu_t;	/* generic data type to represent time stamps */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#670: FILE: Documentation/pps/timepps.h:63:
+typedef struct pps_info pps_info_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#671: FILE: Documentation/pps/timepps.h:64:
+typedef struct pps_params pps_params_t;

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#690: FILE: Documentation/pps/timepps.h:83:
+#define pps_min(a, b)		(a) < (b) ? a : b

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#690: FILE: Documentation/pps/timepps.h:83:
+#define pps_min(a, b)		(a) < (b) ? a : b

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#690: FILE: Documentation/pps/timepps.h:83:
+#define pps_min(a, b)		(a) < (b) ? a : b

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#852: FILE: MAINTAINERS:2908:
+P:	Rodolfo Giometti
+M:	giometti@enneenne.com

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'L:' before 'W:'
#854: FILE: MAINTAINERS:2910:
+W:	http://wiki.enneenne.com/index.php/LinuxPPS_support
+L:	linuxpps@ml.enneenne.com

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#917: FILE: drivers/char/lp.c:760:
+	parport_write_control(port,
+		parport_read_control(port) | PARPORT_CONTROL_SELECT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#922: FILE: drivers/char/lp.c:765:
+		parport_write_control(port,
+			parport_read_control(port) & ~PARPORT_CONTROL_SELECT);

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#941: FILE: drivers/char/lp.c:848:
+		port->pps_info.mode = PPS_CAPTUREASSERT | PPS_OFFSETASSERT | \

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around port->pps_info
#947: FILE: drivers/char/lp.c:854:
+		port->pps_source = pps_register_source(&(port->pps_info),

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#948: FILE: drivers/char/lp.c:855:
+		port->pps_source = pps_register_source(&(port->pps_info),
+				PPS_CAPTUREASSERT | PPS_OFFSETASSERT,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#952: FILE: drivers/char/lp.c:859:
+			pps_err("cannot register PPS source \"%s\"",
+					port->pps_info.path);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#955: FILE: drivers/char/lp.c:862:
+			pps_info("PPS source #%d \"%s\" added to the system",
+					port->pps_source, port->pps_info.path);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around port->pps_info
#973: FILE: drivers/char/lp.c:916:
+		pps_unregister_source(&(port->pps_info));

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#993: FILE: drivers/pps/Kconfig:7:
+config PPS
+	bool "PPS support"
+	depends on EXPERIMENTAL
+	---help---
+	  PPS (Pulse Per Second) is a special pulse provided by some GPS
+	  antennae. Userland can use it to get an high time reference.
+
+	  Some antennae's PPS signals are connected with the CD (Carrier
+	  Detect) pin of the serial line they use to communicate with the
+	  host. In this case use the SERIAL_LINE client support.
+
+	  Some antennae's PPS signals are connected with some special host
+	  inputs so you have to enable the corresponding client support.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1007: FILE: drivers/pps/Kconfig:21:
+config PPS_DEBUG
+	bool "PPS debugging messages"
+	depends on PPS 
+	help
+	  Say Y here if you want the PPS support to produce a bunch of debug
+	  messages to the system log.  Select this if you are having a
+	  problem with PPS support and want to see more of what is going on.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1009: FILE: drivers/pps/Kconfig:23:
+^Idepends on PPS $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1054: FILE: drivers/pps/clients/Kconfig:18:
+config PPS_CLIENT_UART
+	bool "UART serial support"
+	help
+	  If you say yes here you get support for a PPS source connected
+	  with the CD (Carrier Detect) pin of your serial port.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1060: FILE: drivers/pps/clients/Kconfig:24:
+config PPS_CLIENT_LP
+	bool "Parallel printer support"
+	help
+	  If you say yes here you get support for a PPS source connected
+	  with the interrupt pin of your parallel port.
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1085: FILE: drivers/pps/clients/ktimer.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1102: FILE: drivers/pps/clients/ktimer.c:18:
+ *   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1103: FILE: drivers/pps/clients/ktimer.c:19:
+ *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1106: FILE: drivers/pps/clients/ktimer.c:22:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1142: FILE: drivers/pps/clients/ktimer.c:58:
+	pps_info("echo %s %s for source %d",
+		event & PPS_CAPTUREASSERT ? "assert" : "",

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#1152: FILE: drivers/pps/clients/ktimer.c:68:
+	name		: "ktimer",
 	    		^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#1154: FILE: drivers/pps/clients/ktimer.c:70:
+	mode		: PPS_CAPTUREASSERT | PPS_OFFSETASSERT | \

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1157: FILE: drivers/pps/clients/ktimer.c:73:
+^Iecho ^I^I: pps_ktimer_echo,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1177: FILE: drivers/pps/clients/ktimer.c:93:
+	ret = pps_register_source(&pps_ktimer_info,
+				PPS_CAPTUREASSERT|PPS_OFFSETASSERT,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1177: FILE: drivers/pps/clients/ktimer.c:93:
+				PPS_CAPTUREASSERT|PPS_OFFSETASSERT,
 				                 ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1205: FILE: drivers/pps/kapi.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1222: FILE: drivers/pps/kapi.c:18:
+ *   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1223: FILE: drivers/pps/kapi.c:19:
+ *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1226: FILE: drivers/pps/kapi.c:22:
+
+

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1276: FILE: drivers/pps/kapi.c:72:
+	if ((event & (PPS_CAPTUREASSERT | PPS_CAPTURECLEAR)) == 0 ) {

WARNING:TYPO_SPELLING: 'unknow' may be misspelled - perhaps 'unknown'?
#1277: FILE: drivers/pps/kapi.c:73:
+		pps_err("unknow event (%x) for source %d", event, source);
 		         ^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1287: FILE: drivers/pps/kapi.c:83:
+			pps_add_offset(&ts,
+				&pps_source[source].params.assert_off_tu);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1299: FILE: drivers/pps/kapi.c:95:
+			pps_add_offset(&ts,
+				&pps_source[source].params.clear_off_tu);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1351: FILE: drivers/pps/kapi.c:147:
+	if ((info->mode & (PPS_ECHOASSERT | PPS_ECHOCLEAR)) != 0 &&
+			info->echo == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info->echo"
#1351: FILE: drivers/pps/kapi.c:147:
+			info->echo == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#1375: FILE: drivers/pps/kapi.c:171:
+pps_register_source_exit :
                          ^

WARNING:TYPO_SPELLING: 'unknow' may be misspelled - perhaps 'unknown'?
#1403: FILE: drivers/pps/kapi.c:199:
+		pps_err("warning! Try to unregister an unknow PPS source");
 		                                       ^^^^^^

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#1414: FILE: drivers/pps/kapi.c:210:
+pps_unregister_source_exit :
                            ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1426: FILE: drivers/pps/kapi.c:222:
+	if ((event & (PPS_CAPTUREASSERT | PPS_CAPTURECLEAR)) == 0 ) {

WARNING:TYPO_SPELLING: 'unknow' may be misspelled - perhaps 'unknown'?
#1427: FILE: drivers/pps/kapi.c:223:
+		pps_err("unknow event (%x) for source %d", event, source);
 		         ^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1453: FILE: drivers/pps/pps.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1470: FILE: drivers/pps/pps.c:18:
+ *   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1471: FILE: drivers/pps/pps.c:19:
+ *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1474: FILE: drivers/pps/pps.c:22:
+
+

CHECK:UNCOMMENTED_DEFINITION: DEFINE_MUTEX definition without comment
#1489: FILE: drivers/pps/pps.c:37:
+DEFINE_MUTEX(pps_mutex);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1535: FILE: drivers/pps/pps.c:83:
+		     strncmp(pps_source[i].info->name, path,
+				PPS_MAX_NAME_LEN) == 0))

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1553: FILE: drivers/pps/pps.c:101:
+	pps_dbg("%s: cmd %d", __FUNCTION__, cmd);

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#1563: FILE: drivers/pps/pps.c:111:
+	case PPS_CMD_FIND_SRC :
 	                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1565: FILE: drivers/pps/pps.c:113:
+		ret = copy_from_user(&data, arg,
+					sizeof(struct pps_source_data_s));

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#1582: FILE: drivers/pps/pps.c:130:
+	case PPS_CMD_FIND_PATH :
 	                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1584: FILE: drivers/pps/pps.c:132:
+		ret = copy_from_user(&data, arg,
+					sizeof(struct pps_source_data_s));

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#1601: FILE: drivers/pps/pps.c:149:
+	default :
 	        ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sys_time_pps_cmd', this function's name, in a string
#1602: FILE: drivers/pps/pps.c:150:
+		pps_err("invalid sys_time_pps_cmd %d", cmd);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1609: FILE: drivers/pps/pps.c:157:
+	strncpy(data.name, pps_source[data.source].info->name,
+				PPS_MAX_NAME_LEN);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1611: FILE: drivers/pps/pps.c:159:
+	strncpy(data.path, pps_source[data.source].info->path,
+				PPS_MAX_NAME_LEN);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1624: FILE: drivers/pps/pps.c:172:
+asmlinkage long sys_time_pps_getparams(int source,
+					struct pps_kparams __user *params)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1628: FILE: drivers/pps/pps.c:176:
+	pps_dbg("%s: source %d", __FUNCTION__, source);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1645: FILE: drivers/pps/pps.c:193:
+	ret = copy_to_user(params, &pps_source[source].params,
+						sizeof(struct pps_kparams));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1656: FILE: drivers/pps/pps.c:204:
+asmlinkage long sys_time_pps_setparams(int source,
+					const struct pps_kparams __user *params)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1660: FILE: drivers/pps/pps.c:208:
+	pps_dbg("%s: source %d", __FUNCTION__, source);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1689: FILE: drivers/pps/pps.c:237:
+	ret = copy_from_user(&pps_source[source].params, params,
+						sizeof(struct pps_kparams));

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1715: FILE: drivers/pps/pps.c:263:
+	pps_dbg("%s: source %d", __FUNCTION__, source);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1739: FILE: drivers/pps/pps.c:287:
+asmlinkage long sys_time_pps_fetch(int source, struct pps_kinfo __user *info,
+					const struct pps_ktime __user *timeout)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1746: FILE: drivers/pps/pps.c:294:
+	pps_dbg("%s: source %d", __FUNCTION__, source);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1774: FILE: drivers/pps/pps.c:322:
+			ret = wait_event_interruptible_timeout(

CHECK:BRACES: Unbalanced braces around else statement
#1783: FILE: drivers/pps/pps.c:331:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1785: FILE: drivers/pps/pps.c:333:
+		ret = wait_event_interruptible(pps_source[source].queue,
+				pps_source[source].go);

WARNING:SPLIT_STRING: quoted string split across lines
#1841: FILE: drivers/pps/pps.c:389:
+	pps_info("Software ver. %s - Copyright 2005-2007 Rodolfo Giometti "
+		"<giometti@linux.it>", PPS_VERSION);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1858: FILE: drivers/pps/sysfs.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1875: FILE: drivers/pps/sysfs.c:18:
+ *   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1876: FILE: drivers/pps/sysfs.c:19:
+ *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1879: FILE: drivers/pps/sysfs.c:22:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1944: FILE: drivers/pps/sysfs.c:87:
+^I^I.mode = _mode, ^I^I^I^I^I^I\$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info"
#1983: FILE: drivers/pps/sysfs.c:126:
+	if (info == NULL)

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1987: FILE: drivers/pps/sysfs.c:130:
+	if (info->mode&PPS_CAPTUREASSERT)
 	              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1989: FILE: drivers/pps/sysfs.c:132:
+		class_device_remove_file(&info->class_dev,
+					&pps_class_device_attributes[0]);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1991: FILE: drivers/pps/sysfs.c:134:
+	if (info->mode&PPS_CAPTURECLEAR)
 	              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1993: FILE: drivers/pps/sysfs.c:136:
+		class_device_remove_file(&info->class_dev,
+					&pps_class_device_attributes[1]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1997: FILE: drivers/pps/sysfs.c:140:
+		class_device_remove_file(&info->class_dev,
+					&pps_class_device_attributes[i]);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info"
#2009: FILE: drivers/pps/sysfs.c:152:
+	if (info == NULL || id >= PPS_MAX_SOURCES)

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#2018: FILE: drivers/pps/sysfs.c:161:
+	strlcpy(info->class_dev.class_id, buf, KOBJ_NAME_LEN);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2031: FILE: drivers/pps/sysfs.c:174:
+		ret = class_device_create_file(&info->class_dev,
+					&pps_class_device_attributes[0]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2038: FILE: drivers/pps/sysfs.c:181:
+		ret = class_device_create_file(&info->class_dev,
+					&pps_class_device_attributes[1]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2046: FILE: drivers/pps/sysfs.c:189:
+		ret = class_device_create_file(&info->class_dev,
+					&pps_class_device_attributes[i]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2056: FILE: drivers/pps/sysfs.c:199:
+		class_device_remove_file(&info->class_dev,
+					&pps_class_device_attributes[i]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2113: FILE: drivers/serial/serial_core.c:646:
+	snprintf(state->pps_info.name, PPS_MAX_NAME_LEN, "%s%d",
+		drv->driver_name, port->line);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2115: FILE: drivers/serial/serial_core.c:648:
+	snprintf(state->pps_info.path, PPS_MAX_NAME_LEN, "/dev/%s%d",
+		drv->name, port->line);

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2117: FILE: drivers/serial/serial_core.c:650:
+	state->pps_info.mode = PPS_CAPTUREBOTH | \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2121: FILE: drivers/serial/serial_core.c:654:
+	ret = pps_register_source(&state->pps_info, PPS_CAPTUREBOTH | \

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2126: FILE: drivers/serial/serial_core.c:659:
+		pps_err("cannot register PPS source \"%s\"",
+						state->pps_info.path);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2131: FILE: drivers/serial/serial_core.c:664:
+	pps_info("PPS source #%d \"%s\" added to the system ",
+		port->pps_source, state->pps_info.path);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2141: FILE: drivers/serial/serial_core.c:674:
+	pps_dbg("PPS source #%d \"%s\" removed from the system",
+	port->pps_source, state->pps_info.path);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2171: FILE: drivers/serial/serial_core.c:870:
+		if (((old_flags ^ port->flags) & (UPF_SPD_MASK|UPF_HARDPPS_CD)) ||
 		                                              ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2277: FILE: include/linux/pps.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2294: FILE: include/linux/pps.h:18:
+ *   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2295: FILE: include/linux/pps.h:19:
+ *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2298: FILE: include/linux/pps.h:22:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2304: FILE: include/linux/pps.h:28:
+ * means the bit is set.  */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2330: FILE: include/linux/pps.h:54:
+^I__u32 clear_sequence; ^I^I/* seq. num. of clear event */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2373: FILE: include/linux/pps.h:97:
+#define PPS_KC_HARDPPS_PLL	1	/* hardpps() constrained to
+					   use a phase-locked loop */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2373: FILE: include/linux/pps.h:97:
+					   use a phase-locked loop */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2375: FILE: include/linux/pps.h:99:
+#define PPS_KC_HARDPPS_FLL	2	/* hardpps() constrained to
+					use a frequency-locked loop */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2375: FILE: include/linux/pps.h:99:
+					use a frequency-locked loop */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2403: FILE: include/linux/pps.h:127:
+#define pps_dbg(format, arg...) printk(KERN_DEBUG "%s: " format "\n" , \

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#2403: FILE: include/linux/pps.h:127:
+#define pps_dbg(format, arg...) printk(KERN_DEBUG "%s: " format "\n" , \
                                                                      ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#2404: FILE: include/linux/pps.h:128:
+	KBUILD_MODNAME , ## arg)
 	               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2409: FILE: include/linux/pps.h:133:
+#define pps_err(format, arg...) printk(KERN_ERR "%s: " format "\n" , \

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#2409: FILE: include/linux/pps.h:133:
+#define pps_err(format, arg...) printk(KERN_ERR "%s: " format "\n" , \
                                                                    ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#2410: FILE: include/linux/pps.h:134:
+	KBUILD_MODNAME , ## arg)
 	               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2411: FILE: include/linux/pps.h:135:
+#define pps_info(format, arg...) printk(KERN_INFO "%s: " format "\n" , \

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#2411: FILE: include/linux/pps.h:135:
+#define pps_info(format, arg...) printk(KERN_INFO "%s: " format "\n" , \
                                                                      ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#2412: FILE: include/linux/pps.h:136:
+	KBUILD_MODNAME , ## arg)
 	               ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pps_source[source].info"
#2467: FILE: include/linux/pps.h:191:
+	return pps_source[source].info != NULL;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2476: FILE: include/linux/pps.h:200:
+extern int pps_register_source(struct pps_source_info_s *info,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2477: FILE: include/linux/pps.h:201:
+extern int pps_register_source(struct pps_source_info_s *info,
+				int default_params, int try_id);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2478: FILE: include/linux/pps.h:202:
+extern void pps_unregister_source(struct pps_source_info_s *info);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2479: FILE: include/linux/pps.h:203:
+extern void pps_event(int source, int event, void *data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2481: FILE: include/linux/pps.h:205:
+extern int pps_sysfs_create_source_entry(struct pps_source_info_s *info,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2482: FILE: include/linux/pps.h:206:
+extern int pps_sysfs_create_source_entry(struct pps_source_info_s *info,
+				int id);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2483: FILE: include/linux/pps.h:207:
+extern void pps_sysfs_remove_source_entry(struct pps_source_info_s *info);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2484: FILE: include/linux/pps.h:208:
+extern int pps_sysfs_register(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2485: FILE: include/linux/pps.h:209:
+extern void pps_sysfs_unregister(void);

CHECK:SPACING: No space is necessary after a cast
#2517: FILE: include/linux/serial_core.h:283:
+#define UPF_USR_MASK		((__force upf_t) (UPF_SPD_MASK|UPF_LOW_LATENCY\

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2517: FILE: include/linux/serial_core.h:283:
+#define UPF_USR_MASK		((__force upf_t) (UPF_SPD_MASK|UPF_LOW_LATENCY\
                     		                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#2518: FILE: include/linux/serial_core.h:284:
+							|UPF_HARDPPS_CD))
 							^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2587: FILE: include/linux/syscalls.h:622:
+asmlinkage long sys_time_pps_fetch(int source, struct pps_kinfo __user *info,
+				       const struct pps_ktime __user *timeout);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000401203.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 29 errors, 57 warnings, 68 checks, 2367 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000401203.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
