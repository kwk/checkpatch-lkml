WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#78: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

CHECK:CAMELCASE: Avoid CamelCase: <descTag>
#274: FILE: fs/udf/inode.c:1492:
+		use->descTag.descCRC = cpu_to_le16(crc_itu_t(0, (char *)use +

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <descCRC>
#274: FILE: fs/udf/inode.c:1492:
+		use->descTag.descCRC = cpu_to_le16(crc_itu_t(0, (char *)use +

ERROR:TRAILING_WHITESPACE: trailing whitespace
#275: FILE: fs/udf/inode.c:1493:
+^I^I^I^I^I^I^I   sizeof(tag), $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#287: FILE: fs/udf/inode.c:1665:
+	fe->descTag.descCRC = cpu_to_le16(crc_itu_t(0, (char *)fe + sizeof(tag),
+						  crclen));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#320: FILE: fs/udf/misc.c:248:
+^I    le16_to_cpu(tag_p->descCRC) == crc_itu_t(0, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#321: FILE: fs/udf/misc.c:249:
+	    le16_to_cpu(tag_p->descCRC) == crc_itu_t(0, 
+					bh->b_data + sizeof(tag),

CHECK:CAMELCASE: Avoid CamelCase: <descCRCLength>
#322: FILE: fs/udf/misc.c:250:
+					le16_to_cpu(tag_p->descCRCLength)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#354: FILE: fs/udf/namei.c:102:
+	crc = crc_itu_t(0, (uint8_t *)cfi + sizeof(tag),
+		      sizeof(struct fileIdentDesc) - sizeof(tag));

CHECK:CAMELCASE: Avoid CamelCase: <fileIdentDesc>
#354: FILE: fs/udf/namei.c:102:
+		      sizeof(struct fileIdentDesc) - sizeof(tag));

CHECK:CAMELCASE: Avoid CamelCase: <impUse>
#358: FILE: fs/udf/namei.c:105:
+		crc = crc_itu_t(crc, (uint8_t *)sfi->impUse,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#359: FILE: fs/udf/namei.c:106:
+		crc = crc_itu_t(crc, (uint8_t *)sfi->impUse,
 			      crclen + sizeof(tag) -

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#377: FILE: fs/udf/namei.c:116:
+		crc = crc_itu_t(crc, (uint8_t *)sfi->impUse,
+			      -fibh->soffset - sizeof(struct fileIdentDesc));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#402: FILE: fs/udf/super.c:1649:
+			crc_itu_t(0, (char *)lvid + sizeof(tag),
+				le16_to_cpu(lvid->descTag.descCRCLength)));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#414: FILE: fs/udf/super.c:1686:
+			crc_itu_t(0, (char *)lvid + sizeof(tag),
+				le16_to_cpu(lvid->descTag.descCRCLength)));

CHECK:CAMELCASE: Avoid CamelCase: <valueCRC>
#449: FILE: fs/udf/unicode.c:467:
+		valueCRC = crc_itu_t(0, fidName, fidNameLen);

CHECK:CAMELCASE: Avoid CamelCase: <fidName>
#449: FILE: fs/udf/unicode.c:467:
+		valueCRC = crc_itu_t(0, fidName, fidNameLen);

CHECK:CAMELCASE: Avoid CamelCase: <fidNameLen>
#449: FILE: fs/udf/unicode.c:467:
+		valueCRC = crc_itu_t(0, fidName, fidNameLen);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000294580.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 1 warnings, 15 checks, 171 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000294580.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
