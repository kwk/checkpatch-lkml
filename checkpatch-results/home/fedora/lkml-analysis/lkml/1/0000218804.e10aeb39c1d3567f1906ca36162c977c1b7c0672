WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
 This check makes sense only when both 2 locks, lock_page_cgroup()/lru_lock(),

WARNING:TYPO_SPELLING: 'aquired' may be misspelled - perhaps 'acquired'?
#45: 
 are aquired.
     ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#88: FILE: mm/memcontrol.c:474:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#95: FILE: mm/memcontrol.c:481:
+};
+static DEFINE_PER_CPU(struct memcg_percpu_vec, memcg_free_vec);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: mm/memcontrol.c:500:
+		mz = mem_cgroup_zoneinfo(tmp,
+				page_cgroup_nid(pc), page_cgroup_zid(pc));

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#129: FILE: mm/memcontrol.c:515:
+		if (!PageCgroupUsed(pc)
+		    && PageCgroupLRU(pc)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#130: FILE: mm/memcontrol.c:516:
+		    && PageCgroupLRU(pc)
+		    && tmp == pc->mem_cgroup) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#140: FILE: mm/memcontrol.c:526:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#157: FILE: mm/memcontrol.c:543:
+	struct memcg_percpu_vec *mpv;
+	mpv = &per_cpu(memcg_free_vec, cpu);

WARNING:LINE_SPACING: Missing a blank line after declarations
#165: FILE: mm/memcontrol.c:551:
+	struct memcg_percpu_vec *mpv;
+	mpv = &per_cpu(memcg_free_vec, cpu);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#170: FILE: mm/memcontrol.c:556:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#180: FILE: mm/memcontrol.c:566:
+	struct memcg_percpu_vec *mpv;
+	mpv = &get_cpu_var(memcg_free_vec);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#210: FILE: mm/memcontrol.c:596:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#331: FILE: mm/memcontrol.c:1467:
+static int cpu_memcgroup_callback(struct notifier_block *nb,
+			unsigned long action, void *hcpu)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#354: FILE: mm/memcontrol.c:1490:
+static struct notifier_block __refdata memcgroup_nb =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#365: FILE: mm/memcontrol.c:1504:
+		cpu_memcgroup_callback(&memcgroup_nb,
+					(unsigned long)CPU_UP_PREPARE,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000218804.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 5 warnings, 10 checks, 310 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000218804.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
