WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#80: 
------------------------------------------------------------------------------------------------------------ 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#125: FILE: fs/fs-writeback.c:394:
+static int commit_unstable_pages(struct address_space *mapping,
+		struct writeback_control *wbc)

WARNING:LINE_SPACING: Missing a blank line after declarations
#145: FILE: fs/fs-writeback.c:493:
+		int err;
+		inode->i_state &= ~I_UNSTABLE_PAGES;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#173: FILE: fs/fs-writeback.c:1082:
+		const int was_dirty = inode->i_state & (I_DIRTY|I_UNSTABLE_PAGES);
 		                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#232: FILE: fs/nfs/internal.h:255:
+extern int nfs_commit_unstable_pages(struct address_space *mapping,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#233: FILE: fs/nfs/internal.h:256:
+extern int nfs_commit_unstable_pages(struct address_space *mapping,
+		struct writeback_control *wbc);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#276: FILE: fs/nfs/write.c:1411:
+int nfs_commit_unstable_pages(struct address_space *mapping,
+		struct writeback_control *wbc)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#287: FILE: fs/nfs/write.c:1422:
+	    radix_tree_tagged(&NFS_I(inode)->nfs_page_tree,
+		    NFS_PAGE_TAG_LOCKED)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: fs/nfs/write.c:1441:
+int nfs_commit_unstable_pages(struct address_space *mapping,
+		struct writeback_control *wbc)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct address_space *' should also have an identifier name
#321: FILE: include/linux/fs.h:605:
+	int (*commit_unstable_pages)(struct address_space *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct writeback_control *' should also have an identifier name
#321: FILE: include/linux/fs.h:605:
+	int (*commit_unstable_pages)(struct address_space *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#322: FILE: include/linux/fs.h:606:
+	int (*commit_unstable_pages)(struct address_space *,
+			struct writeback_control *);

CHECK:BIT_MACRO: Prefer using the BIT macro
#331: FILE: include/linux/fs.h:1641:
+#define I_UNSTABLE_PAGES	(1 << __I_UNSTABLE_PAGES)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000028636.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 9 checks, 190 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000028636.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
