WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
master.kernel.org:/pub/scm/linux/kernel/git/jgarzik/netdev-2.6.git upstream-davem

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#95: FILE: drivers/net/e1000/e1000_ethtool.c:53:
+#define E1000_STAT(m) FIELD_SIZEOF(struct e1000_adapter, m), \
 		      offsetof(struct e1000_adapter, m)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm' - possible side-effects?
#95: FILE: drivers/net/e1000/e1000_ethtool.c:53:
+#define E1000_STAT(m) FIELD_SIZEOF(struct e1000_adapter, m), \
 		      offsetof(struct e1000_adapter, m)

WARNING:SPLIT_STRING: quoted string split across lines
#109: FILE: drivers/net/e1000/e1000_main.c:1200:
+		DPRINTK(PROBE, WARNING, "This device (id %04x:%04x) will no "
+			"longer be supported by this driver in the future.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#112: FILE: drivers/net/e1000/e1000_main.c:1203:
+		DPRINTK(PROBE, WARNING, "please use the \"e1000e\" "
+			"driver instead.\n");

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#222: FILE: drivers/net/gianfar.c:133:
+extern int gfar_local_mdio_write(struct gfar_mii __iomem *regs, int mii_id, int regnum, u16 value);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#223: FILE: drivers/net/gianfar.c:134:
+extern int gfar_local_mdio_read(struct gfar_mii __iomem *regs, int mii_id, int regnum);

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#290: FILE: drivers/net/igb/igb_ethtool.c:46:
+#define IGB_STAT(m) FIELD_SIZEOF(struct igb_adapter, m), \
 		      offsetof(struct igb_adapter, m)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm' - possible side-effects?
#290: FILE: drivers/net/igb/igb_ethtool.c:46:
+#define IGB_STAT(m) FIELD_SIZEOF(struct igb_adapter, m), \
 		      offsetof(struct igb_adapter, m)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#370: FILE: drivers/net/ixgb/ixgb_ethtool.c:52:
+#define IXGB_STAT(m) FIELD_SIZEOF(struct ixgb_adapter, m), \
 		      offsetof(struct ixgb_adapter, m)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm' - possible side-effects?
#370: FILE: drivers/net/ixgb/ixgb_ethtool.c:52:
+#define IXGB_STAT(m) FIELD_SIZEOF(struct ixgb_adapter, m), \
 		      offsetof(struct ixgb_adapter, m)

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#414: FILE: drivers/net/ixgbe/ixgbe_main.c:2281:
+			case __constant_htons(ETH_P_IP):

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#421: FILE: drivers/net/ixgbe/ixgbe_main.c:2288:
+			case __constant_htons(ETH_P_IPV6):

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#433: FILE: drivers/net/ixgbe/ixgbe_main.c:2298:
+					DPRINTK(PROBE, WARNING,
+					 "partial checksum but proto=%x!\n",

WARNING:SPLIT_STRING: quoted string split across lines
#447: FILE: drivers/net/ixgbe/ixgbe_main.c:2800:
+		dev_warn(&pdev->dev, "PCI-Express bandwidth available for "
+			 "this card is not sufficient for optimal "

WARNING:SPLIT_STRING: quoted string split across lines
#448: FILE: drivers/net/ixgbe/ixgbe_main.c:2801:
+			 "this card is not sufficient for optimal "
+			 "performance.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#450: FILE: drivers/net/ixgbe/ixgbe_main.c:2803:
+		dev_warn(&pdev->dev, "For optimal performance a x8 "
+			 "PCI-Express slot is required.\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#466: FILE: drivers/net/pcmcia/smc91c92_cs.c:562:
+    tuple->DesiredTuple = CISTPL_VERS_1;$

CHECK:CAMELCASE: Avoid CamelCase: <DesiredTuple>
#466: FILE: drivers/net/pcmcia/smc91c92_cs.c:562:
+    tuple->DesiredTuple = CISTPL_VERS_1;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: drivers/net/pcmcia/smc91c92_cs.c:563:
+    if (first_tuple(link, tuple, parse) != CS_SUCCESS) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: drivers/net/pcmcia/smc91c92_cs.c:566:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: drivers/net/pcmcia/smc91c92_cs.c:568:
+    if (next_tuple(link, tuple, parse) != CS_SUCCESS)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: drivers/net/pcmcia/smc91c92_cs.c:570:
+    if (parse->version_1.ns > 3) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#575: FILE: drivers/net/tsi108_eth.c:1528:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#592: FILE: drivers/net/tsi108_eth.c:1545:
+^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#605: FILE: drivers/net/tsi108_eth.c:1558:
+^I.get_link ^I= ethtool_op_get_link,$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000320810.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 16 warnings, 5 checks, 466 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000320810.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
