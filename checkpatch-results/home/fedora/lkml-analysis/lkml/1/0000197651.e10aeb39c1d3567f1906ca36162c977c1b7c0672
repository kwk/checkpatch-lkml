WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#72: FILE: drivers/industrialio/Kconfig:20:
+config IIO_SW_RING
+       tristate "Industrial I/O lock free software ring"
+       depends on IIO_RING_BUFFER && INDUSTRIALIO
+
+       ---help---
+	example software ring buffer implementation.  The design aim
+	of this particular realization was to minize write locking
+	with the intention that some devices would be able to write
+	in interrupt context.

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: drivers/industrialio/Makefile:6:
+industrialio-y := industrialio-core.o $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#96: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#101: FILE: drivers/industrialio/ring_sw.c:1:
+/* The industrial I/O simple minimally locked ring buffer.

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#121: FILE: drivers/industrialio/ring_sw.c:21:
+	ring->data = kmalloc(length*ring->buf.bpd, GFP_KERNEL);
 	                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#134: FILE: drivers/industrialio/ring_sw.c:34:
+	struct iio_sw_ring_buffer *ring = r;
+	spin_lock(&ring->use_lock);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#143: FILE: drivers/industrialio/ring_sw.c:43:
+	struct iio_sw_ring_buffer *ring = r;
+	spin_lock(&ring->use_lock);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#149: FILE: drivers/industrialio/ring_sw.c:49:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#152: FILE: drivers/industrialio/ring_sw.c:52:
+ * in the device driver */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#166: FILE: drivers/industrialio/ring_sw.c:66:
+		ring->half_p = ring->data - ring->buf.length*ring->buf.bpd/2;
 		                                            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#166: FILE: drivers/industrialio/ring_sw.c:66:
+		ring->half_p = ring->data - ring->buf.length*ring->buf.bpd/2;
 		                                                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#175: FILE: drivers/industrialio/ring_sw.c:75:
+	if (ring->write_p == ring->data + ring->buf.length*ring->buf.bpd) {
 	                                                  ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#182: FILE: drivers/industrialio/ring_sw.c:82:
+	 * ring event */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#186: FILE: drivers/industrialio/ring_sw.c:86:
+		    == ring->data + ring->buf.length*ring->buf.bpd)
 		                                    ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#192: FILE: drivers/industrialio/ring_sw.c:92:
+			/* Event escalation - probably quicker to let this
+			   keep running than check if it is necessary */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#192: FILE: drivers/industrialio/ring_sw.c:92:
+			   keep running than check if it is necessary */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#214: FILE: drivers/industrialio/ring_sw.c:114:
+	 * simultaneous read */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#217: FILE: drivers/industrialio/ring_sw.c:117:
+	if (ring->half_p == ring->data + ring->buf.length*ring->buf.bpd)
 	                                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#247: FILE: drivers/industrialio/ring_sw.c:147:
+	bytes_to_rip = min(ring->buf.bpd*ring->buf.length, bytes_to_rip);
 	                                ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#250: FILE: drivers/industrialio/ring_sw.c:150:
+	if (*data == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#266: FILE: drivers/industrialio/ring_sw.c:166:
+	while ((initial_read_p != ring->read_p)
+	       || (initial_write_p != ring->write_p)) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#289: FILE: drivers/industrialio/ring_sw.c:189:
+			+ ring->buf.length*ring->buf.bpd - initial_read_p;
 			                  ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#305: FILE: drivers/industrialio/ring_sw.c:205:
+	 * read pointer has been pushed */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#311: FILE: drivers/industrialio/ring_sw.c:211:
+		*dead_offset = ring->buf.length*ring->buf.bpd
 		                               ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#315: FILE: drivers/industrialio/ring_sw.c:215:
+	 * the point we were reading to has been passed */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#318: FILE: drivers/industrialio/ring_sw.c:218:
+	 * pushed further than we would look. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#338: FILE: drivers/industrialio/ring_sw.c:238:
+	struct iio_sw_ring_buffer *ring = r;
+	return iio_store_to_sw_ring(ring, data, timestamp);

WARNING:TYPO_SPELLING: 'unnessecary' may be misspelled - perhaps 'unnecessary'?
#353: FILE: drivers/industrialio/ring_sw.c:253:
+	barrier(); /*unnessecary? */
 	             ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#371: FILE: drivers/industrialio/ring_sw.c:271:
+	struct iio_sw_ring_buffer *ring = r;
+	return iio_read_last_from_sw_ring(ring, data);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*r)...) over kzalloc(sizeof(struct iio_sw_ring_buffer)...)
#377: FILE: drivers/industrialio/ring_sw.c:277:
+	*r = kzalloc(sizeof(struct iio_sw_ring_buffer), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LINE_SPACING: Missing a blank line after declarations
#391: FILE: drivers/industrialio/ring_sw.c:291:
+	struct iio_sw_ring_buffer *ring = r;
+	__iio_free_sw_ring_buffer(ring);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#393: FILE: drivers/industrialio/ring_sw.c:293:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#396: FILE: drivers/industrialio/ring_sw.c:296:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#424: FILE: drivers/industrialio/ring_sw.c:324:
+	struct iio_sw_ring_buffer *ring = r;
+	return ring->buf.bpd;

WARNING:LINE_SPACING: Missing a blank line after declarations
#431: FILE: drivers/industrialio/ring_sw.c:331:
+	struct iio_sw_ring_buffer *ring = r;
+	if (ring->buf.bpd != bpd) {

ERROR:SPACING: space required before the open parenthesis '('
#433: FILE: drivers/industrialio/ring_sw.c:333:
+		if(ring->buf.ring_access->mark_param_change)

WARNING:LINE_SPACING: Missing a blank line after declarations
#443: FILE: drivers/industrialio/ring_sw.c:343:
+	struct iio_sw_ring_buffer *ring = r;
+	return ring->buf.length;

WARNING:LINE_SPACING: Missing a blank line after declarations
#450: FILE: drivers/industrialio/ring_sw.c:350:
+	struct iio_sw_ring_buffer *ring = r;
+	if(ring->buf.length != length) {

ERROR:SPACING: space required before the open parenthesis '('
#450: FILE: drivers/industrialio/ring_sw.c:350:
+	if(ring->buf.length != length) {

ERROR:SPACING: space required before the open parenthesis '('
#452: FILE: drivers/industrialio/ring_sw.c:352:
+		if(ring->buf.ring_access->mark_param_change)

WARNING:LINE_SPACING: Missing a blank line after declarations
#462: FILE: drivers/industrialio/ring_sw.c:362:
+	struct iio_sw_ring_buffer *ring = r;
+	ring->update_needed = true;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#477: FILE: include/linux/industrialio/ring_sw.h:1:
+/* The industrial I/O simple minimally locked ring buffer.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#505: FILE: include/linux/industrialio/ring_sw.h:29:
+ * driver requests - some may support multiple options */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#507: FILE: include/linux/industrialio/ring_sw.h:31:
+
+

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#512: FILE: include/linux/industrialio/ring_sw.h:36:
+#if defined CONFIG_IIO_SW_RING || defined CONFIG_IIO_SW_RING_MODULE

CHECK:LINE_SPACING: Please don't use multiple blank lines
#579: FILE: include/linux/industrialio/ring_sw.h:103:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#641: FILE: include/linux/industrialio/ring_sw.h:165:
+ * struct iio_ring_buffer.
+**/

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#653: FILE: include/linux/industrialio/ring_sw.h:177:
+	spinlock_t		use_lock;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000197651.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 26 warnings, 18 checks, 573 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000197651.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
