WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct trace_init_event *' should also have an identifier name
#242: FILE: tools/perf/builtin-lock.c:318:
+	void (*init_event)(struct trace_init_event *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct event *' should also have an identifier name
#242: FILE: tools/perf/builtin-lock.c:318:
+	void (*init_event)(struct trace_init_event *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#243: FILE: tools/perf/builtin-lock.c:319:
+	void (*init_event)(struct trace_init_event *,
+			      struct event *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#309: FILE: tools/perf/builtin-lock.c:445:
+report_lock_class_init_event(struct trace_init_event *init_event,
+			struct event *__event __used,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#366: FILE: tools/perf/builtin-lock.c:537:
+process_lock_class_init_event(void *data,
+			struct event *event __used,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000016108.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 3 checks, 380 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000016108.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
