WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ipc_ids *' should also have an identifier name
#114: FILE: ipc/util.h:86:
+struct kern_ipc_perm *ipc_lock(struct ipc_ids *, int, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#114: FILE: ipc/util.h:86:
+struct kern_ipc_perm *ipc_lock(struct ipc_ids *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#114: FILE: ipc/util.h:86:
+struct kern_ipc_perm *ipc_lock(struct ipc_ids *, int, int);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#138: FILE: ipc/msg.c:151:
+static inline struct msg_queue *msg_lock(struct ipc_namespace *ns, int id,
+						int chk)

CHECK:SPACING: No space is necessary after a cast
#140: FILE: ipc/msg.c:153:
+	return (struct msg_queue *) ipc_lock(&msg_ids(ns), id, chk);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#266: FILE: ipc/sem.c:191:
+static inline struct sem_array *sem_lock(struct ipc_namespace *ns, int id,
+						int chk)

CHECK:SPACING: No space is necessary after a cast
#268: FILE: ipc/sem.c:193:
+	return (struct sem_array *) ipc_lock(&sem_ids(ns), id, chk);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#423: FILE: ipc/shm.c:154:
+static inline struct shmid_kernel *shm_lock(struct ipc_namespace *ns, int id,
+						int chk)

CHECK:SPACING: No space is necessary after a cast
#428: FILE: ipc/shm.c:156:
+	return (struct shmid_kernel *) ipc_lock(&shm_ids(ns), id, chk);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#439: FILE: ipc/shm.c:179:
+	BUG_ON(IS_ERR(shp));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#450: FILE: ipc/shm.c:225:
+	BUG_ON(IS_ERR(shp));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#586: FILE: ipc/shm.c:987:
+	BUG_ON(IS_ERR(shp));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000421335.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 6 checks, 490 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000421335.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
