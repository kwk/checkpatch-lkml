WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
master.kernel.org:/pub/scm/linux/kernel/git/jgarzik/netdev-2.6.git upstream-net26

CHECK:SPACING: No space is necessary after a cast
#141: FILE: drivers/net/8139too.c:969:
+		((__le16 *) (dev->dev_addr))[i] =

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#142: FILE: drivers/net/8139too.c:970:
+		    cpu_to_le16(read_eeprom (ioaddr, i + 7, addr_len));

CHECK:SPACING: No space is necessary after a cast
#152: FILE: drivers/net/8139too.c:1376:
+	RTL_W32_F (MAC0 + 0, le32_to_cpu (*(__le32 *) (dev->dev_addr + 0)));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#152: FILE: drivers/net/8139too.c:1376:
+	RTL_W32_F (MAC0 + 0, le32_to_cpu (*(__le32 *) (dev->dev_addr + 0)));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#152: FILE: drivers/net/8139too.c:1376:
+	RTL_W32_F (MAC0 + 0, le32_to_cpu (*(__le32 *) (dev->dev_addr + 0)));

CHECK:SPACING: No space is necessary after a cast
#153: FILE: drivers/net/8139too.c:1377:
+	RTL_W32_F (MAC0 + 4, le16_to_cpu (*(__le16 *) (dev->dev_addr + 4)));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#153: FILE: drivers/net/8139too.c:1377:
+	RTL_W32_F (MAC0 + 4, le16_to_cpu (*(__le16 *) (dev->dev_addr + 4)));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#153: FILE: drivers/net/8139too.c:1377:
+	RTL_W32_F (MAC0 + 4, le16_to_cpu (*(__le16 *) (dev->dev_addr + 4)));

CHECK:SPACING: No space is necessary after a cast
#162: FILE: drivers/net/8139too.c:1948:
+		rx_status = le32_to_cpu (*(__le32 *) (rx_ring + ring_offset));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#162: FILE: drivers/net/8139too.c:1948:
+		rx_status = le32_to_cpu (*(__le32 *) (rx_ring + ring_offset));

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#174: FILE: drivers/net/Kconfig:470:
+config KORINA
+	tristate "Korina (IDT RC32434) Ethernet support"
+	depends on NET_ETHERNET && MIKROTIK_RB500
+	help
+	  If you have a Mikrotik RouterBoard 500 or IDT RC32434
+	  based system say Y. Otherwise say N.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#220: FILE: drivers/net/cxgb3/cxgb3_offload.c:837:
+/*
+ * That skb would better have come from process_responses() where we abuse

WARNING:SPACING: Unnecessary space before function pointer arguments
#302: FILE: drivers/net/e1000/e1000.h:290:
+	bool (*clean_rx) (struct e1000_adapter *adapter,

WARNING:SPACING: Unnecessary space before function pointer arguments
#308: FILE: drivers/net/e1000/e1000.h:294:
+	bool (*clean_rx) (struct e1000_adapter *adapter,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#357: FILE: drivers/net/e1000/e1000_ethtool.c:925:
+	uint32_t mask, i = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#506: FILE: drivers/net/e1000/e1000_hw.c:486:
+        hw->tbi_compatibility_en = false;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: drivers/net/e1000/e1000_hw.c:486:
+        hw->tbi_compatibility_en = false;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#515: FILE: drivers/net/e1000/e1000_hw.c:517:
+                hw->tbi_compatibility_en = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#515: FILE: drivers/net/e1000/e1000_hw.c:517:
+                hw->tbi_compatibility_en = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#524: FILE: drivers/net/e1000/e1000_hw.c:573:
+    hw->tbi_compatibility_on = false;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#533: FILE: drivers/net/e1000/e1000_hw.c:686:
+            if (!e1000_is_onboard_nvm_eeprom(hw)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: drivers/net/e1000/e1000_hw.c:686:
+            if (!e1000_is_onboard_nvm_eeprom(hw)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#542: FILE: drivers/net/e1000/e1000_hw.c:1432:
+        hw->phy_reset_disable = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#542: FILE: drivers/net/e1000/e1000_hw.c:1432:
+        hw->phy_reset_disable = false;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#551: FILE: drivers/net/e1000/e1000_hw.c:1474:
+        ret_val = e1000_set_d3_lplu_state(hw, false);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#551: FILE: drivers/net/e1000/e1000_hw.c:1474:
+        ret_val = e1000_set_d3_lplu_state(hw, false);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#560: FILE: drivers/net/e1000/e1000_hw.c:1482:
+    ret_val = e1000_set_d0_lplu_state(hw, false);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#569: FILE: drivers/net/e1000/e1000_hw.c:1695:
+        if (!e1000_check_mng_mode(hw)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#569: FILE: drivers/net/e1000/e1000_hw.c:1695:
+        if (!e1000_check_mng_mode(hw)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#569: FILE: drivers/net/e1000/e1000_hw.c:1695:
+        if (!e1000_check_mng_mode(hw)) {
[...]
             phy_data |= GG82563_PMCR_ENABLE_ELECTRICAL_IDLE;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#578: FILE: drivers/net/e1000/e1000_hw.c:1896:
+    hw->get_link_status = true;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#587: FILE: drivers/net/e1000/e1000_hw.c:1936:
+        ret_val = e1000_config_dsp_after_link_change(hw, true);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#587: FILE: drivers/net/e1000/e1000_hw.c:1936:
+        ret_val = e1000_config_dsp_after_link_change(hw, true);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#596: FILE: drivers/net/e1000/e1000_hw.c:2927:
+                hw->get_link_status = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#596: FILE: drivers/net/e1000/e1000_hw.c:2927:
+                hw->get_link_status = false;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#603: FILE: drivers/net/e1000/e1000_hw.c:2950:
         if (phy_data & MII_SR_LINK_STATUS) {
+            hw->get_link_status = false;

ERROR:CODE_INDENT: code indent should use tabs where possible
#605: FILE: drivers/net/e1000/e1000_hw.c:2951:
+            hw->get_link_status = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#605: FILE: drivers/net/e1000/e1000_hw.c:2951:
+            hw->get_link_status = false;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#611: FILE: drivers/net/e1000/e1000_hw.c:2975:
         } else {
[...]
+            e1000_config_dsp_after_link_change(hw, false);

ERROR:CODE_INDENT: code indent should use tabs where possible
#614: FILE: drivers/net/e1000/e1000_hw.c:2977:
+            e1000_config_dsp_after_link_change(hw, false);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#614: FILE: drivers/net/e1000/e1000_hw.c:2977:
+            e1000_config_dsp_after_link_change(hw, false);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#623: FILE: drivers/net/e1000/e1000_hw.c:2987:
+        e1000_config_dsp_after_link_change(hw, true);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#623: FILE: drivers/net/e1000/e1000_hw.c:2987:
+        e1000_config_dsp_after_link_change(hw, true);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#632: FILE: drivers/net/e1000/e1000_hw.c:3040:
+                    hw->tbi_compatibility_on = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#632: FILE: drivers/net/e1000/e1000_hw.c:3040:
+                    hw->tbi_compatibility_on = false;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#639: FILE: drivers/net/e1000/e1000_hw.c:3048:
                 if (!hw->tbi_compatibility_on) {
+                    hw->tbi_compatibility_on = true;

ERROR:CODE_INDENT: code indent should use tabs where possible
#641: FILE: drivers/net/e1000/e1000_hw.c:3049:
+                    hw->tbi_compatibility_on = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#641: FILE: drivers/net/e1000/e1000_hw.c:3049:
+                    hw->tbi_compatibility_on = true;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#650: FILE: drivers/net/e1000/e1000_hw.c:3102:
+        hw->serdes_link_down = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#650: FILE: drivers/net/e1000/e1000_hw.c:3102:
+        hw->serdes_link_down = false;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#659: FILE: drivers/net/e1000/e1000_hw.c:3113:
+                hw->serdes_link_down = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#659: FILE: drivers/net/e1000/e1000_hw.c:3113:
+                hw->serdes_link_down = false;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#662: FILE: drivers/net/e1000/e1000_hw.c:3116:
         } else {
+            hw->serdes_link_down = true;

ERROR:CODE_INDENT: code indent should use tabs where possible
#664: FILE: drivers/net/e1000/e1000_hw.c:3117:
+            hw->serdes_link_down = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#664: FILE: drivers/net/e1000/e1000_hw.c:3117:
+            hw->serdes_link_down = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#673: FILE: drivers/net/e1000/e1000_hw.c:4048:
+    bool match = false;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#682: FILE: drivers/net/e1000/e1000_hw.c:4090:
+        if (hw->phy_id == M88E1000_E_PHY_ID) match = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#682: FILE: drivers/net/e1000/e1000_hw.c:4090:
+        if (hw->phy_id == M88E1000_E_PHY_ID) match = true;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#682: FILE: drivers/net/e1000/e1000_hw.c:4090:
+        if (hw->phy_id == M88E1000_E_PHY_ID) match = true;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#686: FILE: drivers/net/e1000/e1000_hw.c:4093:
+        if (hw->phy_id == M88E1000_I_PHY_ID) match = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#686: FILE: drivers/net/e1000/e1000_hw.c:4093:
+        if (hw->phy_id == M88E1000_I_PHY_ID) match = true;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#686: FILE: drivers/net/e1000/e1000_hw.c:4093:
+        if (hw->phy_id == M88E1000_I_PHY_ID) match = true;

ERROR:CODE_INDENT: code indent should use tabs where possible
#694: FILE: drivers/net/e1000/e1000_hw.c:4100:
+        if (hw->phy_id == M88E1011_I_PHY_ID) match = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#694: FILE: drivers/net/e1000/e1000_hw.c:4100:
+        if (hw->phy_id == M88E1011_I_PHY_ID) match = true;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#694: FILE: drivers/net/e1000/e1000_hw.c:4100:
+        if (hw->phy_id == M88E1011_I_PHY_ID) match = true;

ERROR:CODE_INDENT: code indent should use tabs where possible
#701: FILE: drivers/net/e1000/e1000_hw.c:4106:
+        if (hw->phy_id == IGP01E1000_I_PHY_ID) match = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#701: FILE: drivers/net/e1000/e1000_hw.c:4106:
+        if (hw->phy_id == IGP01E1000_I_PHY_ID) match = true;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#701: FILE: drivers/net/e1000/e1000_hw.c:4106:
+        if (hw->phy_id == IGP01E1000_I_PHY_ID) match = true;

ERROR:CODE_INDENT: code indent should use tabs where possible
#705: FILE: drivers/net/e1000/e1000_hw.c:4109:
+        if (hw->phy_id == M88E1111_I_PHY_ID) match = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#705: FILE: drivers/net/e1000/e1000_hw.c:4109:
+        if (hw->phy_id == M88E1111_I_PHY_ID) match = true;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#705: FILE: drivers/net/e1000/e1000_hw.c:4109:
+        if (hw->phy_id == M88E1111_I_PHY_ID) match = true;

ERROR:CODE_INDENT: code indent should use tabs where possible
#709: FILE: drivers/net/e1000/e1000_hw.c:4112:
+        if (hw->phy_id == GG82563_E_PHY_ID) match = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#709: FILE: drivers/net/e1000/e1000_hw.c:4112:
+        if (hw->phy_id == GG82563_E_PHY_ID) match = true;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#709: FILE: drivers/net/e1000/e1000_hw.c:4112:
+        if (hw->phy_id == GG82563_E_PHY_ID) match = true;

ERROR:CODE_INDENT: code indent should use tabs where possible
#716: FILE: drivers/net/e1000/e1000_hw.c:4115:
+        if (hw->phy_id == IGP03E1000_E_PHY_ID) match = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#716: FILE: drivers/net/e1000/e1000_hw.c:4115:
+        if (hw->phy_id == IGP03E1000_E_PHY_ID) match = true;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#716: FILE: drivers/net/e1000/e1000_hw.c:4115:
+        if (hw->phy_id == IGP03E1000_E_PHY_ID) match = true;

ERROR:CODE_INDENT: code indent should use tabs where possible
#717: FILE: drivers/net/e1000/e1000_hw.c:4116:
+        if (hw->phy_id == IFE_E_PHY_ID) match = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#717: FILE: drivers/net/e1000/e1000_hw.c:4116:
+        if (hw->phy_id == IFE_E_PHY_ID) match = true;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#717: FILE: drivers/net/e1000/e1000_hw.c:4116:
+        if (hw->phy_id == IFE_E_PHY_ID) match = true;

ERROR:CODE_INDENT: code indent should use tabs where possible
#718: FILE: drivers/net/e1000/e1000_hw.c:4117:
+        if (hw->phy_id == IFE_PLUS_E_PHY_ID) match = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#718: FILE: drivers/net/e1000/e1000_hw.c:4117:
+        if (hw->phy_id == IFE_PLUS_E_PHY_ID) match = true;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#718: FILE: drivers/net/e1000/e1000_hw.c:4117:
+        if (hw->phy_id == IFE_PLUS_E_PHY_ID) match = true;

ERROR:CODE_INDENT: code indent should use tabs where possible
#719: FILE: drivers/net/e1000/e1000_hw.c:4118:
+        if (hw->phy_id == IFE_C_E_PHY_ID) match = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#719: FILE: drivers/net/e1000/e1000_hw.c:4118:
+        if (hw->phy_id == IFE_C_E_PHY_ID) match = true;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#719: FILE: drivers/net/e1000/e1000_hw.c:4118:
+        if (hw->phy_id == IFE_C_E_PHY_ID) match = true;

ERROR:CODE_INDENT: code indent should use tabs where possible
#729: FILE: drivers/net/e1000/e1000_hw.c:4459:
+        eeprom->use_eerd = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#729: FILE: drivers/net/e1000/e1000_hw.c:4459:
+        eeprom->use_eerd = false;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#730: FILE: drivers/net/e1000/e1000_hw.c:4460:
+        eeprom->use_eewr = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#730: FILE: drivers/net/e1000/e1000_hw.c:4460:
+        eeprom->use_eewr = false;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#740: FILE: drivers/net/e1000/e1000_hw.c:4477:
+        eeprom->use_eerd = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#740: FILE: drivers/net/e1000/e1000_hw.c:4477:
+        eeprom->use_eerd = false;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#741: FILE: drivers/net/e1000/e1000_hw.c:4478:
+        eeprom->use_eewr = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#741: FILE: drivers/net/e1000/e1000_hw.c:4478:
+        eeprom->use_eewr = false;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#751: FILE: drivers/net/e1000/e1000_hw.c:4507:
+        eeprom->use_eerd = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#751: FILE: drivers/net/e1000/e1000_hw.c:4507:
+        eeprom->use_eerd = false;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#752: FILE: drivers/net/e1000/e1000_hw.c:4508:
+        eeprom->use_eewr = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#752: FILE: drivers/net/e1000/e1000_hw.c:4508:
+        eeprom->use_eewr = false;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#762: FILE: drivers/net/e1000/e1000_hw.c:4522:
+        eeprom->use_eerd = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#762: FILE: drivers/net/e1000/e1000_hw.c:4522:
+        eeprom->use_eerd = false;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#763: FILE: drivers/net/e1000/e1000_hw.c:4523:
+        eeprom->use_eewr = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#763: FILE: drivers/net/e1000/e1000_hw.c:4523:
+        eeprom->use_eewr = false;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#774: FILE: drivers/net/e1000/e1000_hw.c:4536:
+        eeprom->use_eerd = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#774: FILE: drivers/net/e1000/e1000_hw.c:4536:
+        eeprom->use_eerd = true;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#775: FILE: drivers/net/e1000/e1000_hw.c:4537:
+        eeprom->use_eewr = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#775: FILE: drivers/net/e1000/e1000_hw.c:4537:
+        eeprom->use_eewr = true;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#776: FILE: drivers/net/e1000/e1000_hw.c:4538:
+        if (!e1000_is_onboard_nvm_eeprom(hw)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#776: FILE: drivers/net/e1000/e1000_hw.c:4538:
+        if (!e1000_is_onboard_nvm_eeprom(hw)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#776: FILE: drivers/net/e1000/e1000_hw.c:4538:
+        if (!e1000_is_onboard_nvm_eeprom(hw)) {
             eeprom->type = e1000_eeprom_flash;

ERROR:CODE_INDENT: code indent should use tabs where possible
#786: FILE: drivers/net/e1000/e1000_hw.c:4559:
+        eeprom->use_eerd = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#786: FILE: drivers/net/e1000/e1000_hw.c:4559:
+        eeprom->use_eerd = true;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#787: FILE: drivers/net/e1000/e1000_hw.c:4560:
+        eeprom->use_eewr = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#787: FILE: drivers/net/e1000/e1000_hw.c:4560:
+        eeprom->use_eewr = false;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#797: FILE: drivers/net/e1000/e1000_hw.c:4568:
+        eeprom->use_eerd = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#797: FILE: drivers/net/e1000/e1000_hw.c:4568:
+        eeprom->use_eerd = false;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#798: FILE: drivers/net/e1000/e1000_hw.c:4569:
+        eeprom->use_eewr = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#798: FILE: drivers/net/e1000/e1000_hw.c:4569:
+        eeprom->use_eewr = false;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#806: FILE: drivers/net/e1000/e1000_hw.c:4576:
+                hw->eeprom_shadow_ram[i].modified = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#806: FILE: drivers/net/e1000/e1000_hw.c:4576:
+                hw->eeprom_shadow_ram[i].modified = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#816: FILE: drivers/net/e1000/e1000_hw.c:4998:
+    if (e1000_is_onboard_nvm_eeprom(hw) && !hw->eeprom.use_eerd) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#824: FILE: drivers/net/e1000/e1000_hw.c:5005:
+    if (eeprom->use_eerd)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#842: FILE: drivers/net/e1000/e1000_hw.c:5182:
+        return false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#842: FILE: drivers/net/e1000/e1000_hw.c:5182:
+        return false;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#849: FILE: drivers/net/e1000/e1000_hw.c:5191:
         if (eecd == 0x03) {
+            return false;

ERROR:CODE_INDENT: code indent should use tabs where possible
#851: FILE: drivers/net/e1000/e1000_hw.c:5192:
+            return false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#851: FILE: drivers/net/e1000/e1000_hw.c:5192:
+            return false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#855: FILE: drivers/net/e1000/e1000_hw.c:5195:
+    return true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#865: FILE: drivers/net/e1000/e1000_hw.c:5215:
+    if ((hw->mac_type == e1000_82573) && !e1000_is_onboard_nvm_eeprom(hw)) {$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hw->mac_type == e1000_82573'
#865: FILE: drivers/net/e1000/e1000_hw.c:5215:
+    if ((hw->mac_type == e1000_82573) && !e1000_is_onboard_nvm_eeprom(hw)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#874: FILE: drivers/net/e1000/e1000_hw.c:5341:
+    if (eeprom->use_eewr)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#883: FILE: drivers/net/e1000/e1000_hw.c:5538:
+    bool sector_write_failed = false;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#892: FILE: drivers/net/e1000/e1000_hw.c:5590:
+        sector_write_failed = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#892: FILE: drivers/net/e1000/e1000_hw.c:5590:
+        sector_write_failed = false;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#895: FILE: drivers/net/e1000/e1000_hw.c:5593:
         for (i = 0; i < E1000_SHADOW_RAM_WORDS; i++) {
[...]
+            if (hw->eeprom_shadow_ram[i].modified) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#900: FILE: drivers/net/e1000/e1000_hw.c:5597:
+            if (hw->eeprom_shadow_ram[i].modified) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#900: FILE: drivers/net/e1000/e1000_hw.c:5597:
+            if (hw->eeprom_shadow_ram[i].modified) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#906: FILE: drivers/net/e1000/e1000_hw.c:5603:
                 if (error != E1000_SUCCESS)
+                    sector_write_failed = true;

ERROR:CODE_INDENT: code indent should use tabs where possible
#908: FILE: drivers/net/e1000/e1000_hw.c:5604:
+                    sector_write_failed = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#908: FILE: drivers/net/e1000/e1000_hw.c:5604:
+                    sector_write_failed = true;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#915: FILE: drivers/net/e1000/e1000_hw.c:5617:
                 if (error != E1000_SUCCESS)
+                    sector_write_failed = true;

ERROR:CODE_INDENT: code indent should use tabs where possible
#917: FILE: drivers/net/e1000/e1000_hw.c:5618:
+                    sector_write_failed = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#917: FILE: drivers/net/e1000/e1000_hw.c:5618:
+                    sector_write_failed = true;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#926: FILE: drivers/net/e1000/e1000_hw.c:5626:
+            /* If the write of the low byte was successful, go ahead and$

ERROR:CODE_INDENT: code indent should use tabs where possible
#930: FILE: drivers/net/e1000/e1000_hw.c:5629:
+            if (!sector_write_failed) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#930: FILE: drivers/net/e1000/e1000_hw.c:5629:
+            if (!sector_write_failed) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#937: FILE: drivers/net/e1000/e1000_hw.c:5641:
                 if (error != E1000_SUCCESS)
+                    sector_write_failed = true;

ERROR:CODE_INDENT: code indent should use tabs where possible
#939: FILE: drivers/net/e1000/e1000_hw.c:5642:
+                    sector_write_failed = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#939: FILE: drivers/net/e1000/e1000_hw.c:5642:
+                    sector_write_failed = true;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#948: FILE: drivers/net/e1000/e1000_hw.c:5653:
+        if (!sector_write_failed) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#948: FILE: drivers/net/e1000/e1000_hw.c:5653:
+        if (!sector_write_failed) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#957: FILE: drivers/net/e1000/e1000_hw.c:5675:
+                hw->eeprom_shadow_ram[i].modified = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#957: FILE: drivers/net/e1000/e1000_hw.c:5675:
+                hw->eeprom_shadow_ram[i].modified = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#966: FILE: drivers/net/e1000/e1000_hw.c:5752:
+    if ((hw->mac_type == e1000_82571) && (hw->laa_is_present))$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hw->mac_type == e1000_82571'
#966: FILE: drivers/net/e1000/e1000_hw.c:5752:
+    if ((hw->mac_type == e1000_82571) && (hw->laa_is_present))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hw->laa_is_present'
#966: FILE: drivers/net/e1000/e1000_hw.c:5752:
+    if ((hw->mac_type == e1000_82571) && (hw->laa_is_present))

ERROR:CODE_INDENT: code indent should use tabs where possible
#975: FILE: drivers/net/e1000/e1000_hw.c:5924:
+        if (hw->leave_av_bit_off)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#975: FILE: drivers/net/e1000/e1000_hw.c:5924:
+        if (hw->leave_av_bit_off)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#975: FILE: drivers/net/e1000/e1000_hw.c:5924:
+        if (hw->leave_av_bit_off)
             break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#993: FILE: drivers/net/e1000/e1000_hw.c:6444:
+        hw->in_ifs_mode = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#993: FILE: drivers/net/e1000/e1000_hw.c:6444:
+        hw->in_ifs_mode = false;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1002: FILE: drivers/net/e1000/e1000_hw.c:6467:
+                hw->in_ifs_mode = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1002: FILE: drivers/net/e1000/e1000_hw.c:6467:
+                hw->in_ifs_mode = true;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1011: FILE: drivers/net/e1000/e1000_hw.c:6479:
+                hw->in_ifs_mode = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1011: FILE: drivers/net/e1000/e1000_hw.c:6479:
+                hw->in_ifs_mode = false;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1020: FILE: drivers/net/e1000/e1000_hw.c:6970:
+        hw->speed_downgraded = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1020: FILE: drivers/net/e1000/e1000_hw.c:6970:
+        hw->speed_downgraded = false;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1029: FILE: drivers/net/e1000/e1000_hw.c:6990:
+                                   bool link_up)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1029: FILE: drivers/net/e1000/e1000_hw.c:6990:
+                                   bool link_up)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1038: FILE: drivers/net/e1000/e1000_hw.c:7200:
+            hw->phy_reset_disable = false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1038: FILE: drivers/net/e1000/e1000_hw.c:7200:
+            hw->phy_reset_disable = false;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1047: FILE: drivers/net/e1000/e1000_hw.c:7223:
+                        bool active)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1047: FILE: drivers/net/e1000/e1000_hw.c:7223:
+                        bool active)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1056: FILE: drivers/net/e1000/e1000_hw.c:7353:
+                        bool active)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1056: FILE: drivers/net/e1000/e1000_hw.c:7353:
+                        bool active)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1074: FILE: drivers/net/e1000/e1000_hw.c:7701:
         if ((fwsm & E1000_FWSM_MODE_MASK) ==
[...]
+            return true;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1077: FILE: drivers/net/e1000/e1000_hw.c:7703:
+            return true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1077: FILE: drivers/net/e1000/e1000_hw.c:7703:
+            return true;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1081: FILE: drivers/net/e1000/e1000_hw.c:7706:
+        return true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1081: FILE: drivers/net/e1000/e1000_hw.c:7706:
+        return true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1084: FILE: drivers/net/e1000/e1000_hw.c:7708:
+    return false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1103: FILE: drivers/net/e1000/e1000_hw.c:7773:
+    bool tx_filter = false;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1112: FILE: drivers/net/e1000/e1000_hw.c:7789:
+                        tx_filter = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1112: FILE: drivers/net/e1000/e1000_hw.c:7789:
+                        tx_filter = true;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1113: FILE: drivers/net/e1000/e1000_hw.c:7790:
                 } else
+                    tx_filter = true;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1115: FILE: drivers/net/e1000/e1000_hw.c:7791:
+                    tx_filter = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1115: FILE: drivers/net/e1000/e1000_hw.c:7791:
+                    tx_filter = true;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1118: FILE: drivers/net/e1000/e1000_hw.c:7793:
+                tx_filter = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1118: FILE: drivers/net/e1000/e1000_hw.c:7793:
+                tx_filter = true;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1133: FILE: drivers/net/e1000/e1000_hw.c:7818:
         if (!(manc & E1000_MANC_RCV_TCO_EN) ||
[...]
+            return false;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1137: FILE: drivers/net/e1000/e1000_hw.c:7820:
+            return false;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1137: FILE: drivers/net/e1000/e1000_hw.c:7820:
+            return false;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1138: FILE: drivers/net/e1000/e1000_hw.c:7821:
+        if (e1000_arc_subsystem_valid(hw)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1138: FILE: drivers/net/e1000/e1000_hw.c:7821:
+        if (e1000_arc_subsystem_valid(hw)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1138: FILE: drivers/net/e1000/e1000_hw.c:7821:
+        if (e1000_arc_subsystem_valid(hw)) {
             fwsm = E1000_READ_REG(hw, FWSM);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1145: FILE: drivers/net/e1000/e1000_hw.c:7827:
+                return true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1145: FILE: drivers/net/e1000/e1000_hw.c:7827:
+                return true;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1149: FILE: drivers/net/e1000/e1000_hw.c:7830:
+                return true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1149: FILE: drivers/net/e1000/e1000_hw.c:7830:
+                return true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1152: FILE: drivers/net/e1000/e1000_hw.c:7832:
+    return false;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1159: FILE: drivers/net/e1000/e1000_hw.c:8265:
         if ((fwsm & E1000_FWSM_MODE_MASK) != 0)
+            return true;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1161: FILE: drivers/net/e1000/e1000_hw.c:8266:
+            return true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1161: FILE: drivers/net/e1000/e1000_hw.c:8266:
+            return true;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1165: FILE: drivers/net/e1000/e1000_hw.c:8269:
+        return true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1165: FILE: drivers/net/e1000/e1000_hw.c:8269:
+        return true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1170: FILE: drivers/net/e1000/e1000_hw.c:8273:
+    return false;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1179: FILE: drivers/net/e1000/e1000_hw.c:8419:
+            hw->eeprom_shadow_ram[offset+i].modified) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1179: FILE: drivers/net/e1000/e1000_hw.c:8419:
+            hw->eeprom_shadow_ram[offset+i].modified) {$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1179: FILE: drivers/net/e1000/e1000_hw.c:8419:
+            hw->eeprom_shadow_ram[offset+i].modified) {
                                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1188: FILE: drivers/net/e1000/e1000_hw.c:8468:
+                hw->eeprom_shadow_ram[offset+i].modified = true;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1188: FILE: drivers/net/e1000/e1000_hw.c:8468:
+                hw->eeprom_shadow_ram[offset+i].modified = true;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1188: FILE: drivers/net/e1000/e1000_hw.c:8468:
+                hw->eeprom_shadow_ram[offset+i].modified = true;
                                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1202: FILE: drivers/net/e1000/e1000_hw.h:103:
+    uint16_t eeprom_word;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1202: FILE: drivers/net/e1000/e1000_hw.h:103:
+    uint16_t eeprom_word;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1203: FILE: drivers/net/e1000/e1000_hw.h:104:
+    bool modified;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1213: FILE: drivers/net/e1000/e1000_hw.h:277:
+    bool use_eerd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1214: FILE: drivers/net/e1000/e1000_hw.h:278:
+    bool use_eewr;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1572: FILE: drivers/net/e1000/e1000_main.c:3906:
+	 * need for the IMC write */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1861: FILE: drivers/net/e1000e/netdev.c:895:
+	 * need for the IMC write */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1956: FILE: drivers/net/forcedeth.c:3863:
+		mod_timer(&np->stats_poll,
+			round_jiffies(jiffies + STATS_INTERVAL));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1966: FILE: drivers/net/forcedeth.c:5068:
+		mod_timer(&np->stats_poll,
+			round_jiffies(jiffies + STATS_INTERVAL));

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2070: FILE: drivers/net/gianfar.h:343:
+#define RXBD_ERR^I^I(RXBD_LARGE | RXBD_SHORT | RXBD_NONOCTET ^I\$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2188: FILE: drivers/net/ixgb/ixgb.h:202:
+	/* TBD
+	__IXGB_TESTING,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2199: FILE: drivers/net/ixgb/ixgb.h:214:
+extern int ixgb_up(struct ixgb_adapter *adapter);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2200: FILE: drivers/net/ixgb/ixgb.h:215:
+extern void ixgb_down(struct ixgb_adapter *adapter, bool kill_watchdog);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2201: FILE: drivers/net/ixgb/ixgb.h:216:
+extern void ixgb_reset(struct ixgb_adapter *adapter);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2202: FILE: drivers/net/ixgb/ixgb.h:217:
+extern int ixgb_setup_rx_resources(struct ixgb_adapter *adapter);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2203: FILE: drivers/net/ixgb/ixgb.h:218:
+extern int ixgb_setup_tx_resources(struct ixgb_adapter *adapter);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2204: FILE: drivers/net/ixgb/ixgb.h:219:
+extern void ixgb_free_rx_resources(struct ixgb_adapter *adapter);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2205: FILE: drivers/net/ixgb/ixgb.h:220:
+extern void ixgb_free_tx_resources(struct ixgb_adapter *adapter);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2206: FILE: drivers/net/ixgb/ixgb.h:221:
+extern void ixgb_update_stats(struct ixgb_adapter *adapter);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2208: FILE: drivers/net/ixgb/ixgb.h:223:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#2248: FILE: drivers/net/ixgb/ixgb_ee.c:309:
+	return (false);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#2297: FILE: drivers/net/ixgb/ixgb_ee.c:487:
+		return (false);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#2304: FILE: drivers/net/ixgb/ixgb_ee.c:493:
+		return(false);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#2330: FILE: drivers/net/ixgb/ixgb_ee.c:516:
+		return (true);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#2526: FILE: drivers/net/ixgb/ixgb_hw.c:339:
+		return(false);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2647: FILE: drivers/net/ixgb/ixgb_hw.h:653:
+    (bool)(((uint8_t *)(Address))[0] & ((uint8_t)0x01))$

CHECK:CAMELCASE: Avoid CamelCase: <Address>
#2647: FILE: drivers/net/ixgb/ixgb_hw.h:653:
+    (bool)(((uint8_t *)(Address))[0] & ((uint8_t)0x01))

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2678: FILE: drivers/net/ixgb/ixgb_hw.h:786:
+extern bool ixgb_adapter_stop(struct ixgb_hw *hw);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2679: FILE: drivers/net/ixgb/ixgb_hw.h:787:
+extern bool ixgb_init_hw(struct ixgb_hw *hw);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2680: FILE: drivers/net/ixgb/ixgb_hw.h:788:
+extern bool ixgb_adapter_start(struct ixgb_hw *hw);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2683: FILE: drivers/net/ixgb/ixgb_hw.h:790:
+extern bool ixgb_check_for_bad_link(struct ixgb_hw *hw);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2705: FILE: drivers/net/ixgb/ixgb_main.c:70:
+void ixgb_down(struct ixgb_adapter *adapter, bool kill_watchdog);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#3028: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3033: FILE: drivers/net/korina.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#3058: FILE: drivers/net/korina.c:26:
+ *  675 Mass Ave, Cambridge, MA 02139, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#3091: FILE: drivers/net/korina.c:59:
+#include <asm/bitops.h>

WARNING:INCLUDE_LINUX: Use #include <linux/pgtable.h> instead of <asm/pgtable.h>
#3092: FILE: drivers/net/korina.c:60:
+#include <asm/pgtable.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#3094: FILE: drivers/net/korina.c:62:
+#include <asm/io.h>

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dev' - possible side-effects?
#3106: FILE: drivers/net/korina.c:74:
+#define STATION_ADDRESS_HIGH(dev) (((dev)->dev_addr[0] << 8) | \
+				   ((dev)->dev_addr[1]))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dev' - possible side-effects?
#3108: FILE: drivers/net/korina.c:76:
+#define STATION_ADDRESS_LOW(dev)  (((dev)->dev_addr[2] << 24) | \
+				   ((dev)->dev_addr[3] << 16) | \
+				   ((dev)->dev_addr[4] << 8)  | \
+				   ((dev)->dev_addr[5]))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3113: FILE: drivers/net/korina.c:81:
+#define MII_CLOCK 1250000 ^I/* no more than 2.5MHz */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3122: FILE: drivers/net/korina.c:90:
+#define RD_RING_SIZE ^I(KORINA_NUM_RDS * sizeof(struct dma_desc))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3125: FILE: drivers/net/korina.c:93:
+#define TX_TIMEOUT ^I(6000 * HZ / 1000)$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#3170: FILE: drivers/net/korina.c:138:
+extern unsigned int idt_cpu_freq;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3179: FILE: drivers/net/korina.c:147:
+static inline void korina_abort_dma(struct net_device *dev,
+					struct dma_reg *ch)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3181: FILE: drivers/net/korina.c:149:
+       if (readl(&ch->dmac) & DMA_CHAN_RUN_BIT) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#3181: FILE: drivers/net/korina.c:149:
+       if (readl(&ch->dmac) & DMA_CHAN_RUN_BIT) {
+	       writel(0x10, &ch->dmac);

WARNING:TABSTOP: Statements should start on a tabstop
#3184: FILE: drivers/net/korina.c:152:
+	       while (!(readl(&ch->dmas) & DMA_STAT_HALT))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#3184: FILE: drivers/net/korina.c:152:
+	       while (!(readl(&ch->dmas) & DMA_STAT_HALT))
+		       dev->trans_start = jiffies;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3188: FILE: drivers/net/korina.c:156:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3190: FILE: drivers/net/korina.c:158:
+       writel(0, &ch->dmadptr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3191: FILE: drivers/net/korina.c:159:
+       writel(0, &ch->dmandptr);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3214: FILE: drivers/net/korina.c:182:
+static void korina_start_rx(struct korina_private *lp,
+					struct dma_desc *rd)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3220: FILE: drivers/net/korina.c:188:
+static void korina_chain_rx(struct korina_private *lp,
+					struct dma_desc *rd)

CHECK:BRACES: braces {} should be used on all arms of this statement
#3242: FILE: drivers/net/korina.c:210:
+		if (lp->tx_count == (KORINA_NUM_TDS - 2))
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#3244: FILE: drivers/net/korina.c:212:
+		else {

CHECK:SPACING: No space is necessary after a cast
#3261: FILE: drivers/net/korina.c:229:
+	dma_cache_inv((u32) td, sizeof(*td));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around lp->tx_dma_regs->dmandptr
#3266: FILE: drivers/net/korina.c:234:
+	if (readl(&(lp->tx_dma_regs->dmandptr)) == 0) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3275: FILE: drivers/net/korina.c:243:
+			writel(CPHYSADDR(&lp->td_ring[lp->tx_chain_head]),
+					&lp->tx_dma_regs->dmandptr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3291: FILE: drivers/net/korina.c:259:
+			writel(CPHYSADDR(&lp->td_ring[lp->tx_chain_head]),
+					&(lp->tx_dma_regs->dmandptr));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around lp->tx_dma_regs->dmandptr
#3291: FILE: drivers/net/korina.c:259:
+					&(lp->tx_dma_regs->dmandptr));

CHECK:SPACING: No space is necessary after a cast
#3315: FILE: drivers/net/korina.c:283:
+	dma_cache_wback((u32) td, sizeof(*td));

CHECK:BRACES: braces {} should be used on all arms of this statement
#3361: FILE: drivers/net/korina.c:329:
+	if (dmas & (DMA_STAT_DONE | DMA_STAT_HALT | DMA_STAT_ERR)) {
[...]
+	} else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3370: FILE: drivers/net/korina.c:338:
+			printk(KERN_ERR DRV_NAME "%s: DMA error\n", dev->name);

CHECK:BRACES: Unbalanced braces around else statement
#3373: FILE: drivers/net/korina.c:341:
+	} else

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#3391: FILE: drivers/net/korina.c:359:
+	for (count = 0; count < limit; count++) {
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3413: FILE: drivers/net/korina.c:381:
+			 * in Rc32434 (errata ref #077) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3420: FILE: drivers/net/korina.c:388:
+			 * operations within the while loop */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3427: FILE: drivers/net/korina.c:395:
+				 * descriptor then */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3480: FILE: drivers/net/korina.c:448:
+		writel(~(DMA_STAT_HALT | DMA_STAT_ERR),
+				&lp->rx_dma_regs->dmas);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#3512: FILE: drivers/net/korina.c:480:
+/*
+ * Set or clear the multicast filter for this adaptor.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3555: FILE: drivers/net/korina.c:523:
+		writel((u32)(hash_table[1] << 16 | hash_table[0]),
+					&lp->eth_regs->ethhash0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3557: FILE: drivers/net/korina.c:525:
+		writel((u32)(hash_table[3] << 16 | hash_table[2]),
+					&lp->eth_regs->ethhash1);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3588: FILE: drivers/net/korina.c:556:
+			printk(KERN_ERR DRV_NAME "%s: split tx ignored\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3589: FILE: drivers/net/korina.c:557:
+			printk(KERN_ERR DRV_NAME "%s: split tx ignored\n",
+							dev->name);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#3635: FILE: drivers/net/korina.c:603:
+
+	}

CHECK:BRACES: braces {} should be used on all arms of this statement
#3658: FILE: drivers/net/korina.c:626:
+	if (dmas & (DMA_STAT_FINI | DMA_STAT_ERR)) {
[...]
+	} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3663: FILE: drivers/net/korina.c:631:
+		writel(dmasm | (DMA_STAT_FINI | DMA_STAT_ERR),
+				&lp->tx_dma_regs->dmasm);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3666: FILE: drivers/net/korina.c:634:
+		if (lp->tx_chain_status == desc_filled &&
+			(readl(&(lp->tx_dma_regs->dmandptr)) == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around lp->tx_dma_regs->dmandptr
#3666: FILE: drivers/net/korina.c:634:
+			(readl(&(lp->tx_dma_regs->dmandptr)) == 0)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3668: FILE: drivers/net/korina.c:636:
+			writel(CPHYSADDR(&lp->td_ring[lp->tx_chain_head]),
+				&(lp->tx_dma_regs->dmandptr));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around lp->tx_dma_regs->dmandptr
#3668: FILE: drivers/net/korina.c:636:
+				&(lp->tx_dma_regs->dmandptr));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3674: FILE: drivers/net/korina.c:642:
+			printk(KERN_ERR DRV_NAME "%s: DMA error\n", dev->name);

CHECK:BRACES: Unbalanced braces around else statement
#3677: FILE: drivers/net/korina.c:645:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3683: FILE: drivers/net/korina.c:651:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3692: FILE: drivers/net/korina.c:660:
+		writel(readl(&lp->eth_regs->ethmac2) | ETH_MAC2_FD,
+						&lp->eth_regs->ethmac2);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3695: FILE: drivers/net/korina.c:663:
+		writel(readl(&lp->eth_regs->ethmac2) & ~ETH_MAC2_FD,
+						&lp->eth_regs->ethmac2);

CHECK:BRACES: Unbalanced braces around else statement
#3704: FILE: drivers/net/korina.c:672:
+	} else  /* Let MMI library update carrier status */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3726: FILE: drivers/net/korina.c:694:
+static void netdev_get_drvinfo(struct net_device *dev,
+			struct ethtool_drvinfo *info)

WARNING:CONST_STRUCT: struct ethtool_ops should normally be const
#3767: FILE: drivers/net/korina.c:735:
+static struct ethtool_ops netdev_ethtool_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#3786: FILE: drivers/net/korina.c:754:
+	lp->tx_next_done = lp->tx_chain_head = lp->tx_chain_tail =

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#3787: FILE: drivers/net/korina.c:755:
+			lp->tx_full = lp->tx_count = 0;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3803: FILE: drivers/net/korina.c:771:
+		lp->rd_ring[i].link = CPHYSADDR(&lp->rd_ring[i+1]);
 		                                              ^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#3837: FILE: drivers/net/korina.c:805:
+/*
+ * Initialize the RC32434 ethernet controller.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3885: FILE: drivers/net/korina.c:853:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3888: FILE: drivers/net/korina.c:856:
+	writel(ETH_MAC2_PE | ETH_MAC2_CEN | ETH_MAC2_FD,
+			&lp->eth_regs->ethmac2);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3896: FILE: drivers/net/korina.c:864:
+	 * Clock independent setting */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3898: FILE: drivers/net/korina.c:866:
+	writel(((idt_cpu_freq) / MII_CLOCK + 1) & ~1,
+		       &lp->eth_regs->ethmcp);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#3912: FILE: drivers/net/korina.c:880:
+/*
+ * Restart the RC32434 ethernet controller.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#3921: FILE: drivers/net/korina.c:889:
+	/*
+	 * Disable interrupts

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3939: FILE: drivers/net/korina.c:907:
+		printk(KERN_ERR DRV_NAME "%s: cannot restart device\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3940: FILE: drivers/net/korina.c:908:
+		printk(KERN_ERR DRV_NAME "%s: cannot restart device\n",
+								dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4027: FILE: drivers/net/korina.c:995:
+		printk(KERN_ERR DRV_NAME "%s: cannot open device\n", dev->name);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#4033: FILE: drivers/net/korina.c:1001:
+	 * Ovr and Und Events */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4035: FILE: drivers/net/korina.c:1003:
+	ret = request_irq(lp->rx_irq, &korina_rx_dma_interrupt,
+		IRQF_SHARED | IRQF_DISABLED, "Korina ethernet Rx", dev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4037: FILE: drivers/net/korina.c:1005:
+		printk(KERN_ERR DRV_NAME "%s: unable to get Rx DMA IRQ %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4038: FILE: drivers/net/korina.c:1006:
+		printk(KERN_ERR DRV_NAME "%s: unable to get Rx DMA IRQ %d\n",
+		    dev->name, lp->rx_irq);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4042: FILE: drivers/net/korina.c:1010:
+	ret = request_irq(lp->tx_irq, &korina_tx_dma_interrupt,
+		IRQF_SHARED | IRQF_DISABLED, "Korina ethernet Tx", dev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4044: FILE: drivers/net/korina.c:1012:
+		printk(KERN_ERR DRV_NAME "%s: unable to get Tx DMA IRQ %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4045: FILE: drivers/net/korina.c:1013:
+		printk(KERN_ERR DRV_NAME "%s: unable to get Tx DMA IRQ %d\n",
+		    dev->name, lp->tx_irq);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4051: FILE: drivers/net/korina.c:1019:
+	ret = request_irq(lp->ovr_irq, &korina_ovr_interrupt,
+			IRQF_SHARED | IRQF_DISABLED, "Ethernet Overflow", dev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4053: FILE: drivers/net/korina.c:1021:
+		printk(KERN_ERR DRV_NAME"%s: unable to get OVR IRQ %d\n",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#4053: FILE: drivers/net/korina.c:1021:
+		printk(KERN_ERR DRV_NAME"%s: unable to get OVR IRQ %d\n",

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4054: FILE: drivers/net/korina.c:1022:
+		printk(KERN_ERR DRV_NAME"%s: unable to get OVR IRQ %d\n",
+		    dev->name, lp->ovr_irq);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4060: FILE: drivers/net/korina.c:1028:
+	ret = request_irq(lp->und_irq, &korina_und_interrupt,
+			IRQF_SHARED | IRQF_DISABLED, "Ethernet Underflow", dev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4062: FILE: drivers/net/korina.c:1030:
+		printk(KERN_ERR DRV_NAME "%s: unable to get UND IRQ %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4063: FILE: drivers/net/korina.c:1031:
+		printk(KERN_ERR DRV_NAME "%s: unable to get UND IRQ %d\n",
+		    dev->name, lp->und_irq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4121: FILE: drivers/net/korina.c:1089:
+		printk(KERN_ERR DRV_NAME ": alloc_etherdev failed\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4140: FILE: drivers/net/korina.c:1108:
+		printk(KERN_ERR DRV_NAME "cannot remap registers\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4148: FILE: drivers/net/korina.c:1116:
+		printk(KERN_ERR DRV_NAME "cannot remap Rx DMA registers\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4156: FILE: drivers/net/korina.c:1124:
+		printk(KERN_ERR DRV_NAME "cannot remap Tx DMA registers\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4163: FILE: drivers/net/korina.c:1131:
+		printk(KERN_ERR DRV_NAME "cannot allocate descriptors\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#4163: FILE: drivers/net/korina.c:1131:
+	if (!lp->td_ring) {
+		printk(KERN_ERR DRV_NAME "cannot allocate descriptors\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4169: FILE: drivers/net/korina.c:1137:
+	dma_cache_inv((unsigned long)(lp->td_ring),
+			TD_RING_SIZE + RD_RING_SIZE);

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#4193: FILE: drivers/net/korina.c:1161:
+	lp->phy_addr = (((lp->rx_irq == 0x2c? 1:0) << 8) | 0x05);
 	                                    ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#4193: FILE: drivers/net/korina.c:1161:
+	lp->phy_addr = (((lp->rx_irq == 0x2c? 1:0) << 8) | 0x05);
 	                                       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4203: FILE: drivers/net/korina.c:1171:
+		printk(KERN_ERR DRV_NAME

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#4275: FILE: drivers/net/mv643xx_eth.c:3159:
+#define MV643XX_STAT(m) FIELD_SIZEOF(struct mv643xx_private, m), \
 					offsetof(struct mv643xx_private, m)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm' - possible side-effects?
#4275: FILE: drivers/net/mv643xx_eth.c:3159:
+#define MV643XX_STAT(m) FIELD_SIZEOF(struct mv643xx_private, m), \
 					offsetof(struct mv643xx_private, m)

CHECK:SPACING: No space is necessary after a cast
#4319: FILE: drivers/net/ni52.c:137:
+#define make32(ptr16) ((void __iomem *)(p->memtop + (short) (ptr16)))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#4320: FILE: drivers/net/ni52.c:138:
+#define make24(ptr32) ((char __iomem *)(ptr32)) - p->base

CHECK:SPACING: No space is necessary after a cast
#4321: FILE: drivers/net/ni52.c:139:
+#define make16(ptr32) ((unsigned short) ((char __iomem *)(ptr32)\

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4331: FILE: drivers/net/ni52.c:182:
+static int     check586(struct net_device *dev, unsigned size);

WARNING:LINE_SPACING: Missing a blank line after declarations
#4406: FILE: drivers/net/ni52.c:302:
+	struct priv *p = dev->priv;
+	memset_io(iscp, 0, sizeof(struct iscp_struct));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#4424: FILE: drivers/net/ni52.c:319:
+static int check586(struct net_device *dev, unsigned size)

CHECK:SPACING: No space is necessary after a cast
#4444: FILE: drivers/net/ni52.c:331:
+	p->scb	= (struct scb_struct __iomem *)	p->mapped;

CHECK:CAMELCASE: Avoid CamelCase: <Enodev>
#4452: FILE: drivers/net/ni52.c:337:
+			goto Enodev;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4698: FILE: drivers/net/ni52.c:726:
+			memcpy_toio(mc_cmd->mc_list[i],
 							dmi->dmi_addr, 6);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4753: FILE: drivers/net/ni52.c:779:
+		memset_io(p->xmit_cmds[i], 0,
 					sizeof(struct transmit_cmd_struct));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4756: FILE: drivers/net/ni52.c:781:
+		memset_io(p->xmit_buffs[i], 0,
 					sizeof(struct tbd_struct));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4775: FILE: drivers/net/ni52.c:835:
+	memset_io(rfd, 0,
 		sizeof(struct rfd_struct) * (p->num_recv_buffs + rfdadd));

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#4844: FILE: drivers/net/ni52.c:970:
+					memcpy_fromio(skb->data, p->base + readl(&rbd->buffer), totlen);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#4876: FILE: drivers/net/ni52.c:1056:
+	printk(KERN_ERR "%s: Receive-Unit restarted. Status: %04x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4877: FILE: drivers/net/ni52.c:1057:
+	printk(KERN_ERR "%s: Receive-Unit restarted. Status: %04x\n",
+		dev->name, readb(&p->scb->rus));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#4892: FILE: drivers/net/ni52.c:1193:
+		memset_io(p->xmit_cbuffs[p->xmit_count]+skb->len, 0,
 		                                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4893: FILE: drivers/net/ni52.c:1194:
+		memset_io(p->xmit_cbuffs[p->xmit_count]+skb->len, 0,
 							len - skb->len);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#4958: FILE: drivers/net/phy/broadcom.c:114:
+		/*
+		 * There is no BCM5481 specification available, so down

WARNING:TYPO_SPELLING: 'successfuly' may be misspelled - perhaps 'successfully'?
#4960: FILE: drivers/net/phy/broadcom.c:116:
+		 * at least helps BCM5481 to successfuly receive packets
 		                             ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4999: FILE: drivers/net/phy/broadcom.c:190:
+^I.driver ^I= { .owner = THIS_MODULE },$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#5082: FILE: drivers/net/s2io.c:7093:
+						"Data:0x%llx\n",sp->desc[i],
 						               ^

WARNING:SPLIT_STRING: quoted string split across lines
#5082: FILE: drivers/net/s2io.c:7093:
 					DBG_PRINT(ERR_DBG, "%s @ Addr:0x%llx "
+						"Data:0x%llx\n",sp->desc[i],

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#5097: FILE: drivers/net/s2io.c:7111:
+						"Data:0x%llx\n",sp->desc[i],
 						               ^

WARNING:SPLIT_STRING: quoted string split across lines
#5097: FILE: drivers/net/s2io.c:7111:
 					DBG_PRINT(ERR_DBG, "%s @ Addr:0x%llx "
+						"Data:0x%llx\n",sp->desc[i],

WARNING:SPACING: space prohibited before semicolon
#5116: FILE: drivers/net/skfp/fplustm.c:404:
+	__le32	*p ;

CHECK:SPACING: No space is necessary after a cast
#5122: FILE: drivers/net/skfp/fplustm.c:409:
+	p = (__le32 *) mac ;

WARNING:SPACING: space prohibited before semicolon
#5122: FILE: drivers/net/skfp/fplustm.c:409:
+	p = (__le32 *) mac ;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#5129: FILE: drivers/net/skfp/fplustm.c:415:
+		write_mdr(smc,le32_to_cpu(*p)) ;
 		             ^

WARNING:SPACING: space prohibited before semicolon
#5129: FILE: drivers/net/skfp/fplustm.c:415:
+		write_mdr(smc,le32_to_cpu(*p)) ;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#5138: FILE: drivers/net/skfp/fplustm.c:447:
+	SK_LOC_DECL(__le32,a[2]) ;
 	                  ^

WARNING:SPACING: space prohibited before semicolon
#5138: FILE: drivers/net/skfp/fplustm.c:447:
+	SK_LOC_DECL(__le32,a[2]) ;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#5147: FILE: drivers/net/skfp/fplustm.c:461:
+	write_mdr(smc,le32_to_cpu(a[0])) ;
 	             ^

WARNING:SPACING: space prohibited before semicolon
#5147: FILE: drivers/net/skfp/fplustm.c:461:
+	write_mdr(smc,le32_to_cpu(a[0])) ;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#5150: FILE: drivers/net/skfp/fplustm.c:463:
+	write_mdr(smc,le32_to_cpu(a[1])) ;
 	             ^

WARNING:SPACING: space prohibited before semicolon
#5150: FILE: drivers/net/skfp/fplustm.c:463:
+	write_mdr(smc,le32_to_cpu(a[1])) ;

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#5203: FILE: drivers/net/skfp/hwmtm.c:211:
+#define CR_READ(var)	(__le32)(var)

WARNING:SPACING: space prohibited before semicolon
#5212: FILE: drivers/net/skfp/hwmtm.c:346:
+		d2->r.rxd_rbctrl = cpu_to_le32(BMU_CHECK) ;

WARNING:SPACING: space prohibited before semicolon
#5216: FILE: drivers/net/skfp/hwmtm.c:349:
+		d2->r.rxd_nrdadr = cpu_to_le32(phys) ;

WARNING:SPACING: space prohibited before semicolon
#5220: FILE: drivers/net/skfp/hwmtm.c:352:
+	d1->r.rxd_rbctrl = cpu_to_le32(BMU_CHECK) ;

WARNING:SPACING: space prohibited before semicolon
#5224: FILE: drivers/net/skfp/hwmtm.c:355:
+	d1->r.rxd_nrdadr = cpu_to_le32(phys) ;

WARNING:SPACING: space prohibited before semicolon
#5233: FILE: drivers/net/skfp/hwmtm.c:379:
+	phys = le32_to_cpu(ds->txd_ntdadr) ;

WARNING:SPACING: space prohibited before semicolon
#5242: FILE: drivers/net/skfp/hwmtm.c:393:
+	phys = le32_to_cpu(ds->txd_ntdadr) ;

WARNING:SPACING: space prohibited before semicolon
#5251: FILE: drivers/net/skfp/hwmtm.c:415:
+	phys = le32_to_cpu(ds->rxd_nrdadr) ;

WARNING:SPACING: space prohibited before semicolon
#5260: FILE: drivers/net/skfp/hwmtm.c:610:
+	phys = le32_to_cpu(t->txd_ntdadr) ;

WARNING:SPACING: space prohibited before semicolon
#5266: FILE: drivers/net/skfp/hwmtm.c:615:
+		tbctrl = le32_to_cpu(t->txd_tbctrl) ;

WARNING:SPACING: space prohibited before semicolon
#5275: FILE: drivers/net/skfp/hwmtm.c:625:
+				t->txd_tbctrl &= ~cpu_to_le32(BMU_OWN) ;

WARNING:SPACING: space prohibited before semicolon
#5279: FILE: drivers/net/skfp/hwmtm.c:628:
+		phys = le32_to_cpu(t->txd_ntdadr) ;

WARNING:SPACING: space prohibited before semicolon
#5288: FILE: drivers/net/skfp/hwmtm.c:662:
+	phys = le32_to_cpu(r->rxd_nrdadr) ;

WARNING:SPACING: space prohibited before semicolon
#5294: FILE: drivers/net/skfp/hwmtm.c:667:
+		rbctrl = le32_to_cpu(r->rxd_rbctrl) ;

WARNING:SPACING: space prohibited before semicolon
#5303: FILE: drivers/net/skfp/hwmtm.c:677:
+				r->rxd_rbctrl &= ~cpu_to_le32(BMU_OWN) ;

WARNING:SPACING: space prohibited before semicolon
#5307: FILE: drivers/net/skfp/hwmtm.c:680:
+		phys = le32_to_cpu(r->rxd_nrdadr) ;

WARNING:SPACING: space prohibited before semicolon
#5326: FILE: drivers/net/skfp/hwmtm.c:1120:
+			rfsw = le32_to_cpu(r->rxd_rfsw) ;

WARNING:SPACING: space prohibited before semicolon
#5344: FILE: drivers/net/skfp/hwmtm.c:1173:
+		rxd->rxd_rbctrl &= cpu_to_le32(~BMU_STF) ;

WARNING:SPACING: space prohibited before semicolon
#5353: FILE: drivers/net/skfp/hwmtm.c:1289:
+				n = le32_to_cpu(r->rxd_rbctrl) & RD_LENGTH ;

WARNING:SPACING: space prohibited before semicolon
#5370: FILE: drivers/net/skfp/hwmtm.c:1434:
+	r->rxd_rbadr = cpu_to_le32(phys) ;

ERROR:SPACING: space prohibited after that open parenthesis '('
#5371: FILE: drivers/net/skfp/hwmtm.c:1435:
+	rbctrl = cpu_to_le32( (((__u32)frame_status &

ERROR:SPACING: space required after that ',' (ctx:VxV)
#5380: FILE: drivers/net/skfp/hwmtm.c:1446:
+	NDD_TRACE("RHfE",r,le32_to_cpu(r->rxd_rbadr),0) ;
 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#5380: FILE: drivers/net/skfp/hwmtm.c:1446:
+	NDD_TRACE("RHfE",r,le32_to_cpu(r->rxd_rbadr),0) ;
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#5380: FILE: drivers/net/skfp/hwmtm.c:1446:
+	NDD_TRACE("RHfE",r,le32_to_cpu(r->rxd_rbadr),0) ;
 	                                            ^

WARNING:SPACING: space prohibited before semicolon
#5380: FILE: drivers/net/skfp/hwmtm.c:1446:
+	NDD_TRACE("RHfE",r,le32_to_cpu(r->rxd_rbadr),0) ;

WARNING:SPACING: space prohibited before semicolon
#5389: FILE: drivers/net/skfp/hwmtm.c:1496:
+		r->rxd_rbctrl &= ~cpu_to_le32(BMU_OWN) ;

WARNING:SPACING: space prohibited before semicolon
#5399: FILE: drivers/net/skfp/hwmtm.c:1504:
+			r->rxd_rbctrl &= ~cpu_to_le32(BMU_OWN) ;

WARNING:SPACING: space prohibited before semicolon
#5408: FILE: drivers/net/skfp/hwmtm.c:1642:
+	__le32	tbctrl ;

WARNING:SPACING: space prohibited before semicolon
#5419: FILE: drivers/net/skfp/hwmtm.c:1659:
+		t->txd_txdscr = cpu_to_le32(smc->os.hwm.tx_descr) ;

WARNING:SPACING: space prohibited before semicolon
#5420: FILE: drivers/net/skfp/hwmtm.c:1660:
+		t->txd_tbadr = cpu_to_le32(phys) ;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#5441: FILE: drivers/net/skfp/hwmtm.c:1897:
+					(((__u32)(mb->sm_len-1)&3) << 27)) ;
 					                    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#5441: FILE: drivers/net/skfp/hwmtm.c:1897:
+					(((__u32)(mb->sm_len-1)&3) << 27)) ;
 					                       ^

WARNING:SPACING: space prohibited before semicolon
#5441: FILE: drivers/net/skfp/hwmtm.c:1897:
+					(((__u32)(mb->sm_len-1)&3) << 27)) ;

WARNING:SPACING: space prohibited before semicolon
#5448: FILE: drivers/net/skfp/hwmtm.c:1902:
+			t->txd_tbadr = cpu_to_le32(phys) ;

WARNING:SPACING: space prohibited before semicolon
#5468: FILE: drivers/net/skfp/hwmtm.c:1985:
+				tbctrl = le32_to_cpu(t1->txd_tbctrl) ;

WARNING:SPACING: space prohibited before semicolon
#5477: FILE: drivers/net/skfp/hwmtm.c:2065:
+			t->txd_tbctrl &= ~cpu_to_le32(BMU_OWN) ;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#5486: FILE: drivers/net/skfp/hwmtm.c:2087:
+			outpd(ADDR(B5_XS_DA),le32_to_cpu(t->txd_ntdadr)) ;
 			                    ^

WARNING:SPACING: space prohibited before semicolon
#5486: FILE: drivers/net/skfp/hwmtm.c:2087:
+			outpd(ADDR(B5_XS_DA),le32_to_cpu(t->txd_ntdadr)) ;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#5490: FILE: drivers/net/skfp/hwmtm.c:2090:
+			outpd(ADDR(B5_XA_DA),le32_to_cpu(t->txd_ntdadr)) ;
 			                    ^

WARNING:SPACING: space prohibited before semicolon
#5490: FILE: drivers/net/skfp/hwmtm.c:2090:
+			outpd(ADDR(B5_XA_DA),le32_to_cpu(t->txd_ntdadr)) ;

CHECK:SPACING: No space is necessary after a cast
#5512: FILE: drivers/net/skfp/skfddi.c:1647:
+		ri = ntohs(*((__be16 *) cp));

CHECK:SPACING: No space is necessary after a cast
#5543: FILE: drivers/net/usb/dm9601.c:252:
+	__le16 *ebuf = (__le16 *) data;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000303315.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 107 errors, 216 warnings, 95 checks, 4979 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000303315.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
