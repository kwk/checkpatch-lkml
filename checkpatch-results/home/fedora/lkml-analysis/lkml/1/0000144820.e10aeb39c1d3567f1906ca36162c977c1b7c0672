WARNING:TYPO_SPELLING: 'calclation' may be misspelled - perhaps 'calculation'?
#59: 
 - change "bonus" calclation of victime.
                  ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#118: FILE: mm/memcontrol.c:1132:
+#define SLCACHE_UPDATE_JIFFIES (HZ*5) /* 5 minutes is very long. */
                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#139: FILE: mm/memcontrol.c:1153:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#142: FILE: mm/memcontrol.c:1156:
+static noinline void reload_softlimit_victim(struct soft_limit_cache *slc,
+				    struct zone *zone, int file)

WARNING:LINE_SPACING: Missing a blank line after declarations
#201: FILE: mm/memcontrol.c:1215:
+		unsigned long estimated_excess;
+		estimated_excess = totalram_pages/SLQ_PRIO_FACTOR;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#201: FILE: mm/memcontrol.c:1215:
+		estimated_excess = totalram_pages/SLQ_PRIO_FACTOR;
 		                                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#211: FILE: mm/memcontrol.c:1225:
+		if (!mem->use_hierarchy || (usage > estimated_excess/8))
 		                                                    ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#246: FILE: mm/memcontrol.c:1260:
+
+

CHECK:SPACING: No space is necessary after a cast
#263: FILE: mm/memcontrol.c:2957:
+	long cpu = (long) hcpu;

WARNING:MISPLACED_INIT: __cpuinitdata should be placed after soft_limit_notifier
#276: FILE: mm/memcontrol.c:2970:
+static struct notifier_block __cpuinitdata soft_limit_notifier = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#285: FILE: mm/memcontrol.c:2979:
+__initcall(memcg_cpuhp_init);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000144820.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 7 checks, 213 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000144820.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
