CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#81: FILE: drivers/staging/p9auth/p9auth.c:191:
+	tmpu = set->full = kstrdup(s, GFP_KERNEL);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#93: FILE: drivers/staging/p9auth/p9auth.c:203:
+	set->new_uid = simple_strtoul(set->target_user, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#94: FILE: drivers/staging/p9auth/p9auth.c:204:
+	set->old_uid = simple_strtoul(set->source_user, NULL, 0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#109: FILE: drivers/staging/p9auth/p9auth.c:219:
+		printk(KERN_ALERT

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*node_ptr)...) over kmalloc(sizeof(struct cap_node)...)
#141: FILE: drivers/staging/p9auth/p9auth.c:251:
+	node_ptr = kmalloc(sizeof(struct cap_node), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#145: FILE: drivers/staging/p9auth/p9auth.c:255:
+	printk(KERN_INFO "Capability being written to /dev/caphash : \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#145: FILE: drivers/staging/p9auth/p9auth.c:255:
+	printk(KERN_INFO "Capability being written to /dev/caphash : \n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around node_ptr->list
#148: FILE: drivers/staging/p9auth/p9auth.c:258:
+	list_add(&(node_ptr->list), &(dev->head->list));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around dev->head->list
#148: FILE: drivers/staging/p9auth/p9auth.c:258:
+	list_add(&(node_ptr->list), &(dev->head->list));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around cap_devices[0].head->list
#163: FILE: drivers/staging/p9auth/p9auth.c:273:
+	if (list_empty(&(cap_devices[0].head->list)))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#173: FILE: drivers/staging/p9auth/p9auth.c:283:
+	tohash = kzalloc(len+1, GFP_KERNEL);
 	                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#181: FILE: drivers/staging/p9auth/p9auth.c:291:
+	printk(KERN_ALERT "the source user is %s \n", set.source_user);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#181: FILE: drivers/staging/p9auth/p9auth.c:291:
+	printk(KERN_ALERT "the source user is %s \n", set.source_user);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#182: FILE: drivers/staging/p9auth/p9auth.c:292:
+	printk(KERN_ALERT "the target user is %s \n", set.target_user);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#182: FILE: drivers/staging/p9auth/p9auth.c:292:
+	printk(KERN_ALERT "the target user is %s \n", set.target_user);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#186: FILE: drivers/staging/p9auth/p9auth.c:296:
+	if (NULL == hashed)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around cap_devices->head->list
#192: FILE: drivers/staging/p9auth/p9auth.c:302:
+	list_for_each(pos, &(cap_devices->head->list)) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#198: FILE: drivers/staging/p9auth/p9auth.c:308:
+		if (0 == memcmp(hashed, node->data, CAP_NODE_SIZE)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#211: FILE: drivers/staging/p9auth/p9auth.c:321:
+		printk(KERN_ALERT

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#284: FILE: drivers/staging/p9auth/p9auth.c:353:
+	if (0 == iminor(filp->f_dentry->d_inode))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000011010.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 13 warnings, 7 checks, 338 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000011010.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
