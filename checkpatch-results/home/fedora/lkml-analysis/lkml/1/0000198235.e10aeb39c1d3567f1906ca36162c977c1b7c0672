WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#63: 
   git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip.git auto-warnings-next

WARNING:TYPO_SPELLING: 'hda' may be misspelled - perhaps 'had'?
#142: 
      fix warning in sound/pci/hda/patch_sigmatel.c
                               ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'hda' may be misspelled - perhaps 'had'?
#455: 
 sound/pci/hda/patch_sigmatel.c                    |    4 +-
           ^^^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#490: FILE: arch/x86/boot/video-mode.c:150:
+	u16 uninitialized_var(real_mode);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'real_mode' should also have an identifier name
#490: FILE: arch/x86/boot/video-mode.c:150:
+	u16 uninitialized_var(real_mode);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_lowmem_redirect', this function's name, in a string
#564: FILE: arch/x86/kernel/genx2apic_uv_x.c:276:
+	panic("get_lowmem_redirect: no match!");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:CAMELCASE: Avoid CamelCase: <SCx200_CBA_SCRATCH>
#594: FILE: arch/x86/kernel/scx200_32.c:83:
+			err = pci_read_config_dword(pdev, SCx200_CBA_SCRATCH, &base);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#629: FILE: arch/x86/pci/amd_bus.c:280:
+	unsigned uninitialized_var(bus);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#629: FILE: arch/x86/pci/amd_bus.c:280:
+	unsigned uninitialized_var(bus);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'bus' should also have an identifier name
#629: FILE: arch/x86/pci/amd_bus.c:280:
+	unsigned uninitialized_var(bus);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#630: FILE: arch/x86/pci/amd_bus.c:281:
+	unsigned uninitialized_var(slot);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#630: FILE: arch/x86/pci/amd_bus.c:281:
+	unsigned uninitialized_var(slot);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'slot' should also have an identifier name
#630: FILE: arch/x86/pci/amd_bus.c:281:
+	unsigned uninitialized_var(slot);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#681: FILE: drivers/acpi/executer/exprep.c:322:
+	u32 uninitialized_var(byte_alignment);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'byte_alignment' should also have an identifier name
#681: FILE: drivers/acpi/executer/exprep.c:322:
+	u32 uninitialized_var(byte_alignment);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#793: FILE: drivers/acpi/toshiba_acpi.c:732:
+	bool uninitialized_var(bt_present);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'bt_present' should also have an identifier name
#793: FILE: drivers/acpi/toshiba_acpi.c:732:
+	bool uninitialized_var(bt_present);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#794: FILE: drivers/acpi/toshiba_acpi.c:733:
+	bool uninitialized_var(bt_on);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'bt_on' should also have an identifier name
#794: FILE: drivers/acpi/toshiba_acpi.c:733:
+	bool uninitialized_var(bt_on);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#807: FILE: drivers/ata/libata-core.c:1414:
+	u64 uninitialized_var(native_sectors);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'native_sectors' should also have an identifier name
#807: FILE: drivers/ata/libata-core.c:1414:
+	u64 uninitialized_var(native_sectors);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dev' should also have an identifier name
#820: FILE: drivers/ata/libata-scsi.c:3226:
+	struct ata_device *uninitialized_var(dev);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#833: FILE: drivers/ata/pata_atiixp.c:158:
+	else panic("atiixp_set_dmamode: unknown DMA mode!");

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'atiixp_set_dmamode', this function's name, in a string
#833: FILE: drivers/ata/pata_atiixp.c:158:
+	else panic("atiixp_set_dmamode: unknown DMA mode!");

WARNING:FUNCTION_ARGUMENTS: function definition argument 'host' should also have an identifier name
#846: FILE: drivers/ata/sata_via.c:567:
+	struct ata_host *uninitialized_var(host);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#859: FILE: drivers/atm/ambassador.c:2100:
+  u32 version = -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#872: FILE: drivers/atm/horizon.c:2134:
+  u16 uninitialized_var(channel);$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#872: FILE: drivers/atm/horizon.c:2134:
+  u16 uninitialized_var(channel);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'channel' should also have an identifier name
#872: FILE: drivers/atm/horizon.c:2134:
+  u16 uninitialized_var(channel);

CHECK:CAMELCASE: Avoid CamelCase: <ControllerNumber>
#927: FILE: drivers/block/DAC960.c:6649:
+	int uninitialized_var(ControllerNumber);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#927: FILE: drivers/block/DAC960.c:6649:
+	int uninitialized_var(ControllerNumber);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ControllerNumber' should also have an identifier name
#927: FILE: drivers/block/DAC960.c:6649:
+	int uninitialized_var(ControllerNumber);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#971: FILE: drivers/char/isicom.c:1696:
 static int __devinit isicom_probe(struct pci_dev *pdev,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1011: FILE: drivers/char/rocket.c:245:
+static void rmSpeakerReset(CONTROLLER_T * CtlP, unsigned long model);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <rmSpeakerReset>
#1011: FILE: drivers/char/rocket.c:245:
+static void rmSpeakerReset(CONTROLLER_T * CtlP, unsigned long model);

CHECK:CAMELCASE: Avoid CamelCase: <CtlP>
#1011: FILE: drivers/char/rocket.c:245:
+static void rmSpeakerReset(CONTROLLER_T * CtlP, unsigned long model);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'i5k_channel_pci_id', this function's name, in a string
#1121: FILE: drivers/hwmon/i5k_amb.c:483:
+		panic("i5k_channel_pci_id: unknown chipset!");

CHECK:SPACING: No space is necessary after a cast
#1134: FILE: drivers/infiniband/hw/amso1100/c2_vq.c:110:
+		r->reply_msg = (u64) (long) NULL;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#1143: FILE: drivers/infiniband/hw/amso1100/c2_vq.c:126:
+	r->reply_msg = (u64) (long) NULL;

CHECK:SPACING: No space is necessary after a cast
#1152: FILE: drivers/infiniband/hw/amso1100/c2_vq.c:154:
+		if (r->reply_msg != (u64) (long) NULL)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1193: FILE: drivers/isdn/capi/capidrv.c:1554:
+	unsigned long uninitialized_var(bmask);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'bmask' should also have an identifier name
#1193: FILE: drivers/isdn/capi/capidrv.c:1554:
+	unsigned long uninitialized_var(bmask);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1194: FILE: drivers/isdn/capi/capidrv.c:1555:
+	int uninitialized_var(active);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'active' should also have an identifier name
#1194: FILE: drivers/isdn/capi/capidrv.c:1555:
+	int uninitialized_var(active);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1207: FILE: drivers/isdn/hardware/eicon/maintidi.c:962:
+    dword uninitialized_var(l2_state);$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1207: FILE: drivers/isdn/hardware/eicon/maintidi.c:962:
+    dword uninitialized_var(l2_state);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'l2_state' should also have an identifier name
#1207: FILE: drivers/isdn/hardware/eicon/maintidi.c:962:
+    dword uninitialized_var(l2_state);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1220: FILE: drivers/isdn/hardware/eicon/message.c:2685:
+            len = (byte)(offsetof(T30_INFO, universal_6));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1220: FILE: drivers/isdn/hardware/eicon/message.c:2685:
+            len = (byte)(offsetof(T30_INFO, universal_6));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1229: FILE: drivers/isdn/hardware/eicon/message.c:2747:
+                    len = (byte)(offsetof(T30_INFO, station_id) + 20);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1229: FILE: drivers/isdn/hardware/eicon/message.c:2747:
+                    len = (byte)(offsetof(T30_INFO, station_id) + 20);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1238: FILE: drivers/isdn/hardware/eicon/message.c:2781:
+                  len = (byte)(offsetof(T30_INFO, universal_6));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1238: FILE: drivers/isdn/hardware/eicon/message.c:2781:
+                  len = (byte)(offsetof(T30_INFO, universal_6));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1247: FILE: drivers/isdn/hardware/eicon/message.c:2884:
+            len = (byte)(offsetof(T30_INFO, station_id) + 20);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1247: FILE: drivers/isdn/hardware/eicon/message.c:2884:
+            len = (byte)(offsetof(T30_INFO, station_id) + 20);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1256: FILE: drivers/isdn/hardware/eicon/message.c:3783:
+    len = (byte)(offsetof(T30_INFO, station_id) + 20);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1265: FILE: drivers/isdn/hardware/eicon/message.c:6484:
+  static byte v120_header_buffer[2 + 3] __attribute__ ((aligned(8)));$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#1265: FILE: drivers/isdn/hardware/eicon/message.c:6484:
+  static byte v120_header_buffer[2 + 3] __attribute__ ((aligned(8)));

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#1274: FILE: drivers/isdn/hardware/eicon/message.c:6823:
+          i = ((word)(offsetof(T30_INFO, station_id) + 20)) + ((T30_INFO   *)plci->NL.RBuffer->P)->head_line_len;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#1274: FILE: drivers/isdn/hardware/eicon/message.c:6823:
+          i = ((word)(offsetof(T30_INFO, station_id) + 20)) + ((T30_INFO   *)plci->NL.RBuffer->P)->head_line_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1274: FILE: drivers/isdn/hardware/eicon/message.c:6823:
+          i = ((word)(offsetof(T30_INFO, station_id) + 20)) + ((T30_INFO   *)plci->NL.RBuffer->P)->head_line_len;$

CHECK:CAMELCASE: Avoid CamelCase: <RBuffer>
#1274: FILE: drivers/isdn/hardware/eicon/message.c:6823:
+          i = ((word)(offsetof(T30_INFO, station_id) + 20)) + ((T30_INFO   *)plci->NL.RBuffer->P)->head_line_len;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1283: FILE: drivers/isdn/hardware/eicon/message.c:7215:
+      plci->RData[0].P = v120_header_buffer;$

CHECK:CAMELCASE: Avoid CamelCase: <RData>
#1283: FILE: drivers/isdn/hardware/eicon/message.c:7215:
+      plci->RData[0].P = v120_header_buffer;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1291: FILE: drivers/isdn/hardware/eicon/message.c:8393:
+        byte *head_line = (void *) ((T30_INFO *)&nlc[1] + 1);$

CHECK:SPACING: No space is necessary after a cast
#1291: FILE: drivers/isdn/hardware/eicon/message.c:8393:
+        byte *head_line = (void *) ((T30_INFO *)&nlc[1] + 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1291: FILE: drivers/isdn/hardware/eicon/message.c:8393:
+        byte *head_line = (void *) ((T30_INFO *)&nlc[1] + 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1301: FILE: drivers/isdn/hardware/eicon/message.c:8402:
+            head_line[pos++] = ' ';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1301: FILE: drivers/isdn/hardware/eicon/message.c:8402:
+            head_line[pos++] = ' ';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1302: FILE: drivers/isdn/hardware/eicon/message.c:8403:
+            head_line[pos++] = ' ';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1302: FILE: drivers/isdn/hardware/eicon/message.c:8403:
+            head_line[pos++] = ' ';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1312: FILE: drivers/isdn/hardware/eicon/message.c:8410:
+                head_line[pos++] = ((byte   *)b3_config_parms[2].info)[1+i];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1312: FILE: drivers/isdn/hardware/eicon/message.c:8410:
+                head_line[pos++] = ((byte   *)b3_config_parms[2].info)[1+i];$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1312: FILE: drivers/isdn/hardware/eicon/message.c:8410:
+                head_line[pos++] = ((byte   *)b3_config_parms[2].info)[1+i];
                                                                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1313: FILE: drivers/isdn/hardware/eicon/message.c:8411:
+              head_line[pos++] = ' ';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1313: FILE: drivers/isdn/hardware/eicon/message.c:8411:
+              head_line[pos++] = ' ';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1314: FILE: drivers/isdn/hardware/eicon/message.c:8412:
+              head_line[pos++] = ' ';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1314: FILE: drivers/isdn/hardware/eicon/message.c:8412:
+              head_line[pos++] = ' ';$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#1321: FILE: drivers/isdn/hardware/eicon/message.c:8422:
         for (i = 0; i < len; i++)
+          head_line[pos++] = ((byte   *)b3_config_parms[3].info)[1+i];

ERROR:CODE_INDENT: code indent should use tabs where possible
#1323: FILE: drivers/isdn/hardware/eicon/message.c:8423:
+          head_line[pos++] = ((byte   *)b3_config_parms[3].info)[1+i];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1323: FILE: drivers/isdn/hardware/eicon/message.c:8423:
+          head_line[pos++] = ((byte   *)b3_config_parms[3].info)[1+i];$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1323: FILE: drivers/isdn/hardware/eicon/message.c:8423:
+          head_line[pos++] = ((byte   *)b3_config_parms[3].info)[1+i];
                                                                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1332: FILE: drivers/isdn/hardware/eicon/message.c:8452:
+          pos = (byte)(offsetof(T30_INFO, station_id) + 20);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1332: FILE: drivers/isdn/hardware/eicon/message.c:8452:
+          pos = (byte)(offsetof(T30_INFO, station_id) + 20);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1341: FILE: drivers/isdn/hardware/eicon/message.c:8504:
+      len = (byte)(offsetof(T30_INFO, station_id) + 20);$

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#1378: FILE: drivers/isdn/hysdn/hysdn_net.c:91:
+				memcpy(dev->dev_addr + (ETH_ALEN - sizeof(unsigned int)), &ifa->ifa_local, sizeof(unsigned int));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1451: FILE: drivers/isdn/sc/init.c:30:
+static u8 __iomem * ram[] = {0,0,0,0};

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1451: FILE: drivers/isdn/sc/init.c:30:
+static u8 __iomem * ram[] = {0,0,0,0};
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1451: FILE: drivers/isdn/sc/init.c:30:
+static u8 __iomem * ram[] = {0,0,0,0};
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1451: FILE: drivers/isdn/sc/init.c:30:
+static u8 __iomem * ram[] = {0,0,0,0};
                                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1470: FILE: drivers/isdn/sc/init.c:157:
+		pr_debug("RAM Base for board %d is %p, %s probe\n", b,
 			ram[b], ram[b] == 0 ? "will" : "won't");

ERROR:SPACING: space required before the open parenthesis '('
#1516: FILE: drivers/isdn/sc/init.c:225:
+		switch((unsigned long)ram[b] >> 12 & 0x0F) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1527: FILE: drivers/isdn/sc/init.c:362:
+		request_region((unsigned long)sc_adapter[cinst]->rambase,
+				SRAM_PAGESIZE, interface->id);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1530: FILE: drivers/isdn/sc/init.c:364:
+^I^Ipr_info("  %s (%d) - %s %d channels IRQ %d, I/O Base 0x%x, RAM Base %p\n", $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1558: FILE: drivers/isdn/sc/init.c:448:
+	pr_debug("Attempting to identify adapter @ %p io 0x%x\n",
 		rambase, iobase);

ERROR:SPACING: space required before the open parenthesis '('
#1567: FILE: drivers/isdn/sc/init.c:455:
+	switch((unsigned long)rambase >> 12 & 0x0F) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1603: FILE: drivers/isdn/sc/shmem.c:58:
+	pr_debug("%s: copying %d bytes from %#lx to %p\n",
 		sc_adapter[card]->devicename, n,

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1641: FILE: drivers/media/common/tuners/mxl5007t.c:660:
+	s32 uninitialized_var(rf_input_level);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'rf_input_level' should also have an identifier name
#1641: FILE: drivers/media/common/tuners/mxl5007t.c:660:
+	s32 uninitialized_var(rf_input_level);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1721: FILE: drivers/media/video/usbvision/usbvision-i2c.c:160:
+	unsigned char uninitialized_var(addr);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'addr' should also have an identifier name
#1721: FILE: drivers/media/video/usbvision/usbvision-i2c.c:160:
+	unsigned char uninitialized_var(addr);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'parts' should also have an identifier name
#1820: FILE: drivers/mtd/devices/mtd_dataflash.c:676:
+		struct mtd_partition	*uninitialized_var(parts);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'name' should also have an identifier name
#1833: FILE: drivers/mtd/devices/phram.c:238:
+	char *uninitialized_var(name);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'skb' should also have an identifier name
#1886: FILE: drivers/net/cassini.c:2350:
+		struct sk_buff *uninitialized_var(skb);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1907: FILE: drivers/net/depca.c:1580:
+	adapter = depca_shmem_probe (&mem_start);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1969: FILE: drivers/net/niu.c:741:
+	u32 uninitialized_var(reset);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'reset' should also have an identifier name
#1969: FILE: drivers/net/niu.c:741:
+	u32 uninitialized_var(reset);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'lro' should also have an identifier name
#1995: FILE: drivers/net/s2io.c:7369:
+	struct lro *uninitialized_var(lro);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sky2_mhz', this function's name, in a string
#2021: FILE: drivers/net/sky2.c:2751:
+		panic("sky2_mhz: unknown chip id!");

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2034: FILE: drivers/net/wan/z85230.c:713:
+	u8 uninitialized_var(intr);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'intr' should also have an identifier name
#2034: FILE: drivers/net/wan/z85230.c:713:
+	u8 uninitialized_var(intr);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2047: FILE: drivers/net/wireless/ath9k/rc.c:1033:
+	u8 uninitialized_var(nextindex);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'nextindex' should also have an identifier name
#2047: FILE: drivers/net/wireless/ath9k/rc.c:1033:
+	u8 uninitialized_var(nextindex);

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(2, 3) over __attribute__((format(printf, 2, 3)))
#2060: FILE: drivers/net/wireless/b43/b43.h:856:
+static inline void __attribute__ ((format(printf, 2, 3)))

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2074: FILE: drivers/net/wireless/b43/main.c:3258:
+	bool uninitialized_var(gmode);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gmode' should also have an identifier name
#2074: FILE: drivers/net/wireless/b43/main.c:3258:
+	bool uninitialized_var(gmode);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2087: FILE: drivers/net/wireless/iwlwifi/iwl-3945.c:2182:
+			s32 uninitialized_var(power_idx);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'power_idx' should also have an identifier name
#2087: FILE: drivers/net/wireless/iwlwifi/iwl-3945.c:2182:
+			s32 uninitialized_var(power_idx);

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(2, 3) over __attribute__((format(printf, 2, 3)))
#2101: FILE: drivers/net/wireless/iwlwifi/iwl-debug.h:71:
+static inline void __attribute__ ((format(printf, 2, 3)))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(2, 3) over __attribute__((format(printf, 2, 3)))
#2103: FILE: drivers/net/wireless/iwlwifi/iwl-debug.h:73:
+static inline void __attribute__ ((format(printf, 2, 3)))

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2307: FILE: drivers/scsi/advansys.c:10521:
+	uchar uninitialized_var(next_qp);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'next_qp' should also have an identifier name
#2307: FILE: drivers/scsi/advansys.c:10521:
+	uchar uninitialized_var(next_qp);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'adv_scsiqp' should also have an identifier name
#2316: FILE: drivers/scsi/advansys.c:10950:
+		ADV_SCSI_REQ_Q *uninitialized_var(adv_scsiqp);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2339: FILE: drivers/scsi/dpt_i2o.c:186:
+MODULE_STATIC_DEVICE_TABLE(pci,dptids);
                               ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2442: FILE: drivers/scsi/lpfc/lpfc_els.c:3920:
+	uint32_t payload_len, uninitialized_var(length), nportid,

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2456: FILE: drivers/scsi/megaraid/megaraid_mm.c:120:
+	int		uninitialized_var(drvrcmd_rval);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'drvrcmd_rval' should also have an identifier name
#2456: FILE: drivers/scsi/megaraid/megaraid_mm.c:120:
+	int		uninitialized_var(drvrcmd_rval);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'host_data' should also have an identifier name
#2469: FILE: drivers/scsi/ncr53c8xx.c:8298:
+	struct host_data *uninitialized_var(host_data);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2482: FILE: drivers/scsi/qla4xxx/ql4_mbx.c:870:
+	uint32_t uninitialized_var(ddb_index);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ddb_index' should also have an identifier name
#2482: FILE: drivers/scsi/qla4xxx/ql4_mbx.c:870:
+	uint32_t uninitialized_var(ddb_index);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'fw' should also have an identifier name
#2521: FILE: drivers/usb/serial/io_edgeport.c:296:
+	const struct firmware *uninitialized_var(fw);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2530: FILE: drivers/usb/serial/io_edgeport.c:2460:
+	int uninitialized_var(divisor);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'divisor' should also have an identifier name
#2530: FILE: drivers/usb/serial/io_edgeport.c:2460:
+	int uninitialized_var(divisor);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'fw' should also have an identifier name
#2543: FILE: drivers/usb/serial/keyspan.c:1348:
+	const struct firmware		*uninitialized_var(fw);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2556: FILE: drivers/usb/serial/keyspan_pda.c:459:
+	unsigned char uninitialized_var(status);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'status' should also have an identifier name
#2556: FILE: drivers/usb/serial/keyspan_pda.c:459:
+	unsigned char uninitialized_var(status);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2565: FILE: drivers/usb/serial/keyspan_pda.c:481:
+	unsigned char uninitialized_var(status);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'status' should also have an identifier name
#2565: FILE: drivers/usb/serial/keyspan_pda.c:481:
+	unsigned char uninitialized_var(status);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'fw' should also have an identifier name
#2574: FILE: drivers/usb/serial/keyspan_pda.c:729:
+	const struct firmware *uninitialized_var(fw);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2587: FILE: drivers/usb/serial/mos7720.c:962:
+	int uninitialized_var(divisor);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'divisor' should also have an identifier name
#2587: FILE: drivers/usb/serial/mos7720.c:962:
+	int uninitialized_var(divisor);

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#2645: FILE: drivers/video/aty/atyfb_base.c:533:
 static char ram_dram[] __devinitdata = "DRAM";

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#2646: FILE: drivers/video/aty/atyfb_base.c:534:
 static char ram_resv[] __devinitdata = "RESV";

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#2649: FILE: drivers/video/aty/atyfb_base.c:537:
 static char ram_vram[] __devinitdata = "VRAM";

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "MINFO"
#2665: FILE: drivers/video/matrox/matroxfb_crtc2.c:265:
+	if (MINFO != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2674: FILE: drivers/video/matrox/matroxfb_crtc2.c:285:
+	if (MINFO != NULL) {
 		err = ACCESS_FBINFO(fbops).fb_release(&ACCESS_FBINFO(fbcon), user);
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "MINFO"
#2674: FILE: drivers/video/matrox/matroxfb_crtc2.c:285:
+	if (MINFO != NULL) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2709: FILE: drivers/video/sis/init301.c:6694:
+  unsigned short uninitialized_var(resindex), uninitialized_var(CRT2Index);$

CHECK:CAMELCASE: Avoid CamelCase: <CRT2Index>
#2709: FILE: drivers/video/sis/init301.c:6694:
+  unsigned short uninitialized_var(resindex), uninitialized_var(CRT2Index);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2722: FILE: drivers/video/sis/sis_main.c:4179:
 static void __devinit

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2732: FILE: drivers/video/sis/sis_main.c:4204:
 static int __devinit

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2846: FILE: drivers/watchdog/w83697ug_wdt.c:357:
+		printk(KERN_ERR PFX "init failed\n");

WARNING:FUNCTION_ARGUMENTS: function definition argument 'utfname' should also have an identifier name
#2874: FILE: fs/befs/linuxvfs.c:171:
+	char *uninitialized_var(utfname);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'nlsname' should also have an identifier name
#2884: FILE: fs/befs/linuxvfs.c:224:
+	char *uninitialized_var(nlsname);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#2885: FILE: fs/befs/linuxvfs.c:225:
+	int uninitialized_var(nlsnamelen);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'nlsnamelen' should also have an identifier name
#2885: FILE: fs/befs/linuxvfs.c:225:
+	int uninitialized_var(nlsnamelen);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pdata' should also have an identifier name
#2898: FILE: fs/cifs/cifssmb.c:3114:
+		char *uninitialized_var(pdata);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'tmp_dentry' should also have an identifier name
#2911: FILE: fs/cifs/readdir.c:913:
+	struct dentry *uninitialized_var(tmp_dentry);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'current_entry' should also have an identifier name
#2920: FILE: fs/cifs/readdir.c:999:
+	char *uninitialized_var(current_entry);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'target_item' should also have an identifier name
#3015: FILE: fs/configfs/symlink.c:138:
+	struct config_item *uninitialized_var(target_item);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'send_skb' should also have an identifier name
#3040: FILE: fs/dlm/netlink.c:130:
+	struct sk_buff *uninitialized_var(send_skb);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#3055: FILE: fs/ecryptfs/keystore.c:442:
+	size_t uninitialized_var(payload_len);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'payload_len' should also have an identifier name
#3055: FILE: fs/ecryptfs/keystore.c:442:
+	size_t uninitialized_var(payload_len);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#3064: FILE: fs/ecryptfs/keystore.c:1334:
+	size_t uninitialized_var(payload_len);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'payload_len' should also have an identifier name
#3064: FILE: fs/ecryptfs/keystore.c:1334:
+	size_t uninitialized_var(payload_len);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ep' should also have an identifier name
#3077: FILE: fs/eventpoll.c:1053:
+	struct eventpoll *uninitialized_var(ep);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'lock' should also have an identifier name
#3134: FILE: fs/locks.c:1570:
+	struct file_lock *uninitialized_var(lock);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'wc' should also have an identifier name
#3159: FILE: fs/ocfs2/aops.c:1665:
+	struct ocfs2_write_ctxt *uninitialized_var(wc);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#3173: FILE: fs/ocfs2/cluster/heartbeat.c:1029:
+	unsigned long uninitialized_var(block_bytes);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'block_bytes' should also have an identifier name
#3173: FILE: fs/ocfs2/cluster/heartbeat.c:1029:
+	unsigned long uninitialized_var(block_bytes);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#3174: FILE: fs/ocfs2/cluster/heartbeat.c:1030:
+	unsigned int uninitialized_var(block_bits);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'block_bits' should also have an identifier name
#3174: FILE: fs/ocfs2/cluster/heartbeat.c:1030:
+	unsigned int uninitialized_var(block_bits);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#3187: FILE: fs/ocfs2/ioctl.c:114:
+	unsigned int uninitialized_var(flags);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'flags' should also have an identifier name
#3187: FILE: fs/ocfs2/ioctl.c:114:
+	unsigned int uninitialized_var(flags);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'control' should also have an identifier name
#3213: FILE: fs/ocfs2/stack_user.c:807:
+	struct ocfs2_live_connection *uninitialized_var(control);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#3226: FILE: fs/omfs/file.c:240:
+	u64 uninitialized_var(new_block);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'new_block' should also have an identifier name
#3226: FILE: fs/omfs/file.c:240:
+	u64 uninitialized_var(new_block);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#3234: FILE: fs/omfs/file.c:247:
+	int uninitialized_var(remain);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'remain' should also have an identifier name
#3234: FILE: fs/omfs/file.c:247:
+	int uninitialized_var(remain);

CHECK:CAMELCASE: Avoid CamelCase: <tbS0>
#3249: FILE: fs/reiserfs/do_balan.c:1298:
+					aux_ih = B_N_PITEM_HEAD(tbS0, item_pos);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'udf_truncate_tail_extent', this function's name, in a string
#3298: FILE: fs/udf/truncate.c:90:
+		panic("udf_truncate_tail_extent: unknown alloc type!");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'udf_truncate_extents', this function's name, in a string
#3307: FILE: fs/udf/truncate.c:217:
+		panic("udf_truncate_extents: unknown alloc type!");

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3368: FILE: fs/xfs/xfs_acl.h:62:
+extern int xfs_decode_acl(const char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#3368: FILE: fs/xfs/xfs_acl.h:62:
+extern int xfs_decode_acl(const char *);

CHECK:SPACING: No space is necessary after a cast
#3376: FILE: fs/xfs/xfs_acl.h:84:
+#define xfs_decode_acl(name)	(-EINVAL)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'tp' should also have an identifier name
#3402: FILE: fs/xfs/xfs_rtalloc.c:1875:
+	xfs_trans_t	*uninitialized_var(tp);	/* transaction pointer */

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(2, 3) over __attribute__((format(printf, 2, 3)))
#3418: FILE: include/asm-generic/bug.h:82:
+static inline int __attribute__ ((format(printf, 2, 3)))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3433: FILE: include/linux/audit.h:519:
+#define auditsc_get_stamp(c,t,s) do { BUG(); *(t) = (struct timespec){ 0, }; } while (0)

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3433: FILE: include/linux/audit.h:519:
+#define auditsc_get_stamp(c,t,s) do { BUG(); *(t) = (struct timespec){ 0, }; } while (0)
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3433: FILE: include/linux/audit.h:519:
+#define auditsc_get_stamp(c,t,s) do { BUG(); *(t) = (struct timespec){ 0, }; } while (0)
                              ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(2, 3) over __attribute__((format(printf, 2, 3)))
#3442: FILE: include/linux/audit.h:583:
+static inline void __attribute__ ((format(printf, 2, 3)))

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#3472: FILE: include/linux/fs.h:1058:
+vfs_lock_file(struct file *filp, unsigned int cmd,
                            ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#3488: FILE: include/linux/fs.h:1072:
+vfs_setlease(struct file *filp, long arg, struct file_lock **lease)
                           ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "fops"
#3500: FILE: include/linux/fs.h:1596:
+	(((fops != NULL) && try_module_get((fops)->owner) ? (fops) : NULL))

ERROR:SPACING: space required before the open parenthesis '('
#3503: FILE: include/linux/fs.h:1598:
+	do { if (fops != NULL) module_put((fops)->owner); } while(0)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "fops"
#3503: FILE: include/linux/fs.h:1598:
+	do { if (fops != NULL) module_put((fops)->owner); } while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3590: FILE: include/linux/module.h:97:
+#define MODULE_GENERIC_TABLE(gtype,name)			\
                                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3592: FILE: include/linux/module.h:99:
+  __attribute__ ((unused, alias(__stringify(name))))$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias(__stringify(name)) over __attribute__((alias(__stringify(name))))
#3592: FILE: include/linux/module.h:99:
+  __attribute__ ((unused, alias(__stringify(name))))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#3592: FILE: include/linux/module.h:99:
+  __attribute__ ((unused, alias(__stringify(name))))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3593: FILE: include/linux/module.h:100:
+#define MODULE_STATIC_GENERIC_TABLE(gtype,name)			\
                                          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3595: FILE: include/linux/module.h:102:
+  __attribute__ ((unused, alias(__stringify(name))))$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias(__stringify(name)) over __attribute__((alias(__stringify(name))))
#3595: FILE: include/linux/module.h:102:
+  __attribute__ ((unused, alias(__stringify(name))))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#3595: FILE: include/linux/module.h:102:
+  __attribute__ ((unused, alias(__stringify(name))))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3597: FILE: include/linux/module.h:104:
+#define MODULE_GENERIC_TABLE(gtype,name)
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3598: FILE: include/linux/module.h:105:
+#define MODULE_STATIC_GENERIC_TABLE(gtype,name) \
                                          ^

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#3598: FILE: include/linux/module.h:105:
+#define MODULE_STATIC_GENERIC_TABLE(gtype,name) \
+static __typeof__((name)) name __attribute__((unused));

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#3599: FILE: include/linux/module.h:106:
+static __typeof__((name)) name __attribute__((unused));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3609: FILE: include/linux/module.h:158:
+#define MODULE_STATIC_DEVICE_TABLE(type,name)		\
                                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3610: FILE: include/linux/module.h:159:
+  MODULE_STATIC_GENERIC_TABLE(type##_device,name)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3610: FILE: include/linux/module.h:159:
+  MODULE_STATIC_GENERIC_TABLE(type##_device,name)
                                            ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'e' should also have an identifier name
#3710: FILE: kernel/marker.c:433:
+	struct marker_entry *uninitialized_var(e);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3754: FILE: kernel/power/main.c:131:
+		printk(KERN_INFO "suspend debug: Waiting for 5 seconds.\n");

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#3869: FILE: kernel/profile.c:304:
 static int __devinit profile_cpu_callback(struct notifier_block *info,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#3887: FILE: kernel/profile.c:371:
+	i = primary = (pc & (NR_PROFILE_GRP - 1)) << PROFILE_GRPSHIFT;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#3922: FILE: kernel/profile.c:406:
+		hits[i].pc = hits[i].hits = 0;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3929: FILE: kernel/profile.c:413:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'slab_node', this function's name, in a string
#3995: FILE: mm/mempolicy.c:1421:
+		panic("slab_node: bad policy mode!");

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#4008: FILE: mm/swapfile.c:1484:
+	sector_t uninitialized_var(span);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'span' should also have an identifier name
#4008: FILE: mm/swapfile.c:1484:
+	sector_t uninitialized_var(span);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'value' should also have an identifier name
#4049: FILE: net/dccp/options.c:67:
+	unsigned char *uninitialized_var(value);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#4062: FILE: net/dsa/mv88e6060.c:225:
+		int uninitialized_var(port_status);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'port_status' should also have an identifier name
#4062: FILE: net/dsa/mv88e6060.c:225:
+		int uninitialized_var(port_status);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#4075: FILE: net/dsa/mv88e6xxx.c:361:
+		int uninitialized_var(port_status);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'port_status' should also have an identifier name
#4075: FILE: net/dsa/mv88e6xxx.c:361:
+		int uninitialized_var(port_status);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#4088: FILE: net/ipv6/ip6_flowlabel.c:467:
+	int uninitialized_var(err);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'err' should also have an identifier name
#4088: FILE: net/ipv6/ip6_flowlabel.c:467:
+	int uninitialized_var(err);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#4170: FILE: net/sched/sch_hfsc.c:1577:
+	int uninitialized_var(err);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'err' should also have an identifier name
#4170: FILE: net/sched/sch_hfsc.c:1577:
+	int uninitialized_var(err);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'svcauth_unix_set_client', this function's name, in a string
#4183: FILE: net/sunrpc/svcauth_unix.c:695:
+		panic("svcauth_unix_set_client: bad address family!");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4191: FILE: net/sunrpc/svcauth_unix.c:876:
 
+

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#4201: FILE: net/sunrpc/xprtrdma/svc_rdma_transport.c:830:
+	int uninitialized_var(dma_mr_acc);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dma_mr_acc' should also have an identifier name
#4201: FILE: net/sunrpc/xprtrdma/svc_rdma_transport.c:830:
+	int uninitialized_var(dma_mr_acc);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#4240: FILE: sound/isa/sb/sb8.c:104:
+	int uninitialized_var(err);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'err' should also have an identifier name
#4240: FILE: sound/isa/sb/sb8.c:104:
+	int uninitialized_var(err);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pipe' should also have an identifier name
#4326: FILE: sound/pci/pcxhr/pcxhr.c:516:
+	struct pcxhr_pipe *uninitialized_var(pipe);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'u_int64_t'
#4339: FILE: sound/pci/pcxhr/pcxhr_core.c:1087:
+		u_int64_t new_sample_count = 0;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#4352: FILE: sound/pci/pcxhr/pcxhr_mixer.c:801:
+	unsigned char uninitialized_var(aes_bits);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'aes_bits' should also have an identifier name
#4352: FILE: sound/pci/pcxhr/pcxhr_mixer.c:801:
+	unsigned char uninitialized_var(aes_bits);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'chip' should also have an identifier name
#4370: FILE: sound/pci/via82xx.c:2431:
+	struct via82xx *uninitialized_var(chip);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'chip' should also have an identifier name
#4383: FILE: sound/pci/via82xx_modem.c:1165:
+	struct via82xx_modem *uninitialized_var(chip);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'vx' should also have an identifier name
#4396: FILE: sound/pci/vx222/vx222.c:197:
+	struct snd_vx222 *uninitialized_var(vx);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'wm8903_output_event', this function's name, in a string
#4422: FILE: sound/soc/codecs/wm8903.c:394:
+		panic("wm8903_output_event: bad register");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'wm8903_output_event', this function's name, in a string
#4431: FILE: sound/soc/codecs/wm8903.c:405:
+		panic("wm8903_output_event: bad shift");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000198235.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 32 errors, 182 warnings, 30 checks, 2882 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000198235.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
