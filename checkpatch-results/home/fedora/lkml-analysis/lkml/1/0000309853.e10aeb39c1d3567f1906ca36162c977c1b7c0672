WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#91: 
## This tests break points on sys_open

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#97: 
## This tests break points on do_fork

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#121: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#126: FILE: drivers/misc/kgdbts.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#145: FILE: drivers/misc/kgdbts.c:20:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#146: FILE: drivers/misc/kgdbts.c:21:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#180: FILE: drivers/misc/kgdbts.c:55:
+ * ^Ikgdbts=V1 kgdbwait$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#183: FILE: drivers/misc/kgdbts.c:58:
+ * ^Ikgdbts=V1N6F100 kgdbwait$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#233: FILE: drivers/misc/kgdbts.c:108:
+		printk(KERN_INFO a); \

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#237: FILE: drivers/misc/kgdbts.c:112:
+		printk(KERN_INFO a); \

WARNING:CONST_STRUCT: struct kgdb_io should normally be const
#243: FILE: drivers/misc/kgdbts.c:118:
+static struct kgdb_io kgdbts_io_ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#284: FILE: drivers/misc/kgdbts.c:159:
+	void (*get_handler)(char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#285: FILE: drivers/misc/kgdbts.c:160:
+	int (*put_handler)(char *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#285: FILE: drivers/misc/kgdbts.c:160:
+	int (*put_handler)(char *, char *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#292: FILE: drivers/misc/kgdbts.c:167:
+	int (*run_test) (int, int);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#292: FILE: drivers/misc/kgdbts.c:167:
+	int (*run_test) (int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#292: FILE: drivers/misc/kgdbts.c:167:
+	int (*run_test) (int, int);

WARNING:SPACING: Unnecessary space before function pointer arguments
#293: FILE: drivers/misc/kgdbts.c:168:
+	int (*validate_put) (char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#293: FILE: drivers/misc/kgdbts.c:168:
+	int (*validate_put) (char *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#407: FILE: drivers/misc/kgdbts.c:282:
+	kgdb_hex2mem(&put_str[1], (char *)kgdbts_gdb_regs,
+		 NUMREGBYTES);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#416: FILE: drivers/misc/kgdbts.c:291:
+	if (strcmp(arg, "silent") &&
+		instruction_pointer(&kgdbts_regs) + offset != addr) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#417: FILE: drivers/misc/kgdbts.c:292:
+		printk(KERN_ERR "kgdbts: BP mismatch %lx expected %lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#418: FILE: drivers/misc/kgdbts.c:293:
+		printk(KERN_ERR "kgdbts: BP mismatch %lx expected %lx\n",
+			   instruction_pointer(&kgdbts_regs) + offset, addr);

WARNING:TYPO_SPELLING: 'indepent' may be misspelled - perhaps 'independent'?
#432: FILE: drivers/misc/kgdbts.c:307:
+	 * From an arch indepent point of view the instruction pointer
 	                ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#436: FILE: drivers/misc/kgdbts.c:311:
+	kgdb_hex2mem(&put_str[1], (char *)kgdbts_gdb_regs,
+		 NUMREGBYTES);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#439: FILE: drivers/misc/kgdbts.c:314:
+	v2printk("Singlestep stopped at IP: %lx\n",
+		   instruction_pointer(&kgdbts_regs));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#441: FILE: drivers/misc/kgdbts.c:316:
+		printk(KERN_ERR "kgdbts: SingleStep failed at %lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#442: FILE: drivers/misc/kgdbts.c:317:
+		printk(KERN_ERR "kgdbts: SingleStep failed at %lx\n",
+			   instruction_pointer(&kgdbts_regs));

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#460: FILE: drivers/misc/kgdbts.c:335:
+	int go_back = simple_strtol(arg, NULL, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#473: FILE: drivers/misc/kgdbts.c:348:
+	if (!strncmp(put_str+1, arg, 2)) {
 	                    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#506: FILE: drivers/misc/kgdbts.c:381:
+		printk(KERN_ERR "kgdbts: ERROR failed sstep get emulation\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#514: FILE: drivers/misc/kgdbts.c:389:
+		if (!strncmp(put_str+1, arg, 2))
 		                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#522: FILE: drivers/misc/kgdbts.c:397:
+		kgdb_hex2mem(&put_str[1], (char *)kgdbts_gdb_regs,
+			 NUMREGBYTES);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#532: FILE: drivers/misc/kgdbts.c:407:
+			printk(KERN_ERR "kgdbts: failed sstep break set\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#538: FILE: drivers/misc/kgdbts.c:413:
+			printk(KERN_ERR "kgdbts: failed continue sstep\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#544: FILE: drivers/misc/kgdbts.c:419:
+			printk(KERN_ERR "kgdbts: failed sstep break unset\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#551: FILE: drivers/misc/kgdbts.c:426:
+		printk(KERN_ERR "kgdbts: ERROR failed sstep put emulation\n");

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#561: FILE: drivers/misc/kgdbts.c:436:
+	if (strncmp(put_str+1, arg, 2))
 	                   ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#566: FILE: drivers/misc/kgdbts.c:441:
+}
+/*

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'recieved' may be misspelled - perhaps 'received'?
#758: FILE: drivers/misc/kgdbts.c:633:
+		 * it, or stop if the recieved string is complete.
 		                      ^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#777: FILE: drivers/misc/kgdbts.c:652:
+	int ret = 0;
+	if (is_get_char) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#796: FILE: drivers/misc/kgdbts.c:671:
+			printk(KERN_ERR

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#811: FILE: drivers/misc/kgdbts.c:686:
+	if (ts.tst[ts.idx].get[0] == '\0' &&
+		ts.tst[ts.idx].put[0] == '\0') {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#812: FILE: drivers/misc/kgdbts.c:687:
+		printk(KERN_ERR "kgdbts: ERROR: beyond end of test on"

WARNING:SPLIT_STRING: quoted string split across lines
#813: FILE: drivers/misc/kgdbts.c:688:
+		printk(KERN_ERR "kgdbts: ERROR: beyond end of test on"
+			   " '%s' line %i\n", ts.name, ts.idx);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#818: FILE: drivers/misc/kgdbts.c:693:
+		printk(KERN_ERR "kgdbts: ERROR: put buffer overflow on"

WARNING:SPLIT_STRING: quoted string split across lines
#819: FILE: drivers/misc/kgdbts.c:694:
+		printk(KERN_ERR "kgdbts: ERROR: put buffer overflow on"
+			   " '%s' line %i\n", ts.name, ts.idx);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#836: FILE: drivers/misc/kgdbts.c:711:
+			printk(KERN_ERR "kgdbts: ERROR PUT: end of test "

WARNING:SPLIT_STRING: quoted string split across lines
#837: FILE: drivers/misc/kgdbts.c:712:
+			printk(KERN_ERR "kgdbts: ERROR PUT: end of test "
+			   "buffer on '%s' line %i expected %s got %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#861: FILE: drivers/misc/kgdbts.c:736:
+	probe_kernel_read(before, (char *)kgdbts_break_test,
+	  BREAK_INSTR_SIZE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#869: FILE: drivers/misc/kgdbts.c:744:
+	probe_kernel_read(after, (char *)kgdbts_break_test,
+	  BREAK_INSTR_SIZE);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#871: FILE: drivers/misc/kgdbts.c:746:
+		printk(KERN_CRIT "kgdbts: ERROR kgdb corrupted memory\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#900: FILE: drivers/misc/kgdbts.c:775:
+	printk(KERN_ERR "kgdbts: ERROR %s test failed\n", ts.name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#919: FILE: drivers/misc/kgdbts.c:794:
+			printk(KERN_ERR "kgdbts: ERROR %s broke on access\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#920: FILE: drivers/misc/kgdbts.c:795:
+			printk(KERN_ERR "kgdbts: ERROR %s broke on access\n",
+				ts.name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#928: FILE: drivers/misc/kgdbts.c:803:
+	printk(KERN_ERR "kgdbts: ERROR %s test failed\n", ts.name);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#941: FILE: drivers/misc/kgdbts.c:816:
+	mdelay(nmi_sleep*1000);
 	                ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#945: FILE: drivers/misc/kgdbts.c:820:
+		printk(KERN_ERR "kgdbts: ERROR nmi_test did not hit nmi\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#950: FILE: drivers/misc/kgdbts.c:825:
+	printk(KERN_ERR "kgdbts: ERROR %s test failed\n", ts.name);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1000: FILE: drivers/misc/kgdbts.c:875:
+		fork_test = simple_strtol(ptr+1, NULL, 10);
 		                             ^

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#1000: FILE: drivers/misc/kgdbts.c:875:
+		fork_test = simple_strtol(ptr+1, NULL, 10);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1003: FILE: drivers/misc/kgdbts.c:878:
+		sys_open_test = simple_strtol(ptr+1, NULL, 10);
 		                                 ^

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#1003: FILE: drivers/misc/kgdbts.c:878:
+		sys_open_test = simple_strtol(ptr+1, NULL, 10);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1006: FILE: drivers/misc/kgdbts.c:881:
+		nmi_sleep = simple_strtol(ptr+1, NULL, 10);
 		                             ^

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#1006: FILE: drivers/misc/kgdbts.c:881:
+		nmi_sleep = simple_strtol(ptr+1, NULL, 10);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1041: FILE: drivers/misc/kgdbts.c:916:
+		printk(KERN_INFO "kgdbts:RUN do_fork for %i breakpoints\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1042: FILE: drivers/misc/kgdbts.c:917:
+		printk(KERN_INFO "kgdbts:RUN do_fork for %i breakpoints\n",
+			repeat_test);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1054: FILE: drivers/misc/kgdbts.c:929:
+		printk(KERN_INFO "kgdbts:RUN sys_open for %i breakpoints\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1055: FILE: drivers/misc/kgdbts.c:930:
+		printk(KERN_INFO "kgdbts:RUN sys_open for %i breakpoints\n",
+			repeat_test);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1068: FILE: drivers/misc/kgdbts.c:943:
+		printk(KERN_ERR "kgdbts: config string too long\n");

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#1082: FILE: drivers/misc/kgdbts.c:957:
+__setup("kgdbts=", kgdbts_option_setup);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1150: FILE: drivers/misc/kgdbts.c:1025:
+		printk(KERN_ERR "kgdbts: config string too long\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1161: FILE: drivers/misc/kgdbts.c:1036:
+		printk(KERN_ERR

WARNING:CONST_STRUCT: struct kgdb_io should normally be const
#1193: FILE: drivers/misc/kgdbts.c:1068:
+static struct kgdb_io kgdbts_io_ops = {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000309853.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 50 warnings, 22 checks, 1103 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000309853.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
