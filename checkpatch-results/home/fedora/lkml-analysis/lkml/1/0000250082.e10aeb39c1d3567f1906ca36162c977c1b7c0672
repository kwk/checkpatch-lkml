WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
Change the skb allocation api to indicate RX usage and use this to fall back to

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#61: FILE: include/linux/skbuff.h:320:
+^I__u8 ^I^I^Iemergency:1;$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#113: FILE: include/linux/skbuff.h:1259:
+extern void __netdev_free_page(struct net_device *dev, struct page *page);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: net/core/skbuff.c:204:
+	data = kmalloc_reserve(size + sizeof(struct skb_shared_info),
+			gfp_mask, node, &net_skb_reserve, &emergency);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: net/core/skbuff.c:282:
+	page = alloc_pages_reserve(node, gfp_mask | __GFP_MEMALLOC, 0,
+			&net_skb_reserve, NULL);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#227: FILE: net/core/skbuff.c:304:
+	/*
+	 * In the rare case that skb_emergency() != page->reserved we'll

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#233: FILE: net/core/skbuff.c:310:
+		/*
+		 * We need to track fragment pages so that we properly

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#239: FILE: net/core/skbuff.c:316:
+		/*
+		 * Release the reserve now, because normal skbs don't

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#271: FILE: net/core/skbuff.c:392:
 			       &skb_shinfo(skb)->dataref)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#367: FILE: net/core/skbuff.c:748:
+			skb_frag_t *frag = &skb_shinfo(skb)->frags[i];
+			skb_shinfo(n)->frags[i] = *frag;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#381: FILE: net/core/skbuff.c:801:
+	data = kmalloc_reserve(size + sizeof(struct skb_shared_info),
+			gfp_mask, -1, &net_skb_reserve, NULL);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000250082.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 5 checks, 377 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000250082.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
