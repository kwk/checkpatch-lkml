WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#390: FILE: arch/um/kernel/ptrace.c:21:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:SPACING: No space is necessary after a cast
#406: FILE: arch/um/kernel/ptrace.c:35:
+		(void __user *) UPT_IP(&regs->regs) : NULL;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#443: FILE: arch/um/kernel/ptrace.c:64:
+		audit_syscall_entry(HOST_AUDIT_ARCH,
 					    UPT_SYSCALL_NR(regs),

ERROR:SPACING: space required before the open parenthesis '('
#505: FILE: arch/um/kernel/signal.c:154:
+	if(test_thread_flag(TIF_SYSCALL_TRACE))

ERROR:DEFINE_ARCH_HAS: #define of 'ARCH_HAS_SINGLE_STEP' is wrong - use Kconfig variables or standard guards instead
#573: FILE: include/asm-um/ptrace-i386.h:9:
+#define ARCH_HAS_SINGLE_STEP	(1)

The ARCH_HAS_xyz and ARCH_HAVE_xyz patterns are wrong.

For big conceptual features use Kconfig symbols instead.  And for
smaller things where we have compatibility fallback functions but
want architectures able to override them with optimized ones, we
should either use weak functions (appropriate for some cases), or
the symbol that protects them should be the same symbol we use.

See: https://lore.kernel.org/lkml/CA+55aFycQ9XJvEOsiM3txHL5bjUc8CeKWJNR_H+MiicaddB42Q@mail.gmail.com/

ERROR:DEFINE_ARCH_HAS: #define of 'ARCH_HAS_SINGLE_STEP' is wrong - use Kconfig variables or standard guards instead
#586: FILE: include/asm-um/ptrace-x86_64.h:17:
+#define ARCH_HAS_SINGLE_STEP	(1)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#596: FILE: include/asm-um/tracehook.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/thread_info.h> instead of <asm/thread_info.h>
#615: FILE: include/asm-um/tracehook.h:20:
+#include <asm/thread_info.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#658: FILE: include/asm-um/tracehook.h:63:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#669: FILE: include/asm-um/thread_info.h:73:
+                                         * mode */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#669: FILE: include/asm-um/thread_info.h:73:
+                                         * mode */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:BIT_MACRO: Prefer using the BIT macro
#677: FILE: include/asm-um/thread_info.h:82:
+#define _TIF_SINGLESTEP         (1 << TIF_SINGLESTEP)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000455237.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 4 warnings, 4 checks, 524 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000455237.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
