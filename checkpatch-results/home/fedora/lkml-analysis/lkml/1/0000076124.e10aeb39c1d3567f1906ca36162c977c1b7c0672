WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
Gitweb:     http://git.kernel.org/tip/6b58e7f146f8d79c08f62087f928e1f01747de71

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#94: FILE: tools/perf/util/parse-events.c:114:
+#define for_each_subsystem(sys_dir, sys_dirent, sys_next)	       \
 	while (!readdir_r(sys_dir, &sys_dirent, &sys_next) && sys_next)	       \
+	if (sys_dirent.d_type == DT_DIR &&				       \
 	   (strcmp(sys_dirent.d_name, ".")) &&				       \
 	   (strcmp(sys_dirent.d_name, "..")))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'sys_dirent' - possible side-effects?
#94: FILE: tools/perf/util/parse-events.c:114:
+#define for_each_subsystem(sys_dir, sys_dirent, sys_next)	       \
 	while (!readdir_r(sys_dir, &sys_dirent, &sys_next) && sys_next)	       \
+	if (sys_dirent.d_type == DT_DIR &&				       \
 	   (strcmp(sys_dirent.d_name, ".")) &&				       \
 	   (strcmp(sys_dirent.d_name, "..")))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'sys_dirent' may be better as '(sys_dirent)' to avoid precedence issues
#94: FILE: tools/perf/util/parse-events.c:114:
+#define for_each_subsystem(sys_dir, sys_dirent, sys_next)	       \
 	while (!readdir_r(sys_dir, &sys_dirent, &sys_next) && sys_next)	       \
+	if (sys_dirent.d_type == DT_DIR &&				       \
 	   (strcmp(sys_dirent.d_name, ".")) &&				       \
 	   (strcmp(sys_dirent.d_name, "..")))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'sys_next' - possible side-effects?
#94: FILE: tools/perf/util/parse-events.c:114:
+#define for_each_subsystem(sys_dir, sys_dirent, sys_next)	       \
 	while (!readdir_r(sys_dir, &sys_dirent, &sys_next) && sys_next)	       \
+	if (sys_dirent.d_type == DT_DIR &&				       \
 	   (strcmp(sys_dirent.d_name, ".")) &&				       \
 	   (strcmp(sys_dirent.d_name, "..")))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'sys_next' may be better as '(sys_next)' to avoid precedence issues
#94: FILE: tools/perf/util/parse-events.c:114:
+#define for_each_subsystem(sys_dir, sys_dirent, sys_next)	       \
 	while (!readdir_r(sys_dir, &sys_dirent, &sys_next) && sys_next)	       \
+	if (sys_dirent.d_type == DT_DIR &&				       \
 	   (strcmp(sys_dirent.d_name, ".")) &&				       \
 	   (strcmp(sys_dirent.d_name, "..")))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#95: FILE: tools/perf/util/parse-events.c:115:
 	while (!readdir_r(sys_dir, &sys_dirent, &sys_next) && sys_next)	       \
+	if (sys_dirent.d_type == DT_DIR &&				       \

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#108: FILE: tools/perf/util/parse-events.c:135:
+#define for_each_event(sys_dirent, evt_dir, evt_dirent, evt_next)	       \
 	while (!readdir_r(evt_dir, &evt_dirent, &evt_next) && evt_next)        \
+	if (evt_dirent.d_type == DT_DIR &&				       \
 	   (strcmp(evt_dirent.d_name, ".")) &&				       \
 	   (strcmp(evt_dirent.d_name, "..")) &&				       \
 	   (!tp_event_has_id(&sys_dirent, &evt_dirent)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'sys_dirent' may be better as '(sys_dirent)' to avoid precedence issues
#108: FILE: tools/perf/util/parse-events.c:135:
+#define for_each_event(sys_dirent, evt_dir, evt_dirent, evt_next)	       \
 	while (!readdir_r(evt_dir, &evt_dirent, &evt_next) && evt_next)        \
+	if (evt_dirent.d_type == DT_DIR &&				       \
 	   (strcmp(evt_dirent.d_name, ".")) &&				       \
 	   (strcmp(evt_dirent.d_name, "..")) &&				       \
 	   (!tp_event_has_id(&sys_dirent, &evt_dirent)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'evt_dirent' - possible side-effects?
#108: FILE: tools/perf/util/parse-events.c:135:
+#define for_each_event(sys_dirent, evt_dir, evt_dirent, evt_next)	       \
 	while (!readdir_r(evt_dir, &evt_dirent, &evt_next) && evt_next)        \
+	if (evt_dirent.d_type == DT_DIR &&				       \
 	   (strcmp(evt_dirent.d_name, ".")) &&				       \
 	   (strcmp(evt_dirent.d_name, "..")) &&				       \
 	   (!tp_event_has_id(&sys_dirent, &evt_dirent)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'evt_dirent' may be better as '(evt_dirent)' to avoid precedence issues
#108: FILE: tools/perf/util/parse-events.c:135:
+#define for_each_event(sys_dirent, evt_dir, evt_dirent, evt_next)	       \
 	while (!readdir_r(evt_dir, &evt_dirent, &evt_next) && evt_next)        \
+	if (evt_dirent.d_type == DT_DIR &&				       \
 	   (strcmp(evt_dirent.d_name, ".")) &&				       \
 	   (strcmp(evt_dirent.d_name, "..")) &&				       \
 	   (!tp_event_has_id(&sys_dirent, &evt_dirent)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'evt_next' - possible side-effects?
#108: FILE: tools/perf/util/parse-events.c:135:
+#define for_each_event(sys_dirent, evt_dir, evt_dirent, evt_next)	       \
 	while (!readdir_r(evt_dir, &evt_dirent, &evt_next) && evt_next)        \
+	if (evt_dirent.d_type == DT_DIR &&				       \
 	   (strcmp(evt_dirent.d_name, ".")) &&				       \
 	   (strcmp(evt_dirent.d_name, "..")) &&				       \
 	   (!tp_event_has_id(&sys_dirent, &evt_dirent)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'evt_next' may be better as '(evt_next)' to avoid precedence issues
#108: FILE: tools/perf/util/parse-events.c:135:
+#define for_each_event(sys_dirent, evt_dir, evt_dirent, evt_next)	       \
 	while (!readdir_r(evt_dir, &evt_dirent, &evt_next) && evt_next)        \
+	if (evt_dirent.d_type == DT_DIR &&				       \
 	   (strcmp(evt_dirent.d_name, ".")) &&				       \
 	   (strcmp(evt_dirent.d_name, "..")) &&				       \
 	   (!tp_event_has_id(&sys_dirent, &evt_dirent)))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#109: FILE: tools/perf/util/parse-events.c:136:
 	while (!readdir_r(evt_dir, &evt_dirent, &evt_next) && evt_next)        \
+	if (evt_dirent.d_type == DT_DIR &&				       \

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#145: FILE: tools/perf/util/parse-events.c:175:
+				 O_RDONLY|O_DIRECTORY), evt_dir_fd;
 				         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#186: FILE: tools/perf/util/parse-events.c:644:
+				 O_RDONLY|O_DIRECTORY), evt_dir_fd;
 				         ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000076124.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 3 warnings, 11 checks, 119 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000076124.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
