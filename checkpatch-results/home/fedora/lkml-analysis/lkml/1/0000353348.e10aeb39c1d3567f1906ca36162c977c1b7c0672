WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
# NOT signed-off yet ... purely for comment.  It's been sanity tested.

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#231: FILE: include/asm-generic/gpio.h:67:
+extern const char *gpiochip_is_requested(struct gpio_chip *chip,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#232: FILE: include/asm-generic/gpio.h:68:
+extern const char *gpiochip_is_requested(struct gpio_chip *chip,
+			unsigned offset);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#232: FILE: include/asm-generic/gpio.h:68:
+			unsigned offset);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#259: FILE: lib/gpiolib.c:45:
+};
+static struct gpio_desc gpio_desc[ARCH_NR_GPIOS];

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "gpio_desc[id].chip"
#321: FILE: lib/gpiolib.c:94:
+		if (gpio_desc[id].chip != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#339: FILE: lib/gpiolib.c:119:
+	unsigned	id;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!desc->chip"
#379: FILE: lib/gpiolib.c:153:
+	if (desc->chip == NULL)

CHECK:BRACES: braces {} should be used on all arms of this statement
#387: FILE: lib/gpiolib.c:160:
+	if (!desc->requested) {
[...]
-		status = -EBUSY;
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!label"
#399: FILE: lib/gpiolib.c:163:
+		desc->label = (label == NULL) ? "?" : label;

CHECK:BRACES: Unbalanced braces around else statement
#402: FILE: lib/gpiolib.c:166:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#424: FILE: lib/gpiolib.c:183:
+	if (desc->chip && desc->requested) {
[...]
-	else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#438: FILE: lib/gpiolib.c:188:
+	} else

WARNING:TYPO_SPELLING: 'identifer' may be misspelled - perhaps 'identifier'?
#449: FILE: lib/gpiolib.c:199:
+ * @offset: controller's identifer
                          ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#459: FILE: lib/gpiolib.c:209:
+const char *gpiochip_is_requested(struct gpio_chip *chip, unsigned offset)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#461: FILE: lib/gpiolib.c:211:
+	unsigned gpio = chip->base + offset;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#541: FILE: lib/gpiolib.c:386:
+	unsigned		i;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#542: FILE: lib/gpiolib.c:387:
+	unsigned		gpio = chip->base;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#578: FILE: lib/gpiolib.c:453:
+	unsigned		gpio;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000353348.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 10 checks, 477 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000353348.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
