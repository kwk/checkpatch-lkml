WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#210: FILE: arch/x86/mm/init_32.c:557:
+	highstart_pfn = highend_pfn = max_pfn;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#214: FILE: arch/x86/mm/init_32.c:561:
+	printk(KERN_NOTICE "%ldMB HIGHMEM available.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#215: FILE: arch/x86/mm/init_32.c:562:
+	printk(KERN_NOTICE "%ldMB HIGHMEM available.\n",
+		pages_to_mb(highend_pfn - highstart_pfn));

CHECK:SPACING: No space is necessary after a cast
#217: FILE: arch/x86/mm/init_32.c:564:
+	high_memory = (void *) __va(highstart_pfn * PAGE_SIZE - 1) + 1;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#221: FILE: arch/x86/mm/init_32.c:568:
+	high_memory = (void *) __va(max_low_pfn * PAGE_SIZE - 1) + 1;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#226: FILE: arch/x86/mm/init_32.c:573:
+	printk(KERN_NOTICE "%ldMB LOWMEM available.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#227: FILE: arch/x86/mm/init_32.c:574:
+	printk(KERN_NOTICE "%ldMB LOWMEM available.\n",
+			pages_to_mb(max_low_pfn));

WARNING:LINE_SPACING: Missing a blank line after declarations
#237: FILE: arch/x86/mm/init_32.c:584:
+	unsigned long max_zone_pfns[MAX_NR_ZONES];
+	memset(max_zone_pfns, 0, sizeof(max_zone_pfns));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#262: FILE: arch/x86/mm/init_32.c:609:
+	bootmap_size = bootmem_bootmap_pages(max_low_pfn)<<PAGE_SHIFT;
 	                                                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#263: FILE: arch/x86/mm/init_32.c:610:
+	bootmap = find_e820_area(min_low_pfn<<PAGE_SHIFT,
 	                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#264: FILE: arch/x86/mm/init_32.c:611:
+				 max_pfn_mapped<<PAGE_SHIFT, bootmap_size,
 				               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#273: FILE: arch/x86/mm/init_32.c:620:
+	printk(KERN_INFO "  mapped low ram: 0 - %08lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: arch/x86/mm/init_32.c:621:
+	printk(KERN_INFO "  mapped low ram: 0 - %08lx\n",
+		 max_pfn_mapped<<PAGE_SHIFT);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#274: FILE: arch/x86/mm/init_32.c:621:
+		 max_pfn_mapped<<PAGE_SHIFT);
 		               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#275: FILE: arch/x86/mm/init_32.c:622:
+	printk(KERN_INFO "  low ram: %08lx - %08lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#276: FILE: arch/x86/mm/init_32.c:623:
+	printk(KERN_INFO "  low ram: %08lx - %08lx\n",
+		 min_low_pfn<<PAGE_SHIFT, max_low_pfn<<PAGE_SHIFT);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#276: FILE: arch/x86/mm/init_32.c:623:
+		 min_low_pfn<<PAGE_SHIFT, max_low_pfn<<PAGE_SHIFT);
 		            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#276: FILE: arch/x86/mm/init_32.c:623:
+		 min_low_pfn<<PAGE_SHIFT, max_low_pfn<<PAGE_SHIFT);
 		                                     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#277: FILE: arch/x86/mm/init_32.c:624:
+	printk(KERN_INFO "  bootmap %08lx - %08lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#278: FILE: arch/x86/mm/init_32.c:625:
+	printk(KERN_INFO "  bootmap %08lx - %08lx\n",
+		 bootmap, bootmap + bootmap_size);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#281: FILE: arch/x86/mm/init_32.c:628:
+	early_res_to_bootmem(0, max_low_pfn<<PAGE_SHIFT);
 	                                   ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#283: FILE: arch/x86/mm/init_32.c:630:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#285: FILE: arch/x86/mm/init_32.c:632:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#297: FILE: include/asm-x86/page_32.h:100:
+extern unsigned long initmem_init(unsigned long, unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#297: FILE: include/asm-x86/page_32.h:100:
+extern unsigned long initmem_init(unsigned long, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#297: FILE: include/asm-x86/page_32.h:100:
+extern unsigned long initmem_init(unsigned long, unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#298: FILE: include/asm-x86/page_32.h:101:
+extern void zone_sizes_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#299: FILE: include/asm-x86/page_32.h:102:
+extern void setup_bootmem_allocator(void);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#301: FILE: include/asm-x86/page_32.h:104:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000264857.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 21 checks, 233 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000264857.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
