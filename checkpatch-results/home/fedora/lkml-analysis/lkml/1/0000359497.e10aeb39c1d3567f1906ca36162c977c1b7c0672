WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
read/write_cr8 that ain't really needed, but will also not hurt. If they are

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#48: FILE: include/asm-x86/system.h:1:
+#ifndef _X86_SYSTEM_H_

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LINE_SPACING: Missing a blank line after declarations
#70: FILE: include/asm-x86/system.h:23:
+	unsigned long val;
+	asm volatile("mov %%cr0,%0\n\t" :"=r" (val), "=m" (__force_order));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#70: FILE: include/asm-x86/system.h:23:
+	asm volatile("mov %%cr0,%0\n\t" :"=r" (val), "=m" (__force_order));
 	                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#76: FILE: include/asm-x86/system.h:29:
+	asm volatile("mov %0,%%cr0": :"r" (val), "m" (__force_order));
 	                           ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#76: FILE: include/asm-x86/system.h:29:
+	asm volatile("mov %0,%%cr0": :"r" (val), "m" (__force_order));
 	                             ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#82: FILE: include/asm-x86/system.h:35:
+	unsigned long val;
+	asm volatile("mov %%cr2,%0\n\t" :"=r" (val), "=m" (__force_order));

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#82: FILE: include/asm-x86/system.h:35:
+	asm volatile("mov %%cr2,%0\n\t" :"=r" (val), "=m" (__force_order));
 	                                ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#88: FILE: include/asm-x86/system.h:41:
+	asm volatile("mov %0,%%cr2": :"r" (val), "m" (__force_order));
 	                           ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#88: FILE: include/asm-x86/system.h:41:
+	asm volatile("mov %0,%%cr2": :"r" (val), "m" (__force_order));
 	                             ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#94: FILE: include/asm-x86/system.h:47:
+	unsigned long val;
+	asm volatile("mov %%cr3,%0\n\t" :"=r" (val), "=m" (__force_order));

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#94: FILE: include/asm-x86/system.h:47:
+	asm volatile("mov %%cr3,%0\n\t" :"=r" (val), "=m" (__force_order));
 	                                ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#100: FILE: include/asm-x86/system.h:53:
+	asm volatile("mov %0,%%cr3": :"r" (val), "m" (__force_order));
 	                           ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#100: FILE: include/asm-x86/system.h:53:
+	asm volatile("mov %0,%%cr3": :"r" (val), "m" (__force_order));
 	                             ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#106: FILE: include/asm-x86/system.h:59:
+	unsigned long val;
+	asm volatile("mov %%cr4,%0\n\t" :"=r" (val), "=m" (__force_order));

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#106: FILE: include/asm-x86/system.h:59:
+	asm volatile("mov %%cr4,%0\n\t" :"=r" (val), "=m" (__force_order));
 	                                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: include/asm-x86/system.h:67:
+ ^I * exists, so it will never fail. */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#114: FILE: include/asm-x86/system.h:67:
+ ^I * exists, so it will never fail. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#114: FILE: include/asm-x86/system.h:67:
+ 	 * exists, so it will never fail. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#116: FILE: include/asm-x86/system.h:69:
+	asm volatile("1: mov %%cr4, %0		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#117: FILE: include/asm-x86/system.h:70:
+		"2:				\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#118: FILE: include/asm-x86/system.h:71:
+		".section __ex_table,\"a\"	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#119: FILE: include/asm-x86/system.h:72:
+		".long 1b,2b			\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#120: FILE: include/asm-x86/system.h:73:
+		".previous			\n"

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#130: FILE: include/asm-x86/system.h:83:
+	asm volatile("mov %0,%%cr4": :"r" (val), "m" (__force_order));
 	                           ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#130: FILE: include/asm-x86/system.h:83:
+	asm volatile("mov %0,%%cr4": :"r" (val), "m" (__force_order));
 	                             ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#136: FILE: include/asm-x86/system.h:89:
+	unsigned long cr8;
+	asm volatile("mov %%cr8,%0" : "=r" (cr8), "=m" (__force_order));

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#147: FILE: include/asm-x86/system.h:100:
+	asm volatile("wbinvd": : :"memory");
 	                     ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#147: FILE: include/asm-x86/system.h:100:
+	asm volatile("wbinvd": : :"memory");
 	                         ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#150: FILE: include/asm-x86/system.h:103:
+static inline void clflush(volatile void *__p)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'clflush', this function's name, in a string
#152: FILE: include/asm-x86/system.h:105:
+	asm volatile("clflush %0" : "+m" (*(char __force *)__p));

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#178: FILE: include/asm-x86/system.h:131:
+#define nop() __asm__ __volatile__ ("nop")

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000359497.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 16 errors, 16 warnings, 0 checks, 351 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000359497.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
