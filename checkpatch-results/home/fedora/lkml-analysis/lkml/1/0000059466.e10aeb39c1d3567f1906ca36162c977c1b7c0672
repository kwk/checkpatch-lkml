WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
Gitweb:     http://git.kernel.org/tip/6c2c502910247d2820cb630e7b28fb6bdecdbf45

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#73: FILE: arch/x86/include/asm/uv/uv_irq.h:36:
+extern int

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#73: FILE: arch/x86/include/asm/uv/uv_irq.h:36:
+extern int

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#73: FILE: arch/x86/include/asm/uv/uv_irq.h:36:
+extern int

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#73: FILE: arch/x86/include/asm/uv/uv_irq.h:36:
+extern int

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#73: FILE: arch/x86/include/asm/uv/uv_irq.h:36:
+extern int

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#73: FILE: arch/x86/include/asm/uv/uv_irq.h:36:
+extern int

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#76: FILE: arch/x86/include/asm/uv/uv_irq.h:39:
+extern int uv_set_irq_affinity(unsigned int, const struct cpumask *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#76: FILE: arch/x86/include/asm/uv/uv_irq.h:39:
+extern int uv_set_irq_affinity(unsigned int, const struct cpumask *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct cpumask *' should also have an identifier name
#76: FILE: arch/x86/include/asm/uv/uv_irq.h:39:
+extern int uv_set_irq_affinity(unsigned int, const struct cpumask *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#80: FILE: arch/x86/include/asm/uv/uv_irq.h:41:
+extern int uv_irq_2_mmr_info(int, unsigned long *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#80: FILE: arch/x86/include/asm/uv/uv_irq.h:41:
+extern int uv_irq_2_mmr_info(int, unsigned long *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long *' should also have an identifier name
#80: FILE: arch/x86/include/asm/uv/uv_irq.h:41:
+extern int uv_irq_2_mmr_info(int, unsigned long *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#80: FILE: arch/x86/include/asm/uv/uv_irq.h:41:
+extern int uv_irq_2_mmr_info(int, unsigned long *, int *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#81: FILE: arch/x86/include/asm/uv/uv_irq.h:42:
+extern int uv_setup_irq(char *, int, int, unsigned long, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#81: FILE: arch/x86/include/asm/uv/uv_irq.h:42:
+extern int uv_setup_irq(char *, int, int, unsigned long, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#81: FILE: arch/x86/include/asm/uv/uv_irq.h:42:
+extern int uv_setup_irq(char *, int, int, unsigned long, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#81: FILE: arch/x86/include/asm/uv/uv_irq.h:42:
+extern int uv_setup_irq(char *, int, int, unsigned long, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#81: FILE: arch/x86/include/asm/uv/uv_irq.h:42:
+extern int uv_setup_irq(char *, int, int, unsigned long, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#81: FILE: arch/x86/include/asm/uv/uv_irq.h:42:
+extern int uv_setup_irq(char *, int, int, unsigned long, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#82: FILE: arch/x86/include/asm/uv/uv_irq.h:43:
+extern void uv_teardown_irq(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#82: FILE: arch/x86/include/asm/uv/uv_irq.h:43:
+extern void uv_teardown_irq(unsigned int);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#142: FILE: arch/x86/kernel/apic/io_apic.c:3808:
+	unsigned mmr_pnode;

WARNING:SPACING: missing space after struct definition
#189: FILE: arch/x86/kernel/uv_irq.c:20:
+struct uv_irq_2_mmr_pnode{

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#195: FILE: arch/x86/kernel/uv_irq.c:26:
+};
+static spinlock_t uv_irq_lock;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#211: FILE: arch/x86/kernel/uv_irq.c:61:
+static int uv_set_irq_2_mmr_info(int irq, unsigned long offset, unsigned blade)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc_node(sizeof(*n)...) over kmalloc_node(sizeof(struct uv_irq_2_mmr_pnode)...)
#219: FILE: arch/x86/kernel/uv_irq.c:69:
+	n = kmalloc_node(sizeof(struct uv_irq_2_mmr_pnode), GFP_KERNEL,

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#220: FILE: arch/x86/kernel/uv_irq.c:70:
+	n = kmalloc_node(sizeof(struct uv_irq_2_mmr_pnode), GFP_KERNEL,
+				uv_blade_to_memory_nid(blade));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: arch/x86/kernel/uv_irq.c:150:
+	ret = arch_enable_uv_irq(irq_name, irq, cpu, mmr_blade, mmr_offset,
+		restrict);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#354: FILE: drivers/misc/sgi-xp/xpc_uv.c:110:
+	mq->irq = uv_setup_irq(irq_name, cpu, mq->mmr_blade, mq->mmr_offset,
+			UV_AFFINITY_CPU);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000059466.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 21 warnings, 9 checks, 285 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000059466.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
