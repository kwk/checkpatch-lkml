CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#72: FILE: include/linux/aio.h:209:
+extern ssize_t wait_on_sync_kiocb(struct kiocb *iocb);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#73: FILE: include/linux/aio.h:210:
+extern int aio_put_req(struct kiocb *iocb);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#74: FILE: include/linux/aio.h:211:
+extern void kick_iocb(struct kiocb *iocb);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#75: FILE: include/linux/aio.h:212:
+extern int aio_complete(struct kiocb *iocb, long res, long res2);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#76: FILE: include/linux/aio.h:213:
+extern void __put_ioctx(struct kioctx *ctx);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#79: FILE: include/linux/aio.h:215:
+extern void exit_aio(struct mm_struct *mm);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#83: FILE: include/linux/aio.h:217:
+extern int io_submit_one(struct kioctx *ctx,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#84: FILE: include/linux/aio.h:218:
+extern int io_submit_one(struct kioctx *ctx,
+			struct iocb __user *user_iocb, struct iocb *iocb);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#91: FILE: include/linux/aio.h:223:
+int io_submit_one(struct kioctx *ctx, struct iocb __user *user_iocb,
+				  struct iocb *iocb);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#129: FILE: include/linux/file.h:62:
+extern void __fput(struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#129: FILE: include/linux/file.h:62:
+extern void __fput(struct file *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#130: FILE: include/linux/file.h:63:
+extern void fput(struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#130: FILE: include/linux/file.h:63:
+extern void fput(struct file *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#141: FILE: include/linux/file.h:80:
+extern struct file * fget(unsigned int fd);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#141: FILE: include/linux/file.h:80:
+extern struct file * fget(unsigned int fd);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#142: FILE: include/linux/file.h:81:
+extern struct file * fget_light(unsigned int fd, int *fput_needed);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#142: FILE: include/linux/file.h:81:
+extern struct file * fget_light(unsigned int fd, int *fput_needed);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#143: FILE: include/linux/file.h:82:
+extern void set_close_on_exec(unsigned int fd, int flag);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#148: FILE: include/linux/file.h:86:
+extern void put_unused_fd(unsigned int fd);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#157: FILE: include/linux/file.h:113:
+extern void fd_install(unsigned int fd, struct file * file);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#157: FILE: include/linux/file.h:113:
+extern void fd_install(unsigned int fd, struct file * file);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#186: FILE: include/linux/gfp.h:212:
+extern unsigned long __get_free_pages(gfp_t gfp_mask, unsigned int order);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#187: FILE: include/linux/gfp.h:213:
+extern unsigned long get_zeroed_page(gfp_t gfp_mask);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#199: FILE: include/linux/gfp.h:221:
+extern void __free_pages(struct page *page, unsigned int order);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#200: FILE: include/linux/gfp.h:222:
+extern void free_pages(unsigned long addr, unsigned int order);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#201: FILE: include/linux/gfp.h:223:
+extern void free_hot_page(struct page *page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#202: FILE: include/linux/gfp.h:224:
+extern void free_cold_page(struct page *page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#216: FILE: include/linux/interrupt.h:275:
+extern void raise_softirq_irqoff(unsigned int nr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#217: FILE: include/linux/interrupt.h:276:
+extern void raise_softirq(unsigned int nr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#226: FILE: include/linux/interrupt.h:343:
+extern void __tasklet_schedule(struct tasklet_struct *t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#235: FILE: include/linux/interrupt.h:351:
+extern void __tasklet_hi_schedule(struct tasklet_struct *t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#257: FILE: include/linux/mm.h:797:
+extern pte_t *get_locked_pte(struct mm_struct *mm, unsigned long addr, spinlock_t **ptl);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#270: FILE: include/linux/mutex-debug.h:21:
+extern void mutex_destroy(struct mutex *lock);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#283: FILE: include/linux/namei.h:65:
+extern int __user_walk(const char __user *, unsigned, struct nameidata *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#283: FILE: include/linux/namei.h:65:
+extern int __user_walk(const char __user *, unsigned, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char __user *' should also have an identifier name
#283: FILE: include/linux/namei.h:65:
+extern int __user_walk(const char __user *, unsigned, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#283: FILE: include/linux/namei.h:65:
+extern int __user_walk(const char __user *, unsigned, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nameidata *' should also have an identifier name
#283: FILE: include/linux/namei.h:65:
+extern int __user_walk(const char __user *, unsigned, struct nameidata *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#284: FILE: include/linux/namei.h:66:
+extern int __user_walk_fd(int dfd, const char __user *, unsigned, struct nameidata *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#284: FILE: include/linux/namei.h:66:
+extern int __user_walk_fd(int dfd, const char __user *, unsigned, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char __user *' should also have an identifier name
#284: FILE: include/linux/namei.h:66:
+extern int __user_walk_fd(int dfd, const char __user *, unsigned, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#284: FILE: include/linux/namei.h:66:
+extern int __user_walk_fd(int dfd, const char __user *, unsigned, struct nameidata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nameidata *' should also have an identifier name
#284: FILE: include/linux/namei.h:66:
+extern int __user_walk_fd(int dfd, const char __user *, unsigned, struct nameidata *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#290: FILE: include/linux/namei.h:71:
+extern int path_lookup(const char *, unsigned, struct nameidata *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#290: FILE: include/linux/namei.h:71:
+extern int path_lookup(const char *, unsigned, struct nameidata *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#303: FILE: include/linux/netdevice.h:324:
+extern void __napi_schedule(struct napi_struct *n);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#318: FILE: include/linux/pagemap.h:159:
+extern void __lock_page(struct page *page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#319: FILE: include/linux/pagemap.h:160:
+extern void __lock_page_nosync(struct page *page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#320: FILE: include/linux/pagemap.h:161:
+extern void unlock_page(struct page *page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#329: FILE: include/linux/pagemap.h:188:
+extern void wait_on_page_bit(struct page *page, int bit_nr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#345: FILE: include/linux/pid.h:82:
+extern void put_pid(struct pid *pid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#346: FILE: include/linux/pid.h:83:
+extern struct task_struct *pid_task(struct pid *pid, enum pid_type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#347: FILE: include/linux/pid.h:84:
+extern struct task_struct *get_pid_task(struct pid *pid,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#348: FILE: include/linux/pid.h:85:
+extern struct task_struct *get_pid_task(struct pid *pid,
+						enum pid_type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#361: FILE: include/linux/pid.h:93:
+extern int attach_pid(struct task_struct *task,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#362: FILE: include/linux/pid.h:94:
+extern int attach_pid(struct task_struct *task,
+				enum pid_type type, struct pid *pid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#363: FILE: include/linux/pid.h:95:
+extern void detach_pid(struct task_struct *task, enum pid_type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#364: FILE: include/linux/pid.h:96:
+extern void transfer_pid(struct task_struct *old,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#365: FILE: include/linux/pid.h:97:
+extern void transfer_pid(struct task_struct *old,
+				  struct task_struct *new, enum pid_type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#374: FILE: include/linux/pid.h:112:
+extern struct pid *find_pid_ns(int nr, struct pid_namespace *ns);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#383: FILE: include/linux/pid.h:123:
+extern void free_pid(struct pid *pid);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#399: FILE: include/linux/rcupdate.h:305:
+extern void call_rcu(struct rcu_head *head, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#399: FILE: include/linux/rcupdate.h:305:
+extern void call_rcu(struct rcu_head *head, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#400: FILE: include/linux/rcupdate.h:306:
+extern void call_rcu(struct rcu_head *head, 
+				void (*func)(struct rcu_head *head));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#401: FILE: include/linux/rcupdate.h:307:
+extern void call_rcu_bh(struct rcu_head *head,

WARNING:DEPRECATED_API: Deprecated use of 'call_rcu_bh', prefer 'call_rcu' instead
#401: FILE: include/linux/rcupdate.h:307:
+extern void call_rcu_bh(struct rcu_head *head,

Usage of a deprecated RCU API is detected.  It is recommended to replace
old flavourful RCU APIs by their new vanilla-RCU counterparts.

The full list of available RCU APIs can be viewed from the kernel docs.

See: https://www.kernel.org/doc/html/latest/RCU/whatisRCU.html#full-list-of-rcu-apis

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#402: FILE: include/linux/rcupdate.h:308:
+extern void call_rcu_bh(struct rcu_head *head,
+				void (*func)(struct rcu_head *head));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#422: FILE: include/linux/rwsem-spinlock.h:63:
+extern void __down_read(struct rw_semaphore *sem);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#423: FILE: include/linux/rwsem-spinlock.h:64:
+extern int __down_read_trylock(struct rw_semaphore *sem);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#424: FILE: include/linux/rwsem-spinlock.h:65:
+extern void __down_write(struct rw_semaphore *sem);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#425: FILE: include/linux/rwsem-spinlock.h:66:
+extern void __down_write_nested(struct rw_semaphore *sem, int subclass);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#426: FILE: include/linux/rwsem-spinlock.h:67:
+extern int __down_write_trylock(struct rw_semaphore *sem);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#427: FILE: include/linux/rwsem-spinlock.h:68:
+extern void __up_read(struct rw_semaphore *sem);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#428: FILE: include/linux/rwsem-spinlock.h:69:
+extern void __up_write(struct rw_semaphore *sem);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#429: FILE: include/linux/rwsem-spinlock.h:70:
+extern void __downgrade_write(struct rw_semaphore *sem);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#442: FILE: include/linux/sched.h:293:
+extern signed long schedule_timeout(signed long timeout);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#454: FILE: include/linux/sched.h:1575:
+extern int wake_up_state(struct task_struct * tsk, unsigned int state);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#454: FILE: include/linux/sched.h:1575:
+extern int wake_up_state(struct task_struct * tsk, unsigned int state);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#455: FILE: include/linux/sched.h:1576:
+extern int wake_up_process(struct task_struct * tsk);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#455: FILE: include/linux/sched.h:1576:
+extern int wake_up_process(struct task_struct * tsk);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#456: FILE: include/linux/sched.h:1577:
+extern void wake_up_new_task(struct task_struct * tsk,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#456: FILE: include/linux/sched.h:1577:
+extern void wake_up_new_task(struct task_struct * tsk,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#457: FILE: include/linux/sched.h:1578:
+extern void wake_up_new_task(struct task_struct * tsk,
+						unsigned long clone_flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#466: FILE: include/linux/sched.h:1670:
+extern void __mmdrop(struct mm_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#466: FILE: include/linux/sched.h:1670:
+extern void __mmdrop(struct mm_struct *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#482: FILE: include/linux/swap.h:176:
+extern void lru_cache_add(struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#482: FILE: include/linux/swap.h:176:
+extern void lru_cache_add(struct page *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#483: FILE: include/linux/swap.h:177:
+extern void lru_cache_add_active(struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#483: FILE: include/linux/swap.h:177:
+extern void lru_cache_add_active(struct page *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#484: FILE: include/linux/swap.h:178:
+extern void activate_page(struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#484: FILE: include/linux/swap.h:178:
+extern void activate_page(struct page *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#485: FILE: include/linux/swap.h:179:
+extern void mark_page_accessed(struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#485: FILE: include/linux/swap.h:179:
+extern void mark_page_accessed(struct page *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#500: FILE: include/linux/wait.h:120:
+extern void add_wait_queue(wait_queue_head_t *q, wait_queue_t * wait);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#500: FILE: include/linux/wait.h:120:
+extern void add_wait_queue(wait_queue_head_t *q, wait_queue_t * wait);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#501: FILE: include/linux/wait.h:121:
+extern void add_wait_queue_exclusive(wait_queue_head_t *q, wait_queue_t * wait);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#501: FILE: include/linux/wait.h:121:
+extern void add_wait_queue_exclusive(wait_queue_head_t *q, wait_queue_t * wait);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#502: FILE: include/linux/wait.h:122:
+extern void remove_wait_queue(wait_queue_head_t *q, wait_queue_t * wait);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#502: FILE: include/linux/wait.h:122:
+extern void remove_wait_queue(wait_queue_head_t *q, wait_queue_t * wait);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#521: FILE: include/linux/wait.h:145:
+extern void __wake_up_locked(wait_queue_head_t *q, unsigned int mode);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#522: FILE: include/linux/wait.h:146:
+extern void __wake_up_sync(wait_queue_head_t *q, unsigned int mode, int nr);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'wait_queue_head_t *' should also have an identifier name
#523: FILE: include/linux/wait.h:147:
+void __wake_up_bit(wait_queue_head_t *, void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#523: FILE: include/linux/wait.h:147:
+void __wake_up_bit(wait_queue_head_t *, void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#523: FILE: include/linux/wait.h:147:
+void __wake_up_bit(wait_queue_head_t *, void *, int);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#524: FILE: include/linux/wait.h:148:
+int __wait_on_bit(wait_queue_head_t *, struct wait_bit_queue *, int (*)(void *), unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'wait_queue_head_t *' should also have an identifier name
#524: FILE: include/linux/wait.h:148:
+int __wait_on_bit(wait_queue_head_t *, struct wait_bit_queue *, int (*)(void *), unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct wait_bit_queue *' should also have an identifier name
#524: FILE: include/linux/wait.h:148:
+int __wait_on_bit(wait_queue_head_t *, struct wait_bit_queue *, int (*)(void *), unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#524: FILE: include/linux/wait.h:148:
+int __wait_on_bit(wait_queue_head_t *, struct wait_bit_queue *, int (*)(void *), unsigned);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#525: FILE: include/linux/wait.h:149:
+int __wait_on_bit_lock(wait_queue_head_t *, struct wait_bit_queue *, int (*)(void *), unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'wait_queue_head_t *' should also have an identifier name
#525: FILE: include/linux/wait.h:149:
+int __wait_on_bit_lock(wait_queue_head_t *, struct wait_bit_queue *, int (*)(void *), unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct wait_bit_queue *' should also have an identifier name
#525: FILE: include/linux/wait.h:149:
+int __wait_on_bit_lock(wait_queue_head_t *, struct wait_bit_queue *, int (*)(void *), unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#525: FILE: include/linux/wait.h:149:
+int __wait_on_bit_lock(wait_queue_head_t *, struct wait_bit_queue *, int (*)(void *), unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#526: FILE: include/linux/wait.h:150:
+void wake_up_bit(void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#526: FILE: include/linux/wait.h:150:
+void wake_up_bit(void *, int);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#527: FILE: include/linux/wait.h:151:
+int out_of_line_wait_on_bit(void *, int, int (*)(void *), unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#527: FILE: include/linux/wait.h:151:
+int out_of_line_wait_on_bit(void *, int, int (*)(void *), unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#527: FILE: include/linux/wait.h:151:
+int out_of_line_wait_on_bit(void *, int, int (*)(void *), unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#527: FILE: include/linux/wait.h:151:
+int out_of_line_wait_on_bit(void *, int, int (*)(void *), unsigned);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#528: FILE: include/linux/wait.h:152:
+int out_of_line_wait_on_bit_lock(void *, int, int (*)(void *), unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#528: FILE: include/linux/wait.h:152:
+int out_of_line_wait_on_bit_lock(void *, int, int (*)(void *), unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#528: FILE: include/linux/wait.h:152:
+int out_of_line_wait_on_bit_lock(void *, int, int (*)(void *), unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#528: FILE: include/linux/wait.h:152:
+int out_of_line_wait_on_bit_lock(void *, int, int (*)(void *), unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#529: FILE: include/linux/wait.h:153:
+wait_queue_head_t *bit_waitqueue(void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#529: FILE: include/linux/wait.h:153:
+wait_queue_head_t *bit_waitqueue(void *, int);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#543: FILE: include/linux/wait.h:383:
+void prepare_to_wait(wait_queue_head_t *q,
+				wait_queue_t *wait, int state);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#545: FILE: include/linux/wait.h:385:
+void prepare_to_wait_exclusive(wait_queue_head_t *q,
+				wait_queue_t *wait, int state);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#561: FILE: include/linux/workqueue.h:173:
+extern int queue_work(struct workqueue_struct *wq, struct work_struct *work);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#562: FILE: include/linux/workqueue.h:174:
+extern int queue_delayed_work(struct workqueue_struct *wq,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#563: FILE: include/linux/workqueue.h:175:
+extern int queue_delayed_work(struct workqueue_struct *wq,
+			struct delayed_work *work, unsigned long delay);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#568: FILE: include/linux/workqueue.h:179:
+extern void flush_workqueue(struct workqueue_struct *wq);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#574: FILE: include/linux/workqueue.h:182:
+extern int schedule_work(struct work_struct *work);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#575: FILE: include/linux/workqueue.h:183:
+extern int schedule_delayed_work(struct delayed_work *work,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#576: FILE: include/linux/workqueue.h:184:
+extern int schedule_delayed_work(struct delayed_work *work,
+					unsigned long delay);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000348372.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 40 warnings, 83 checks, 420 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000348372.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
