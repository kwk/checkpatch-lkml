WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#40: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#45: FILE: fs/aufs/vfsub.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#59: FILE: fs/aufs/vfsub.c:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#60: FILE: fs/aufs/vfsub.c:16:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

CHECK:CAMELCASE: Avoid CamelCase: <LKTRTrace>
#89: FILE: fs/aufs/vfsub.c:45:
+	LKTRTrace("%s\n", path);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#100: FILE: fs/aufs/vfsub.c:56:
+		      struct nameidata *nd)
 		                        ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#107: FILE: fs/aufs/vfsub.c:63:
+	err = path_lookup(name, flags, nd);
 	                               ^^

CHECK:CAMELCASE: Avoid CamelCase: <AuDLNPair>
#120: FILE: fs/aufs/vfsub.c:76:
+	LKTRTrace("%.*s/%.*s\n", AuDLNPair(parent), len, name);

CHECK:CAMELCASE: Avoid CamelCase: <IMustLock>
#121: FILE: fs/aufs/vfsub.c:77:
+	IMustLock(parent->d_inode);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#130: FILE: fs/aufs/vfsub.c:86:
+				  struct nameidata *nd)
 				                    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#134: FILE: fs/aufs/vfsub.c:90:
+	LKTRTrace("%.*s/%.*s, nd %d\n",
 	                      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#135: FILE: fs/aufs/vfsub.c:91:
+		  AuDLNPair(parent), AuLNPair(name), !!nd);
 		                                       ^^

CHECK:CAMELCASE: Avoid CamelCase: <AuLNPair>
#135: FILE: fs/aufs/vfsub.c:91:
+		  AuDLNPair(parent), AuLNPair(name), !!nd);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#136: FILE: fs/aufs/vfsub.c:92:
+	if (nd)
 	    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#137: FILE: fs/aufs/vfsub.c:93:
+		LKTRTrace("nd{0x%x}\n", nd->flags);
 		           ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#140: FILE: fs/aufs/vfsub.c:96:
+	d = __lookup_hash(name, parent, nd);
 	                                ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#149: FILE: fs/aufs/vfsub.c:105:
+		    struct nameidata *nd)
 		                      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#157: FILE: fs/aufs/vfsub.c:113:
+	err = vfs_create(dir, dentry, mode, nd);
 	                                    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#160: FILE: fs/aufs/vfsub.c:116:
+		if (nd)
 		    ^^

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#307: FILE: fs/aufs/vfsub.c:263:
+	LKTRTrace("%.*s, cnt %lu, pos %Ld\n",

CHECK:BRACES: braces {} should be used on all arms of this statement
#310: FILE: fs/aufs/vfsub.c:266:
+	if (0 /*!au_test_nfs(file->f_vfsmnt->mnt_sb)*/)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#312: FILE: fs/aufs/vfsub.c:268:
+	else {

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#342: FILE: fs/aufs/vfsub.c:298:
+	LKTRTrace("%.*s, cnt %lu, pos %Ld\n",

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#388: FILE: fs/aufs/vfsub.c:344:
+	LKTRTrace("%.*s, pos %Ld, len %lu, 0x%x\n",

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#404: FILE: fs/aufs/vfsub.c:360:
+	LKTRTrace("%.*s, pos %Ld, len %lu, 0x%x\n",

CHECK:BRACES: braces {} should be used on all arms of this statement
#439: FILE: fs/aufs/vfsub.c:395:
+	if (!do_sio)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#441: FILE: fs/aufs/vfsub.c:397:
+	else {

CHECK:CAMELCASE: Avoid CamelCase: <AuTraceErr>
#454: FILE: fs/aufs/vfsub.c:410:
+	AuTraceErr(err);

CHECK:BRACES: braces {} should be used on all arms of this statement
#480: FILE: fs/aufs/vfsub.c:436:
+	if (!do_sio)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#482: FILE: fs/aufs/vfsub.c:438:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#535: FILE: fs/aufs/vfsub.c:491:
+	if (!vfsub_ftest(flags, DLGT))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#537: FILE: fs/aufs/vfsub.c:493:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#539: FILE: fs/aufs/vfsub.c:495:
+		int wkq_err;
+		wkq_err = au_wkq_wait(call_notify_change, args, /*dlgt*/1);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#583: FILE: fs/aufs/vfsub.c:539:
+	const int stop_sillyrename = (au_test_nfs(a->dentry->d_sb)
+				      && atomic_read(&a->dentry->d_count) == 1);

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#598: FILE: fs/aufs/vfsub.c:554:
+		iput(h_inode);
 		^^^^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#619: FILE: fs/aufs/vfsub.c:575:
+	if (!vfsub_ftest(vargs->flags, DLGT)
+	    && !vfsub_ftest(vargs->flags, FORCE_UNLINK))

CHECK:BRACES: Unbalanced braces around else statement
#621: FILE: fs/aufs/vfsub.c:577:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#623: FILE: fs/aufs/vfsub.c:579:
+		int wkq_err;
+		wkq_err = au_wkq_wait(call_unlink, &args,

CHECK:BRACES: braces {} should be used on all arms of this statement
#649: FILE: fs/aufs/vfsub.c:605:
+	if (!dlgt)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#651: FILE: fs/aufs/vfsub.c:607:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#653: FILE: fs/aufs/vfsub.c:609:
+		int wkq_err;
+		wkq_err = au_wkq_wait(call_statfs, args, /*dlgt*/1);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#684: FILE: fs/aufs/vfsub.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#698: FILE: fs/aufs/vfsub.h:15:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#699: FILE: fs/aufs/vfsub.h:16:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

CHECK:CAMELCASE: Avoid CamelCase: <Vfsub_DLGT>
#719: FILE: fs/aufs/vfsub.h:36:
+#define Vfsub_DLGT		1		/* operation with delegation */

CHECK:CAMELCASE: Avoid CamelCase: <Vfsub_FORCE_UNLINK>
#720: FILE: fs/aufs/vfsub.h:37:
+#define Vfsub_FORCE_UNLINK	(1 << 1)	/* force unlinking */

CHECK:BIT_MACRO: Prefer using the BIT macro
#720: FILE: fs/aufs/vfsub.h:37:
+#define Vfsub_FORCE_UNLINK	(1 << 1)	/* force unlinking */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:CAMELCASE: Avoid CamelCase: <Vfsub_##name>
#721: FILE: fs/aufs/vfsub.h:38:
+#define vfsub_ftest(flags, name)	((flags) & Vfsub_##name)

CHECK:CAMELCASE: Avoid CamelCase: <AuLsc_I_Begin>
#822: FILE: fs/aufs/vfsub.h:139:
+	AuLsc_I_Begin = I_MUTEX_QUOTA, /* 4 */

CHECK:CAMELCASE: Avoid CamelCase: <AuLsc_I_PARENT>
#823: FILE: fs/aufs/vfsub.h:140:
+	AuLsc_I_PARENT,		/* hidden inode, parent first */

CHECK:CAMELCASE: Avoid CamelCase: <AuLsc_I_CHILD>
#824: FILE: fs/aufs/vfsub.h:141:
+	AuLsc_I_CHILD,

CHECK:CAMELCASE: Avoid CamelCase: <AuLsc_I_PARENT2>
#825: FILE: fs/aufs/vfsub.h:142:
+	AuLsc_I_PARENT2,	/* copyup dirs */

CHECK:CAMELCASE: Avoid CamelCase: <AuLsc_I_CHILD2>
#826: FILE: fs/aufs/vfsub.h:143:
+	AuLsc_I_CHILD2,

CHECK:CAMELCASE: Avoid CamelCase: <AuLsc_I_End>
#827: FILE: fs/aufs/vfsub.h:144:
+	AuLsc_I_End

CHECK:CAMELCASE: Avoid CamelCase: <MtxMustLock>
#830: FILE: fs/aufs/vfsub.h:147:
+#define IMustLock(i)	MtxMustLock(&(i)->i_mutex)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#878: FILE: fs/aufs/vfsub.h:195:
+int do_vfsub_permission(struct inode *inode, int mask, struct nameidata *nd)
                                                                          ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#880: FILE: fs/aufs/vfsub.h:197:
+	LKTRTrace("i%lu, mask 0x%x, nd %d\n", inode->i_ino, mask, !!nd);
 	                            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#880: FILE: fs/aufs/vfsub.h:197:
+	LKTRTrace("i%lu, mask 0x%x, nd %d\n", inode->i_ino, mask, !!nd);
 	                                                            ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#882: FILE: fs/aufs/vfsub.h:199:
+	return permission(inode, mask, nd);
 	                               ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#889: FILE: fs/aufs/vfsub.h:206:
+		      struct nameidata *nd);
 		                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#894: FILE: fs/aufs/vfsub.h:211:
+				  struct nameidata *nd);
 				                    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#899: FILE: fs/aufs/vfsub.h:216:
+		    struct nameidata *nd);
 		                      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#958: FILE: fs/aufs/vfsub.h:275:
+int vfsub_permission(struct inode *inode, int mask, struct nameidata *nd,
                                                                       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#962: FILE: fs/aufs/vfsub.h:279:
+		 struct nameidata *nd, int dlgt);
 		                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#997: FILE: fs/aufs/vfsub.h:314:
+int vfsub_permission(struct inode *inode, int mask, struct nameidata *nd,
                                                                       ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1000: FILE: fs/aufs/vfsub.h:317:
+	return do_vfsub_permission(inode, mask, nd);
 	                                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1005: FILE: fs/aufs/vfsub.h:322:
+		 struct nameidata *nd, int dlgt)
 		                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1007: FILE: fs/aufs/vfsub.h:324:
+	return do_vfsub_create(dir, dentry, mode, nd);
 	                                          ^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000277600.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 35 warnings, 29 checks, 1105 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000277600.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
