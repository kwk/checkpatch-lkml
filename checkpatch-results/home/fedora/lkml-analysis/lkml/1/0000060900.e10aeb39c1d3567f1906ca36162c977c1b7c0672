WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
Gitweb:     http://git.kernel.org/tip/55ffb7a6bd45d0083ffb132381cb46964a4afe01

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct trace_migrate_task_event *' should also have an identifier name
#151: FILE: tools/perf/builtin-sched.c:795:
+	void (*migrate_task_event)(struct trace_migrate_task_event *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct event *' should also have an identifier name
#151: FILE: tools/perf/builtin-sched.c:795:
+	void (*migrate_task_event)(struct trace_migrate_task_event *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: tools/perf/builtin-sched.c:796:
+	void (*migrate_task_event)(struct trace_migrate_task_event *,
+			   struct event *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#179: FILE: tools/perf/builtin-sched.c:1190:
+latency_migrate_task_event(struct trace_migrate_task_event *migrate_task_event,
+		     struct event *__event __used,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#205: FILE: tools/perf/builtin-sched.c:1216:
+	BUG_ON(list_empty(&atoms->work_list));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#208: FILE: tools/perf/builtin-sched.c:1219:
+	atom->sched_in_time = atom->sched_out_time = atom->wake_up_time = timestamp;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#230: FILE: tools/perf/builtin-sched.c:1594:
+process_sched_migrate_task_event(struct raw_event_sample *raw,
+			   struct event *event,

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#245: FILE: tools/perf/builtin-sched.c:1609:
+		trace_handler->migrate_task_event(&migrate_task_event, event, cpu, timestamp, thread);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#265: FILE: tools/perf/builtin-sched.c:1686:
+	if (profile_cpu != -1 && profile_cpu != (int) cpu)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000060900.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 5 checks, 172 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000060900.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
