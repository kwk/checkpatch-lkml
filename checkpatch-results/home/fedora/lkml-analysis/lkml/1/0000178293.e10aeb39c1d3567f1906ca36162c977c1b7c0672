CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#73: FILE: drivers/rtc/rtc-ds1307.c:140:
+static s32 ds1307_read_block_data_once(struct i2c_client *client, u8 command,
+				  u8 length, u8 *values)

WARNING:LINE_SPACING: Missing a blank line after declarations
#76: FILE: drivers/rtc/rtc-ds1307.c:143:
+	s32 i, data;
+	for (i = 0; i < length; i++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#90: FILE: drivers/rtc/rtc-ds1307.c:157:
+	s32 ret;
+	pr_debug("ds1307_read_block_data (length=%d)\n", length);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ds1307_read_block_data', this function's name, in a string
#90: FILE: drivers/rtc/rtc-ds1307.c:157:
+	pr_debug("ds1307_read_block_data (length=%d)\n", length);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:LINE_SPACING: Missing a blank line after declarations
#96: FILE: drivers/rtc/rtc-ds1307.c:163:
+		s32 ret;
+		memcpy(oldvalues, values, length);

WARNING:LINE_SPACING: Missing a blank line after declarations
#108: FILE: drivers/rtc/rtc-ds1307.c:175:
+	u8 currvalues[I2C_SMBUS_BLOCK_MAX];
+	pr_debug("ds1307_write_block_data (length=%d)\n", length);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ds1307_write_block_data', this function's name, in a string
#108: FILE: drivers/rtc/rtc-ds1307.c:175:
+	pr_debug("ds1307_write_block_data (length=%d)\n", length);

WARNING:LINE_SPACING: Missing a blank line after declarations
#111: FILE: drivers/rtc/rtc-ds1307.c:178:
+		s32 i, ret;
+		for (i = 0; i < length; i++) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#213: FILE: drivers/rtc/rtc-ds1307.c:601:
+	if (!i2c_check_functionality(adapter, I2C_FUNC_SMBUS_BYTE_DATA)
+	    && !i2c_check_functionality(adapter, I2C_FUNC_SMBUS_I2C_BLOCK))

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#225: FILE: drivers/rtc/rtc-ds1307.c:615:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#225: FILE: drivers/rtc/rtc-ds1307.c:615:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000178293.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 7 warnings, 3 checks, 179 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000178293.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
