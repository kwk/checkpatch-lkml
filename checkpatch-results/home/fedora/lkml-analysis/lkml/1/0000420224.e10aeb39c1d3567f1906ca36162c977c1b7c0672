WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
master.kernel.org:/pub/scm/linux/kernel/git/jgarzik/netdev-2.6.git upstream-linus

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#93: FILE: drivers/net/ehea/ehea_main.c:455:
+			if ((cqe->status & EHEA_CQE_VLAN_TAG_XTRACT)
+			    && port->vgrp)

CHECK:CAMELCASE: Avoid CamelCase: <IbmVethNumBufferPools>
#142: FILE: drivers/net/ibmveth.c:924:
+	for (i = 0; i < IbmVethNumBufferPools; i++)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:BRACES: braces {} should be used on all arms of this statement
#160: FILE: drivers/net/ibmveth.c:939:
+			if (reinit && netif_running(adapter->netdev)) {
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#165: FILE: drivers/net/ibmveth.c:944:
+				if ((rc = ibmveth_open(adapter->netdev)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: Unbalanced braces around else statement
#167: FILE: drivers/net/ibmveth.c:946:
+			} else

ERROR:SPACING: space required before the open parenthesis '('
#187: FILE: drivers/net/ibmveth.c:1266:
+				if(ibmveth_alloc_buffer_pool(pool)) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#195: FILE: drivers/net/ibmveth.c:1274:
+				if ((rc = ibmveth_open(netdev)))

CHECK:BRACES: Unbalanced braces around else statement
#197: FILE: drivers/net/ibmveth.c:1276:
+			} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#212: FILE: drivers/net/ibmveth.c:1306:
+			if (netif_running(netdev)) {
[...]
+			} else
[...]

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#217: FILE: drivers/net/ibmveth.c:1311:
+				if ((rc = ibmveth_open(netdev)))

CHECK:BRACES: Unbalanced braces around else statement
#219: FILE: drivers/net/ibmveth.c:1313:
+			} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#232: FILE: drivers/net/ibmveth.c:1320:
+			if (netif_running(netdev)) {
[...]
+			} else
[...]

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#237: FILE: drivers/net/ibmveth.c:1325:
+				if ((rc = ibmveth_open(netdev)))

CHECK:BRACES: Unbalanced braces around else statement
#239: FILE: drivers/net/ibmveth.c:1327:
+			} else

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#301: FILE: drivers/net/netxen/netxen_nic.h:696:
+#define NETXEN_PRIMARY_START ^I^I(NETXEN_BOOTLD_START)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#302: FILE: drivers/net/netxen/netxen_nic.h:697:
+#define NETXEN_FLASH_CRBINIT_SIZE ^I(0x4000)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#303: FILE: drivers/net/netxen/netxen_nic.h:698:
+#define NETXEN_FLASH_BRDCFG_SIZE ^I(sizeof(struct netxen_board_info))$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#304: FILE: drivers/net/netxen/netxen_nic.h:699:
+#define NETXEN_FLASH_USER_SIZE		(sizeof(struct netxen_user_info)/sizeof(u32))
                               		                                ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#305: FILE: drivers/net/netxen/netxen_nic.h:700:
+#define NETXEN_FLASH_SECONDARY_SIZE ^I(NETXEN_USER_START-NETXEN_SECONDARY_START)$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#305: FILE: drivers/net/netxen/netxen_nic.h:700:
+#define NETXEN_FLASH_SECONDARY_SIZE 	(NETXEN_USER_START-NETXEN_SECONDARY_START)
                                     	                  ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#307: FILE: drivers/net/netxen/netxen_nic.h:702:
+#define NETXEN_NUM_CONFIG_SECTORS ^I(1)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#423: FILE: drivers/net/netxen/netxen_nic_init.c:604:
+^Iret = netxen_rom_fast_read_words(adapter, NETXEN_CRBINIT_START, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#424: FILE: drivers/net/netxen/netxen_nic_init.c:605:
+	ret = netxen_rom_fast_read_words(adapter, NETXEN_CRBINIT_START, 
+					buffer, NETXEN_FLASH_SECTOR_SIZE);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#430: FILE: drivers/net/netxen/netxen_nic_init.c:609:
+^Iret = netxen_rom_fast_write_words(adapter, NETXEN_FIXED_START, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#431: FILE: drivers/net/netxen/netxen_nic_init.c:610:
+	ret = netxen_rom_fast_write_words(adapter, NETXEN_FIXED_START, 
+					buffer, NETXEN_FLASH_SECTOR_SIZE);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#440: FILE: drivers/net/netxen/netxen_nic_init.c:657:
+^Irange = (addr == NETXEN_USER_START) ? $

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#488: FILE: drivers/net/netxen/netxen_nic_main.c:549:
+	       udelay(500);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#510: FILE: drivers/net/netxen/netxen_nic_niu.c:460:
+		NETXEN_NIU_XGE_CONFIG_1+(0x10000*portnum), 0x1447);
 		                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#510: FILE: drivers/net/netxen/netxen_nic_niu.c:460:
+		NETXEN_NIU_XGE_CONFIG_1+(0x10000*portnum), 0x1447);
 		                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#513: FILE: drivers/net/netxen/netxen_nic_niu.c:462:
+		NETXEN_NIU_XGE_CONFIG_0+(0x10000*portnum), 0x5);
 		                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#513: FILE: drivers/net/netxen/netxen_nic_niu.c:462:
+		NETXEN_NIU_XGE_CONFIG_0+(0x10000*portnum), 0x5);
 		                                ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'phydev->interface == PHY_INTERFACE_MODE_RGMII'
#542: FILE: drivers/net/phy/marvell.c:144:
+	if ((phydev->interface == PHY_INTERFACE_MODE_RGMII) ||
+	    (phydev->interface == PHY_INTERFACE_MODE_RGMII_ID)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'phydev->interface == PHY_INTERFACE_MODE_RGMII_ID'
#542: FILE: drivers/net/phy/marvell.c:144:
+	if ((phydev->interface == PHY_INTERFACE_MODE_RGMII) ||
+	    (phydev->interface == PHY_INTERFACE_MODE_RGMII_ID)) {

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#664: FILE: drivers/net/via-velocity.c:1565:
+		VELOCITY_PRT(MSG_LEVEL_INFO, KERN_NOTICE "%s: Link auto-negotiation", vptr->dev->name);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000420224.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 7 warnings, 20 checks, 513 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000420224.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
