WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#69: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#74: FILE: fs/ceph/mds_client.c:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:STATIC_CONST: Move const after static - use 'static const struct ceph_connection_operations '
#113: FILE: fs/ceph/mds_client.c:40:
+const static struct ceph_connection_operations mds_con_ops;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#115: FILE: fs/ceph/mds_client.c:42:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#165: FILE: fs/ceph/mds_client.c:92:
+			sizeof(u32)*le32_to_cpu(info->dirfrag->ndist);
 			           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#207: FILE: fs/ceph/mds_client.c:134:
+		sizeof(u32)*le32_to_cpu(info->dir_dir->ndist);
 		           ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info->dir_in"
#225: FILE: fs/ceph/mds_client.c:152:
+	if (info->dir_in == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#235: FILE: fs/ceph/mds_client.c:162:
+		ceph_decode_need(p, end, sizeof(u32)*2, bad);
 		                                    ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#240: FILE: fs/ceph/mds_client.c:167:
+		dout("parsed dir dname '%.*s'\n", info->dir_dname_len[i],
 		^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#282: FILE: fs/ceph/mds_client.c:209:
+		err = parse_reply_info_trace(&p, p+len, info);
 		                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#290: FILE: fs/ceph/mds_client.c:217:
+		err = parse_reply_info_dir(&p, p+len, info);
 		                                ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#317: FILE: fs/ceph/mds_client.c:244:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#337: FILE: fs/ceph/mds_client.c:264:
+		dout("mdsc get_session %p %d -> %d\n", s,
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_session', this function's name, in a string
#337: FILE: fs/ceph/mds_client.c:264:
+		dout("mdsc get_session %p %d -> %d\n", s,

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#338: FILE: fs/ceph/mds_client.c:265:
+		     atomic_read(&s->s_ref)-1, atomic_read(&s->s_ref));
 		                           ^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#340: FILE: fs/ceph/mds_client.c:267:
+		return s;
+	} else {

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#341: FILE: fs/ceph/mds_client.c:268:
+		dout("mdsc get_session %p 0 -- FAIL", s);
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_session', this function's name, in a string
#341: FILE: fs/ceph/mds_client.c:268:
+		dout("mdsc get_session %p 0 -- FAIL", s);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#348: FILE: fs/ceph/mds_client.c:275:
+	dout("mdsc put_session %p %d -> %d\n", s,
 	^^^^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#349: FILE: fs/ceph/mds_client.c:276:
+	     atomic_read(&s->s_ref), atomic_read(&s->s_ref)-1);
 	                                                   ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mdsc->sessions[mds]"
#364: FILE: fs/ceph/mds_client.c:291:
+	if (mds >= mdsc->max_sessions || mdsc->sessions[mds] == NULL)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#367: FILE: fs/ceph/mds_client.c:294:
+	dout("lookup_mds_session %p %d\n", session,
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#420: FILE: fs/ceph/mds_client.c:347:
+	dout("register_session mds%d\n", mds);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'register_session', this function's name, in a string
#420: FILE: fs/ceph/mds_client.c:347:
+	dout("register_session mds%d\n", mds);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#422: FILE: fs/ceph/mds_client.c:349:
+		int newmax = 1 << get_count_order(mds+1);
 		                                     ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#425: FILE: fs/ceph/mds_client.c:352:
+		dout("register_session realloc to %d\n", newmax);
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'register_session', this function's name, in a string
#425: FILE: fs/ceph/mds_client.c:352:
+		dout("register_session realloc to %d\n", newmax);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sa"
#427: FILE: fs/ceph/mds_client.c:354:
+		if (sa == NULL)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#447: FILE: fs/ceph/mds_client.c:374:
+	dout("unregister_session mds%d %p\n", mds, mdsc->sessions[mds]);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'unregister_session', this function's name, in a string
#447: FILE: fs/ceph/mds_client.c:374:
+	dout("unregister_session mds%d %p\n", mds, mdsc->sessions[mds]);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#467: FILE: fs/ceph/mds_client.c:394:
+	dout("mdsc put_request %p %d -> %d\n", req,
 	^^^^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#468: FILE: fs/ceph/mds_client.c:395:
+	     atomic_read(&req->r_ref), atomic_read(&req->r_ref)-1);
 	                                                       ^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#479: FILE: fs/ceph/mds_client.c:406:
+			iput(req->r_inode);
 			^^^^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#485: FILE: fs/ceph/mds_client.c:412:
+			iput(req->r_target_inode);
 			^^^^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#489: FILE: fs/ceph/mds_client.c:416:
+			ceph_put_cap_refs(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#508: FILE: fs/ceph/mds_client.c:435:
+static struct ceph_mds_request *__lookup_request(struct ceph_mds_client *mdsc,
+					     u64 tid)

WARNING:LINE_SPACING: Missing a blank line after declarations
#511: FILE: fs/ceph/mds_client.c:438:
+	struct ceph_mds_request *req;
+	req = radix_tree_lookup(&mdsc->request_tree, tid);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#530: FILE: fs/ceph/mds_client.c:457:
+	dout("__register_request %p tid %lld\n", req, req->r_tid);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__register_request', this function's name, in a string
#530: FILE: fs/ceph/mds_client.c:457:
+	dout("__register_request %p tid %lld\n", req, req->r_tid);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#547: FILE: fs/ceph/mds_client.c:474:
+	dout("__unregister_request %p tid %lld\n", req, req->r_tid);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__unregister_request', this function's name, in a string
#547: FILE: fs/ceph/mds_client.c:474:
+	dout("__unregister_request %p tid %lld\n", req, req->r_tid);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#586: FILE: fs/ceph/mds_client.c:513:
+		dout("choose_mds using resend_mds mds%d\n",
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#606: FILE: fs/ceph/mds_client.c:533:
+	dout("__choose_mds %p is_hash=%d (%d) mode %d\n", inode, (int)is_hash,
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__choose_mds', this function's name, in a string
#606: FILE: fs/ceph/mds_client.c:533:
+	dout("__choose_mds %p is_hash=%d (%d) mode %d\n", inode, (int)is_hash,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#625: FILE: fs/ceph/mds_client.c:552:
+				dout("choose_mds %p %llx.%llx "
 				^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#626: FILE: fs/ceph/mds_client.c:553:
+				dout("choose_mds %p %llx.%llx "
+				     "frag %u mds%d (%d/%d)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#635: FILE: fs/ceph/mds_client.c:562:
+			 * authoritative mds. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#640: FILE: fs/ceph/mds_client.c:567:
+				dout("choose_mds %p %llx.%llx "
 				^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#641: FILE: fs/ceph/mds_client.c:568:
+				dout("choose_mds %p %llx.%llx "
+				     "frag %u mds%d (auth)\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#659: FILE: fs/ceph/mds_client.c:586:
+	dout("choose_mds %p %llx.%llx mds%d (%scap %p)\n",
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#667: FILE: fs/ceph/mds_client.c:594:
+	dout("choose_mds chose random mds%d\n", mds);
 	^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#671: FILE: fs/ceph/mds_client.c:598:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'create_session_msg', this function's name, in a string
#682: FILE: fs/ceph/mds_client.c:609:
+		pr_err("ceph create_session_msg ENOMEM creating msg\n");

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#706: FILE: fs/ceph/mds_client.c:633:
+	dout("open_session to mds%d (%s)\n", mds,
 	^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#756: FILE: fs/ceph/mds_client.c:683:
+static int iterate_session_caps(struct ceph_mds_session *session,
+				 int (*cb)(struct inode *, struct ceph_cap *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#757: FILE: fs/ceph/mds_client.c:684:
+				 int (*cb)(struct inode *, struct ceph_cap *,
+					    void *), void *arg)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#763: FILE: fs/ceph/mds_client.c:690:
+	dout("iterate_session_caps %p mds%d\n", session, session->s_mds);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iterate_session_caps', this function's name, in a string
#763: FILE: fs/ceph/mds_client.c:690:
+	dout("iterate_session_caps %p mds%d\n", session, session->s_mds);

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#771: FILE: fs/ceph/mds_client.c:698:
+		iput(inode);
 		^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#782: FILE: fs/ceph/mds_client.c:709:
+static int remove_session_caps_cb(struct inode *inode, struct ceph_cap *cap,
+				   void *arg)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#785: FILE: fs/ceph/mds_client.c:712:
+	dout("removing cap %p, ci is %p, inode is %p\n",
 	^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#785: FILE: fs/ceph/mds_client.c:712:
+	struct ceph_inode_info *ci = ceph_inode(inode);
+	dout("removing cap %p, ci is %p, inode is %p\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#796: FILE: fs/ceph/mds_client.c:723:
+	dout("remove_session_caps on %p\n", session);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'remove_session_caps', this function's name, in a string
#796: FILE: fs/ceph/mds_client.c:723:
+	dout("remove_session_caps on %p\n", session);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#798: FILE: fs/ceph/mds_client.c:725:
+	BUG_ON(session->s_nr_caps > 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPLIT_STRING: quoted string split across lines
#816: FILE: fs/ceph/mds_client.c:743:
+		pr_err("ceph failed reconnect %p %llx.%llx cap %p "
+		       "(gen %d < session %d)\n", inode, ceph_vinop(inode),

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#827: FILE: fs/ceph/mds_client.c:754:
+	dout("wake_up_session_caps %p mds%d\n", session, session->s_mds);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'wake_up_session_caps', this function's name, in a string
#827: FILE: fs/ceph/mds_client.c:754:
+	dout("wake_up_session_caps %p mds%d\n", session, session->s_mds);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#848: FILE: fs/ceph/mds_client.c:775:
+	 * with its clients. */

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#851: FILE: fs/ceph/mds_client.c:778:
+		dout("send_renew_caps ignoring mds%d (%s)\n",
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'send_renew_caps', this function's name, in a string
#851: FILE: fs/ceph/mds_client.c:778:
+		dout("send_renew_caps ignoring mds%d (%s)\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#856: FILE: fs/ceph/mds_client.c:783:
+	dout("send_renew_caps to mds%d (%s)\n", session->s_mds,
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'send_renew_caps', this function's name, in a string
#856: FILE: fs/ceph/mds_client.c:783:
+	dout("send_renew_caps to mds%d (%s)\n", session->s_mds,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#857: FILE: fs/ceph/mds_client.c:784:
+	dout("send_renew_caps to mds%d (%s)\n", session->s_mds,
+		ceph_mds_state_name(state));

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#881: FILE: fs/ceph/mds_client.c:808:
+		mdsc->mdsmap->m_session_timeout*HZ;
 		                               ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#892: FILE: fs/ceph/mds_client.c:819:
+	dout("renewed_caps mds%d ttl now %lu, was %s, now %s\n",
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'renewed_caps', this function's name, in a string
#892: FILE: fs/ceph/mds_client.c:819:
+	dout("renewed_caps mds%d ttl now %lu, was %s, now %s\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#910: FILE: fs/ceph/mds_client.c:837:
+	dout("request_close_session mds%d state %s seq %lld\n",
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'request_close_session', this function's name, in a string
#910: FILE: fs/ceph/mds_client.c:837:
+	dout("request_close_session mds%d state %s seq %lld\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#925: FILE: fs/ceph/mds_client.c:852:
+static int __close_session(struct ceph_mds_client *mdsc,
+			 struct ceph_mds_session *session)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#957: FILE: fs/ceph/mds_client.c:884:
+	dout("trim_caps_cb %p cap %p mine %s oissued %s used %s\n",
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'trim_caps_cb', this function's name, in a string
#957: FILE: fs/ceph/mds_client.c:884:
+	dout("trim_caps_cb %p cap %p mine %s oissued %s used %s\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#973: FILE: fs/ceph/mds_client.c:900:
+		dout("trim_caps_cb %p cap %p  pruned, count now %d\n",
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'trim_caps_cb', this function's name, in a string
#973: FILE: fs/ceph/mds_client.c:900:
+		dout("trim_caps_cb %p cap %p  pruned, count now %d\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#992: FILE: fs/ceph/mds_client.c:919:
+	dout("trim_caps mds%d start: %d / %d, trim %d\n",
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'trim_caps', this function's name, in a string
#992: FILE: fs/ceph/mds_client.c:919:
+	dout("trim_caps mds%d start: %d / %d, trim %d\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#997: FILE: fs/ceph/mds_client.c:924:
+		dout("trim_caps mds%d done: %d / %d, trimmed %d\n",
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'trim_caps', this function's name, in a string
#997: FILE: fs/ceph/mds_client.c:924:
+		dout("trim_caps mds%d done: %d / %d, trimmed %d\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1038: FILE: fs/ceph/mds_client.c:965:
+		dout("add_cap_releases %p msg %p now %d\n", session, msg,
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'add_cap_releases', this function's name, in a string
#1038: FILE: fs/ceph/mds_client.c:965:
+		dout("add_cap_releases %p msg %p now %d\n", session, msg,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1054: FILE: fs/ceph/mds_client.c:981:
+			dout(" queueing non-full %p (%d)\n", msg,
 			^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1057: FILE: fs/ceph/mds_client.c:984:
+			list_move_tail(&msg->list_head,
+				      &session->s_cap_releases_done);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1077: FILE: fs/ceph/mds_client.c:1004:
+	dout("check_cap_flush want %lld\n", want_flush_seq);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'check_cap_flush', this function's name, in a string
#1077: FILE: fs/ceph/mds_client.c:1004:
+	dout("check_cap_flush want %lld\n", want_flush_seq);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1097: FILE: fs/ceph/mds_client.c:1024:
+				dout("check_cap_flush still flushing %p "
 				^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'check_cap_flush', this function's name, in a string
#1097: FILE: fs/ceph/mds_client.c:1024:
+				dout("check_cap_flush still flushing %p "

WARNING:SPLIT_STRING: quoted string split across lines
#1098: FILE: fs/ceph/mds_client.c:1025:
+				dout("check_cap_flush still flushing %p "
+				     "seq %lld <= %lld to mds%d\n", inode,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1114: FILE: fs/ceph/mds_client.c:1041:
+	dout("check_cap_flush ok, flushed thru %lld\n", want_flush_seq);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'check_cap_flush', this function's name, in a string
#1114: FILE: fs/ceph/mds_client.c:1041:
+	dout("check_cap_flush ok, flushed thru %lld\n", want_flush_seq);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1122: FILE: fs/ceph/mds_client.c:1049:
+static void send_cap_releases(struct ceph_mds_client *mdsc,
+		       struct ceph_mds_session *session)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1126: FILE: fs/ceph/mds_client.c:1053:
+	dout("send_cap_releases mds%d\n", session->s_mds);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'send_cap_releases', this function's name, in a string
#1126: FILE: fs/ceph/mds_client.c:1053:
+	dout("send_cap_releases mds%d\n", session->s_mds);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1132: FILE: fs/ceph/mds_client.c:1059:
+		msg = list_first_entry(&session->s_cap_releases_done,
+				 struct ceph_msg, list_head);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1136: FILE: fs/ceph/mds_client.c:1063:
+		dout("send_cap_releases mds%d %p\n", session->s_mds, msg);
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'send_cap_releases', this function's name, in a string
#1136: FILE: fs/ceph/mds_client.c:1063:
+		dout("send_cap_releases mds%d %p\n", session->s_mds, msg);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1180: FILE: fs/ceph/mds_client.c:1107:
+	struct ceph_mds_request *first;
+	if (radix_tree_gang_lookup(&mdsc->request_tree,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dentry"
#1203: FILE: fs/ceph/mds_client.c:1130:
+	if (dentry == NULL)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1210: FILE: fs/ceph/mds_client.c:1137:
+		struct inode *inode = temp->d_inode;
+		if (inode && ceph_snap(inode) == CEPH_SNAPDIR)

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1215: FILE: fs/ceph/mds_client.c:1142:
+			break;
+		else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!temp"
#1218: FILE: fs/ceph/mds_client.c:1145:
+		if (temp == NULL) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1227: FILE: fs/ceph/mds_client.c:1154:
+	path = kmalloc(len+1, GFP_NOFS);
 	                  ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!path"
#1228: FILE: fs/ceph/mds_client.c:1155:
+	if (path == NULL)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1236: FILE: fs/ceph/mds_client.c:1163:
+			dout("build_path_dentry path+%d: %p SNAPDIR\n",
 			^^^^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1241: FILE: fs/ceph/mds_client.c:1168:
+			break;
+		} else {

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1247: FILE: fs/ceph/mds_client.c:1174:
+			dout("build_path_dentry path+%d: %p '%.*s'\n",
 			^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!temp"
#1253: FILE: fs/ceph/mds_client.c:1180:
+		if (temp == NULL) {

WARNING:SPLIT_STRING: quoted string split across lines
#1261: FILE: fs/ceph/mds_client.c:1188:
+		pr_err("ceph build_path_dentry did not end path lookup where "
+		       "expected, namelen is %d, pos is %d\n", len, pos);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1263: FILE: fs/ceph/mds_client.c:1190:
+		/* presumably this is only possible if racing with a
+		   rename of one of the parent directories (we can not

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1265: FILE: fs/ceph/mds_client.c:1192:
+		   retrying should be harmless) */

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1272: FILE: fs/ceph/mds_client.c:1199:
+	dout("build_path_dentry on %p %d built %llx '%.*s'\n",
 	^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1324: FILE: fs/ceph/mds_client.c:1251:
+static int set_request_path_attr(struct inode *rinode, struct dentry *rdentry,
+				  const char *rpath, u64 rino,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1332: FILE: fs/ceph/mds_client.c:1259:
+		dout(" inode %p %llx.%llx\n", rinode, ceph_ino(rinode),
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1336: FILE: fs/ceph/mds_client.c:1263:
+		dout(" dentry %p %llx/%.*s\n", rdentry, *ino, *pathlen,
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1342: FILE: fs/ceph/mds_client.c:1269:
+		dout(" path %.*s\n", *pathlen, rpath);
 		^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1368: FILE: fs/ceph/mds_client.c:1295:
+	ret = set_request_path_attr(req->r_inode, req->r_dentry,
+			      req->r_path1, req->r_ino1.ino,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1376: FILE: fs/ceph/mds_client.c:1303:
+	ret = set_request_path_attr(NULL, req->r_old_dentry,
+			      req->r_path2, req->r_ino2.ino,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1384: FILE: fs/ceph/mds_client.c:1311:
+		pathlen1 + pathlen2 + 2*(sizeof(u32) + sizeof(u64));
 		                       ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1430: FILE: fs/ceph/mds_client.c:1357:
+	BUG_ON(p > end);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1475: FILE: fs/ceph/mds_client.c:1402:
+	dout("prepare_send_request %p tid %lld %s (attempt %d)\n", req,
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1501: FILE: fs/ceph/mds_client.c:1428:
+	dout(" r_locked_dir = %p\n", req->r_locked_dir);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1525: FILE: fs/ceph/mds_client.c:1452:
+		dout("do_request timed out\n");
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1533: FILE: fs/ceph/mds_client.c:1460:
+		dout("do_request no mds or not active, waiting for map\n");
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1542: FILE: fs/ceph/mds_client.c:1469:
+	dout("do_request mds%d session %p state %s\n", mds, session,
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1602: FILE: fs/ceph/mds_client.c:1529:
+	dout("kick_requests mds%d\n", mds);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'kick_requests', this function's name, in a string
#1602: FILE: fs/ceph/mds_client.c:1529:
+	dout("kick_requests mds%d\n", mds);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1608: FILE: fs/ceph/mds_client.c:1535:
+		nexttid = reqs[got-1]->r_tid + 1;
 		                  ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1614: FILE: fs/ceph/mds_client.c:1541:
+				dout(" kicking tid %llu\n", reqs[i]->r_tid);
 				^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1625: FILE: fs/ceph/mds_client.c:1552:
+	dout("submit_request on %p\n", req);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1642: FILE: fs/ceph/mds_client.c:1569:
+	dout("do_request on %p\n", req);
 	^^^^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1650: FILE: fs/ceph/mds_client.c:1577:
+		ceph_get_cap_refs(

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1691: FILE: fs/ceph/mds_client.c:1618:
+	dout("do_request %p done, result %d\n", req, err);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1724: FILE: fs/ceph/mds_client.c:1651:
+		dout("handle_reply on unknown tid %llu\n", tid);
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'handle_reply', this function's name, in a string
#1724: FILE: fs/ceph/mds_client.c:1651:
+		dout("handle_reply on unknown tid %llu\n", tid);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1728: FILE: fs/ceph/mds_client.c:1655:
+	dout("handle_reply %p\n", req);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'handle_reply', this function's name, in a string
#1728: FILE: fs/ceph/mds_client.c:1655:
+	dout("handle_reply %p\n", req);

WARNING:SPLIT_STRING: quoted string split across lines
#1734: FILE: fs/ceph/mds_client.c:1661:
+		pr_err("ceph_mdsc_handle_reply got %llu on session mds%d"
+		       " not mds%d\n", tid, session->s_mds,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1780: FILE: fs/ceph/mds_client.c:1707:
+			dout("got safe reply %llu, mds%d\n", tid, mds);
 			^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1791: FILE: fs/ceph/mds_client.c:1718:
+	BUG_ON(req->r_reply);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1798: FILE: fs/ceph/mds_client.c:1725:
+	dout("handle_reply tid %lld result %d\n", tid, result);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'handle_reply', this function's name, in a string
#1798: FILE: fs/ceph/mds_client.c:1725:
+	dout("handle_reply tid %lld result %d\n", tid, result);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1813: FILE: fs/ceph/mds_client.c:1740:
+		ceph_update_snap_trace(mdsc, rinfo->snapblob,
+			       rinfo->snapblob + rinfo->snapblob_len,

WARNING:RETURN_VOID: void function return statements are not generally useful
#1845: FILE: fs/ceph/mds_client.c:1772:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1847: FILE: fs/ceph/mds_client.c:1774:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1868: FILE: fs/ceph/mds_client.c:1795:
+	ceph_decode_need(&p, end, sizeof(u64)+2*sizeof(u32), bad);
 	                                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1868: FILE: fs/ceph/mds_client.c:1795:
+	ceph_decode_need(&p, end, sizeof(u64)+2*sizeof(u32), bad);
 	                                       ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1879: FILE: fs/ceph/mds_client.c:1806:
+		dout("forward %llu dne\n", tid);
 		^^^^

WARNING:TYPO_SPELLING: 'dne' may be misspelled - perhaps 'done'?
#1879: FILE: fs/ceph/mds_client.c:1806:
+		dout("forward %llu dne\n", tid);
 		                   ^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1885: FILE: fs/ceph/mds_client.c:1812:
+		dout("forward %llu to mds%d - old seq %d <= %d\n",
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1889: FILE: fs/ceph/mds_client.c:1816:
+		dout("forward %llu to mds%d (we resend)\n", tid, next_mds);
 		^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1929: FILE: fs/ceph/mds_client.c:1856:
+	session->s_ttl = jiffies + HZ*mdsc->mdsmap->m_session_autoclose;
 	                             ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1934: FILE: fs/ceph/mds_client.c:1861:
+	dout("handle_session mds%d %s %p state %s seq %llu\n",
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'handle_session', this function's name, in a string
#1934: FILE: fs/ceph/mds_client.c:1861:
+	dout("handle_session mds%d %s %p state %s seq %llu\n",

WARNING:RETURN_VOID: void function return statements are not generally useful
#1996: FILE: fs/ceph/mds_client.c:1923:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1998: FILE: fs/ceph/mds_client.c:1925:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2008: FILE: fs/ceph/mds_client.c:1935:
+	dout("replay_unsafe_requests mds%d\n", session->s_mds);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'replay_unsafe_requests', this function's name, in a string
#2008: FILE: fs/ceph/mds_client.c:1935:
+	dout("replay_unsafe_requests mds%d\n", session->s_mds);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around data->pp
#2036: FILE: fs/ceph/mds_client.c:1963:
+	void *p = *(data->pp);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2045: FILE: fs/ceph/mds_client.c:1972:
+	dout(" adding %p ino %llx.%llx cap %p %lld %s\n",
 	^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2056: FILE: fs/ceph/mds_client.c:1983:
+			BUG_ON(err);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2062: FILE: fs/ceph/mds_client.c:1989:
+	ceph_decode_need(&p, end, pathlen+4, needmore);
 	                                 ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2068: FILE: fs/ceph/mds_client.c:1995:
+	BUG_ON(p > end);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around data->pp
#2085: FILE: fs/ceph/mds_client.c:2012:
+	*(data->pp) = p;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2091: FILE: fs/ceph/mds_client.c:2018:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2137: FILE: fs/ceph/mds_client.c:2064:
+			(100+sizeof(struct ceph_mds_cap_reconnect));
 			    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2139: FILE: fs/ceph/mds_client.c:2066:
+		pr_info("estimating i need %d bytes for %d caps\n",
+		     len, session->s_nr_caps);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2141: FILE: fs/ceph/mds_client.c:2068:
+		dout("no session for mds%d, will send short reconnect\n",
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'send_mds_reconnect', this function's name, in a string
#2152: FILE: fs/ceph/mds_client.c:2079:
+		pr_err("ceph send_mds_reconnect ENOMEM on %d for mds%d\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2164: FILE: fs/ceph/mds_client.c:2091:
+	dout("session %p state %s\n", session,
 	^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2197: FILE: fs/ceph/mds_client.c:2124:
+		struct ceph_mds_snaprealm_reconnect *sr_rec;
+		got = radix_tree_gang_lookup(&mdsc->snap_realms,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2202: FILE: fs/ceph/mds_client.c:2129:
+		dout(" adding snap realm %llx seq %lld parent %llx\n",
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2218: FILE: fs/ceph/mds_client.c:2145:
+	dout("final len was %u (guessed %d)\n",
 	^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2219: FILE: fs/ceph/mds_client.c:2146:
+	     (unsigned)reply->front.iov_len, len);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2242: FILE: fs/ceph/mds_client.c:2169:
+	newlen = len * ((100 * (session->s_nr_caps+3)) / (num_caps + 1)) / 100;
 	                                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2244: FILE: fs/ceph/mds_client.c:2171:
+	pr_info("i guessed %d, and did %d of %d caps, retrying with %d\n",
+	     len, num_caps, session->s_nr_caps, newlen);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2250: FILE: fs/ceph/mds_client.c:2177:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2265: FILE: fs/ceph/mds_client.c:2192:
+	dout("check_new_map new %u old %u\n",
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'check_new_map', this function's name, in a string
#2265: FILE: fs/ceph/mds_client.c:2192:
+	dout("check_new_map new %u old %u\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mdsc->sessions[i]"
#2269: FILE: fs/ceph/mds_client.c:2196:
+		if (mdsc->sessions[i] == NULL)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2275: FILE: fs/ceph/mds_client.c:2202:
+		dout("check_new_map mds%d state %s -> %s (session %s)\n",
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'check_new_map', this function's name, in a string
#2275: FILE: fs/ceph/mds_client.c:2202:
+		dout("check_new_map mds%d state %s -> %s (session %s)\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2285: FILE: fs/ceph/mds_client.c:2212:
+				 * out now */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2328: FILE: fs/ceph/mds_client.c:2255:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2363: FILE: fs/ceph/mds_client.c:2290:
+	dout("handle_lease from mds%d\n", mds);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'handle_lease', this function's name, in a string
#2363: FILE: fs/ceph/mds_client.c:2290:
+	dout("handle_lease from mds%d\n", mds);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2373: FILE: fs/ceph/mds_client.c:2300:
+	if (dname.len != get_unaligned_le32(h+1))
 	                                     ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'handle_lease', this function's name, in a string
#2381: FILE: fs/ceph/mds_client.c:2308:
+		pr_err("ceph handle_lease got lease but no session mds%d\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2391: FILE: fs/ceph/mds_client.c:2318:
+	dout("handle_lease '%s', mask %d, ino %llx %p\n",
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'handle_lease', this function's name, in a string
#2391: FILE: fs/ceph/mds_client.c:2318:
+	dout("handle_lease '%s', mask %d, ino %llx %p\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!inode"
#2393: FILE: fs/ceph/mds_client.c:2320:
+	if (inode == NULL) {

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2394: FILE: fs/ceph/mds_client.c:2321:
+		dout("handle_lease no inode %llx\n", vino.ino);
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'handle_lease', this function's name, in a string
#2394: FILE: fs/ceph/mds_client.c:2321:
+		dout("handle_lease no inode %llx\n", vino.ino);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2402: FILE: fs/ceph/mds_client.c:2329:
+		dout("no parent dentry on inode %p\n", inode);
 		^^^^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#2452: FILE: fs/ceph/mds_client.c:2379:
+	iput(inode);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2471: FILE: fs/ceph/mds_client.c:2398:
+	dout("lease_send_msg inode %p dentry %p %s to mds%d\n",
 	^^^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2483: FILE: fs/ceph/mds_client.c:2410:
+	lease->first = lease->last = cpu_to_le64(ceph_vino(inode).snap);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2509: FILE: fs/ceph/mds_client.c:2436:
+	BUG_ON(inode == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!inode"
#2509: FILE: fs/ceph/mds_client.c:2436:
+	BUG_ON(inode == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2510: FILE: fs/ceph/mds_client.c:2437:
+	BUG_ON(dentry == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dentry"
#2510: FILE: fs/ceph/mds_client.c:2437:
+	BUG_ON(dentry == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2511: FILE: fs/ceph/mds_client.c:2438:
+	BUG_ON(mask != CEPH_LOCK_DN);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2520: FILE: fs/ceph/mds_client.c:2447:
+		dout("lease_release inode %p dentry %p -- "
 		^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#2521: FILE: fs/ceph/mds_client.c:2448:
+		dout("lease_release inode %p dentry %p -- "
+		     "no lease on %d\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2533: FILE: fs/ceph/mds_client.c:2460:
+	dout("lease_release inode %p dentry %p mask %d to mds%d\n",
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2547: FILE: fs/ceph/mds_client.c:2474:
+	dout("drop_leases\n");
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'drop_leases', this function's name, in a string
#2547: FILE: fs/ceph/mds_client.c:2474:
+	dout("drop_leases\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#2551: FILE: fs/ceph/mds_client.c:2478:
+		struct ceph_mds_session *s = __ceph_lookup_mds_session(mdsc, i);
+		if (!s)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2562: FILE: fs/ceph/mds_client.c:2489:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2570: FILE: fs/ceph/mds_client.c:2497:
+	unsigned hz = round_jiffies_relative(HZ * delay);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2571: FILE: fs/ceph/mds_client.c:2498:
+	unsigned hz = round_jiffies_relative(HZ * delay);
+	schedule_delayed_work(&mdsc->delayed_work, hz);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2582: FILE: fs/ceph/mds_client.c:2509:
+	dout("mdsc delayed_work\n");
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'delayed_work', this function's name, in a string
#2582: FILE: fs/ceph/mds_client.c:2509:
+	dout("mdsc delayed_work\n");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2587: FILE: fs/ceph/mds_client.c:2514:
+	renew_caps = time_after_eq(jiffies, HZ*renew_interval +
 	                                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2594: FILE: fs/ceph/mds_client.c:2521:
+		struct ceph_mds_session *s = __ceph_lookup_mds_session(mdsc, i);
+		if (s == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!s"
#2594: FILE: fs/ceph/mds_client.c:2521:
+		if (s == NULL)

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2597: FILE: fs/ceph/mds_client.c:2524:
+			dout("resending session close request for mds%d\n",
 			^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2633: FILE: fs/ceph/mds_client.c:2560:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2678: FILE: fs/ceph/mds_client.c:2605:
+		dout("wait_requests waiting for requests\n");
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'wait_requests', this function's name, in a string
#2678: FILE: fs/ceph/mds_client.c:2605:
+		dout("wait_requests waiting for requests\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2680: FILE: fs/ceph/mds_client.c:2607:
+		wait_for_completion_timeout(&mdsc->safe_umount_waiters,
+				    client->mount_args.mount_timeout * HZ);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2686: FILE: fs/ceph/mds_client.c:2613:
+			dout("wait_requests timed out on tid %llu\n",
 			^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'wait_requests', this function's name, in a string
#2686: FILE: fs/ceph/mds_client.c:2613:
+			dout("wait_requests timed out on tid %llu\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2693: FILE: fs/ceph/mds_client.c:2620:
+	dout("wait_requests done\n");
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'wait_requests', this function's name, in a string
#2693: FILE: fs/ceph/mds_client.c:2620:
+	dout("wait_requests done\n");

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2702: FILE: fs/ceph/mds_client.c:2629:
+	dout("pre_umount\n");
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2720: FILE: fs/ceph/mds_client.c:2647:
+	dout("wait_unsafe_requests want %lld\n", want_tid);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'wait_unsafe_requests', this function's name, in a string
#2720: FILE: fs/ceph/mds_client.c:2647:
+	dout("wait_unsafe_requests want %lld\n", want_tid);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2735: FILE: fs/ceph/mds_client.c:2662:
+		dout("wait_unsafe_requests  wait on %llu (want %llu)\n",
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'wait_unsafe_requests', this function's name, in a string
#2735: FILE: fs/ceph/mds_client.c:2662:
+		dout("wait_unsafe_requests  wait on %llu (want %llu)\n",

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2742: FILE: fs/ceph/mds_client.c:2669:
+	dout("wait_unsafe_requests done\n");
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'wait_unsafe_requests', this function's name, in a string
#2742: FILE: fs/ceph/mds_client.c:2669:
+	dout("wait_unsafe_requests done\n");

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2749: FILE: fs/ceph/mds_client.c:2676:
+	dout("sync\n");
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2754: FILE: fs/ceph/mds_client.c:2681:
+	dout("sync want tid %lld flush_seq %lld\n", want_tid, want_flush);
 	^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2762: FILE: fs/ceph/mds_client.c:2689:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2774: FILE: fs/ceph/mds_client.c:2701:
+	dout("close_sessions\n");
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2781: FILE: fs/ceph/mds_client.c:2708:
+		dout("closing sessions\n");
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2801: FILE: fs/ceph/mds_client.c:2728:
+		dout("waiting for sessions to close\n");
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2830: FILE: fs/ceph/mds_client.c:2757:
+	dout("stopped\n");
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2835: FILE: fs/ceph/mds_client.c:2762:
+	dout("stop\n");
 	^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2842: FILE: fs/ceph/mds_client.c:2769:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2856: FILE: fs/ceph/mds_client.c:2783:
+	ceph_decode_need(&p, end, sizeof(fsid)+2*sizeof(u32), bad);
 	                                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2856: FILE: fs/ceph/mds_client.c:2783:
+	ceph_decode_need(&p, end, sizeof(fsid)+2*sizeof(u32), bad);
 	                                        ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2864: FILE: fs/ceph/mds_client.c:2791:
+	dout("handle_map epoch %u len %d\n", epoch, (int)maplen);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2870: FILE: fs/ceph/mds_client.c:2797:
+		dout("handle_map epoch %u <= our %u\n",
 		^^^^

WARNING:RETURN_VOID: void function return statements are not generally useful
#2904: FILE: fs/ceph/mds_client.c:2831:
+	return;
+}

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2911: FILE: fs/ceph/mds_client.c:2838:
+		dout("mdsc con_get %p %d -> %d\n", s,
 		^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'con_get', this function's name, in a string
#2911: FILE: fs/ceph/mds_client.c:2838:
+		dout("mdsc con_get %p %d -> %d\n", s,

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2915: FILE: fs/ceph/mds_client.c:2842:
+	dout("mdsc con_get %p FAIL\n", s);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'con_get', this function's name, in a string
#2915: FILE: fs/ceph/mds_client.c:2842:
+	dout("mdsc con_get %p FAIL\n", s);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#2923: FILE: fs/ceph/mds_client.c:2850:
+	dout("mdsc con_put %p %d -> %d\n", s, atomic_read(&s->s_ref),
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'con_put', this function's name, in a string
#2923: FILE: fs/ceph/mds_client.c:2850:
+	dout("mdsc con_put %p %d -> %d\n", s, atomic_read(&s->s_ref),

WARNING:STATIC_CONST: Move const after static - use 'static const struct ceph_connection_operations '
#2976: FILE: fs/ceph/mds_client.c:2903:
+const static struct ceph_connection_operations mds_con_ops = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2985: FILE: fs/ceph/mds_client.c:2912:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2987: FILE: fs/ceph/mds_client.c:2914:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2995: FILE: fs/ceph/mds_client.h:1:
+#ifndef _FS_CEPH_MDS_CLIENT_H

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3060: FILE: fs/ceph/mds_client.h:66:
+	/* encoded blob describing snapshot contexts for certain
+	   operations (e.g., open) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3060: FILE: fs/ceph/mds_client.h:66:
+	   operations (e.g., open) */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3065: FILE: fs/ceph/mds_client.h:71:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3073: FILE: fs/ceph/mds_client.h:79:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3183: FILE: fs/ceph/mds_client.h:189:
+	unsigned long r_request_started; /* start time for mds request only,
+					    used to measure lease durations */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3183: FILE: fs/ceph/mds_client.h:189:
+					    used to measure lease durations */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3253: FILE: fs/ceph/mds_client.h:259:
+^Istruct dentry ^I  *debugfs_file;$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#3255: FILE: fs/ceph/mds_client.h:261:
+	spinlock_t	  dentry_lru_lock;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3260: FILE: fs/ceph/mds_client.h:266:
+extern const char *ceph_mds_op_name(int op);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ceph_mds_client *' should also have an identifier name
#3262: FILE: fs/ceph/mds_client.h:268:
+extern struct ceph_mds_session *

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3272: FILE: fs/ceph/mds_client.h:278:
+extern void ceph_put_mds_session(struct ceph_mds_session *s);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3274: FILE: fs/ceph/mds_client.h:280:
+extern int ceph_send_msg_mds(struct ceph_mds_client *mdsc,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3277: FILE: fs/ceph/mds_client.h:283:
+extern void ceph_mdsc_init(struct ceph_mds_client *mdsc,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3279: FILE: fs/ceph/mds_client.h:285:
+extern void ceph_mdsc_close_sessions(struct ceph_mds_client *mdsc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3280: FILE: fs/ceph/mds_client.h:286:
+extern void ceph_mdsc_stop(struct ceph_mds_client *mdsc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3282: FILE: fs/ceph/mds_client.h:288:
+extern void ceph_mdsc_sync(struct ceph_mds_client *mdsc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3284: FILE: fs/ceph/mds_client.h:290:
+extern void ceph_mdsc_lease_release(struct ceph_mds_client *mdsc,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3290: FILE: fs/ceph/mds_client.h:296:
+extern void ceph_mdsc_submit_request(struct ceph_mds_client *mdsc,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3292: FILE: fs/ceph/mds_client.h:298:
+extern int ceph_mdsc_do_request(struct ceph_mds_client *mdsc,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#3299: FILE: fs/ceph/mds_client.h:305:
+}
+extern void ceph_mdsc_put_request(struct ceph_mds_request *req);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3299: FILE: fs/ceph/mds_client.h:305:
+extern void ceph_mdsc_put_request(struct ceph_mds_request *req);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3301: FILE: fs/ceph/mds_client.h:307:
+extern void ceph_mdsc_pre_umount(struct ceph_mds_client *mdsc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3303: FILE: fs/ceph/mds_client.h:309:
+extern char *ceph_mdsc_build_path(struct dentry *dentry, int *plen, u64 *base,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3306: FILE: fs/ceph/mds_client.h:312:
+extern void __ceph_mdsc_drop_dentry_lease(struct dentry *dentry);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3307: FILE: fs/ceph/mds_client.h:313:
+extern void ceph_mdsc_lease_send_msg(struct ceph_mds_session *session,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3312: FILE: fs/ceph/mds_client.h:318:
+extern void ceph_mdsc_handle_map(struct ceph_mds_client *mdsc,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3322: FILE: fs/ceph/mdsmap.c:1:
+#include <linux/bug.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3335: FILE: fs/ceph/mdsmap.c:14:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!m"
#3377: FILE: fs/ceph/mdsmap.c:56:
+	if (m == NULL)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3382: FILE: fs/ceph/mdsmap.c:61:
+	ceph_decode_need(p, end, 8*sizeof(u32) + sizeof(u64), bad);
 	                          ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!m->m_addr"
#3394: FILE: fs/ceph/mdsmap.c:73:
+	if (m->m_addr == NULL || m->m_state == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!m->m_state"
#3394: FILE: fs/ceph/mdsmap.c:73:
+	if (m->m_addr == NULL || m->m_state == NULL)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3413: FILE: fs/ceph/mdsmap.c:92:
+				 5*sizeof(u32) + sizeof(u64) +
 				  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3421: FILE: fs/ceph/mdsmap.c:100:
+		*p += sizeof(struct ceph_timespec) + 2*sizeof(u32);
 		                                      ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#3422: FILE: fs/ceph/mdsmap.c:101:
+		dout("mdsmap_decode %d/%d mds%d.%d %u.%u.%u.%u:%u %s\n",
 		^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3423: FILE: fs/ceph/mdsmap.c:102:
+		     i+1, n, mds, inc, IPQUADPORT(addr.ipaddr),
 		      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3437: FILE: fs/ceph/mdsmap.c:116:
+	ceph_decode_need(p, end, sizeof(u32)*(n+1), bad);
 	                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3437: FILE: fs/ceph/mdsmap.c:116:
+	ceph_decode_need(p, end, sizeof(u32)*(n+1), bad);
 	                                       ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#3443: FILE: fs/ceph/mdsmap.c:122:
+	dout("mdsmap_decode success epoch %u\n", m->m_epoch);
 	^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3467: FILE: fs/ceph/mdsmap.h:1:
+#ifndef _FS_CEPH_MDSMAP_H

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3503: FILE: fs/ceph/mdsmap.h:37:
+	BUG_ON(w < 0);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3509: FILE: fs/ceph/mdsmap.h:43:
+extern int ceph_mdsmap_get_random_mds(struct ceph_mdsmap *m);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3510: FILE: fs/ceph/mdsmap.h:44:
+extern struct ceph_mdsmap *ceph_mdsmap_decode(void **p, void *end);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3511: FILE: fs/ceph/mdsmap.h:45:
+extern void ceph_mdsmap_destroy(struct ceph_mdsmap *m);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000068928.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 205 warnings, 103 checks, 3422 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000068928.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
