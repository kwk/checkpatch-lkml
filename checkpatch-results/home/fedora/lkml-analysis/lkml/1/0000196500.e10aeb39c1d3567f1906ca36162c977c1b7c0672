WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
Here is a patch that adds the ability to dynamically allocate (and use) coherent DMA from userspace by extending the userspace IO driver.  This patch applies against 2.6.28-rc6.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#74: FILE: include/linux/uio_driver.h:30:
+ * ^I^I^I(for DMA memory regions the dma_handle is stored here)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#78: FILE: include/linux/uio_driver.h:34:
+ * ^I^I^I(undefined if not a DMA buffer)$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#87: FILE: include/linux/uio_driver.h:43:
+	unsigned		index;

WARNING:TYPO_SPELLING: 'accomodate' may be misspelled - perhaps 'accommodate'?
#91: FILE: include/linux/uio_driver.h:46:
+/* Increased to accomodate many logical memory regions per BAR. */
                 ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#110: FILE: include/linux/uio_driver.h:74:
+	unsigned		dma_mem_size;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#116: FILE: include/linux/uio_driver.h:95:
+/* uio_dev_get_name - return the name associated with this uio device $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#117: FILE: include/linux/uio_driver.h:96:
+/* uio_dev_get_name - return the name associated with this uio device 
+*/ extern char *uio_dev_get_name(struct uio_device *idev);

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#119: FILE: include/linux/uio_driver.h:98:
+/* Starting index assigned to dynamically allocated regions. */ #define $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#123: FILE: include/linux/uio_driver.h:102:
+ * its offset parameter matches this value. */ #define $

WARNING:LINE_SPACING: Missing a blank line after declarations
#348: FILE: drivers/uio/uio.c:570:
+	struct uio_mem *umem = uio_find_mem_region(vma);
+	if (!umem)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#371: FILE: drivers/uio/uio.c:599:
+ * return 0 if success or negative error code on failure  */ static int $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#373: FILE: drivers/uio/uio.c:601:
+uio_mem_create_dma_region(struct uio_mem **umem,
+				     unsigned long size,

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*umem)...) over kzalloc(sizeof(struct uio_mem)...)
#379: FILE: drivers/uio/uio.c:607:
+	*umem = kzalloc(sizeof(struct uio_mem), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#388: FILE: drivers/uio/uio.c:616:
+	addr = dma_alloc_coherent(idev->dev->parent, size,
+			(dma_addr_t *) &(*umem)->internal_addr,

CHECK:SPACING: No space is necessary after a cast
#388: FILE: drivers/uio/uio.c:616:
+			(dma_addr_t *) &(*umem)->internal_addr,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#392: FILE: drivers/uio/uio.c:620:
+		dev_warn(idev->dev, "Unable to allocate requested DMA-capable"
+			" block of size 0x%lx (%lu) during mmap in uio.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#399: FILE: drivers/uio/uio.c:627:
+	 * first two long words for userspace access */

CHECK:SPACING: No space is necessary after a cast
#400: FILE: drivers/uio/uio.c:628:
+	(*umem)->addr = (unsigned long) addr;

CHECK:SPACING: No space is necessary after a cast
#401: FILE: drivers/uio/uio.c:629:
+	addr[0] = (unsigned long) (*umem)->internal_addr;

CHECK:SPACING: No space is necessary after a cast
#405: FILE: drivers/uio/uio.c:633:
+	addr[1] = (unsigned long) (*umem)->index;

WARNING:SPLIT_STRING: quoted string split across lines
#411: FILE: drivers/uio/uio.c:639:
+		dev_err(idev->dev, "Unable to register sysfs entry for "
+				"DMA mapping (%d) in uio.\n", ret);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around idev->info->dma_mem
#416: FILE: drivers/uio/uio.c:644:
+	list_add_tail(&((*umem)->list), &(idev->info->dma_mem));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#422: FILE: drivers/uio/uio.c:650:
+	dma_free_coherent(idev->dev->parent, size, addr,
+			(dma_addr_t) (*umem)->internal_addr);

CHECK:SPACING: No space is necessary after a cast
#422: FILE: drivers/uio/uio.c:650:
+			(dma_addr_t) (*umem)->internal_addr);

WARNING:LINE_SPACING: Missing a blank line after declarations
#440: FILE: drivers/uio/uio.c:668:
+	struct uio_map *map = umem->map;
+	kobject_put(&map->kobj);

CHECK:SPACING: No space is necessary after a cast
#443: FILE: drivers/uio/uio.c:671:
+	dma_free_coherent(idev->dev->parent, umem->size, (void *) umem->addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#444: FILE: drivers/uio/uio.c:672:
+	dma_free_coherent(idev->dev->parent, umem->size, (void *) umem->addr,
+			(dma_addr_t) umem->internal_addr);

CHECK:SPACING: No space is necessary after a cast
#444: FILE: drivers/uio/uio.c:672:
+			(dma_addr_t) umem->internal_addr);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around umem->list
#445: FILE: drivers/uio/uio.c:673:
+	list_del(&(umem->list));

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#472: FILE: drivers/uio/uio.c:698:
+		 * vm_pgoff to the newly created index */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#516: FILE: drivers/uio/uio.c:806:
+void uio_remove_all_dma_regions(struct uio_info *info) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#526: FILE: drivers/uio/uio.c:816:
+ * ^I^I      and unused regions are zeroed$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#531: FILE: drivers/uio/uio.c:821:
+static int uio_validate_mem(struct uio_device *idev) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#551: FILE: drivers/uio/uio.c:841:
+	dev_err(

WARNING:TYPO_SPELLING: 'mapable' may be misspelled - perhaps 'mappable'?
#553: FILE: drivers/uio/uio.c:843:
+		"mapable memory regions must be page-aligned (%d)\n",
 		 ^^^^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000196500.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 15 warnings, 15 checks, 396 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000196500.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
