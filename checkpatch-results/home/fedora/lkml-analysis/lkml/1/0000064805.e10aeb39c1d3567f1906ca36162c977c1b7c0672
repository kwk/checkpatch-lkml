WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
   git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip.git core-fixes-for-linus

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#103: FILE: include/linux/hardirq.h:143:
+extern void rcu_enter_nohz(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#104: FILE: include/linux/hardirq.h:144:
+extern void rcu_exit_nohz(void);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#206: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#211: FILE: include/linux/rcutiny.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#225: FILE: include/linux/rcutiny.h:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#226: FILE: include/linux/rcutiny.h:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#233: FILE: include/linux/rcutiny.h:23:
+ * ^I^IDocumentation/RCU$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#261: FILE: include/linux/rcutiny.h:51:
+extern void rcu_check_callbacks(int cpu, int user);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#262: FILE: include/linux/rcutiny.h:52:
+extern void __rcu_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#281: FILE: include/linux/rcutiny.h:71:
+extern int rcu_expedited_torture_stats(char *page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#289: FILE: include/linux/rcutiny.h:79:
+extern int rcu_cpu_notify(struct notifier_block *self,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#294: FILE: include/linux/rcutiny.h:84:
+extern void rcu_enter_nohz(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#295: FILE: include/linux/rcutiny.h:85:
+extern void rcu_exit_nohz(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#327: FILE: include/linux/rcutree.h:37:
+extern int rcu_cpu_notify(struct notifier_block *self,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#330: FILE: include/linux/rcutree.h:40:
+extern int rcu_expedited_torture_stats(char *page);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#605: FILE: kernel/rcutiny.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#619: FILE: kernel/rcutiny.c:15:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#620: FILE: kernel/rcutiny.c:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#627: FILE: kernel/rcutiny.c:23:
+ * ^I^IDocumentation/RCU$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rcp->rcucblist"
#689: FILE: kernel/rcutiny.c:85:
+	if (rcp->rcucblist != NULL &&

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#796: FILE: kernel/rcutiny.c:192:
+void synchronize_sched(void)

Usage of a deprecated RCU API is detected.  It is recommended to replace
old flavourful RCU APIs by their new vanilla-RCU counterparts.

The full list of available RCU APIs can be viewed from the kernel docs.

See: https://www.kernel.org/doc/html/latest/RCU/whatisRCU.html#full-list-of-rcu-apis

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_rcu_bh', prefer 'synchronize_rcu' instead
#801: FILE: kernel/rcutiny.c:197:
+void synchronize_rcu_bh(void)

WARNING:DEPRECATED_API: Deprecated use of 'call_rcu_bh', prefer 'call_rcu' instead
#839: FILE: kernel/rcutiny.c:235:
+void call_rcu_bh(struct rcu_head *head,

WARNING:DEPRECATED_API: Deprecated use of 'rcu_barrier_bh', prefer 'rcu_barrier' instead
#858: FILE: kernel/rcutiny.c:254:
+void rcu_barrier_bh(void)

WARNING:DEPRECATED_API: Deprecated use of 'call_rcu_bh', prefer 'call_rcu' instead
#864: FILE: kernel/rcutiny.c:260:
+	call_rcu_bh(&rcu.head, wakeme_after_rcu);

WARNING:DEPRECATED_API: Deprecated use of 'rcu_barrier_sched', prefer 'rcu_barrier' instead
#870: FILE: kernel/rcutiny.c:266:
+void rcu_barrier_sched(void)

WARNING:DEPRECATED_API: Deprecated use of 'call_rcu_sched', prefer 'call_rcu' instead
#876: FILE: kernel/rcutiny.c:272:
+	call_rcu_sched(&rcu.head, wakeme_after_rcu);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1040: FILE: kernel/rcutree.c:495:
+				printk(" %d", rnp->grplo + cpu);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rdp->nxtlist"
#1109: FILE: kernel/rcutree.c:855:
+	if (rdp->nxtlist == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rsp->orphan_cbs_list"
#1132: FILE: kernel/rcutree.c:878:
+	if (rsp->orphan_cbs_list == NULL) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1321: FILE: kernel/rcutree.c:1434:
+	BUG_ON(in_interrupt());

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:DEPRECATED_API: Deprecated use of 'rcu_barrier_bh', prefer 'rcu_barrier' instead
#1348: FILE: kernel/rcutree.c:1461:
+void rcu_barrier_bh(void)

WARNING:DEPRECATED_API: Deprecated use of 'rcu_barrier_sched', prefer 'rcu_barrier' instead
#1357: FILE: kernel/rcutree.c:1470:
+void rcu_barrier_sched(void)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rsp' - possible side-effects?
#1498: FILE: kernel/rcutree.h:113:
+#define rcu_for_each_node_breadth_first(rsp, rnp) \
+	for ((rnp) = &(rsp)->node[0]; \
+	     (rnp) < &(rsp)->node[NUM_RCU_NODES]; (rnp)++)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rnp' - possible side-effects?
#1498: FILE: kernel/rcutree.h:113:
+#define rcu_for_each_node_breadth_first(rsp, rnp) \
+	for ((rnp) = &(rsp)->node[0]; \
+	     (rnp) < &(rsp)->node[NUM_RCU_NODES]; (rnp)++)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rsp' - possible side-effects?
#1502: FILE: kernel/rcutree.h:117:
+#define rcu_for_each_leaf_node(rsp, rnp) \
+	for ((rnp) = (rsp)->level[NUM_RCU_LVLS - 1]; \
+	     (rnp) < &(rsp)->node[NUM_RCU_NODES]; (rnp)++)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rnp' - possible side-effects?
#1502: FILE: kernel/rcutree.h:117:
+#define rcu_for_each_leaf_node(rsp, rnp) \
+	for ((rnp) = (rsp)->level[NUM_RCU_LVLS - 1]; \
+	     (rnp) < &(rsp)->node[NUM_RCU_NODES]; (rnp)++)

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1689: FILE: kernel/rcutree_plugin.h:431:
+ * Move preemptable RCU's callbacks to ->orphan_cbs_list.
         ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1697: FILE: kernel/rcutree_plugin.h:439:
+ * Initialize preemptable RCU's state structures.
               ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1713: FILE: kernel/rcutree_plugin.h:490:
+ * Because preemptable RCU does not exist, there are never any preempted
            ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1762: FILE: kernel/rcutree_plugin.h:584:
+ * Because preemptable RCU does not exist, rcu_barrier() is just
            ^^^^^^^^^^^

WARNING:DEPRECATED_API: Deprecated use of 'rcu_barrier_sched', prefer 'rcu_barrier' instead
#1767: FILE: kernel/rcutree_plugin.h:589:
+	rcu_barrier_sched();

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1780: FILE: kernel/rcutree_plugin.h:602:
+ * Because there is no preemptable RCU, there are no callbacks to move.
                        ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#1787: FILE: kernel/rcutree_plugin.h:609:
+ * Because preemptable RCU does not exist, it need not be initialized.
            ^^^^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1821: FILE: kernel/rcutree_trace.c:162:
 	seq_printf(m, "c=%ld g=%ld s=%d jfq=%ld j=%x "
+		      "nfqs=%lu/nfqsng=%lu(%lu) fqlh=%lu oqlen=%ld\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000064805.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 25 warnings, 17 checks, 1634 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000064805.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
