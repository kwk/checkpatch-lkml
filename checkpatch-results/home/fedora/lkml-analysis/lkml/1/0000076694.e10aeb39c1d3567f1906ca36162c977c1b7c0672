ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#44: FILE: fs/proc/base.c:132:
+static ssize_t proc_info_read(struct file * file, char __user * buf,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#44: FILE: fs/proc/base.c:132:
+static ssize_t proc_info_read(struct file * file, char __user * buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#45: FILE: fs/proc/base.c:133:
+static ssize_t proc_info_read(struct file * file, char __user * buf,
+			  size_t count, loff_t *ppos);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#54: FILE: fs/proc/base.c:528:
+static ssize_t limits_write(struct file *file, const char __user *buf,
+		size_t count, loff_t *ppos)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#79: FILE: fs/proc/base.c:553:
+	new_rlimit.rlim_cur = simple_strtoul(delim, &next, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#89: FILE: fs/proc/base.c:563:
+	new_rlimit.rlim_max = simple_strtoul(delim, &next, 0);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#129: FILE: fs/proc/base.c:2574:
+	NOD("limits",	  S_IFREG|S_IRUSR|S_IWUSR, NULL,
 	             	         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#129: FILE: fs/proc/base.c:2574:
+	NOD("limits",	  S_IFREG|S_IRUSR|S_IWUSR, NULL,
 	             	                 ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR|S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#129: FILE: fs/proc/base.c:2574:
+	NOD("limits",	  S_IFREG|S_IRUSR|S_IWUSR, NULL,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#130: FILE: fs/proc/base.c:2575:
+	NOD("limits",	  S_IFREG|S_IRUSR|S_IWUSR, NULL,
+			&proc_pid_limits_operations,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#140: FILE: fs/proc/base.c:2911:
+	NOD("limits",	  S_IFREG|S_IRUSR|S_IWUSR, NULL,
 	             	         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#140: FILE: fs/proc/base.c:2911:
+	NOD("limits",	  S_IFREG|S_IRUSR|S_IWUSR, NULL,
 	             	                 ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR|S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#140: FILE: fs/proc/base.c:2911:
+	NOD("limits",	  S_IFREG|S_IRUSR|S_IWUSR, NULL,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#141: FILE: fs/proc/base.c:2912:
+	NOD("limits",	  S_IFREG|S_IRUSR|S_IWUSR, NULL,
+			&proc_pid_limits_operations,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000076694.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 4 warnings, 8 checks, 102 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000076694.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
