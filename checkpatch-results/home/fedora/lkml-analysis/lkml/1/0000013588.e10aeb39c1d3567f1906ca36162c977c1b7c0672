WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#83: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#88: FILE: include/linux/pci-dma.h:1:
+#ifndef _LINUX_PCI_DMA_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#92: FILE: include/linux/pci-dma.h:5:
+#define DECLARE_PCI_UNMAP_ADDR(ADDR_NAME)        dma_addr_t ADDR_NAME;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#93: FILE: include/linux/pci-dma.h:6:
+#define DECLARE_PCI_UNMAP_LEN(LEN_NAME)          __u32 LEN_NAME;

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ADDR_NAME' may be better as '(ADDR_NAME)' to avoid precedence issues
#94: FILE: include/linux/pci-dma.h:7:
+#define pci_unmap_addr(PTR, ADDR_NAME)           ((PTR)->ADDR_NAME)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ADDR_NAME' may be better as '(ADDR_NAME)' to avoid precedence issues
#95: FILE: include/linux/pci-dma.h:8:
+#define pci_unmap_addr_set(PTR, ADDR_NAME, VAL)  (((PTR)->ADDR_NAME) = (VAL))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'LEN_NAME' may be better as '(LEN_NAME)' to avoid precedence issues
#96: FILE: include/linux/pci-dma.h:9:
+#define pci_unmap_len(PTR, LEN_NAME)             ((PTR)->LEN_NAME)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'LEN_NAME' may be better as '(LEN_NAME)' to avoid precedence issues
#97: FILE: include/linux/pci-dma.h:10:
+#define pci_unmap_len_set(PTR, LEN_NAME, VAL)    (((PTR)->LEN_NAME) = (VAL))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000013588.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 4 checks, 20 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000013588.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
