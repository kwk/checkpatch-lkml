ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#53: FILE: drivers/char/hw_random/core.c:81:
+static const char * hwrng_quality_string(enum hwrng_quality qual)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MINMAX: min() should probably be min_t(ssize_t, ret, PAGE_SIZE)
#75: FILE: drivers/char/hw_random/core.c:227:
+	return min(ret, (ssize_t)PAGE_SIZE);

WARNING:MINMAX: min() should probably be min_t(ssize_t, ret, PAGE_SIZE)
#84: FILE: drivers/char/hw_random/core.c:252:
+	return min(ret, (ssize_t)PAGE_SIZE);

WARNING:MINMAX: min() should probably be min_t(ssize_t, ret, PAGE_SIZE)
#113: FILE: drivers/char/hw_random/core.c:281:
+	return min(ret, (ssize_t)PAGE_SIZE);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'hwrng_attr_qualities_show' to 'rng_qualities_show'
#121: FILE: drivers/char/hw_random/core.c:290:
+static DEVICE_ATTR(rng_qualities, S_IRUGO,

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#121: FILE: drivers/char/hw_random/core.c:290:
+static DEVICE_ATTR(rng_qualities, S_IRUGO,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#125: FILE: drivers/char/hw_random/core.c:294:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#127: FILE: drivers/char/hw_random/core.c:296:
+ * Expects rng_mutex locked. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#128: FILE: drivers/char/hw_random/core.c:297:
+static struct hwrng * select_best_hwrng(void)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rng->qual > ret->qual'
#133: FILE: drivers/char/hw_random/core.c:302:
+		if (!ret || (rng->qual > ret->qual))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#141: FILE: drivers/char/hw_random/core.c:310:
+ * Expects rng_mutex locked. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#220: FILE: drivers/char/hw_random/core.c:404:
+	 * it doesn't matter for hwrng_register(). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#262: FILE: drivers/char/hw_random/core.c:434:
+		 * We're not interested if this fails or not. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#275: FILE: include/linux/hw_random.h:19:
 
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#279: FILE: include/linux/hw_random.h:23:
+ * ^I^I^Iwhat is found on the usual PC mainboards.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#280: FILE: include/linux/hw_random.h:24:
+ * ^I^I^IUse that for special dedicated RNG$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#281: FILE: include/linux/hw_random.h:25:
+ * ^I^I^Iextension boards.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#284: FILE: include/linux/hw_random.h:28:
+ * ^I^I^Idevices which gather the entropy from possibly$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#285: FILE: include/linux/hw_random.h:29:
+ * ^I^I^Ibad sources, like the network.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#287: FILE: include/linux/hw_random.h:31:
+ * ^I^I^Iwhich are not RNG devices by definition, but$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#288: FILE: include/linux/hw_random.h:32:
+ * ^I^I^Icould be used as such. For example various$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#289: FILE: include/linux/hw_random.h:33:
+ * ^I^I^Ihardware sensors, like a motion sensor.$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000413994.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 17 warnings, 3 checks, 309 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000413994.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
