WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#78: 
      ide: expiry() returns int, negative expiry() return values won't be noticed

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#99: FILE: arch/arm/mach-at91/at91sam9263_devices.c:352:
+ * -------------------------------------------------------------------- */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: arch/arm/mach-at91/at91sam9263_devices.c:355:
+    defined(CONFIG_BLK_DEV_IDE_AT91) || defined(CONFIG_BLK_DEV_IDE_AT91_MODULE)$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#170: FILE: arch/arm/mach-at91/at91sam9263_devices.c:423:
+		printk(KERN_ERR "AT91 CF: bad chip-select requested (%u)\n",

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#227: FILE: drivers/ide/Kconfig:724:
+config BLK_DEV_IDE_AT91
+	tristate "Atmel AT91 (SAM9, CAP9, AT572D940HF) IDE support"
+	depends on ARM && ARCH_AT91 && !ARCH_AT91RM9200 && !ARCH_AT91X40
+	select IDE_TIMINGS
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#245: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#250: FILE: drivers/ide/at91_ide.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#267: FILE: drivers/ide/at91_ide.c:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#268: FILE: drivers/ide/at91_ide.c:19:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cs' - possible side-effects?
#314: FILE: drivers/ide/at91_ide.c:65:
+#define enter_16bit(cs, mode) do {					\
+	mode = at91_sys_read(AT91_SMC_MODE(cs));			\
+	at91_sys_write(AT91_SMC_MODE(cs), mode | AT91_SMC_DBW_16);	\
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'mode' - possible side-effects?
#314: FILE: drivers/ide/at91_ide.c:65:
+#define enter_16bit(cs, mode) do {					\
+	mode = at91_sys_read(AT91_SMC_MODE(cs));			\
+	at91_sys_write(AT91_SMC_MODE(cs), mode | AT91_SMC_DBW_16);	\
+} while (0)

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#319: FILE: drivers/ide/at91_ide.c:70:
+#define leave_16bit(cs, mode) at91_sys_write(AT91_SMC_MODE(cs), mode);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#356: FILE: drivers/ide/at91_ide.c:107:
+	tmp += 1000*1000*1000 - 1; /* round up */
 	           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#356: FILE: drivers/ide/at91_ide.c:107:
+	tmp += 1000*1000*1000 - 1; /* round up */
 	                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#357: FILE: drivers/ide/at91_ide.c:108:
+	do_div(tmp, 1000*1000*1000);
 	                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#357: FILE: drivers/ide/at91_ide.c:108:
+	do_div(tmp, 1000*1000*1000);
 	                     ^

CHECK:SPACING: No space is necessary after a cast
#358: FILE: drivers/ide/at91_ide.c:109:
+	return (unsigned int) tmp;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#371: FILE: drivers/ide/at91_ide.c:122:
+	 * assure at least minimal recovery (t2i) time */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#380: FILE: drivers/ide/at91_ide.c:131:
+	BUG_ON(IS_ERR(mck));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: No space is necessary after a cast
#408: FILE: drivers/ide/at91_ide.c:159:
+	__ide_mm_insw((void __iomem *) io_ports->data_addr, buf, len / 2);

CHECK:SPACING: No space is necessary after a cast
#423: FILE: drivers/ide/at91_ide.c:174:
+	__ide_mm_outsw((void __iomem *) io_ports->data_addr, buf, len / 2);

CHECK:SPACING: No space is necessary after a cast
#429: FILE: drivers/ide/at91_ide.c:180:
+	return readb((void __iomem *) port);

CHECK:SPACING: No space is necessary after a cast
#434: FILE: drivers/ide/at91_ide.c:185:
+	writeb(value, (void __iomem *) port);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#534: FILE: drivers/ide/at91_ide.c:285:
+	BUG_ON(!timing);

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __initconst
#560: FILE: drivers/ide/at91_ide.c:311:
+static const struct ide_port_info at91_ide_port_info __initdata = {

Const init definitions should use __initconst instead of
__initdata.

Similarly init definitions without const require a separate
use of const.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#563: FILE: drivers/ide/at91_ide.c:314:
+^I.host_flags ^I= IDE_HFLAG_MMIO | IDE_HFLAG_NO_DMA | IDE_HFLAG_SINGLE |$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#565: FILE: drivers/ide/at91_ide.c:316:
+^I.pio_mask ^I= ATA_PIO5,$

CHECK:SPACING: No space is necessary after a cast
#626: FILE: drivers/ide/at91_ide.c:377:
+	     board->irq_pin, (unsigned long) res->start);

CHECK:SPACING: No space is necessary after a cast
#628: FILE: drivers/ide/at91_ide.c:379:
+	tf_base = (unsigned long) devm_ioremap(&pdev->dev, res->start + TASK_FILE,

CHECK:SPACING: No space is necessary after a cast
#630: FILE: drivers/ide/at91_ide.c:381:
+	ctl_base = (unsigned long) devm_ioremap(&pdev->dev, res->start + ALT_MODE,

CHECK:BRACES: braces {} should be used on all arms of this statement
#639: FILE: drivers/ide/at91_ide.c:390:
+	if (board->flags & AT91_IDE_SWAP_A0_A2) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#650: FILE: drivers/ide/at91_ide.c:401:
+	} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!irq_handler"
#790: FILE: drivers/ide/ide-probe.c:964:
+	if (irq_handler == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000158929.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 13 warnings, 17 checks, 692 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000158929.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
