CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#66: FILE: include/linux/irq.h:279:
+extern void handle_level_irq(unsigned int irq, struct irq_desc *desc);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#67: FILE: include/linux/irq.h:280:
+extern void handle_fasteoi_irq(unsigned int irq, struct irq_desc *desc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#68: FILE: include/linux/irq.h:281:
+extern void handle_edge_irq(unsigned int irq, struct irq_desc *desc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#69: FILE: include/linux/irq.h:282:
+extern void handle_simple_irq(unsigned int irq, struct irq_desc *desc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#70: FILE: include/linux/irq.h:283:
+extern void handle_percpu_irq(unsigned int irq, struct irq_desc *desc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#71: FILE: include/linux/irq.h:284:
+extern void handle_bad_irq(unsigned int irq, struct irq_desc *desc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#79: FILE: include/linux/irq.h:291:
+extern unsigned int __do_IRQ(unsigned int irq);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#115: FILE: include/linux/mutex.h:132:
+extern void mutex_lock(struct mutex *lock);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#116: FILE: include/linux/mutex.h:133:
+extern int __must_check mutex_lock_interruptible(struct mutex *lock);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#126: FILE: include/linux/mutex.h:143:
+extern int mutex_trylock(struct mutex *lock);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#127: FILE: include/linux/mutex.h:144:
+extern void mutex_unlock(struct mutex *lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: include/linux/preempt.h:14:
+  extern void add_preempt_count(int val);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#140: FILE: include/linux/preempt.h:14:
+  extern void add_preempt_count(int val);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: include/linux/preempt.h:15:
+  extern void sub_preempt_count(int val);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#141: FILE: include/linux/preempt.h:15:
+  extern void sub_preempt_count(int val);

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".spinlock.text") over __attribute__((section(".spinlock.text")))
#154: FILE: include/linux/spinlock.h:74:
+#define __lockfunc __attribute__((section(".spinlock.text")))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#168: FILE: include/linux/timer.h:38:
+void init_timer(struct timer_list * timer);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000347984.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 3 warnings, 13 checks, 97 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000347984.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
