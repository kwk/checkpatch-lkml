WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#58: FILE: drivers/battery/Kconfig:18:
+config APM_POWER
+	tristate "APM emulation"
+	depends on BATTERY && APM
+	help
+	  Say Y here to enable support APM status emulation using
+	  battery class devices.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#75: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#80: FILE: drivers/battery/apm_power.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'bat' - possible side-effects?
#92: FILE: drivers/battery/apm_power.c:13:
+#define BATTERY_PROP(bat, prop) ({                                 \
+	void *value = bat->get_property(bat, BATTERY_PROP_##prop); \
+	value ? *(int*)value : 0;                                  \
+})

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'bat' may be better as '(bat)' to avoid precedence issues
#92: FILE: drivers/battery/apm_power.c:13:
+#define BATTERY_PROP(bat, prop) ({                                 \
+	void *value = bat->get_property(bat, BATTERY_PROP_##prop); \
+	value ? *(int*)value : 0;                                  \
+})

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#94: FILE: drivers/battery/apm_power.c:15:
+	value ? *(int*)value : 0;                                  \

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#101: FILE: drivers/battery/apm_power.c:22:
+static void (*old_apm_get_power_status)(struct apm_power_info*);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#114: FILE: drivers/battery/apm_power.c:35:
+		/* If none of battery devices cantains 'main_battery' flag,
+		   choice one with max CHARGE */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#114: FILE: drivers/battery/apm_power.c:35:
+		   choice one with max CHARGE */

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: drivers/battery/apm_power.c:63:
+^I^I                       MBATTERY_PROP(MIN_CHARGE)) * 100) /$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: drivers/battery/apm_power.c:64:
+^I^I                     (MBATTERY_PROP(MAX_CHARGE) -$

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: drivers/battery/apm_power.c:65:
+^I^I                      MBATTERY_PROP(MIN_CHARGE));$

CHECK:BRACES: braces {} should be used on all arms of this statement
#155: FILE: drivers/battery/apm_power.c:76:
+	if (MBATTERY_PROP(STATUS) == BATTERY_STATUS_CHARGING)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#157: FILE: drivers/battery/apm_power.c:78:
+	else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: drivers/battery/apm_power.c:91:
+^I^I              MBATTERY_PROP(MIN_CHARGE)) * 60) /$

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: drivers/battery/apm_power.c:92:
+^I^I             bat_current;$

WARNING:RETURN_VOID: void function return statements are not generally useful
#179: FILE: drivers/battery/apm_power.c:100:
+	return;
+}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#183: FILE: drivers/battery/apm_power.c:104:
+	printk(KERN_INFO "APM Battery Driver\n");

WARNING:RETURN_VOID: void function return statements are not generally useful
#194: FILE: drivers/battery/apm_power.c:115:
+	return;
+}

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000445516.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 8 warnings, 4 checks, 136 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000445516.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
