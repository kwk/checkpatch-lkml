WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
 ------------------------------------------------------------------------------

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#127: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#132: FILE: tools/perf/builtin-kmem.c:1:
+#include "builtin.h"

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:STATIC_CONST: Move const after static - use 'static const char'
#152: FILE: tools/perf/builtin-kmem.c:21:
+static char const		*input_name = "perf.data";

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#202: FILE: tools/perf/builtin-kmem.c:71:
+	dump_printf("%p [%p]: PERF_RECORD_COMM: %s:%d\n",
+		(void *)(offset + head),

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!thread"
#206: FILE: tools/perf/builtin-kmem.c:75:
+	if (thread == NULL ||

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#254: FILE: tools/perf/builtin-kmem.c:123:
+static void insert_caller_stat(unsigned long call_site,
+			      int bytes_req, int bytes_alloc)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#338: FILE: tools/perf/builtin-kmem.c:207:
+^I} $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#379: FILE: tools/perf/builtin-kmem.c:248:
+	dump_printf("%p [%p]: PERF_RECORD_SAMPLE (IP, %d): %d/%d: %p period: %Ld\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#380: FILE: tools/perf/builtin-kmem.c:249:
+	dump_printf("%p [%p]: PERF_RECORD_SAMPLE (IP, %d): %d/%d: %p period: %Ld\n",
+		(void *)(offset + head),

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!thread"
#387: FILE: tools/perf/builtin-kmem.c:256:
+	if (thread == NULL) {

WARNING:SPLIT_STRING: quoted string split across lines
#407: FILE: tools/perf/builtin-kmem.c:276:
+			"No trace sample to read. Did you call perf record "
+			"without -R?");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LONG_LINE_STRING: line length of 102 exceeds 100 columns
#441: FILE: tools/perf/builtin-kmem.c:310:
+	printf("\n ------------------------------------------------------------------------------\n");

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_STRING: line length of 101 exceeds 100 columns
#470: FILE: tools/perf/builtin-kmem.c:339:
+		printf(" ...               | ...             | ...             | ...    | ...   \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#470: FILE: tools/perf/builtin-kmem.c:339:
+		printf(" ...               | ...             | ...             | ...    | ...   \n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around root->rb_node
#498: FILE: tools/perf/builtin-kmem.c:367:
+	struct rb_node **new = &(root->rb_node);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LINE_SPACING: Please don't use multiple blank lines
#558: FILE: tools/perf/builtin-kmem.c:427:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#659: FILE: tools/perf/builtin-kmem.c:528:
+static const char *record_args[] = {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#718: FILE: tools/perf/builtin.h:31:
+extern int cmd_kmem(int argc, const char **argv, const char *prefix);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000045548.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 10 warnings, 8 checks, 625 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000045548.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
