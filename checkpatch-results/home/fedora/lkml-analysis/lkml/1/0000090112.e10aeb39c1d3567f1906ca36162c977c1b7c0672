WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#72: FILE: drivers/misc/Kconfig:153:
+config MRST_RAR_HANDLER
+	tristate "RAR handler driver for Intel Moorestown platform"
+	depends on X86
+	select RAR_REGISTER
+	default n
+	---help---
+	  This driver provides a memory management interface to
+	  restricted access regions available in the Intel Moorestown
+	  platform.
+
+	  If unsure, say N.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#101: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#106: FILE: drivers/misc/memrar_allocator.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#120: FILE: drivers/misc/memrar_allocator.c:15:
+ *      License along with this program; if not, write to the Free$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#121: FILE: drivers/misc/memrar_allocator.c:16:
+ *      Software Foundation, Inc., 59 Temple Place - Suite 330,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#142: FILE: drivers/misc/memrar_allocator.c:37:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#147: FILE: drivers/misc/memrar_allocator.c:42:
+
+

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#162: FILE: drivers/misc/memrar_allocator.c:57:
+		/* Zero capacity or block size are obviously invalid. */
+		&& capacity != 0

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#163: FILE: drivers/misc/memrar_allocator.c:58:
+		&& capacity != 0
+		&& block_size != 0) {

WARNING:SPLIT_STRING: quoted string split across lines
#171: FILE: drivers/misc/memrar_allocator.c:66:
+		     "Memory allocator is only large enough to "
+		     "hold one block.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#195: FILE: drivers/misc/memrar_allocator.c:90:
+				pr_info("RAR memory allocator capacity "
+					"rounded down from %u to %u\n",

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#250: FILE: drivers/misc/memrar_allocator.c:145:
+struct memrar_handle *memrar_allocator_alloc(

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#358: FILE: drivers/misc/memrar_allocator.c:253:
+			if (pos != pos->next
+			    && chunk->end == next->begin) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#387: FILE: drivers/misc/memrar_allocator.c:282:
+			if (pos != pos->next
+			    && chunk->begin == next->end) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#436: FILE: drivers/misc/memrar_allocator.c:331:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#439: FILE: drivers/misc/memrar_allocator.c:334:
+/*
+  Local Variables:

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#449: FILE: drivers/misc/memrar_allocator.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#461: FILE: drivers/misc/memrar_allocator.h:13:
+ *      License along with this program; if not, write to the Free$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#462: FILE: drivers/misc/memrar_allocator.h:14:
+ *      Software Foundation, Inc., 59 Temple Place - Suite 330,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#471: FILE: drivers/misc/memrar_allocator.h:23:
+
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#583: FILE: drivers/misc/memrar_allocator.h:135:
+struct memrar_handle *memrar_allocator_alloc(

WARNING:TYPO_SPELLING: 'Retrived' may be misspelled - perhaps 'Retrieved'?
#593: FILE: drivers/misc/memrar_allocator.h:145:
+ * Retrived address from given handle.
    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#600: FILE: drivers/misc/memrar_allocator.h:152:
+  return handle == 0 ? ULONG_MAX : handle->begin;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#605: FILE: drivers/misc/memrar_allocator.h:157:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#607: FILE: drivers/misc/memrar_allocator.h:159:
+/*
+  Local Variables:

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#617: FILE: drivers/misc/memrar_handler.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#631: FILE: drivers/misc/memrar_handler.c:15:
+ *      License along with this program; if not, write to the Free$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#632: FILE: drivers/misc/memrar_handler.c:16:
+ *      Software Foundation, Inc., 59 Temple Place - Suite 330,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#656: FILE: drivers/misc/memrar_handler.c:40:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#671: FILE: drivers/misc/memrar_handler.c:55:
+
+

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#685: FILE: drivers/misc/memrar_handler.c:69:
+#define mrdbg(format, messg...) dev_dbg(mrdev, format, messg);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#687: FILE: drivers/misc/memrar_handler.c:71:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#724: FILE: drivers/misc/memrar_handler.c:108:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#792: FILE: drivers/misc/memrar_handler.c:176:
+		BUG_ON(z != RAR_TYPE_AUDIO && z != RAR_TYPE_VIDEO);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#814: FILE: drivers/misc/memrar_handler.c:198:
+		memrar_allocators[z] = memrar_create_allocator(

CHECK:LINE_SPACING: Please don't use multiple blank lines
#821: FILE: drivers/misc/memrar_handler.c:205:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#854: FILE: drivers/misc/memrar_handler.c:238:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#908: FILE: drivers/misc/memrar_handler.c:292:
+				 struct file *filp)
 				              ^^^^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#920: FILE: drivers/misc/memrar_handler.c:304:
+	if ((rinfo->type != RAR_TYPE_AUDIO
+	     && rinfo->type != RAR_TYPE_VIDEO)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#921: FILE: drivers/misc/memrar_handler.c:305:
+	     && rinfo->type != RAR_TYPE_VIDEO)
+	    || rinfo->size > allocator->capacity)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#924: FILE: drivers/misc/memrar_handler.c:308:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#948: FILE: drivers/misc/memrar_handler.c:332:
+	buffer_info->owner = filp;
 	                     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1023: FILE: drivers/misc/memrar_handler.c:407:
+static long memrar_ioctl(struct file *filp,
                                       ^^^^

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1035: FILE: drivers/misc/memrar_handler.c:419:
+	pr_debug("%s(): enter\n", __func__);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1044: FILE: drivers/misc/memrar_handler.c:428:
+		result = memrar_reserve_block(&buffer, filp);
 		                                       ^^^^

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1084: FILE: drivers/misc/memrar_handler.c:468:
+	pr_debug("%s(): exit\n", __func__);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1088: FILE: drivers/misc/memrar_handler.c:472:
+static int memrar_open(struct inode *inode, struct file *filp)
                                                          ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1095: FILE: drivers/misc/memrar_handler.c:479:
+static int memrar_release(struct inode *inode, struct file *filp)
                                                             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1108: FILE: drivers/misc/memrar_handler.c:492:
+		if (filp == pos->owner)
 		    ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1152: FILE: drivers/misc/memrar_handler.c:536:
+		void ** const handle = &i->info.handle;
+		if (memrar_release_block(*handle) == 0) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1201: FILE: drivers/misc/memrar_handler.c:585:
+				break;
+			} else {

WARNING:STATIC_CONST: Move const after static - use 'static const char'
#1224: FILE: drivers/misc/memrar_handler.c:608:
+static char const banner[] __initdata =

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __initconst
#1224: FILE: drivers/misc/memrar_handler.c:608:
+static char const banner[] __initdata =

Const init definitions should use __initconst instead of
__initdata.

Similarly init definitions without const require a separate
use of const.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1232: FILE: drivers/misc/memrar_handler.c:616:
+	printk(banner);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1272: FILE: drivers/misc/memrar_handler.c:656:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1279: FILE: drivers/misc/memrar_handler.c:663:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1282: FILE: drivers/misc/memrar_handler.c:666:
+/*
+  Local Variables:

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1292: FILE: include/linux/rar/memrar.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1305: FILE: include/linux/rar/memrar.h:14:
+ *      License along with this program; if not, write to the Free$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1306: FILE: include/linux/rar/memrar.h:15:
+ *      Software Foundation, Inc., 59 Temple Place - Suite 330,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1312: FILE: include/linux/rar/memrar.h:21:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1319: FILE: include/linux/rar/memrar.h:28:
+
+

WARNING:STATIC_CONST: Move const after static - use 'static const __u32'
#1324: FILE: include/linux/rar/memrar.h:33:
+static __u32 const RAR_TYPE_VIDEO;  /* 0 */

WARNING:STATIC_CONST: Move const after static - use 'static const __u32'
#1325: FILE: include/linux/rar/memrar.h:34:
+static __u32 const RAR_TYPE_AUDIO = 1;

WARNING:STATIC_CONST: Move const after static - use 'static const __u32'
#1326: FILE: include/linux/rar/memrar.h:35:
+static __u32 const RAR_TYPE_IMAGE = 2;

WARNING:STATIC_CONST: Move const after static - use 'static const __u32'
#1327: FILE: include/linux/rar/memrar.h:36:
+static __u32 const RAR_TYPE_DATA  = 3;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1348: FILE: include/linux/rar/memrar.h:57:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1384: FILE: include/linux/rar/memrar.h:93:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1396: FILE: include/linux/rar/memrar.h:105:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1414: FILE: include/linux/rar/memrar.h:123:
+extern size_t rar_reserve(struct RAR_buffer *buffers,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1432: FILE: include/linux/rar/memrar.h:141:
+extern size_t rar_release(struct RAR_buffer *buffers,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1452: FILE: include/linux/rar/memrar.h:161:
+extern size_t rar_handle_to_bus(struct RAR_buffer *buffers,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1455: FILE: include/linux/rar/memrar.h:164:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1458: FILE: include/linux/rar/memrar.h:167:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1460: FILE: include/linux/rar/memrar.h:169:
+/*
+  Local Variables:

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000090112.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 33 warnings, 33 checks, 1392 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000090112.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
