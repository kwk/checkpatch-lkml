WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
2.6.27-stable review patch.  If anyone has any objections, please let us know.

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '3b7952109361c684caf0c50474da8662ecc81019', maybe rebased or not pulled?
#45: 
commit 3b7952109361c684caf0c50474da8662ecc81019 upstream

CHECK:CAMELCASE: Avoid CamelCase: <pTcon>
#80: FILE: fs/cifs/cifsfs.c:970:
+			if (!pTcon->need_reconnect) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tcon->need_reconnect'
#130: FILE: fs/cifs/cifssmb.c:196:
+			if (!rc && (tcon->need_reconnect)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tcon->need_reconnect'
#152: FILE: fs/cifs/cifssmb.c:343:
+			if (!rc && (tcon->need_reconnect)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ses->server"
#170: FILE: fs/cifs/cifssmb.c:810:
+	if (ses->server == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#175: FILE: fs/cifs/cifssmb.c:815:
+		goto session_already_dead; /* no need to send SMBlogoff if uid
+					      already closed due to reconnect */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#175: FILE: fs/cifs/cifssmb.c:815:
+					      already closed due to reconnect */

CHECK:CAMELCASE: Avoid CamelCase: <pSMB>
#184: FILE: fs/cifs/cifssmb.c:822:
+	pSMB->hdr.Mid = GetNextMid(ses->server);

CHECK:CAMELCASE: Avoid CamelCase: <Mid>
#184: FILE: fs/cifs/cifssmb.c:822:
+	pSMB->hdr.Mid = GetNextMid(ses->server);

CHECK:CAMELCASE: Avoid CamelCase: <GetNextMid>
#184: FILE: fs/cifs/cifssmb.c:822:
+	pSMB->hdr.Mid = GetNextMid(ses->server);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#187: FILE: fs/cifs/cifssmb.c:824:
+	if (ses->server->secMode &
[...]
 			pSMB->hdr.Flags2 |= SMBFLG2_SECURITY_SIGNATURE;

CHECK:CAMELCASE: Avoid CamelCase: <secMode>
#187: FILE: fs/cifs/cifssmb.c:824:
+	if (ses->server->secMode &

CHECK:CAMELCASE: Avoid CamelCase: <socketUseCount>
#205: FILE: fs/cifs/cifssmb.c:833:
+	atomic_dec(&ses->server->socketUseCount);

CHECK:CAMELCASE: Avoid CamelCase: <GlobalMid_Lock>
#207: FILE: fs/cifs/cifssmb.c:835:
+		spin_lock(&GlobalMid_Lock);

CHECK:CAMELCASE: Avoid CamelCase: <tcpStatus>
#208: FILE: fs/cifs/cifssmb.c:836:
+		ses->server->tcpStatus = CifsExiting;

CHECK:CAMELCASE: Avoid CamelCase: <CifsExiting>
#208: FILE: fs/cifs/cifssmb.c:836:
+		ses->server->tcpStatus = CifsExiting;

CHECK:CAMELCASE: Avoid CamelCase: <CIFSMaxBufSize>
#241: FILE: fs/cifs/connect.c:1874:
+	if (pvolume_info->rsize > CIFSMaxBufSize) {

CHECK:CAMELCASE: Avoid CamelCase: <cERROR>
#242: FILE: fs/cifs/connect.c:1875:
+		cERROR(1, ("rsize %d too large, using MaxBufSize",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#243: FILE: fs/cifs/connect.c:1876:
+		cERROR(1, ("rsize %d too large, using MaxBufSize",
+			pvolume_info->rsize));

CHECK:BRACES: braces {} should be used on all arms of this statement
#251: FILE: fs/cifs/connect.c:1884:
+	if (pvolume_info->wsize > PAGEVEC_SIZE * PAGE_CACHE_SIZE) {
[...]
+	} else if (pvolume_info->wsize)
[...]
+	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#253: FILE: fs/cifs/connect.c:1886:
+		cERROR(1, ("wsize %d too large, using 4096 instead",
+			  pvolume_info->wsize));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#259: FILE: fs/cifs/connect.c:1892:
+		cifs_sb->wsize = min_t(const int,
+					PAGEVEC_SIZE * PAGE_CACHE_SIZE,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#260: FILE: fs/cifs/connect.c:1893:
+					127*1024);
 					   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#262: FILE: fs/cifs/connect.c:1895:
+		/* old default of CIFSMaxBufSize was too small now
+		   that SMB Write2 can send multiple pages in kvec.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#266: FILE: fs/cifs/connect.c:1899:
+		   page size  */

CHECK:CAMELCASE: Avoid CamelCase: <cFYI>
#271: FILE: fs/cifs/connect.c:1904:
+		cFYI(1, ("readsize set to minimum: 2048"));

CHECK:BRACES: braces {} should be used on all arms of this statement
#275: FILE: fs/cifs/connect.c:1908:
+	if (cifs_sb->prepath) {
[...]
+	} else
[...]

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#278: FILE: fs/cifs/connect.c:1911:
+		/* we can not convert the / to \ in the path
+		separators in the prefixpath yet because we do not

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#281: FILE: fs/cifs/connect.c:1914:
+		the / to \ after reset_cifs_unix_caps is called */

CHECK:BRACES: Unbalanced braces around else statement
#283: FILE: fs/cifs/connect.c:1916:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#290: FILE: fs/cifs/connect.c:1923:
+	cFYI(1, ("file mode: 0x%x  dir mode: 0x%x",
+		cifs_sb->mnt_file_mode, cifs_sb->mnt_dir_mode));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pvolume_info->cifs_acl'
#319: FILE: fs/cifs/connect.c:1952:
+	if ((pvolume_info->cifs_acl) && (pvolume_info->dynperm))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pvolume_info->dynperm'
#319: FILE: fs/cifs/connect.c:1952:
+	if ((pvolume_info->cifs_acl) && (pvolume_info->dynperm))

WARNING:SPLIT_STRING: quoted string split across lines
#321: FILE: fs/cifs/connect.c:1954:
+		cERROR(1, ("mount option dynperm ignored if cifsacl "
+			   "mount option supported"));

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:CAMELCASE: Avoid CamelCase: <srvTcp>
#334: FILE: fs/cifs/connect.c:2062:
+	if (!srvTcp) {	/* create socket */

CHECK:CAMELCASE: Avoid CamelCase: <pSesInfo>
#343: FILE: fs/cifs/connect.c:2138:
+		if (pSesInfo->need_reconnect) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tcon"
#451: FILE: fs/cifs/connect.c:2199:
+			if (tcon == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!strchr"
#490: FILE: fs/cifs/connect.c:2207:
+			if ((strchr(volume_info.UNC + 3, '\\') == NULL)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#491: FILE: fs/cifs/connect.c:2208:
+			if ((strchr(volume_info.UNC + 3, '\\') == NULL)
+			    && (strchr(volume_info.UNC + 3, '/') == NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!strchr"
#491: FILE: fs/cifs/connect.c:2208:
+			    && (strchr(volume_info.UNC + 3, '/') == NULL)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#499: FILE: fs/cifs/connect.c:2216:
+				 * we do on SessSetup and reconnect? */

CHECK:CAMELCASE: Avoid CamelCase: <CIFSTCon>
#500: FILE: fs/cifs/connect.c:2217:
+				rc = CIFSTCon(xid, pSesInfo, volume_info.UNC,

CHECK:BRACES: braces {} should be used on all arms of this statement
#504: FILE: fs/cifs/connect.c:2221:
+			if (!rc) {
[...]
+			} else
[...]

CHECK:CAMELCASE: Avoid CamelCase: <inUse>
#505: FILE: fs/cifs/connect.c:2222:
+				atomic_inc(&pSesInfo->inUse);

CHECK:BRACES: Unbalanced braces around else statement
#507: FILE: fs/cifs/connect.c:2224:
+			} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#512: FILE: fs/cifs/connect.c:2229:
+		/* we can have only one retry value for a connection
+		   to a share so for resources mounted more than once

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#514: FILE: fs/cifs/connect.c:2231:
+		   for the retry flag is used */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000196600.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 13 warnings, 35 checks, 452 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000196600.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
