ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Shirley Ma (xma@us.ibm.com)'
#39: 
Signed-off-by: Shirley Ma (xma@us.ibm.com)

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:BRACES: braces {} should be used on all arms of this statement
#56: FILE: drivers/net/virtio_net.c:87:
+	if (!npage)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#58: FILE: drivers/net/virtio_net.c:89:
+	else {

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned long)0' could be '0UL'
#61: FILE: drivers/net/virtio_net.c:92:
+			if (npage->private == (unsigned long)0) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#86: FILE: drivers/net/virtio_net.c:106:
+	if (p) {
[...]
+		p->private = (unsigned long)0;
[...]

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned long)0' could be '0UL'
#90: FILE: drivers/net/virtio_net.c:109:
+		p->private = (unsigned long)0;

CHECK:BRACES: Unbalanced braces around else statement
#91: FILE: drivers/net/virtio_net.c:110:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#117: FILE: drivers/net/virtio_net.c:139:
+static int set_skb_frags(struct sk_buff *skb, struct page *page,
+				int offset, int len)

WARNING:TYPO_SPELLING: 'packtes' may be misspelled - perhaps 'packets'?
#194: FILE: drivers/net/virtio_net.c:207:
+			/* big packtes 6 bytes alignment between virtio_net
 			       ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#195: FILE: drivers/net/virtio_net.c:208:
+			 * header and data */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:BRACES: Unbalanced braces around else statement
#223: FILE: drivers/net/virtio_net.c:226:
+		else {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#398: FILE: drivers/net/virtio_net.c:353:
+			skb_to_sgvec(skb, sg+1, 0, skb->len);
 			                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#421: FILE: drivers/net/virtio_net.c:370:
+			/*
+			 * chain pages for big packets, allocate skb

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#451: FILE: drivers/net/virtio_net.c:395:
+				/*
+				 * allocate MAX_SKB_FRAGS + 1 pages for

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#460: FILE: drivers/net/virtio_net.c:404:
+					/*
+					 * share one page between virtio_net

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#465: FILE: drivers/net/virtio_net.c:409:
+					sg_set_buf(sg+1, p + offset,
 					             ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#525: FILE: drivers/net/virtio_net.c:1032:
+	BUG_ON(vi->num != 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000045387.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 8 warnings, 8 checks, 519 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000045387.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
