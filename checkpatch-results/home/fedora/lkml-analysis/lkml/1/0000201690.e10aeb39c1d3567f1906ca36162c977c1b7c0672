WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
Recruit a couple of page flags to aid in cache management.  The following extra

CHECK:CAMELCASE: Avoid CamelCase: <Private>
#130: FILE: include/linux/page-flags.h:217:
+PAGEFLAG(Private, private) __SETPAGEFLAG(Private, private)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Private2>
#132: FILE: include/linux/page-flags.h:219:
+PAGEFLAG(Private2, private_2) TESTSCFLAG(Private2, private_2)

CHECK:CAMELCASE: Avoid CamelCase: <OwnerPriv1>
#133: FILE: include/linux/page-flags.h:220:
+PAGEFLAG(OwnerPriv1, owner_priv_1) TESTCLEARFLAG(OwnerPriv1, owner_priv_1)

CHECK:CAMELCASE: Avoid CamelCase: <OwnerPriv2>
#134: FILE: include/linux/page-flags.h:221:
+PAGEFLAG(OwnerPriv2, owner_priv_2) TESTSCFLAG(OwnerPriv2, owner_priv_2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#147: FILE: include/linux/page-flags.h:393:
+#define PAGE_FLAGS	(1 << PG_locked   | 1 << PG_lru       | \

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#191: FILE: include/linux/pagemap.h:393:
+extern void end_page_owner_priv_2(struct page *page);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#212: FILE: mm/filemap.c:614:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#330: FILE: mm/swap_state.c:78:
+	BUG_ON(page_has_private(page));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#339: FILE: mm/swap_state.c:114:
+	BUG_ON(page_has_private(page));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#352: FILE: mm/swapfile.c:353:
+	BUG_ON(page_has_private(page));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#361: FILE: mm/swapfile.c:435:
+		BUG_ON(page_has_private(page));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#410: FILE: mm/truncate.c:359:
+	BUG_ON(page_has_private(page));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000201690.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 6 checks, 303 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000201690.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
