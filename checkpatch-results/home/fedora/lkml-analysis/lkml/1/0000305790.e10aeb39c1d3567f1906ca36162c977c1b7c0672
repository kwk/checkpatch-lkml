CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#54: FILE: arch/x86/kernel/cpu/mtrr/main.c:715:
+		update_memory_range(trim_start, trim_size, E820_RAM,
+					E820_RESERVED);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#66: FILE: arch/x86/kernel/e820_32.c:752:
+void __init update_memory_range(u64 start, u64 size, unsigned old_type,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#67: FILE: arch/x86/kernel/e820_32.c:753:
+				unsigned new_type)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#71: FILE: arch/x86/kernel/e820_32.c:757:
+	BUG_ON(old_type == new_type);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LINE_SPACING: Missing a blank line after declarations
#76: FILE: arch/x86/kernel/e820_32.c:762:
+		u64 final_start, final_end;
+		if (ei->type != old_type)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#89: FILE: arch/x86/kernel/e820_32.c:775:
+		add_memory_region(final_start, final_end - final_start,
+					 new_type);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#103: FILE: arch/x86/kernel/e820_64.c:738:
+void __init update_memory_range(u64 start, u64 size, unsigned old_type,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#104: FILE: arch/x86/kernel/e820_64.c:739:
+				unsigned new_type)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#108: FILE: arch/x86/kernel/e820_64.c:743:
+	BUG_ON(old_type == new_type);

WARNING:LINE_SPACING: Missing a blank line after declarations
#113: FILE: arch/x86/kernel/e820_64.c:748:
+		u64 final_start, final_end;
+		if (ei->type != old_type)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#126: FILE: arch/x86/kernel/e820_64.c:761:
+		add_memory_region(final_start, final_end - final_start,
+					 new_type);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#141: FILE: include/asm-x86/e820_32.h:31:
+extern void update_memory_range(u64 start, u64 size, unsigned old_type,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#141: FILE: include/asm-x86/e820_32.h:31:
+extern void update_memory_range(u64 start, u64 size, unsigned old_type,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#142: FILE: include/asm-x86/e820_32.h:32:
+				unsigned new_type);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#154: FILE: include/asm-x86/e820_64.h:21:
+extern void update_memory_range(u64 start, u64 size, unsigned old_type,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#154: FILE: include/asm-x86/e820_64.h:21:
+extern void update_memory_range(u64 start, u64 size, unsigned old_type,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#155: FILE: include/asm-x86/e820_64.h:22:
+				unsigned new_type);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000305790.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 12 warnings, 5 checks, 90 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000305790.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
