WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#77: 
files:       linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable-2level.h linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable-3level.h linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable.h linux-2.6-xen-sparse/include/asm-x86_64/mach-xen/asm/pgtable.h

WARNING:LINE_SPACING: Missing a blank line after declarations
#108: FILE: linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable-2level.h:44:
+	pte_t pte = *ptep;
+	if (!pte_none(pte)) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'vma' - possible side-effects?
#117: FILE: linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable-2level.h:53:
+#define ptep_clear_flush(vma, addr, ptep)			\
+({								\
+	pte_t *__ptep = (ptep);					\
+	pte_t __res = *__ptep;					\
+	if (!pte_none(__res) &&					\
+	    ((vma)->vm_mm != current->mm ||			\
+	     HYPERVISOR_update_va_mapping(addr, __pte(0),	\
+			(unsigned long)(vma)->vm_mm->cpu_vm_mask.bits| \
+				UVMF_INVLPG|UVMF_MULTI))) {	\
+		__ptep->pte_low = 0;				\
+		flush_tlb_page(vma, addr);			\
+	}							\
+	__res;							\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'addr' - possible side-effects?
#117: FILE: linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable-2level.h:53:
+#define ptep_clear_flush(vma, addr, ptep)			\
+({								\
+	pte_t *__ptep = (ptep);					\
+	pte_t __res = *__ptep;					\
+	if (!pte_none(__res) &&					\
+	    ((vma)->vm_mm != current->mm ||			\
+	     HYPERVISOR_update_va_mapping(addr, __pte(0),	\
+			(unsigned long)(vma)->vm_mm->cpu_vm_mask.bits| \
+				UVMF_INVLPG|UVMF_MULTI))) {	\
+		__ptep->pte_low = 0;				\
+		flush_tlb_page(vma, addr);			\
+	}							\
+	__res;							\
+})

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#124: FILE: linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable-2level.h:60:
+			(unsigned long)(vma)->vm_mm->cpu_vm_mask.bits| \
 			                                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#125: FILE: linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable-2level.h:61:
+				UVMF_INVLPG|UVMF_MULTI))) {	\
 				           ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#168: FILE: linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable-3level.h:115:
+	if ((mm != current->mm && mm != &init_mm)
+	    || HYPERVISOR_update_va_mapping(addr, __pte(0), 0)) {

WARNING:MEMORY_BARRIER: memory barrier without comment
#170: FILE: linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable-3level.h:117:
+		smp_wmb();

WARNING:LINE_SPACING: Missing a blank line after declarations
#189: FILE: linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable-3level.h:127:
+	pte_t pte = *ptep;
+	if (!pte_none(pte)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#190: FILE: linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable-3level.h:128:
+		if (mm != &init_mm) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#191: FILE: linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable-3level.h:129:
+			uint64_t val = pte_val_ma(pte);

WARNING:LINE_SPACING: Missing a blank line after declarations
#192: FILE: linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable-3level.h:130:
+			uint64_t val = pte_val_ma(pte);
+			if (__cmpxchg64(ptep, val, 0) != val) {

CHECK:BRACES: Unbalanced braces around else statement
#198: FILE: linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable-3level.h:136:
+		} else

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'vma' - possible side-effects?
#204: FILE: linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable-3level.h:142:
+#define ptep_clear_flush(vma, addr, ptep)			\
+({								\
+	pte_t *__ptep = (ptep);					\
+	pte_t __res = *__ptep;					\
+	if (!pte_none(__res) &&					\
+	    ((vma)->vm_mm != current->mm ||			\
+	     HYPERVISOR_update_va_mapping(addr,	__pte(0),	\
+			(unsigned long)(vma)->vm_mm->cpu_vm_mask.bits| \
+				UVMF_INVLPG|UVMF_MULTI))) {	\
+		__ptep->pte_low = 0;				\
+		smp_wmb();					\
+		__ptep->pte_high = 0;				\
+		flush_tlb_page(vma, addr);			\
+	}							\
+	__res;							\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'addr' - possible side-effects?
#204: FILE: linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable-3level.h:142:
+#define ptep_clear_flush(vma, addr, ptep)			\
+({								\
+	pte_t *__ptep = (ptep);					\
+	pte_t __res = *__ptep;					\
+	if (!pte_none(__res) &&					\
+	    ((vma)->vm_mm != current->mm ||			\
+	     HYPERVISOR_update_va_mapping(addr,	__pte(0),	\
+			(unsigned long)(vma)->vm_mm->cpu_vm_mask.bits| \
+				UVMF_INVLPG|UVMF_MULTI))) {	\
+		__ptep->pte_low = 0;				\
+		smp_wmb();					\
+		__ptep->pte_high = 0;				\
+		flush_tlb_page(vma, addr);			\
+	}							\
+	__res;							\
+})

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#211: FILE: linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable-3level.h:149:
+			(unsigned long)(vma)->vm_mm->cpu_vm_mask.bits| \
 			                                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#212: FILE: linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable-3level.h:150:
+				UVMF_INVLPG|UVMF_MULTI))) {	\
 				           ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#214: FILE: linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable-3level.h:152:
+		smp_wmb();					\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptep' - possible side-effects?
#281: FILE: linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable.h:259:
+#define ptep_test_and_clear_dirty(vma, addr, ptep)			\
+({									\
+	pte_t __pte = *(ptep);						\
+	int __ret = pte_dirty(__pte);					\
+	if (__ret) {							\
+		__pte = pte_mkclean(__pte);				\
+		if ((vma)->vm_mm != current->mm ||			\
+		    HYPERVISOR_update_va_mapping(addr, __pte, 0))	\
+			(ptep)->pte_low = __pte.pte_low;		\
+	}								\
+	__ret;								\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptep' - possible side-effects?
#294: FILE: linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable.h:272:
+#define ptep_test_and_clear_young(vma, addr, ptep)			\
+({									\
+	pte_t __pte = *(ptep);						\
+	int __ret = pte_young(__pte);					\
+	if (__ret)							\
+		__pte = pte_mkold(__pte);				\
+		if ((vma)->vm_mm != current->mm ||			\
+		    HYPERVISOR_update_va_mapping(addr, __pte, 0))	\
+			(ptep)->pte_low = __pte.pte_low;		\
+	__ret;								\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'mm' - possible side-effects?
#306: FILE: linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable.h:284:
+#define ptep_get_and_clear_full(mm, addr, ptep, full)			\
+	((full) ? ({							\
+		pte_t __res = *(ptep);					\
+		if (test_bit(PG_pinned, &virt_to_page((mm)->pgd)->flags)) \
+			xen_l1_entry_update(ptep, __pte(0));		\
+		else							\
+			*(ptep) = __pte(0);				\
+		__res;							\
+	 }) :								\
+	 ptep_get_and_clear(mm, addr, ptep))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptep' - possible side-effects?
#306: FILE: linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable.h:284:
+#define ptep_get_and_clear_full(mm, addr, ptep, full)			\
+	((full) ? ({							\
+		pte_t __res = *(ptep);					\
+		if (test_bit(PG_pinned, &virt_to_page((mm)->pgd)->flags)) \
+			xen_l1_entry_update(ptep, __pte(0));		\
+		else							\
+			*(ptep) = __pte(0);				\
+		__res;							\
+	 }) :								\
+	 ptep_get_and_clear(mm, addr, ptep))

WARNING:LINE_SPACING: Missing a blank line after declarations
#322: FILE: linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable.h:298:
+	pte_t pte = *ptep;
+	if (pte_write(pte))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'vma' - possible side-effects?
#332: FILE: linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable.h:437:
+#define ptep_establish(vma, address, ptep, pteval)			\
+	do {								\
+		if ( likely((vma)->vm_mm == current->mm) ) {		\
+			BUG_ON(HYPERVISOR_update_va_mapping(address,	\
+				pteval,					\
+				(unsigned long)(vma)->vm_mm->cpu_vm_mask.bits| \
+					UVMF_INVLPG|UVMF_MULTI));	\
+		} else {						\
+			xen_l1_entry_update(ptep, pteval);		\
+			flush_tlb_page(vma, address);			\
+		}							\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'address' - possible side-effects?
#332: FILE: linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable.h:437:
+#define ptep_establish(vma, address, ptep, pteval)			\
+	do {								\
+		if ( likely((vma)->vm_mm == current->mm) ) {		\
+			BUG_ON(HYPERVISOR_update_va_mapping(address,	\
+				pteval,					\
+				(unsigned long)(vma)->vm_mm->cpu_vm_mask.bits| \
+					UVMF_INVLPG|UVMF_MULTI));	\
+		} else {						\
+			xen_l1_entry_update(ptep, pteval);		\
+			flush_tlb_page(vma, address);			\
+		}							\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pteval' - possible side-effects?
#332: FILE: linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable.h:437:
+#define ptep_establish(vma, address, ptep, pteval)			\
+	do {								\
+		if ( likely((vma)->vm_mm == current->mm) ) {		\
+			BUG_ON(HYPERVISOR_update_va_mapping(address,	\
+				pteval,					\
+				(unsigned long)(vma)->vm_mm->cpu_vm_mask.bits| \
+					UVMF_INVLPG|UVMF_MULTI));	\
+		} else {						\
+			xen_l1_entry_update(ptep, pteval);		\
+			flush_tlb_page(vma, address);			\
+		}							\
+	} while (0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#334: FILE: linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable.h:439:
+		if ( likely((vma)->vm_mm == current->mm) ) {		\

ERROR:SPACING: space prohibited before that close parenthesis ')'
#334: FILE: linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable.h:439:
+		if ( likely((vma)->vm_mm == current->mm) ) {		\

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#335: FILE: linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable.h:440:
+			BUG_ON(HYPERVISOR_update_va_mapping(address,	\

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#337: FILE: linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable.h:442:
+				(unsigned long)(vma)->vm_mm->cpu_vm_mask.bits| \
 				                                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#338: FILE: linux-2.6-xen-sparse/include/asm-i386/mach-xen/asm/pgtable.h:443:
+					UVMF_INVLPG|UVMF_MULTI));	\
 					           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#451: FILE: linux-2.6-xen-sparse/include/asm-x86_64/mach-xen/asm/pgtable.h:284:
+	pte_t pte = *ptep;
+	if (!pte_none(pte)) {

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#460: FILE: linux-2.6-xen-sparse/include/asm-x86_64/mach-xen/asm/pgtable.h:293:
+static inline pte_t ptep_get_and_clear_full(struct mm_struct *mm, unsigned long addr, pte_t *ptep, int full)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LINE_SPACING: Missing a blank line after declarations
#464: FILE: linux-2.6-xen-sparse/include/asm-x86_64/mach-xen/asm/pgtable.h:297:
+		pte_t pte = *ptep;
+		if (mm->context.pinned)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'vma' - possible side-effects?
#473: FILE: linux-2.6-xen-sparse/include/asm-x86_64/mach-xen/asm/pgtable.h:306:
+#define ptep_clear_flush(vma, addr, ptep)			\
+({								\
+	pte_t *__ptep = (ptep);					\
+	pte_t __res = *__ptep;					\
+	if (!pte_none(__res) &&					\
+	    ((vma)->vm_mm != current->mm ||			\
+	     HYPERVISOR_update_va_mapping(addr,	__pte(0), 	\
+			(unsigned long)(vma)->vm_mm->cpu_vm_mask.bits| \
+				UVMF_INVLPG|UVMF_MULTI))) {	\
+		__ptep->pte = 0;				\
+		flush_tlb_page(vma, addr);			\
+	}							\
+	__res;							\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'addr' - possible side-effects?
#473: FILE: linux-2.6-xen-sparse/include/asm-x86_64/mach-xen/asm/pgtable.h:306:
+#define ptep_clear_flush(vma, addr, ptep)			\
+({								\
+	pte_t *__ptep = (ptep);					\
+	pte_t __res = *__ptep;					\
+	if (!pte_none(__res) &&					\
+	    ((vma)->vm_mm != current->mm ||			\
+	     HYPERVISOR_update_va_mapping(addr,	__pte(0), 	\
+			(unsigned long)(vma)->vm_mm->cpu_vm_mask.bits| \
+				UVMF_INVLPG|UVMF_MULTI))) {	\
+		__ptep->pte = 0;				\
+		flush_tlb_page(vma, addr);			\
+	}							\
+	__res;							\
+})

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#479: FILE: linux-2.6-xen-sparse/include/asm-x86_64/mach-xen/asm/pgtable.h:312:
+^I     HYPERVISOR_update_va_mapping(addr,^I__pte(0), ^I\$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#480: FILE: linux-2.6-xen-sparse/include/asm-x86_64/mach-xen/asm/pgtable.h:313:
+			(unsigned long)(vma)->vm_mm->cpu_vm_mask.bits| \
 			                                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#481: FILE: linux-2.6-xen-sparse/include/asm-x86_64/mach-xen/asm/pgtable.h:314:
+				UVMF_INVLPG|UVMF_MULTI))) {	\
 				           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptep' - possible side-effects?
#514: FILE: linux-2.6-xen-sparse/include/asm-x86_64/mach-xen/asm/pgtable.h:349:
+#define ptep_test_and_clear_dirty(vma, addr, ptep)			\
+({									\
+	pte_t __pte = *(ptep);						\
+	int __ret = pte_dirty(__pte);					\
+	if (__ret)							\
+		set_pte_at((vma)->vm_mm, addr, ptep, pte_mkclean(__pte)); \
+	__ret;								\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptep' - possible side-effects?
#523: FILE: linux-2.6-xen-sparse/include/asm-x86_64/mach-xen/asm/pgtable.h:358:
+#define ptep_test_and_clear_young(vma, addr, ptep)			\
+({									\
+	pte_t __pte = *(ptep);						\
+	int __ret = pte_young(__pte);					\
+	if (__ret)							\
+		set_pte_at((vma)->vm_mm, addr, ptep, pte_mkold(__pte)); \
+	__ret;								\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'vma' - possible side-effects?
#572: FILE: linux-2.6-xen-sparse/include/asm-x86_64/mach-xen/asm/pgtable.h:479:
+#define ptep_establish(vma, address, ptep, pteval)			\
+	do {								\
+		if ( likely((vma)->vm_mm == current->mm) ) {		\
+			BUG_ON(HYPERVISOR_update_va_mapping(address,	\
+				pteval,					\
+				(unsigned long)(vma)->vm_mm->cpu_vm_mask.bits| \
+					UVMF_INVLPG|UVMF_MULTI));	\
+		} else {						\
+			xen_l1_entry_update(ptep, pteval);		\
+			flush_tlb_page(vma, address);			\
+		}							\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'address' - possible side-effects?
#572: FILE: linux-2.6-xen-sparse/include/asm-x86_64/mach-xen/asm/pgtable.h:479:
+#define ptep_establish(vma, address, ptep, pteval)			\
+	do {								\
+		if ( likely((vma)->vm_mm == current->mm) ) {		\
+			BUG_ON(HYPERVISOR_update_va_mapping(address,	\
+				pteval,					\
+				(unsigned long)(vma)->vm_mm->cpu_vm_mask.bits| \
+					UVMF_INVLPG|UVMF_MULTI));	\
+		} else {						\
+			xen_l1_entry_update(ptep, pteval);		\
+			flush_tlb_page(vma, address);			\
+		}							\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pteval' - possible side-effects?
#572: FILE: linux-2.6-xen-sparse/include/asm-x86_64/mach-xen/asm/pgtable.h:479:
+#define ptep_establish(vma, address, ptep, pteval)			\
+	do {								\
+		if ( likely((vma)->vm_mm == current->mm) ) {		\
+			BUG_ON(HYPERVISOR_update_va_mapping(address,	\
+				pteval,					\
+				(unsigned long)(vma)->vm_mm->cpu_vm_mask.bits| \
+					UVMF_INVLPG|UVMF_MULTI));	\
+		} else {						\
+			xen_l1_entry_update(ptep, pteval);		\
+			flush_tlb_page(vma, address);			\
+		}							\
+	} while (0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#574: FILE: linux-2.6-xen-sparse/include/asm-x86_64/mach-xen/asm/pgtable.h:481:
+		if ( likely((vma)->vm_mm == current->mm) ) {		\

ERROR:SPACING: space prohibited before that close parenthesis ')'
#574: FILE: linux-2.6-xen-sparse/include/asm-x86_64/mach-xen/asm/pgtable.h:481:
+		if ( likely((vma)->vm_mm == current->mm) ) {		\

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#575: FILE: linux-2.6-xen-sparse/include/asm-x86_64/mach-xen/asm/pgtable.h:482:
+			BUG_ON(HYPERVISOR_update_va_mapping(address,	\

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#577: FILE: linux-2.6-xen-sparse/include/asm-x86_64/mach-xen/asm/pgtable.h:484:
+				(unsigned long)(vma)->vm_mm->cpu_vm_mask.bits| \
 				                                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#578: FILE: linux-2.6-xen-sparse/include/asm-x86_64/mach-xen/asm/pgtable.h:485:
+					UVMF_INVLPG|UVMF_MULTI));	\
 					           ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000443977.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 13 warnings, 32 checks, 502 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000443977.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
