WARNING:TYPO_SPELLING: 'triger' may be misspelled - perhaps 'trigger'?
#60: FILE: drivers/xen/Kconfig:26:
+	  The evtchn driver allows a userspace process to triger event
 	                                                  ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#81: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#86: FILE: drivers/xen/evtchn.c:1:
+/******************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#144: FILE: drivers/xen/evtchn.c:59:
+#define EVTCHN_RING_MASK(_i) ((_i)&(EVTCHN_RING_SIZE-1))
                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#144: FILE: drivers/xen/evtchn.c:59:
+#define EVTCHN_RING_MASK(_i) ((_i)&(EVTCHN_RING_SIZE-1))
                                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#195: FILE: drivers/xen/evtchn.c:110:
+	count &= ~(sizeof(evtchn_port_t)-1);
 	                                ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bytes2 != 0'
#246: FILE: drivers/xen/evtchn.c:161:
+	if (copy_to_user(buf, &u->ring[EVTCHN_RING_MASK(c)], bytes1) ||
+	    ((bytes2 != 0) &&
+	     copy_to_user(&buf[bytes1], &u->ring[0], bytes2)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!kbuf"
#266: FILE: drivers/xen/evtchn.c:181:
+	if (kbuf == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#270: FILE: drivers/xen/evtchn.c:185:
+	count &= ~(sizeof(evtchn_port_t)-1);
 	                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#284: FILE: drivers/xen/evtchn.c:199:
+	for (i = 0; i < (count/sizeof(evtchn_port_t)); i++)
 	                      ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'kbuf[i] < NR_EVENT_CHANNELS'
#285: FILE: drivers/xen/evtchn.c:200:
+		if ((kbuf[i] < NR_EVENT_CHANNELS) && (port_user[kbuf[i]] == u))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#303: FILE: drivers/xen/evtchn.c:218:
+	BUG_ON(port_user[port] != NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "port_user[port]"
#303: FILE: drivers/xen/evtchn.c:218:
+	BUG_ON(port_user[port] != NULL);

CHECK:SPACING: No space is necessary after a cast
#330: FILE: drivers/xen/evtchn.c:245:
+	void __user *uarg = (void __user *) arg;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#445: FILE: drivers/xen/evtchn.c:360:
+		u->ring_cons = u->ring_prod = u->ring_overflow = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#453: FILE: drivers/xen/evtchn.c:368:
+		rc = -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#473: FILE: drivers/xen/evtchn.c:388:
+static int evtchn_fasync(int fd, struct file *filp, int on)
                                               ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#476: FILE: drivers/xen/evtchn.c:391:
+	return fasync_helper(fd, filp, on, &u->evtchn_async_queue);
 	                         ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#476: FILE: drivers/xen/evtchn.c:391:
+	struct per_user_data *u = filp->private_data;
+	return fasync_helper(fd, filp, on, &u->evtchn_async_queue);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#479: FILE: drivers/xen/evtchn.c:394:
+static int evtchn_open(struct inode *inode, struct file *filp)
                                                          ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!u"
#484: FILE: drivers/xen/evtchn.c:399:
+	if (u == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!u->name"
#488: FILE: drivers/xen/evtchn.c:403:
+	if (u->name == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!u->ring"
#496: FILE: drivers/xen/evtchn.c:411:
+	if (u->ring == NULL) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#509: FILE: drivers/xen/evtchn.c:424:
+static int evtchn_release(struct inode *inode, struct file *filp)
                                                             ^^^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#549: FILE: drivers/xen/evtchn.c:464:
+};
+static int __init evtchn_init(void)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#562: FILE: drivers/xen/evtchn.c:477:
+		printk(KERN_ALERT "Could not register /dev/misc/evtchn\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#566: FILE: drivers/xen/evtchn.c:481:
+	printk(KERN_INFO "Event-channel device installed.\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#586: FILE: include/xen/evtchn.h:1:
+/******************************************************************************

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000155455.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 13 warnings, 15 checks, 605 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000155455.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
