WARNING:EMAIL_SUBJECT: A patch subject line should describe the change not the tool that found it
#16: 
Subject: [PATCH 127/148] include/asm-x86/thread_info_32.h: checkpatch cleanups - formatting only

Naming the tool that found the issue is not very useful in the
subject line.  A good subject line summarizes the change that
the patch brings.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#53: FILE: include/asm-x86/thread_info_32.h:34:
+	int			preempt_count;	/* 0 => preemptable,
 	   			              	        ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#54: FILE: include/asm-x86/thread_info_32.h:35:
+	int			preempt_count;	/* 0 => preemptable,
+						   <0 => BUG */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#54: FILE: include/asm-x86/thread_info_32.h:35:
+						   <0 => BUG */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#67: FILE: include/asm-x86/thread_info_32.h:43:
+	unsigned long           previous_esp;   /* ESP of the previous stack in
+						   case of nested (IRQ) stacks

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#96: FILE: include/asm-x86/thread_info_32.h:108:
+#define GET_THREAD_INFO(reg)	 \
 	movl $-THREAD_SIZE, reg; \
 	andl %esp, reg

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'reg' - possible side-effects?
#96: FILE: include/asm-x86/thread_info_32.h:108:
+#define GET_THREAD_INFO(reg)	 \
 	movl $-THREAD_SIZE, reg; \
 	andl %esp, reg

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#115: FILE: include/asm-x86/thread_info_32.h:129:
+#define TIF_SINGLESTEP		3	/* restore singlestep on return to
+					   user mode */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#115: FILE: include/asm-x86/thread_info_32.h:129:
+					   user mode */

CHECK:BIT_MACRO: Prefer using the BIT macro
#141: FILE: include/asm-x86/thread_info_32.h:146:
+#define _TIF_SYSCALL_TRACE	(1 << TIF_SYSCALL_TRACE)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#142: FILE: include/asm-x86/thread_info_32.h:147:
+#define _TIF_SIGPENDING		(1 << TIF_SIGPENDING)

CHECK:BIT_MACRO: Prefer using the BIT macro
#143: FILE: include/asm-x86/thread_info_32.h:148:
+#define _TIF_NEED_RESCHED	(1 << TIF_NEED_RESCHED)

CHECK:BIT_MACRO: Prefer using the BIT macro
#144: FILE: include/asm-x86/thread_info_32.h:149:
+#define _TIF_SINGLESTEP		(1 << TIF_SINGLESTEP)

CHECK:BIT_MACRO: Prefer using the BIT macro
#145: FILE: include/asm-x86/thread_info_32.h:150:
+#define _TIF_IRET		(1 << TIF_IRET)

CHECK:BIT_MACRO: Prefer using the BIT macro
#146: FILE: include/asm-x86/thread_info_32.h:151:
+#define _TIF_SYSCALL_EMU	(1 << TIF_SYSCALL_EMU)

CHECK:BIT_MACRO: Prefer using the BIT macro
#147: FILE: include/asm-x86/thread_info_32.h:152:
+#define _TIF_SYSCALL_AUDIT	(1 << TIF_SYSCALL_AUDIT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#148: FILE: include/asm-x86/thread_info_32.h:153:
+#define _TIF_SECCOMP		(1 << TIF_SECCOMP)

CHECK:BIT_MACRO: Prefer using the BIT macro
#149: FILE: include/asm-x86/thread_info_32.h:154:
+#define _TIF_RESTORE_SIGMASK	(1 << TIF_RESTORE_SIGMASK)

CHECK:BIT_MACRO: Prefer using the BIT macro
#150: FILE: include/asm-x86/thread_info_32.h:155:
+#define _TIF_HRTICK_RESCHED	(1 << TIF_HRTICK_RESCHED)

CHECK:BIT_MACRO: Prefer using the BIT macro
#151: FILE: include/asm-x86/thread_info_32.h:156:
+#define _TIF_DEBUG		(1 << TIF_DEBUG)

CHECK:BIT_MACRO: Prefer using the BIT macro
#152: FILE: include/asm-x86/thread_info_32.h:157:
+#define _TIF_IO_BITMAP		(1 << TIF_IO_BITMAP)

CHECK:BIT_MACRO: Prefer using the BIT macro
#153: FILE: include/asm-x86/thread_info_32.h:158:
+#define _TIF_FREEZE		(1 << TIF_FREEZE)

CHECK:BIT_MACRO: Prefer using the BIT macro
#154: FILE: include/asm-x86/thread_info_32.h:159:
+#define _TIF_NOTSC		(1 << TIF_NOTSC)

CHECK:BIT_MACRO: Prefer using the BIT macro
#155: FILE: include/asm-x86/thread_info_32.h:160:
+#define _TIF_FORCED_TF		(1 << TIF_FORCED_TF)

CHECK:BIT_MACRO: Prefer using the BIT macro
#156: FILE: include/asm-x86/thread_info_32.h:161:
+#define _TIF_DEBUGCTLMSR	(1 << TIF_DEBUGCTLMSR)

CHECK:BIT_MACRO: Prefer using the BIT macro
#157: FILE: include/asm-x86/thread_info_32.h:162:
+#define _TIF_DS_AREA_MSR	(1 << TIF_DS_AREA_MSR)

CHECK:BIT_MACRO: Prefer using the BIT macro
#158: FILE: include/asm-x86/thread_info_32.h:163:
+#define _TIF_BTS_TRACE_TS	(1 << TIF_BTS_TRACE_TS)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#187: FILE: include/asm-x86/thread_info_32.h:188:
+#define TS_USEDFPU		0x0001	/* FPU was used by this task
+					   this quantum (SMP) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#187: FILE: include/asm-x86/thread_info_32.h:188:
+					   this quantum (SMP) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#189: FILE: include/asm-x86/thread_info_32.h:190:
+#define TS_POLLING		0x0002	/* True if in idle loop
+					   and not sleeping */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#189: FILE: include/asm-x86/thread_info_32.h:190:
+					   and not sleeping */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000304442.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 12 warnings, 19 checks, 151 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000304442.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
