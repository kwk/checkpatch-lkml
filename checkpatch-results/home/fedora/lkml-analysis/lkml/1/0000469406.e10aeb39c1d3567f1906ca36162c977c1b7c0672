ERROR:INITIALISED_STATIC: do not initialise statics to 0
#52: FILE: arch/ia64/kernel/acpi.c:161:
+static int total_cpus __initdata = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#53: FILE: arch/ia64/kernel/acpi.c:162:
+static int available_cpus __initdata = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#54: FILE: arch/ia64/kernel/acpi.c:163:
+struct acpi_table_madt *acpi_madt __initdata = NULL;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#63: FILE: arch/ia64/kernel/acpi.c:232:
+static unsigned int __initdata acpi_madt_rev = 0;

WARNING:MISPLACED_INIT: __initdata should be placed after acpi_madt_rev
#63: FILE: arch/ia64/kernel/acpi.c:232:
+static unsigned int __initdata acpi_madt_rev = 0;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#73: FILE: arch/ia64/kernel/acpi.c:404:
+static int __initdata srat_num_cpus = 0;	/* number of cpus */

WARNING:MISPLACED_INIT: __initdata should be placed after srat_num_cpus
#73: FILE: arch/ia64/kernel/acpi.c:404:
+static int __initdata srat_num_cpus = 0;	/* number of cpus */

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#74: FILE: arch/ia64/kernel/acpi.c:405:
+static u32 __devinitdata pxm_flag[PXM_FLAG_LEN] = {0};

WARNING:MISPLACED_INIT: __devinitdata should be placed after pxm_flag[PXM_FLAG_LEN]
#74: FILE: arch/ia64/kernel/acpi.c:405:
+static u32 __devinitdata pxm_flag[PXM_FLAG_LEN] = {0};

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#78: FILE: arch/ia64/kernel/acpi.c:408:
+static struct acpi_table_slit __initdata *slit_table = NULL;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#90: FILE: arch/ia64/kernel/machvec.c:16:
+static __initdata const char *mvec_name = NULL;

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __initconst
#90: FILE: arch/ia64/kernel/machvec.c:16:
+static __initdata const char *mvec_name = NULL;

Const init definitions should use __initconst instead of
__initdata.

Similarly init definitions without const require a separate
use of const.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#102: FILE: arch/ia64/kernel/mca.c:141:
+static int mca_init __initdata = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#116: FILE: arch/ia64/kernel/setup.c:135:
+int num_rsvd_regions __initdata = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#125: FILE: arch/ia64/kernel/setup.c:435:
+static __initdata int nomca = 0;

WARNING:MISPLACED_INIT: __initdata should be placed after nomca
#125: FILE: arch/ia64/kernel/setup.c:435:
+static __initdata int nomca = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#142: FILE: arch/ia64/kernel/smpboot.c:155:
+char __initdata no_int_routing = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#168: FILE: arch/ia64/mm/init.c:659:
+static int nolwsys __initdata = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#180: FILE: arch/ia64/sn/kernel/setup.c:197:
+static int __initdata shub_1_1_found = 0;

WARNING:MISPLACED_INIT: __initdata should be placed after shub_1_1_found
#180: FILE: arch/ia64/sn/kernel/setup.c:197:
+static int __initdata shub_1_1_found = 0;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000469406.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 14 errors, 6 warnings, 0 checks, 107 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000469406.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
