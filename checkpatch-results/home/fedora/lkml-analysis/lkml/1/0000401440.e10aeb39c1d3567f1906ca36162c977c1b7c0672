WARNING:TYPO_SPELLING: 'Reenable' may be misspelled - perhaps 'Re-enable'?
#31: 
> Reenable kprobes and alternative patching when the kernel text is write
  ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '19d36ccdc34f5ed444f8a6af0cbfdb6790eb1177', maybe rebased or not pulled?
#63: 
Commit 19d36ccdc34f5ed444f8a6af0cbfdb6790eb1177 "x86: Fix alternatives

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#125: FILE: arch/i386/kernel/alternative.c:185:
+		BUG_ON(a->instrlen > sizeof(insnbuf));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#180: FILE: arch/i386/kernel/alternative.c:367:
+		BUG_ON(p->len > MAX_PATCH_LEN);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#201: FILE: arch/i386/kernel/paravirt.c:72:
+static unsigned native_patch(u8 type, u16 clobbers, void *ibuf,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#202: FILE: arch/i386/kernel/paravirt.c:73:
+			     unsigned long addr, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#230: FILE: arch/i386/kernel/paravirt.c:133:
+unsigned paravirt_patch_call(void *insnbuf,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#239: FILE: arch/i386/kernel/paravirt.c:139:
+	unsigned long delta = (unsigned long)target - (addr+5);
 	                                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#262: FILE: arch/i386/kernel/paravirt.c:153:
+unsigned paravirt_patch_jmp(const void *target, void *insnbuf,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#263: FILE: arch/i386/kernel/paravirt.c:154:
+			    unsigned long addr, unsigned len)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#266: FILE: arch/i386/kernel/paravirt.c:157:
+	unsigned long delta = (unsigned long)target - (addr+5);
 	                                                   ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#281: FILE: arch/i386/kernel/paravirt.c:168:
+unsigned paravirt_patch_default(u8 type, u16 clobbers, void *insnbuf,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#282: FILE: arch/i386/kernel/paravirt.c:169:
+				unsigned long addr, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#311: FILE: arch/i386/kernel/paravirt.c:193:
+unsigned paravirt_patch_insns(void *insnbuf, unsigned len,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#311: FILE: arch/i386/kernel/paravirt.c:193:
+unsigned paravirt_patch_insns(void *insnbuf, unsigned len,

ERROR:CODE_INDENT: code indent should use tabs where possible
#340: FILE: arch/i386/kernel/vmi.c:93:
+        *(unsigned long *)(insnbuf+1) = dest-eip-5;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: arch/i386/kernel/vmi.c:93:
+        *(unsigned long *)(insnbuf+1) = dest-eip-5;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#340: FILE: arch/i386/kernel/vmi.c:93:
+        *(unsigned long *)(insnbuf+1) = dest-eip-5;
                                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#340: FILE: arch/i386/kernel/vmi.c:93:
+        *(unsigned long *)(insnbuf+1) = dest-eip-5;
                                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#340: FILE: arch/i386/kernel/vmi.c:93:
+        *(unsigned long *)(insnbuf+1) = dest-eip-5;
                                                 ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#343: FILE: arch/i386/kernel/vmi.c:96:
+static unsigned patch_internal(int call, unsigned len, void *insnbuf,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#343: FILE: arch/i386/kernel/vmi.c:96:
+static unsigned patch_internal(int call, unsigned len, void *insnbuf,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#372: FILE: arch/i386/kernel/vmi.c:133:
+static unsigned vmi_patch(u8 type, u16 clobbers, void *insns,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#373: FILE: arch/i386/kernel/vmi.c:134:
+			  unsigned long eip, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#409: FILE: arch/i386/xen/enlighten.c:845:
+static unsigned xen_patch(u8 type, u16 clobbers, void *insnbuf,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#410: FILE: arch/i386/xen/enlighten.c:846:
+			  unsigned long addr, unsigned len)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#452: FILE: drivers/lguest/lguest.c:524:
 };
+static unsigned lguest_patch(u8 type, u16 clobber, void *ibuf,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#452: FILE: drivers/lguest/lguest.c:524:
+static unsigned lguest_patch(u8 type, u16 clobber, void *ibuf,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#453: FILE: drivers/lguest/lguest.c:525:
+			     unsigned long addr, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#483: FILE: include/asm-i386/paravirt.h:50:
+	unsigned (*patch)(u8 type, u16 clobber, void *insnbuf,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#484: FILE: include/asm-i386/paravirt.h:51:
+			  unsigned long addr, unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#494: FILE: include/asm-i386/paravirt.h:257:
+unsigned paravirt_patch_call(void *insnbuf,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#502: FILE: include/asm-i386/paravirt.h:261:
+unsigned paravirt_patch_jmp(const void *target, void *insnbuf,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#503: FILE: include/asm-i386/paravirt.h:262:
+			    unsigned long addr, unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#504: FILE: include/asm-i386/paravirt.h:263:
+unsigned paravirt_patch_default(u8 type, u16 clobbers, void *insnbuf,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#505: FILE: include/asm-i386/paravirt.h:264:
+				unsigned long addr, unsigned len);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#507: FILE: include/asm-i386/paravirt.h:266:
+unsigned paravirt_patch_insns(void *insnbuf, unsigned len,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#507: FILE: include/asm-i386/paravirt.h:266:
+unsigned paravirt_patch_insns(void *insnbuf, unsigned len,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000401440.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 31 warnings, 6 checks, 387 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000401440.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
