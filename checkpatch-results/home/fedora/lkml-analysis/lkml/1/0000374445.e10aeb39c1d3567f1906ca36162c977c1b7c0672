CHECK:SPACING: No space is necessary after a cast
#91: FILE: arch/um/os-Linux/skas/process.c:194:
+		addr = mmap64((void *) STUB_CODE, UM_KERN_PAGE_SIZE,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#96: FILE: arch/um/os-Linux/skas/process.c:197:
+			printk(UM_KERN_ERR "mapping mmap stub at 0x%lx failed, "

WARNING:SPLIT_STRING: quoted string split across lines
#97: FILE: arch/um/os-Linux/skas/process.c:198:
+			printk(UM_KERN_ERR "mapping mmap stub at 0x%lx failed, "
+			       "errno = %d\n", STUB_CODE, errno);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#104: FILE: arch/um/os-Linux/skas/process.c:204:
+			addr = mmap((void *) STUB_DATA,

WARNING:SPLIT_STRING: quoted string split across lines
#110: FILE: arch/um/os-Linux/skas/process.c:209:
 				printk(UM_KERN_ERR "mapping segfault stack "
+				       "at 0x%lx failed, errno = %d\n",

CHECK:SPACING: No space is necessary after a cast
#125: FILE: arch/um/os-Linux/skas/process.c:222:
+		set_sigstack((void *) STUB_DATA, UM_KERN_PAGE_SIZE);

CHECK:SPACING: No space is necessary after a cast
#202: FILE: arch/um/include/as-layout.h:27:
+#define STUB_CODE ((unsigned long) ASM_STUB_CODE)

CHECK:SPACING: No space is necessary after a cast
#203: FILE: arch/um/include/as-layout.h:28:
+#define STUB_DATA ((unsigned long) ASM_STUB_DATA)

CHECK:SPACING: No space is necessary after a cast
#204: FILE: arch/um/include/as-layout.h:29:
+#define STUB_START ((unsigned long) ASM_STUB_START)

CHECK:SPACING: No space is necessary after a cast
#241: FILE: arch/um/include/sysdep-i386/stub.h:98:
+			    "i" (&((struct stub_data *) STUB_DATA)->err)

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#266: FILE: arch/um/include/sysdep-x86_64/stub.h:98:
+			  "movq %%rax, (%%rbx)":
 			                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: arch/um/include/sysdep-x86_64/stub.h:102:
+                            "g" (MAP_FIXED | MAP_SHARED), "g" (fd),$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: arch/um/include/sysdep-x86_64/stub.h:102:
+                            "g" (MAP_FIXED | MAP_SHARED), "g" (fd),$

CHECK:SPACING: No space is necessary after a cast
#273: FILE: arch/um/include/sysdep-x86_64/stub.h:104:
+			    "i" (&((struct stub_data *) STUB_DATA)->err)

CHECK:SPACING: No space is necessary after a cast
#315: FILE: arch/um/kernel/skas/clone.c:25:
+	struct stub_data *data = (struct stub_data *) STUB_DATA;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'end_addr > STUB_START'
#375: FILE: arch/um/kernel/tlb.c:488:
+	if (!proc_mm && (end_addr > STUB_START))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#398: FILE: arch/um/kernel/um_arch.c:245:
+	else *task_size_out = STUB_START & PGDIR_MASK;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: No space is necessary after a cast
#503: FILE: arch/um/sys-i386/stub_segv.c:21:
+	GET_FAULTINFO_FROM_SC(*((struct faultinfo *) STUB_DATA), sc);

CHECK:SPACING: No space is necessary after a cast
#557: FILE: arch/um/sys-x86_64/stub_segv.c:37:
+	GET_FAULTINFO_FROM_SC(*((struct faultinfo *) STUB_DATA),

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000374445.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 4 warnings, 12 checks, 414 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000374445.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
