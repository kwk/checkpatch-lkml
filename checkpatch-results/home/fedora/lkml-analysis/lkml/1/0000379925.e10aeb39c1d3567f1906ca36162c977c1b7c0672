WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
Replace the struct css_set embedded in task_struct with a pointer; all tasks

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#95: FILE: include/linux/cgroup.h:30:
+extern void cgroup_post_fork(struct task_struct *p);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#106: FILE: include/linux/cgroup.h:41:
+};
+#undef SUBSYS

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#131: FILE: include/linux/cgroup.h:125:
+struct css_set {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'intialize' may be misspelled - perhaps 'initialize'?
#202: FILE: include/linux/cgroup.h:276:
+ * 1) call cgroup_iter_start to intialize an iterator
                                 ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: include/linux/cgroup.h:285:
+struct task_struct *cgroup_iter_next(struct cgroup *cont,
+					struct cgroup_iter *it);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#214: FILE: include/linux/cgroup.h:288:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#324: FILE: kernel/cgroup.c:164:
+ * due to cgroup_iter_start() */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#331: FILE: kernel/cgroup.c:171:
+ * compiled into their kernel but not actually in use */

WARNING:LINE_SPACING: Missing a blank line after declarations
#362: FILE: kernel/cgroup.c:201:
+		struct cg_cgroup_link *link;
+		link = list_entry(cg->cg_links.next,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#405: FILE: kernel/cgroup.c:242:
+static struct css_set *find_existing_css_set(

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#417: FILE: kernel/cgroup.c:252:
+	 * see in the new css_set */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#422: FILE: kernel/cgroup.c:257:
+			 * cgroup */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#426: FILE: kernel/cgroup.c:261:
+			 * don't want to change the subsystem state */

WARNING:LINE_SPACING: Missing a blank line after declarations
#458: FILE: kernel/cgroup.c:293:
+	int i;
+	INIT_LIST_HEAD(tmp);

WARNING:LINE_SPACING: Missing a blank line after declarations
#480: FILE: kernel/cgroup.c:315:
+		struct cg_cgroup_link *link;
+		link = list_entry(tmp->next,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#496: FILE: kernel/cgroup.c:331:
+static struct css_set *find_css_set(

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#507: FILE: kernel/cgroup.c:342:
+	 * the desired set */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#532: FILE: kernel/cgroup.c:367:
+	 * find_existing_css_set() */

WARNING:LINE_SPACING: Missing a blank line after declarations
#540: FILE: kernel/cgroup.c:375:
+		struct cgroup_subsys *ss = subsys[i];
+		atomic_inc(&cont->count);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#547: FILE: kernel/cgroup.c:382:
+			BUG_ON(list_empty(&tmp_cg_links));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#567: FILE: kernel/cgroup.c:402:
+	BUG_ON(!list_empty(&tmp_cg_links));

WARNING:LINE_SPACING: Missing a blank line after declarations
#592: FILE: kernel/cgroup.c:840:
+	struct list_head tmp_cg_links, *l;
+	INIT_LIST_HEAD(&tmp_cg_links);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#626: FILE: kernel/cgroup.c:908:
+		 * the css_set objects */

WARNING:LINE_SPACING: Missing a blank line after declarations
#632: FILE: kernel/cgroup.c:914:
+			struct cg_cgroup_link *link;
+			cg = list_entry(l, struct css_set, list);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#633: FILE: kernel/cgroup.c:915:
+			BUG_ON(list_empty(&tmp_cg_links));

WARNING:LINE_SPACING: Missing a blank line after declarations
#671: FILE: kernel/cgroup.c:981:
+		struct cg_cgroup_link *link;
+		link = list_entry(cont->css_sets.next,

WARNING:BRACES: braces {} are not necessary for single statement blocks
#707: FILE: kernel/cgroup.c:1111:
+	if (!newcg) {
+		return -ENOMEM;
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#795: FILE: kernel/cgroup.c:1465:
+static void cgroup_advance_iter(struct cgroup *cont,
+					  struct cgroup_iter *it)

WARNING:LINE_SPACING: Missing a blank line after declarations
#824: FILE: kernel/cgroup.c:1494:
+		struct task_struct *p, *g;
+		write_lock(&css_set_lock);

ERROR:CODE_INDENT: code indent should use tabs where possible
#826: FILE: kernel/cgroup.c:1496:
+ ^I^Ido_each_thread(g, p) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#826: FILE: kernel/cgroup.c:1496:
+ ^I^Ido_each_thread(g, p) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#826: FILE: kernel/cgroup.c:1496:
+ ^I^Ido_each_thread(g, p) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#831: FILE: kernel/cgroup.c:1501:
+ ^I^I} while_each_thread(g, p);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#831: FILE: kernel/cgroup.c:1501:
+ ^I^I} while_each_thread(g, p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#831: FILE: kernel/cgroup.c:1501:
+ ^I^I} while_each_thread(g, p);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#840: FILE: kernel/cgroup.c:1510:
+struct task_struct *cgroup_iter_next(struct cgroup *cont,
+					struct cgroup_iter *it)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#853: FILE: kernel/cgroup.c:1523:
+		 * the next cg_cgroup_link */

WARNING:LINE_SPACING: Missing a blank line after declarations
#892: FILE: kernel/cgroup.c:1567:
+	struct task_struct *tsk;
+	cgroup_iter_start(cont, &it);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#930: FILE: kernel/cgroup.c:1904:
+	 * groups are in the subsystem's top cgroup. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#944: FILE: kernel/cgroup.c:1918:
+ ^Iif (ss->fork) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#944: FILE: kernel/cgroup.c:1918:
+ ^Iif (ss->fork) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#944: FILE: kernel/cgroup.c:1918:
+ ^Iif (ss->fork) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#945: FILE: kernel/cgroup.c:1919:
+ ^I^Istruct task_struct *g, *p;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#945: FILE: kernel/cgroup.c:1919:
+ ^I^Istruct task_struct *g, *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#945: FILE: kernel/cgroup.c:1919:
+ ^I^Istruct task_struct *g, *p;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#959: FILE: kernel/cgroup.c:1921:
+ ^I^Iread_lock(&tasklist_lock);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#959: FILE: kernel/cgroup.c:1921:
+ ^I^Iread_lock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#959: FILE: kernel/cgroup.c:1921:
+ ^I^Iread_lock(&tasklist_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#960: FILE: kernel/cgroup.c:1922:
+ ^I^Ido_each_thread(g, p) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#960: FILE: kernel/cgroup.c:1922:
+ ^I^Ido_each_thread(g, p) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#960: FILE: kernel/cgroup.c:1922:
+ ^I^Ido_each_thread(g, p) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#961: FILE: kernel/cgroup.c:1923:
+ ^I^I^Iss->fork(ss, p);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#961: FILE: kernel/cgroup.c:1923:
+ ^I^I^Iss->fork(ss, p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#961: FILE: kernel/cgroup.c:1923:
+ ^I^I^Iss->fork(ss, p);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#962: FILE: kernel/cgroup.c:1924:
+ ^I^I} while_each_thread(g, p);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#962: FILE: kernel/cgroup.c:1924:
+ ^I^I} while_each_thread(g, p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#962: FILE: kernel/cgroup.c:1924:
+ ^I^I} while_each_thread(g, p);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#963: FILE: kernel/cgroup.c:1925:
+ ^I^Iread_unlock(&tasklist_lock);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#963: FILE: kernel/cgroup.c:1925:
+ ^I^Iread_unlock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#963: FILE: kernel/cgroup.c:1925:
+ ^I^Iread_unlock(&tasklist_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#964: FILE: kernel/cgroup.c:1926:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#964: FILE: kernel/cgroup.c:1926:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#964: FILE: kernel/cgroup.c:1926:
+ ^I}$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1033: FILE: kernel/cgroup.c:2177:
+ * guarantee that the new task ends up on its list. */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1043: FILE: kernel/cgroup.c:2187:
+}
+/**

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000379925.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 46 warnings, 10 checks, 1019 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000379925.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
