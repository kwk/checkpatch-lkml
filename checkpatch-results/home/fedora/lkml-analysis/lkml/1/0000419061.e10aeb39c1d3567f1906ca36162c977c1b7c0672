WARNING:TYPO_SPELLING: 'folowing' may be misspelled - perhaps 'following'?
#67: 
	We will get folowing result:
	            ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'invisiable' may be misspelled - perhaps 'invisible'?
#70: 
	this is hidden bug, and it was invisiable because XXXX_fault_in_readable
	                               ^^^^^^^^^^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#98: FILE: mm/filemap.c:1820:
+int iov_iter_fault_in_readable(struct iov_iter *i, size_t* bytes)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#104: FILE: mm/filemap.c:1824:
+	int ret;
+	if (likely(i->nr_segs == 1)) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#114: FILE: mm/filemap.c:1834:
+			int copy = min(len, iov->iov_len - base);
+			if ((ret = fault_in_pages_readable(iov->iov_base + base, copy)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#114: FILE: mm/filemap.c:1834:
+			if ((ret = fault_in_pages_readable(iov->iov_base + base, copy)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#125: FILE: mm/filemap.c:1845:
+^Ireturn ret;^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '&&' (ctx:VxW)
#143: FILE: mm/filemap.c:2309:
+		if (unlikely(iov_iter_fault_in_readable(i, &bytes)&& !bytes)) {
 		                                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000419061.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 4 warnings, 0 checks, 59 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000419061.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
