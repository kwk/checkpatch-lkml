WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#68: FILE: include/asm-x86/kprobes.h:1:
+#ifndef _ASM_KPROBES_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#84: FILE: include/asm-x86/kprobes.h:17:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#85: FILE: include/asm-x86/kprobes.h:18:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ADDR' - possible side-effects?
#105: FILE: include/asm-x86/kprobes.h:38:
+#define MIN_STACK_SIZE(ADDR) (((MAX_STACK_SIZE) < \
+	(((unsigned long)current_thread_info()) + THREAD_SIZE \
+	 - (unsigned long)(ADDR))) \
+	? (MAX_STACK_SIZE) \
+	: (((unsigned long)current_thread_info()) + THREAD_SIZE \
+	   - (unsigned long)(ADDR)))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#162: FILE: include/asm-x86/kprobes.h:95:
+extern int kprobe_fault_handler(struct pt_regs *regs, int trapnr);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#163: FILE: include/asm-x86/kprobes.h:96:
+extern int kprobe_exceptions_notify(struct notifier_block *self,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#411: FILE: arch/x86/kernel/kprobes.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#425: FILE: arch/x86/kernel/kprobes.c:15:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#426: FILE: arch/x86/kernel/kprobes.c:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#443: FILE: arch/x86/kernel/kprobes.c:33:
+ * ^I^IAdded function return probes functionality$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#445: FILE: arch/x86/kernel/kprobes.c:35:
+ * ^I^Ikprobe-booster and kretprobe-booster for i386.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#447: FILE: arch/x86/kernel/kprobes.c:37:
+ * ^I^Iand kretprobe-booster for x86-64$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#449: FILE: arch/x86/kernel/kprobes.c:39:
+ * ^I^I<arjan@infradead.org> and Jim Keniston <jkenisto@us.ibm.com>$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#450: FILE: arch/x86/kernel/kprobes.c:40:
+ * ^I^Iunified x86 kprobes code.$

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#461: FILE: arch/x86/kernel/kprobes.c:51:
+#include <asm/cacheflush.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#463: FILE: arch/x86/kernel/kprobes.c:53:
+#include <asm/pgtable.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#464: FILE: arch/x86/kernel/kprobes.c:54:
+#include <asm/uaccess.h>

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'regs' may be better as '(regs)' to avoid precedence issues
#473: FILE: arch/x86/kernel/kprobes.c:63:
+#define stack_addr(regs) ((unsigned long *)regs->sp)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'regs' may be better as '(regs)' to avoid precedence issues
#483: FILE: arch/x86/kernel/kprobes.c:73:
+#define stack_addr(regs) ((unsigned long *)&regs->sp)

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#486: FILE: arch/x86/kernel/kprobes.c:76:
+#define W(row, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, ba, bb, bc, bd, be, bf)\
                                                        ^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'row' may be better as '(row)' to avoid precedence issues
#486: FILE: arch/x86/kernel/kprobes.c:76:
+#define W(row, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, ba, bb, bc, bd, be, bf)\
+	(((b0##UL << 0x0)|(b1##UL << 0x1)|(b2##UL << 0x2)|(b3##UL << 0x3) |   \
+	  (b4##UL << 0x4)|(b5##UL << 0x5)|(b6##UL << 0x6)|(b7##UL << 0x7) |   \
+	  (b8##UL << 0x8)|(b9##UL << 0x9)|(ba##UL << 0xa)|(bb##UL << 0xb) |   \
+	  (bc##UL << 0xc)|(bd##UL << 0xd)|(be##UL << 0xe)|(bf##UL << 0xf))    \
+	 << (row % 32))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#487: FILE: arch/x86/kernel/kprobes.c:77:
+	(((b0##UL << 0x0)|(b1##UL << 0x1)|(b2##UL << 0x2)|(b3##UL << 0x3) |   \
 	                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#487: FILE: arch/x86/kernel/kprobes.c:77:
+	(((b0##UL << 0x0)|(b1##UL << 0x1)|(b2##UL << 0x2)|(b3##UL << 0x3) |   \
 	                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#487: FILE: arch/x86/kernel/kprobes.c:77:
+	(((b0##UL << 0x0)|(b1##UL << 0x1)|(b2##UL << 0x2)|(b3##UL << 0x3) |   \
 	                                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#488: FILE: arch/x86/kernel/kprobes.c:78:
+	  (b4##UL << 0x4)|(b5##UL << 0x5)|(b6##UL << 0x6)|(b7##UL << 0x7) |   \
 	                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#488: FILE: arch/x86/kernel/kprobes.c:78:
+	  (b4##UL << 0x4)|(b5##UL << 0x5)|(b6##UL << 0x6)|(b7##UL << 0x7) |   \
 	                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#488: FILE: arch/x86/kernel/kprobes.c:78:
+	  (b4##UL << 0x4)|(b5##UL << 0x5)|(b6##UL << 0x6)|(b7##UL << 0x7) |   \
 	                                                 ^

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#489: FILE: arch/x86/kernel/kprobes.c:79:
+	  (b8##UL << 0x8)|(b9##UL << 0x9)|(ba##UL << 0xa)|(bb##UL << 0xb) |   \
 	                                   ^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#489: FILE: arch/x86/kernel/kprobes.c:79:
+	  (b8##UL << 0x8)|(b9##UL << 0x9)|(ba##UL << 0xa)|(bb##UL << 0xb) |   \
 	                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#489: FILE: arch/x86/kernel/kprobes.c:79:
+	  (b8##UL << 0x8)|(b9##UL << 0x9)|(ba##UL << 0xa)|(bb##UL << 0xb) |   \
 	                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#489: FILE: arch/x86/kernel/kprobes.c:79:
+	  (b8##UL << 0x8)|(b9##UL << 0x9)|(ba##UL << 0xa)|(bb##UL << 0xb) |   \
 	                                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#490: FILE: arch/x86/kernel/kprobes.c:80:
+	  (bc##UL << 0xc)|(bd##UL << 0xd)|(be##UL << 0xe)|(bf##UL << 0xf))    \
 	                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#490: FILE: arch/x86/kernel/kprobes.c:80:
+	  (bc##UL << 0xc)|(bd##UL << 0xd)|(be##UL << 0xe)|(bf##UL << 0xf))    \
 	                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#490: FILE: arch/x86/kernel/kprobes.c:80:
+	  (bc##UL << 0xc)|(bd##UL << 0xd)|(be##UL << 0xe)|(bf##UL << 0xf))    \
 	                                                 ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#500: FILE: arch/x86/kernel/kprobes.c:90:
+	W(0x10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) , /* 10 */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#502: FILE: arch/x86/kernel/kprobes.c:92:
+	W(0x30, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) , /* 30 */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#504: FILE: arch/x86/kernel/kprobes.c:94:
+	W(0x50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) , /* 50 */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#506: FILE: arch/x86/kernel/kprobes.c:96:
+	W(0x70, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1) , /* 70 */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#508: FILE: arch/x86/kernel/kprobes.c:98:
+	W(0x90, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1) , /* 90 */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#510: FILE: arch/x86/kernel/kprobes.c:100:
+	W(0xb0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1) , /* b0 */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#512: FILE: arch/x86/kernel/kprobes.c:102:
+	W(0xd0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1) , /* d0 */
 	                                                        ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#518: FILE: arch/x86/kernel/kprobes.c:108:
+};
+static const u32 onebyte_has_modrm[256 / 32] = {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#522: FILE: arch/x86/kernel/kprobes.c:112:
+	W(0x10, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0) , /* 10 */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#524: FILE: arch/x86/kernel/kprobes.c:114:
+	W(0x30, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0) , /* 30 */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#526: FILE: arch/x86/kernel/kprobes.c:116:
+	W(0x50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) , /* 50 */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#528: FILE: arch/x86/kernel/kprobes.c:118:
+	W(0x70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) , /* 70 */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#530: FILE: arch/x86/kernel/kprobes.c:120:
+	W(0x90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) , /* 90 */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#532: FILE: arch/x86/kernel/kprobes.c:122:
+	W(0xb0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) , /* b0 */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#534: FILE: arch/x86/kernel/kprobes.c:124:
+	W(0xd0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1) , /* d0 */
 	                                                        ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#540: FILE: arch/x86/kernel/kprobes.c:130:
+};
+static const u32 twobyte_has_modrm[256 / 32] = {

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#544: FILE: arch/x86/kernel/kprobes.c:134:
+	W(0x10, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0) , /* 1f */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#546: FILE: arch/x86/kernel/kprobes.c:136:
+	W(0x30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) , /* 3f */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#548: FILE: arch/x86/kernel/kprobes.c:138:
+	W(0x50, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1) , /* 5f */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#550: FILE: arch/x86/kernel/kprobes.c:140:
+	W(0x70, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1) , /* 7f */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#552: FILE: arch/x86/kernel/kprobes.c:142:
+	W(0x90, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1) , /* 9f */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#554: FILE: arch/x86/kernel/kprobes.c:144:
+	W(0xb0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1) , /* bf */
 	                                                        ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#556: FILE: arch/x86/kernel/kprobes.c:146:
+	W(0xd0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1) , /* df */
 	                                                        ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#562: FILE: arch/x86/kernel/kprobes.c:152:
+};
+#undef W

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#566: FILE: arch/x86/kernel/kprobes.c:156:
+	{"__switch_to", }, /* This function switches only current task, but
+			      doesn't switch kernel stack.*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#566: FILE: arch/x86/kernel/kprobes.c:156:
+			      doesn't switch kernel stack.*/

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#569: FILE: arch/x86/kernel/kprobes.c:159:
+};
+const int kretprobe_blacklist_size = ARRAY_SIZE(kretprobe_blacklist);

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#577: FILE: arch/x86/kernel/kprobes.c:167:
+	} __attribute__((packed)) * jop;
 	                          ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#577: FILE: arch/x86/kernel/kprobes.c:167:
+	} __attribute__((packed)) * jop;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#611: FILE: arch/x86/kernel/kprobes.c:201:
+		if (0x63 < opcode && opcode < 0x67)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#619: FILE: arch/x86/kernel/kprobes.c:209:
+		return (0xc1 < opcode && opcode < 0xcc) || opcode == 0xcf;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#630: FILE: arch/x86/kernel/kprobes.c:220:
+		return (opcode == 0xf5 || (0xf7 < opcode && opcode < 0xfe));

CHECK:BRACES: Unbalanced braces around else statement
#705: FILE: arch/x86/kernel/kprobes.c:295:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#712: FILE: arch/x86/kernel/kprobes.c:302:
+		u8 modrm = *++insn;
+		if ((modrm & 0xc7) == 0x05) {

CHECK:SPACING: No space is necessary after a cast
#729: FILE: arch/x86/kernel/kprobes.c:319:
+			disp = (u8 *) p->addr + *((s32 *) insn) -

CHECK:SPACING: No space is necessary after a cast
#730: FILE: arch/x86/kernel/kprobes.c:320:
+			       (u8 *) p->ainsn.insn;

CHECK:SPACING: No space is necessary after a cast
#731: FILE: arch/x86/kernel/kprobes.c:321:
+			BUG_ON((s64) (s32) disp != disp); /* Sanity check.  */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#731: FILE: arch/x86/kernel/kprobes.c:321:
+			BUG_ON((s64) (s32) disp != disp); /* Sanity check.  */

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: No space is necessary after a cast
#732: FILE: arch/x86/kernel/kprobes.c:322:
+			*(s32 *)insn = (s32) disp;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#796: FILE: arch/x86/kernel/kprobes.c:386:
+static void __kprobes set_current_kprobe(struct kprobe *p, struct pt_regs *regs,
+				struct kprobe_ctlblk *kcb)

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#800: FILE: arch/x86/kernel/kprobes.c:390:
+	kcb->kprobe_saved_flags = kcb->kprobe_old_flags
+		= (regs->flags & (TF_MASK | IF_MASK));

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:SPACING: No space is necessary after a cast
#835: FILE: arch/x86/kernel/kprobes.c:425:
+	ri->ret_addr = (kprobe_opcode_t *) *sara;

CHECK:SPACING: No space is necessary after a cast
#838: FILE: arch/x86/kernel/kprobes.c:428:
+	*sara = (unsigned long) &kretprobe_trampoline;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#866: FILE: arch/x86/kernel/kprobes.c:456:
+			if (kcb->kprobe_status == KPROBE_HIT_SS &&
+				*p->ainsn.insn == BREAKPOINT_INSTRUCTION) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#895: FILE: arch/x86/kernel/kprobes.c:485:
+			return 1;
+		} else {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#961: FILE: arch/x86/kernel/kprobes.c:551:
+ void __kprobes kretprobe_trampoline_holder(void)$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#961: FILE: arch/x86/kernel/kprobes.c:551:
+ void __kprobes kretprobe_trampoline_holder(void)
+ {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#962: FILE: arch/x86/kernel/kprobes.c:552:
+ {$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#963: FILE: arch/x86/kernel/kprobes.c:553:
+	asm volatile (

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#965: FILE: arch/x86/kernel/kprobes.c:555:
+			"kretprobe_trampoline: \n"

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1048: FILE: arch/x86/kernel/kprobes.c:638:
+ }$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1149: FILE: arch/x86/kernel/kprobes.c:739:
+static void __kprobes resume_execution(struct kprobe *p,
+		struct pt_regs *regs, struct kprobe_ctlblk *kcb)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'regs->ip > copy_ip'
#1208: FILE: arch/x86/kernel/kprobes.c:798:
+		if ((regs->ip > copy_ip) &&
+		    (regs->ip - copy_ip) + 5 < MAX_INSN_SIZE) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:RETURN_VOID: void function return statements are not generally useful
#1228: FILE: arch/x86/kernel/kprobes.c:818:
+	return;
+}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'kcb->kprobe_status != KPROBE_REENTER'
#1242: FILE: arch/x86/kernel/kprobes.c:832:
+	if ((kcb->kprobe_status != KPROBE_REENTER) && cur->post_handler) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1320: FILE: arch/x86/kernel/kprobes.c:910:
+			const struct exception_table_entry *fixup;
+			fixup = search_exception_tables(regs->ip);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1405: FILE: arch/x86/kernel/kprobes.c:995:
+	asm volatile (

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1407: FILE: arch/x86/kernel/kprobes.c:997:
+			"       xchg   %%rbx,%%rsp	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1409: FILE: arch/x86/kernel/kprobes.c:999:
+			"       xchgl   %%ebx,%%esp	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1411: FILE: arch/x86/kernel/kprobes.c:1001:
+			"       int3			\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1413: FILE: arch/x86/kernel/kprobes.c:1003:
+			"       jprobe_return_end:	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1414: FILE: arch/x86/kernel/kprobes.c:1004:
+			"       nop			\n"::"b"

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1415: FILE: arch/x86/kernel/kprobes.c:1005:
+			(kcb->jprobe_saved_sp):"memory");
 			                      ^

CHECK:SPACING: No space is necessary after a cast
#1421: FILE: arch/x86/kernel/kprobes.c:1011:
+	u8 *addr = (u8 *) (regs->ip - 1);

CHECK:SPACING: No space is necessary after a cast
#1424: FILE: arch/x86/kernel/kprobes.c:1014:
+	if ((addr > (u8 *) jprobe_return) &&

CHECK:SPACING: No space is necessary after a cast
#1425: FILE: arch/x86/kernel/kprobes.c:1015:
+	    (addr < (u8 *) jprobe_return_end)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1428: FILE: arch/x86/kernel/kprobes.c:1018:
+			struct pt_regs *saved_regs = &kcb->jprobe_saved_regs;
+			printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1428: FILE: arch/x86/kernel/kprobes.c:1018:
+			printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1431: FILE: arch/x86/kernel/kprobes.c:1021:
+			printk(KERN_ERR "Saved registers for jprobe %p\n", jp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1433: FILE: arch/x86/kernel/kprobes.c:1023:
+			printk(KERN_ERR "Current registers\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1435: FILE: arch/x86/kernel/kprobes.c:1025:
+			BUG();

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000346202.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 27 errors, 34 warnings, 44 checks, 1164 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000346202.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
