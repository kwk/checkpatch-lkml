WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
Gitweb:     http://git.kernel.org/tip/c34984b2bbc77596c97c333539bffc90d2033178

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#82: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#139: FILE: tools/perf/builtin-buildid-list.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:STATIC_CONST: Move const after static - use 'static const char'
#156: FILE: tools/perf/builtin-buildid-list.c:18:
+static char const *input_name = "perf.data";

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#166: FILE: tools/perf/builtin-buildid-list.c:28:
+	OPT_STRING('i', "input", &input_name, "file",
+		    "input file name"),

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#180: FILE: tools/perf/builtin-buildid-list.c:42:
+		pr_warning("Failed to lseek to %Ld offset for buildids!\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'input_stat.st_uid != geteuid()'
#215: FILE: tools/perf/builtin-buildid-list.c:77:
+	if (!force && input_stat.st_uid && (input_stat.st_uid != geteuid())) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!header"
#228: FILE: tools/perf/builtin-buildid-list.c:90:
+	if (header == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: tools/perf/builtin-buildid-list.c:99:
+^I^I^I^I         perf_file_section__process_buildids);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: tools/perf/builtin-buildid-list.c:99:
+	err = perf_header__process_sections(header, input,
+				         perf_file_section__process_buildids);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#263: FILE: tools/perf/builtin.h:19:
+extern int cmd_buildid_list(int argc, const char **argv, const char *prefix);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000047295.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 5 warnings, 5 checks, 178 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000047295.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
