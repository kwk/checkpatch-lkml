WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#65: FILE: arch/x86/kernel/genx2apic_phys.c:1:
+#include <linux/threads.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/smp.h> instead of <asm/smp.h>
#71: FILE: arch/x86/kernel/genx2apic_phys.c:7:
+#include <asm/smp.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#75: FILE: arch/x86/kernel/genx2apic_phys.c:11:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#86: FILE: arch/x86/kernel/genx2apic_phys.c:22:
+	cpumask_t domain = CPU_MASK_NONE;
+	cpu_set(cpu, domain);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#145: FILE: arch/x86/kernel/genx2apic_phys.c:81:
+	if ((unsigned)cpu < NR_CPUS)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#145: FILE: arch/x86/kernel/genx2apic_phys.c:81:
+	if ((unsigned)cpu < NR_CPUS)

WARNING:RETURN_VOID: void function return statements are not generally useful
#169: FILE: arch/x86/kernel/genx2apic_phys.c:105:
+	return;
+}

CHECK:CAMELCASE: Avoid CamelCase: <dest_Fixed>
#173: FILE: arch/x86/kernel/genx2apic_phys.c:109:
+	.int_delivery_mode = dest_Fixed,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#195: FILE: arch/x86/kernel/genapic_64.c:33:
+static int x2apic_phys = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#202: FILE: arch/x86/kernel/genapic_64.c:40:
+}
+early_param("x2apic_phys", set_x2apic_phys_mode);

CHECK:BRACES: Unbalanced braces around else statement
#219: FILE: arch/x86/kernel/genapic_64.c:56:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000256361.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 5 warnings, 5 checks, 166 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000256361.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
