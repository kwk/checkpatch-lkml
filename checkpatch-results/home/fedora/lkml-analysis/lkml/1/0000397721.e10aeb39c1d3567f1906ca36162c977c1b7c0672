WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#65: FILE: mm/slub.c:2883:
+	printk(KERN_INFO "SLUB Performance testing\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#66: FILE: mm/slub.c:2884:
+	printk(KERN_INFO "========================\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#67: FILE: mm/slub.c:2885:
+	printk(KERN_INFO "1. Kmalloc: Repeatedly allocate then free test\n");

ERROR:SPACING: space required before the open parenthesis '('
#70: FILE: mm/slub.c:2888:
+		for(i = 0; i < TEST_COUNT; i++) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#70: FILE: mm/slub.c:2888:
+		for(i = 0; i < TEST_COUNT; i++) {
+			v[i] = kmalloc(size, GFP_KERNEL);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#73: FILE: mm/slub.c:2891:
+		printk(KERN_INFO "%i times kmalloc(%d) = ", i, size);

ERROR:SPACING: space required before the open parenthesis '('
#76: FILE: mm/slub.c:2894:
+		for(i = 0; i < TEST_COUNT; i++)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#78: FILE: mm/slub.c:2896:
+		printk(" kfree() = ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#80: FILE: mm/slub.c:2898:
+		printk("\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#83: FILE: mm/slub.c:2901:
+	printk(KERN_INFO "2. Kmalloc: alloc/free test\n");

ERROR:SPACING: space required before the open parenthesis '('
#86: FILE: mm/slub.c:2904:
+		for(i = 0; i < TEST_COUNT; i++)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#88: FILE: mm/slub.c:2906:
+		printk(KERN_INFO "%i times kmalloc(%d)/kfree = ", i, size);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#90: FILE: mm/slub.c:2908:
+		printk("\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#92: FILE: mm/slub.c:2910:
+	printk(KERN_INFO "3. kmem_cache_alloc: Repeatedly allocate then free test\n");

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#93: FILE: mm/slub.c:2911:
+	for (size = 3; size <= PAGE_SHIFT; size ++) {
 	                                        ^

ERROR:SPACING: space required before the open parenthesis '('
#95: FILE: mm/slub.c:2913:
+		for(i = 0; i < TEST_COUNT; i++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#95: FILE: mm/slub.c:2913:
+		for(i = 0; i < TEST_COUNT; i++) {
+			v[i] = kmem_cache_alloc(kmalloc_caches + size, GFP_KERNEL);
+		}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#98: FILE: mm/slub.c:2916:
+		printk(KERN_INFO "%d times kmem_cache_alloc(%d) = ", i, 1 << size);

ERROR:SPACING: space required before the open parenthesis '('
#101: FILE: mm/slub.c:2919:
+		for(i = 0; i < TEST_COUNT; i++)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#103: FILE: mm/slub.c:2921:
+		printk(" kmem_cache_free() = ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#105: FILE: mm/slub.c:2923:
+		printk("\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#108: FILE: mm/slub.c:2926:
+	printk(KERN_INFO "4. kmem_cache_alloc: alloc/free test\n");

ERROR:SPACING: space required before the open parenthesis '('
#111: FILE: mm/slub.c:2929:
+		for(i = 0; i < TEST_COUNT; i++)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#113: FILE: mm/slub.c:2931:
+			kmem_cache_free(kmalloc_caches + size,
+				kmem_cache_alloc(kmalloc_caches + size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: mm/slub.c:2932:
+				kmem_cache_alloc(kmalloc_caches + size,
+							GFP_KERNEL));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#115: FILE: mm/slub.c:2933:
+		printk(KERN_INFO "%d times kmem_cache_alloc(%d)/kmem_cache_free = ", i, 1 << size);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#117: FILE: mm/slub.c:2935:
+		printk("\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#119: FILE: mm/slub.c:2937:
+	printk(KERN_INFO "5. kmem_cache_zalloc: Repeatedly allocate then free test\n");

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#120: FILE: mm/slub.c:2938:
+	for (size = 3; size <= PAGE_SHIFT; size ++) {
 	                                        ^

ERROR:SPACING: space required before the open parenthesis '('
#122: FILE: mm/slub.c:2940:
+		for(i = 0; i < TEST_COUNT; i++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#122: FILE: mm/slub.c:2940:
+		for(i = 0; i < TEST_COUNT; i++) {
+			v[i] = kmem_cache_zalloc(kmalloc_caches + size, GFP_KERNEL);
+		}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#125: FILE: mm/slub.c:2943:
+		printk(KERN_INFO "%d times kmem_cache_zalloc(%d) = ", i, 1 << size);

ERROR:SPACING: space required before the open parenthesis '('
#128: FILE: mm/slub.c:2946:
+		for(i = 0; i < TEST_COUNT; i++)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#130: FILE: mm/slub.c:2948:
+		printk(" kmem_cache_free() = ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#132: FILE: mm/slub.c:2950:
+		printk("\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#135: FILE: mm/slub.c:2953:
+	printk(KERN_INFO "6. kmem_cache_zalloc: alloc/free test\n");

ERROR:SPACING: space required before the open parenthesis '('
#138: FILE: mm/slub.c:2956:
+		for(i = 0; i < TEST_COUNT; i++)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: mm/slub.c:2958:
+			kmem_cache_free(kmalloc_caches + size,
+				kmem_cache_zalloc(kmalloc_caches + size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#141: FILE: mm/slub.c:2959:
+				kmem_cache_zalloc(kmalloc_caches + size,
+							GFP_KERNEL));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#142: FILE: mm/slub.c:2960:
+		printk(KERN_INFO "%d times kmem_cache_zalloc(%d)/kmem_cache_free = ", i, 1 << size);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#144: FILE: mm/slub.c:2962:
+		printk("\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000397721.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 11 errors, 26 warnings, 4 checks, 124 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000397721.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
