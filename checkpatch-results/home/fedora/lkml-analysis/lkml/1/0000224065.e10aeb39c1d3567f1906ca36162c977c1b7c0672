WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#79: FILE: drivers/input/misc/mimio.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#93: FILE: drivers/input/misc/mimio.c:15:
+ input.h:#define LOCALBTN_TOOL_EXTRA2    0x14b mimio extra pens (orange, brown, yellow, purple) == BTN_STYLUS

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#178: FILE: drivers/input/misc/mimio.c:100:
+#define isvalidtxsize(n)	((n) > 0 && (n) <= MIMIO_MAXPAYLOAD)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#180: FILE: drivers/input/misc/mimio.c:102:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#209: FILE: drivers/input/misc/mimio.c:131:
+	spinlock_t txlock;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mimio *' should also have an identifier name
#210: FILE: drivers/input/misc/mimio.c:132:
+	void (*rxhandler)(struct mimio *, unsigned char *, unsigned int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#210: FILE: drivers/input/misc/mimio.c:132:
+	void (*rxhandler)(struct mimio *, unsigned char *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#210: FILE: drivers/input/misc/mimio.c:132:
+	void (*rxhandler)(struct mimio *, unsigned char *, unsigned int);

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#225: FILE: drivers/input/misc/mimio.c:147:
+static char mimio_name[] = "VirtualInk mimio-Xi";

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#226: FILE: drivers/input/misc/mimio.c:148:
+static struct usb_device_id mimio_table [] = {

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mimio"
#264: FILE: drivers/input/misc/mimio.c:186:
+	if (mimio == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPLIT_STRING: quoted string split across lines
#277: FILE: drivers/input/misc/mimio.c:199:
+			dev_dbg(&mimio->idev->dev, "mimio->idev->grab == NULL"
+				" -- didn't call input_close_device\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#323: FILE: drivers/input/misc/mimio.c:245:
+		unsigned delay;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mimio"
#362: FILE: drivers/input/misc/mimio.c:284:
+	if (mimio == NULL)

WARNING:MEMORY_BARRIER: memory barrier without comment
#409: FILE: drivers/input/misc/mimio.c:331:
+	wmb();

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'mimio_open', this function's name, in a string
#421: FILE: drivers/input/misc/mimio.c:343:
+	dev_dbg(&idev->dev, "mimio_open\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mimio"
#423: FILE: drivers/input/misc/mimio.c:345:
+	if (mimio == NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#434: FILE: drivers/input/misc/mimio.c:356:
+		struct urb *urb = mimio->in.urb;
+		mimio->in.urb->dev = mimio->udev;

WARNING:SPLIT_STRING: quoted string split across lines
#438: FILE: drivers/input/misc/mimio.c:360:
+			dev_err(&idev->dev, "usb_submit_urb failure "
+				"(res = %d: %s). Not greeting.\n",

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*mimio)...) over kzalloc(sizeof(struct mimio)...)
#478: FILE: drivers/input/misc/mimio.c:400:
+	mimio = kzalloc(sizeof(struct mimio), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:CAMELCASE: Avoid CamelCase: <bNumEndpoints>
#498: FILE: drivers/input/misc/mimio.c:420:
+	if (hostifc->desc.bNumEndpoints != 2) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hostifc->endpoint[0].desc
#505: FILE: drivers/input/misc/mimio.c:427:
+	mimio->in.desc = &(hostifc->endpoint[0].desc);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hostifc->endpoint[1].desc
#506: FILE: drivers/input/misc/mimio.c:428:
+	mimio->out.desc = &(hostifc->endpoint[1].desc);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mimio->in.buf"
#513: FILE: drivers/input/misc/mimio.c:435:
+	if (mimio->in.buf == NULL || mimio->out.buf == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mimio->out.buf"
#513: FILE: drivers/input/misc/mimio.c:435:
+	if (mimio->in.buf == NULL || mimio->out.buf == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mimio->in.urb"
#522: FILE: drivers/input/misc/mimio.c:444:
+	if (mimio->in.urb == NULL || mimio->out.urb == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mimio->out.urb"
#522: FILE: drivers/input/misc/mimio.c:444:
+	if (mimio->in.urb == NULL || mimio->out.urb == NULL) {

CHECK:CAMELCASE: Avoid CamelCase: <bEndpointAddress>
#531: FILE: drivers/input/misc/mimio.c:453:
+	pipe = usb_rcvintpipe(udev, mimio->in.desc->bEndpointAddress);

CHECK:CAMELCASE: Avoid CamelCase: <bInterval>
#536: FILE: drivers/input/misc/mimio.c:458:
+			 mimio_irq_in, mimio, mimio->in.desc->bInterval);

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#566: FILE: drivers/input/misc/mimio.c:488:
+	input_dev->id.vendor = le16_to_cpu(udev->descriptor.idVendor);

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#567: FILE: drivers/input/misc/mimio.c:489:
+	input_dev->id.product = le16_to_cpu(udev->descriptor.idProduct);

CHECK:CAMELCASE: Avoid CamelCase: <bcdDevice>
#568: FILE: drivers/input/misc/mimio.c:490:
+	input_dev->id.version = le16_to_cpu(udev->descriptor.bcdDevice);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#586: FILE: drivers/input/misc/mimio.c:508:
+#if 0

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#597: FILE: drivers/input/misc/mimio.c:519:
+#if 0

WARNING:LINE_SPACING: Missing a blank line after declarations
#661: FILE: drivers/input/misc/mimio.c:583:
+	int penid, x;
+	if (mimio->pktbuf.q - mimio->pktbuf.p < (down ? 4 : 3))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#662: FILE: drivers/input/misc/mimio.c:584:
+^I^Ireturn 1; ^I^I/* partial pkt */$

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#669: FILE: drivers/input/misc/mimio.c:591:
+				down ? "DOWN":"UP");
 				             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#675: FILE: drivers/input/misc/mimio.c:597:
+		penid = mimio->pktbuf.instr = *(mimio->pktbuf.p + 2);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#680: FILE: drivers/input/misc/mimio.c:602:
+			penid = mimio->pktbuf.instr = 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#692: FILE: drivers/input/misc/mimio.c:614:
+		int value = down ? DOWNVALUE : UPVALUE;
+		if (code > KEY_MAX)

WARNING:SPLIT_STRING: quoted string split across lines
#694: FILE: drivers/input/misc/mimio.c:616:
+			dev_dbg(&mimio->idev->dev, "input_event will ignore "
+				"-- code (%d) > KEY_MAX\n", code);

WARNING:SPLIT_STRING: quoted string split across lines
#697: FILE: drivers/input/misc/mimio.c:619:
+			dev_dbg(&mimio->idev->dev, "input_event will ignore "
+				"-- bit for code (%d) not enabled\n", code);

WARNING:SPLIT_STRING: quoted string split across lines
#700: FILE: drivers/input/misc/mimio.c:622:
+			dev_dbg(&mimio->idev->dev, "input_event will ignore "
+				"-- bit for code (%d) already set to %d\n",

WARNING:SPLIT_STRING: quoted string split across lines
#711: FILE: drivers/input/misc/mimio.c:633:
+		dev_dbg(&mimio->idev->dev, "penID offset[%d] == %d is < 0 "
+			"- not sending\n", penid, instr_ofst[penid]);

WARNING:LINE_SPACING: Missing a blank line after declarations
#769: FILE: drivers/input/misc/mimio.c:691:
+		int t = *mimio->pktbuf.p;
+		switch (t) {

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#801: FILE: drivers/input/misc/mimio.c:723:
+#if 0

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#804: FILE: drivers/input/misc/mimio.c:726:
+				 * received */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#902: FILE: drivers/input/misc/mimio.c:824:
+	mimio->pktbuf.p = mimio->pktbuf.q = mimio->pktbuf.buf;

WARNING:MEMORY_BARRIER: memory barrier without comment
#950: FILE: drivers/input/misc/mimio.c:872:
+		rmb();

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000224065.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 25 warnings, 23 checks, 937 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000224065.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
