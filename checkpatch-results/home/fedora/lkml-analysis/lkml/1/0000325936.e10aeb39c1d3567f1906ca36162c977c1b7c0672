ERROR:SPACING: space prohibited after that open parenthesis '('
#297: FILE: arch/sparc/mm/srmmu.c:501:
+	page = pfn_to_page( __nocache_pa(pte) >> PAGE_SHIFT );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#297: FILE: arch/sparc/mm/srmmu.c:501:
+	page = pfn_to_page( __nocache_pa(pte) >> PAGE_SHIFT );

WARNING:NEW_TYPEDEFS: do not add new typedefs
#405: FILE: include/asm-alpha/page.h:67:
+typedef struct page *pgtable_t;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#422: FILE: include/asm-alpha/pgalloc.h:18:
 }
+#define pmd_pgtable(pmd) pmd_page(pmd)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NEW_TYPEDEFS: do not add new typedefs
#464: FILE: include/asm-arm/page.h:177:
+typedef struct page *pgtable_t;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#509: FILE: include/asm-arm/pgalloc.h:132:
 }
+#define pmd_pgtable(pmd) pmd_page(pmd)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#520: FILE: include/asm-avr32/page.h:39:
+typedef struct page *pgtable_t;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#536: FILE: include/asm-avr32/pgalloc.h:24:
 }
+#define pmd_pgtable(pmd) pmd_page(pmd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#563: FILE: include/asm-avr32/pgalloc.h:72:
+#define __pte_free_tlb(tlb,pte)				\
                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pte' - possible side-effects?
#563: FILE: include/asm-avr32/pgalloc.h:72:
+#define __pte_free_tlb(tlb,pte)				\
+do {							\
+	pgtable_page_dtor(pte);				\
+	tlb_remove_page((tlb), pte);			\
+} while (0)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#578: FILE: include/asm-cris/page.h:31:
+typedef struct page *pgtable_t;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#619: FILE: include/asm-cris/pgalloc.h:50:
+#define __pte_free_tlb(tlb,pte)				\
                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pte' - possible side-effects?
#619: FILE: include/asm-cris/pgalloc.h:50:
+#define __pte_free_tlb(tlb,pte)				\
+do {							\
+	pgtable_page_dtor(pte);				\
+	tlb_remove_page((tlb), pte);			\
+} while (0)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#634: FILE: include/asm-frv/page.h:30:
+typedef struct page *pgtable_t;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#654: FILE: include/asm-frv/pgalloc.h:39:
+extern pgtable_t pte_alloc_one(struct mm_struct *, unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#654: FILE: include/asm-frv/pgalloc.h:39:
+extern pgtable_t pte_alloc_one(struct mm_struct *, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#654: FILE: include/asm-frv/pgalloc.h:39:
+extern pgtable_t pte_alloc_one(struct mm_struct *, unsigned long);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#669: FILE: include/asm-frv/pgalloc.h:52:
+#define __pte_free_tlb(tlb,pte)				\
                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pte' - possible side-effects?
#669: FILE: include/asm-frv/pgalloc.h:52:
+#define __pte_free_tlb(tlb,pte)				\
+do {							\
+	pgtable_page_dtor(pte);				\
+	tlb_remove_page((tlb),(pte));			\
+} while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#672: FILE: include/asm-frv/pgalloc.h:55:
+	tlb_remove_page((tlb),(pte));			\
 	                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#684: FILE: include/asm-ia64/page.h:190:
+  typedef struct page *pgtable_t;$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#684: FILE: include/asm-ia64/page.h:190:
+  typedef struct page *pgtable_t;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#692: FILE: include/asm-ia64/page.h:212:
+    typedef struct page *pgtable_t;$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#692: FILE: include/asm-ia64/page.h:212:
+    typedef struct page *pgtable_t;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#704: FILE: include/asm-ia64/pgalloc.h:73:
+pmd_populate(struct mm_struct *mm, pmd_t * pmd_entry, pgtable_t pte)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#708: FILE: include/asm-ia64/pgalloc.h:77:
 }
+#define pmd_pgtable(pmd) pmd_page(pmd)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#752: FILE: include/asm-m32r/page.h:32:
+typedef struct page *pgtable_t;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#768: FILE: include/asm-m32r/pgalloc.h:16:
 }
+#define pmd_pgtable(pmd) pmd_page(pmd)

WARNING:INLINE: plain inline is preferred over __inline__
#777: FILE: include/asm-m32r/pgalloc.h:41:
+static __inline__ pgtable_t pte_alloc_one(struct mm_struct *mm,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#778: FILE: include/asm-m32r/pgalloc.h:42:
+static __inline__ pgtable_t pte_alloc_one(struct mm_struct *mm,
 	unsigned long address)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#852: FILE: include/asm-m68k/motorola_pgalloc.h:102:
 }
+#define pmd_pgtable(pmd) pmd_page(pmd)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#863: FILE: include/asm-m68k/page.h:97:
+typedef struct page *pgtable_t;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#882: FILE: include/asm-m68k/sun3_pgalloc.h:35:
+#define __pte_free_tlb(tlb,pte)				\
                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pte' - possible side-effects?
#882: FILE: include/asm-m68k/sun3_pgalloc.h:35:
+#define __pte_free_tlb(tlb,pte)				\
+do {							\
+	pgtable_page_dtor(pte);				\
+	tlb_remove_page((tlb), pte);			\
+} while (0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#897: FILE: include/asm-m68k/sun3_pgalloc.h:54:
+static inline pgtable_t pte_alloc_one(struct mm_struct *mm,
+					unsigned long address)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#918: FILE: include/asm-m68k/sun3_pgalloc.h:76:
 }
+#define pmd_pgtable(pmd) pmd_page(pmd)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#929: FILE: include/asm-mips/page.h:96:
+typedef struct page *pgtable_t;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#945: FILE: include/asm-mips/pgalloc.h:27:
 }
+#define pmd_pgtable(pmd) pmd_page(pmd)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#974: FILE: include/asm-mips/pgalloc.h:101:
+#define __pte_free_tlb(tlb,pte)				\
                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pte' - possible side-effects?
#974: FILE: include/asm-mips/pgalloc.h:101:
+#define __pte_free_tlb(tlb,pte)				\
+do {							\
+	pgtable_page_dtor(pte);				\
+	tlb_remove_page((tlb), pte);			\
+} while (0)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#989: FILE: include/asm-parisc/page.h:96:
+typedef struct page *pgtable_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1032: FILE: include/asm-powerpc/page.h:194:
+typedef struct page *pgtable_t;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1055: FILE: include/asm-powerpc/pgalloc-32.h:35:
+extern pgtable_t pte_alloc_one(struct mm_struct *mm, unsigned long addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1058: FILE: include/asm-powerpc/pgalloc-32.h:37:
+extern void pte_free(struct mm_struct *mm, pgtable_t pte);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1088: FILE: include/asm-powerpc/pgalloc-64.h:98:
+static inline pgtable_t pte_alloc_one(struct mm_struct *mm,
+					unsigned long address)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1120: FILE: include/asm-powerpc/pgalloc-64.h:149:
+#define __pte_free_tlb(tlb,ptepage)	\
                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptepage' - possible side-effects?
#1120: FILE: include/asm-powerpc/pgalloc-64.h:149:
+#define __pte_free_tlb(tlb,ptepage)	\
+do { \
+	pgtable_page_dtor(ptepage); \
 	pgtable_free_tlb(tlb, pgtable_free_cache(page_address(ptepage), \
+		PTE_NONCACHE_NUM, PTE_TABLE_SIZE-1)); \
+} while (0)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1125: FILE: include/asm-powerpc/pgalloc-64.h:153:
+		PTE_NONCACHE_NUM, PTE_TABLE_SIZE-1)); \
 		                                ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1148: FILE: include/asm-ppc/pgalloc.h:36:
+extern pgtable_t pte_alloc_one(struct mm_struct *mm, unsigned long addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1151: FILE: include/asm-ppc/pgalloc.h:38:
+extern void pte_free(struct mm_struct *mm, pgtable_t pte);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1162: FILE: include/asm-s390/page.h:113:
+typedef struct page *pgtable_t;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1183: FILE: include/asm-s390/pgalloc.h:145:
 }
+#define pmd_pgtable(pmd) pmd_page(pmd)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1206: FILE: include/asm-sh/page.h:105:
+typedef struct page *pgtable_t;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1223: FILE: include/asm-sh/pgalloc.h:21:
 }
+#define pmd_pgtable(pmd) pmd_page(pmd)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1234: FILE: include/asm-sh/pgalloc.h:52:
+static inline pgtable_t pte_alloc_one(struct mm_struct *mm,
+					unsigned long address)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1262: FILE: include/asm-sh/pgalloc.h:76:
+#define __pte_free_tlb(tlb,pte)				\
                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pte' - possible side-effects?
#1262: FILE: include/asm-sh/pgalloc.h:76:
+#define __pte_free_tlb(tlb,pte)				\
+do {							\
+	pgtable_page_dtor(pte);				\
+	tlb_remove_page((tlb), (pte));			\
+} while (0)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1277: FILE: include/asm-sparc/page.h:128:
+typedef struct page *pgtable_t;

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1294: FILE: include/asm-sparc/pgalloc.h:57:
+BTFIXUPDEF_CALL(pgtable_t , pte_alloc_one, struct mm_struct *, unsigned long)
                           ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1303: FILE: include/asm-sparc/pgalloc.h:65:
+BTFIXUPDEF_CALL(void, pte_free, pgtable_t )

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1314: FILE: include/asm-sparc64/page.h:109:
+typedef struct page *pgtable_t;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1329: FILE: include/asm-sparc64/pgalloc.h:47:
+static inline pgtable_t pte_alloc_one(struct mm_struct *mm,
+					unsigned long address)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1371: FILE: include/asm-um/page.h:82:
+typedef struct page *pgtable_t;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1392: FILE: include/asm-um/pgalloc.h:30:
+extern pgtable_t pte_alloc_one(struct mm_struct *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#1392: FILE: include/asm-um/pgalloc.h:30:
+extern pgtable_t pte_alloc_one(struct mm_struct *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1392: FILE: include/asm-um/pgalloc.h:30:
+extern pgtable_t pte_alloc_one(struct mm_struct *, unsigned long);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1407: FILE: include/asm-um/pgalloc.h:43:
+#define __pte_free_tlb(tlb,pte)				\
                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pte' - possible side-effects?
#1407: FILE: include/asm-um/pgalloc.h:43:
+#define __pte_free_tlb(tlb,pte)				\
+do {							\
+	pgtable_page_dtor(pte);				\
+	tlb_remove_page((tlb),(pte));			\
+} while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1410: FILE: include/asm-um/pgalloc.h:46:
+	tlb_remove_page((tlb),(pte));			\
 	                     ^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1422: FILE: include/asm-x86/page_32.h:53:
+typedef struct page *pgtable_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1434: FILE: include/asm-x86/page_64.h:74:
+typedef struct page *pgtable_t;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1446: FILE: include/asm-x86/pgalloc_32.h:34:
 }
+#define pmd_pgtable(pmd) pmd_page(pmd)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1455: FILE: include/asm-x86/pgalloc_32.h:43:
+extern pgtable_t pte_alloc_one(struct mm_struct *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#1455: FILE: include/asm-x86/pgalloc_32.h:43:
+extern pgtable_t pte_alloc_one(struct mm_struct *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1455: FILE: include/asm-x86/pgalloc_32.h:43:
+extern pgtable_t pte_alloc_one(struct mm_struct *, unsigned long);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1492: FILE: include/asm-x86/pgalloc_64.h:99:
+	p = (void *)get_zeroed_page(GFP_KERNEL|__GFP_REPEAT);
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1514: FILE: include/asm-x86/pgalloc_64.h:122:
+#define __pte_free_tlb(tlb,pte)				\
                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pte' - possible side-effects?
#1514: FILE: include/asm-x86/pgalloc_64.h:122:
+#define __pte_free_tlb(tlb,pte)				\
+do {							\
+	pgtable_page_dtor((pte));				\
+	tlb_remove_page((tlb), (pte));			\
+} while (0)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1529: FILE: include/asm-xtensa/page.h:103:
+typedef struct page *pgtable_t;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1573: FILE: include/asm-xtensa/pgalloc.h:70:
 }
+#define pmd_pgtable(pmd) pmd_page(pmd)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000325936.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 16 errors, 29 warnings, 35 checks, 1284 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000325936.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
