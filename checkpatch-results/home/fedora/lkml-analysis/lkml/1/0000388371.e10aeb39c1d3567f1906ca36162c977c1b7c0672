WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
Remove unnecessary white spaces, tabs, white lines, wrap lines, parenthesises,

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#150: FILE: sound/isa/wavefront/wavefront_synth.c:289:
+		if (wavefront_sleep(HZ/sleep_interval))
 		                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#194: FILE: sound/isa/wavefront/wavefront_synth.c:329:
+	if ((wfcmd = wavefront_get_command(cmd)) == NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#231: FILE: sound/isa/wavefront/wavefront_synth.c:380:
+			if ((c = wavefront_read(dev)) == -1) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#240: FILE: sound/isa/wavefront/wavefront_synth.c:390:
+				if ((c = wavefront_read(dev)) == -1) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#288: FILE: sound/isa/wavefront/wavefront_synth.c:444:
+		if ((ack = wavefront_read(dev)) == 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#305: FILE: sound/isa/wavefront/wavefront_synth.c:458:
+					if ((err = wavefront_read(dev)) == -1) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#381: FILE: sound/isa/wavefront/wavefront_synth.c:580:
+	if ((x = snd_wavefront_cmd(dev, WFC_DELETE_SAMPLE, NULL, wbuf)) == 0)

WARNING:SPLIT_STRING: quoted string split across lines
#441: FILE: sound/isa/wavefront/wavefront_synth.c:642:
+	snd_printk("%d samples used (%d real, %d aliases, %d multi), "
+		   "%d empty\n", dev->samples_used, sc_real, sc_alias, sc_multi,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#461: FILE: sound/isa/wavefront/wavefront_synth.c:660:
+		if ((x = snd_wavefront_cmd(dev, WFC_UPLOAD_PATCH, patchbuf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#462: FILE: sound/isa/wavefront/wavefront_synth.c:661:
+		if ((x = snd_wavefront_cmd(dev, WFC_UPLOAD_PATCH, patchbuf,
 					patchnum)) == 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#503: FILE: sound/isa/wavefront/wavefront_synth.c:704:
+		if ((x = snd_wavefront_cmd(dev, WFC_UPLOAD_PROGRAM, progbuf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#504: FILE: sound/isa/wavefront/wavefront_synth.c:705:
+		if ((x = snd_wavefront_cmd(dev, WFC_UPLOAD_PROGRAM, progbuf,
 					&prognum)) == 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#612: FILE: sound/isa/wavefront/wavefront_synth.c:849:
+		if ((x = wavefront_find_free_sample(dev)) < 0)

CHECK:CAMELCASE: Avoid CamelCase: <sampleStartOffset>
#676: FILE: sound/isa/wavefront/wavefront_synth.c:977:
+	shptr = munge_int32(*((u32 *)&header->hdr.s.sampleStartOffset),

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#677: FILE: sound/isa/wavefront/wavefront_synth.c:978:
+	shptr = munge_int32(*((u32 *)&header->hdr.s.sampleStartOffset),
 			     shptr, 4);

CHECK:CAMELCASE: Avoid CamelCase: <loopStartOffset>
#679: FILE: sound/isa/wavefront/wavefront_synth.c:979:
+	shptr = munge_int32(*((u32 *)&header->hdr.s.loopStartOffset),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#680: FILE: sound/isa/wavefront/wavefront_synth.c:980:
+	shptr = munge_int32(*((u32 *)&header->hdr.s.loopStartOffset),
 			     shptr, 4);

CHECK:CAMELCASE: Avoid CamelCase: <loopEndOffset>
#682: FILE: sound/isa/wavefront/wavefront_synth.c:981:
+	shptr = munge_int32(*((u32 *)&header->hdr.s.loopEndOffset),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#683: FILE: sound/isa/wavefront/wavefront_synth.c:982:
+	shptr = munge_int32(*((u32 *)&header->hdr.s.loopEndOffset),
 			     shptr, 4);

CHECK:CAMELCASE: Avoid CamelCase: <sampleEndOffset>
#685: FILE: sound/isa/wavefront/wavefront_synth.c:983:
+	shptr = munge_int32(*((u32 *)&header->hdr.s.sampleEndOffset),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#686: FILE: sound/isa/wavefront/wavefront_synth.c:984:
+	shptr = munge_int32(*((u32 *)&header->hdr.s.sampleEndOffset),
 			     shptr, 4);

CHECK:CAMELCASE: Avoid CamelCase: <FrequencyBias>
#694: FILE: sound/isa/wavefront/wavefront_synth.c:991:
+	shptr = munge_int32(header->hdr.s.FrequencyBias, shptr, 3);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#702: FILE: sound/isa/wavefront/wavefront_synth.c:998:
+	shptr = munge_int32(*(&header->hdr.s.FrequencyBias+1),
 	                                                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#703: FILE: sound/isa/wavefront/wavefront_synth.c:999:
+	shptr = munge_int32(*(&header->hdr.s.FrequencyBias+1),
 			     shptr, 2);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#707: FILE: sound/isa/wavefront/wavefront_synth.c:1002:
+	if (snd_wavefront_cmd(dev,
 			   header->size ?

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#712: FILE: sound/isa/wavefront/wavefront_synth.c:1006:
+		snd_printk("sample %sdownload refused.\n",
 			    header->size ? "" : "header ");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#783: FILE: sound/isa/wavefront/wavefront_synth.c:1084:
+		if ((dma_ack = wavefront_read(dev)) != WF_DMA_ACK) {

CHECK:CAMELCASE: Avoid CamelCase: <OriginalSample>
#822: FILE: sound/isa/wavefront/wavefront_synth.c:1119:
+	munge_int32(header->hdr.a.OriginalSample, &alias_hdr[2], 2);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#824: FILE: sound/isa/wavefront/wavefront_synth.c:1121:
+	munge_int32(*((unsigned int *)&header->hdr.a.sampleStartOffset),
 		     &alias_hdr[4], 4);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#827: FILE: sound/isa/wavefront/wavefront_synth.c:1123:
+	munge_int32(*((unsigned int *)&header->hdr.a.loopStartOffset),
 		     &alias_hdr[8], 4);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#830: FILE: sound/isa/wavefront/wavefront_synth.c:1125:
+	munge_int32(*((unsigned int *)&header->hdr.a.loopEndOffset),
 		     &alias_hdr[12], 4);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#833: FILE: sound/isa/wavefront/wavefront_synth.c:1127:
+	munge_int32(*((unsigned int *)&header->hdr.a.sampleEndOffset),
 		     &alias_hdr[16], 4);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#837: FILE: sound/isa/wavefront/wavefront_synth.c:1129:
+	munge_int32(*(&header->hdr.a.FrequencyBias+1), &alias_hdr[23], 2);
 	                                          ^

CHECK:CAMELCASE: Avoid CamelCase: <NumberOfSamples>
#872: FILE: sound/isa/wavefront/wavefront_synth.c:1160:
+	msample_hdr[2] = (unsigned char)header->hdr.ms.NumberOfSamples;

CHECK:CAMELCASE: Avoid CamelCase: <SampleNumber>
#881: FILE: sound/isa/wavefront/wavefront_synth.c:1170:
+		munge_int32(header->hdr.ms.SampleNumber[i],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#882: FILE: sound/isa/wavefront/wavefront_synth.c:1171:
+		munge_int32(header->hdr.ms.SampleNumber[i],
 		     &msample_hdr[3+(i*2)], 2);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#893: FILE: sound/isa/wavefront/wavefront_synth.c:1180:
+	if (snd_wavefront_cmd(dev, WFC_DOWNLOAD_MULTISAMPLE,
 			   (unsigned char *) (long) ((num_samples*2)+3),

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#932: FILE: sound/isa/wavefront/wavefront_synth.c:1222:
+		if ((val = wavefront_read(dev)) == -1) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#942: FILE: sound/isa/wavefront/wavefront_synth.c:1229:
+		if ((val = wavefront_read(dev)) == -1) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#974: FILE: sound/isa/wavefront/wavefront_synth.c:1261:
+		munge_int32(((unsigned char *)drum)[i], &drumbuf[1+(i*2)], 2);
 		                                                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#974: FILE: sound/isa/wavefront/wavefront_synth.c:1261:
+		munge_int32(((unsigned char *)drum)[i], &drumbuf[1+(i*2)], 2);
 		                                                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1027: FILE: sound/isa/wavefront/wavefront_synth.c:1332:
+		if (copy_from_user(&header->hdr.s, header->hdrptr,
+				    sizeof(wavefront_sample))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1041: FILE: sound/isa/wavefront/wavefront_synth.c:1343:
+		if (copy_from_user(&header->hdr.s, header->hdrptr,
+				    sizeof(wavefront_multisample))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1055: FILE: sound/isa/wavefront/wavefront_synth.c:1354:
+		if (copy_from_user(&header->hdr.a, header->hdrptr,
+				    sizeof(wavefront_alias))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1068: FILE: sound/isa/wavefront/wavefront_synth.c:1364:
+		if (copy_from_user(&header->hdr.d, header->hdrptr,
+				    sizeof(wavefront_drum))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1081: FILE: sound/isa/wavefront/wavefront_synth.c:1374:
+		if (copy_from_user(&header->hdr.p, header->hdrptr,
+				    sizeof(wavefront_patch))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1094: FILE: sound/isa/wavefront/wavefront_synth.c:1384:
+		if (copy_from_user(&header->hdr.pr, header->hdrptr,
+				    sizeof(wavefront_program))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1106: FILE: sound/isa/wavefront/wavefront_synth.c:1394:
+		snd_printk("unknown patch type %d.\n",
 			    header->subkey);

CHECK:SPACING: No space is necessary after a cast
#1134: FILE: sound/isa/wavefront/wavefront_synth.c:1423:
+	*((u32 *) &s.sampleStartOffset) = demunge_int32(ptr, 4); ptr += 4;

CHECK:SPACING: No space is necessary after a cast
#1135: FILE: sound/isa/wavefront/wavefront_synth.c:1424:
+	*((u32 *) &s.loopStartOffset) = demunge_int32(ptr, 4); ptr += 4;

CHECK:SPACING: No space is necessary after a cast
#1136: FILE: sound/isa/wavefront/wavefront_synth.c:1425:
+	*((u32 *) &s.loopEndOffset) = demunge_int32(ptr, 4); ptr += 4;

CHECK:SPACING: No space is necessary after a cast
#1137: FILE: sound/isa/wavefront/wavefront_synth.c:1426:
+	*((u32 *) &s.sampleEndOffset) = demunge_int32(ptr, 4); ptr += 4;

CHECK:SPACING: No space is necessary after a cast
#1138: FILE: sound/isa/wavefront/wavefront_synth.c:1427:
+	*((u32 *) &s.FrequencyBias) = demunge_int32(ptr, 3); ptr += 3;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1166: FILE: sound/isa/wavefront/wavefront_synth.c:1455:
+		outb(0x80|0x20, dev->control_port);
 		         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1174: FILE: sound/isa/wavefront/wavefront_synth.c:1461:
+		outb(0x80|0x40|0x20, dev->control_port);
 		         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1174: FILE: sound/isa/wavefront/wavefront_synth.c:1461:
+		outb(0x80|0x40|0x20, dev->control_port);
 		              ^

CHECK:SPACING: No space is necessary after a cast
#1199: FILE: sound/isa/wavefront/wavefront_synth.c:1491:
+		munge_int32(*((u32 *) wc->wbuf), patchnumbuf, 2);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1335: FILE: sound/isa/wavefront/wavefront_synth.c:1680:
 static int __devinit

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1351: FILE: sound/isa/wavefront/wavefront_synth.c:1707:
 static void __devinit

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1369: FILE: sound/isa/wavefront/wavefront_synth.c:1727:
 static int __devinit

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1425: FILE: sound/isa/wavefront/wavefront_synth.c:1838:
+	if ((hwv[0] = wavefront_read(dev)) == -1) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1438: FILE: sound/isa/wavefront/wavefront_synth.c:1849:
+		if ((hwv[0] = wavefront_read(dev)) == -1) {

WARNING:SPLIT_STRING: quoted string split across lines
#1446: FILE: sound/isa/wavefront/wavefront_synth.c:1854:
+			snd_printk("on-board RAM test failed "
+				    "(error code: 0x%x).\n", hwv[0]);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1455: FILE: sound/isa/wavefront/wavefront_synth.c:1861:
+	if ((hwv[1] = wavefront_read(dev)) == -1) {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1475: FILE: sound/isa/wavefront/wavefront_synth.c:1882:
 static int __devinit

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1491: FILE: sound/isa/wavefront/wavefront_synth.c:1906:
+	if ((fd = sys_open((char __user *)path, 0, 0)) < 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1502: FILE: sound/isa/wavefront/wavefront_synth.c:1914:
+		if ((x = sys_read(fd, (char __user *)&section_length, sizeof(section_length))) !=

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1514: FILE: sound/isa/wavefront/wavefront_synth.c:1926:
+			snd_printk("invalid firmware section length %d\n",
 				    section_length);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1548: FILE: sound/isa/wavefront/wavefront_synth.c:1948:
+			if ((c = inb(dev->data_port)) != WF_ACK) {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1582: FILE: sound/isa/wavefront/wavefront_synth.c:1973:
 static int __devinit

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1609: FILE: sound/isa/wavefront/wavefront_synth.c:1998:
+		wavefront_should_cause_interrupt(dev, WFC_NOOP,
 						  dev->data_port,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1624: FILE: sound/isa/wavefront/wavefront_synth.c:2009:
+		wavefront_should_cause_interrupt(dev, WFC_NOOP,
 						  dev->data_port, (10*HZ));

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1639: FILE: sound/isa/wavefront/wavefront_synth.c:2020:
+		outb(0x80|0x40, dev->control_port);
 		         ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1649: FILE: sound/isa/wavefront/wavefront_synth.c:2028:
+	if ((dev->freemem = wavefront_freemem(dev)) < 0)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1690: FILE: sound/isa/wavefront/wavefront_synth.c:2058:
 int __devinit

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1730: FILE: sound/isa/wavefront/wavefront_synth.c:2092:
+	outb(0x80|0x40|0x20, dev->control_port);
 	         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1730: FILE: sound/isa/wavefront/wavefront_synth.c:2092:
+	outb(0x80|0x40|0x20, dev->control_port);
 	              ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1736: FILE: sound/isa/wavefront/wavefront_synth.c:2097:
 int __devinit

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1760: FILE: sound/isa/wavefront/wavefront_synth.c:2119:
+		snd_printk("firmware %d.%d already loaded.\n",
 			    rbuf[0], rbuf[1]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1766: FILE: sound/isa/wavefront/wavefront_synth.c:2124:
+		if (snd_wavefront_cmd(dev, WFC_HARDWARE_VERSION,
 				       rbuf, wbuf) == 0) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000388371.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 19 errors, 10 warnings, 52 checks, 1654 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000388371.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
