WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#93: FILE: drivers/usb/host/Kconfig:309:
+config USB_FHCI_HCD
+	tristate "Freescale QE USB Host Controller support"
+	depends on USB && OF_GPIO && QUICC_ENGINE
+	select FSL_GTM
+	select QE_USB
+	help
+	  This driver enables support for Freescale QE USB Host Controller
+	  (as found on MPC8360 and MPC8323 processors), the driver supports
+	  Full and Low Speed USB.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#103: FILE: drivers/usb/host/Kconfig:319:
+config FHCI_DEBUG
+	bool "Freescale QE USB Host Controller debug support"
+	depends on USB_FHCI_HCD && DEBUG_FS
+	help
+	  Say "y" to see some FHCI debug information and statistics
+	  throught debugfs.

WARNING:TYPO_SPELLING: 'throught' may be misspelled - perhaps 'thought'?
#108: FILE: drivers/usb/host/Kconfig:324:
+	  throught debugfs.
 	  ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#119: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#124: FILE: drivers/usb/host/fhci-cq.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'Semicondutor' may be misspelled - perhaps 'Semiconductor'?
#127: FILE: drivers/usb/host/fhci-cq.c:4:
+ * Copyright (c) Freescale Semicondutor, Inc. 2006.
                            ^^^^^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: drivers/usb/host/fhci-cq.c:20:
+       int max;^I^I/* size of queue */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: drivers/usb/host/fhci-cq.c:21:
+       int max_in;^I/* max items in queue */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: drivers/usb/host/fhci-cq.c:22:
+       int first;^I/* index of first in queue */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: drivers/usb/host/fhci-cq.c:23:
+       int last;^I/* index after last in queue */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: drivers/usb/host/fhci-cq.c:24:
+       int read;^I/* current reading position */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: drivers/usb/host/fhci-cq.c:25:
+       void *table[1];^I/* fake size */$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#235: FILE: drivers/usb/host/fhci-dbg.c:1:
+/*

WARNING:TYPO_SPELLING: 'Semicondutor' may be misspelled - perhaps 'Semiconductor'?
#238: FILE: drivers/usb/host/fhci-dbg.c:4:
+ * Copyright (c) Freescale Semicondutor, Inc. 2006.
                            ^^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#278: FILE: drivers/usb/host/fhci-dbg.c:44:
+	seq_printf(s,
+		"mode: 0x%x\n" "addr: 0x%x\n"

WARNING:STRING_FRAGMENTS: Consecutive strings are generally better as a single string
#278: FILE: drivers/usb/host/fhci-dbg.c:44:
+		"mode: 0x%x\n" "addr: 0x%x\n"

WARNING:STRING_FRAGMENTS: Consecutive strings are generally better as a single string
#279: FILE: drivers/usb/host/fhci-dbg.c:45:
+		"command: 0x%x\n" "ep0: 0x%x\n"

WARNING:STRING_FRAGMENTS: Consecutive strings are generally better as a single string
#280: FILE: drivers/usb/host/fhci-dbg.c:46:
+		"event: 0x%x\n" "mask: 0x%x\n"

WARNING:STRING_FRAGMENTS: Consecutive strings are generally better as a single string
#281: FILE: drivers/usb/host/fhci-dbg.c:47:
+		"status: 0x%x\n" "SOF timer: %d\n"

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#300: FILE: drivers/usb/host/fhci-dbg.c:66:
+	seq_printf(s,
+		"RXB: %d\n" "TXB: %d\n" "BSY: %d\n"

WARNING:STRING_FRAGMENTS: Consecutive strings are generally better as a single string
#300: FILE: drivers/usb/host/fhci-dbg.c:66:
+		"RXB: %d\n" "TXB: %d\n" "BSY: %d\n"

WARNING:STRING_FRAGMENTS: Consecutive strings are generally better as a single string
#301: FILE: drivers/usb/host/fhci-dbg.c:67:
+		"SOF: %d\n" "TXE0: %d\n" "TXE1: %d\n"

WARNING:STRING_FRAGMENTS: Consecutive strings are generally better as a single string
#302: FILE: drivers/usb/host/fhci-dbg.c:68:
+		"TXE2: %d\n" "TXE3: %d\n" "IDLE: %d\n"

WARNING:STRING_FRAGMENTS: Consecutive strings are generally better as a single string
#303: FILE: drivers/usb/host/fhci-dbg.c:69:
+		"RESET: %d\n" "SFT: %d\n" "MSF: %d\n"

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#348: FILE: drivers/usb/host/fhci-dbg.c:114:
+	fhci->dfs_regs = debugfs_create_file("regs", S_IFREG | S_IRUGO,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#349: FILE: drivers/usb/host/fhci-dbg.c:115:
+	fhci->dfs_regs = debugfs_create_file("regs", S_IFREG | S_IRUGO,
+		fhci->dfs_root, fhci, &fhci_dfs_regs_fops);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#352: FILE: drivers/usb/host/fhci-dbg.c:118:
+	fhci->dfs_irq_stat = debugfs_create_file("irq_stat",
+		S_IFREG | S_IRUGO, fhci->dfs_root, fhci,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#352: FILE: drivers/usb/host/fhci-dbg.c:118:
+		S_IFREG | S_IRUGO, fhci->dfs_root, fhci,

WARNING:NEEDLESS_IF: debugfs_remove(NULL) is safe and this check is probably not required
#364: FILE: drivers/usb/host/fhci-dbg.c:130:
+	if (fhci->dfs_irq_stat)
+		debugfs_remove(fhci->dfs_irq_stat);

WARNING:NEEDLESS_IF: debugfs_remove(NULL) is safe and this check is probably not required
#367: FILE: drivers/usb/host/fhci-dbg.c:133:
+	if (fhci->dfs_regs)
+		debugfs_remove(fhci->dfs_regs);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#385: FILE: drivers/usb/host/fhci-hcd.c:1:
+/*

WARNING:TYPO_SPELLING: 'Semicondutor' may be misspelled - perhaps 'Semiconductor'?
#388: FILE: drivers/usb/host/fhci-hcd.c:4:
+ * Copyright (c) Freescale Semicondutor, Inc. 2006.
                            ^^^^^^^^^^^^

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#430: FILE: drivers/usb/host/fhci-hcd.c:46:
+	fhci_dbg(fhci, "-> %s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#438: FILE: drivers/usb/host/fhci-hcd.c:54:
+	fhci_dbg(fhci, "<- %s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#443: FILE: drivers/usb/host/fhci-hcd.c:59:
+	fhci_dbg(fhci, "-> %s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#448: FILE: drivers/usb/host/fhci-hcd.c:64:
+	fhci_dbg(fhci, "<- %s\n", __func__);

CHECK:BRACES: braces {} should be used on all arms of this statement
#478: FILE: drivers/usb/host/fhci-hcd.c:94:
+	if (usb->intr_nesting_cnt == 1) {
[...]
+	} else if (usb->intr_nesting_cnt > 1)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'diable' may be misspelled - perhaps 'disable'?
#493: FILE: drivers/usb/host/fhci-hcd.c:109:
+/* diable the usb interrupt */
    ^^^^^^

WARNING:TYPO_SPELLING: 'diable' may be misspelled - perhaps 'disable'?
#499: FILE: drivers/usb/host/fhci-hcd.c:115:
+		/* diable the timer interrupt */
 		   ^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#533: FILE: drivers/usb/host/fhci-hcd.c:149:
+	if (usb->port_status == FHCI_PORT_FULL ||
+			usb->port_status == FHCI_PORT_LOW)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#598: FILE: drivers/usb/host/fhci-hcd.c:214:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#704: FILE: drivers/usb/host/fhci-hcd.c:320:
+	if (!usb) {
+		fhci_err(fhci, "no memory for SCC data struct\n");

CHECK:CAMELCASE: Avoid CamelCase: <wHubStatus>
#739: FILE: drivers/usb/host/fhci-hcd.c:355:
+	fhci->vroot_hub->hub.wHubStatus = 0;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <wHubChange>
#740: FILE: drivers/usb/host/fhci-hcd.c:356:
+	fhci->vroot_hub->hub.wHubChange = 0;

CHECK:CAMELCASE: Avoid CamelCase: <wPortStatus>
#741: FILE: drivers/usb/host/fhci-hcd.c:357:
+	fhci->vroot_hub->port.wPortStatus = 0;

CHECK:CAMELCASE: Avoid CamelCase: <wPortChange>
#742: FILE: drivers/usb/host/fhci-hcd.c:358:
+	fhci->vroot_hub->port.wPortChange = 0;

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#786: FILE: drivers/usb/host/fhci-hcd.c:402:
+		/* one td for every 4096 bytes(can be upto 8k) */
 		                                      ^^^^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#795: FILE: drivers/usb/host/fhci-hcd.c:411:
+		else if ((urb->transfer_flags & URB_ZERO_PACKET) != 0
+			 && (urb->transfer_buffer_length

CHECK:SPACING: No space is necessary after a cast
#806: FILE: drivers/usb/host/fhci-hcd.c:422:
+			urb->iso_frame_desc[i].status = (u32) (-EXDEV);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#819: FILE: drivers/usb/host/fhci-hcd.c:435:
+	urb_priv->tds = kzalloc(size * sizeof(struct td), mem_flags);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:BRACES: braces {} should be used on all arms of this statement
#852: FILE: drivers/usb/host/fhci-hcd.c:468:
+	if (usb->port_status != FHCI_PORT_DISABLED) {
[...]
+	} else
[...]

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'urb_priv->state == URB_DEL'
#861: FILE: drivers/usb/host/fhci-hcd.c:477:
+		if (!urb_priv || (urb_priv->state == URB_DEL))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: Unbalanced braces around else statement
#868: FILE: drivers/usb/host/fhci-hcd.c:484:
+	} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ed->td_head"
#888: FILE: drivers/usb/host/fhci-hcd.c:504:
+		while (ed->td_head != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#890: FILE: drivers/usb/host/fhci-hcd.c:506:
+			struct td *td = remove_td_from_ed(ed);
+			urb_complete_free(fhci, td->urb);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#941: FILE: drivers/usb/host/fhci-hcd.c:557:
+static int __devinit fhci_probe(struct device *dev, struct fhci_probe_info *pi)

WARNING:SPLIT_STRING: quoted string split across lines
#983: FILE: drivers/usb/host/fhci-hcd.c:599:
+				dev_info(dev, "assuming board doesn't have "
+					"%s gpio\n", i == GPIO_SPEED ?

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#999: FILE: drivers/usb/host/fhci-hcd.c:615:
+				dev_err(dev, "failed to set gpio %d as "
+					"an output\n", i);

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1059: FILE: drivers/usb/host/fhci-hcd.c:675:
+static int __devexit fhci_remove(struct device *dev)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1074: FILE: drivers/usb/host/fhci-hcd.c:690:
+static int __devinit of_fhci_probe(struct of_device *ofdev,

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#1096: FILE: drivers/usb/host/fhci-hcd.c:712:
+		return -EINVAL;;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1125: FILE: drivers/usb/host/fhci-hcd.c:741:
+	if (pi.fullspeed_clk == QE_CLK_NONE &&
+			pi.lowspeed_clk == QE_CLK_NONE) {

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1148: FILE: drivers/usb/host/fhci-hcd.c:764:
+static int __devexit of_fhci_remove(struct of_device *ofdev)

WARNING:CONST_STRUCT: struct of_device_id should normally be const
#1153: FILE: drivers/usb/host/fhci-hcd.c:769:
+static struct of_device_id of_fhci_match[] = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:SPLIT_STRING: quoted string split across lines
#1180: FILE: drivers/usb/host/fhci-hcd.c:796:
+MODULE_AUTHOR("Shlomi Gridish <gridish@freescale.com>, "
+	      "Jerry Huang <Chang-Ming.Huang@freescale.com>, "

WARNING:SPLIT_STRING: quoted string split across lines
#1181: FILE: drivers/usb/host/fhci-hcd.c:797:
+	      "Jerry Huang <Chang-Ming.Huang@freescale.com>, "
+	      "Anton Vorontsov <avorontsov@ru.mvista.com>");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1189: FILE: drivers/usb/host/fhci-hub.c:1:
+/*

WARNING:TYPO_SPELLING: 'Semicondutor' may be misspelled - perhaps 'Semiconductor'?
#1192: FILE: drivers/usb/host/fhci-hub.c:4:
+ * Copyright (c) Freescale Semicondutor, Inc. 2006.
                            ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'DeviceRemoveable' may be misspelled - perhaps 'Deviceremovable'?
#1215: FILE: drivers/usb/host/fhci-hub.c:27:
+	0x00, /* DeviceRemoveable */
 	         ^^^^^^^^^^^^^^^^

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1269: FILE: drivers/usb/host/fhci-hub.c:81:
+	fhci_dbg(fhci, "-> %s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1290: FILE: drivers/usb/host/fhci-hub.c:102:
+	fhci_dbg(fhci, "<- %s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1299: FILE: drivers/usb/host/fhci-hub.c:111:
+	fhci_dbg(fhci, "-> %s\n", __func__);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'usb->port_status != FHCI_PORT_FULL'
#1303: FILE: drivers/usb/host/fhci-hub.c:115:
+	if ((usb->port_status != FHCI_PORT_FULL) &&
+			(usb->port_status != FHCI_PORT_LOW))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'usb->port_status != FHCI_PORT_LOW'
#1303: FILE: drivers/usb/host/fhci-hub.c:115:
+	if ((usb->port_status != FHCI_PORT_FULL) &&
+			(usb->port_status != FHCI_PORT_LOW))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1304: FILE: drivers/usb/host/fhci-hub.c:116:
+	if ((usb->port_status != FHCI_PORT_FULL) &&
+			(usb->port_status != FHCI_PORT_LOW))

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1310: FILE: drivers/usb/host/fhci-hub.c:122:
+	fhci_dbg(fhci, "<- %s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1315: FILE: drivers/usb/host/fhci-hub.c:127:
+	fhci_dbg(fhci, "-> %s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1327: FILE: drivers/usb/host/fhci-hub.c:139:
+	fhci_dbg(fhci, "<- %s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1338: FILE: drivers/usb/host/fhci-hub.c:150:
+	fhci_dbg(fhci, "-> %s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1359: FILE: drivers/usb/host/fhci-hub.c:171:
+	fhci_dbg(fhci, "<- %s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1368: FILE: drivers/usb/host/fhci-hub.c:180:
+	fhci_dbg(fhci, "-> %s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1382: FILE: drivers/usb/host/fhci-hub.c:194:
+	fhci_dbg(fhci, "<- %s\n", __func__);

CHECK:CAMELCASE: Avoid CamelCase: <typeReq>
#1387: FILE: drivers/usb/host/fhci-hub.c:199:
+static int fhci_hub_control(struct usb_hcd *hcd, u16 typeReq, u16 wValue,

CHECK:CAMELCASE: Avoid CamelCase: <wValue>
#1387: FILE: drivers/usb/host/fhci-hub.c:199:
+static int fhci_hub_control(struct usb_hcd *hcd, u16 typeReq, u16 wValue,

CHECK:CAMELCASE: Avoid CamelCase: <wIndex>
#1388: FILE: drivers/usb/host/fhci-hub.c:200:
+			    u16 wIndex, char *buf, u16 wLength)

CHECK:CAMELCASE: Avoid CamelCase: <wLength>
#1388: FILE: drivers/usb/host/fhci-hub.c:200:
+			    u16 wIndex, char *buf, u16 wLength)

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1399: FILE: drivers/usb/host/fhci-hub.c:211:
+	fhci_dbg(fhci, "-> %s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1521: FILE: drivers/usb/host/fhci-hub.c:333:
+	fhci_dbg(fhci, "<- %s\n", __func__);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1533: FILE: drivers/usb/host/fhci-mem.c:1:
+/*

WARNING:TYPO_SPELLING: 'Semicondutor' may be misspelled - perhaps 'Semiconductor'?
#1536: FILE: drivers/usb/host/fhci-mem.c:4:
+ * Copyright (c) Freescale Semicondutor, Inc. 2006.
                            ^^^^^^^^^^^^

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1574: FILE: drivers/usb/host/fhci-mem.c:42:
+		if (!td)
+			fhci_err(fhci, "No memory to allocate to TD\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1598: FILE: drivers/usb/host/fhci-mem.c:66:
+		if (!ed)
+			fhci_err(fhci, "No memory to allocate to ED\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1613: FILE: drivers/usb/host/fhci-mem.c:81:
+static struct td *td_fill(struct fhci_hcd *fhci, struct urb *urb,
+		struct urb_priv *urb_priv, struct ed *ed, u16 index,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1644: FILE: drivers/usb/host/fhci-q.c:1:
+/*

WARNING:TYPO_SPELLING: 'Semicondutor' may be misspelled - perhaps 'Semiconductor'?
#1647: FILE: drivers/usb/host/fhci-q.c:4:
+ * Copyright (c) Freescale Semicondutor, Inc. 2006.
                            ^^^^^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1672: FILE: drivers/usb/host/fhci-q.c:29:
+		struct td *td = td_list[i];
+		list_add_tail(&td->node, &ed->td_list);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ed->td_head"
#1674: FILE: drivers/usb/host/fhci-q.c:31:
+	if (ed->td_head == NULL)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1694: FILE: drivers/usb/host/fhci-q.c:51:
+	if (!list_empty(&frame->tds_list)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1697: FILE: drivers/usb/host/fhci-q.c:54:
+	} else

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1714: FILE: drivers/usb/host/fhci-q.c:71:
+}
+static struct td *remove_td_from_ed(struct ed *ed)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1718: FILE: drivers/usb/host/fhci-q.c:75:
+	if (!list_empty(&ed->td_list)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1728: FILE: drivers/usb/host/fhci-q.c:85:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#1738: FILE: drivers/usb/host/fhci-q.c:95:
+	if (!list_empty(&p_list->done_list)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1741: FILE: drivers/usb/host/fhci-q.c:98:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#1755: FILE: drivers/usb/host/fhci-q.c:112:
+	if (!list_empty(&ed->td_list))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1757: FILE: drivers/usb/host/fhci-q.c:114:
+	else {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ed->td_head"
#1790: FILE: drivers/usb/host/fhci-q.c:147:
+	if (ed->td_head == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1802: FILE: drivers/usb/host/fhci-q.c:159:
+		if (urb->actual_length != urb->transfer_buffer_length &&
+				urb->transfer_flags & URB_SHORT_NOT_OK)

WARNING:TYPO_SPELLING: 'caculate' may be misspelled - perhaps 'calculate'?
#1815: FILE: drivers/usb/host/fhci-q.c:172:
+ * caculate transfer length/stats and update the urb
    ^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1826: FILE: drivers/usb/host/fhci-q.c:183:
+		u32 len;
+		if (!(urb->transfer_flags & URB_SHORT_NOT_OK &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1827: FILE: drivers/usb/host/fhci-q.c:184:
+		if (!(urb->transfer_flags & URB_SHORT_NOT_OK &&
+				cc == USB_TD_RX_DATA_UNDERUN))

CHECK:BRACES: Unbalanced braces around else statement
#1845: FILE: drivers/usb/host/fhci-q.c:202:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1853: FILE: drivers/usb/host/fhci-q.c:210:
+		if (!(urb->transfer_flags & URB_SHORT_NOT_OK) &&
+				cc == USB_TD_RX_DATA_UNDERUN) {

WARNING:TYPO_SPELLING: 'pedning' may be misspelled - perhaps 'pending'?
#1868: FILE: drivers/usb/host/fhci-q.c:225:
+/* there are some pedning request to unlink */
                   ^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'urb_priv->tds_cnt'
#1882: FILE: drivers/usb/host/fhci-q.c:239:
+		if (++(urb_priv->tds_cnt) == urb_priv->num_of_tds)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1892: FILE: drivers/usb/host/fhci-sched.c:1:
+/*

WARNING:TYPO_SPELLING: 'Semicondutor' may be misspelled - perhaps 'Semiconductor'?
#1895: FILE: drivers/usb/host/fhci-sched.c:4:
+ * Copyright (c) Freescale Semicondutor, Inc. 2006.
                            ^^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1961: FILE: drivers/usb/host/fhci-sched.c:70:
+		if ((td->status & USB_TD_RX_DATA_UNDERUN) ||
+				(td->status & USB_TD_TX_ER_STALL) ||

WARNING:TYPO_SPELLING: 'allready' may be misspelled - perhaps 'already'?
#2005: FILE: drivers/usb/host/fhci-sched.c:114:
+ * transmissions that are allready scheduled in the BDs
                           ^^^^^^^^

WARNING:TYPO_SPELLING: 'calcalate' may be misspelled - perhaps 'calculate'?
#2042: FILE: drivers/usb/host/fhci-sched.c:151:
+	/* calcalate data address,len and toggle and then add the transaction */
 	   ^^^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'td->type == FHCI_TA_IN'
#2055: FILE: drivers/usb/host/fhci-sched.c:164:
+		if (!((td->type == FHCI_TA_IN) &&
+		      ((len + td->actual_len) == td->len)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'td->type == FHCI_TA_IN'
#2061: FILE: drivers/usb/host/fhci-sched.c:170:
+		if (!((td->type == FHCI_TA_IN) &&
+		      ((td->len + CRC_SIZE) >= ed->max_pkt_size)))

WARNING:SPLIT_STRING: quoted string split across lines
#2078: FILE: drivers/usb/host/fhci-sched.c:187:
+		fhci_vdbg(usb->fhci, "not enough space in this frame: "
+			  "%d %d %d\n", usb->actual_frame->total_bytes, len,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#2101: FILE: drivers/usb/host/fhci-sched.c:210:
+	if (data == NULL) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2103: FILE: drivers/usb/host/fhci-sched.c:212:
+		BUG_ON(!data);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2116: FILE: drivers/usb/host/fhci-sched.c:225:
+	if (usb->port_status != FHCI_PORT_FULL &&
+			usb->port_status != FHCI_PORT_LOW) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2178: FILE: drivers/usb/host/fhci-sched.c:287:
+		if ((list_type == FHCI_TF_INTR || list_type == FHCI_TF_ISO) &&
+				(((usb->actual_frame->frame_num -

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'usb->port_status == FHCI_PORT_DISABLED'
#2277: FILE: drivers/usb/host/fhci-sched.c:386:
+	if ((usb->port_status == FHCI_PORT_DISABLED) &&
+	    (usb->vroot_hub->port.wPortStatus & USB_PORT_STAT_CONNECTION) &&
+	    !(usb->vroot_hub->port.wPortChange & USB_PORT_STAT_C_CONNECTION)) {

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#2302: FILE: drivers/usb/host/fhci-sched.c:411:
+	fhci_dbg(fhci, "-> %s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#2319: FILE: drivers/usb/host/fhci-sched.c:428:
+	fhci_dbg(fhci, "<- %s\n", __func__);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2325: FILE: drivers/usb/host/fhci-sched.c:434:
+{
+

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#2330: FILE: drivers/usb/host/fhci-sched.c:439:
+	fhci_dbg(fhci, "-> %s\n", __func__);

WARNING:SPLIT_STRING: quoted string split across lines
#2340: FILE: drivers/usb/host/fhci-sched.c:449:
+			fhci_warn(fhci, "Low-Speed device is not supported, "
+				  "try use BRGx\n");

WARNING:SPLIT_STRING: quoted string split across lines
#2358: FILE: drivers/usb/host/fhci-sched.c:467:
+			fhci_warn(fhci, "Full-Speed device is not supported, "
+				  "try use CLKx\n");

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#2375: FILE: drivers/usb/host/fhci-sched.c:484:
+	fhci_dbg(fhci, "<- %s\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#2403: FILE: drivers/usb/host/fhci-sched.c:512:
+	fhci_dbg(usb->fhci, "-> %s\n", __func__);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#2408: FILE: drivers/usb/host/fhci-sched.c:517:
+	udelay(1000);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#2413: FILE: drivers/usb/host/fhci-sched.c:522:
+	fhci_dbg(usb->fhci, "<- %s\n", __func__);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'usb->port_status == FHCI_PORT_FULL'
#2436: FILE: drivers/usb/host/fhci-sched.c:545:
+		if ((usb->port_status == FHCI_PORT_FULL) ||
+				(usb->port_status == FHCI_PORT_LOW)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'usb->port_status == FHCI_PORT_LOW'
#2436: FILE: drivers/usb/host/fhci-sched.c:545:
+		if ((usb->port_status == FHCI_PORT_FULL) ||
+				(usb->port_status == FHCI_PORT_LOW)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2437: FILE: drivers/usb/host/fhci-sched.c:546:
+		if ((usb->port_status == FHCI_PORT_FULL) ||
+				(usb->port_status == FHCI_PORT_LOW)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2449: FILE: drivers/usb/host/fhci-sched.c:558:
+			if (fhci_ioports_check_bus_state(fhci) == 1 &&
+					usb->port_status != FHCI_PORT_LOW &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2478: FILE: drivers/usb/host/fhci-sched.c:587:
+		if (usb->port_status == FHCI_PORT_DISABLED &&
+				usb->port_status != FHCI_PORT_LOW &&

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2501: FILE: drivers/usb/host/fhci-sched.c:610:
+
+

WARNING:TYPO_SPELLING: 'sucess' may be misspelled - perhaps 'success'?
#2503: FILE: drivers/usb/host/fhci-sched.c:612:
+ * Process normal completions(error or sucess) and clean the schedule.
                                        ^^^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "td"
#2522: FILE: drivers/usb/host/fhci-sched.c:631:
+	while (td != NULL) {

WARNING:TYPO_SPELLING: 'complted' may be misspelled - perhaps 'completed'?
#2560: FILE: drivers/usb/host/fhci-sched.c:669:
+/* transfer complted callback */
             ^^^^^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ed"
#2586: FILE: drivers/usb/host/fhci-sched.c:695:
+	if (ed == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2609: FILE: drivers/usb/host/fhci-sched.c:718:
+		ed->max_pkt_size = usb_maxpacket(urb->dev,
+			urb->pipe, usb_pipeout(urb->pipe));

CHECK:BRACES: Unbalanced braces around else statement
#2627: FILE: drivers/usb/host/fhci-sched.c:736:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2643: FILE: drivers/usb/host/fhci-sched.c:752:
+		if (urb->transfer_flags & URB_ZERO_PACKET &&
+				urb->transfer_buffer_length > 0 &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2646: FILE: drivers/usb/host/fhci-sched.c:755:
+				usb_maxpacket(urb->dev, urb->pipe,
+				usb_pipeout(urb->pipe))) == 0))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2650: FILE: drivers/usb/host/fhci-sched.c:759:
+			td = td_fill(fhci, urb, urb_priv, ed, cnt,
+				usb_pipeout(urb->pipe) ? FHCI_TA_OUT :

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2661: FILE: drivers/usb/host/fhci-sched.c:770:
+		td = td_fill(fhci, urb, urb_priv, ed, cnt,
+			usb_pipeout(urb->pipe) ? FHCI_TA_OUT : FHCI_TA_IN,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2667: FILE: drivers/usb/host/fhci-sched.c:776:
+		if (urb->transfer_flags & URB_ZERO_PACKET &&
+				cnt < urb_priv->num_of_tds) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2669: FILE: drivers/usb/host/fhci-sched.c:778:
+			td = td_fill(fhci, urb, urb_priv, ed, cnt,
+				usb_pipeout(urb->pipe) ? FHCI_TA_OUT :

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2678: FILE: drivers/usb/host/fhci-sched.c:787:
+		td = td_fill(fhci, urb, urb_priv, ed, cnt++,
+			usb_pipeout(urb->pipe) ? FHCI_TA_OUT : FHCI_TA_IN,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2685: FILE: drivers/usb/host/fhci-sched.c:794:
+		ed->max_pkt_size = usb_maxpacket(urb->dev, urb->pipe,
+			usb_pipeout(urb->pipe));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2687: FILE: drivers/usb/host/fhci-sched.c:796:
+		td = td_fill(fhci, urb, urb_priv, ed, cnt++, FHCI_TA_SETUP,
+			USB_TD_TOGGLE_DATA0, urb->setup_packet, 8, 0, 0, true);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2691: FILE: drivers/usb/host/fhci-sched.c:800:
+			td = td_fill(fhci, urb, urb_priv, ed, cnt++,
+				usb_pipeout(urb->pipe) ? FHCI_TA_OUT :

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2697: FILE: drivers/usb/host/fhci-sched.c:806:
+		td = td_fill(fhci, urb, urb_priv, ed, cnt++,
+			usb_pipeout(urb->pipe) ? FHCI_TA_IN : FHCI_TA_OUT,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2713: FILE: drivers/usb/host/fhci-sched.c:822:
+			td = td_fill(fhci, urb, urb_priv, ed, cnt,
+				usb_pipeout(urb->pipe) ? FHCI_TA_OUT :

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2764: FILE: drivers/usb/host/fhci-tds.c:1:
+/*

WARNING:TYPO_SPELLING: 'Semicondutor' may be misspelled - perhaps 'Semiconductor'?
#2767: FILE: drivers/usb/host/fhci-tds.c:4:
+ * Copyright (c) Freescale Semicondutor, Inc. 2006.
                            ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'recieved' may be misspelled - perhaps 'received'?
#2796: FILE: drivers/usb/host/fhci-tds.c:33:
+#define TD_STAL		0x0008 /* Stall recieved */
                		                ^^^^^^^^

WARNING:TYPO_SPELLING: 'overun' may be misspelled - perhaps 'overrun'?
#2839: FILE: drivers/usb/host/fhci-tds.c:76:
+	void *dummy_packets_Q;	/* dummy packets for the CRC overun */
 	                      	                             ^^^^^^

CHECK:BOOL_COMPARISON: Using comparison to false is error prone
#2856: FILE: drivers/usb/host/fhci-tds.c:93:
+	if (ep->already_pushed_dummy_bd == false) {

Comparisons of A to true and false are better written
as A and !A.

See: https://lore.kernel.org/lkml/1365563834.27174.12.camel@joe-AO722/

WARNING:TYPO_SPELLING: 'enpoint' may be misspelled - perhaps 'endpoint'?
#2926: FILE: drivers/usb/host/fhci-tds.c:163:
+	char *err_for = "enpoint PRAM";
 	                 ^^^^^^^

WARNING:TYPO_SPELLING: 'artuments' may be misspelled - perhaps 'arguments'?
#3010: FILE: drivers/usb/host/fhci-tds.c:247:
+ * artuments:
    ^^^^^^^^^

WARNING:TYPO_SPELLING: 'strucutre' may be misspelled - perhaps 'structure'?
#3011: FILE: drivers/usb/host/fhci-tds.c:248:
+ * usb		A pointer to the data strucutre of the USB
       		                      ^^^^^^^^^

WARNING:TYPO_SPELLING: 'structre' may be misspelled - perhaps 'structure'?
#3012: FILE: drivers/usb/host/fhci-tds.c:249:
+ * ep		A pointer to the endpoint structre
      		                          ^^^^^^^^

WARNING:TYPO_SPELLING: 'diabled' may be misspelled - perhaps 'disabled'?
#3045: FILE: drivers/usb/host/fhci-tds.c:282:
+ * are diabled, the application should call that routine to get
        ^^^^^^^

WARNING:TYPO_SPELLING: 'frome' may be misspelled - perhaps 'from'?
#3047: FILE: drivers/usb/host/fhci-tds.c:284:
+ * called frome the interrupt service routine during the Tx interrupt.
           ^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'buf == DUMMY2_BD_BUFFER'
#3089: FILE: drivers/usb/host/fhci-tds.c:326:
+		if ((buf == DUMMY2_BD_BUFFER) && !(td_status & ~TD_W))

CHECK:BRACES: braces {} should be used on all arms of this statement
#3097: FILE: drivers/usb/host/fhci-tds.c:334:
+			if (td_status & TD_RXER) {
[...]
+			} else if (td_status & TD_NAK)
[...]
+			else if (td_status & TD_TO)
[...]
+			else if (td_status & TD_UN)
[...]
+			else if (td_status & TD_STAL)
[...]
+			else
[...]

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#3110: FILE: drivers/usb/host/fhci-tds.c:347:
+						 "occured\n");
 						  ^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#3110: FILE: drivers/usb/host/fhci-tds.c:347:
+					fhci_err(usb->fhci, "illegal error "
+						 "occured\n");

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#3120: FILE: drivers/usb/host/fhci-tds.c:357:
+				fhci_err(usb->fhci, "illegal error occured\n");
 				                                   ^^^^^^^

WARNING:TYPO_SPELLING: 'tyep' may be misspelled - perhaps 'type'?
#3144: FILE: drivers/usb/host/fhci-tds.c:381:
+ * trans_type   Transaction tyep - IN,OUT or SETUP
                             ^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dest_speed == FHCI_LOW_SPEED'
#3220: FILE: drivers/usb/host/fhci-tds.c:457:
+	if ((dest_speed == FHCI_LOW_SPEED) &&
+	    (usb->port_status == FHCI_PORT_FULL))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'usb->port_status == FHCI_PORT_FULL'
#3220: FILE: drivers/usb/host/fhci-tds.c:457:
+	if ((dest_speed == FHCI_LOW_SPEED) &&
+	    (usb->port_status == FHCI_PORT_FULL))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3403: FILE: drivers/usb/host/fhci.h:1:
+/*

WARNING:TYPO_SPELLING: 'Semicondutor' may be misspelled - perhaps 'Semiconductor'?
#3406: FILE: drivers/usb/host/fhci.h:4:
+ * Copyright (c) Freescale Semicondutor, Inc. 2006.
                            ^^^^^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3430: FILE: drivers/usb/host/fhci.h:28:
+
+

WARNING:TYPO_SPELLING: 'transmited' may be misspelled - perhaps 'transmitted'?
#3471: FILE: drivers/usb/host/fhci.h:69:
+#define USB_TD_OK		0x00000000 /* TD transmited or received ok */
                  		                 ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#3476: FILE: drivers/usb/host/fhci.h:74:
+#define USB_TD_RX_ER_OVERUN	0x08000000 /* Over - run occured */
                            	                         ^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3537: FILE: drivers/usb/host/fhci.h:135:
+#define USB_RHS_SHIFT   ^I0$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3539: FILE: drivers/usb/host/fhci.h:137:
+#define USB_RHS_NORMAL  ^I0x0$

WARNING:TYPO_SPELLING: 'micorcode' may be misspelled - perhaps 'microcode'?
#3598: FILE: drivers/usb/host/fhci.h:196:
+	u8 sof_u_crc_temp;	/* SOF micorcode CRC5 temp reg */
 	                  	       ^^^^^^^^^

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#3656: FILE: drivers/usb/host/fhci.h:254:
+	spinlock_t lock;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3675: FILE: drivers/usb/host/fhci.h:273:
+#define FRAME_TIME_USAGE (USB_FRAME_USAGE*10)	/* frame time usage */
                                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3677: FILE: drivers/usb/host/fhci.h:275:
+#define MAX_BYTES_PER_FRAME (USB_FRAME_USAGE*15)
                                             ^

WARNING:TYPO_SPELLING: 'cachable' may be misspelled - perhaps 'cacheable'?
#3719: FILE: drivers/usb/host/fhci.h:317:
+	MEM_CACHABLE_SYS = 0x00000001,	/* primary DDR,cachable */
 	                              	               ^^^^^^^^

WARNING:TYPO_SPELLING: 'transfered' may be misspelled - perhaps 'transferred'?
#3748: FILE: drivers/usb/host/fhci.h:346:
+	unsigned int actual_len; /* actual bytes transfered on this td */
 	                                         ^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3771: FILE: drivers/usb/host/fhci.h:369:
+			 * field for the corresponding structure td */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3917: FILE: drivers/usb/host/fhci.h:515:
+static u32 host_transaction(struct fhci_usb *usb,
+	struct packet *pkt, enum fhci_ta_type trans_type,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000226974.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 113 warnings, 83 checks, 3788 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000226974.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
