CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#100: FILE: fs/ext4/ext4.h:1404:
+extern void ext4_msg(struct super_block *, const char *, const char *, ...)

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#100: FILE: fs/ext4/ext4.h:1404:
+extern void ext4_msg(struct super_block *, const char *, const char *, ...)

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#100: FILE: fs/ext4/ext4.h:1404:
+extern void ext4_msg(struct super_block *, const char *, const char *, ...)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#100: FILE: fs/ext4/ext4.h:1404:
+extern void ext4_msg(struct super_block *, const char *, const char *, ...)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(3, 4) over __attribute__((format(printf, 3, 4)))
#101: FILE: fs/ext4/ext4.h:1405:
+	__attribute__ ((format (printf, 3, 4)));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#140: FILE: fs/ext4/super.c:422:
+void ext4_msg (struct super_block * sb, const char *prefix,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#140: FILE: fs/ext4/super.c:422:
+void ext4_msg (struct super_block * sb, const char *prefix,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#141: FILE: fs/ext4/super.c:423:
+void ext4_msg (struct super_block * sb, const char *prefix,
+		   const char *fmt, ...)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#146: FILE: fs/ext4/super.c:428:
+	printk("%sEXT4-fs (%s): ", prefix, sb->s_id);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#148: FILE: fs/ext4/super.c:430:
+	printk("\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#170: FILE: fs/ext4/super.c:524:
+	ext4_msg(sb, KERN_ERR, "failed to open journal device %s: %ld",
 			__bdevname(dev, b), PTR_ERR(bdev));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#233: FILE: fs/ext4/super.c:1285:
+				ext4_msg(sb, KERN_ERR,
+					"Cannot specify journal on remount");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: fs/ext4/super.c:1340:
+					ext4_msg(sb, KERN_ERR,
+						"Cannot change data mode on remount");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#257: FILE: fs/ext4/super.c:1371:
+				ext4_msg(sb, KERN_ERR,
+				       "Cannot change journaled "

WARNING:SPLIT_STRING: quoted string split across lines
#258: FILE: fs/ext4/super.c:1372:
+				       "Cannot change journaled "
+				       "quota options when quota turned on");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#267: FILE: fs/ext4/super.c:1378:
+				ext4_msg(sb, KERN_ERR,
+					"Not enough memory for "

WARNING:SPLIT_STRING: quoted string split across lines
#268: FILE: fs/ext4/super.c:1379:
+					"Not enough memory for "
+					"storing quotafile name");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#277: FILE: fs/ext4/super.c:1385:
+				ext4_msg(sb, KERN_ERR,
+					"%s quota file already "

WARNING:SPLIT_STRING: quoted string split across lines
#278: FILE: fs/ext4/super.c:1386:
+					"%s quota file already "
+					"specified", QTYPE2NAME(qtype));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#288: FILE: fs/ext4/super.c:1393:
+				ext4_msg(sb, KERN_ERR,
+					"quotafile must be on "

WARNING:SPLIT_STRING: quoted string split across lines
#289: FILE: fs/ext4/super.c:1394:
+					"quotafile must be on "
+					"filesystem root");

WARNING:SPLIT_STRING: quoted string split across lines
#301: FILE: fs/ext4/super.c:1411:
 					"journaled quota options when "
+					"quota turned on");

WARNING:SPLIT_STRING: quoted string split across lines
#313: FILE: fs/ext4/super.c:1430:
 					"journaled quota options when "
+					"quota turned on");

WARNING:SPLIT_STRING: quoted string split across lines
#324: FILE: fs/ext4/super.c:1447:
+				ext4_msg(sb, KERN_ERR, "Cannot change quota "
+					"options when quota turned on");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#335: FILE: fs/ext4/super.c:1459:
+			ext4_msg(sb, KERN_ERR,
+				"quota options not supported");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#347: FILE: fs/ext4/super.c:1468:
+			ext4_msg(sb, KERN_ERR,
+				"journaled quota options not supported");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#358: FILE: fs/ext4/super.c:1494:
+				ext4_msg(sb, KERN_ERR,
+					"resize option only available "

WARNING:SPLIT_STRING: quoted string split across lines
#359: FILE: fs/ext4/super.c:1495:
+					"resize option only available "
+					"for remount");

WARNING:SPLIT_STRING: quoted string split across lines
#371: FILE: fs/ext4/super.c:1539:
+					 "EXT4-fs: inode_readahead_blks"
+					 " must be a power of 2");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#383: FILE: fs/ext4/super.c:1567:
+			ext4_msg(sb, KERN_ERR,
+			       "Unrecognized mount option \"%s\" "

WARNING:SPLIT_STRING: quoted string split across lines
#384: FILE: fs/ext4/super.c:1568:
+			       "Unrecognized mount option \"%s\" "
+			       "or missing value", p);

WARNING:SPLIT_STRING: quoted string split across lines
#395: FILE: fs/ext4/super.c:1587:
+			ext4_msg(sb, KERN_ERR, "old and new quota "
+					"format mixing");

WARNING:SPLIT_STRING: quoted string split across lines
#403: FILE: fs/ext4/super.c:1593:
+			ext4_msg(sb, KERN_ERR, "journaled quota format "
+					"not specified");

WARNING:SPLIT_STRING: quoted string split across lines
#412: FILE: fs/ext4/super.c:1600:
 					"specified with no journaling "
+					"enabled");

WARNING:SPLIT_STRING: quoted string split across lines
#423: FILE: fs/ext4/super.c:1616:
+		ext4_msg(sb, KERN_ERR, "revision level too high, "
+			 "forcing read-only mode");

WARNING:SPLIT_STRING: quoted string split across lines
#432: FILE: fs/ext4/super.c:1623:
+		ext4_msg(sb, KERN_WARNING, "warning: mounting unchecked fs, "
+			 "running e2fsck is recommended");

WARNING:SPLIT_STRING: quoted string split across lines
#439: FILE: fs/ext4/super.c:1627:
+			 "warning: mounting fs with errors, "
+			 "running e2fsck is recommended");

WARNING:SPLIT_STRING: quoted string split across lines
#448: FILE: fs/ext4/super.c:1633:
+			 "warning: maximal mount count reached, "
+			 "running e2fsck is recommended");

WARNING:SPLIT_STRING: quoted string split across lines
#457: FILE: fs/ext4/super.c:1639:
+			 "warning: checktime reached, "
+			 "running e2fsck is recommended");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#468: FILE: fs/ext4/super.c:1662:
+		ext4_msg(sb, KERN_INFO, "%s journal on %s",
+		       EXT4_SB(sb)->s_journal->j_inode ? "internal" :

WARNING:SPLIT_STRING: quoted string split across lines
#483: FILE: fs/ext4/super.c:1701:
+		ext4_msg(sb, KERN_ERR, "not enough memory for "
+				"%u flex groups", flex_group_count);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ext4_check_descriptors', this function's name, in a string
#492: FILE: fs/ext4/super.c:1787:
+			ext4_msg(sb, KERN_ERR, "ext4_check_descriptors: "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#495: FILE: fs/ext4/super.c:1789:
 			       "Block bitmap for group %u not in group "
+			       "(block %llu)!", i, block_bitmap);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ext4_check_descriptors', this function's name, in a string
#501: FILE: fs/ext4/super.c:1794:
+			ext4_msg(sb, KERN_ERR, "ext4_check_descriptors: "

WARNING:SPLIT_STRING: quoted string split across lines
#504: FILE: fs/ext4/super.c:1796:
 			       "Inode bitmap for group %u not in group "
+			       "(block %llu)!", i, inode_bitmap);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ext4_check_descriptors', this function's name, in a string
#511: FILE: fs/ext4/super.c:1802:
+			ext4_msg(sb, KERN_ERR, "ext4_check_descriptors: "

WARNING:SPLIT_STRING: quoted string split across lines
#514: FILE: fs/ext4/super.c:1804:
 			       "Inode table for group %u not in group "
+			       "(block %llu)!", i, inode_table);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ext4_check_descriptors', this function's name, in a string
#523: FILE: fs/ext4/super.c:1809:
+			ext4_msg(sb, KERN_ERR, "ext4_check_descriptors: "

WARNING:SPLIT_STRING: quoted string split across lines
#524: FILE: fs/ext4/super.c:1810:
+			ext4_msg(sb, KERN_ERR, "ext4_check_descriptors: "
+				 "Checksum for group %u failed (%u!=%u)",

WARNING:SPLIT_STRING: quoted string split across lines
#537: FILE: fs/ext4/super.c:1860:
+		ext4_msg(sb, KERN_ERR, "write access "
+			"unavailable, skipping orphan cleanup");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#559: FILE: fs/ext4/super.c:1886:
+				ext4_msg(sb, KERN_ERR,
+					"Cannot turn on journaled "

WARNING:SPLIT_STRING: quoted string split across lines
#560: FILE: fs/ext4/super.c:1887:
+					"Cannot turn on journaled "
+					"quota: error %d", ret);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#571: FILE: fs/ext4/super.c:1905:
+			ext4_msg(sb, KERN_DEBUG,
+				"%s: truncating inode %lu to %lld bytes",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#581: FILE: fs/ext4/super.c:1913:
+			ext4_msg(sb, KERN_DEBUG,
+				"%s: deleting unreferenced inode %lu",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#592: FILE: fs/ext4/super.c:1926:
+		ext4_msg(sb, KERN_INFO, "%d orphan inode%s deleted",
+		       PLURAL(nr_orphans));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#597: FILE: fs/ext4/super.c:1929:
+		ext4_msg(sb, KERN_INFO, "%d truncate%s cleaned up",
+		       PLURAL(nr_truncates));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#627: FILE: fs/ext4/super.c:2405:
+		ext4_msg(sb, KERN_WARNING,
+		       "feature flags set on rev 0 fs, "

WARNING:SPLIT_STRING: quoted string split across lines
#628: FILE: fs/ext4/super.c:2406:
+		       "feature flags set on rev 0 fs, "
+		       "running e2fsck is recommended");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#639: FILE: fs/ext4/super.c:2416:
+		ext4_msg(sb, KERN_ERR,
+			"Couldn't mount because of "

WARNING:SPLIT_STRING: quoted string split across lines
#640: FILE: fs/ext4/super.c:2417:
+			"Couldn't mount because of "
+			"unsupported optional features (%x)",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#650: FILE: fs/ext4/super.c:2425:
+		ext4_msg(sb, KERN_ERR,
+			"Couldn't mount RDWR because of "

WARNING:SPLIT_STRING: quoted string split across lines
#651: FILE: fs/ext4/super.c:2426:
+			"Couldn't mount RDWR because of "
+			"unsupported optional features (%x)",

WARNING:SPLIT_STRING: quoted string split across lines
#663: FILE: fs/ext4/super.c:2442:
 					"files cannot be mounted read-write "
+					"without CONFIG_LBD");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#675: FILE: fs/ext4/super.c:2451:
+		ext4_msg(sb, KERN_ERR,
+		       "Unsupported filesystem blocksize %d", blocksize);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#684: FILE: fs/ext4/super.c:2459:
+			ext4_msg(sb, KERN_ERR, "bad block size %d",
 					blocksize);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#694: FILE: fs/ext4/super.c:2469:
+			ext4_msg(sb, KERN_ERR,
+			       "Can't read superblock on 2nd try");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#703: FILE: fs/ext4/super.c:2476:
+			ext4_msg(sb, KERN_ERR,
+			       "Magic mismatch, very weird!");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#714: FILE: fs/ext4/super.c:2495:
+			ext4_msg(sb, KERN_ERR,
+			       "unsupported inode size: %d",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#725: FILE: fs/ext4/super.c:2509:
+			ext4_msg(sb, KERN_ERR,
+			       "unsupported descriptor size %lu",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#736: FILE: fs/ext4/super.c:2550:
+		ext4_msg(sb, KERN_ERR,
+		       "#blocks per group too big: %lu",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#744: FILE: fs/ext4/super.c:2556:
+		ext4_msg(sb, KERN_ERR,
+		       "#inodes per group too big: %lu",

WARNING:SPLIT_STRING: quoted string split across lines
#754: FILE: fs/ext4/super.c:2564:
+		ext4_msg(sb, KERN_ERR, "filesystem"
+			" too large to mount safely");

WARNING:SPLIT_STRING: quoted string split across lines
#769: FILE: fs/ext4/super.c:2577:
+		ext4_msg(sb, KERN_WARNING, "bad geometry: block count %llu "
+		       "exceeds size of device (%llu blocks)",

ERROR:CODE_INDENT: code indent should use tabs where possible
#781: FILE: fs/ext4/super.c:2587:
+                ext4_msg(sb, KERN_WARNING, "bad geometry: first data"$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#781: FILE: fs/ext4/super.c:2587:
+                ext4_msg(sb, KERN_WARNING, "bad geometry: first data"$

WARNING:SPLIT_STRING: quoted string split across lines
#782: FILE: fs/ext4/super.c:2588:
+                ext4_msg(sb, KERN_WARNING, "bad geometry: first data"
+			 "block %u is beyond end of filesystem (%llu)",

WARNING:MISSING_SPACE: break quoted strings at a space character
#782: FILE: fs/ext4/super.c:2588:
+                ext4_msg(sb, KERN_WARNING, "bad geometry: first data"
+			 "block %u is beyond end of filesystem (%llu)",

WARNING:SPLIT_STRING: quoted string split across lines
#796: FILE: fs/ext4/super.c:2600:
 		       "(block count %llu, first data block %u, "
+		       "blocks per group %lu)", sbi->s_groups_count,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#816: FILE: fs/ext4/super.c:2628:
+			ext4_msg(sb, KERN_ERR,
+			       "can't read group descriptor %d", i);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#832: FILE: fs/ext4/super.c:2640:
+			ext4_msg(sb, KERN_ERR,
+			       "unable to initialize "

WARNING:SPLIT_STRING: quoted string split across lines
#833: FILE: fs/ext4/super.c:2641:
+			       "unable to initialize "
+			       "flex_bg meta info!");

WARNING:SPLIT_STRING: quoted string split across lines
#854: FILE: fs/ext4/super.c:2705:
 			       "ext4_fill_super: Journal transaction "
+			       "%u is corrupt",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#860: FILE: fs/ext4/super.c:2709:
+				ext4_msg(sb, KERN_CRIT,
+				       "Mounting filesystem read-only");

WARNING:SPLIT_STRING: quoted string split across lines
#871: FILE: fs/ext4/super.c:2724:
+		ext4_msg(sb, KERN_ERR, "required journal recovery "
+		       "suppressed and not mounted read-only");

WARNING:SPLIT_STRING: quoted string split across lines
#891: FILE: fs/ext4/super.c:2776:
+			ext4_msg(sb, KERN_ERR, "Journal does not support "
+			       "requested data journaling mode");

WARNING:SPLIT_STRING: quoted string split across lines
#902: FILE: fs/ext4/super.c:2789:
+			ext4_msg(sb, KERN_WARNING, "Ignoring nobh option - "
+				"its supported only with writeback mode");

WARNING:SPLIT_STRING: quoted string split across lines
#935: FILE: fs/ext4/super.c:2841:
+		ext4_msg(sb, KERN_INFO, "required extra inode space not"
+			 "available");

WARNING:MISSING_SPACE: break quoted strings at a space character
#935: FILE: fs/ext4/super.c:2841:
+		ext4_msg(sb, KERN_INFO, "required extra inode space not"
+			 "available");

WARNING:SPLIT_STRING: quoted string split across lines
#942: FILE: fs/ext4/super.c:2846:
+		ext4_msg(sb, KERN_WARNING, "Ignoring delalloc option - "
+			 "requested data journaling mode");

WARNING:SPLIT_STRING: quoted string split across lines
#953: FILE: fs/ext4/super.c:2854:
+		ext4_msg(sb, KERN_ERR, "failed to initialize system "
+			 "zone (%d)\n", err);

WARNING:TYPO_SPELLING: 'initalize' may be misspelled - perhaps 'initialize'?
#962: FILE: fs/ext4/super.c:2861:
+		ext4_msg(sb, KERN_ERR, "failed to initalize mballoc (%d)",
 		                                  ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1045: FILE: fs/ext4/super.c:3032:
+		ext4_msg(sb, KERN_ERR,
+			"failed to claim external journal device");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1056: FILE: fs/ext4/super.c:3041:
+		ext4_msg(sb, KERN_ERR,
+			"blocksize too small for journal device");

WARNING:SPLIT_STRING: quoted string split across lines
#1067: FILE: fs/ext4/super.c:3050:
+		ext4_msg(sb, KERN_ERR, "couldn't read superblock of "
+		       "external journal");

WARNING:SPLIT_STRING: quoted string split across lines
#1078: FILE: fs/ext4/super.c:3059:
+		ext4_msg(sb, KERN_ERR, "external journal has "
+					"bad superblock");

WARNING:SPLIT_STRING: quoted string split across lines
#1109: FILE: fs/ext4/super.c:3089:
+		ext4_msg(sb, KERN_ERR, "External journal has more than one "
+					"user (unsupported) - %d",

WARNING:SPLIT_STRING: quoted string split across lines
#1120: FILE: fs/ext4/super.c:3119:
+		ext4_msg(sb, KERN_INFO, "external journal device major/minor "
+			"numbers have changed");

WARNING:SPLIT_STRING: quoted string split across lines
#1131: FILE: fs/ext4/super.c:3134:
+			ext4_msg(sb, KERN_INFO, "INFO: recovery "
+					"required on readonly filesystem");

WARNING:SPLIT_STRING: quoted string split across lines
#1136: FILE: fs/ext4/super.c:3137:
+				ext4_msg(sb, KERN_ERR, "write access "
+					"unavailable, cannot proceed");

WARNING:SPLIT_STRING: quoted string split across lines
#1142: FILE: fs/ext4/super.c:3141:
+			ext4_msg(sb, KERN_INFO, "write access will "
+			       "be enabled during recovery");

WARNING:SPLIT_STRING: quoted string split across lines
#1150: FILE: fs/ext4/super.c:3147:
+		ext4_msg(sb, KERN_ERR, "filesystem has both journal "
+		       "and inode journals!");

WARNING:SPLIT_STRING: quoted string split across lines
#1188: FILE: fs/ext4/super.c:3216:
+		ext4_msg(sb, KERN_ERR, "previous I/O error to "
+		       "superblock detected");

WARNING:SPLIT_STRING: quoted string split across lines
#1199: FILE: fs/ext4/super.c:3240:
+			ext4_msg(sb, KERN_ERR, "I/O error while writing "
+			       "superblock");

WARNING:SPLIT_STRING: quoted string split across lines
#1211: FILE: fs/ext4/super.c:3489:
 				       "remount RDWR because of unsupported "
+				       "optional features (%x)",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1223: FILE: fs/ext4/super.c:3506:
+					ext4_msg(sb, KERN_ERR,
+	       "ext4_remount: Checksum for group %u failed (%u!=%u)",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ext4_remount', this function's name, in a string
#1223: FILE: fs/ext4/super.c:3506:
+	       "ext4_remount: Checksum for group %u failed (%u!=%u)",

WARNING:SPLIT_STRING: quoted string split across lines
#1237: FILE: fs/ext4/super.c:3523:
 				       "orphan inode list.  Please "
+				       "umount/remount instead");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1249: FILE: fs/ext4/super.c:3780:
+			ext4_msg(sb, KERN_WARNING,
+				"Quota file not on filesystem root. "

WARNING:SPLIT_STRING: quoted string split across lines
#1250: FILE: fs/ext4/super.c:3781:
+				"Quota file not on filesystem root. "
+				"Journaled quota will not work");

WARNING:SPLIT_STRING: quoted string split across lines
#1261: FILE: fs/ext4/super.c:3865:
+		ext4_msg(sb, KERN_WARNING, "Quota write (off=%llu, len=%llu)"
+			" cancelled because transaction is not started",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1273: FILE: fs/ext4/super.c:3937:
+	printk(KERN_WARNING "EXT4-fs (%s): Update your userspace programs "

WARNING:SPLIT_STRING: quoted string split across lines
#1274: FILE: fs/ext4/super.c:3938:
+	printk(KERN_WARNING "EXT4-fs (%s): Update your userspace programs "
+	       "to mount using ext4\n", dev_name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1275: FILE: fs/ext4/super.c:3939:
+	printk(KERN_WARNING "EXT4-fs (%s): ext4dev backwards compatibility "

WARNING:SPLIT_STRING: quoted string split across lines
#1276: FILE: fs/ext4/super.c:3940:
+	printk(KERN_WARNING "EXT4-fs (%s): ext4dev backwards compatibility "
+	       "will go away by 2.6.31\n", dev_name);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000113800.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 75 warnings, 37 checks, 1105 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000113800.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
