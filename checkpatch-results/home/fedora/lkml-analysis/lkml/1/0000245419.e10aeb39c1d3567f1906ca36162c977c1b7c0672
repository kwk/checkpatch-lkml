WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: include/linux/irq.h:157:
+       unsigned int            irq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: include/linux/irq.h:158:
+       struct irq_desc         *next;$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#80: FILE: include/linux/irq.h:186:
+extern struct irq_desc *get_irq_desc(unsigned int irq);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: kernel/irq/handle.c:54:
+       .irq = -1U;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: kernel/irq/handle.c:55:
+       .status = IRQ_DISABLED,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: kernel/irq/handle.c:56:
+       .chip = &no_irq_chip,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: kernel/irq/handle.c:57:
+       .handle_irq = handle_bad_irq,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: kernel/irq/handle.c:58:
+       .depth = 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: kernel/irq/handle.c:59:
+       .lock = __SPIN_LOCK_UNLOCKED(irq_desc->lock),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: kernel/irq/handle.c:61:
+       .affinity = CPU_MASK_ALL$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: kernel/irq/handle.c:69:
+       if (arg)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#111: FILE: kernel/irq/handle.c:69:
+       if (arg)
+               nr_irq_desc = simple_strtoul(arg, NULL, 0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: kernel/irq/handle.c:70:
+               nr_irq_desc = simple_strtoul(arg, NULL, 0);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: kernel/irq/handle.c:70:
+               nr_irq_desc = simple_strtoul(arg, NULL, 0);$

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#112: FILE: kernel/irq/handle.c:70:
+               nr_irq_desc = simple_strtoul(arg, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: kernel/irq/handle.c:71:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: kernel/irq/handle.c:78:
+       struct dyn_array *da = data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: kernel/irq/handle.c:79:
+       int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: kernel/irq/handle.c:80:
+       struct  irq_desc *desc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: kernel/irq/handle.c:82:
+       desc = *da->name;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: kernel/irq/handle.c:84:
+       for (i = 0; i < *da->nr; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#126: FILE: kernel/irq/handle.c:84:
+       for (i = 0; i < *da->nr; i++)
+               memcpy(&desc[i], &irq_desc_init, sizeof(struct irq_desc));

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: kernel/irq/handle.c:85:
+               memcpy(&desc[i], &irq_desc_init, sizeof(struct irq_desc));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: kernel/irq/handle.c:85:
+               memcpy(&desc[i], &irq_desc_init, sizeof(struct irq_desc));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: kernel/irq/handle.c:87:
+       for (i = 1; i < *da->nr; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#129: FILE: kernel/irq/handle.c:87:
+       for (i = 1; i < *da->nr; i++)
+               desc[i-1].next = &desc[i];

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: kernel/irq/handle.c:88:
+               desc[i-1].next = &desc[i];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: kernel/irq/handle.c:88:
+               desc[i-1].next = &desc[i];$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#130: FILE: kernel/irq/handle.c:88:
+               desc[i-1].next = &desc[i];
                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#135: FILE: kernel/irq/handle.c:92:
PAGE_SIZE, init_work);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#136: FILE: kernel/irq/handle.c:93:
+DEFINE_DYN_ARRAY(irq_desc, sizeof(struct irq_desc), nr_irq_desc,
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: kernel/irq/handle.c:96:
+       struct irq_desc *desc, *desc_pri;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: kernel/irq/handle.c:98:
+       BUG_ON(irq == -1U);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#141: FILE: kernel/irq/handle.c:98:
+       BUG_ON(irq == -1U);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: kernel/irq/handle.c:100:
+       desc = &irq_desc[0];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: kernel/irq/handle.c:101:
+       while (desc) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#144: FILE: kernel/irq/handle.c:101:
+       while (desc) {
+               if (desc->irq == irq)

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: kernel/irq/handle.c:102:
+               if (desc->irq == irq)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: kernel/irq/handle.c:102:
+               if (desc->irq == irq)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#145: FILE: kernel/irq/handle.c:102:
+               if (desc->irq == irq)
+                       return desc;

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: kernel/irq/handle.c:103:
+                       return desc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: kernel/irq/handle.c:103:
+                       return desc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: kernel/irq/handle.c:105:
+               if (desc->irq == -1U) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: kernel/irq/handle.c:105:
+               if (desc->irq == -1U) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#148: FILE: kernel/irq/handle.c:105:
+               if (desc->irq == -1U) {
+                       desc->irq = irq;

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: kernel/irq/handle.c:106:
+                       desc->irq = irq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: kernel/irq/handle.c:106:
+                       desc->irq = irq;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: kernel/irq/handle.c:107:
+                       return desc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: kernel/irq/handle.c:107:
+                       return desc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: kernel/irq/handle.c:108:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: kernel/irq/handle.c:108:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: kernel/irq/handle.c:109:
+               desc_pri = desc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: kernel/irq/handle.c:109:
+               desc_pri = desc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: kernel/irq/handle.c:110:
+               desc = desc->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: kernel/irq/handle.c:110:
+               desc = desc->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: kernel/irq/handle.c:111:
+       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: kernel/irq/handle.c:114:
+        *  we run out of pre-allocate ones$

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: kernel/irq/handle.c:115:
+        *  and __alloc_bootmem or kzalloc could be used$

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: kernel/irq/handle.c:116:
+        */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: kernel/irq/handle.c:118:
+        if (after_bootmem)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: kernel/irq/handle.c:118:
+        if (after_bootmem)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: kernel/irq/handle.c:119:
+                desc = (struct irq_desc *) get_zeroed_page(GFP_ATOMIC);$

CHECK:SPACING: No space is necessary after a cast
#162: FILE: kernel/irq/handle.c:119:
+                desc = (struct irq_desc *) get_zeroed_page(GFP_ATOMIC);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: kernel/irq/handle.c:119:
+                desc = (struct irq_desc *) get_zeroed_page(GFP_ATOMIC);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: kernel/irq/handle.c:120:
+        else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: kernel/irq/handle.c:120:
+        else$

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: kernel/irq/handle.c:121:
+                desc = alloc_bootmem_pages(PAGE_SIZE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: kernel/irq/handle.c:121:
+                desc = alloc_bootmem_pages(PAGE_SIZE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: kernel/irq/handle.c:123:
+        if (!desc || ((unsigned long)desc & ~PAGE_MASK))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: kernel/irq/handle.c:123:
+        if (!desc || ((unsigned long)desc & ~PAGE_MASK))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 15)
#166: FILE: kernel/irq/handle.c:123:
+        if (!desc || ((unsigned long)desc & ~PAGE_MASK))
+               panic("please boot with nr_irq_desc= %d\n", nr_irq_desc * 2);

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: kernel/irq/handle.c:124:
+               panic("please boot with nr_irq_desc= %d\n", nr_irq_desc * 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: kernel/irq/handle.c:124:
+               panic("please boot with nr_irq_desc= %d\n", nr_irq_desc * 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: kernel/irq/handle.c:126:
+       desc_pri->next = desc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: kernel/irq/handle.c:127:
+       desc->irq = irq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: kernel/irq/handle.c:129:
+       return desc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: kernel/irq/handle.c:149:
+       if (irq < nr_irqs)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#188: FILE: kernel/irq/handle.c:149:
+       if (irq < nr_irqs)
+               return &irq_desc[irq];

ERROR:CODE_INDENT: code indent should use tabs where possible
#189: FILE: kernel/irq/handle.c:150:
+               return &irq_desc[irq];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: kernel/irq/handle.c:150:
+               return &irq_desc[irq];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: kernel/irq/handle.c:152:
+       return NULL;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000245419.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 22 errors, 55 warnings, 4 checks, 125 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000245419.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
