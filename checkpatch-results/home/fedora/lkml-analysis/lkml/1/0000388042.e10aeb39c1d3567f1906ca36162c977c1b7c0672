CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#89: FILE: include/linux/rcupdate.h:256:
+extern void init_rcu_boost_late(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#90: FILE: include/linux/rcupdate.h:257:
+extern void __rcu_preempt_boost(void);

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#269: FILE: kernel/rcupreempt.c:101:
+	spinlock_t rbs_mutex;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#281: FILE: kernel/rcupreempt.c:113:
+};
+#define RCU_BOOST_ELEMENTS 4

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#285: FILE: kernel/rcupreempt.c:117:
+static struct task_struct *rcu_boost_task = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#342: FILE: kernel/rcupreempt.c:174:
+	static time_t lastprint = 0;

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '+=' should be on the previous line
#378: FILE: kernel/rcupreempt.c:210:
+					sum.rbs_stats[event][state]
+					    += per_cpu(rcu_boost_dat,

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#386: FILE: kernel/rcupreempt.c:218:
+	printk(KERN_ALERT

WARNING:SPLIT_STRING: quoted string split across lines
#388: FILE: kernel/rcupreempt.c:220:
+	       "rcu_boost_dat: idx=%d "
+	       "b=%lu ul=%lu ub=%lu boost: a=%lu b=%lu\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#399: FILE: kernel/rcupreempt.c:231:
+		printk(KERN_ALERT "rcu_boost_dat %s %s\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#482: FILE: kernel/rcupreempt.c:314:
+^I^I^I             /*  Administrators can always adjust */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#550: FILE: kernel/rcupreempt.c:382:
+	while (!list_empty(&list)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#607: FILE: kernel/rcupreempt.c:439:
+	do {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#612: FILE: kernel/rcupreempt.c:444:
+		for_each_possible_cpu(cpu) {
+

WARNING:TYPO_SPELLING: 'unstalled' may be misspelled - perhaps 'installed'?
#632: FILE: kernel/rcupreempt.c:464:
+		 * Sleep to allow any unstalled RCU read-side critical
 		                      ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#654: FILE: kernel/rcupreempt.c:486:
+{
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#657: FILE: kernel/rcupreempt.c:489:
+	printk(KERN_INFO "Starting RCU priority booster\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#660: FILE: kernel/rcupreempt.c:492:
+		printk(KERN_ALERT

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rbdp"
#689: FILE: kernel/rcupreempt.c:521:
+	if (rbdp == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#691: FILE: kernel/rcupreempt.c:523:
+		printk(KERN_ALERT

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#705: FILE: kernel/rcupreempt.c:537:
+	if (current->rcub_state != RCU_BOOST_IDLE) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#766: FILE: kernel/rcupreempt.c:598:
+{
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000388042.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 7 warnings, 12 checks, 766 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000388042.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
