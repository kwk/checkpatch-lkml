ERROR:DEFINE_ARCH_HAS: #define of 'ARCH_HAS_SETUP_ADDITIONAL_PAGES' is wrong - use Kconfig variables or standard guards instead
#101: FILE: arch/s390/include/asm/elf.h:209:
+#define ARCH_HAS_SETUP_ADDITIONAL_PAGES 1

The ARCH_HAS_xyz and ARCH_HAVE_xyz patterns are wrong.

For big conceptual features use Kconfig symbols instead.  And for
smaller things where we have compatibility fallback functions but
want architectures able to override them with optimized ones, we
should either use weak functions (appropriate for some cases), or
the symbol that protects them should be the same symbol we use.

See: https://lore.kernel.org/lkml/CA+55aFycQ9XJvEOsiM3txHL5bjUc8CeKWJNR_H+MiicaddB42Q@mail.gmail.com/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#133: FILE: arch/s390/include/asm/vdso.h:1:
+#ifndef __S390_VDSO_H__

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#142: FILE: arch/s390/include/asm/vdso.h:10:
+#define VDSO_VERSION_STRING	LINUX_2.6.26

WARNING:MEMORY_BARRIER: memory barrier without comment
#265: FILE: arch/s390/kernel/time.c:234:
+	smp_mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#271: FILE: arch/s390/kernel/time.c:240:
+	smp_wmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#281: FILE: arch/s390/kernel/time.c:250:
+	smp_mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#284: FILE: arch/s390/kernel/time.c:253:
+	smp_mb();

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#296: FILE: arch/s390/kernel/vdso32/clock_getres.S:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#340: FILE: arch/s390/kernel/vdso32/clock_gettime.S:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#473: FILE: arch/s390/kernel/vdso32/gettimeofday.S:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#620: FILE: arch/s390/kernel/vdso32/note.S:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#637: FILE: arch/s390/kernel/vdso32/vdso32.lds.S:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#780: FILE: arch/s390/kernel/vdso32/vdso32_wrapper.S:1:
+#include <linux/init.h>

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#798: FILE: arch/s390/kernel/vdso64/clock_getres.S:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#842: FILE: arch/s390/kernel/vdso64/clock_gettime.S:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#936: FILE: arch/s390/kernel/vdso64/gettimeofday.S:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1057: FILE: arch/s390/kernel/vdso64/note.S:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1074: FILE: arch/s390/kernel/vdso64/vdso64.lds.S:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1217: FILE: arch/s390/kernel/vdso64/vdso64_wrapper.S:1:
+#include <linux/init.h>

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1235: FILE: arch/s390/kernel/vdso.c:1:
+/*

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#1260: FILE: arch/s390/kernel/vdso.c:26:
+#include <asm/pgtable.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#1262: FILE: arch/s390/kernel/vdso.c:28:
+#include <asm/processor.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/mmu_context.h> instead of <asm/mmu_context.h>
#1264: FILE: arch/s390/kernel/vdso.c:30:
+#include <asm/mmu_context.h>

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1293: FILE: arch/s390/kernel/vdso.c:59:
+	vdso_enabled = simple_strtoul(s, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#1296: FILE: arch/s390/kernel/vdso.c:62:
+__setup("vdso=", vdso_setup);

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data.page_aligned") over __attribute__((__section__(".data.page_aligned")))
#1304: FILE: arch/s390/kernel/vdso.c:70:
+} vdso_data_store __attribute__((__section__(".data.page_aligned")));

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1378: FILE: arch/s390/kernel/vdso.c:144:
+				     VM_READ|VM_EXEC|
 				            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#1378: FILE: arch/s390/kernel/vdso.c:144:
+				     VM_READ|VM_EXEC|
 				                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1379: FILE: arch/s390/kernel/vdso.c:145:
+				     VM_MAYREAD|VM_MAYWRITE|VM_MAYEXEC|
 				               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1379: FILE: arch/s390/kernel/vdso.c:145:
+				     VM_MAYREAD|VM_MAYWRITE|VM_MAYEXEC|
 				                           ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#1379: FILE: arch/s390/kernel/vdso.c:145:
+				     VM_MAYREAD|VM_MAYWRITE|VM_MAYEXEC|
 				                                      ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1415: FILE: arch/s390/kernel/vdso.c:181:
+	BUG_ON(vdso32_pagelist == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vdso32_pagelist"
#1415: FILE: arch/s390/kernel/vdso.c:181:
+	BUG_ON(vdso32_pagelist == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1417: FILE: arch/s390/kernel/vdso.c:183:
+		struct page *pg = virt_to_page(vdso32_kbase + i*PAGE_SIZE);
 		                                               ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1418: FILE: arch/s390/kernel/vdso.c:184:
+		struct page *pg = virt_to_page(vdso32_kbase + i*PAGE_SIZE);
+		ClearPageReserved(pg);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1434: FILE: arch/s390/kernel/vdso.c:200:
+	BUG_ON(vdso64_pagelist == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vdso64_pagelist"
#1434: FILE: arch/s390/kernel/vdso.c:200:
+	BUG_ON(vdso64_pagelist == NULL);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1436: FILE: arch/s390/kernel/vdso.c:202:
+		struct page *pg = virt_to_page(vdso64_kbase + i*PAGE_SIZE);
 		                                               ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1437: FILE: arch/s390/kernel/vdso.c:203:
+		struct page *pg = virt_to_page(vdso64_kbase + i*PAGE_SIZE);
+		ClearPageReserved(pg);

WARNING:MEMORY_BARRIER: memory barrier without comment
#1447: FILE: arch/s390/kernel/vdso.c:213:
+	smp_wmb();

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000216713.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 25 warnings, 13 checks, 1281 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000216713.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
