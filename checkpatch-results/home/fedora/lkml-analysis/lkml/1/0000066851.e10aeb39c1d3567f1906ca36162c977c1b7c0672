WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
Subject: [PATCH] Move histogram related functions into their own files (hist.c and hist.h)

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#471: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#476: FILE: tools/perf/util/hist.c:1:
+#include "hist.h"

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hist_entry *' should also have an identifier name
#521: FILE: tools/perf/util/hist.c:46:
+		int64_t (*f)(struct hist_entry *, struct hist_entry *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hist_entry *' should also have an identifier name
#521: FILE: tools/perf/util/hist.c:46:
+		int64_t (*f)(struct hist_entry *, struct hist_entry *);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "p"
#549: FILE: tools/perf/util/hist.c:74:
+	while (*p != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "p"
#603: FILE: tools/perf/util/hist.c:128:
+	while (*p != NULL) {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#646: FILE: tools/perf/util/hist.h:1:
+#ifndef __PERF_HIST_H

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#684: FILE: tools/perf/util/hist.h:39:
+extern int64_t hist_entry__cmp(struct hist_entry *, struct hist_entry *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hist_entry *' should also have an identifier name
#684: FILE: tools/perf/util/hist.h:39:
+extern int64_t hist_entry__cmp(struct hist_entry *, struct hist_entry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hist_entry *' should also have an identifier name
#684: FILE: tools/perf/util/hist.h:39:
+extern int64_t hist_entry__cmp(struct hist_entry *, struct hist_entry *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#685: FILE: tools/perf/util/hist.h:40:
+extern int64_t hist_entry__collapse(struct hist_entry *, struct hist_entry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hist_entry *' should also have an identifier name
#685: FILE: tools/perf/util/hist.h:40:
+extern int64_t hist_entry__collapse(struct hist_entry *, struct hist_entry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hist_entry *' should also have an identifier name
#685: FILE: tools/perf/util/hist.h:40:
+extern int64_t hist_entry__collapse(struct hist_entry *, struct hist_entry *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#686: FILE: tools/perf/util/hist.h:41:
+extern void hist_entry__free(struct hist_entry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hist_entry *' should also have an identifier name
#686: FILE: tools/perf/util/hist.h:41:
+extern void hist_entry__free(struct hist_entry *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#687: FILE: tools/perf/util/hist.h:42:
+extern void collapse__insert_entry(struct hist_entry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hist_entry *' should also have an identifier name
#687: FILE: tools/perf/util/hist.h:42:
+extern void collapse__insert_entry(struct hist_entry *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#688: FILE: tools/perf/util/hist.h:43:
+extern void collapse__resort(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#689: FILE: tools/perf/util/hist.h:44:
+extern void output__insert_entry(struct hist_entry *, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hist_entry *' should also have an identifier name
#689: FILE: tools/perf/util/hist.h:44:
+extern void output__insert_entry(struct hist_entry *, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#689: FILE: tools/perf/util/hist.h:44:
+extern void output__insert_entry(struct hist_entry *, u64);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#690: FILE: tools/perf/util/hist.h:45:
+extern void output__resort(u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#690: FILE: tools/perf/util/hist.h:45:
+extern void output__resort(u64);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000066851.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 15 warnings, 9 checks, 603 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000066851.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
