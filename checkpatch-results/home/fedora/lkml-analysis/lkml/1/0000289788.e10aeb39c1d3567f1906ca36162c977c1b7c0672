CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#61: FILE: drivers/hid/hid-input-quirks.c:26:
+static int quirk_belkin_wkbd(struct hid_usage *usage,
+		struct hid_input *hidinput, unsigned long **bit, int *max)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#72: FILE: drivers/hid/hid-input-quirks.c:42:
+static int quirk_cherry_cymotion(struct hid_usage *usage,
+		struct hid_input *hidinput, unsigned long **bit, int *max)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#83: FILE: drivers/hid/hid-input-quirks.c:58:
+static int quirk_logitech_ultrax_remote(struct hid_usage *usage,
+		struct hid_input *hidinput, unsigned long **bit, int *max)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#100: FILE: drivers/hid/hid-input-quirks.c:91:
+static int quirk_chicony_tactical_pad(struct hid_usage *usage,
+		struct hid_input *hidinput, unsigned long **bit, int *max)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#117: FILE: drivers/hid/hid-input-quirks.c:116:
+static int quirk_microsoft_ergonomy_kb(struct hid_usage *usage,
+		struct hid_input *hidinput, unsigned long **bit, int *max)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#131: FILE: drivers/hid/hid-input-quirks.c:141:
+static int quirk_microsoft_presenter_8k(struct hid_usage *usage,
+		struct hid_input *hidinput, unsigned long **bit, int *max)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#148: FILE: drivers/hid/hid-input-quirks.c:160:
+static int quirk_petalynx_remote(struct hid_usage *usage,
+		struct hid_input *hidinput, unsigned long **bit, int *max)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#159: FILE: drivers/hid/hid-input-quirks.c:188:
+static int quirk_logitech_wireless(struct hid_usage *usage,
+		struct hid_input *hidinput, unsigned long **bit, int *max)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#170: FILE: drivers/hid/hid-input-quirks.c:240:
+static int quirk_cherry_genius_29e(struct hid_usage *usage,
+		struct hid_input *hidinput, unsigned long **bit, int *max)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#180: FILE: drivers/hid/hid-input-quirks.c:258:
+static int quirk_btc_8193(struct hid_usage *usage, struct hid_input *hidinput,
 			      unsigned long **bit, int *max)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#190: FILE: drivers/hid/hid-input-quirks.c:280:
+static int quirk_sunplus_wdesktop(struct hid_usage *usage,
+		struct hid_input *hidinput, unsigned long **bit, int *max)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_usage *' should also have an identifier name
#199: FILE: drivers/hid/hid-input-quirks.c:330:
+	int (*quirk)(struct hid_usage *, struct hid_input *, unsigned long **,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_input *' should also have an identifier name
#199: FILE: drivers/hid/hid-input-quirks.c:330:
+	int (*quirk)(struct hid_usage *, struct hid_input *, unsigned long **,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long **' should also have an identifier name
#199: FILE: drivers/hid/hid-input-quirks.c:330:
+	int (*quirk)(struct hid_usage *, struct hid_input *, unsigned long **,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#199: FILE: drivers/hid/hid-input-quirks.c:330:
+	int (*quirk)(struct hid_usage *, struct hid_input *, unsigned long **,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#200: FILE: drivers/hid/hid-input-quirks.c:331:
+	int (*quirk)(struct hid_usage *, struct hid_input *, unsigned long **,
+			int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_usage *' should also have an identifier name
#269: FILE: include/linux/hid.h:645:
+int hidinput_mapping_quirks(struct hid_usage *, struct hid_input *, unsigned long **, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_input *' should also have an identifier name
#269: FILE: include/linux/hid.h:645:
+int hidinput_mapping_quirks(struct hid_usage *, struct hid_input *, unsigned long **, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long **' should also have an identifier name
#269: FILE: include/linux/hid.h:645:
+int hidinput_mapping_quirks(struct hid_usage *, struct hid_input *, unsigned long **, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#269: FILE: include/linux/hid.h:645:
+int hidinput_mapping_quirks(struct hid_usage *, struct hid_input *, unsigned long **, int *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#287: FILE: include/linux/hid.h:663:
+static inline void hid_map_usage(struct hid_input *hidinput,
+		struct hid_usage *usage, unsigned long **bit, int *max,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#322: FILE: include/linux/hid.h:698:
+static inline void hid_map_usage_clear(struct hid_input *hidinput,
+		struct hid_usage *usage, unsigned long **bit, int *max,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000289788.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 14 checks, 266 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000289788.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
