WARNING:TYPO_SPELLING: 'genralization' may be misspelled - perhaps 'generalization'?
#36: 
> > The following is the qos_param patch that implements a genralization of
                                                           ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#80: FILE: include/linux/qos_params.h:1:
+/* interface for the qos_power infrastructure of the linux kernel.

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#131: FILE: kernel/qos_params.c:1:
+/*

WARNING:TYPO_SPELLING: 'comparitor' may be misspelled - perhaps 'comparator'?
#187: FILE: kernel/qos_params.c:57:
+	s32 (*comparitor)(s32, s32);
 	      ^^^^^^^^^^

WARNING:FUNCTION_ARGUMENTS: function definition argument 's32' should also have an identifier name
#187: FILE: kernel/qos_params.c:57:
+	s32 (*comparitor)(s32, s32);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 's32' should also have an identifier name
#187: FILE: kernel/qos_params.c:57:
+	s32 (*comparitor)(s32, s32);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#189: FILE: kernel/qos_params.c:59:
+};
+static struct qos_object qos_array[QOS_NUM_CLASSES];

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#192: FILE: kernel/qos_params.c:62:
+static ssize_t qos_power_write(struct file *filp, const char __user *buf,
                                             ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#193: FILE: kernel/qos_params.c:63:
+static ssize_t qos_power_write(struct file *filp, const char __user *buf,
+		size_t count, loff_t *f_pos);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#194: FILE: kernel/qos_params.c:64:
+static int qos_power_open(struct inode *inode, struct file *filp);
                                                             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#195: FILE: kernel/qos_params.c:65:
+static int qos_power_release(struct inode *inode, struct file *filp);
                                                                ^^^^

WARNING:TYPO_SPELLING: 'comparitor' may be misspelled - perhaps 'comparator'?
#228: FILE: kernel/qos_params.c:98:
+		extreme_value = qos_array[i].comparitor(
 		                             ^^^^^^^^^^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#228: FILE: kernel/qos_params.c:98:
+		extreme_value = qos_array[i].comparitor(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#233: FILE: kernel/qos_params.c:103:
+		printk(KERN_ERR "new target for qos %d is %d\n", i,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#234: FILE: kernel/qos_params.c:104:
+		printk(KERN_ERR "new target for qos %d is %d\n", i,
+			qos_array[i].target_value);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#236: FILE: kernel/qos_params.c:106:
+		srcu_notifier_call_chain(&qos_array[i].notifiers,
+			(unsigned long) qos_array[i].target_value, NULL);

CHECK:SPACING: No space is necessary after a cast
#236: FILE: kernel/qos_params.c:106:
+			(unsigned long) qos_array[i].target_value, NULL);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that '&' (ctx:BxW)
#248: FILE: kernel/qos_params.c:118:
+	ret = misc_register(& qos->qos_power_miscdev);
 	                    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#250: FILE: kernel/qos_params.c:120:
+		printk(KERN_ERR "qos_power: misc_register returns %d.\n", ret);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#255: FILE: kernel/qos_params.c:125:
+
+

WARNING:TYPO_SPELLING: 'comparitor' may be misspelled - perhaps 'comparator'?
#258: FILE: kernel/qos_params.c:128:
+	s32 (*comparitor)(s32, s32))
 	      ^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#258: FILE: kernel/qos_params.c:128:
+static void init_qos_object(int i, const char *name, s32 default_value,
+	s32 (*comparitor)(s32, s32))

WARNING:TYPO_SPELLING: 'comparitor' may be misspelled - perhaps 'comparator'?
#270: FILE: kernel/qos_params.c:140:
+		qos->comparitor = comparitor;
 		     ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'comparitor' may be misspelled - perhaps 'comparator'?
#270: FILE: kernel/qos_params.c:140:
+		qos->comparitor = comparitor;
 		                  ^^^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#309: FILE: kernel/qos_params.c:179:
+	unsigned long flags;
+	spin_lock_irqsave(&qos_lock, flags);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#318: FILE: kernel/qos_params.c:188:
+
+

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dep)...) over kzalloc(sizeof(struct requirement_list)...)
#325: FILE: kernel/qos_params.c:195:
+	dep = kzalloc(sizeof(struct requirement_list), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:LINE_SPACING: Please don't use multiple blank lines
#349: FILE: kernel/qos_params.c:219:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#405: FILE: kernel/qos_params.c:275:
+	retval = srcu_notifier_chain_register(&qos_array[i].notifiers,
+			notifier);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#419: FILE: kernel/qos_params.c:289:
+	retval = srcu_notifier_chain_unregister(&qos_array[i].notifiers,
+			notifier);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#429: FILE: kernel/qos_params.c:299:
+static int qos_power_open(struct inode *inode, struct file *filp)
                                                             ^^^^

CHECK:SPACING: No space is necessary after a cast
#436: FILE: kernel/qos_params.c:306:
+		filp->private_data = (void *) i;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#446: FILE: kernel/qos_params.c:316:
+static int qos_power_release(struct inode *inode, struct file *filp)
                                                                ^^^^

CHECK:SPACING: No space is necessary after a cast
#450: FILE: kernel/qos_params.c:320:
+	qos = (int) filp->private_data;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#457: FILE: kernel/qos_params.c:327:
+static ssize_t qos_power_write(struct file *filp, const char __user *buf,
                                             ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#458: FILE: kernel/qos_params.c:328:
+static ssize_t qos_power_write(struct file *filp, const char __user *buf,
+		size_t count, loff_t *f_pos)

CHECK:SPACING: No space is necessary after a cast
#463: FILE: kernel/qos_params.c:333:
+	qos = (int) filp->private_data;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#474: FILE: kernel/qos_params.c:344:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000375989.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 19 warnings, 18 checks, 397 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000375989.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
