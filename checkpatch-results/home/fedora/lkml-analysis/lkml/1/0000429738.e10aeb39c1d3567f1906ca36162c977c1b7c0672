WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
This is kernel port of LZO1X de/compression algo stripped down to just ~500 LOC!

ERROR:EXECUTE_PERMISSIONS: do not set execute permissions for source files
#67: FILE: include/linux/lzo1x.h

There is no reason for source files to be executable.  The executable
bit can be removed safely.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#67: 
new file mode 100755

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#72: FILE: include/linux/lzo1x.h:1:
+/* lzo1x.h -- public interface of the LZO1X compression algorithm

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#73: FILE: include/linux/lzo1x.h:2:
+/* lzo1x.h -- public interface of the LZO1X compression algorithm
+

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#99: FILE: include/linux/lzo1x.h:28:
+   If not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#100: FILE: include/linux/lzo1x.h:29:
+   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#106: FILE: include/linux/lzo1x.h:35:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#119: FILE: include/linux/lzo1x.h:48:
+#define LZO1X_WORKMEM_SIZE	((size_t) (16384L * sizeof(unsigned char *)))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#124: FILE: include/linux/lzo1x.h:53:
+lzo1x_compress(const unsigned char *src, size_t src_len,
+		unsigned char *dst, size_t *dst_len,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#130: FILE: include/linux/lzo1x.h:59:
+lzo1x_decompress(const unsigned char *src, size_t src_len,
+		unsigned char *dst, size_t *dst_len);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#141: FILE: lib/Kconfig:67:
+config LZO1X
+	tristate "LZO1X Compression/Decompression"
+	help
+	  Compression: LZO1X-1
+	  Decompression: LZO1X
+
 #
 # Generic allocator support is selected if needed
 #

Kconfig symbols should have a help text which fully describes
it.

ERROR:EXECUTE_PERMISSIONS: do not set execute permissions for source files
#171: FILE: lib/lzo1x/lzo1x_compress.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#176: FILE: lib/lzo1x/lzo1x_compress.c:1:
+/* lzo1x_compress.c -- LZO1X-1 compression

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#177: FILE: lib/lzo1x/lzo1x_compress.c:2:
+/* lzo1x_compress.c -- LZO1X-1 compression
+

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#203: FILE: lib/lzo1x/lzo1x_compress.c:28:
+   If not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#204: FILE: lib/lzo1x/lzo1x_compress.c:29:
+   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#210: FILE: lib/lzo1x/lzo1x_compress.c:35:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#231: FILE: lib/lzo1x/lzo1x_compress.c:56:
+lzo1x_compress_worker(const unsigned char *in, size_t in_len,
+			unsigned char *out, size_t *out_len,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#252: FILE: lib/lzo1x/lzo1x_compress.c:77:
+		DINDEX1(dindex,ip);
 		              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#255: FILE: lib/lzo1x/lzo1x_compress.c:80:
+		if (LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,M4_MAX_OFFSET))
 		                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#255: FILE: lib/lzo1x/lzo1x_compress.c:80:
+		if (LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,M4_MAX_OFFSET))
 		                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#255: FILE: lib/lzo1x/lzo1x_compress.c:80:
+		if (LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,M4_MAX_OFFSET))
 		                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#255: FILE: lib/lzo1x/lzo1x_compress.c:80:
+		if (LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,M4_MAX_OFFSET))
 		                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#260: FILE: lib/lzo1x/lzo1x_compress.c:85:
+		DINDEX2(dindex,ip);
 		              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#263: FILE: lib/lzo1x/lzo1x_compress.c:88:
+		if (LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,M4_MAX_OFFSET))
 		                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#263: FILE: lib/lzo1x/lzo1x_compress.c:88:
+		if (LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,M4_MAX_OFFSET))
 		                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#263: FILE: lib/lzo1x/lzo1x_compress.c:88:
+		if (LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,M4_MAX_OFFSET))
 		                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#263: FILE: lib/lzo1x/lzo1x_compress.c:88:
+		if (LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,M4_MAX_OFFSET))
 		                                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#271: FILE: lib/lzo1x/lzo1x_compress.c:96:
+        if (*(const unsigned short *)m_pos != *(const unsigned short *)ip) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: lib/lzo1x/lzo1x_compress.c:96:
+        if (*(const unsigned short *)m_pos != *(const unsigned short *)ip) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#272: FILE: lib/lzo1x/lzo1x_compress.c:97:
+        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: lib/lzo1x/lzo1x_compress.c:97:
+        } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#275: FILE: lib/lzo1x/lzo1x_compress.c:100:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: lib/lzo1x/lzo1x_compress.c:100:
+        }$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#285: FILE: lib/lzo1x/lzo1x_compress.c:110:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#290: FILE: lib/lzo1x/lzo1x_compress.c:115:
+	if (pd(ip,ii) > 0) {
 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#291: FILE: lib/lzo1x/lzo1x_compress.c:116:
+		register size_t t = pd(ip,ii);
 		                         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#292: FILE: lib/lzo1x/lzo1x_compress.c:117:
+		register size_t t = pd(ip,ii);
+		if (t <= 3)

CHECK:BRACES: braces {} should be used on all arms of this statement
#292: FILE: lib/lzo1x/lzo1x_compress.c:117:
+		if (t <= 3)
[...]
+		else if (t <= 18)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#296: FILE: lib/lzo1x/lzo1x_compress.c:121:
+		else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#302: FILE: lib/lzo1x/lzo1x_compress.c:127:
+                ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#302: FILE: lib/lzo1x/lzo1x_compress.c:127:
+                ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: lib/lzo1x/lzo1x_compress.c:127:
+                ^I}$

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#305: FILE: lib/lzo1x/lzo1x_compress.c:130:
+		do *op++ = *ii++; while (--t > 0);
 		   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#311: FILE: lib/lzo1x/lzo1x_compress.c:136:
+            m_pos[6] != *ip++ || m_pos[7] != *ip++ || m_pos[8] != *ip++) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#311: FILE: lib/lzo1x/lzo1x_compress.c:136:
+	if (m_pos[3] != *ip++ || m_pos[4] != *ip++ || m_pos[5] != *ip++ ||
+            m_pos[6] != *ip++ || m_pos[7] != *ip++ || m_pos[8] != *ip++) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: lib/lzo1x/lzo1x_compress.c:136:
+            m_pos[6] != *ip++ || m_pos[7] != *ip++ || m_pos[8] != *ip++) {$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#320: FILE: lib/lzo1x/lzo1x_compress.c:145:
+		}
+		else if (m_off <= M3_MAX_OFFSET) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#330: FILE: lib/lzo1x/lzo1x_compress.c:155:
+        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: lib/lzo1x/lzo1x_compress.c:155:
+        } else {$

WARNING:LINE_SPACING: Missing a blank line after declarations
#333: FILE: lib/lzo1x/lzo1x_compress.c:158:
+		const unsigned char *m = m_pos + M2_MAX_LEN + 1;
+		while (ip < end && *m == *ip)

CHECK:BRACES: braces {} should be used on all arms of this statement
#339: FILE: lib/lzo1x/lzo1x_compress.c:164:
+			if (m_len <= 33)
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#341: FILE: lib/lzo1x/lzo1x_compress.c:166:
+			else {

CHECK:BRACES: Unbalanced braces around else statement
#351: FILE: lib/lzo1x/lzo1x_compress.c:176:
+			else {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#374: FILE: lib/lzo1x/lzo1x_compress.c:199:
+	return pd(in_end,ii);
 	                ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#377: FILE: lib/lzo1x/lzo1x_compress.c:202:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#384: FILE: lib/lzo1x/lzo1x_compress.c:209:
+lzo1x_compress(const unsigned char *in, size_t  in_len,
+		unsigned char *out, size_t *out_len,

CHECK:BRACES: braces {} should be used on all arms of this statement
#393: FILE: lib/lzo1x/lzo1x_compress.c:218:
+	if (unlikely(in_len <= M2_MAX_LEN + 5))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#395: FILE: lib/lzo1x/lzo1x_compress.c:220:
+	else {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#396: FILE: lib/lzo1x/lzo1x_compress.c:221:
+		t = lzo1x_compress_worker(in,in_len,op,out_len,workmem);
 		                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#396: FILE: lib/lzo1x/lzo1x_compress.c:221:
+		t = lzo1x_compress_worker(in,in_len,op,out_len,workmem);
 		                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#396: FILE: lib/lzo1x/lzo1x_compress.c:221:
+		t = lzo1x_compress_worker(in,in_len,op,out_len,workmem);
 		                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#396: FILE: lib/lzo1x/lzo1x_compress.c:221:
+		t = lzo1x_compress_worker(in,in_len,op,out_len,workmem);
 		                                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#397: FILE: lib/lzo1x/lzo1x_compress.c:222:
+        ^Iop += *out_len;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#397: FILE: lib/lzo1x/lzo1x_compress.c:222:
+        ^Iop += *out_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: lib/lzo1x/lzo1x_compress.c:222:
+        ^Iop += *out_len;$

CHECK:BRACES: braces {} should be used on all arms of this statement
#403: FILE: lib/lzo1x/lzo1x_compress.c:228:
+		if (op == out && t <= 238)
[...]
+		else if (t <= 3)
[...]
+		else if (t <= 18)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#409: FILE: lib/lzo1x/lzo1x_compress.c:234:
+		else {

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#430: FILE: lib/lzo1x/lzo1x_compress.c:255:
+EXPORT_SYMBOL(lzo1x_compress);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:EXECUTE_PERMISSIONS: do not set execute permissions for source files
#432: FILE: lib/lzo1x/lzo1x_decompress.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#437: FILE: lib/lzo1x/lzo1x_decompress.c:1:
+/* lzo1x_decompress.c -- LZO1X decompression

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#438: FILE: lib/lzo1x/lzo1x_decompress.c:2:
+/* lzo1x_decompress.c -- LZO1X decompression
+

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#464: FILE: lib/lzo1x/lzo1x_decompress.c:28:
+   If not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#465: FILE: lib/lzo1x/lzo1x_decompress.c:29:
+   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#471: FILE: lib/lzo1x/lzo1x_decompress.c:35:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#491: FILE: lib/lzo1x/lzo1x_decompress.c:55:
+lzo1x_decompress(const unsigned char *in, size_t in_len,
+			unsigned char *out, size_t *out_len)

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#508: FILE: lib/lzo1x/lzo1x_decompress.c:72:
+			*op++ = *ip++;
 			^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#526: FILE: lib/lzo1x/lzo1x_decompress.c:90:
+		COPY4(op,ip);
 		        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#532: FILE: lib/lzo1x/lzo1x_decompress.c:96:
+					COPY4(op,ip);
 					        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#537: FILE: lib/lzo1x/lzo1x_decompress.c:101:
+					*op++ = *ip++;
 					^

CHECK:BRACES: Unbalanced braces around else statement
#539: FILE: lib/lzo1x/lzo1x_decompress.c:103:
+			} else

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#541: FILE: lib/lzo1x/lzo1x_decompress.c:105:
+					*op++ = *ip++;
 					^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#555: FILE: lib/lzo1x/lzo1x_decompress.c:119:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#558: FILE: lib/lzo1x/lzo1x_decompress.c:122:
+	match:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#609: FILE: lib/lzo1x/lzo1x_decompress.c:173:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#612: FILE: lib/lzo1x/lzo1x_decompress.c:176:
+				COPY4(op,m_pos);
 				        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#615: FILE: lib/lzo1x/lzo1x_decompress.c:179:
+					COPY4(op,m_pos);
 					        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#620: FILE: lib/lzo1x/lzo1x_decompress.c:184:
+						*op++ = *m_pos++;
 						^

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#626: FILE: lib/lzo1x/lzo1x_decompress.c:190:
+					*op++ = *m_pos++;
 					^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#629: FILE: lib/lzo1x/lzo1x_decompress.c:193:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#634: FILE: lib/lzo1x/lzo1x_decompress.c:198:
+^I$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#652: FILE: lib/lzo1x/lzo1x_decompress.c:216:
+EXPORT_SYMBOL(lzo1x_decompress);

ERROR:EXECUTE_PERMISSIONS: do not set execute permissions for source files
#654: FILE: lib/lzo1x/lzo1x_int.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#659: FILE: lib/lzo1x/lzo1x_int.h:1:
+/* lzo1x_int.h -- to be used internally by LZO de/compression algorithms

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#660: FILE: lib/lzo1x/lzo1x_int.h:2:
+/* lzo1x_int.h -- to be used internally by LZO de/compression algorithms
+

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#686: FILE: lib/lzo1x/lzo1x_int.h:28:
+   If not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#687: FILE: lib/lzo1x/lzo1x_int.h:29:
+   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#693: FILE: lib/lzo1x/lzo1x_int.h:35:
+
+

CHECK:BIT_MACRO: Prefer using the BIT macro
#707: FILE: lib/lzo1x/lzo1x_int.h:49:
+#define D_SIZE		(1u << D_BITS)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#711: FILE: lib/lzo1x/lzo1x_int.h:53:
+#define DX2(p,s1,s2) \
              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#711: FILE: lib/lzo1x/lzo1x_int.h:53:
+#define DX2(p,s1,s2) \
                 ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#711: FILE: lib/lzo1x/lzo1x_int.h:53:
+#define DX2(p,s1,s2) \
+	(((((size_t)((p)[2]) << (s2)) ^ (p)[1]) << (s1)) ^ (p)[0])

ERROR:SPACING: space required after that ',' (ctx:VxV)
#713: FILE: lib/lzo1x/lzo1x_int.h:55:
+#define DX3(p,s1,s2,s3) ((DX2((p)+1,s2,s3) << (s1)) ^ (p)[0])
              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#713: FILE: lib/lzo1x/lzo1x_int.h:55:
+#define DX3(p,s1,s2,s3) ((DX2((p)+1,s2,s3) << (s1)) ^ (p)[0])
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#713: FILE: lib/lzo1x/lzo1x_int.h:55:
+#define DX3(p,s1,s2,s3) ((DX2((p)+1,s2,s3) << (s1)) ^ (p)[0])
                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#713: FILE: lib/lzo1x/lzo1x_int.h:55:
+#define DX3(p,s1,s2,s3) ((DX2((p)+1,s2,s3) << (s1)) ^ (p)[0])
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#713: FILE: lib/lzo1x/lzo1x_int.h:55:
+#define DX3(p,s1,s2,s3) ((DX2((p)+1,s2,s3) << (s1)) ^ (p)[0])
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#713: FILE: lib/lzo1x/lzo1x_int.h:55:
+#define DX3(p,s1,s2,s3) ((DX2((p)+1,s2,s3) << (s1)) ^ (p)[0])
                                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#713: FILE: lib/lzo1x/lzo1x_int.h:55:
+#define DX3(p,s1,s2,s3) ((DX2((p)+1,s2,s3) << (s1)) ^ (p)[0])

CHECK:SPACING: No space is necessary after a cast
#714: FILE: lib/lzo1x/lzo1x_int.h:56:
+#define DMUL(a,b)	((size_t) ((a) * (b)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#714: FILE: lib/lzo1x/lzo1x_int.h:56:
+#define DMUL(a,b)	((size_t) ((a) * (b)))
               ^

CHECK:SPACING: No space is necessary after a cast
#715: FILE: lib/lzo1x/lzo1x_int.h:57:
+#define DMS(v,s)	((size_t) (((v) & (D_MASK >> (s))) << (s)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#715: FILE: lib/lzo1x/lzo1x_int.h:57:
+#define DMS(v,s)	((size_t) (((v) & (D_MASK >> (s))) << (s)))
              ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#715: FILE: lib/lzo1x/lzo1x_int.h:57:
+#define DMS(v,s)	((size_t) (((v) & (D_MASK >> (s))) << (s)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#716: FILE: lib/lzo1x/lzo1x_int.h:58:
+#define DM(v)		DMS(v,0)
              		     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#719: FILE: lib/lzo1x/lzo1x_int.h:61:
+#define DINDEX1(d,p)	d = DM(DMUL(0x21,DX3(p,5,5,6)) >> 5)
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#719: FILE: lib/lzo1x/lzo1x_int.h:61:
+#define DINDEX1(d,p)	d = DM(DMUL(0x21,DX3(p,5,5,6)) >> 5)
                     	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#719: FILE: lib/lzo1x/lzo1x_int.h:61:
+#define DINDEX1(d,p)	d = DM(DMUL(0x21,DX3(p,5,5,6)) >> 5)
                     	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#719: FILE: lib/lzo1x/lzo1x_int.h:61:
+#define DINDEX1(d,p)	d = DM(DMUL(0x21,DX3(p,5,5,6)) >> 5)
                     	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#719: FILE: lib/lzo1x/lzo1x_int.h:61:
+#define DINDEX1(d,p)	d = DM(DMUL(0x21,DX3(p,5,5,6)) >> 5)
                     	                          ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#719: FILE: lib/lzo1x/lzo1x_int.h:61:
+#define DINDEX1(d,p)	d = DM(DMUL(0x21,DX3(p,5,5,6)) >> 5)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#720: FILE: lib/lzo1x/lzo1x_int.h:62:
+#define DINDEX2(d,p)	d = (d & (D_MASK & 0x7ff)) ^ (D_HIGH | 0x1f)
                  ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#720: FILE: lib/lzo1x/lzo1x_int.h:62:
+#define DINDEX2(d,p)	d = (d & (D_MASK & 0x7ff)) ^ (D_HIGH | 0x1f)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'd' - possible side-effects?
#720: FILE: lib/lzo1x/lzo1x_int.h:62:
+#define DINDEX2(d,p)	d = (d & (D_MASK & 0x7ff)) ^ (D_HIGH | 0x1f)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#721: FILE: lib/lzo1x/lzo1x_int.h:63:
+#define DENTRY(p,in)	(p)
                 ^

CHECK:SPACING: No space is necessary after a cast
#723: FILE: lib/lzo1x/lzo1x_int.h:65:
+#define PTR(a)		((unsigned long) (a))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#724: FILE: lib/lzo1x/lzo1x_int.h:66:
+#define PTR_LT(a,b)	(PTR(a) < PTR(b))
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#725: FILE: lib/lzo1x/lzo1x_int.h:67:
+#define PTR_GE(a,b)	(PTR(a) >= PTR(b))
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#726: FILE: lib/lzo1x/lzo1x_int.h:68:
+#define PTR_DIFF(a,b)	(PTR(a) - PTR(b))
                   ^

CHECK:SPACING: No space is necessary after a cast
#727: FILE: lib/lzo1x/lzo1x_int.h:69:
+#define pd(a,b)		((size_t) ((a)-(b)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#727: FILE: lib/lzo1x/lzo1x_int.h:69:
+#define pd(a,b)		((size_t) ((a)-(b)))
             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#727: FILE: lib/lzo1x/lzo1x_int.h:69:
+#define pd(a,b)		((size_t) ((a)-(b)))
                		              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#729: FILE: lib/lzo1x/lzo1x_int.h:71:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#729: FILE: lib/lzo1x/lzo1x_int.h:71:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#729: FILE: lib/lzo1x/lzo1x_int.h:71:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#729: FILE: lib/lzo1x/lzo1x_int.h:71:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
                                                 ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm_pos' - possible side-effects?
#729: FILE: lib/lzo1x/lzo1x_int.h:71:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
+	( m_pos = ip - (size_t) PTR_DIFF(ip,m_pos), \
+	PTR_LT(m_pos,in) || \
+	(m_off = (size_t) PTR_DIFF(ip,m_pos)) <= 0 || \
+	m_off > max_offset )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'm_off' - possible side-effects?
#729: FILE: lib/lzo1x/lzo1x_int.h:71:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
+	( m_pos = ip - (size_t) PTR_DIFF(ip,m_pos), \
+	PTR_LT(m_pos,in) || \
+	(m_off = (size_t) PTR_DIFF(ip,m_pos)) <= 0 || \
+	m_off > max_offset )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ip' - possible side-effects?
#729: FILE: lib/lzo1x/lzo1x_int.h:71:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
+	( m_pos = ip - (size_t) PTR_DIFF(ip,m_pos), \
+	PTR_LT(m_pos,in) || \
+	(m_off = (size_t) PTR_DIFF(ip,m_pos)) <= 0 || \
+	m_off > max_offset )

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ip' may be better as '(ip)' to avoid precedence issues
#729: FILE: lib/lzo1x/lzo1x_int.h:71:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
+	( m_pos = ip - (size_t) PTR_DIFF(ip,m_pos), \
+	PTR_LT(m_pos,in) || \
+	(m_off = (size_t) PTR_DIFF(ip,m_pos)) <= 0 || \
+	m_off > max_offset )

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'max_offset' may be better as '(max_offset)' to avoid precedence issues
#729: FILE: lib/lzo1x/lzo1x_int.h:71:
+#define LZO_CHECK_MPOS_NON_DET(m_pos,m_off,in,ip,max_offset) \
+	( m_pos = ip - (size_t) PTR_DIFF(ip,m_pos), \
+	PTR_LT(m_pos,in) || \
+	(m_off = (size_t) PTR_DIFF(ip,m_pos)) <= 0 || \
+	m_off > max_offset )

CHECK:SPACING: No space is necessary after a cast
#730: FILE: lib/lzo1x/lzo1x_int.h:72:
+	( m_pos = ip - (size_t) PTR_DIFF(ip,m_pos), \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#730: FILE: lib/lzo1x/lzo1x_int.h:72:
+	( m_pos = ip - (size_t) PTR_DIFF(ip,m_pos), \
 	                                   ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#730: FILE: lib/lzo1x/lzo1x_int.h:72:
+	( m_pos = ip - (size_t) PTR_DIFF(ip,m_pos), \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#731: FILE: lib/lzo1x/lzo1x_int.h:73:
+	PTR_LT(m_pos,in) || \
 	            ^

CHECK:SPACING: No space is necessary after a cast
#732: FILE: lib/lzo1x/lzo1x_int.h:74:
+	(m_off = (size_t) PTR_DIFF(ip,m_pos)) <= 0 || \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#732: FILE: lib/lzo1x/lzo1x_int.h:74:
+	(m_off = (size_t) PTR_DIFF(ip,m_pos)) <= 0 || \
 	                             ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#733: FILE: lib/lzo1x/lzo1x_int.h:75:
+	m_off > max_offset )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#735: FILE: lib/lzo1x/lzo1x_int.h:77:
+#define COPY4(dst,src)	*(uint32_t *)(dst) = *(uint32_t *)(src)
                  ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#735: FILE: lib/lzo1x/lzo1x_int.h:77:
+#define COPY4(dst,src)	*(uint32_t *)(dst) = *(uint32_t *)(src)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#737: FILE: lib/lzo1x/lzo1x_int.h:79:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000429738.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 79 errors, 25 warnings, 48 checks, 658 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000429738.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
