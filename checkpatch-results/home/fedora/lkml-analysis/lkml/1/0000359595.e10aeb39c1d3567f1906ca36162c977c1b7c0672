WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
Filtering zonelists requires very frequent use of zone_idx(). This is costly

WARNING:TYPO_SPELLING: 'substraction' may be misspelled - perhaps 'subtraction'?
#27: 
as it involves a lookup of another structure and a substraction operation. As
                                                   ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#88: FILE: fs/buffer.c:379:
+		zrefs = first_zones_zonelist(node_zonelist(nid, GFP_NOFS),
 						gfp_zone(GFP_NOFS));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#167: FILE: include/linux/mmzone.h:760:
+static inline struct zoneref *first_zones_zonelist(struct zonelist *zonelist,
 					enum zone_type highest_zoneidx)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: include/linux/mmzone.h:774:
+static inline struct zoneref *next_zones_zonelist(struct zoneref *z,
 					enum zone_type highest_zoneidx)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#216: FILE: include/linux/oom.h:26:
+extern int try_set_zone_oom(struct zonelist *zonelist, gfp_t gfp_flags);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#217: FILE: include/linux/oom.h:27:
+extern void clear_zonelist_oom(struct zonelist *zonelist, gfp_t gfp_flags);

WARNING:LINE_SPACING: Missing a blank line after declarations
#278: FILE: mm/mempolicy.c:494:
+			struct zoneref *zref;
+			zref = &p->v.zonelist->_zonerefs[i];

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#317: FILE: mm/mempolicy.c:1455:
+			struct zone *za, *zb;
+			za = zonelist_zone(&a->v.zonelist->_zonerefs[i]);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!b->v.zonelist->_zonerefs[i].zone"
#323: FILE: mm/mempolicy.c:1460:
+		return b->v.zonelist->_zonerefs[i].zone == NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#432: FILE: mm/page_alloc.c:1343:
+static int zlc_zone_worth_trying(struct zonelist *zonelist, struct zoneref *z,
 						nodemask_t *allowednodes)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#468: FILE: mm/page_alloc.c:1387:
+static int zlc_zone_worth_trying(struct zonelist *zonelist, struct zoneref *z,
 				nodemask_t *allowednodes)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "zonelist->_zonerefs[j].zone"
#583: FILE: mm/page_alloc.c:2159:
+	for (j = 0; zonelist->_zonerefs[j].zone != NULL; j++)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#721: FILE: mm/vmstat.c:373:
+		__inc_zone_state(zonelist_zone(&zonelist->_zonerefs[0]),
+								NUMA_FOREIGN);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000359595.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 10 checks, 582 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000359595.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
