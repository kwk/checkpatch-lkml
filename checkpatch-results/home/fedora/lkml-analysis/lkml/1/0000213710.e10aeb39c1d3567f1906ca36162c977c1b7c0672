WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
Some nested comments seem to have been missed and some blocks are redundantly

WARNING:TYPO_SPELLING: 'dimentional' may be misspelled - perhaps 'dimensional'?
#85: FILE: drivers/staging/sxg/sxg.c:285:
+	/* file to a .c file which contains a two dimentional array. */
 	                                          ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:CAMELCASE: Avoid CamelCase: <ThisSectionSize>
#94: FILE: drivers/staging/sxg/sxg.c:297:
+		ThisSectionSize = sectionSize[Section] / 12;	/* Size in instructions */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <sectionSize>
#94: FILE: drivers/staging/sxg/sxg.c:297:
+		ThisSectionSize = sectionSize[Section] / 12;	/* Size in instructions */

CHECK:CAMELCASE: Avoid CamelCase: <Section>
#94: FILE: drivers/staging/sxg/sxg.c:297:
+		ThisSectionSize = sectionSize[Section] / 12;	/* Size in instructions */

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#160: FILE: drivers/staging/sxg/sxg.c:350:
+				return (FALSE);	/* Parity error */

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#170: FILE: drivers/staging/sxg/sxg.c:358:
+				return (FALSE);	/* Miscompare */

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#177: FILE: drivers/staging/sxg/sxg.c:364:
+				return (FALSE);	/* Miscompare */

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#184: FILE: drivers/staging/sxg/sxg.c:370:
+				return (FALSE);	/* Miscompare */

WARNING:TYPO_SPELLING: 'attemps' may be misspelled - perhaps 'attempts'?
#199: FILE: drivers/staging/sxg/sxg.c:381:
+	/* Give up after 10,000 attemps (500ms). */
 	                        ^^^^^^^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#208: FILE: drivers/staging/sxg/sxg.c:393:
+		return (FALSE);	/* Timeout */

WARNING:TYPO_SPELLING: 'Reenable' may be misspelled - perhaps 'Re-enable'?
#614: FILE: drivers/staging/sxg/sxg.c:1029:
+	/* Reenable interrupts */
 	   ^^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <DumpCmdRunning>
#695: FILE: drivers/staging/sxg/sxg.c:1120:
+		ASSERT(adapter->DumpCmdRunning);	/* Maybe change when debug is added.. */

WARNING:LONG_LINE_COMMENT: line length of 120 exceeds 100 columns
#744: FILE: drivers/staging/sxg/sxg.c:1188:
+			ASSERT(!(Event->CommandIndex & 0xFF00));	/* SXG_RING_INFO Head & Tail == unsigned char */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <Event>
#744: FILE: drivers/staging/sxg/sxg.c:1188:
+			ASSERT(!(Event->CommandIndex & 0xFF00));	/* SXG_RING_INFO Head & Tail == unsigned char */

CHECK:CAMELCASE: Avoid CamelCase: <CommandIndex>
#744: FILE: drivers/staging/sxg/sxg.c:1188:
+			ASSERT(!(Event->CommandIndex & 0xFF00));	/* SXG_RING_INFO Head & Tail == unsigned char */

WARNING:LONG_LINE_COMMENT: line length of 110 exceeds 100 columns
#762: FILE: drivers/staging/sxg/sxg.c:1202:
+				/*  In Linux, we just pass up each skb to the protocol above at this point, */

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#768: FILE: drivers/staging/sxg/sxg.c:1206:
+				rx_bytes = Event->Length;	/* (rcvbuf->length & IRHDDR_FLEN_MSK); */

CHECK:CAMELCASE: Avoid CamelCase: <Length>
#768: FILE: drivers/staging/sxg/sxg.c:1206:
+				rx_bytes = Event->Length;	/* (rcvbuf->length & IRHDDR_FLEN_MSK); */

WARNING:LONG_LINE_COMMENT: line length of 110 exceeds 100 columns
#798: FILE: drivers/staging/sxg/sxg.c:1227:
+		/*              adapter->BuffersOnCard field is protected via atomic interlocked calls, but */

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#799: FILE: drivers/staging/sxg/sxg.c:1228:
+		/*              we do not protect it with respect to these tests.  The only way to do that */

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#801: FILE: drivers/staging/sxg/sxg.c:1230:
+		/*      BuffersOnCard count.  Instead, we allow the buffer replenishment to be off */

CHECK:CAMELCASE: Avoid CamelCase: <Stats>
#901: FILE: drivers/staging/sxg/sxg.c:1330:
+				adapter->Stats.XmtQLen--;	/* within XmtZeroLock */

CHECK:CAMELCASE: Avoid CamelCase: <XmtQLen>
#901: FILE: drivers/staging/sxg/sxg.c:1330:
+				adapter->Stats.XmtQLen--;	/* within XmtZeroLock */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1082: FILE: drivers/staging/sxg/sxg.c:1881:
+		/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:TYPO_SPELLING: 'cant' may be misspelled - perhaps 'can't'?
#1099: FILE: drivers/staging/sxg/sxg.c:1908:
+	/* reject & complete all the packets if they cant be sent */
 	                                             ^^^^

CHECK:CAMELCASE: Avoid CamelCase: <XmtCmd>
#1239: FILE: drivers/staging/sxg/sxg.c:2069:
+	XmtCmd->SgEntries = 1;	/*(ushort)(SxgSgl->Sgl.NumberOfElements - Index); */

CHECK:CAMELCASE: Avoid CamelCase: <SgEntries>
#1239: FILE: drivers/staging/sxg/sxg.c:2069:
+	XmtCmd->SgEntries = 1;	/*(ushort)(SxgSgl->Sgl.NumberOfElements - Index); */

CHECK:CAMELCASE: Avoid CamelCase: <SxgSgl>
#1290: FILE: drivers/staging/sxg/sxg.c:2103:
+	SXG_COMPLETE_DUMB_SEND(adapter, SxgSgl->DumbPacket);	/* SxgSgl->DumbPacket is the skb */

CHECK:CAMELCASE: Avoid CamelCase: <DumbPacket>
#1290: FILE: drivers/staging/sxg/sxg.c:2103:
+	SXG_COMPLETE_DUMB_SEND(adapter, SxgSgl->DumbPacket);	/* SxgSgl->DumbPacket is the skb */

CHECK:CAMELCASE: Avoid CamelCase: <HwRegs>
#1360: FILE: drivers/staging/sxg/sxg.c:2169:
+	WRITE_REG(HwRegs->MacConfig1, (AXGMAC_CFG1_XMT_PAUSE |	/* Allow sending of pause */

CHECK:CAMELCASE: Avoid CamelCase: <MacConfig1>
#1360: FILE: drivers/staging/sxg/sxg.c:2169:
+	WRITE_REG(HwRegs->MacConfig1, (AXGMAC_CFG1_XMT_PAUSE |	/* Allow sending of pause */

CHECK:CAMELCASE: Avoid CamelCase: <Value>
#1421: FILE: drivers/staging/sxg/sxg.c:2212:
+	if (Value & PMA_CONTROL1_RESET)	/* reset complete if bit is 0 */

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#1513: FILE: drivers/staging/sxg/sxg.c:2302:
+				status = sxg_write_mdio_reg(adapter, MIIM_DEV_PHY_PMA,	/* PHY PMA/PMD module */

CHECK:CAMELCASE: Avoid CamelCase: <Addr>
#1514: FILE: drivers/staging/sxg/sxg.c:2303:
+							    p->Addr,	/* PHY address */

CHECK:CAMELCASE: Avoid CamelCase: <Data>
#1515: FILE: drivers/staging/sxg/sxg.c:2304:
+							    p->Data);	/* PHY data */

CHECK:CAMELCASE: Avoid CamelCase: <AddrOp>
#1663: FILE: drivers/staging/sxg/sxg.c:2504:
+	u32 AddrOp;		/* Address operation (written to MIIM field reg) */

CHECK:CAMELCASE: Avoid CamelCase: <WriteOp>
#1664: FILE: drivers/staging/sxg/sxg.c:2505:
+	u32 WriteOp;		/* Write operation (written to MIIM field reg) */

CHECK:CAMELCASE: Avoid CamelCase: <Cmd>
#1665: FILE: drivers/staging/sxg/sxg.c:2506:
+	u32 Cmd;		/* Command (written to MIIM command reg) */

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1670: FILE: drivers/staging/sxg/sxg.c:2510:
+/*  DBG_ERROR("ENTER %s\n", __func__); */

CHECK:CAMELCASE: Avoid CamelCase: <DevAddr>
#1680: FILE: drivers/staging/sxg/sxg.c:2516:
+	DevAddr &= 0x001F;	/* 5-bit field */

CHECK:CAMELCASE: Avoid CamelCase: <RegAddr>
#1681: FILE: drivers/staging/sxg/sxg.c:2517:
+	RegAddr &= 0xFFFF;	/* 16-bit field */

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1719: FILE: drivers/staging/sxg/sxg.c:2547:
+		udelay(100);	/* Timeout in 100us units */

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1743: FILE: drivers/staging/sxg/sxg.c:2566:
+		udelay(100);	/* Timeout in 100us units */

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1751: FILE: drivers/staging/sxg/sxg.c:2573:
+/*  DBG_ERROR("EXIT %s\n", __func__); */

CHECK:CAMELCASE: Avoid CamelCase: <ReadOp>
#1763: FILE: drivers/staging/sxg/sxg.c:2595:
+	u32 ReadOp;		/* Read operation (written to MIIM field reg) */

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1771: FILE: drivers/staging/sxg/sxg.c:2602:
+/*  DBG_ERROR("ENTER %s\n", __func__); */

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1815: FILE: drivers/staging/sxg/sxg.c:2635:
+		udelay(100);	/* Timeout in 100us units */

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1839: FILE: drivers/staging/sxg/sxg.c:2654:
+		udelay(100);	/* Timeout in 100us units */

CHECK:CAMELCASE: Avoid CamelCase: <pValue>
#1850: FILE: drivers/staging/sxg/sxg.c:2663:
+	*pValue &= 0xFFFF;	/* data is in the lower 16 bits */

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1853: FILE: drivers/staging/sxg/sxg.c:2665:
+/*  DBG_ERROR("EXIT %s\n", __func__); */

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#1862: FILE: drivers/staging/sxg/sxg.c:2855:
+/*              DBG_ERROR("sxg: %s macopts = MAC_ALLMCAST | MAC_PROMISC\n      SLUT MODE!!!\n",__func__); */

WARNING:LONG_LINE_COMMENT: line length of 117 exceeds 100 columns
#1866: FILE: drivers/staging/sxg/sxg.c:2858:
+/*        DBG_ERROR("%s (%s) WRITE to slic_regs slic_mcastlow&high 0xFFFFFFFF\n",__func__, adapter->netdev->name); */

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#1988: FILE: drivers/staging/sxg/sxg.c:3136:
+			RcvDataBufferHdr->State = SXG_BUFFER_UPSTREAM;	/* For FREE macro assertion */

CHECK:CAMELCASE: Avoid CamelCase: <RcvDataBufferHdr>
#1988: FILE: drivers/staging/sxg/sxg.c:3136:
+			RcvDataBufferHdr->State = SXG_BUFFER_UPSTREAM;	/* For FREE macro assertion */

CHECK:CAMELCASE: Avoid CamelCase: <State>
#1988: FILE: drivers/staging/sxg/sxg.c:3136:
+			RcvDataBufferHdr->State = SXG_BUFFER_UPSTREAM;	/* For FREE macro assertion */

CHECK:CAMELCASE: Avoid CamelCase: <RssIds>
#2074: FILE: drivers/staging/sxg/sxg.c:3324:
+	RssIds = 1;		/*  XXXTODO  SXG_RSS_CPU_COUNT(adapter); */

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#2393: FILE: drivers/staging/sxg/sxghw.h:658:
+#define PXY_COPY_EN		0x00200000		/* enable copy of xmt descriptor to xmt command queue */

CHECK:CAMELCASE: Avoid CamelCase: <MacAddr>
#2419: FILE: drivers/staging/sxg/sxghw.h:681:
+	unsigned char		MacAddr[6];			/* MAC Address */

CHECK:CAMELCASE: Avoid CamelCase: <MagicWord>
#2450: FILE: drivers/staging/sxg/sxghw.h:705:
+	ushort			MagicWord;			/* EEPROM/FLASH Magic code 'A5A5' */

CHECK:CAMELCASE: Avoid CamelCase: <SpiClks>
#2451: FILE: drivers/staging/sxg/sxghw.h:706:
+	ushort			SpiClks;			/* SPI bus clock dividers */

CHECK:CAMELCASE: Avoid CamelCase: <Version>
#2466: FILE: drivers/staging/sxg/sxghw.h:711:
+	ushort			Version;			/* EEPROM format version */

CHECK:CAMELCASE: Avoid CamelCase: <AtkFru>
#2468: FILE: drivers/staging/sxg/sxghw.h:713:
+	ATK_FRU			AtkFru;				/* FRU information */

CHECK:CAMELCASE: Avoid CamelCase: <OemFruFormat>
#2469: FILE: drivers/staging/sxg/sxghw.h:714:
+	ushort			OemFruFormat;		/* OEM FRU format type */

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#2470: FILE: drivers/staging/sxg/sxghw.h:715:
+	unsigned char			OemFru[76];			/* OEM FRU information (optional) */

CHECK:CAMELCASE: Avoid CamelCase: <OemFru>
#2470: FILE: drivers/staging/sxg/sxghw.h:715:
+	unsigned char			OemFru[76];			/* OEM FRU information (optional) */

CHECK:CAMELCASE: Avoid CamelCase: <Checksum>
#2471: FILE: drivers/staging/sxg/sxghw.h:716:
+	ushort			Checksum;			/* Checksum of section 2 */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000213710.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 22 warnings, 40 checks, 2335 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000213710.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
