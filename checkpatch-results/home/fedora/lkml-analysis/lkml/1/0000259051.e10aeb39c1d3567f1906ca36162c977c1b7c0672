WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
master.kernel.org:/pub/scm/linux/kernel/git/jgarzik/netdev-2.6.git davem-next

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#254: FILE: drivers/char/synclink.c:8026:
+		printk("hdlcdev_rx(%s)\n", dev->name);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hdlcdev_rx', this function's name, in a string
#254: FILE: drivers/char/synclink.c:8026:
+		printk("hdlcdev_rx(%s)\n", dev->name);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#259: FILE: drivers/char/synclink.c:8029:
+		printk(KERN_NOTICE "%s: can't alloc skb, dropping packet\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#419: FILE: drivers/char/synclinkmp.c:1955:
+		printk(KERN_NOTICE "%s: can't alloc skb, dropping packet\n",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#473: FILE: drivers/net/3c503.c:343:
+    dev->poll_controller = eip_poll;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#491: FILE: drivers/net/3c503.c:398:
+	if ((retval = request_irq(dev->irq, eip_interrupt, 0, dev->name, dev))) {
 	    return retval;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#491: FILE: drivers/net/3c503.c:398:
+	if ((retval = request_irq(dev->irq, eip_interrupt, 0, dev->name, dev))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#491: FILE: drivers/net/3c503.c:398:
+	if ((retval = request_irq(dev->irq, eip_interrupt, 0, dev->name, dev))) {
 	    return retval;
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: drivers/net/3c503.c:404:
+    eip_open(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#507: FILE: drivers/net/3c503.c:415:
+    eip_close(dev);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#528: FILE: drivers/net/8390.h:33:
+extern void eip_poll(struct net_device *dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#540: FILE: drivers/net/8390.h:48:
+extern void NS8390p_init(struct net_device *dev, int startp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#541: FILE: drivers/net/8390.h:49:
+extern int eip_open(struct net_device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#542: FILE: drivers/net/8390.h:50:
+extern int eip_close(struct net_device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#543: FILE: drivers/net/8390.h:51:
+extern irqreturn_t eip_interrupt(int irq, void *dev_id);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#544: FILE: drivers/net/8390.h:52:
+extern struct net_device *__alloc_eip_netdev(int size);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#566: FILE: drivers/net/8390.h:138:
+#define ei_outb_p(_v,_p) outb(_v,_p)
                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#566: FILE: drivers/net/8390.h:138:
+#define ei_outb_p(_v,_p) outb(_v,_p)
                                 ^

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#571: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#576: FILE: drivers/net/8390p.c:1:
+/* 8390 core for ISA devices needing bus delays */

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#579: FILE: drivers/net/8390p.c:4:
+    "8390p.c:v1.10cvs 9/23/94 Donald Becker (becker@cesdis.gsfc.nasa.gov)\n";$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#582: FILE: drivers/net/8390p.c:7:
+#define ei_outb(_v,_p)	outb(_v,_p)
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#582: FILE: drivers/net/8390p.c:7:
+#define ei_outb(_v,_p)	outb(_v,_p)
                       	       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#584: FILE: drivers/net/8390p.c:9:
+#define ei_outb_p(_v,_p) outb_p(_v,_p)
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#584: FILE: drivers/net/8390p.c:9:
+#define ei_outb_p(_v,_p) outb_p(_v,_p)
                                   ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#620: FILE: drivers/net/8390p.c:45:
+EXPORT_SYMBOL(eip_open);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#621: FILE: drivers/net/8390p.c:46:
+EXPORT_SYMBOL(eip_close);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#622: FILE: drivers/net/8390p.c:47:
+EXPORT_SYMBOL(eip_interrupt);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#627: FILE: drivers/net/8390p.c:52:
+EXPORT_SYMBOL(__alloc_eip_netdev);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#714: FILE: drivers/net/hp.c:179:
+					&& request_irq (irq, eip_interrupt, 0, DRV_NAME, dev) == 0) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#714: FILE: drivers/net/hp.c:179:
 				if (irq == probe_irq_off(cookie)		 /* It's a good IRQ line! */
+					&& request_irq (irq, eip_interrupt, 0, DRV_NAME, dev) == 0) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#714: FILE: drivers/net/hp.c:179:
+					&& request_irq (irq, eip_interrupt, 0, DRV_NAME, dev) == 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#723: FILE: drivers/net/hp.c:194:
+		if ((retval = request_irq(dev->irq, eip_interrupt, 0, DRV_NAME, dev))) {

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1358: FILE: drivers/net/igb/e1000_82575.c:1256:
+		msleep(1);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1386: FILE: drivers/net/igb/e1000_82575.c:1284:
+	msleep(2);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1425: FILE: drivers/net/igb/e1000_82575.h:31:
+extern void igb_rx_fifo_flush_82575(struct e1000_hw *hw);

CHECK:BIT_MACRO: Prefer using the BIT macro
#1444: FILE: drivers/net/igb/e1000_82575.h:150:
+#define E1000_DCA_TXCTRL_TX_WB_RO_EN (1 << 11) /* Tx Desc writeback RO bit */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1627: FILE: drivers/net/igb/e1000_mac.c:166:
+	hw_dbg("Clearing RAR[1-%u]\n", rar_count-1);
 	                                        ^

WARNING:SPLIT_STRING: quoted string split across lines
#1866: FILE: drivers/net/igb/e1000_mac.c:899:
+				hw_dbg("Flow Control = "
+				       "RX PAUSE frames only.\r\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'Retreive' may be misspelled - perhaps 'Retrieve'?
#1924: FILE: drivers/net/igb/e1000_mac.c:993:
+ *  igb_get_speed_and_duplex_copper - Retreive current speed/duplex
                                       ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPLIT_STRING: quoted string split across lines
#2599: FILE: drivers/net/igb/e1000_phy.c:629:
+			hw_dbg("Error while waiting for "
+			       "autoneg to complete\n");

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#2791: FILE: drivers/net/igb/e1000_phy.c:1147:
+ *  igb_check_downshift - Checks whether a downshift in speed occured
                                                               ^^^^^^^

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#2999: FILE: drivers/net/igb/igb_main.c:78:
 static void __devexit igb_remove(struct pci_dev *pdev);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3066: FILE: drivers/net/igb/igb_main.c:356:
+		 * netif_napi_add */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#3101: FILE: drivers/net/igb/igb_main.c:446:
+^I^I                       E1000_EIMS_OTHER));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#3877: FILE: drivers/net/ipg.c:2133:
+	/*
+	 * Check that the new MTU value is between 68 (14 byte header, 46 byte

CHECK:CAMELCASE: Avoid CamelCase: <RxVlanTag>
#4225: FILE: drivers/net/r8169.c:828:
+	if (vlgrp && (opts2 & RxVlanTag)) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:BRACES: braces {} should be used on all arms of this statement
#4225: FILE: drivers/net/r8169.c:828:
+	if (vlgrp && (opts2 & RxVlanTag)) {
[...]
 	} else
[...]

CHECK:CAMELCASE: Avoid CamelCase: <IntrStatus>
#4308: FILE: drivers/net/r8169.c:2846:
+	status = RTL_R16(IntrStatus);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'status == 0xffff'
#4314: FILE: drivers/net/r8169.c:2849:
+	if ((status == 0xffff) || !status)

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:CAMELCASE: Avoid CamelCase: <RxFIFOOver>
#4334: FILE: drivers/net/r8169.c:2861:
+		(status & RxFIFOOver) ? (status | RxOverflow) : status);

CHECK:CAMELCASE: Avoid CamelCase: <RxOverflow>
#4334: FILE: drivers/net/r8169.c:2861:
+		(status & RxFIFOOver) ? (status | RxOverflow) : status);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tp->mac_version == RTL_GIGA_MAC_VER_11'
#4349: FILE: drivers/net/r8169.c:2867:
+	if (unlikely(status & RxFIFOOver) &&
+	    (tp->mac_version == RTL_GIGA_MAC_VER_11)) {

CHECK:CAMELCASE: Avoid CamelCase: <SYSErr>
#4360: FILE: drivers/net/r8169.c:2874:
+	if (unlikely(status & SYSErr)) {

CHECK:CAMELCASE: Avoid CamelCase: <LinkChg>
#4367: FILE: drivers/net/r8169.c:2879:
+	if (status & LinkChg)

CHECK:CAMELCASE: Avoid CamelCase: <IntrMask>
#4375: FILE: drivers/net/r8169.c:2883:
+		RTL_W16(IntrMask, tp->intr_event & ~tp->napi_event);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#4385: FILE: drivers/net/r8169.c:2889:
+			printk(KERN_INFO "%s: interrupt %04x in poll\n",

CHECK:CAMELCASE: Avoid CamelCase: <txDescrRing>
#4690: FILE: drivers/net/wan/farsync.c:1371:
+		while (!(FST_RDB(card, txDescrRing[pi][port->txpos].bits) &

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#4692: FILE: drivers/net/wan/farsync.c:1373:
+			 DMA_OWN)
+		       && !(card->dmatx_in_progress)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#5248: FILE: drivers/net/wan/pc300_drv.c:1977:
+	while ((cpc_readl(card->hw.scabase + DTX_REG(CDAL,ch)) !=
 	                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#5249: FILE: drivers/net/wan/pc300_drv.c:1978:
+		TX_BD_ADDR(ch,chan->tx_first_bd)) &&
 		             ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000259051.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 11 errors, 29 warnings, 22 checks, 4767 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000259051.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
