WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
By default, all objects and all fields will be shown.  This can be restricted

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: Documentation/filesystems/caching/fscache.txt:314:
+^I[root@andromeda ~]# head /proc/fs/fscache/objects $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#228: FILE: fs/fscache/Kconfig:58:
+config FSCACHE_OBJECT_LIST
+	bool "Maintain global object list for debugging purposes"
+	depends on FSCACHE && PROC_FS
+	help
+	  Maintain a global list of active fscache objects that can be
+	  retrieved through /proc/fs/fscache/objects for debugging purposes

Kconfig symbols should have a help text which fully describes
it.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#290: FILE: fs/fscache/internal.h:103:
+extern void fscache_objlist_add(struct fscache_object *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fscache_object *' should also have an identifier name
#290: FILE: fs/fscache/internal.h:103:
+extern void fscache_objlist_add(struct fscache_object *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:SPACING: space required before the open parenthesis '('
#292: FILE: fs/fscache/internal.h:105:
+#define fscache_objlist_add(object) do {} while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#300: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#305: FILE: fs/fscache/object-list.c:1:
+/* Global fscache object list maintainer and viewer

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#367: FILE: fs/fscache/object-list.c:63:
+			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#386: FILE: fs/fscache/object-list.c:82:
+	BUG_ON(RB_EMPTY_ROOT(&fscache_object_list));

CHECK:SPACING: No space is necessary after a cast
#402: FILE: fs/fscache/object-list.c:98:
+	if (*_pos >= (unsigned long) ERR_PTR(-ENOENT))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#407: FILE: fs/fscache/object-list.c:103:
+	 * returning a NULL pointer) */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: No space is necessary after a cast
#409: FILE: fs/fscache/object-list.c:105:
+		return (struct fscache_object *) ++(*_pos);

CHECK:SPACING: No space is necessary after a cast
#431: FILE: fs/fscache/object-list.c:127:
+		*_pos = (unsigned long) ERR_PTR(-ENOENT);

CHECK:SPACING: No space is necessary after a cast
#433: FILE: fs/fscache/object-list.c:129:
+		*_pos = (unsigned long) minobj;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#473: FILE: fs/fscache/object-list.c:169:
+	uint16_t keylen, auxlen;

CHECK:SPACING: No space is necessary after a cast
#478: FILE: fs/fscache/object-list.c:174:
+	if ((unsigned long) v == 1) {

WARNING:SPLIT_STRING: quoted string split across lines
#480: FILE: fs/fscache/object-list.c:176:
+		seq_puts(m, "OBJECT   PARENT   STAT CHLDN OPS OOP IPR EX READS"
+			 " EM EV F S"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#481: FILE: fs/fscache/object-list.c:177:
+			 " EM EV F S"
+			 " | NETFS_COOKIE_DEF TY FL NETFS_DATA");

CHECK:SPACING: No space is necessary after a cast
#497: FILE: fs/fscache/object-list.c:193:
+	if ((unsigned long) v == 2) {

WARNING:SPLIT_STRING: quoted string split across lines
#499: FILE: fs/fscache/object-list.c:195:
+		seq_puts(m, "======== ======== ==== ===== === === === == ====="
+			 " == == = ="

WARNING:SPLIT_STRING: quoted string split across lines
#500: FILE: fs/fscache/object-list.c:196:
+			 " == == = ="
+			 " | ================ == == ================");

ERROR:SPACING: space required before the open parenthesis '('
#520: FILE: fs/fscache/object-list.c:216:
+	} while(0)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#558: FILE: fs/fscache/object-list.c:254:
+	keylen = auxlen = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#584: FILE: fs/fscache/object-list.c:280:
+				keylen = obj->cookie->def->get_key(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#590: FILE: fs/fscache/object-list.c:286:
+				auxlen = obj->cookie->def->get_aux(

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#599: FILE: fs/fscache/object-list.c:295:
+			seq_printf(m, " ");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#604: FILE: fs/fscache/object-list.c:300:
+					seq_printf(m, ", ");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#612: FILE: fs/fscache/object-list.c:308:
+		seq_printf(m, "<no_cookie>\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#614: FILE: fs/fscache/object-list.c:310:
+		seq_printf(m, "\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#649: FILE: fs/fscache/object-list.c:345:
+		case 'K': config |= FSCACHE_OBJLIST_CONFIG_KEY;		break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#650: FILE: fs/fscache/object-list.c:346:
+		case 'A': config |= FSCACHE_OBJLIST_CONFIG_AUX;		break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#651: FILE: fs/fscache/object-list.c:347:
+		case 'C': config |= FSCACHE_OBJLIST_CONFIG_COOKIE;	break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#652: FILE: fs/fscache/object-list.c:348:
+		case 'c': config |= FSCACHE_OBJLIST_CONFIG_NOCOOKIE;	break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#653: FILE: fs/fscache/object-list.c:349:
+		case 'B': config |= FSCACHE_OBJLIST_CONFIG_BUSY;	break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#654: FILE: fs/fscache/object-list.c:350:
+		case 'b': config |= FSCACHE_OBJLIST_CONFIG_IDLE;	break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#655: FILE: fs/fscache/object-list.c:351:
+		case 'W': config |= FSCACHE_OBJLIST_CONFIG_PENDWR;	break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#656: FILE: fs/fscache/object-list.c:352:
+		case 'w': config |= FSCACHE_OBJLIST_CONFIG_NOPENDWR;	break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#657: FILE: fs/fscache/object-list.c:353:
+		case 'R': config |= FSCACHE_OBJLIST_CONFIG_READS;	break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#658: FILE: fs/fscache/object-list.c:354:
+		case 'r': config |= FSCACHE_OBJLIST_CONFIG_NOREADS;	break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#659: FILE: fs/fscache/object-list.c:355:
+		case 'S': config |= FSCACHE_OBJLIST_CONFIG_WORK;	break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#660: FILE: fs/fscache/object-list.c:356:
+		case 's': config |= FSCACHE_OBJLIST_CONFIG_NOWORK;	break;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#667: FILE: fs/fscache/object-list.c:363:
+	if (!(config & (FSCACHE_OBJLIST_CONFIG_COOKIE | FSCACHE_OBJLIST_CONFIG_NOCOOKIE)))
+	    config   |= FSCACHE_OBJLIST_CONFIG_COOKIE | FSCACHE_OBJLIST_CONFIG_NOCOOKIE;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#669: FILE: fs/fscache/object-list.c:365:
+	if (!(config & (FSCACHE_OBJLIST_CONFIG_BUSY | FSCACHE_OBJLIST_CONFIG_IDLE)))
+	    config   |= FSCACHE_OBJLIST_CONFIG_BUSY | FSCACHE_OBJLIST_CONFIG_IDLE;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#671: FILE: fs/fscache/object-list.c:367:
+	if (!(config & (FSCACHE_OBJLIST_CONFIG_PENDWR | FSCACHE_OBJLIST_CONFIG_NOPENDWR)))
+	    config   |= FSCACHE_OBJLIST_CONFIG_PENDWR | FSCACHE_OBJLIST_CONFIG_NOPENDWR;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#673: FILE: fs/fscache/object-list.c:369:
+	if (!(config & (FSCACHE_OBJLIST_CONFIG_READS | FSCACHE_OBJLIST_CONFIG_NOREADS)))
+	    config   |= FSCACHE_OBJLIST_CONFIG_READS | FSCACHE_OBJLIST_CONFIG_NOREADS;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#675: FILE: fs/fscache/object-list.c:371:
+	if (!(config & (FSCACHE_OBJLIST_CONFIG_EVENTS | FSCACHE_OBJLIST_CONFIG_NOEVENTS)))
+	    config   |= FSCACHE_OBJLIST_CONFIG_EVENTS | FSCACHE_OBJLIST_CONFIG_NOEVENTS;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#677: FILE: fs/fscache/object-list.c:373:
+	if (!(config & (FSCACHE_OBJLIST_CONFIG_WORK | FSCACHE_OBJLIST_CONFIG_NOWORK)))
+	    config   |= FSCACHE_OBJLIST_CONFIG_WORK | FSCACHE_OBJLIST_CONFIG_NOWORK;

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*data)...) over kmalloc(sizeof(struct fscache_objlist_data)...)
#705: FILE: fs/fscache/object-list.c:401:
+	data = kmalloc(sizeof(struct fscache_objlist_data), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#867: FILE: include/linux/fscache-cache.h:445:
+extern void fscache_object_destroy(struct fscache_object *object);

ERROR:SPACING: space required before the open parenthesis '('
#869: FILE: include/linux/fscache-cache.h:447:
+#define fscache_object_destroy(object) do {} while(0)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000045802.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 16 errors, 22 warnings, 13 checks, 706 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000045802.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
