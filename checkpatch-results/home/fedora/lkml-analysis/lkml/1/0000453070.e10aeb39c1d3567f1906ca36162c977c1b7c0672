WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#50: 
> >> On Wed, 21 Mar 2007 15:22:25 -0500 Matt Mackall <mpm@selenic.com> wrote:

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#106: FILE: lib/kobject_uevent.c:88:
+	pr_debug("%s: %s\n", __FUNCTION__, kobject_name(kobj));

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#111: FILE: lib/kobject_uevent.c:92:
+		pr_debug("%s: kobject attempted to send uevent without action_string!\n", __FUNCTION__);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#111: FILE: lib/kobject_uevent.c:92:
+		pr_debug("%s: kobject attempted to send uevent without action_string!\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#120: FILE: lib/kobject_uevent.c:104:
+		pr_debug("%s: kobject attempted to send uevent without kset!\n", __FUNCTION__);

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#129: FILE: lib/kobject_uevent.c:114:
+			pr_debug("%s: kobject filter function caused the event to drop!\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#129: FILE: lib/kobject_uevent.c:114:
+			pr_debug("%s: kobject filter function caused the event to drop!\n", __FUNCTION__);

WARNING:TYPO_SPELLING: 'subsytem' may be misspelled - perhaps 'subsystem'?
#138: FILE: lib/kobject_uevent.c:124:
+		pr_debug("%s: unset subsytem caused the event to drop!\n", __FUNCTION__);
 		                    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#138: FILE: lib/kobject_uevent.c:124:
+		pr_debug("%s: unset subsytem caused the event to drop!\n", __FUNCTION__);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#146: FILE: lib/kobject_uevent.c:131:
+	if (!envp) {
+		pr_debug("%s: couldn't alloc envp\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#146: FILE: lib/kobject_uevent.c:131:
+		pr_debug("%s: couldn't alloc envp\n", __FUNCTION__);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#153: FILE: lib/kobject_uevent.c:137:
 	if (!buffer) {
+		pr_debug("%s: couldn't alloc buffer\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#153: FILE: lib/kobject_uevent.c:137:
+		pr_debug("%s: couldn't alloc buffer\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#161: FILE: lib/kobject_uevent.c:145:
+		pr_debug("%s: couldn't get kobject path\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#169: FILE: lib/kobject_uevent.c:227:
+	pr_debug("%s: returning %d\n", __FUNCTION__, retval);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000453070.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 15 warnings, 0 checks, 66 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000453070.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
