WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#52: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#60: FILE: drivers/misc/ssi/Kconfig:4:
+config OMAP_SSI
+	tristate "OMAP SSI hardware driver"
+	depends on ARCH_OMAP
+	default n
+	---help---
+	  If you say Y here, you will enable the OMAP SSI hardware driver.
+
+	  If unsure, say N.

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#87: FILE: drivers/misc/ssi/ssi_driver.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#106: FILE: drivers/misc/ssi/ssi_driver.c:20:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#107: FILE: drivers/misc/ssi/ssi_driver.c:21:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#119: FILE: drivers/misc/ssi/ssi_driver.c:33:
+static void __init ssi_undo_reg_dev(struct platform_device *pd,
+								int p, int ch)

CHECK:SPACING: No space is necessary after a cast
#122: FILE: drivers/misc/ssi/ssi_driver.c:36:
+		(struct ssi_platform_data *) pd->dev.platform_data;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#136: FILE: drivers/misc/ssi/ssi_driver.c:50:
+static int __init reg_ssi_dev_ch(struct platform_device *pd,
+						unsigned int p, unsigned int ch)

CHECK:SPACING: No space is necessary after a cast
#140: FILE: drivers/misc/ssi/ssi_driver.c:54:
+		(struct ssi_platform_data *) pd->dev.platform_data;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#155: FILE: drivers/misc/ssi/ssi_driver.c:69:
+		snprintf(dev->device.bus_id, sizeof(dev->device.bus_id),
+			"omap_ssi-p%u.c%u", p, ch);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#158: FILE: drivers/misc/ssi/ssi_driver.c:72:
+		snprintf(dev->device.bus_id, sizeof(dev->device.bus_id),
+			"omap_ssi%d-p%u.c%u", dev->n_ctrl, p, ch);

CHECK:SPACING: No space is necessary after a cast
#166: FILE: drivers/misc/ssi/ssi_driver.c:80:
+		(struct ssi_platform_data *) pd->dev.platform_data;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#174: FILE: drivers/misc/ssi/ssi_driver.c:88:
+		n_ch = max(p_data->ports[port].tx_ch,
+						p_data->ports[port].rx_ch);

WARNING:SPLIT_STRING: quoted string split across lines
#183: FILE: drivers/misc/ssi/ssi_driver.c:97:
+		dev_err(&pd->dev, "Error registering ssi device channel "
+					"p%d-c%d : %d\n", port, ch, err);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'port == 0'
#184: FILE: drivers/misc/ssi/ssi_driver.c:98:
+		if ((port == 0) && (ch == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ch == 0'
#184: FILE: drivers/misc/ssi/ssi_driver.c:98:
+		if ((port == 0) && (ch == 0))

WARNING:TYPO_SPELLING: 'Reseting' may be misspelled - perhaps 'Resetting'?
#212: FILE: drivers/misc/ssi/ssi_driver.c:126:
+	/* Reseting GDD */
 	   ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#218: FILE: drivers/misc/ssi/ssi_driver.c:132:
+static void __init set_ssi_ports_default(

CHECK:SPACING: No space is necessary after a cast
#223: FILE: drivers/misc/ssi/ssi_driver.c:137:
+		(struct ssi_platform_data *) pd->dev.platform_data;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#242: FILE: drivers/misc/ssi/ssi_driver.c:156:
+static int __init ssi_port_channels_init(

CHECK:SPACING: No space is necessary after a cast
#246: FILE: drivers/misc/ssi/ssi_driver.c:160:
+		(struct ssi_platform_data *) pd->dev.platform_data;

CHECK:SPACING: No space is necessary after a cast
#274: FILE: drivers/misc/ssi/ssi_driver.c:188:
+		(struct ssi_platform_data *) pd->dev.platform_data;

WARNING:MINMAX: min() should probably be min_t(u8, p_data->num_ports, SSI_MAX_PORTS)
#280: FILE: drivers/misc/ssi/ssi_driver.c:194:
+	n_ports = min(p_data->num_ports, (u8)SSI_MAX_PORTS);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#287: FILE: drivers/misc/ssi/ssi_driver.c:201:
+		ssi_p->max_ch = max(p_data->ports[port].tx_ch,
+						p_data->ports[port].rx_ch);

WARNING:MINMAX: min() should probably be min_t(u8, ssi_p->max_ch, SSI_PORT_MAX_CH)
#288: FILE: drivers/misc/ssi/ssi_driver.c:202:
+		ssi_p->max_ch = min(ssi_p->max_ch, (u8)SSI_PORT_MAX_CH);

CHECK:SPACING: No space is necessary after a cast
#301: FILE: drivers/misc/ssi/ssi_driver.c:215:
+		(struct ssi_platform_data *) pd->dev.platform_data;

CHECK:SPACING: No space is necessary after a cast
#328: FILE: drivers/misc/ssi/ssi_driver.c:242:
+		(struct ssi_platform_data *) pd->dev.platform_data;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#335: FILE: drivers/misc/ssi/ssi_driver.c:249:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#348: FILE: drivers/misc/ssi/ssi_driver.c:262:
+		mpu_irq = platform_get_resource(pd, IORESOURCE_IRQ, i*2);
 		                                                     ^

WARNING:SPLIT_STRING: quoted string split across lines
#351: FILE: drivers/misc/ssi/ssi_driver.c:265:
+			dev_err(&pd->dev, "SSI misses info for MPU IRQ"
+							" on port %d", i + 1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#358: FILE: drivers/misc/ssi/ssi_driver.c:272:
+			tasklet_init(&ssi_p->ssi_tasklet,
+					do_ssi_tasklet,	(unsigned long)ssi_p);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#360: FILE: drivers/misc/ssi/ssi_driver.c:274:
+			err = request_irq(mpu_irq->start, ssi_mpu_handler,
+				IRQF_DISABLED, mpu_irq->name, ssi_p);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#363: FILE: drivers/misc/ssi/ssi_driver.c:277:
+				dev_err(&pd->dev, "FAILED request IRQ (%d)",
+							 mpu_irq->start);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#371: FILE: drivers/misc/ssi/ssi_driver.c:285:
+		for (j = 0; (j > (i-1)); j++) {
 		                   ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#372: FILE: drivers/misc/ssi/ssi_driver.c:286:
+			printk(KERN_DEBUG LOG_NAME "Free resources on port %d",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#373: FILE: drivers/misc/ssi/ssi_driver.c:287:
+			printk(KERN_DEBUG LOG_NAME "Free resources on port %d",
+									j+1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#373: FILE: drivers/misc/ssi/ssi_driver.c:287:
+									j+1);
 									 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#398: FILE: drivers/misc/ssi/ssi_driver.c:312:
+	err = request_irq(gdd_irq->start, ssi_gdd_mpu_handler,
+		IRQF_DISABLED, gdd_irq->name, ssi_ctrl);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#401: FILE: drivers/misc/ssi/ssi_driver.c:315:
+		dev_err(&pd->dev, "FAILED to request IRQ NUMBER (%d)",
+							gdd_irq->start);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#405: FILE: drivers/misc/ssi/ssi_driver.c:319:
+	tasklet_init(&ssi_ctrl->ssi_gdd_tasklet, do_ssi_gdd_tasklet,
+			(unsigned long)ssi_ctrl);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#436: FILE: drivers/misc/ssi/ssi_driver.c:350:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pd == NULL'
#437: FILE: drivers/misc/ssi/ssi_driver.c:351:
+	if ((pd == NULL) || (pd->dev.platform_data == NULL)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pd->dev.platform_data == NULL'
#437: FILE: drivers/misc/ssi/ssi_driver.c:351:
+	if ((pd == NULL) || (pd->dev.platform_data == NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pd"
#437: FILE: drivers/misc/ssi/ssi_driver.c:351:
+	if ((pd == NULL) || (pd->dev.platform_data == NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pd->dev.platform_data"
#437: FILE: drivers/misc/ssi/ssi_driver.c:351:
+	if ((pd == NULL) || (pd->dev.platform_data == NULL)) {

WARNING:SPLIT_STRING: quoted string split across lines
#439: FILE: drivers/misc/ssi/ssi_driver.c:353:
+		pr_err(LOG_NAME "No device/platform_data found on "
+								"ssi device\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ssi_ctrl"
#444: FILE: drivers/misc/ssi/ssi_driver.c:358:
+	if (ssi_ctrl == NULL) {

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#445: FILE: drivers/misc/ssi/ssi_driver.c:359:
+	if (ssi_ctrl == NULL) {
+		dev_err(&pd->dev, "Could not allocate memory for"

WARNING:SPLIT_STRING: quoted string split across lines
#446: FILE: drivers/misc/ssi/ssi_driver.c:360:
+		dev_err(&pd->dev, "Could not allocate memory for"
+					" struct ssi_dev\n");

CHECK:SPACING: No space is necessary after a cast
#450: FILE: drivers/misc/ssi/ssi_driver.c:364:
+	p_data = (struct ssi_platform_data *) pd->dev.platform_data;

WARNING:SPLIT_STRING: quoted string split across lines
#456: FILE: drivers/misc/ssi/ssi_driver.c:370:
+		dev_err(&pd->dev, "SSI device does not have "
+					"SSI IO memory region information\n");

WARNING:SPLIT_STRING: quoted string split across lines
#464: FILE: drivers/misc/ssi/ssi_driver.c:378:
+		dev_err(&pd->dev, "Could not initialize ssi controller:"
+						" %d\n", err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#469: FILE: drivers/misc/ssi/ssi_driver.c:383:
+	ioarea = request_mem_region(mem->start, (mem->end - mem->start) + 1,
+		 pd->dev.bus_id);

WARNING:SPLIT_STRING: quoted string split across lines
#472: FILE: drivers/misc/ssi/ssi_driver.c:386:
+		dev_err(&pd->dev, "Unable to request SSI IO memory "
+								"region\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#495: FILE: drivers/misc/ssi/ssi_driver.c:409:
+	ssi_outl((SSI_AUTOIDLE | SSI_SIDLEMODE_SMART | SSI_MIDLEMODE_SMART),
+			ssi_ctrl->base,  SSI_SYS_SYSCONFIG_REG);

CHECK:SPACING: No space is necessary after a cast
#544: FILE: drivers/misc/ssi/ssi_driver.c:458:
+		(struct ssi_platform_data *) pd->dev.platform_data;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#606: FILE: drivers/misc/ssi/ssi_driver.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#625: FILE: drivers/misc/ssi/ssi_driver.h:20:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#626: FILE: drivers/misc/ssi/ssi_driver.h:21:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA$

WARNING:SPACING: Unnecessary space before function pointer arguments
#684: FILE: drivers/misc/ssi/ssi_driver.h:79:
+	void (*write_done) (struct ssi_device *dev);

WARNING:SPACING: Unnecessary space before function pointer arguments
#685: FILE: drivers/misc/ssi/ssi_driver.h:80:
+	void (*read_done) (struct ssi_device *dev);

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#707: FILE: drivers/misc/ssi/ssi_driver.h:102:
+	spinlock_t ssi_ch_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#736: FILE: drivers/misc/ssi/ssi_driver.h:131:
+	spinlock_t lock;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#748: FILE: drivers/misc/ssi/ssi_driver.h:143:
+};
+extern struct bus_type ssi_bus_type;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#760: FILE: drivers/misc/ssi/ssi_driver.h:155:
+int ssi_driver_write_dma(struct ssi_channel *ssi_channel, u32 *data,
+			unsigned int count);

WARNING:LINE_SPACING: Missing a blank line after declarations
#786: FILE: drivers/misc/ssi/ssi_driver.h:181:
+	u32 tmp = ssi_inl(base, offset);
+	ssi_outl((tmp | data), base, offset);

WARNING:LINE_SPACING: Missing a blank line after declarations
#792: FILE: drivers/misc/ssi/ssi_driver.h:187:
+	u32 tmp = ssi_inl(base, offset);
+	ssi_outl((tmp & data), base, offset);

WARNING:LINE_SPACING: Missing a blank line after declarations
#808: FILE: drivers/misc/ssi/ssi_driver.h:203:
+	u16 tmp = ssi_inw(base, offset);
+	ssi_outw((tmp | data), base, offset);

WARNING:LINE_SPACING: Missing a blank line after declarations
#814: FILE: drivers/misc/ssi/ssi_driver.h:209:
+	u16 tmp = ssi_inw(base, offset);
+	ssi_outw((tmp & data), base, offset);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#823: FILE: drivers/misc/ssi/ssi_driver_bus.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#842: FILE: drivers/misc/ssi/ssi_driver_bus.c:20:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#843: FILE: drivers/misc/ssi/ssi_driver_bus.c:21:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA$

WARNING:TYPO_SPELLING: 'defintions' may be misspelled - perhaps 'definitions'?
#849: FILE: drivers/misc/ssi/ssi_driver_bus.c:27:
+/* LDM. defintions for the ssi bus, ssi device, and ssi_device driver */
         ^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#853: FILE: drivers/misc/ssi/ssi_driver_bus.c:31:
+static ssize_t modalias_show(struct device *dev, struct device_attribute *a,
+								char *buf)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#877: FILE: drivers/misc/ssi/ssi_driver_bus.c:55:
+	BUG_ON(p_event == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p_event"
#877: FILE: drivers/misc/ssi/ssi_driver_bus.c:55:
+	BUG_ON(p_event == NULL);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ssi_drv->port_event'
#879: FILE: drivers/misc/ssi/ssi_driver_bus.c:57:
+	if ((ssi_drv->port_event) &&
+		(test_bit(event->event, &ssi_drv->event_mask)) &&
+		((p->ssi_controller->id == -1) ||
+		(test_bit(p->ssi_controller->id, &ssi_drv->ctrl_mask))) &&
+		(ssi_drv->ch_mask[p->port_number - 1] != 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ssi_drv->ch_mask[p->port_number - 1] != 0'
#879: FILE: drivers/misc/ssi/ssi_driver_bus.c:57:
+	if ((ssi_drv->port_event) &&
+		(test_bit(event->event, &ssi_drv->event_mask)) &&
+		((p->ssi_controller->id == -1) ||
+		(test_bit(p->ssi_controller->id, &ssi_drv->ctrl_mask))) &&
+		(ssi_drv->ch_mask[p->port_number - 1] != 0)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#880: FILE: drivers/misc/ssi/ssi_driver_bus.c:58:
+	if ((ssi_drv->port_event) &&
+		(test_bit(event->event, &ssi_drv->event_mask)) &&

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#884: FILE: drivers/misc/ssi/ssi_driver_bus.c:62:
+		(ssi_drv->ch_mask[p->port_number - 1] != 0)) {
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#901: FILE: drivers/misc/ssi/ssi_driver_bus.c:79:
+	BUG_ON(p == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p"
#901: FILE: drivers/misc/ssi/ssi_driver_bus.c:79:
+	BUG_ON(p == NULL);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#932: FILE: drivers/misc/ssi/ssi_driver_bus.c:110:
+{
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#935: FILE: drivers/misc/ssi/ssi_driver_bus.c:113:
+
+}

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#947: FILE: drivers/misc/ssi/ssi_driver_bus.c:125:
+^Ireturn ^Idrv->probe(to_ssi_device(dev));$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#986: FILE: drivers/misc/ssi/ssi_driver_bus.c:164:
+	BUG_ON(driver == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!driver"
#986: FILE: drivers/misc/ssi/ssi_driver_bus.c:164:
+	BUG_ON(driver == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1010: FILE: drivers/misc/ssi/ssi_driver_bus.c:188:
+	BUG_ON(driver == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!driver"
#1010: FILE: drivers/misc/ssi/ssi_driver_bus.c:188:
+	BUG_ON(driver == NULL);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1021: FILE: drivers/misc/ssi/ssi_driver_dma.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1040: FILE: drivers/misc/ssi/ssi_driver_dma.c:20:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1041: FILE: drivers/misc/ssi/ssi_driver_dma.c:21:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1048: FILE: drivers/misc/ssi/ssi_driver_dma.c:28:
+#define SSI_SYNC_READ  ^I1$

WARNING:TABSTOP: Statements should start on a tabstop
#1058: FILE: drivers/misc/ssi/ssi_driver_dma.c:38:
+	 }

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sync >= 0x01'
#1068: FILE: drivers/misc/ssi/ssi_driver_dma.c:48:
+	if (((sync >= 0x01) && (sync <= 0x08)) ||
+					((sync >= 0x10) && (sync <= 0x17)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sync <= 0x08'
#1068: FILE: drivers/misc/ssi/ssi_driver_dma.c:48:
+	if (((sync >= 0x01) && (sync <= 0x08)) ||
+					((sync >= 0x10) && (sync <= 0x17)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sync >= 0x10'
#1068: FILE: drivers/misc/ssi/ssi_driver_dma.c:48:
+	if (((sync >= 0x01) && (sync <= 0x08)) ||
+					((sync >= 0x10) && (sync <= 0x17)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sync <= 0x17'
#1068: FILE: drivers/misc/ssi/ssi_driver_dma.c:48:
+	if (((sync >= 0x01) && (sync <= 0x08)) ||
+					((sync >= 0x10) && (sync <= 0x17)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1069: FILE: drivers/misc/ssi/ssi_driver_dma.c:49:
+	if (((sync >= 0x01) && (sync <= 0x08)) ||
+					((sync >= 0x10) && (sync <= 0x17)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1072: FILE: drivers/misc/ssi/ssi_driver_dma.c:52:
+	else if (((sync >= 0x09) && (sync <= 0x0F)) ||
+					((sync >= 0x18) && (sync <= 0x1E)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sync == 0x00'
#1080: FILE: drivers/misc/ssi/ssi_driver_dma.c:60:
+	if ((sync == 0x00) || (sync == 0x1F))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sync == 0x1F'
#1080: FILE: drivers/misc/ssi/ssi_driver_dma.c:60:
+	if ((sync == 0x00) || (sync == 0x1F))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'port == 0'
#1092: FILE: drivers/misc/ssi/ssi_driver_dma.c:72:
+	if ((port == 0) || (port > SSI_MAX_PORTS) ||
+			(channel >= SSI_PORT_MAX_CH) || (type > SSI_SYNC_READ))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'port > SSI_MAX_PORTS'
#1092: FILE: drivers/misc/ssi/ssi_driver_dma.c:72:
+	if ((port == 0) || (port > SSI_MAX_PORTS) ||
+			(channel >= SSI_PORT_MAX_CH) || (type > SSI_SYNC_READ))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'channel >= SSI_PORT_MAX_CH'
#1092: FILE: drivers/misc/ssi/ssi_driver_dma.c:72:
+	if ((port == 0) || (port > SSI_MAX_PORTS) ||
+			(channel >= SSI_PORT_MAX_CH) || (type > SSI_SYNC_READ))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type > SSI_SYNC_READ'
#1092: FILE: drivers/misc/ssi/ssi_driver_dma.c:72:
+	if ((port == 0) || (port > SSI_MAX_PORTS) ||
+			(channel >= SSI_PORT_MAX_CH) || (type > SSI_SYNC_READ))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1093: FILE: drivers/misc/ssi/ssi_driver_dma.c:73:
+	if ((port == 0) || (port > SSI_MAX_PORTS) ||
+			(channel >= SSI_PORT_MAX_CH) || (type > SSI_SYNC_READ))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1100: FILE: drivers/misc/ssi/ssi_driver_dma.c:80:
+static void rst_ch_read(struct ssi_dev *ssi_ctrl,
+				unsigned int n_p, unsigned int n_ch)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1111: FILE: drivers/misc/ssi/ssi_driver_dma.c:91:
+static void rst_ch_write(struct ssi_dev *ssi_ctrl,
+				unsigned int n_p, unsigned int n_ch)

WARNING:TYPO_SPELLING: 'transfered' may be misspelled - perhaps 'transferred'?
#1144: FILE: drivers/misc/ssi/ssi_driver_dma.c:124:
+ * @size - Number of 32bit words to be transfered.
                                        ^^^^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'size < 1'
#1161: FILE: drivers/misc/ssi/ssi_driver_dma.c:141:
+	if ((size < 1) || (data == NULL))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data == NULL'
#1161: FILE: drivers/misc/ssi/ssi_driver_dma.c:141:
+	if ((size < 1) || (data == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#1161: FILE: drivers/misc/ssi/ssi_driver_dma.c:141:
+	if ((size < 1) || (data == NULL))

WARNING:SPLIT_STRING: quoted string split across lines
#1169: FILE: drivers/misc/ssi/ssi_driver_dma.c:149:
+		dev_err(&ssi_ctrl->pdev->dev, "No free GDD logical "
+								"channels.\n");

WARNING:TYPO_SPELLING: 'Gettting' may be misspelled - perhaps 'Getting'?
#1173: FILE: drivers/misc/ssi/ssi_driver_dma.c:153:
+	/* NOTE: Gettting a free gdd logical channel and
 	         ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1174: FILE: drivers/misc/ssi/ssi_driver_dma.c:154:
+	 * reserve it must be done atomicaly. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'transfered' may be misspelled - perhaps 'transferred'?
#1205: FILE: drivers/misc/ssi/ssi_driver_dma.c:185:
+ * @size - Number of 32bit words to be transfered to the buffer.
                                        ^^^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1226: FILE: drivers/misc/ssi/ssi_driver_dma.c:206:
+		dev_err(&ssi_ctrl->pdev->dev, "No free GDD logical "
+								"channels.\n");

WARNING:TYPO_SPELLING: 'Gettting' may be misspelled - perhaps 'Getting'?
#1231: FILE: drivers/misc/ssi/ssi_driver_dma.c:211:
+	 * NOTE: Gettting a free gdd logical channel and
 	         ^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1275: FILE: drivers/misc/ssi/ssi_driver_dma.c:255:
+		dev_dbg(&ssi_ch->dev->device, LOG_NAME "Write cancel on not "
+		"enabled logical channel %d CCR REG 0x%08X\n", lch, ccr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1282: FILE: drivers/misc/ssi/ssi_driver_dma.c:262:
+	ssi_outl_and(~SSI_GDD_LCH(lch), ssi_ctrl->base,
+						SSI_SYS_GDD_MPU_IRQ_ENABLE_REG);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1284: FILE: drivers/misc/ssi/ssi_driver_dma.c:264:
+	ssi_outl(SSI_GDD_LCH(lch), ssi_ctrl->base,
+						SSI_SYS_GDD_MPU_IRQ_STATUS_REG);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1287: FILE: drivers/misc/ssi/ssi_driver_dma.c:267:
+	ssi_outl_and(~NOTFULL(channel), ssi_ctrl->base,
+						SSI_SST_BUFSTATE_REG(port));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1289: FILE: drivers/misc/ssi/ssi_driver_dma.c:269:
+
+

WARNING:SPLIT_STRING: quoted string split across lines
#1312: FILE: drivers/misc/ssi/ssi_driver_dma.c:292:
+		dev_dbg(&ssi_ch->dev->device, LOG_NAME "Read cancel on not "
+		"enable logical channel %d CCR REG 0x%08X\n", lch, reg);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1319: FILE: drivers/misc/ssi/ssi_driver_dma.c:299:
+	ssi_outl_and(~SSI_GDD_LCH(lch), ssi_ctrl->base,
+						SSI_SYS_GDD_MPU_IRQ_ENABLE_REG);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1321: FILE: drivers/misc/ssi/ssi_driver_dma.c:301:
+	ssi_outl(SSI_GDD_LCH(lch), ssi_ctrl->base,
+						SSI_SYS_GDD_MPU_IRQ_STATUS_REG);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1324: FILE: drivers/misc/ssi/ssi_driver_dma.c:304:
+	ssi_outl_and(~NOTEMPTY(channel), ssi_ctrl->base,
+						SSI_SSR_BUFSTATE_REG(port));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1334: FILE: drivers/misc/ssi/ssi_driver_dma.c:314:
+static void dma_read_cb(struct ssi_dev *ctrl, unsigned int port,
+							unsigned int channel)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1342: FILE: drivers/misc/ssi/ssi_driver_dma.c:322:
+static void dma_write_cb(struct ssi_dev *ctrl, unsigned int port,
+							unsigned int channel)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1366: FILE: drivers/misc/ssi/ssi_driver_dma.c:346:
+	ssi_outl_and(~SSI_GDD_LCH(gdd_lch), base,
+						SSI_SYS_GDD_MPU_IRQ_ENABLE_REG);

WARNING:SPLIT_STRING: quoted string split across lines
#1384: FILE: drivers/misc/ssi/ssi_driver_dma.c:364:
+		dev_err(&ssi_ctrl->pdev->dev, "Error  on GDD transfer "
+				"on gdd channel %d port %d channel %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1388: FILE: drivers/misc/ssi/ssi_driver_dma.c:368:
+		ssi_port_event_handler(&ssi_ctrl->ssi_port[port - 1],
+							SSI_EVENT_ERROR, NULL);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1433: FILE: drivers/misc/ssi/ssi_driver_if.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1452: FILE: drivers/misc/ssi/ssi_driver_if.c:20:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1453: FILE: drivers/misc/ssi/ssi_driver_if.c:21:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA$

WARNING:TYPO_SPELLING: 'openned' may be misspelled - perhaps 'opened'?
#1461: FILE: drivers/misc/ssi/ssi_driver_if.c:29:
+ * @dev - Reference to the ssi device channel to be openned.
                                                     ^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1479: FILE: drivers/misc/ssi/ssi_driver_if.c:47:
+		dev_err(&dev->device, "Trying to open with no callbacks "
+								"registered\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1487: FILE: drivers/misc/ssi/ssi_driver_if.c:55:
+		dev_err(&dev->device, "Port %d Channel %d already OPENED\n",
+							dev->n_p, dev->n_ch);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1494: FILE: drivers/misc/ssi/ssi_driver_if.c:62:
+	ssi_outl_or(SSI_ERROROCCURED | SSI_BREAKDETECTED, ssi_ctrl->base,
+		SSI_SYS_MPU_ENABLE_REG(port->port_number, port->n_irq));

WARNING:TYPO_SPELLING: 'sucess' may be misspelled - perhaps 'success'?
#1508: FILE: drivers/misc/ssi/ssi_driver_if.c:76:
+ * Return 0 on sucess, a negative value on failure.
                ^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'count <= 0'
#1518: FILE: drivers/misc/ssi/ssi_driver_if.c:86:
+	if (unlikely(!dev || !dev->ch || !data || (count <= 0))) {

WARNING:TYPO_SPELLING: 'paramenters' may be misspelled - perhaps 'parameters'?
#1519: FILE: drivers/misc/ssi/ssi_driver_if.c:87:
+		dev_err(&dev->device, "Wrong paramenters "
 		                             ^^^^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1520: FILE: drivers/misc/ssi/ssi_driver_if.c:88:
+		dev_err(&dev->device, "Wrong paramenters "
+			"ssi_device %p data %p count %d", dev, data, count);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1546: FILE: drivers/misc/ssi/ssi_driver_if.c:114:
+
+}

WARNING:TYPO_SPELLING: 'sucess' may be misspelled - perhaps 'success'?
#1555: FILE: drivers/misc/ssi/ssi_driver_if.c:123:
+ * Return 0 on sucess, a negative value on failure.
                ^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'count <= 0'
#1565: FILE: drivers/misc/ssi/ssi_driver_if.c:133:
+	if (unlikely(!dev || !dev->ch || !data || (count <= 0))) {

WARNING:TYPO_SPELLING: 'paramenters' may be misspelled - perhaps 'parameters'?
#1566: FILE: drivers/misc/ssi/ssi_driver_if.c:134:
+		dev_err(&dev->device, "Wrong paramenters "
 		                             ^^^^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1567: FILE: drivers/misc/ssi/ssi_driver_if.c:135:
+		dev_err(&dev->device, "Wrong paramenters "
+			"ssi_device %p data %p count %d", dev, data, count);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1602: FILE: drivers/misc/ssi/ssi_driver_if.c:170:
+
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1603: FILE: drivers/misc/ssi/ssi_driver_if.c:171:
+}
+/**

WARNING:TYPO_SPELLING: 'sucess' may be misspelled - perhaps 'success'?
#1607: FILE: drivers/misc/ssi/ssi_driver_if.c:175:
+ * write_done() callback will not be called after sucess of this function.
                                                   ^^^^^^

WARNING:TYPO_SPELLING: 'sucess' may be misspelled - perhaps 'success'?
#1638: FILE: drivers/misc/ssi/ssi_driver_if.c:206:
+ * read_done() callback will not be called after sucess of this function.
                                                  ^^^^^^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1656: FILE: drivers/misc/ssi/ssi_driver_if.c:224:
+
+}

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1662: FILE: drivers/misc/ssi/ssi_driver_if.c:230:
+ * ^I^I^I^I^I^I(or port associated to it)$

WARNING:TYPO_SPELLING: 'sucess' may be misspelled - perhaps 'success'?
#1666: FILE: drivers/misc/ssi/ssi_driver_if.c:234:
+ * Return 0 on sucess, a negative value on failure.
                ^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!dev'
#1678: FILE: drivers/misc/ssi/ssi_driver_if.c:246:
+	if (unlikely((!dev) ||
+		(!dev->ch) ||
+		(!dev->ch->ssi_port) ||
+		(!dev->ch->ssi_port->ssi_controller)) ||
+		(!(dev->ch->flags & SSI_CH_OPEN))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!dev->ch'
#1678: FILE: drivers/misc/ssi/ssi_driver_if.c:246:
+	if (unlikely((!dev) ||
+		(!dev->ch) ||
+		(!dev->ch->ssi_port) ||
+		(!dev->ch->ssi_port->ssi_controller)) ||
+		(!(dev->ch->flags & SSI_CH_OPEN))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!dev->ch->ssi_port'
#1678: FILE: drivers/misc/ssi/ssi_driver_if.c:246:
+	if (unlikely((!dev) ||
+		(!dev->ch) ||
+		(!dev->ch->ssi_port) ||
+		(!dev->ch->ssi_port->ssi_controller)) ||
+		(!(dev->ch->flags & SSI_CH_OPEN))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!dev->ch->ssi_port->ssi_controller'
#1678: FILE: drivers/misc/ssi/ssi_driver_if.c:246:
+	if (unlikely((!dev) ||
+		(!dev->ch) ||
+		(!dev->ch->ssi_port) ||
+		(!dev->ch->ssi_port->ssi_controller)) ||
+		(!(dev->ch->flags & SSI_CH_OPEN))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1679: FILE: drivers/misc/ssi/ssi_driver_if.c:247:
+	if (unlikely((!dev) ||
+		(!dev->ch) ||

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1687: FILE: drivers/misc/ssi/ssi_driver_if.c:255:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1702: FILE: drivers/misc/ssi/ssi_driver_if.c:270:
+			ssi_outl(SSI_WAKE(channel), base,
+					SSI_SYS_SET_WAKE_REG(port));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1709: FILE: drivers/misc/ssi/ssi_driver_if.c:277:
+			ssi_outl(SSI_WAKE(channel), base,
+						SSI_SYS_CLEAR_WAKE_REG(port));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!arg"
#1717: FILE: drivers/misc/ssi/ssi_driver_if.c:285:
+		if (arg == NULL)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1752: FILE: drivers/misc/ssi/ssi_driver_if.c:320:
+
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1774: FILE: drivers/misc/ssi/ssi_driver_int.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1793: FILE: drivers/misc/ssi/ssi_driver_int.c:20:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1794: FILE: drivers/misc/ssi/ssi_driver_int.c:21:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1821: FILE: drivers/misc/ssi/ssi_driver_int.c:48:
+	ssi_outl_or(SSI_SST_DATAACCEPT(channel), p->ssi_controller->base,
+					SSI_SYS_MPU_ENABLE_REG(port, p->n_irq));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1823: FILE: drivers/misc/ssi/ssi_driver_int.c:50:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1836: FILE: drivers/misc/ssi/ssi_driver_int.c:63:
+	ssi_outl_or(SSI_SSR_DATAAVAILABLE(channel), p->ssi_controller->base,
+					SSI_SYS_MPU_ENABLE_REG(port, p->n_irq));

WARNING:SPLIT_STRING: quoted string split across lines
#1856: FILE: drivers/misc/ssi/ssi_driver_int.c:83:
+		dev_dbg(&ch->dev->device, LOG_NAME "Write cancel on not "
+		"enabled channel %d ENABLE REG 0x%08X", channel, enable);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1861: FILE: drivers/misc/ssi/ssi_driver_int.c:88:
+	ssi_outl_and(~SSI_SST_DATAACCEPT(channel), base,
+				SSI_SYS_MPU_ENABLE_REG(port, p->n_irq));

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1868: FILE: drivers/misc/ssi/ssi_driver_int.c:95:
+
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1880: FILE: drivers/misc/ssi/ssi_driver_int.c:107:
+	ssi_outl_and(~SSI_SSR_DATAAVAILABLE(channel), base,
+					SSI_SYS_MPU_ENABLE_REG(port, p->n_irq));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ch->write_data.addr"
#1901: FILE: drivers/misc/ssi/ssi_driver_int.c:128:
+	if (ch->write_data.addr == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1903: FILE: drivers/misc/ssi/ssi_driver_int.c:130:
+		ssi_outl_and(~SSI_SST_DATAACCEPT(n_ch), base,
+					SSI_SYS_MPU_ENABLE_REG(n_p, irq));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ch->write_data.addr
#1909: FILE: drivers/misc/ssi/ssi_driver_int.c:136:
+		ssi_outl(*(ch->write_data.addr), base,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1910: FILE: drivers/misc/ssi/ssi_driver_int.c:137:
+		ssi_outl(*(ch->write_data.addr), base,
+					SSI_SST_BUFFER_CH_REG(n_p, n_ch));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ch->read_data.addr
#1930: FILE: drivers/misc/ssi/ssi_driver_int.c:157:
+	*(ch->read_data.addr) = ssi_inl(base, SSI_SSR_BUFFER_CH_REG(n_p, n_ch));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1933: FILE: drivers/misc/ssi/ssi_driver_int.c:160:
+	ssi_outl_and(~SSI_SSR_DATAAVAILABLE(n_ch), base,
+					SSI_SYS_MPU_ENABLE_REG(n_p, irq));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1977: FILE: drivers/misc/ssi/ssi_driver_int.c:204:
+		dev_info(&ssi_ctrl->pdev->dev,
+					"Hardware BREAK on port %d\n", port);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1985: FILE: drivers/misc/ssi/ssi_driver_int.c:212:
+		dev_err(&ssi_ctrl->pdev->dev, "SSI ERROR Port %d: 0x%02x\n",
+							port, ssr_err_reg);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1991: FILE: drivers/misc/ssi/ssi_driver_int.c:218:
+	ssi_outl((channels_served | SSI_ERROROCCURED | SSI_BREAKDETECTED), base,
+					SSI_SYS_MPU_STATUS_REG(port, irq));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000221410.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 12 errors, 58 warnings, 116 checks, 1907 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000221410.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
