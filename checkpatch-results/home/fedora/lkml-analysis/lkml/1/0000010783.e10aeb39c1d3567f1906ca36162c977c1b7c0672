ERROR:CODE_INDENT: code indent should use tabs where possible
#80: FILE: drivers/char/keyboard.c:505:
+^I        tty_kref_put(tty);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: drivers/char/keyboard.c:507:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: drivers/char/keyboard.c:507:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: drivers/char/keyboard.c:518:
+        tty_kref_put(tty);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: drivers/char/keyboard.c:518:
+        tty_kref_put(tty);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: drivers/char/keyboard.c:1316:
+        tty_kref_put(tty);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: drivers/char/keyboard.c:1316:
+        tty_kref_put(tty);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#241: FILE: drivers/char/vt.c:2704:
+	printk("con_write: %s %d\n", current->comm, retval);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'con_write', this function's name, in a string
#241: FILE: drivers/char/vt.c:2704:
+	printk("con_write: %s %d\n", current->comm, retval);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:BRACES: braces {} should be used on all arms of this statement
#296: FILE: drivers/char/vt.c:2809:
+	if (ret == 0) {
[...]
+	} else 
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#297: FILE: drivers/char/vt.c:2810:
+		printk("install: %s: vc_allocate %d = %d\n", current->comm, idx, ret);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#303: FILE: drivers/char/vt.c:2816:
+^I} else $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#303: FILE: drivers/char/vt.c:2816:
+	} else 

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#335: FILE: drivers/char/vt.c:2837:
+	printk("con_activate %d: %s\n", tty->index, current->comm);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'con_activate', this function's name, in a string
#335: FILE: drivers/char/vt.c:2837:
+	printk("con_activate %d: %s\n", tty->index, current->comm);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#347: FILE: drivers/char/vt.c:2849:
+}^I$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#353: FILE: drivers/char/vt.c:2855:
+static int con_open(struct tty_struct *tty, struct file *filp)
                                                          ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#356: FILE: drivers/char/vt.c:2858:
+^Iint ret; $

WARNING:LINE_SPACING: Missing a blank line after declarations
#357: FILE: drivers/char/vt.c:2859:
+	int ret; 
+	printk("Console open %s %d\n", current->comm, tty->index);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#357: FILE: drivers/char/vt.c:2859:
+	printk("Console open %s %d\n", current->comm, tty->index);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#358: FILE: drivers/char/vt.c:2860:
+	ret = tty_port_open(&vc->port, tty, filp);
 	                                    ^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#359: FILE: drivers/char/vt.c:2861:
+	printk("Ret %d\n", ret);

WARNING:LINE_SPACING: Missing a blank line after declarations
#367: FILE: drivers/char/vt.c:2868:
+	struct vc_data *vc = tty->driver_data;
+	printk("Console close %s %d\n", current->comm, tty->index);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#367: FILE: drivers/char/vt.c:2868:
+	printk("Console close %s %d\n", current->comm, tty->index);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#368: FILE: drivers/char/vt.c:2869:
+	tty_port_close(&vc->port, tty, filp);
 	                               ^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#380: FILE: drivers/char/vt.c:2875:
+	printk("Console hangup %s %d\n", current->comm, tty->index);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000010783.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 17 warnings, 2 checks, 366 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000010783.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
