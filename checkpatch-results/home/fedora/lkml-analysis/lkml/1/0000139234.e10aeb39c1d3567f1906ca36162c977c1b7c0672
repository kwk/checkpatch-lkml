WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
> arch/blackfin/kernel/traps.c:   symname = kallsyms_lookup(address, &symsize, &offset, &modname, namebuf);

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id 'e79bca2dc1b0799ad3b2f310a79caabcb44ff338', maybe rebased or not pulled?
#62: 
commit e79bca2dc1b0799ad3b2f310a79caabcb44ff338

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#99: FILE: include/linux/kallsyms.h:44:
+extern int sprint_symbol(struct ksymbol *sym, unsigned long address);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: No space is necessary after a cast
#128: FILE: arch/x86/kernel/ftrace.c:488:
+	kallsyms_lookup((unsigned long) syscall, NULL, NULL, NULL, &sym);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#285: FILE: kernel/kallsyms.c:356:
+	printk(fmt, sym.str);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#364: FILE: kernel/lockdep.c:457:
+const char * __get_key_name(struct lockdep_subclass_key *key, struct ksymbol *sym)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#412: FILE: kernel/lockdep_internals.h:78:
+extern const char * __get_key_name(struct lockdep_subclass_key *key,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#412: FILE: kernel/lockdep_internals.h:78:
+extern const char * __get_key_name(struct lockdep_subclass_key *key,

WARNING:LINE_SPACING: Missing a blank line after declarations
#791: FILE: lib/vsprintf.c:581:
+	struct ksymbol sym;
+	sprint_symbol(&sym, value);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#809: FILE: mm/slub.c:3687:
+			struct ksymbol sym;
+			sprint_symbol(&sym, (unsigned long)l->addr);

CHECK:BRACES: Unbalanced braces around else statement
#812: FILE: mm/slub.c:3690:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#824: FILE: mm/slub.c:3930:
+		int n = sprint_symbol(&sym, (unsigned long)s->ctor);
+		strcpy(buf, sym.str);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000139234.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 6 warnings, 4 checks, 678 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000139234.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
