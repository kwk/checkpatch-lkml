WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#125: FILE: arch/x86/mm/pat.c:345:
+	list_for_each_entry(entry, &memtype_list, nd) {
 	                                          ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#127: FILE: arch/x86/mm/pat.c:347:
+			where = entry->nd.prev;
 			               ^^

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#132: FILE: arch/x86/mm/pat.c:352:
+				dprintk("Overlap at 0x%Lx-0x%Lx\n",

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#134: FILE: arch/x86/mm/pat.c:354:
+				where = entry->nd.prev;
 				               ^^

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#140: FILE: arch/x86/mm/pat.c:360:
+				dprintk("Overlap at 0x%Lx-0x%Lx\n",

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#148: FILE: arch/x86/mm/pat.c:368:
+							&memtype_list, nd) {
 							               ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#148: FILE: arch/x86/mm/pat.c:368:
+				list_for_each_entry_continue(entry,
+							&memtype_list, nd) {

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#150: FILE: arch/x86/mm/pat.c:370:
+						where = entry->nd.prev;
 						               ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#160: FILE: arch/x86/mm/pat.c:380:
+			list_add(&new->nd, where);
 			               ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#162: FILE: arch/x86/mm/pat.c:382:
+			list_add_tail(&new->nd, &memtype_list);
 			                    ^^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*print_entry)...) over kzalloc(sizeof(struct memtype)...)
#275: FILE: arch/x86/mm/pat.c:954:
+	print_entry  = kzalloc(sizeof(struct memtype), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#287: FILE: arch/x86/mm/pat.c:964:
+		return print_entry;
+	} else {

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#295: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#300: FILE: arch/x86/mm/pat_internal.h:1:
+#ifndef __PAT_INTERNAL_H_

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#306: FILE: arch/x86/mm/pat_internal.h:7:
+	do { if (pat_debug_enable) printk(KERN_INFO fmt, ##arg); } while (0)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#312: FILE: arch/x86/mm/pat_internal.h:13:
+	struct list_head	nd;
 	                	^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000013224.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 14 warnings, 2 checks, 270 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000013224.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
