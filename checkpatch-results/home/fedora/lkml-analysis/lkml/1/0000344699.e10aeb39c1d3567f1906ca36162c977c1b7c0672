CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#605: FILE: drivers/s390/block/dasd_3990_erp.c:1390:
+static struct dasd_ccw_req *dasd_3990_erp_inspect_alias(

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cqr->block->base != cqr->startdev'
#610: FILE: drivers/s390/block/dasd_3990_erp.c:1395:
+	if (cqr->block &&
+	    (cqr->block->base != cqr->startdev)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: braces {} should be used on all arms of this statement
#610: FILE: drivers/s390/block/dasd_3990_erp.c:1395:
+	if (cqr->block &&
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#615: FILE: drivers/s390/block/dasd_3990_erp.c:1400:
+				    "ERP on alias device for request %p,"
+				    " recover on base device %s", cqr,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:BRACES: Unbalanced braces around else statement
#622: FILE: drivers/s390/block/dasd_3990_erp.c:1407:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#626: FILE: drivers/s390/block/dasd_3990_erp.c:1411:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#674: FILE: drivers/s390/block/dasd_3990_erp.c:1601:
+	if (oldccw->cmd_code == DASD_ECKD_CCW_PFX) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#678: FILE: drivers/s390/block/dasd_3990_erp.c:1605:
+	} else

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#827: FILE: drivers/s390/block/dasd_3990_erp.c:2143:
+	/* if this problem occured on an alias retry on base */
 	                   ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: No space is necessary after a cast
#847: FILE: drivers/s390/block/dasd_3990_erp.c:2188:
+	erp = dasd_alloc_erp_request((char *) &cqr->magic, 2, 0, device);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1018: FILE: drivers/s390/block/dasd_alias.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1035: FILE: drivers/s390/block/dasd_alias.c:18:
+
+

WARNING:TYPO_SPELLING: 'befor' may be misspelled - perhaps 'before'?
#1043: FILE: drivers/s390/block/dasd_alias.c:26:
+ *   befor the device is deleted.
      ^^^^^

WARNING:TYPO_SPELLING: 'get's' may be misspelled - perhaps 'gets'?
#1051: FILE: drivers/s390/block/dasd_alias.c:34:
+ *   This is the function that get's called for each I/O, so when improving
                                ^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1056: FILE: drivers/s390/block/dasd_alias.c:39:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1069: FILE: drivers/s390/block/dasd_alias.c:52:
+	struct alias_server *pos;
+	list_for_each_entry(pos, &aliastree.serverlist, server) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1072: FILE: drivers/s390/block/dasd_alias.c:55:
+			     sizeof(uid->vendor))
+		    && !strncmp(pos->uid.serial, uid->serial,

WARNING:LINE_SPACING: Missing a blank line after declarations
#1083: FILE: drivers/s390/block/dasd_alias.c:66:
+	struct alias_lcu *pos;
+	list_for_each_entry(pos, &server->lculist, lcu) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around lcu->uac
#1143: FILE: drivers/s390/block/dasd_alias.c:126:
+	lcu->uac = kzalloc(sizeof(*(lcu->uac)), GFP_KERNEL | GFP_DMA);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*lcu->rsu_cqr->cpaddr)...) over kzalloc(sizeof(struct ccw1)...)
#1149: FILE: drivers/s390/block/dasd_alias.c:132:
+	lcu->rsu_cqr->cpaddr = kzalloc(sizeof(struct ccw1),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: No space is necessary after a cast
#1207: FILE: drivers/s390/block/dasd_alias.c:190:
+	private = (struct dasd_eckd_private *) device->private;

CHECK:SPACING: No space is necessary after a cast
#1269: FILE: drivers/s390/block/dasd_alias.c:252:
+	private = (struct dasd_eckd_private *) device->private;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1323: FILE: drivers/s390/block/dasd_alias.c:306:
+{
+

CHECK:SPACING: No space is necessary after a cast
#1328: FILE: drivers/s390/block/dasd_alias.c:311:
+	private = (struct dasd_eckd_private *) device->private;

CHECK:SPACING: No space is necessary after a cast
#1365: FILE: drivers/s390/block/dasd_alias.c:348:
+	private = (struct dasd_eckd_private *) device->private;

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#1390: FILE: drivers/s390/block/dasd_alias.c:373:
+				   1 /* PSF */	+ 1 /* RSSD */ ,
 				              	               ^

CHECK:SPACING: No space is necessary after a cast
#1402: FILE: drivers/s390/block/dasd_alias.c:385:
+	prssdp = (struct dasd_psf_prssd_data *) cqr->data;

CHECK:SPACING: No space is necessary after a cast
#1412: FILE: drivers/s390/block/dasd_alias.c:395:
+	ccw->cda = (__u32)(addr_t) prssdp;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around lcu->uac
#1415: FILE: drivers/s390/block/dasd_alias.c:398:
+	memset(lcu->uac, 0, sizeof(*(lcu->uac)));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around lcu->uac
#1419: FILE: drivers/s390/block/dasd_alias.c:402:
+	ccw->count = sizeof(*(lcu->uac));

CHECK:SPACING: No space is necessary after a cast
#1420: FILE: drivers/s390/block/dasd_alias.c:403:
+	ccw->cda = (__u32)(addr_t) lcu->uac;

CHECK:SPACING: No space is necessary after a cast
#1455: FILE: drivers/s390/block/dasd_alias.c:438:
+			private = (struct dasd_eckd_private *) device->private;

CHECK:SPACING: No space is necessary after a cast
#1461: FILE: drivers/s390/block/dasd_alias.c:444:
+			private = (struct dasd_eckd_private *) device->private;

WARNING:SPLIT_STRING: quoted string split across lines
#1522: FILE: drivers/s390/block/dasd_alias.c:505:
+		DEV_MESSAGE(KERN_WARNING, device, "could not update"
+			    " alias data in lcu (rc = %d), retry later", rc);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1523: FILE: drivers/s390/block/dasd_alias.c:506:
+		schedule_delayed_work(&lcu->ruac_data.dwork, 30*HZ);
 		                                               ^

CHECK:SPACING: No space is necessary after a cast
#1579: FILE: drivers/s390/block/dasd_alias.c:562:
+	private = (struct dasd_eckd_private *) device->private;

CHECK:SPACING: No space is necessary after a cast
#1602: FILE: drivers/s390/block/dasd_alias.c:585:
+	private = (struct dasd_eckd_private *) device->private;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1612: FILE: drivers/s390/block/dasd_alias.c:595:
+{
+

CHECK:SPACING: No space is necessary after a cast
#1619: FILE: drivers/s390/block/dasd_alias.c:602:
+	private = (struct dasd_eckd_private *) base_device->private;

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1634: FILE: drivers/s390/block/dasd_alias.c:617:
+			return NULL;
+		} else {

CHECK:SPACING: No space is necessary after a cast
#1647: FILE: drivers/s390/block/dasd_alias.c:630:
+	alias_priv = (struct dasd_eckd_private *) alias_device->private;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'alias_priv->count < private->count'
#1648: FILE: drivers/s390/block/dasd_alias.c:631:
+	if ((alias_priv->count < private->count) && !alias_device->stopped)

CHECK:SPACING: No space is necessary after a cast
#1666: FILE: drivers/s390/block/dasd_alias.c:649:
+	strncpy((char *) &cqr->magic, "ECKD", 4);

CHECK:SPACING: No space is necessary after a cast
#1667: FILE: drivers/s390/block/dasd_alias.c:650:
+	ASCEBC((char *) &cqr->magic, 4);

WARNING:SPACING: space prohibited before semicolon
#1669: FILE: drivers/s390/block/dasd_alias.c:652:
+	cqr->cpaddr->flags = 0 ;

CHECK:SPACING: No space is necessary after a cast
#1671: FILE: drivers/s390/block/dasd_alias.c:654:
+	cqr->cpaddr->cda = (__u32)(addr_t) cqr->data;

CHECK:SPACING: No space is necessary after a cast
#1695: FILE: drivers/s390/block/dasd_alias.c:678:
+		private = (struct dasd_eckd_private *) device->private;

CHECK:SPACING: No space is necessary after a cast
#1702: FILE: drivers/s390/block/dasd_alias.c:685:
+		private = (struct dasd_eckd_private *) device->private;

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#1726: FILE: drivers/s390/block/dasd_alias.c:709:
+	 * Problem here ist that dasd_flush_device_queue may wait
 	                ^^^

CHECK:SPACING: No space is necessary after a cast
#1739: FILE: drivers/s390/block/dasd_alias.c:722:
+		private = (struct dasd_eckd_private *) device->private;

CHECK:SPACING: No space is necessary after a cast
#1881: FILE: drivers/s390/block/dasd_alias.c:864:
+	private = (struct dasd_eckd_private *) device->private;

WARNING:SPLIT_STRING: quoted string split across lines
#1891: FILE: drivers/s390/block/dasd_alias.c:874:
+			    "device not ready to handle summary"
+			    " unit check (no lcu structure)");

WARNING:SPLIT_STRING: quoted string split across lines
#1904: FILE: drivers/s390/block/dasd_alias.c:887:
+			    "device is in offline processing,"
+			    " don't do summary unit check handling");

WARNING:SPLIT_STRING: quoted string split across lines
#1912: FILE: drivers/s390/block/dasd_alias.c:895:
+			    "previous instance of summary unit check worker"
+			    " still pending");

WARNING:SPACING: space prohibited before semicolon
#1914: FILE: drivers/s390/block/dasd_alias.c:897:
+		return ;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_ccw_req *' should also have an identifier name
#1973: FILE: drivers/s390/block/dasd_int.h:178:
+	void (*callback)(struct dasd_ccw_req *, void *data);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1987: FILE: drivers/s390/block/dasd_int.h:185:
+#define DASD_CQR_FILLED ^I0x00^I/* request is ready to be processed */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1990: FILE: drivers/s390/block/dasd_int.h:188:
+#define DASD_CQR_IN_ERP ^I0x03^I/* request is in recovery */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1991: FILE: drivers/s390/block/dasd_int.h:189:
+#define DASD_CQR_FAILED ^I0x04^I/* request is finally failed */$

WARNING:TYPO_SPELLING: 'successfull' may be misspelled - perhaps 'successful'?
#1992: FILE: drivers/s390/block/dasd_int.h:190:
+#define DASD_CQR_TERMINATED	0x05	/* request was successfull */
                            	    	               ^^^^^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1994: FILE: drivers/s390/block/dasd_int.h:192:
+#define DASD_CQR_QUEUED ^I0x80^I/* request is queued to be processed */$

WARNING:TYPO_SPELLING: 'successfull' may be misspelled - perhaps 'successful'?
#1999: FILE: drivers/s390/block/dasd_int.h:197:
+#define DASD_CQR_SUCCESS	0x85	/* request was successfull */
                         	    	               ^^^^^^^^^^^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_device *' should also have an identifier name
#2012: FILE: drivers/s390/block/dasd_int.h:228:
+	int (*check_device)(struct dasd_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_device *' should also have an identifier name
#2013: FILE: drivers/s390/block/dasd_int.h:229:
+	void (*uncheck_device)(struct dasd_device *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2024: FILE: drivers/s390/block/dasd_int.h:238:
+	int (*do_analysis) (struct dasd_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_block *' should also have an identifier name
#2024: FILE: drivers/s390/block/dasd_int.h:238:
+	int (*do_analysis) (struct dasd_block *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2030: FILE: drivers/s390/block/dasd_int.h:244:
+	int (*ready_to_online) (struct dasd_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_device *' should also have an identifier name
#2030: FILE: drivers/s390/block/dasd_int.h:244:
+	int (*ready_to_online) (struct dasd_device *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2031: FILE: drivers/s390/block/dasd_int.h:245:
+	int (*online_to_ready) (struct dasd_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_device *' should also have an identifier name
#2031: FILE: drivers/s390/block/dasd_int.h:245:
+	int (*online_to_ready) (struct dasd_device *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2046: FILE: drivers/s390/block/dasd_int.h:260:
+	void (*handle_terminated_request) (struct dasd_ccw_req *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_ccw_req *' should also have an identifier name
#2046: FILE: drivers/s390/block/dasd_int.h:260:
+	void (*handle_terminated_request) (struct dasd_ccw_req *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2064: FILE: drivers/s390/block/dasd_int.h:279:
+	void (*handle_unsolicited_interrupt) (struct dasd_device *, struct irb *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_device *' should also have an identifier name
#2064: FILE: drivers/s390/block/dasd_int.h:279:
+	void (*handle_unsolicited_interrupt) (struct dasd_device *, struct irb *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct irb *' should also have an identifier name
#2064: FILE: drivers/s390/block/dasd_int.h:279:
+	void (*handle_unsolicited_interrupt) (struct dasd_device *, struct irb *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2068: FILE: drivers/s390/block/dasd_int.h:282:
+	int (*fill_geometry) (struct dasd_block *, struct hd_geometry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_block *' should also have an identifier name
#2068: FILE: drivers/s390/block/dasd_int.h:282:
+	int (*fill_geometry) (struct dasd_block *, struct hd_geometry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hd_geometry *' should also have an identifier name
#2068: FILE: drivers/s390/block/dasd_int.h:282:
+	int (*fill_geometry) (struct dasd_block *, struct hd_geometry *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#2071: FILE: drivers/s390/block/dasd_int.h:284:
+	int (*ioctl) (struct dasd_block *, unsigned int, void __user *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_block *' should also have an identifier name
#2071: FILE: drivers/s390/block/dasd_int.h:284:
+	int (*ioctl) (struct dasd_block *, unsigned int, void __user *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#2071: FILE: drivers/s390/block/dasd_int.h:284:
+	int (*ioctl) (struct dasd_block *, unsigned int, void __user *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#2071: FILE: drivers/s390/block/dasd_int.h:284:
+	int (*ioctl) (struct dasd_block *, unsigned int, void __user *);

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#2136: FILE: drivers/s390/block/dasd_int.h:370:
+	spinlock_t request_queue_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#2146: FILE: drivers/s390/block/dasd_int.h:380:
+	spinlock_t queue_lock;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2157: FILE: drivers/s390/block/dasd_int.h:391:
 
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_block *' should also have an identifier name
#2177: FILE: drivers/s390/block/dasd_int.h:540:
+void dasd_free_block(struct dasd_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_device *' should also have an identifier name
#2187: FILE: drivers/s390/block/dasd_int.h:550:
+void dasd_schedule_device_bh(struct dasd_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_block *' should also have an identifier name
#2188: FILE: drivers/s390/block/dasd_int.h:551:
+void dasd_schedule_block_bh(struct dasd_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_device *' should also have an identifier name
#2194: FILE: drivers/s390/block/dasd_int.h:555:
+void dasd_device_set_timer(struct dasd_device *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2194: FILE: drivers/s390/block/dasd_int.h:555:
+void dasd_device_set_timer(struct dasd_device *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_device *' should also have an identifier name
#2195: FILE: drivers/s390/block/dasd_int.h:556:
+void dasd_device_clear_timer(struct dasd_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_block *' should also have an identifier name
#2196: FILE: drivers/s390/block/dasd_int.h:557:
+void dasd_block_set_timer(struct dasd_block *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#2196: FILE: drivers/s390/block/dasd_int.h:557:
+void dasd_block_set_timer(struct dasd_block *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_block *' should also have an identifier name
#2197: FILE: drivers/s390/block/dasd_int.h:558:
+void dasd_block_clear_timer(struct dasd_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_device *' should also have an identifier name
#2199: FILE: drivers/s390/block/dasd_int.h:560:
+int dasd_flush_device_queue(struct dasd_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_device *' should also have an identifier name
#2205: FILE: drivers/s390/block/dasd_int.h:566:
+void dasd_generic_handle_state_change(struct dasd_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_block *' should also have an identifier name
#2217: FILE: drivers/s390/block/dasd_int.h:600:
+int dasd_gendisk_alloc(struct dasd_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_block *' should also have an identifier name
#2218: FILE: drivers/s390/block/dasd_int.h:601:
+void dasd_gendisk_free(struct dasd_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_block *' should also have an identifier name
#2219: FILE: drivers/s390/block/dasd_int.h:602:
+int dasd_scan_partitions(struct dasd_block *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dasd_block *' should also have an identifier name
#2220: FILE: drivers/s390/block/dasd_int.h:603:
+void dasd_destroy_partitions(struct dasd_block *);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!base->discipline->format_device"
#2357: FILE: drivers/s390/block/dasd_ioctl.c:145:
+	if (base->discipline->format_device == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'base->state < DASD_STATE_READY'
#2532: FILE: drivers/s390/block/dasd_ioctl.c:303:
+	if ((base->state < DASD_STATE_READY) ||
+	    (dasd_check_blocksize(block->bp_block)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2602: FILE: drivers/s390/block/dasd_ioctl.c:366:
+dasd_ioctl_readall_cmb(struct dasd_block *block, unsigned int cmd,
 		unsigned long arg)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000344699.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 57 warnings, 45 checks, 2405 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000344699.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
