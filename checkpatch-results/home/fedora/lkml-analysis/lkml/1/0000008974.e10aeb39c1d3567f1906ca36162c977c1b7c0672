WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#71: FILE: empty.c:1:
+/* Empty target for GDB, the GNU debugger.

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#72: FILE: empty.c:2:
+/* Empty target for GDB, the GNU debugger.
+

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#88: FILE: empty.c:18:
+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#108: FILE: empty.c:38:
+static gdb_byte *empty_regbuf = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#111: FILE: empty.c:41:
+struct empty_mem_list_s
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: empty.c:42:
+  struct empty_mem_list_s *prev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: empty.c:43:
+  struct empty_mem_list_s *next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: empty.c:44:
+  ULONGEST begin;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: empty.c:45:
+  ULONGEST end;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: empty.c:46:
+  gdb_byte *buf;$

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#119: FILE: empty.c:49:
+static struct empty_mem_list_s *empty_mem_list = NULL;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#122: FILE: empty.c:52:
+empty_open (char *arg, int from_tty)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: empty.c:54:
+  int regnum = gdbarch_num_regs (get_current_arch ());$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#124: FILE: empty.c:54:
+  int regnum = gdbarch_num_regs (get_current_arch ());

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#124: FILE: empty.c:54:
+  int regnum = gdbarch_num_regs (get_current_arch ());

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: empty.c:56:
+  empty_regbuf = xzalloc (MAX_REGISTER_SIZE * regnum);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#126: FILE: empty.c:56:
+  empty_regbuf = xzalloc (MAX_REGISTER_SIZE * regnum);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: empty.c:58:
+  push_target (&empty_ops);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#128: FILE: empty.c:58:
+  push_target (&empty_ops);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: empty.c:60:
+  inferior_ptid = pid_to_ptid (EMPTY_PID);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#130: FILE: empty.c:60:
+  inferior_ptid = pid_to_ptid (EMPTY_PID);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: empty.c:61:
+  inferior_appeared (current_inferior (), EMPTY_PID);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#131: FILE: empty.c:61:
+  inferior_appeared (current_inferior (), EMPTY_PID);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#131: FILE: empty.c:61:
+  inferior_appeared (current_inferior (), EMPTY_PID);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: empty.c:62:
+  add_thread_silent (inferior_ptid);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#132: FILE: empty.c:62:
+  add_thread_silent (inferior_ptid);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#136: FILE: empty.c:66:
+empty_close (int quitting)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: empty.c:68:
+  struct empty_mem_list_s *mlp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: empty.c:70:
+  for (mlp = empty_mem_list; mlp;)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#140: FILE: empty.c:70:
+  for (mlp = empty_mem_list; mlp;)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#140: FILE: empty.c:70:
+  for (mlp = empty_mem_list; mlp;)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: empty.c:71:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: empty.c:72:
+      struct empty_mem_list_s *tmp = mlp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: empty.c:74:
+      mlp = mlp->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: empty.c:75:
+      xfree (tmp->buf);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#145: FILE: empty.c:75:
+      xfree (tmp->buf);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: empty.c:76:
+      xfree (tmp);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#146: FILE: empty.c:76:
+      xfree (tmp);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: empty.c:77:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: empty.c:79:
+  if (empty_regbuf)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#149: FILE: empty.c:79:
+  if (empty_regbuf)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#149: FILE: empty.c:79:
+  if (empty_regbuf)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: empty.c:80:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: empty.c:81:
+      xfree (empty_regbuf);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#151: FILE: empty.c:81:
+      xfree (empty_regbuf);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: empty.c:82:
+      empty_regbuf = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: empty.c:83:
+    }$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#157: FILE: empty.c:87:
+empty_kill (struct target_ops *ops)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: empty.c:89:
+  unpush_target (ops);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#159: FILE: empty.c:89:
+  unpush_target (ops);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#163: FILE: empty.c:93:
+empty_fetch_registers (struct target_ops *ops,

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: empty.c:94:
+                       struct regcache *regcache, int regno)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: empty.c:94:
+                       struct regcache *regcache, int regno)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: empty.c:96:
+  if (regno < 0)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#166: FILE: empty.c:96:
+  if (regno < 0)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#166: FILE: empty.c:96:
+  if (regno < 0)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: empty.c:97:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: empty.c:98:
+      int num = gdbarch_num_regs (get_regcache_arch (regcache));$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#168: FILE: empty.c:98:
+      int num = gdbarch_num_regs (get_regcache_arch (regcache));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#168: FILE: empty.c:98:
+      int num = gdbarch_num_regs (get_regcache_arch (regcache));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: empty.c:99:
+      int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: empty.c:101:
+      for (i = 0; i < num; i ++)$

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#171: FILE: empty.c:101:
+      for (i = 0; i < num; i ++)
                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: empty.c:102:
+        regcache_raw_supply (regcache, i,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: empty.c:102:
+        regcache_raw_supply (regcache, i,$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#172: FILE: empty.c:102:
+        regcache_raw_supply (regcache, i,

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: empty.c:103:
+                             empty_regbuf + MAX_REGISTER_SIZE * i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: empty.c:103:
+                             empty_regbuf + MAX_REGISTER_SIZE * i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: empty.c:104:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: empty.c:105:
+  else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#175: FILE: empty.c:105:
+  else
+    regcache_raw_supply (regcache, regno,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: empty.c:106:
+    regcache_raw_supply (regcache, regno,$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#176: FILE: empty.c:106:
+    regcache_raw_supply (regcache, regno,

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: empty.c:107:
+                         empty_regbuf + MAX_REGISTER_SIZE * regno);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: empty.c:107:
+                         empty_regbuf + MAX_REGISTER_SIZE * regno);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#181: FILE: empty.c:111:
+empty_prepare_to_store (struct regcache *regcache)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#186: FILE: empty.c:116:
+empty_store_registers (struct target_ops *ops,

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: empty.c:117:
+                        struct regcache *regcache, int regno)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#187: FILE: empty.c:117:
+empty_store_registers (struct target_ops *ops,
+                        struct regcache *regcache, int regno)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: empty.c:117:
+                        struct regcache *regcache, int regno)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: empty.c:119:
+  regcache_raw_collect (regcache, regno,$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#189: FILE: empty.c:119:
+  regcache_raw_collect (regcache, regno,

ERROR:CODE_INDENT: code indent should use tabs where possible
#190: FILE: empty.c:120:
+                        empty_regbuf + MAX_REGISTER_SIZE * regno);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: empty.c:120:
+                        empty_regbuf + MAX_REGISTER_SIZE * regno);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#194: FILE: empty.c:124:
+empty_xfer_partial (struct target_ops *ops, enum target_object object,

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: empty.c:127:
+                    LONGEST len)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: empty.c:127:
+                    LONGEST len)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: empty.c:129:
+  struct empty_mem_list_s *mlp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: empty.c:131:
+  if (ops->beneath != NULL)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#201: FILE: empty.c:131:
+  if (ops->beneath != NULL)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#201: FILE: empty.c:131:
+  if (ops->beneath != NULL)
+    {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ops->beneath"
#201: FILE: empty.c:131:
+  if (ops->beneath != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: empty.c:132:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: empty.c:133:
+      if (ops->beneath->to_xfer_partial (ops->beneath, object, annex,$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#203: FILE: empty.c:133:
+      if (ops->beneath->to_xfer_partial (ops->beneath, object, annex,

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: empty.c:134:
+                                         readbuf, writebuf, offset, len) == len)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: empty.c:134:
+                                         readbuf, writebuf, offset, len) == len)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: empty.c:135:
+        return len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: empty.c:135:
+        return len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: empty.c:136:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: empty.c:138:
+  if (readbuf)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#208: FILE: empty.c:138:
+  if (readbuf)
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#208: FILE: empty.c:138:
+  if (readbuf)
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: empty.c:139:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: empty.c:140:
+      memset (readbuf, 0, len);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#210: FILE: empty.c:140:
+      memset (readbuf, 0, len);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: empty.c:142:
+      for (mlp = empty_mem_list; mlp; mlp = mlp->next)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#212: FILE: empty.c:142:
+      for (mlp = empty_mem_list; mlp; mlp = mlp->next)
+        {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#212: FILE: empty.c:142:
+      for (mlp = empty_mem_list; mlp; mlp = mlp->next)
+        {

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: empty.c:143:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: empty.c:143:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: empty.c:144:
+          ULONGEST wbegin = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: empty.c:144:
+          ULONGEST wbegin = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: empty.c:145:
+          ULONGEST wend = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: empty.c:145:
+          ULONGEST wend = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: empty.c:147:
+          if (mlp->begin >= offset && mlp->begin <= offset + len)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: empty.c:147:
+          if (mlp->begin >= offset && mlp->begin <= offset + len)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#217: FILE: empty.c:147:
+          if (mlp->begin >= offset && mlp->begin <= offset + len)
+            {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#217: FILE: empty.c:147:
+          if (mlp->begin >= offset && mlp->begin <= offset + len)
+            {

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: empty.c:148:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: empty.c:148:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: empty.c:149:
+              wbegin = offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: empty.c:149:
+              wbegin = offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: empty.c:151:
+              if (mlp->end > offset + len)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: empty.c:151:
+              if (mlp->end > offset + len)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: empty.c:152:
+                wend = offset + len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: empty.c:152:
+                wend = offset + len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: empty.c:153:
+              else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: empty.c:153:
+              else$

ERROR:CODE_INDENT: code indent should use tabs where possible
#224: FILE: empty.c:154:
+                wend = mlp->end;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: empty.c:154:
+                wend = mlp->end;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: empty.c:155:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: empty.c:155:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: empty.c:156:
+          else if (mlp->end >= offset && mlp->end <= offset + len)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: empty.c:156:
+          else if (mlp->end >= offset && mlp->end <= offset + len)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#226: FILE: empty.c:156:
+          else if (mlp->end >= offset && mlp->end <= offset + len)
+            {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#226: FILE: empty.c:156:
+          else if (mlp->end >= offset && mlp->end <= offset + len)
+            {

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: empty.c:157:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: empty.c:157:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#228: FILE: empty.c:158:
+              wend = offset + len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: empty.c:158:
+              wend = offset + len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: empty.c:160:
+              if (mlp->begin > offset)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: empty.c:160:
+              if (mlp->begin > offset)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: empty.c:161:
+                wbegin = mlp->begin;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: empty.c:161:
+                wbegin = mlp->begin;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: empty.c:162:
+              else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: empty.c:162:
+              else$

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: empty.c:163:
+                wbegin = offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: empty.c:163:
+                wbegin = offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: empty.c:164:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: empty.c:164:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: empty.c:165:
+          else if (mlp->begin < offset && mlp->end > offset +len)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: empty.c:165:
+          else if (mlp->begin < offset && mlp->end > offset +len)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#235: FILE: empty.c:165:
+          else if (mlp->begin < offset && mlp->end > offset +len)
+            {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#235: FILE: empty.c:165:
+          else if (mlp->begin < offset && mlp->end > offset +len)
+            {

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#235: FILE: empty.c:165:
+          else if (mlp->begin < offset && mlp->end > offset +len)
                                                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: empty.c:166:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: empty.c:166:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: empty.c:167:
+              wbegin = offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: empty.c:167:
+              wbegin = offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: empty.c:168:
+              wend = offset + len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: empty.c:168:
+              wend = offset + len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#239: FILE: empty.c:169:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: empty.c:169:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#241: FILE: empty.c:171:
+          if (wbegin != wend)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: empty.c:171:
+          if (wbegin != wend)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#241: FILE: empty.c:171:
+          if (wbegin != wend)
+            memcpy (readbuf + wbegin - offset,

ERROR:CODE_INDENT: code indent should use tabs where possible
#242: FILE: empty.c:172:
+            memcpy (readbuf + wbegin - offset,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: empty.c:172:
+            memcpy (readbuf + wbegin - offset,$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#242: FILE: empty.c:172:
+            memcpy (readbuf + wbegin - offset,

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: empty.c:173:
+                    mlp->buf + wbegin - mlp->begin, wend - wbegin);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: empty.c:173:
+                    mlp->buf + wbegin - mlp->begin, wend - wbegin);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: empty.c:174:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: empty.c:174:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: empty.c:175:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: empty.c:176:
+  else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#246: FILE: empty.c:176:
+  else
+    {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#246: FILE: empty.c:176:
+  else
+    {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: empty.c:177:
+    {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: empty.c:178:
+      struct empty_mem_list_s *mlp_new = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: empty.c:179:
+      struct empty_mem_list_s *mlp_head = NULL, *mlp_tail = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: empty.c:180:
+      struct empty_mem_list_s *mlp_bodycore = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: empty.c:181:
+      struct empty_mem_list_s *mlp_bodyhead = NULL, *mlp_bodytail = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: empty.c:182:
+      ULONGEST begin = offset, end = offset +len;$

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#252: FILE: empty.c:182:
+      ULONGEST begin = offset, end = offset +len;
                                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: empty.c:183:
+      gdb_byte *buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: empty.c:186:
+      for (mlp = empty_mem_list; mlp; mlp = mlp->next)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#256: FILE: empty.c:186:
+      for (mlp = empty_mem_list; mlp; mlp = mlp->next)
+        {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#256: FILE: empty.c:186:
+      for (mlp = empty_mem_list; mlp; mlp = mlp->next)
+        {

ERROR:CODE_INDENT: code indent should use tabs where possible
#257: FILE: empty.c:187:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: empty.c:187:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#258: FILE: empty.c:188:
+          if (mlp->end < begin)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: empty.c:188:
+          if (mlp->end < begin)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#258: FILE: empty.c:188:
+          if (mlp->end < begin)
+            mlp_head = mlp;

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: empty.c:189:
+            mlp_head = mlp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: empty.c:189:
+            mlp_head = mlp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#260: FILE: empty.c:190:
+          else if (begin >= mlp->begin && end <= mlp->end)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: empty.c:190:
+          else if (begin >= mlp->begin && end <= mlp->end)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#260: FILE: empty.c:190:
+          else if (begin >= mlp->begin && end <= mlp->end)
+            {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#260: FILE: empty.c:190:
+          else if (begin >= mlp->begin && end <= mlp->end)
+            {

ERROR:CODE_INDENT: code indent should use tabs where possible
#261: FILE: empty.c:191:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: empty.c:191:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#262: FILE: empty.c:192:
+              mlp_bodycore = mlp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: empty.c:192:
+              mlp_bodycore = mlp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#263: FILE: empty.c:193:
+              break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: empty.c:193:
+              break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#264: FILE: empty.c:194:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: empty.c:194:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#265: FILE: empty.c:195:
+          else if ((mlp->begin >= begin && mlp->begin <= end)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: empty.c:195:
+          else if ((mlp->begin >= begin && mlp->begin <= end)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#265: FILE: empty.c:195:
+          else if ((mlp->begin >= begin && mlp->begin <= end)
+                   || (mlp->end >= begin && mlp->end <= end)
+                   || (mlp->begin < begin && mlp->end > end))
+            {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#265: FILE: empty.c:195:
+          else if ((mlp->begin >= begin && mlp->begin <= end)
[...]
+            {

ERROR:CODE_INDENT: code indent should use tabs where possible
#266: FILE: empty.c:196:
+                   || (mlp->end >= begin && mlp->end <= end)$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#266: FILE: empty.c:196:
+          else if ((mlp->begin >= begin && mlp->begin <= end)
+                   || (mlp->end >= begin && mlp->end <= end)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: empty.c:196:
+                   || (mlp->end >= begin && mlp->end <= end)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#267: FILE: empty.c:197:
+                   || (mlp->begin < begin && mlp->end > end))$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#267: FILE: empty.c:197:
+                   || (mlp->end >= begin && mlp->end <= end)
+                   || (mlp->begin < begin && mlp->end > end))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: empty.c:197:
+                   || (mlp->begin < begin && mlp->end > end))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: empty.c:198:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: empty.c:198:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#269: FILE: empty.c:199:
+              if (mlp_bodyhead)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: empty.c:199:
+              if (mlp_bodyhead)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: empty.c:200:
+                mlp_bodytail = mlp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: empty.c:200:
+                mlp_bodytail = mlp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#271: FILE: empty.c:201:
+              else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: empty.c:201:
+              else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#271: FILE: empty.c:201:
+              else
+                {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (14, 18)
#271: FILE: empty.c:201:
+              else
+                {

ERROR:CODE_INDENT: code indent should use tabs where possible
#272: FILE: empty.c:202:
+                {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: empty.c:202:
+                {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: empty.c:203:
+                  mlp_bodyhead = mlp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: empty.c:203:
+                  mlp_bodyhead = mlp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#274: FILE: empty.c:204:
+                  mlp_bodytail = mlp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: empty.c:204:
+                  mlp_bodytail = mlp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#275: FILE: empty.c:205:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: empty.c:205:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#276: FILE: empty.c:206:
+              if (mlp->begin < begin)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: empty.c:206:
+              if (mlp->begin < begin)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#277: FILE: empty.c:207:
+                begin = mlp->begin;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: empty.c:207:
+                begin = mlp->begin;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: empty.c:208:
+              if (mlp->begin > end)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: empty.c:208:
+              if (mlp->begin > end)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#279: FILE: empty.c:209:
+                end = mlp->end;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: empty.c:209:
+                end = mlp->end;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#280: FILE: empty.c:210:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: empty.c:210:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#281: FILE: empty.c:211:
+          else if (end < mlp->begin)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: empty.c:211:
+          else if (end < mlp->begin)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#281: FILE: empty.c:211:
+          else if (end < mlp->begin)
+            {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#281: FILE: empty.c:211:
+          else if (end < mlp->begin)
+            {

ERROR:CODE_INDENT: code indent should use tabs where possible
#282: FILE: empty.c:212:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: empty.c:212:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#283: FILE: empty.c:213:
+              mlp_tail = mlp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: empty.c:213:
+              mlp_tail = mlp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#284: FILE: empty.c:214:
+              break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: empty.c:214:
+              break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#285: FILE: empty.c:215:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: empty.c:215:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#286: FILE: empty.c:216:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: empty.c:216:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: empty.c:218:
+      if (mlp_bodycore)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#288: FILE: empty.c:218:
+      if (mlp_bodycore)
+        {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#288: FILE: empty.c:218:
+      if (mlp_bodycore)
+        {

ERROR:CODE_INDENT: code indent should use tabs where possible
#289: FILE: empty.c:219:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: empty.c:219:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#290: FILE: empty.c:220:
+          memcpy (mlp_bodycore->buf + begin - mlp_bodycore->begin, writebuf, len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: empty.c:220:
+          memcpy (mlp_bodycore->buf + begin - mlp_bodycore->begin, writebuf, len);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#290: FILE: empty.c:220:
+          memcpy (mlp_bodycore->buf + begin - mlp_bodycore->begin, writebuf, len);

ERROR:CODE_INDENT: code indent should use tabs where possible
#291: FILE: empty.c:221:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: empty.c:221:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: empty.c:222:
+      else$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#292: FILE: empty.c:222:
+      else
+        {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#292: FILE: empty.c:222:
+      else
+        {

ERROR:CODE_INDENT: code indent should use tabs where possible
#293: FILE: empty.c:223:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: empty.c:223:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#294: FILE: empty.c:224:
+          mlp_new = xmalloc (sizeof (struct empty_mem_list_s));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: empty.c:224:
+          mlp_new = xmalloc (sizeof (struct empty_mem_list_s));$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#294: FILE: empty.c:224:
+          mlp_new = xmalloc (sizeof (struct empty_mem_list_s));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#294: FILE: empty.c:224:
+          mlp_new = xmalloc (sizeof (struct empty_mem_list_s));

ERROR:CODE_INDENT: code indent should use tabs where possible
#295: FILE: empty.c:225:
+          mlp_new->begin = begin;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: empty.c:225:
+          mlp_new->begin = begin;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#296: FILE: empty.c:226:
+          mlp_new->end = end;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: empty.c:226:
+          mlp_new->end = end;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#297: FILE: empty.c:227:
+          mlp_new->buf = xzalloc (end - begin);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: empty.c:227:
+          mlp_new->buf = xzalloc (end - begin);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#297: FILE: empty.c:227:
+          mlp_new->buf = xzalloc (end - begin);

ERROR:CODE_INDENT: code indent should use tabs where possible
#299: FILE: empty.c:229:
+          /* Write the mlp_body value to mlp_new and release mlp_body.  */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: empty.c:230:
+          for (mlp = mlp_bodyhead; mlp && mlp->prev != mlp_bodytail;)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: empty.c:230:
+          for (mlp = mlp_bodyhead; mlp && mlp->prev != mlp_bodytail;)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#300: FILE: empty.c:230:
+          for (mlp = mlp_bodyhead; mlp && mlp->prev != mlp_bodytail;)
+            {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 14)
#300: FILE: empty.c:230:
+          for (mlp = mlp_bodyhead; mlp && mlp->prev != mlp_bodytail;)
+            {

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: empty.c:231:
+            {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: empty.c:231:
+            {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#302: FILE: empty.c:232:
+              struct empty_mem_list_s *tmp = mlp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: empty.c:232:
+              struct empty_mem_list_s *tmp = mlp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#304: FILE: empty.c:234:
+              mlp = mlp->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: empty.c:234:
+              mlp = mlp->next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#305: FILE: empty.c:235:
+              memcpy (mlp_new->buf + tmp->begin - begin, tmp->buf, tmp->end - tmp->begin);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: empty.c:235:
+              memcpy (mlp_new->buf + tmp->begin - begin, tmp->buf, tmp->end - tmp->begin);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#305: FILE: empty.c:235:
+              memcpy (mlp_new->buf + tmp->begin - begin, tmp->buf, tmp->end - tmp->begin);

ERROR:CODE_INDENT: code indent should use tabs where possible
#306: FILE: empty.c:236:
+              xfree (tmp->buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: empty.c:236:
+              xfree (tmp->buf);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#306: FILE: empty.c:236:
+              xfree (tmp->buf);

ERROR:CODE_INDENT: code indent should use tabs where possible
#307: FILE: empty.c:237:
+              xfree (tmp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: empty.c:237:
+              xfree (tmp);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#307: FILE: empty.c:237:
+              xfree (tmp);

ERROR:CODE_INDENT: code indent should use tabs where possible
#308: FILE: empty.c:238:
+            }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: empty.c:238:
+            }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#310: FILE: empty.c:240:
+          /* Write the new value to mlp_new. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#311: FILE: empty.c:241:
+          memcpy (mlp_new->buf + offset - begin, writebuf, len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: empty.c:241:
+          memcpy (mlp_new->buf + offset - begin, writebuf, len);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#311: FILE: empty.c:241:
+          memcpy (mlp_new->buf + offset - begin, writebuf, len);

ERROR:CODE_INDENT: code indent should use tabs where possible
#313: FILE: empty.c:243:
+          /* Add mlp_new to list.  */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#314: FILE: empty.c:244:
+          mlp_new->prev = mlp_head;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: empty.c:244:
+          mlp_new->prev = mlp_head;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#315: FILE: empty.c:245:
+          mlp_new->next = mlp_tail;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: empty.c:245:
+          mlp_new->next = mlp_tail;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#316: FILE: empty.c:246:
+          if (mlp_head)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: empty.c:246:
+          if (mlp_head)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#316: FILE: empty.c:246:
+          if (mlp_head)
+            mlp_head->next = mlp_new;

ERROR:CODE_INDENT: code indent should use tabs where possible
#317: FILE: empty.c:247:
+            mlp_head->next = mlp_new;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: empty.c:247:
+            mlp_head->next = mlp_new;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#318: FILE: empty.c:248:
+          if (mlp_tail)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: empty.c:248:
+          if (mlp_tail)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#318: FILE: empty.c:248:
+          if (mlp_tail)
+            mlp_tail->prev = mlp_new;

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: empty.c:249:
+            mlp_tail->prev = mlp_new;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: empty.c:249:
+            mlp_tail->prev = mlp_new;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: empty.c:250:
+          if (!mlp_new->prev)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: empty.c:250:
+          if (!mlp_new->prev)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#320: FILE: empty.c:250:
+          if (!mlp_new->prev)
+            empty_mem_list = mlp_new;

ERROR:CODE_INDENT: code indent should use tabs where possible
#321: FILE: empty.c:251:
+            empty_mem_list = mlp_new;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: empty.c:251:
+            empty_mem_list = mlp_new;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#322: FILE: empty.c:252:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: empty.c:252:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#324: FILE: empty.c:254:
+        reinit_frame_cache ();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: empty.c:254:
+        reinit_frame_cache ();$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#324: FILE: empty.c:254:
+        reinit_frame_cache ();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: empty.c:255:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: empty.c:257:
+  return len;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#331: FILE: empty.c:261:
+ignore (struct gdbarch *gdbarch, struct bp_target_info *bp_tgt)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: empty.c:263:
+  return 0;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#337: FILE: empty.c:267:
+init_empty_ops (void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: empty.c:269:
+  empty_ops.to_shortname = "empty";$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: empty.c:270:
+  empty_ops.to_longname = "Empty target";$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: empty.c:271:
+  empty_ops.to_doc = "Empty target";$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: empty.c:272:
+  empty_ops.to_open = empty_open;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: empty.c:273:
+  empty_ops.to_close = empty_close;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: empty.c:274:
+  empty_ops.to_attach = find_default_attach;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: empty.c:275:
+  empty_ops.to_kill = empty_kill;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: empty.c:276:
+  empty_ops.to_fetch_registers = empty_fetch_registers;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: empty.c:277:
+  empty_ops.to_prepare_to_store = empty_prepare_to_store;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: empty.c:278:
+  empty_ops.to_store_registers = empty_store_registers;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: empty.c:279:
+  empty_ops.to_xfer_partial = empty_xfer_partial;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: empty.c:280:
+  empty_ops.to_insert_breakpoint = ignore;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: empty.c:281:
+  empty_ops.to_remove_breakpoint = ignore;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: empty.c:282:
+  empty_ops.to_create_inferior = find_default_create_inferior;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: empty.c:283:
+  empty_ops.to_stratum = core_stratum;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: empty.c:284:
+  empty_ops.to_has_execution = default_child_has_execution;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: empty.c:285:
+  empty_ops.to_has_memory = default_child_has_memory;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: empty.c:286:
+  empty_ops.to_has_stack = default_child_has_stack;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#357: FILE: empty.c:287:
+  empty_ops.to_has_registers = default_child_has_registers;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: empty.c:288:
+  empty_ops.to_magic = OPS_MAGIC;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#362: FILE: empty.c:292:
+_initialize_empty (void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: empty.c:294:
+  init_empty_ops ();$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#364: FILE: empty.c:294:
+  init_empty_ops ();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: empty.c:295:
+  add_target (&empty_ops);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#365: FILE: empty.c:295:
+  add_target (&empty_ops);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000008974.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 119 errors, 242 warnings, 6 checks, 311 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000008974.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
