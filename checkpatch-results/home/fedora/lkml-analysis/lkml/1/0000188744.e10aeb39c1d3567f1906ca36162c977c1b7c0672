WARNING:TYPO_SPELLING: 'Deactive' may be misspelled - perhaps 'Deactivate'?
#36: 
Deactive a tracing marker:
^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'deactived' may be misspelled - perhaps 'deactivated'?
#41: 
A dead tracing markers is a tracing marker which have been deactived,
                                                           ^^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
but tracing buffer may still have log information about this tracing marker,

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
# active a marker in kernel/marker.c:add_marker():

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
# trigger marker "core_marker_format":

WARNING:SPLIT_STRING: quoted string split across lines
#81: FILE: kernel/trace/trace.c:2958:
+		pr_warning("Could not create debugfs "
+			   "'tracing_markers' entry\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:CONST_STRUCT: struct file_operations should normally be const
#95: FILE: kernel/trace/trace.h:134:
+extern struct file_operations trace_markers_fops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:TYPO_SPELLING: 'Deactive' may be misspelled - perhaps 'Deactivate'?
#131: FILE: kernel/trace/trace_bprintk.c:247:
+ * Deactive a tracing marker:
    ^^^^^^^^

WARNING:TYPO_SPELLING: 'deactived' may be misspelled - perhaps 'deactivated'?
#136: FILE: kernel/trace/trace_bprintk.c:252:
+ * A dead tracing markers is a tracing marker which have been deactived,
                                                               ^^^^^^^^^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#173: FILE: kernel/trace/trace_bprintk.c:289:
+};
+#define MARKER_NAME_FMT_LEN						\

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#177: FILE: kernel/trace/trace_bprintk.c:293:
+static void marker_bprintk_probe(void *probe_private, void *call_private,
+		const char *fmt, va_list *args)

WARNING:LINE_SPACING: Missing a blank line after declarations
#183: FILE: kernel/trace/trace_bprintk.c:299:
+		int flen = strlen(fmt);
+		if (p->fmt - p->name + flen < MARKER_NAME_FMT_LEN) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#183: FILE: kernel/trace/trace_bprintk.c:299:
+		if (p->fmt - p->name + flen < MARKER_NAME_FMT_LEN) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#186: FILE: kernel/trace/trace_bprintk.c:302:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: kernel/trace/trace_bprintk.c:311:
+static ssize_t marker_write(struct file *file, const char __user *user_buf,
+		size_t count, loff_t *ppos)

CHECK:BRACES: braces {} should be used on all arms of this statement
#218: FILE: kernel/trace/trace_bprintk.c:334:
+		if (colon) {
[...]
+		} else if (count >= sizeof(buf) / 2)
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#233: FILE: kernel/trace/trace_bprintk.c:349:
+	if (!(buf[0] == '!') && !found) {
[...]
+	} else if (buf[0] == '!' && found && m->state == MARKER_STATE_LIVING) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#278: FILE: kernel/trace/trace_bprintk.c:394:
+	} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#288: FILE: kernel/trace/trace_bprintk.c:404:
+	struct marker_bprintk_struct *pos, *next;
+	list_for_each_entry_safe(pos, next, &marker_list, list) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#317: FILE: kernel/trace/trace_bprintk.c:433:
+	const char *name_fmt = marker_private->name;
+	if (marker_private->state == MARKER_STATE_DEAD)

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#323: FILE: kernel/trace/trace_bprintk.c:439:
+static struct seq_operations trace_markers_seq_ops = {

WARNING:LINE_SPACING: Missing a blank line after declarations
#333: FILE: kernel/trace/trace_bprintk.c:449:
+	int ret = 0;
+	if (file->f_mode & FMODE_READ) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#344: FILE: kernel/trace/trace_bprintk.c:460:
+	int ret = 0;
+	if (file->f_mode & FMODE_READ) {

WARNING:CONST_STRUCT: struct file_operations should normally be const
#351: FILE: kernel/trace/trace_bprintk.c:467:
+struct file_operations trace_markers_fops = {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000188744.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 16 warnings, 8 checks, 279 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000188744.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
