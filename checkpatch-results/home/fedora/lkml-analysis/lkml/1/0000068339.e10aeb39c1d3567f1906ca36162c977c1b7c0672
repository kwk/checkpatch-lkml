WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
policy.h and policy.c contain the core data types use for storing and acces=

WARNING:TYPO_SPELLING: 'acces' may be misspelled - perhaps 'access'?
#44: 
policy.h and policy.c contain the core data types use for storing and acces=
                                                                      ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#81: FILE: security/Kconfig:160:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#107: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#112: FILE: security/dpriv/Kconfig:1:
+config SECURITY_DPRIV
+	bool "Privilege dropping"
+	depends on SECURITY
+	select SECURITYFS
+	default n
+	help
+	  This enabled the DPriv privilege dropping mechanism.
+	  If you are unsure how to answer this question, answer N.

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#133: FILE: security/dpriv/dpriv.c:1:
+/**

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'optio' may be misspelled - perhaps 'option'?
#141: FILE: security/dpriv/dpriv.c:8:
+ * Software Foundation, either version 2 of the License, or (at your optio=
                                                                      ^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#157: FILE: security/dpriv/dpriv.c:21:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#170: FILE: security/dpriv/dpriv.c:34:
+	cred->security =3D NULL;
 	               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#174: FILE: security/dpriv/dpriv.c:38:
+static int dpriv_cred_prepare(struct cred *new, const struct cred *old,
+		gfp_t gfp)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#176: FILE: security/dpriv/dpriv.c:40:
+	new->security =3D dpriv_task_dup(old->security);
 	              ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#185: FILE: security/dpriv/dpriv.c:49:
+	if (file->f_dentry->d_sb->s_root !=3D file->f_dentry &&
 	                                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#186: FILE: security/dpriv/dpriv.c:50:
+	if (file->f_dentry->d_sb->s_root !=3D file->f_dentry &&
+			file->f_dentry->d_parent)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#187: FILE: security/dpriv/dpriv.c:51:
+		file->f_inode->i_security =3D file->f_dentry->d_parent->d_inode;
 		                          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#189: FILE: security/dpriv/dpriv.c:53:
+		file->f_inode->i_security =3D NULL;
 		                          ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#191: FILE: security/dpriv/dpriv.c:55:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#193: FILE: security/dpriv/dpriv.c:57:
+	perm =3D dpriv_policy_get_perm(dpriv_cur_policy, file->f_inode);
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#194: FILE: security/dpriv/dpriv.c:58:
+	need =3D flags_to_mode(file->f_flags);
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#195: FILE: security/dpriv/dpriv.c:59:
+	need =3D imode_to_perm(need, file->f_inode);
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#198: FILE: security/dpriv/dpriv.c:62:
+		char *path =3D d_path(&file->f_path, path_buf, sizeof(path_buf));
 		           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#199: FILE: security/dpriv/dpriv.c:63:
+		char *path =3D d_path(&file->f_path, path_buf, sizeof(path_buf));
+		pr_debug("denied perm=3D%o:%o path=3D%s\n", perm, need, path);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#208: FILE: security/dpriv/dpriv.c:72:
+	u16 perm =3D dpriv_policy_get_perm(dpriv_cur_policy, inode);
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#209: FILE: security/dpriv/dpriv.c:73:
+	u16 need =3D imode_to_perm(mask, inode);
 	         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#210: FILE: security/dpriv/dpriv.c:74:
+	u16 need =3D imode_to_perm(mask, inode);
+	if (deny(perm, need)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#212: FILE: security/dpriv/dpriv.c:76:
+		pr_debug("denied perm=3D%o:%o:%o inode=3D%p\n",
+				perm, need, mask, inode);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#220: FILE: security/dpriv/dpriv.c:84:
+/*
+static int dpriv_inode_alloc_security(struct inode *inode)

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#236: FILE: security/dpriv/dpriv.c:99:
+static struct security_operations dpriv_security_ops =3D {
                                                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#237: FILE: security/dpriv/dpriv.c:100:
+	.name                 =3D "dpriv",
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#238: FILE: security/dpriv/dpriv.c:101:
+	.cred_prepare         =3D dpriv_cred_prepare,
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#239: FILE: security/dpriv/dpriv.c:102:
+	.cred_free            =3D dpriv_cred_free,
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#240: FILE: security/dpriv/dpriv.c:103:
+	.dentry_open          =3D dpriv_dentry_open,
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#241: FILE: security/dpriv/dpriv.c:104:
+	.inode_permission     =3D dpriv_inode_permission,
 	                      ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#246: FILE: security/dpriv/dpriv.c:109:
+	 * filesystem layout changes */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#251: FILE: security/dpriv/dpriv.c:114:
+	struct cred *cred =3D (struct cred *)current_cred();

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#251: FILE: security/dpriv/dpriv.c:114:
+	struct cred *cred =3D (struct cred *)current_cred();
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#257: FILE: security/dpriv/dpriv.c:120:
+	cred->security =3D dpriv_task_new();
 	               ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#269: FILE: security/dpriv/fs.c:1:
+/**

WARNING:TYPO_SPELLING: 'optio' may be misspelled - perhaps 'option'?
#277: FILE: security/dpriv/fs.c:8:
+ * Software Foundation, either version 2 of the License, or (at your optio=
                                                                      ^^^^^

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#300: FILE: security/dpriv/fs.c:28:
+#include <asm/uaccess.h>

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#314: FILE: security/dpriv/fs.c:42:
+	struct dpriv_policy *policy =3D sf->private;
 	                            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#315: FILE: security/dpriv/fs.c:43:
+	struct dpriv_policy *policy =3D sf->private;
+	down_read(&policy->privs_lock);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#321: FILE: security/dpriv/fs.c:49:
+	struct dpriv_policy *policy =3D sf->private;
 	                            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#322: FILE: security/dpriv/fs.c:50:
+	struct dpriv_policy *policy =3D sf->private;
+	return seq_list_next(seq, &policy->privs, pos);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#327: FILE: security/dpriv/fs.c:55:
+	struct dpriv_policy *policy =3D sf->private;
 	                            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#328: FILE: security/dpriv/fs.c:56:
+	struct dpriv_policy *policy =3D sf->private;
+	up_read(&policy->privs_lock);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#333: FILE: security/dpriv/fs.c:61:
+	struct dpriv_line *line =3D list_entry(seq, struct dpriv_line, list);
 	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#334: FILE: security/dpriv/fs.c:62:
+	char perm_str[DPRIV_PERM_BITS+1];
 	                             ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#335: FILE: security/dpriv/fs.c:63:
+	char perm_str[DPRIV_PERM_BITS+1];
+	perm_to_str(line->perm, perm_str);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#340: FILE: security/dpriv/fs.c:68:
+static struct seq_operations generic_seq_ops =3D {
                                              ^

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#340: FILE: security/dpriv/fs.c:68:
+static struct seq_operations generic_seq_ops =3D {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#341: FILE: security/dpriv/fs.c:69:
+	.start =3D generic_seq_start,
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#342: FILE: security/dpriv/fs.c:70:
+	.next  =3D generic_seq_next,
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#343: FILE: security/dpriv/fs.c:71:
+	.stop  =3D generic_seq_stop,
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#344: FILE: security/dpriv/fs.c:72:
+	.show  =3D generic_seq_show,
 	       ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#350: FILE: security/dpriv/fs.c:78:
+	 * Not sure if this is correct way to store private data */

ERROR:CODE_INDENT: code indent should use tabs where possible
#352: FILE: security/dpriv/fs.c:80:
+       ^Iif (seq_open(file, &generic_seq_ops) < 0)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#352: FILE: security/dpriv/fs.c:80:
+       ^Iif (seq_open(file, &generic_seq_ops) < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: security/dpriv/fs.c:80:
+       ^Iif (seq_open(file, &generic_seq_ops) < 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#354: FILE: security/dpriv/fs.c:82:
+ ^Isf =3D file->private_data;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#354: FILE: security/dpriv/fs.c:82:
+ ^Isf =3D file->private_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: security/dpriv/fs.c:82:
+ ^Isf =3D file->private_data;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#354: FILE: security/dpriv/fs.c:82:
+ 	sf =3D file->private_data;
  	   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#355: FILE: security/dpriv/fs.c:83:
+	sf->private =3D policy;
 	            ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#359: FILE: security/dpriv/fs.c:87:
+
+

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'str' - possible side-effects?
#370: FILE: security/dpriv/fs.c:98:
+#define strfwd(str) ({                 \
+	while (*str && isspace(*str))  \
+		str++;                 \
+	str;                           \
+})

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'str' may be better as '(str)' to avoid precedence issues
#370: FILE: security/dpriv/fs.c:98:
+#define strfwd(str) ({                 \
+	while (*str && isspace(*str))  \
+		str++;                 \
+	str;                           \
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'str' - possible side-effects?
#377: FILE: security/dpriv/fs.c:105:
+#define strwfwd(str) ({                \
+	while (*str && !isspace(*str)) \
+		str++;                 \
+	str;                           \
+})

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'str' may be better as '(str)' to avoid precedence issues
#377: FILE: security/dpriv/fs.c:105:
+#define strwfwd(str) ({                \
+	while (*str && !isspace(*str)) \
+		str++;                 \
+	str;                           \
+})

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#389: FILE: security/dpriv/fs.c:117:
+static ssize_t stage_write(struct file *filp, const char *buffer,
                                         ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#390: FILE: security/dpriv/fs.c:118:
+static ssize_t stage_write(struct file *filp, const char *buffer,
+		size_t length, loff_t* off)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#390: FILE: security/dpriv/fs.c:118:
+		size_t length, loff_t* off)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#395: FILE: security/dpriv/fs.c:123:
+	const int write_max =3D DPRIV_PERM_BITS+DPRIV_PATH_MAX+10; /* spaces */
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#395: FILE: security/dpriv/fs.c:123:
+	const int write_max =3D DPRIV_PERM_BITS+DPRIV_PATH_MAX+10; /* spaces */
 	                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#395: FILE: security/dpriv/fs.c:123:
+	const int write_max =3D DPRIV_PERM_BITS+DPRIV_PATH_MAX+10; /* spaces */
 	                                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#396: FILE: security/dpriv/fs.c:124:
+	char _buf[write_max+1] =3D {}, *bufp =3D _buf, *perm_str, *path_str;
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#396: FILE: security/dpriv/fs.c:124:
+	char _buf[write_max+1] =3D {}, *bufp =3D _buf, *perm_str, *path_str;
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#396: FILE: security/dpriv/fs.c:124:
+	char _buf[write_max+1] =3D {}, *bufp =3D _buf, *perm_str, *path_str;
 	                                     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#399: FILE: security/dpriv/fs.c:127:
+		length =3D write_max;
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#405: FILE: security/dpriv/fs.c:133:
+	perm_str =3D strfwd(bufp); /* save ptr */
 	         ^

ERROR:SPACING: space required one side of that '++' (ctx:VxV)
#408: FILE: security/dpriv/fs.c:136:
+	bufp++[0] =3D '\0';        /* terminate mdoe_str */
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#408: FILE: security/dpriv/fs.c:136:
+	bufp++[0] =3D '\0';        /* terminate mdoe_str */
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#409: FILE: security/dpriv/fs.c:137:
+	if ((perm =3D str_to_perm(perm_str)) < 0)
 	          ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#409: FILE: security/dpriv/fs.c:137:
+	if ((perm =3D str_to_perm(perm_str)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#413: FILE: security/dpriv/fs.c:141:
+	bufp =3D strfwd(bufp);     /* to path */
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#414: FILE: security/dpriv/fs.c:142:
+	if (bufp[0] =3D=3D '\0')
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#414: FILE: security/dpriv/fs.c:142:
+	if (bufp[0] =3D=3D '\0')
 	               ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#414: FILE: security/dpriv/fs.c:142:
+	if (bufp[0] =3D=3D '\0')

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#416: FILE: security/dpriv/fs.c:144:
+	if (IS_ERR(file =3D filp_open(bufp, 0, 0))) {
 	                ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#416: FILE: security/dpriv/fs.c:144:
+	if (IS_ERR(file =3D filp_open(bufp, 0, 0))) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#419: FILE: security/dpriv/fs.c:147:
+		if (bufp[0] =3D=3D '\0')
 		            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#419: FILE: security/dpriv/fs.c:147:
+		if (bufp[0] =3D=3D '\0')
 		               ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#419: FILE: security/dpriv/fs.c:147:
+		if (bufp[0] =3D=3D '\0')

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#421: FILE: security/dpriv/fs.c:149:
+		if (IS_ERR(file =3D filp_open(bufp, 0, 0)))
 		                ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#421: FILE: security/dpriv/fs.c:149:
+		if (IS_ERR(file =3D filp_open(bufp, 0, 0)))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#424: FILE: security/dpriv/fs.c:152:
+	path_str =3D kstrdup(bufp, GFP_KERNEL);
 	         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#429: FILE: security/dpriv/fs.c:157:
+	pr_debug("dpriv_task=3D%p pid=3D%d perm=3D%o[%s] path=3D%p[%s]\n",
+		dpriv_cur_task, current->pid, perm, perm_str, file, path_str);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#434: FILE: security/dpriv/fs.c:162:
+static const struct file_operations dpriv_stage_fops =3D {
                                                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#435: FILE: security/dpriv/fs.c:163:
+	.open    =3D stage_open,
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#436: FILE: security/dpriv/fs.c:164:
+	.write   =3D stage_write,
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#437: FILE: security/dpriv/fs.c:165:
+	.read    =3D seq_read,
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#438: FILE: security/dpriv/fs.c:166:
+	.llseek  =3D seq_lseek,
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#439: FILE: security/dpriv/fs.c:167:
+	.release =3D seq_release,
 	         ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#442: FILE: security/dpriv/fs.c:170:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#452: FILE: security/dpriv/fs.c:180:
+static const struct file_operations dpriv_policy_fops =3D {
                                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#453: FILE: security/dpriv/fs.c:181:
+	.open    =3D policy_open,
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#454: FILE: security/dpriv/fs.c:182:
+	.read    =3D seq_read,
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#455: FILE: security/dpriv/fs.c:183:
+	.llseek  =3D seq_lseek,
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#456: FILE: security/dpriv/fs.c:184:
+	.release =3D seq_release,
 	         ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#459: FILE: security/dpriv/fs.c:187:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#470: FILE: security/dpriv/fs.c:198:
+static ssize_t control_write(struct file *filp, const char *buffer,
                                           ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#471: FILE: security/dpriv/fs.c:199:
+static ssize_t control_write(struct file *filp, const char *buffer,
+		size_t length, loff_t* off)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#471: FILE: security/dpriv/fs.c:199:
+		size_t length, loff_t* off)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#473: FILE: security/dpriv/fs.c:201:
+	char command[DPRIV_COMMAND_MAX+1] =3D {};
 	                              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#473: FILE: security/dpriv/fs.c:201:
+	char command[DPRIV_COMMAND_MAX+1] =3D {};
 	                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#476: FILE: security/dpriv/fs.c:204:
+		length =3D DPRIV_COMMAND_MAX;
 		       ^

WARNING:TYPO_SPELLING: 'coomand' may be misspelled - perhaps 'command'?
#488: FILE: security/dpriv/fs.c:216:
+		pr_debug("unimplemented control coomand `%s'\n", command);
 		                                ^^^^^^^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#494: FILE: security/dpriv/fs.c:222:
+static const struct file_operations dpriv_control_fops =3D {
                                                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#495: FILE: security/dpriv/fs.c:223:
+	.write =3D control_write,
 	       ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#498: FILE: security/dpriv/fs.c:226:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#505: FILE: security/dpriv/fs.c:233:
+	struct dentry *dpriv_dir =3D securityfs_create_dir("dpriv", NULL);
 	                         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#506: FILE: security/dpriv/fs.c:234:
+	struct dentry *dpriv_dir =3D securityfs_create_dir("dpriv", NULL);
+	securityfs_create_file("stage",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#507: FILE: security/dpriv/fs.c:235:
+	securityfs_create_file("stage",
+			0666, dpriv_dir, NULL, &dpriv_stage_fops);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#509: FILE: security/dpriv/fs.c:237:
+	securityfs_create_file("policy",
+			0444, dpriv_dir, NULL, &dpriv_policy_fops);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#511: FILE: security/dpriv/fs.c:239:
+	securityfs_create_file("control",
+			0222, dpriv_dir, NULL, &dpriv_control_fops);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#523: FILE: security/dpriv/policy.c:1:
+/**

WARNING:TYPO_SPELLING: 'optio' may be misspelled - perhaps 'option'?
#531: FILE: security/dpriv/policy.c:8:
+ * Software Foundation, either version 2 of the License, or (at your optio=
                                                                      ^^^^^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#560: FILE: security/dpriv/policy.c:34:
+static char perm_bit_list[] =3D "rwxsguRWXSGU";
                             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#561: FILE: security/dpriv/policy.c:35:
+static u16  perm_bit_table['z'] =3D {
                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#579: FILE: security/dpriv/policy.c:53:
+	u16 mode =3D 0;
 	         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#580: FILE: security/dpriv/policy.c:54:
+	u16 mode =3D 0;
+	if (flags & FMODE_READ ) mode |=3D DPRIV_READ;

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#580: FILE: security/dpriv/policy.c:54:
+	if (flags & FMODE_READ ) mode |=3D DPRIV_READ;
 	                              ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#580: FILE: security/dpriv/policy.c:54:
+	if (flags & FMODE_READ ) mode |=3D DPRIV_READ;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#580: FILE: security/dpriv/policy.c:54:
+	if (flags & FMODE_READ ) mode |=3D DPRIV_READ;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#581: FILE: security/dpriv/policy.c:55:
+	if (flags & FMODE_WRITE) mode |=3D DPRIV_WRITE;
 	                              ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#581: FILE: security/dpriv/policy.c:55:
+	if (flags & FMODE_WRITE) mode |=3D DPRIV_WRITE;

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#582: FILE: security/dpriv/policy.c:56:
+	if (flags & FMODE_EXEC ) mode |=3D DPRIV_EXEC;
 	                              ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#582: FILE: security/dpriv/policy.c:56:
+	if (flags & FMODE_EXEC ) mode |=3D DPRIV_EXEC;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#582: FILE: security/dpriv/policy.c:56:
+	if (flags & FMODE_EXEC ) mode |=3D DPRIV_EXEC;

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#583: FILE: security/dpriv/policy.c:57:
+	if (flags & O_CREAT    ) mode |=3D DPRIV_CREATE;
 	                              ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#583: FILE: security/dpriv/policy.c:57:
+	if (flags & O_CREAT    ) mode |=3D DPRIV_CREATE;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#583: FILE: security/dpriv/policy.c:57:
+	if (flags & O_CREAT    ) mode |=3D DPRIV_CREATE;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#589: FILE: security/dpriv/policy.c:63:
+	int perm =3D 0;
 	         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#590: FILE: security/dpriv/policy.c:64:
+	int perm =3D 0;
+	for (; *str; str++) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#592: FILE: security/dpriv/policy.c:66:
+		if ((!isalpha(*str) || !perm_bit_table[(int)*str]) &&
+				*str !=3D '-')

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#592: FILE: security/dpriv/policy.c:66:
+				*str !=3D '-')
 				     ^

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#594: FILE: security/dpriv/policy.c:68:
+		perm |=3D perm_bit_table[(int)*str];
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#601: FILE: security/dpriv/policy.c:75:
+	char *c =3D perm_bit_list;
 	        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#602: FILE: security/dpriv/policy.c:76:
+	char *c =3D perm_bit_list;
+	for (; *c; c++,str++)

ERROR:SPACING: space required after that ',' (ctx:OxV)
#602: FILE: security/dpriv/policy.c:76:
+	for (; *c; c++,str++)
 	              ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#603: FILE: security/dpriv/policy.c:77:
+		*str =3D (perm & perm_bit_table[(int)*c]) ?  *c : '-';

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#603: FILE: security/dpriv/policy.c:77:
+		*str =3D (perm & perm_bit_table[(int)*c]) ?  *c : '-';
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#604: FILE: security/dpriv/policy.c:78:
+	*str =3D '\0';
 	     ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#607: FILE: security/dpriv/policy.c:81:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#613: FILE: security/dpriv/policy.c:87:
+struct dpriv_line *dpriv_line_new(const struct inode *inode,
+		const char *path, u16 perm)

WARNING:LINE_SPACING: Missing a blank line after declarations
#616: FILE: security/dpriv/policy.c:90:
+	struct dpriv_line *line;
+	line =3D kzalloc(sizeof(struct dpriv_line), GFP_KERNEL);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#616: FILE: security/dpriv/policy.c:90:
+	line =3D kzalloc(sizeof(struct dpriv_line), GFP_KERNEL);
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#617: FILE: security/dpriv/policy.c:91:
+	line->inode =3D inode;
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#618: FILE: security/dpriv/policy.c:92:
+	line->path  =3D path;
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#619: FILE: security/dpriv/policy.c:93:
+	line->perm  =3D perm;
 	            ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#623: FILE: security/dpriv/policy.c:97:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#638: FILE: security/dpriv/policy.c:112:
+	struct dpriv_line *line;
+	list_for_each_safe(pos, n, &policy->privs){

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#638: FILE: security/dpriv/policy.c:112:
+	list_for_each_safe(pos, n, &policy->privs){
+		 line =3D list_entry(pos, struct dpriv_line, list);

ERROR:SPACING: space required before the open brace '{'
#638: FILE: security/dpriv/policy.c:112:
+	list_for_each_safe(pos, n, &policy->privs){

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#639: FILE: security/dpriv/policy.c:113:
+		 line =3D list_entry(pos, struct dpriv_line, list);
 		      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#646: FILE: security/dpriv/policy.c:120:
+struct dpriv_line *dpriv_policy_get_line(const struct dpriv_policy *policy,
+		const struct inode *inode)

WARNING:LINE_SPACING: Missing a blank line after declarations
#649: FILE: security/dpriv/policy.c:123:
+	struct dpriv_line *line;
+	list_for_each_entry(line, &policy->privs, list)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#650: FILE: security/dpriv/policy.c:124:
+		if (line->inode =3D=3D inode)
 		                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#650: FILE: security/dpriv/policy.c:124:
+		if (line->inode =3D=3D inode)
 		                   ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#650: FILE: security/dpriv/policy.c:124:
+		if (line->inode =3D=3D inode)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#656: FILE: security/dpriv/policy.c:130:
+u16 dpriv_policy_get_perm(const struct dpriv_policy *policy,
+		const struct inode *inode)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#659: FILE: security/dpriv/policy.c:133:
+	struct dpriv_line *line =3D dpriv_policy_get_line(policy, inode);
 	                        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#660: FILE: security/dpriv/policy.c:134:
+	struct dpriv_line *line =3D dpriv_policy_get_line(policy, inode);
+	if (line)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#665: FILE: security/dpriv/policy.c:139:
+	if (inode->i_security =3D=3D NULL)
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#665: FILE: security/dpriv/policy.c:139:
+	if (inode->i_security =3D=3D NULL)
 	                         ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#665: FILE: security/dpriv/policy.c:139:
+	if (inode->i_security =3D=3D NULL)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#673: FILE: security/dpriv/policy.c:147:
+^I// ^Iperm &=3D dpriv_policy_get_perm(policy, inode->d_parent);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#679: FILE: security/dpriv/policy.c:152:
+/* We need the inode and path so we can create the line if it doesn't exis=
+void dpriv_policy_set_perm(struct dpriv_policy *policy,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#693: FILE: security/dpriv/policy.c:165:
+ * but without duplicating conostant data such as paths and dentries */

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#694: FILE: security/dpriv/policy.c:166:
+void dpriv_policy_append(struct dpriv_policy *from, struct dpriv_policy *t=
                                                                           ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#696: FILE: security/dpriv/policy.c:167:
+void dpriv_policy_append(struct dpriv_policy *from, struct dpriv_policy *t=
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#698: FILE: security/dpriv/policy.c:169:
+	struct dpriv_line *fl, *tl;
+	list_for_each_entry(fl, &from->privs, list) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#699: FILE: security/dpriv/policy.c:170:
+		tl =3D dpriv_line_new(fl->inode, fl->path, fl->perm);
 		   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#704: FILE: security/dpriv/policy.c:175:
+void dpriv_policy_commit(struct dpriv_policy *from, struct dpriv_policy *t=
                                                                           ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#706: FILE: security/dpriv/policy.c:176:
+void dpriv_policy_commit(struct dpriv_policy *from, struct dpriv_policy *t=
+{

WARNING:LINE_SPACING: Missing a blank line after declarations
#710: FILE: security/dpriv/policy.c:180:
+	struct dpriv_policy merge;
+	dpriv_policy_init(&merge);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#714: FILE: security/dpriv/policy.c:184:
+		perm  =3D line->perm;
 		      ^

ERROR:SPACING: spaces required around that '&=' (ctx:WxV)
#715: FILE: security/dpriv/policy.c:185:
+		perm &=3D dpriv_policy_get_perm(from, line->inode);
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#721: FILE: security/dpriv/policy.c:191:
+		perm  =3D line->perm;
 		      ^

ERROR:SPACING: spaces required around that '&=' (ctx:WxV)
#722: FILE: security/dpriv/policy.c:192:
+		perm &=3D dpriv_policy_get_perm(to, line->inode);
 		     ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#732: FILE: security/dpriv/policy.c:202:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#740: FILE: security/dpriv/policy.c:210:
+	struct dpriv_task *task;
+	task =3D kzalloc(sizeof(struct dpriv_task), GFP_KERNEL);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#740: FILE: security/dpriv/policy.c:210:
+	task =3D kzalloc(sizeof(struct dpriv_task), GFP_KERNEL);
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#753: FILE: security/dpriv/policy.c:223:
+	struct dpriv_task *copy =3D dpriv_task_new();
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#762: FILE: security/dpriv/policy.c:232:
+		cl =3D dpriv_line_new(tl->inode, tl->path, tl->perm);
 		   ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#773: FILE: security/dpriv/policy.h:1:
+/**

WARNING:TYPO_SPELLING: 'optio' may be misspelled - perhaps 'option'?
#781: FILE: security/dpriv/policy.h:8:
+ * Software Foundation, either version 2 of the License, or (at your optio=
                                                                      ^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#814: FILE: security/dpriv/policy.h:38:
+
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#819: FILE: security/dpriv/policy.h:43:
+#define DPRIV_EXEC    (1u<<0 ) /* x */
                          ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#819: FILE: security/dpriv/policy.h:43:
+#define DPRIV_EXEC    (1u<<0 ) /* x */

CHECK:BIT_MACRO: Prefer using the BIT macro
#819: FILE: security/dpriv/policy.h:43:
+#define DPRIV_EXEC    (1u<<0 ) /* x */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#820: FILE: security/dpriv/policy.h:44:
+#define DPRIV_WRITE   (1u<<1 ) /* w */
                          ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#820: FILE: security/dpriv/policy.h:44:
+#define DPRIV_WRITE   (1u<<1 ) /* w */

CHECK:BIT_MACRO: Prefer using the BIT macro
#820: FILE: security/dpriv/policy.h:44:
+#define DPRIV_WRITE   (1u<<1 ) /* w */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#821: FILE: security/dpriv/policy.h:45:
+#define DPRIV_READ    (1u<<2 ) /* r */
                          ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#821: FILE: security/dpriv/policy.h:45:
+#define DPRIV_READ    (1u<<2 ) /* r */

CHECK:BIT_MACRO: Prefer using the BIT macro
#821: FILE: security/dpriv/policy.h:45:
+#define DPRIV_READ    (1u<<2 ) /* r */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#822: FILE: security/dpriv/policy.h:46:
+#define DPRIV_KEEPSWP (1u<<3 ) /* s (ignored) */
                          ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#822: FILE: security/dpriv/policy.h:46:
+#define DPRIV_KEEPSWP (1u<<3 ) /* s (ignored) */

CHECK:BIT_MACRO: Prefer using the BIT macro
#822: FILE: security/dpriv/policy.h:46:
+#define DPRIV_KEEPSWP (1u<<3 ) /* s (ignored) */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#823: FILE: security/dpriv/policy.h:47:
+#define DPRIV_SETGID  (1u<<4 ) /* g */
                          ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#823: FILE: security/dpriv/policy.h:47:
+#define DPRIV_SETGID  (1u<<4 ) /* g */

CHECK:BIT_MACRO: Prefer using the BIT macro
#823: FILE: security/dpriv/policy.h:47:
+#define DPRIV_SETGID  (1u<<4 ) /* g */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#824: FILE: security/dpriv/policy.h:48:
+#define DPRIV_SETUID  (1u<<5 ) /* u */
                          ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#824: FILE: security/dpriv/policy.h:48:
+#define DPRIV_SETUID  (1u<<5 ) /* u */

CHECK:BIT_MACRO: Prefer using the BIT macro
#824: FILE: security/dpriv/policy.h:48:
+#define DPRIV_SETUID  (1u<<5 ) /* u */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#827: FILE: security/dpriv/policy.h:51:
+#define DPRIV_WALK    (1u<<6 ) /* X */
                          ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#827: FILE: security/dpriv/policy.h:51:
+#define DPRIV_WALK    (1u<<6 ) /* X */

CHECK:BIT_MACRO: Prefer using the BIT macro
#827: FILE: security/dpriv/policy.h:51:
+#define DPRIV_WALK    (1u<<6 ) /* X */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#828: FILE: security/dpriv/policy.h:52:
+#define DPRIV_CREATE  (1u<<7 ) /* W */
                          ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#828: FILE: security/dpriv/policy.h:52:
+#define DPRIV_CREATE  (1u<<7 ) /* W */

CHECK:BIT_MACRO: Prefer using the BIT macro
#828: FILE: security/dpriv/policy.h:52:
+#define DPRIV_CREATE  (1u<<7 ) /* W */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#829: FILE: security/dpriv/policy.h:53:
+#define DPRIV_LIST    (1u<<8 ) /* R */
                          ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#829: FILE: security/dpriv/policy.h:53:
+#define DPRIV_LIST    (1u<<8 ) /* R */

CHECK:BIT_MACRO: Prefer using the BIT macro
#829: FILE: security/dpriv/policy.h:53:
+#define DPRIV_LIST    (1u<<8 ) /* R */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#830: FILE: security/dpriv/policy.h:54:
+#define DPRIV_STICKY  (1u<<9 ) /* S */
                          ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#830: FILE: security/dpriv/policy.h:54:
+#define DPRIV_STICKY  (1u<<9 ) /* S */

CHECK:BIT_MACRO: Prefer using the BIT macro
#830: FILE: security/dpriv/policy.h:54:
+#define DPRIV_STICKY  (1u<<9 ) /* S */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#831: FILE: security/dpriv/policy.h:55:
+#define DPRIV_PASSGID (1u<<10) /* G */
                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#831: FILE: security/dpriv/policy.h:55:
+#define DPRIV_PASSGID (1u<<10) /* G */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#832: FILE: security/dpriv/policy.h:56:
+#define DPRIV_PASSUID (1u<<11) /* U (ignored) */
                          ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#832: FILE: security/dpriv/policy.h:56:
+#define DPRIV_PASSUID (1u<<11) /* U (ignored) */

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'perm' - possible side-effects?
#841: FILE: security/dpriv/policy.h:65:
+#define deny(perm, request) \
+	unlikely(perm >=3D 0 && ~perm & request)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'perm' may be better as '(perm)' to avoid precedence issues
#841: FILE: security/dpriv/policy.h:65:
+#define deny(perm, request) \
+	unlikely(perm >=3D 0 && ~perm & request)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'request' may be better as '(request)' to avoid precedence issues
#841: FILE: security/dpriv/policy.h:65:
+#define deny(perm, request) \
+	unlikely(perm >=3D 0 && ~perm & request)

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#842: FILE: security/dpriv/policy.h:66:
+	unlikely(perm >=3D 0 && ~perm & request)
 	              ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'mode' may be better as '(mode)' to avoid precedence issues
#845: FILE: security/dpriv/policy.h:69:
+#define dmode_to_perm(mode) \
+	((mode<<6))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#846: FILE: security/dpriv/policy.h:70:
+	((mode<<6))
 	      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'mode' - possible side-effects?
#853: FILE: security/dpriv/policy.h:77:
+#define imode_to_perm(mode, inode)     \
+	(S_ISDIR(inode->i_mode) ?      \
+		 dmode_to_perm(mode) : \
+		 fmode_to_perm(mode))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'inode' may be better as '(inode)' to avoid precedence issues
#853: FILE: security/dpriv/policy.h:77:
+#define imode_to_perm(mode, inode)     \
+	(S_ISDIR(inode->i_mode) ?      \
+		 dmode_to_perm(mode) : \
+		 fmode_to_perm(mode))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#879: FILE: security/dpriv/policy.h:103:
+
+

WARNING:TYPO_SPELLING: 'stroing' may be misspelled - perhaps 'storing'?
#890: FILE: security/dpriv/policy.h:114:
+ * @list:  list_head for stroing in policy or fds
                          ^^^^^^^

WARNING:TYPO_SPELLING: 'initalize' may be misspelled - perhaps 'initialize'?
#903: FILE: security/dpriv/policy.h:127:
+ * Allocate and initalize a new dpriv_line
                 ^^^^^^^^^

WARNING:TYPO_SPELLING: 'fileds' may be misspelled - perhaps 'fields'?
#904: FILE: security/dpriv/policy.h:128:
+ * @indoe, @path, @perm: fileds to store en line
                          ^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#907: FILE: security/dpriv/policy.h:131:
+struct dpriv_line *dpriv_line_new(const struct inode *inode,
+		const char *path, u16 perm);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#909: FILE: security/dpriv/policy.h:133:
+
+

WARNING:TYPO_SPELLING: 'privilages' may be misspelled - perhaps 'privileges'?
#917: FILE: security/dpriv/policy.h:141:
+ * @privs:      List of dpriv_lines for filesystem privilages
                                                    ^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#940: FILE: security/dpriv/policy.h:164:
+struct dpriv_line *dpriv_policy_get_line(const struct dpriv_policy *policy,
+		const struct inode *inode);

WARNING:TYPO_SPELLING: 'Recursivly' may be misspelled - perhaps 'Recursively'?
#942: FILE: security/dpriv/policy.h:166:
+/* Recursivly lookup perm for @inode in @policy */
    ^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#944: FILE: security/dpriv/policy.h:168:
+u16 dpriv_policy_get_perm(const struct dpriv_policy *policy,
+		const struct inode *inode);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#948: FILE: security/dpriv/policy.h:171:
+/* Set perm for @inode in @policy to @perm, create new line if necessasiar=
+void dpriv_policy_set_perm(struct dpriv_policy *policy,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#953: FILE: security/dpriv/policy.h:175:
+ * allowed in @to after the commit is performed */

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#954: FILE: security/dpriv/policy.h:176:
+void dpriv_policy_commit(struct dpriv_policy *from, struct dpriv_policy *t=
                                                                           ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#957: FILE: security/dpriv/policy.h:178:
+
+

WARNING:TYPO_SPELLING: 'privilages' may be misspelled - perhaps 'privileges'?
#968: FILE: security/dpriv/policy.h:188:
+ *   The modifialbe policy, privilages can be allowed or denied in the sta=
                             ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'commiting' may be misspelled - perhaps 'committing'?
#975: FILE: security/dpriv/policy.h:194:
+ * @policy can only be modified by commiting @stage to @policy. When this =
                                    ^^^^^^^^^

WARNING:TYPO_SPELLING: 'recursivly' may be misspelled - perhaps 'recursively'?
#989: FILE: security/dpriv/policy.h:204:
+ * NOTE: @fds is currently not used, we recursivly iterate up to parents
                                         ^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1013: FILE: security/dpriv/policy.h:227:
+/* Create a semi-deep copy of @task, suitable for passing to a child on ex=
+struct dpriv_task *dpriv_task_dup(struct dpriv_task *task);

WARNING:TYPO_SPELLING: 'tre' may be misspelled - perhaps 'tree'?
#1040: FILE: security/dpriv/readme.txt:19:
+   - Processes keeps a list of open fds to prevent recursing up the FS tre=
                                                                        ^^^

WARNING:TYPO_SPELLING: 'privilages' may be misspelled - perhaps 'privileges'?
#1097: FILE: security/dpriv/readme.txt:75:
+    When committing, privilages can only be revoked.
                      ^^^^^^^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000068339.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 130 errors, 60 warnings, 69 checks, 996 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000068339.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
