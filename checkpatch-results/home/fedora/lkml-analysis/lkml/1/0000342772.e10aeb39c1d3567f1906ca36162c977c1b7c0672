CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#205: FILE: arch/arm/mach-pxa/generic.h:19:
+extern void __init pxa_init_gpio(int gpio_nr);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#212: FILE: arch/arm/mach-pxa/gpio.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#213: FILE: arch/arm/mach-pxa/gpio.c:2:
+ *  linux/arch/arm/mach-pxa/gpio.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/gpio.h> instead of <asm/gpio.h>
#229: FILE: arch/arm/mach-pxa/gpio.c:18:
+#include <asm/gpio.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#231: FILE: arch/arm/mach-pxa/gpio.c:20:
+#include <asm/io.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#236: FILE: arch/arm/mach-pxa/gpio.c:25:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#266: FILE: arch/arm/mach-pxa/gpio.c:55:
+	gafr = GAFR(gpio) & ~(0x3 << (((gpio) & 0xf)*2));
 	                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#267: FILE: arch/arm/mach-pxa/gpio.c:56:
+	GAFR(gpio) = gafr |  (fn  << (((gpio) & 0xf)*2));
 	                                            ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#274: FILE: arch/arm/mach-pxa/gpio.c:63:
+static int pxa_gpio_direction_input(struct gpio_chip *chip, unsigned offset)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#294: FILE: arch/arm/mach-pxa/gpio.c:83:
+static int pxa_gpio_direction_output(struct gpio_chip *chip,
+					unsigned offset, int value)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#294: FILE: arch/arm/mach-pxa/gpio.c:83:
+					unsigned offset, int value)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#304: FILE: arch/arm/mach-pxa/gpio.c:93:
+	__raw_writel(mask,
+			pxa->regbase + (value ? GPSR_OFFSET : GPCR_OFFSET));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#318: FILE: arch/arm/mach-pxa/gpio.c:107:
+static int pxa_gpio_get(struct gpio_chip *chip, unsigned offset)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#330: FILE: arch/arm/mach-pxa/gpio.c:119:
+static void pxa_gpio_set(struct gpio_chip *chip, unsigned offset, int value)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#404: FILE: arch/arm/mach-pxa/gpio.c:193:
+		if (i+32 > gpio_nr)
 		     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#405: FILE: arch/arm/mach-pxa/gpio.c:194:
+			pxa_gpio_chip[i/32].chip.ngpio = gpio_nr - i;
 			               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#406: FILE: arch/arm/mach-pxa/gpio.c:195:
+		gpiochip_add(&pxa_gpio_chip[i/32].chip);
 		                             ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#445: FILE: include/asm-arm/arch-pxa/gpio.h:39:
+static inline int gpio_get_value(unsigned gpio)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'gpio < NR_BUILTIN_GPIO'
#448: FILE: include/asm-arm/arch-pxa/gpio.h:41:
+	if (__builtin_constant_p(gpio) && (gpio < NR_BUILTIN_GPIO))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#460: FILE: include/asm-arm/arch-pxa/gpio.h:47:
+static inline void gpio_set_value(unsigned gpio, int value)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'gpio < NR_BUILTIN_GPIO'
#466: FILE: include/asm-arm/arch-pxa/gpio.h:49:
+	if (__builtin_constant_p(gpio) && (gpio < NR_BUILTIN_GPIO)) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000342772.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 13 checks, 420 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000342772.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
