WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
Change the skb allocation api to indicate RX usage and use this to fall back to

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#104: FILE: include/linux/skbuff.h:1163:
+extern void __netdev_free_page(struct net_device *dev, struct page *page);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#140: FILE: net/core/skbuff.c:158:
+		gfp_mask |= __GFP_NOMEMALLOC|__GFP_NOWARN;
 		                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#189: FILE: net/core/skbuff.c:213:
+	if (!emergency) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#191: FILE: net/core/skbuff.c:215:
+			gfp_mask &= ~(__GFP_NOMEMALLOC|__GFP_NOWARN);
 			                              ^

CHECK:BRACES: Unbalanced braces around else statement
#196: FILE: net/core/skbuff.c:220:
+	} else

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: net/core/skbuff.c:246:
+ ^Iskb = __alloc_skb(length + NET_SKB_PAD, gfp_mask, SKB_ALLOC_RX, node);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#208: FILE: net/core/skbuff.c:246:
+ ^Iskb = __alloc_skb(length + NET_SKB_PAD, gfp_mask, SKB_ALLOC_RX, node);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: net/core/skbuff.c:246:
+ ^Iskb = __alloc_skb(length + NET_SKB_PAD, gfp_mask, SKB_ALLOC_RX, node);$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#254: FILE: net/core/skbuff.c:297:
+	/*
+	 * Fix-up the emergency accounting; make sure all pages match

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#262: FILE: net/core/skbuff.c:305:
+		/*
+		 * If the page rank wasn't 0 (ALLOC_NO_WATERMARK) we can use

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#270: FILE: net/core/skbuff.c:313:
+		/*
+		 * Rare case; the skb wasn't allocated under pressure but

WARNING:LINE_SPACING: Missing a blank line after declarations
#293: FILE: net/core/skbuff.c:360:
+				struct page *page = skb_shinfo(skb)->frags[i].page;
+				put_page(page);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#364: FILE: net/core/skbuff.c:711:
+			skb_frag_t *frag = &skb_shinfo(skb)->frags[i];
+			skb_shinfo(n)->frags[i] = *frag;

CHECK:BRACES: braces {} should be used on all arms of this statement
#382: FILE: net/core/skbuff.c:759:
+	if (skb_emergency(skb) && rx_emergency_get(size)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#385: FILE: net/core/skbuff.c:762:
+	} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#399: FILE: net/core/skbuff.c:776:
+		struct page *page = skb_shinfo(skb)->frags[i].page;
+		get_page(page);

WARNING:LINE_SPACING: Missing a blank line after declarations
#434: FILE: net/core/skbuff.c:964:
+			struct page *page = skb_shinfo(skb)->frags[i].page;
+			put_page(page);

WARNING:LINE_SPACING: Missing a blank line after declarations
#448: FILE: net/core/skbuff.c:1138:
+			struct page *page = skb_shinfo(skb)->frags[i].page;
+			put_page(page);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000464826.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 11 warnings, 7 checks, 417 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000464826.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
