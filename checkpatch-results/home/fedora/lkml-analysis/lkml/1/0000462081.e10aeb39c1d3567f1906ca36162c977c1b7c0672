WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
during memory hotadd. This wastes a small amount of memory per unused section

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#80: FILE: include/linux/mmzone.h:674:
+		((SECTION_SIZE_BITS - (MAX_ORDER-1)) * NR_PAGEBLOCK_BITS)
 		                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#97: FILE: include/linux/pageblock-flags.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#111: FILE: include/linux/pageblock-flags.h:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#112: FILE: include/linux/pageblock-flags.h:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#125: FILE: include/linux/pageblock-flags.h:29:
+#define PB_range(name, required_bits) \
+	name, name ## _end = (name + required_bits) - 1

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#125: FILE: include/linux/pageblock-flags.h:29:
+#define PB_range(name, required_bits) \
+	name, name ## _end = (name + required_bits) - 1

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'required_bits' may be better as '(required_bits)' to avoid precedence issues
#125: FILE: include/linux/pageblock-flags.h:29:
+#define PB_range(name, required_bits) \
+	name, name ## _end = (name + required_bits) - 1

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: include/linux/pageblock-flags.h:44:
+void set_pageblock_flags_group(struct page *page, unsigned long flags,
+					int start_bitidx, int end_bitidx);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#143: FILE: include/linux/pageblock-flags.h:47:
+			get_pageblock_flags_group(page, 0, NR_PAGEBLOCK_BITS-1)
 			                                                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#145: FILE: include/linux/pageblock-flags.h:49:
+			set_pageblock_flags_group(page, 0, NR_PAGEBLOCK_BITS-1)
 			                                                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#168: FILE: mm/page_alloc.c:2731:
+	usemapsize = usemapsize >> (MAX_ORDER-1);
 	                                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#179: FILE: mm/page_alloc.c:2742:
+	unsigned long usemapsize = usemap_size(zonesize);
+	zone->pageblock_flags = NULL;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#186: FILE: mm/page_alloc.c:2749:
+static void inline setup_usemap(struct pglist_data *pgdat,

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#186: FILE: mm/page_alloc.c:2749:
+static void inline setup_usemap(struct pglist_data *pgdat,
+				struct zone *zone, unsigned long zonesize) {}

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#207: FILE: mm/page_alloc.c:3553:
+static inline unsigned long *get_pageblock_bitmap(struct zone *zone,
+							unsigned long pfn)

WARNING:LINE_SPACING: Missing a blank line after declarations
#211: FILE: mm/page_alloc.c:3557:
+	unsigned long blockpfn;
+	blockpfn = pfn & ~(MAX_ORDER_NR_PAGES - 1);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#221: FILE: mm/page_alloc.c:3567:
+	pfn &= (PAGES_PER_SECTION-1);
 	                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#222: FILE: mm/page_alloc.c:3568:
+	return (pfn >> (MAX_ORDER-1)) * NR_PAGEBLOCK_BITS;
 	                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#225: FILE: mm/page_alloc.c:3571:
+	return (pfn >> (MAX_ORDER-1)) * NR_PAGEBLOCK_BITS;
 	                         ^

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#230: FILE: mm/page_alloc.c:3576:
+ * get_pageblock_flags_group - Return the requested group of flags for the MAX_ORDER_NR_PAGES block of pages

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#258: FILE: mm/page_alloc.c:3604:
+ * set_pageblock_flags_group - Set the requested group of flags for a MAX_ORDER_NR_PAGES block of pages

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#265: FILE: mm/page_alloc.c:3611:
+void set_pageblock_flags_group(struct page *page, unsigned long flags,
+					int start_bitidx, int end_bitidx)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000462081.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 6 warnings, 12 checks, 217 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000462081.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
