WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
>> +               cfile = filp_open(cache_file, O_CREAT | O_RDWR | O_LARGEFILE, 0640);

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#76: FILE: drivers/mtd/nand/nandsim.c:44:
+#include <asm/uaccess.h>

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#84: FILE: drivers/mtd/nand/nandsim.c:107:
+static char *cache_file = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:LINE_SPACING: Missing a blank line after declarations
#237: FILE: drivers/mtd/nand/nandsim.c:1297:
+		int i;
+		memset(ns->buf.byte, 0xFF, num);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#250: FILE: drivers/mtd/nand/nandsim.c:1310:
+		int flips = 1;
+		if (bitflips > 1)

CHECK:SPACING: No space is necessary after a cast
#251: FILE: drivers/mtd/nand/nandsim.c:1311:
+			flips = (random32() % (int) bitflips) + 1;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#254: FILE: drivers/mtd/nand/nandsim.c:1314:
+			int pos = random32() % (num * 8);
+			ns->buf.byte[pos / 8] ^= (1 << (pos % 8));

WARNING:SPLIT_STRING: quoted string split across lines
#256: FILE: drivers/mtd/nand/nandsim.c:1316:
+			NS_WARN("read_page: flipping bit %d in page %d "
+				"reading from %d ecc: corrected=%u failed=%u\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_page', this function's name, in a string
#272: FILE: drivers/mtd/nand/nandsim.c:1332:
+			NS_DBG("read_page: page %d not written\n", ns->regs.row);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_page', this function's name, in a string
#278: FILE: drivers/mtd/nand/nandsim.c:1338:
+			NS_DBG("read_page: page %d written, reading from %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#279: FILE: drivers/mtd/nand/nandsim.c:1339:
+			NS_DBG("read_page: page %d written, reading from %d\n",
+				ns->regs.row, ns->regs.column + ns->regs.off);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#282: FILE: drivers/mtd/nand/nandsim.c:1342:
+			pos = (loff_t)ns->regs.row * ns->geom.pgszoob + ns->regs.column + ns->regs.off;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#285: FILE: drivers/mtd/nand/nandsim.c:1345:
+				NS_ERR("read_page: read error for page %d ret %ld\n", ns->regs.row, (long)tx);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_page', this function's name, in a string
#285: FILE: drivers/mtd/nand/nandsim.c:1345:
+				NS_ERR("read_page: read error for page %d ret %ld\n", ns->regs.row, (long)tx);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'erase_sector', this function's name, in a string
#335: FILE: drivers/mtd/nand/nandsim.c:1378:
+				NS_DBG("erase_sector: freeing page %d\n", ns->regs.row + i);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'prog_page', this function's name, in a string
#353: FILE: drivers/mtd/nand/nandsim.c:1409:
+		NS_DBG("prog_page: writing page %d\n", ns->regs.row);

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#364: FILE: drivers/mtd/nand/nandsim.c:1420:
+				NS_ERR("prog_page: read error for page %d ret %ld\n", ns->regs.row, (long)tx);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'prog_page', this function's name, in a string
#364: FILE: drivers/mtd/nand/nandsim.c:1420:
+				NS_ERR("prog_page: read error for page %d ret %ld\n", ns->regs.row, (long)tx);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#374: FILE: drivers/mtd/nand/nandsim.c:1430:
+				NS_ERR("prog_page: write error for page %d ret %ld\n", ns->regs.row, (long)tx);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'prog_page', this function's name, in a string
#374: FILE: drivers/mtd/nand/nandsim.c:1430:
+				NS_ERR("prog_page: write error for page %d ret %ld\n", ns->regs.row, (long)tx);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#382: FILE: drivers/mtd/nand/nandsim.c:1438:
+				NS_ERR("prog_page: write error for page %d ret %ld\n", ns->regs.row, (long)tx);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'prog_page', this function's name, in a string
#382: FILE: drivers/mtd/nand/nandsim.c:1438:
+				NS_ERR("prog_page: write error for page %d ret %ld\n", ns->regs.row, (long)tx);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000271186.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 19 warnings, 2 checks, 309 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000271186.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
