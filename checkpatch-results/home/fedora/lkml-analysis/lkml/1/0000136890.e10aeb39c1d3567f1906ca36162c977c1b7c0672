ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#59: FILE: drivers/gpio/gpiolib.c:51:
*/

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#68: FILE: drivers/gpio/gpiolib.c:862:
+int gpio_port_request(unsigned gpio, const char *label)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#72: FILE: drivers/gpio/gpiolib.c:866:
+	int			status =3D -EINVAL;
 	   			       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#72: FILE: drivers/gpio/gpiolib.c:866:
+	int			status =3D -EINVAL;
 	   			           ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#74: FILE: drivers/gpio/gpiolib.c:868:
+	unsigned		_gpio;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#80: FILE: drivers/gpio/gpiolib.c:874:
+	desc =3D &gpio_desc[gpio];
 	     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#80: FILE: drivers/gpio/gpiolib.c:874:
+	desc =3D &gpio_desc[gpio];
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#81: FILE: drivers/gpio/gpiolib.c:875:
+	chip =3D desc->chip;
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#82: FILE: drivers/gpio/gpiolib.c:876:
+	if (chip =3D=3D NULL)
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#82: FILE: drivers/gpio/gpiolib.c:876:
+	if (chip =3D=3D NULL)
 	            ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#82: FILE: drivers/gpio/gpiolib.c:876:
+	if (chip =3D=3D NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#85: FILE: drivers/gpio/gpiolib.c:879:
+	for (_gpio =3D chip->base; _gpio < chip->base + chip->ngpio;
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#88: FILE: drivers/gpio/gpiolib.c:881:
+		status =3D gpio_request(_gpio, label);
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#93: FILE: drivers/gpio/gpiolib.c:886:
+		desc =3D &gpio_desc[_gpio];
 		     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#93: FILE: drivers/gpio/gpiolib.c:886:
+		desc =3D &gpio_desc[_gpio];
 		         ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#102: FILE: drivers/gpio/gpiolib.c:895:
+	for ( ; _gpio >=3D chip->base; _gpio--)
 	              ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'gpio_port_request', this function's name, in a string
#106: FILE: drivers/gpio/gpiolib.c:899:
+	pr_debug("gpio_port_request: gpio-%d (%s) status %d\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#107: FILE: drivers/gpio/gpiolib.c:900:
+	pr_debug("gpio_port_request: gpio-%d (%s) status %d\n",
+		gpio, label ? : "?", status);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#113: FILE: drivers/gpio/gpiolib.c:906:
+void gpio_port_free(unsigned gpio)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#118: FILE: drivers/gpio/gpiolib.c:911:
+	unsigned		_gpio;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#129: FILE: drivers/gpio/gpiolib.c:922:
+	desc =3D &gpio_desc[gpio];
 	     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#129: FILE: drivers/gpio/gpiolib.c:922:
+	desc =3D &gpio_desc[gpio];
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#130: FILE: drivers/gpio/gpiolib.c:923:
+	chip =3D desc->chip;
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#132: FILE: drivers/gpio/gpiolib.c:925:
+	for (_gpio =3D chip->base; _gpio < chip->base + chip->ngpio;
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#134: FILE: drivers/gpio/gpiolib.c:926:
+		desc =3D &gpio_desc[_gpio];
 		     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#134: FILE: drivers/gpio/gpiolib.c:926:
+		desc =3D &gpio_desc[_gpio];
 		         ^

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#154: FILE: include/asm-generic/gpio.h:942:
+++ b/include/asm-generic/gpio.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#160: FILE: include/asm-generic/gpio.h:118:
+extern int gpio_port_request(unsigned gpio, const char *label);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#160: FILE: include/asm-generic/gpio.h:118:
+extern int gpio_port_request(unsigned gpio, const char *label);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#161: FILE: include/asm-generic/gpio.h:119:
+extern void gpio_port_free(unsigned gpio);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#161: FILE: include/asm-generic/gpio.h:119:
+extern void gpio_port_free(unsigned gpio);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000136890.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 15 errors, 8 warnings, 8 checks, 108 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000136890.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
