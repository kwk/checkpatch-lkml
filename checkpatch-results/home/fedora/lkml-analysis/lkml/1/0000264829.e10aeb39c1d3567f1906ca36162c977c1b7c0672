WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#79: FILE: drivers/media/dvb/dvb-core/dvb_ca_en50221.c:1452:
+				if ((status = dvb_ringbuffer_pkt_read_user(&ca->slot_info[slot].rx_buffer, idx, 2,

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#79: FILE: drivers/media/dvb/dvb-core/dvb_ca_en50221.c:1452:
+				if ((status = dvb_ringbuffer_pkt_read_user(&ca->slot_info[slot].rx_buffer, idx, 2,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#80: FILE: drivers/media/dvb/dvb-core/dvb_ca_en50221.c:1453:
+				if ((status = dvb_ringbuffer_pkt_read_user(&ca->slot_info[slot].rx_buffer, idx, 2,
+								      buf + pktlen, fraglen)) < 0) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#107: FILE: drivers/media/dvb/dvb-core/dvb_ringbuffer.c:117:
+		if (copy_to_user(buf, rbuf->data+rbuf->pread, split))
 		                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#118: FILE: drivers/media/dvb/dvb-core/dvb_ringbuffer.c:123:
+	if (copy_to_user(buf, rbuf->data+rbuf->pread, todo))
 	                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#133: FILE: drivers/media/dvb/dvb-core/dvb_ringbuffer.c:138:
+		memcpy(buf, rbuf->data+rbuf->pread, split);
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#138: FILE: drivers/media/dvb/dvb-core/dvb_ringbuffer.c:143:
+	memcpy(buf, rbuf->data+rbuf->pread, todo);
 	                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: drivers/media/dvb/dvb-core/dvb_ringbuffer.c:183:
+ssize_t dvb_ringbuffer_pkt_read_user(struct dvb_ringbuffer *rbuf, size_t idx,
+				int offset, u8 __user *buf, size_t len)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#165: FILE: drivers/media/dvb/dvb-core/dvb_ringbuffer.c:198:
+		if (copy_to_user(buf, rbuf->data+idx, split))
 		                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#176: FILE: drivers/media/dvb/dvb-core/dvb_ringbuffer.c:204:
+	if (copy_to_user(buf, rbuf->data+idx, todo))
 	                                ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#183: FILE: drivers/media/dvb/dvb-core/dvb_ringbuffer.c:211:
+				int offset, u8* buf, size_t len)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#191: FILE: drivers/media/dvb/dvb-core/dvb_ringbuffer.c:219:
+	if (offset > pktlen) return -EINVAL;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#192: FILE: drivers/media/dvb/dvb-core/dvb_ringbuffer.c:220:
+	if ((offset + len) > pktlen) len = pktlen - offset;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#198: FILE: drivers/media/dvb/dvb-core/dvb_ringbuffer.c:226:
+		memcpy(buf, rbuf->data+idx, split);
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#203: FILE: drivers/media/dvb/dvb-core/dvb_ringbuffer.c:231:
+	memcpy(buf, rbuf->data+idx, todo);
 	                      ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#233: FILE: drivers/media/dvb/dvb-core/dvb_ringbuffer.h:117:
+extern ssize_t dvb_ringbuffer_read_user(struct dvb_ringbuffer *rbuf,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#234: FILE: drivers/media/dvb/dvb-core/dvb_ringbuffer.h:118:
+extern ssize_t dvb_ringbuffer_read_user(struct dvb_ringbuffer *rbuf,
+				   u8 __user *buf, size_t len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#235: FILE: drivers/media/dvb/dvb-core/dvb_ringbuffer.h:119:
+extern void dvb_ringbuffer_read(struct dvb_ringbuffer *rbuf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#236: FILE: drivers/media/dvb/dvb-core/dvb_ringbuffer.h:120:
+extern void dvb_ringbuffer_read(struct dvb_ringbuffer *rbuf,
+				   u8 *buf, size_t len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#244: FILE: drivers/media/dvb/dvb-core/dvb_ringbuffer.h:162:
+extern ssize_t dvb_ringbuffer_pkt_read_user(struct dvb_ringbuffer *rbuf, size_t idx,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: drivers/media/dvb/dvb-core/dvb_ringbuffer.h:163:
+extern ssize_t dvb_ringbuffer_pkt_read_user(struct dvb_ringbuffer *rbuf, size_t idx,
+				       int offset, u8 __user *buf, size_t len);

CHECK:SPACING: No space is necessary after a cast
#274: FILE: drivers/media/dvb/ttpci/av7110_av.c:272:
+	dvb_ringbuffer_read(buf, dest, (size_t) blen);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000264829.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 1 warnings, 17 checks, 211 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000264829.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
