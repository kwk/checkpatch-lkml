WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#93: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#98: FILE: drivers/mfd/mc13783-core.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#117: FILE: drivers/mfd/mc13783-core.c:20:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#118: FILE: drivers/mfd/mc13783-core.c:21:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#141: FILE: drivers/mfd/mc13783-core.c:44:
+static inline int spi_rw(struct spi_device *spi, u8 * buf, size_t len)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#241: FILE: drivers/mfd/mc13783-core.c:144:
+int mc13783_register_irq(struct mc13783 *mc13783, int irq,
+		void (*handler) (int, void *), void *data)

WARNING:SPACING: Unnecessary space before function pointer arguments
#241: FILE: drivers/mfd/mc13783-core.c:144:
+		void (*handler) (int, void *), void *data)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#280: FILE: drivers/mfd/mc13783-core.c:183:
+	mc13783_reg_write(mc13783, MC13783_REG_INTERRUPT_STATUS_0,
+			adc_sts & MC13783_INT_STAT_ADCDONEI);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#316: FILE: drivers/mfd/mc13783-core.c:219:
+int mc13783_adc_do_conversion(struct mc13783 *mc13783, unsigned int mode,
+		unsigned int channel, unsigned int *sample)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#326: FILE: drivers/mfd/mc13783-core.c:229:
+	 * conversion */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#337: FILE: drivers/mfd/mc13783-core.c:240:
+		 * to position mode */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rev1 == 0'
#388: FILE: drivers/mfd/mc13783-core.c:291:
+	if ((rev1 == 0) && (rev2 == 2))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rev2 == 2'
#388: FILE: drivers/mfd/mc13783-core.c:291:
+	if ((rev1 == 0) && (rev2 == 2))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#398: FILE: drivers/mfd/mc13783-core.c:301:
+	dev_info(mc13783->dev, "MC13783 Rev %d.%d FinVer %x detected\n", rev1,
+	       rev2, finid);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#408: FILE: drivers/mfd/mc13783-core.c:311:
+^I^I^I^I       const char *name) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#408: FILE: drivers/mfd/mc13783-core.c:311:
+static void mc13783_client_dev_register(struct mc13783 *mc13783,
+				       const char *name) 

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#417: FILE: drivers/mfd/mc13783-core.c:320:
+static int __devinit mc13783_probe(struct spi_device *spi)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*mc13783)...) over kzalloc(sizeof(struct mc13783)...)
#423: FILE: drivers/mfd/mc13783-core.c:326:
+	mc13783 = kzalloc(sizeof(struct mc13783), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#460: FILE: drivers/mfd/mc13783-core.c:363:
+	mc13783_set_bits(mc13783, MC13783_REG_INTERRUPT_MASK_0,
+			MC13783_INT_MASK_ADCDONEM, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#463: FILE: drivers/mfd/mc13783-core.c:366:
+	ret = request_irq(mc13783->irq, mc13783_interrupt,
+			IRQF_DISABLED | IRQF_TRIGGER_HIGH, "mc13783",

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#486: FILE: drivers/mfd/mc13783-core.c:389:
+static int __devexit mc13783_remove(struct spi_device *spi)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#531: FILE: include/linux/mfd/mc13783-private.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#548: FILE: include/linux/mfd/mc13783-private.h:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#549: FILE: include/linux/mfd/mc13783-private.h:19:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#561: FILE: include/linux/mfd/mc13783-private.h:31:
+	void (*handler)(int, void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#561: FILE: include/linux/mfd/mc13783-private.h:31:
+	void (*handler)(int, void *);

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#581: FILE: include/linux/mfd/mc13783-private.h:51:
+	struct mutex io_lock;

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#590: FILE: include/linux/mfd/mc13783-private.h:60:
+	struct mutex adc_conv_lock;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mc13783 *' should also have an identifier name
#596: FILE: include/linux/mfd/mc13783-private.h:66:
+int mc13783_reg_read(struct mc13783 *, int reg_num, u32 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32 *' should also have an identifier name
#596: FILE: include/linux/mfd/mc13783-private.h:66:
+int mc13783_reg_read(struct mc13783 *, int reg_num, u32 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mc13783 *' should also have an identifier name
#597: FILE: include/linux/mfd/mc13783-private.h:67:
+int mc13783_reg_write(struct mc13783 *, int, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#597: FILE: include/linux/mfd/mc13783-private.h:67:
+int mc13783_reg_write(struct mc13783 *, int, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#597: FILE: include/linux/mfd/mc13783-private.h:67:
+int mc13783_reg_write(struct mc13783 *, int, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mc13783 *' should also have an identifier name
#598: FILE: include/linux/mfd/mc13783-private.h:68:
+int mc13783_set_bits(struct mc13783 *, int, u32, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#598: FILE: include/linux/mfd/mc13783-private.h:68:
+int mc13783_set_bits(struct mc13783 *, int, u32, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#598: FILE: include/linux/mfd/mc13783-private.h:68:
+int mc13783_set_bits(struct mc13783 *, int, u32, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#598: FILE: include/linux/mfd/mc13783-private.h:68:
+int mc13783_set_bits(struct mc13783 *, int, u32, u32);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#601: FILE: include/linux/mfd/mc13783-private.h:71:
+int mc13783_register_irq(struct mc13783 *mc13783, int irq,
+		void (*handler) (int, void *), void *data);

WARNING:SPACING: Unnecessary space before function pointer arguments
#601: FILE: include/linux/mfd/mc13783-private.h:71:
+		void (*handler) (int, void *), void *data);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#669: FILE: include/linux/mfd/mc13783-private.h:139:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#673: FILE: include/linux/mfd/mc13783-private.h:143:
+#define MC13783_INT_STAT_ADCDONEI	(1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#674: FILE: include/linux/mfd/mc13783-private.h:144:
+#define MC13783_INT_STAT_ADCBISDONEI	(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#675: FILE: include/linux/mfd/mc13783-private.h:145:
+#define MC13783_INT_STAT_TSI		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#676: FILE: include/linux/mfd/mc13783-private.h:146:
+#define MC13783_INT_STAT_WHIGHI		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#677: FILE: include/linux/mfd/mc13783-private.h:147:
+#define MC13783_INT_STAT_WLOWI		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#678: FILE: include/linux/mfd/mc13783-private.h:148:
+#define MC13783_INT_STAT_CHGDETI	(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#679: FILE: include/linux/mfd/mc13783-private.h:149:
+#define MC13783_INT_STAT_CHGOVI		(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#680: FILE: include/linux/mfd/mc13783-private.h:150:
+#define MC13783_INT_STAT_CHGREVI	(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#681: FILE: include/linux/mfd/mc13783-private.h:151:
+#define MC13783_INT_STAT_CHGSHORTI	(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#682: FILE: include/linux/mfd/mc13783-private.h:152:
+#define MC13783_INT_STAT_CCCVI		(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#683: FILE: include/linux/mfd/mc13783-private.h:153:
+#define MC13783_INT_STAT_CHGCURRI	(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#684: FILE: include/linux/mfd/mc13783-private.h:154:
+#define MC13783_INT_STAT_BPONI		(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#685: FILE: include/linux/mfd/mc13783-private.h:155:
+#define MC13783_INT_STAT_LOBATLI	(1 << 13)

CHECK:BIT_MACRO: Prefer using the BIT macro
#686: FILE: include/linux/mfd/mc13783-private.h:156:
+#define MC13783_INT_STAT_LOBATHI	(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#687: FILE: include/linux/mfd/mc13783-private.h:157:
+#define MC13783_INT_STAT_UDPI		(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#688: FILE: include/linux/mfd/mc13783-private.h:158:
+#define MC13783_INT_STAT_USBI		(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#689: FILE: include/linux/mfd/mc13783-private.h:159:
+#define MC13783_INT_STAT_IDI		(1 << 19)

CHECK:CAMELCASE: Avoid CamelCase: <MC13783_INT_STAT_Unused>
#690: FILE: include/linux/mfd/mc13783-private.h:160:
+#define MC13783_INT_STAT_Unused		(1 << 20)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:BIT_MACRO: Prefer using the BIT macro
#690: FILE: include/linux/mfd/mc13783-private.h:160:
+#define MC13783_INT_STAT_Unused		(1 << 20)

CHECK:BIT_MACRO: Prefer using the BIT macro
#691: FILE: include/linux/mfd/mc13783-private.h:161:
+#define MC13783_INT_STAT_SE1I		(1 << 21)

CHECK:BIT_MACRO: Prefer using the BIT macro
#692: FILE: include/linux/mfd/mc13783-private.h:162:
+#define MC13783_INT_STAT_CKDETI		(1 << 22)

CHECK:BIT_MACRO: Prefer using the BIT macro
#693: FILE: include/linux/mfd/mc13783-private.h:163:
+#define MC13783_INT_STAT_UDMI		(1 << 23)

CHECK:BIT_MACRO: Prefer using the BIT macro
#698: FILE: include/linux/mfd/mc13783-private.h:168:
+#define MC13783_INT_MASK_ADCDONEM	(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#699: FILE: include/linux/mfd/mc13783-private.h:169:
+#define MC13783_INT_MASK_ADCBISDONEM	(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#700: FILE: include/linux/mfd/mc13783-private.h:170:
+#define MC13783_INT_MASK_TSM		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#701: FILE: include/linux/mfd/mc13783-private.h:171:
+#define MC13783_INT_MASK_WHIGHM		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#702: FILE: include/linux/mfd/mc13783-private.h:172:
+#define MC13783_INT_MASK_WLOWM		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#703: FILE: include/linux/mfd/mc13783-private.h:173:
+#define MC13783_INT_MASK_CHGDETM	(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#704: FILE: include/linux/mfd/mc13783-private.h:174:
+#define MC13783_INT_MASK_CHGOVM		(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#705: FILE: include/linux/mfd/mc13783-private.h:175:
+#define MC13783_INT_MASK_CHGREVM	(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#706: FILE: include/linux/mfd/mc13783-private.h:176:
+#define MC13783_INT_MASK_CHGSHORTM	(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#707: FILE: include/linux/mfd/mc13783-private.h:177:
+#define MC13783_INT_MASK_CCCVM		(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#708: FILE: include/linux/mfd/mc13783-private.h:178:
+#define MC13783_INT_MASK_CHGCURRM	(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#709: FILE: include/linux/mfd/mc13783-private.h:179:
+#define MC13783_INT_MASK_BPONM		(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#710: FILE: include/linux/mfd/mc13783-private.h:180:
+#define MC13783_INT_MASK_LOBATLM	(1 << 13)

CHECK:BIT_MACRO: Prefer using the BIT macro
#711: FILE: include/linux/mfd/mc13783-private.h:181:
+#define MC13783_INT_MASK_LOBATHM	(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#712: FILE: include/linux/mfd/mc13783-private.h:182:
+#define MC13783_INT_MASK_UDPM		(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#713: FILE: include/linux/mfd/mc13783-private.h:183:
+#define MC13783_INT_MASK_USBM		(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#714: FILE: include/linux/mfd/mc13783-private.h:184:
+#define MC13783_INT_MASK_IDM		(1 << 19)

CHECK:BIT_MACRO: Prefer using the BIT macro
#715: FILE: include/linux/mfd/mc13783-private.h:185:
+#define MC13783_INT_MASK_SE1M		(1 << 21)

CHECK:BIT_MACRO: Prefer using the BIT macro
#716: FILE: include/linux/mfd/mc13783-private.h:186:
+#define MC13783_INT_MASK_CKDETM		(1 << 22)

CHECK:BIT_MACRO: Prefer using the BIT macro
#721: FILE: include/linux/mfd/mc13783-private.h:191:
+#define MC13783_REGCTRL_VAUDIO_EN	(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#722: FILE: include/linux/mfd/mc13783-private.h:192:
+#define MC13783_REGCTRL_VAUDIO_STBY	(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#723: FILE: include/linux/mfd/mc13783-private.h:193:
+#define MC13783_REGCTRL_VAUDIO_MODE	(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#724: FILE: include/linux/mfd/mc13783-private.h:194:
+#define MC13783_REGCTRL_VIOHI_EN	(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#725: FILE: include/linux/mfd/mc13783-private.h:195:
+#define MC13783_REGCTRL_VIOHI_STBY	(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#726: FILE: include/linux/mfd/mc13783-private.h:196:
+#define MC13783_REGCTRL_VIOHI_MODE	(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#727: FILE: include/linux/mfd/mc13783-private.h:197:
+#define MC13783_REGCTRL_VIOLO_EN	(1 << 6)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#728: FILE: include/linux/mfd/mc13783-private.h:198:
+#define MC13783_REGCTRL_VIOLO_STBY ^I(1 << 7)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#728: FILE: include/linux/mfd/mc13783-private.h:198:
+#define MC13783_REGCTRL_VIOLO_STBY 	(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#729: FILE: include/linux/mfd/mc13783-private.h:199:
+#define MC13783_REGCTRL_VIOLO_MODE	(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#730: FILE: include/linux/mfd/mc13783-private.h:200:
+#define MC13783_REGCTRL_VDIG_EN		(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#731: FILE: include/linux/mfd/mc13783-private.h:201:
+#define MC13783_REGCTRL_VDIG_STBY	(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#732: FILE: include/linux/mfd/mc13783-private.h:202:
+#define MC13783_REGCTRL_VDIG_MODE	(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#733: FILE: include/linux/mfd/mc13783-private.h:203:
+#define MC13783_REGCTRL_VGEN_EN		(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#734: FILE: include/linux/mfd/mc13783-private.h:204:
+#define MC13783_REGCTRL_VGEN_STBY	(1 << 13)

CHECK:BIT_MACRO: Prefer using the BIT macro
#735: FILE: include/linux/mfd/mc13783-private.h:205:
+#define MC13783_REGCTRL_VGEN_MODE	(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#736: FILE: include/linux/mfd/mc13783-private.h:206:
+#define MC13783_REGCTRL_VRFDIG_EN	(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#737: FILE: include/linux/mfd/mc13783-private.h:207:
+#define MC13783_REGCTRL_VRFDIG_STBY	(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#738: FILE: include/linux/mfd/mc13783-private.h:208:
+#define MC13783_REGCTRL_VRFDIG_MODE	(1 << 17)

CHECK:BIT_MACRO: Prefer using the BIT macro
#739: FILE: include/linux/mfd/mc13783-private.h:209:
+#define MC13783_REGCTRL_VRFREF_EN	(1 << 18)

CHECK:BIT_MACRO: Prefer using the BIT macro
#740: FILE: include/linux/mfd/mc13783-private.h:210:
+#define MC13783_REGCTRL_VRFREF_STBY	(1 << 19)

CHECK:BIT_MACRO: Prefer using the BIT macro
#741: FILE: include/linux/mfd/mc13783-private.h:211:
+#define MC13783_REGCTRL_VRFREF_MODE	(1 << 20)

CHECK:BIT_MACRO: Prefer using the BIT macro
#742: FILE: include/linux/mfd/mc13783-private.h:212:
+#define MC13783_REGCTRL_VRFCP_EN	(1 << 21)

CHECK:BIT_MACRO: Prefer using the BIT macro
#743: FILE: include/linux/mfd/mc13783-private.h:213:
+#define MC13783_REGCTRL_VRFCP_STBY	(1 << 22)

CHECK:BIT_MACRO: Prefer using the BIT macro
#744: FILE: include/linux/mfd/mc13783-private.h:214:
+#define MC13783_REGCTRL_VRFCP_MODE	(1 << 23)

CHECK:BIT_MACRO: Prefer using the BIT macro
#749: FILE: include/linux/mfd/mc13783-private.h:219:
+#define MC13783_REGCTRL_VSIM_EN		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#750: FILE: include/linux/mfd/mc13783-private.h:220:
+#define MC13783_REGCTRL_VSIM_STBY	(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#751: FILE: include/linux/mfd/mc13783-private.h:221:
+#define MC13783_REGCTRL_VSIM_MODE	(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#752: FILE: include/linux/mfd/mc13783-private.h:222:
+#define MC13783_REGCTRL_VESIM_EN	(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#753: FILE: include/linux/mfd/mc13783-private.h:223:
+#define MC13783_REGCTRL_VESIM_STBY	(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#754: FILE: include/linux/mfd/mc13783-private.h:224:
+#define MC13783_REGCTRL_VESIM_MODE	(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#755: FILE: include/linux/mfd/mc13783-private.h:225:
+#define MC13783_REGCTRL_VCAM_EN		(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#756: FILE: include/linux/mfd/mc13783-private.h:226:
+#define MC13783_REGCTRL_VCAM_STBY	(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#757: FILE: include/linux/mfd/mc13783-private.h:227:
+#define MC13783_REGCTRL_VCAM_MODE	(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#758: FILE: include/linux/mfd/mc13783-private.h:228:
+#define	MC13783_REGCTRL_VRFBG_EN	(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#759: FILE: include/linux/mfd/mc13783-private.h:229:
+#define MC13783_REGCTRL_VRFBG_STBY	(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#760: FILE: include/linux/mfd/mc13783-private.h:230:
+#define MC13783_REGCTRL_VVIB_EN		(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#761: FILE: include/linux/mfd/mc13783-private.h:231:
+#define MC13783_REGCTRL_VRF1_EN		(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#762: FILE: include/linux/mfd/mc13783-private.h:232:
+#define MC13783_REGCTRL_VRF1_STBY	(1 << 13)

CHECK:BIT_MACRO: Prefer using the BIT macro
#763: FILE: include/linux/mfd/mc13783-private.h:233:
+#define MC13783_REGCTRL_VRF1_MODE	(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#764: FILE: include/linux/mfd/mc13783-private.h:234:
+#define MC13783_REGCTRL_VRF2_EN		(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#765: FILE: include/linux/mfd/mc13783-private.h:235:
+#define MC13783_REGCTRL_VRF2_STBY	(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#766: FILE: include/linux/mfd/mc13783-private.h:236:
+#define MC13783_REGCTRL_VRF2_MODE	(1 << 17)

CHECK:BIT_MACRO: Prefer using the BIT macro
#767: FILE: include/linux/mfd/mc13783-private.h:237:
+#define MC13783_REGCTRL_VMMC1_EN	(1 << 18)

CHECK:BIT_MACRO: Prefer using the BIT macro
#768: FILE: include/linux/mfd/mc13783-private.h:238:
+#define MC13783_REGCTRL_VMMC1_STBY	(1 << 19)

CHECK:BIT_MACRO: Prefer using the BIT macro
#769: FILE: include/linux/mfd/mc13783-private.h:239:
+#define MC13783_REGCTRL_VMMC1_MODE	(1 << 20)

CHECK:BIT_MACRO: Prefer using the BIT macro
#770: FILE: include/linux/mfd/mc13783-private.h:240:
+#define MC13783_REGCTRL_VMMC2_EN	(1 << 21)

CHECK:BIT_MACRO: Prefer using the BIT macro
#771: FILE: include/linux/mfd/mc13783-private.h:241:
+#define MC13783_REGCTRL_VMMC2_STBY	(1 << 22)

CHECK:BIT_MACRO: Prefer using the BIT macro
#772: FILE: include/linux/mfd/mc13783-private.h:242:
+#define MC13783_REGCTRL_VMMC2_MODE	(1 << 23)

CHECK:BIT_MACRO: Prefer using the BIT macro
#777: FILE: include/linux/mfd/mc13783-private.h:247:
+#define MC13783_REGCTRL_GPO1_EN		(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#778: FILE: include/linux/mfd/mc13783-private.h:248:
+#define MC13783_REGCTRL_GPO2_EN		(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#779: FILE: include/linux/mfd/mc13783-private.h:249:
+#define MC13783_REGCTRL_GPO3_EN		(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#780: FILE: include/linux/mfd/mc13783-private.h:250:
+#define MC13783_REGCTRL_GPO4_EN		(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#781: FILE: include/linux/mfd/mc13783-private.h:251:
+#define MC13783_REGCTRL_VIBPINCTRL	(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#786: FILE: include/linux/mfd/mc13783-private.h:256:
+#define MC13783_SWCTRL_SW1A_MODE	(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#787: FILE: include/linux/mfd/mc13783-private.h:257:
+#define MC13783_SWCTRL_SW1A_STBY_MODE	(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#788: FILE: include/linux/mfd/mc13783-private.h:258:
+#define MC13783_SWCTRL_SW1A_DVS_SPEED	(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#789: FILE: include/linux/mfd/mc13783-private.h:259:
+#define MC13783_SWCTRL_SW1A_PANIC_MODE	(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#790: FILE: include/linux/mfd/mc13783-private.h:260:
+#define MC13783_SWCTRL_SW1A_SOFTSTART	(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#791: FILE: include/linux/mfd/mc13783-private.h:261:
+#define MC13783_SWCTRL_SW1B_MODE	(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#792: FILE: include/linux/mfd/mc13783-private.h:262:
+#define MC13783_SWCTRL_SW1B_STBY_MODE	(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#793: FILE: include/linux/mfd/mc13783-private.h:263:
+#define MC13783_SWCTRL_SW1B_DVS_SPEED	(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#794: FILE: include/linux/mfd/mc13783-private.h:264:
+#define MC13783_SWCTRL_SW1B_PANIC_MODE	(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#795: FILE: include/linux/mfd/mc13783-private.h:265:
+#define MC13783_SWCTRL_SW1B_SOFTSTART	(1 << 17)

CHECK:BIT_MACRO: Prefer using the BIT macro
#796: FILE: include/linux/mfd/mc13783-private.h:266:
+#define MC13783_SWCTRL_PLL_EN		(1 << 18)

CHECK:BIT_MACRO: Prefer using the BIT macro
#797: FILE: include/linux/mfd/mc13783-private.h:267:
+#define MC13783_SWCTRL_PLL_FACTOR	(1 << 19)

CHECK:BIT_MACRO: Prefer using the BIT macro
#802: FILE: include/linux/mfd/mc13783-private.h:272:
+#define MC13783_SWCTRL_SW2A_MODE	(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#803: FILE: include/linux/mfd/mc13783-private.h:273:
+#define MC13783_SWCTRL_SW2A_STBY_MODE	(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#804: FILE: include/linux/mfd/mc13783-private.h:274:
+#define MC13783_SWCTRL_SW2A_DVS_SPEED	(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#805: FILE: include/linux/mfd/mc13783-private.h:275:
+#define MC13783_SWCTRL_SW2A_PANIC_MODE	(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#806: FILE: include/linux/mfd/mc13783-private.h:276:
+#define MC13783_SWCTRL_SW2A_SOFTSTART	(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#807: FILE: include/linux/mfd/mc13783-private.h:277:
+#define MC13783_SWCTRL_SW2B_MODE	(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#808: FILE: include/linux/mfd/mc13783-private.h:278:
+#define MC13783_SWCTRL_SW2B_STBY_MODE	(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#809: FILE: include/linux/mfd/mc13783-private.h:279:
+#define MC13783_SWCTRL_SW2B_DVS_SPEED	(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#810: FILE: include/linux/mfd/mc13783-private.h:280:
+#define MC13783_SWCTRL_SW2B_PANIC_MODE	(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#811: FILE: include/linux/mfd/mc13783-private.h:281:
+#define MC13783_SWCTRL_SW2B_SOFTSTART	(1 << 17)

CHECK:BIT_MACRO: Prefer using the BIT macro
#812: FILE: include/linux/mfd/mc13783-private.h:282:
+#define MC13783_SWSET_SW3		(1 << 18)

CHECK:BIT_MACRO: Prefer using the BIT macro
#813: FILE: include/linux/mfd/mc13783-private.h:283:
+#define MC13783_SWCTRL_SW3_EN		(1 << 20)

CHECK:BIT_MACRO: Prefer using the BIT macro
#814: FILE: include/linux/mfd/mc13783-private.h:284:
+#define MC13783_SWCTRL_SW3_STBY		(1 << 21)

CHECK:BIT_MACRO: Prefer using the BIT macro
#815: FILE: include/linux/mfd/mc13783-private.h:285:
+#define MC13783_SWCTRL_SW3_MODE		(1 << 22)

CHECK:BIT_MACRO: Prefer using the BIT macro
#820: FILE: include/linux/mfd/mc13783-private.h:290:
+#define MC13783_ADC0_LICELLCON		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#821: FILE: include/linux/mfd/mc13783-private.h:291:
+#define MC13783_ADC0_CHRGICON		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#822: FILE: include/linux/mfd/mc13783-private.h:292:
+#define MC13783_ADC0_BATICON		(1 << 2)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#823: FILE: include/linux/mfd/mc13783-private.h:293:
+#define MC13783_ADC0_RTHEN ^I^I(1 << 3)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#823: FILE: include/linux/mfd/mc13783-private.h:293:
+#define MC13783_ADC0_RTHEN 		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#824: FILE: include/linux/mfd/mc13783-private.h:294:
+#define MC13783_ADC0_DTHEN		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#825: FILE: include/linux/mfd/mc13783-private.h:295:
+#define MC13783_ADC0_UIDEN		(1 << 5)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#826: FILE: include/linux/mfd/mc13783-private.h:296:
+#define MC13783_ADC0_ADOUTEN ^I^I(1 << 6)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#826: FILE: include/linux/mfd/mc13783-private.h:296:
+#define MC13783_ADC0_ADOUTEN 		(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#827: FILE: include/linux/mfd/mc13783-private.h:297:
+#define MC13783_ADC0_ADOUTPER		(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#828: FILE: include/linux/mfd/mc13783-private.h:298:
+#define MC13783_ADC0_ADREFEN		(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#829: FILE: include/linux/mfd/mc13783-private.h:299:
+#define MC13783_ADC0_ADREFMODE		(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#830: FILE: include/linux/mfd/mc13783-private.h:300:
+#define MC13783_ADC0_TSMOD0		(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#831: FILE: include/linux/mfd/mc13783-private.h:301:
+#define MC13783_ADC0_TSMOD1		(1 << 13)

CHECK:BIT_MACRO: Prefer using the BIT macro
#832: FILE: include/linux/mfd/mc13783-private.h:302:
+#define MC13783_ADC0_TSMOD2		(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#833: FILE: include/linux/mfd/mc13783-private.h:303:
+#define MC13783_ADC0_CHRGRAWDIV		(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#834: FILE: include/linux/mfd/mc13783-private.h:304:
+#define MC13783_ADC0_ADINC1		(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#835: FILE: include/linux/mfd/mc13783-private.h:305:
+#define MC13783_ADC0_ADINC2		(1 << 17)

CHECK:BIT_MACRO: Prefer using the BIT macro
#836: FILE: include/linux/mfd/mc13783-private.h:306:
+#define MC13783_ADC0_WCOMP		(1 << 18)

CHECK:BIT_MACRO: Prefer using the BIT macro
#837: FILE: include/linux/mfd/mc13783-private.h:307:
+#define MC13783_ADC0_ADCBIS0		(1 << 23)

CHECK:BIT_MACRO: Prefer using the BIT macro
#839: FILE: include/linux/mfd/mc13783-private.h:309:
+#define MC13783_ADC1_ADEN		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#840: FILE: include/linux/mfd/mc13783-private.h:310:
+#define MC13783_ADC1_RAND		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#841: FILE: include/linux/mfd/mc13783-private.h:311:
+#define MC13783_ADC1_ADSEL		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#842: FILE: include/linux/mfd/mc13783-private.h:312:
+#define MC13783_ADC1_TRIGMASK		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#843: FILE: include/linux/mfd/mc13783-private.h:313:
+#define MC13783_ADC1_ADA10		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#844: FILE: include/linux/mfd/mc13783-private.h:314:
+#define MC13783_ADC1_ADA11		(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#845: FILE: include/linux/mfd/mc13783-private.h:315:
+#define MC13783_ADC1_ADA12		(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#846: FILE: include/linux/mfd/mc13783-private.h:316:
+#define MC13783_ADC1_ADA20		(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#847: FILE: include/linux/mfd/mc13783-private.h:317:
+#define MC13783_ADC1_ADA21		(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#848: FILE: include/linux/mfd/mc13783-private.h:318:
+#define MC13783_ADC1_ADA22		(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#849: FILE: include/linux/mfd/mc13783-private.h:319:
+#define MC13783_ADC1_ATO0		(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#850: FILE: include/linux/mfd/mc13783-private.h:320:
+#define MC13783_ADC1_ATO1		(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#851: FILE: include/linux/mfd/mc13783-private.h:321:
+#define MC13783_ADC1_ATO2		(1 << 13)

CHECK:BIT_MACRO: Prefer using the BIT macro
#852: FILE: include/linux/mfd/mc13783-private.h:322:
+#define MC13783_ADC1_ATO3		(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#853: FILE: include/linux/mfd/mc13783-private.h:323:
+#define MC13783_ADC1_ATO4		(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#854: FILE: include/linux/mfd/mc13783-private.h:324:
+#define MC13783_ADC1_ATO5		(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#855: FILE: include/linux/mfd/mc13783-private.h:325:
+#define MC13783_ADC1_ATO6		(1 << 17)

CHECK:BIT_MACRO: Prefer using the BIT macro
#856: FILE: include/linux/mfd/mc13783-private.h:326:
+#define MC13783_ADC1_ATO7		(1 << 18)

CHECK:BIT_MACRO: Prefer using the BIT macro
#857: FILE: include/linux/mfd/mc13783-private.h:327:
+#define MC13783_ADC1_ATOX		(1 << 19)

CHECK:BIT_MACRO: Prefer using the BIT macro
#858: FILE: include/linux/mfd/mc13783-private.h:328:
+#define MC13783_ADC1_ASC		(1 << 20)

CHECK:BIT_MACRO: Prefer using the BIT macro
#859: FILE: include/linux/mfd/mc13783-private.h:329:
+#define MC13783_ADC1_ADTRIGIGN		(1 << 21)

CHECK:BIT_MACRO: Prefer using the BIT macro
#860: FILE: include/linux/mfd/mc13783-private.h:330:
+#define MC13783_ADC1_ADONESHOT		(1 << 22)

CHECK:BIT_MACRO: Prefer using the BIT macro
#861: FILE: include/linux/mfd/mc13783-private.h:331:
+#define MC13783_ADC1_ADCBIS1		(1 << 23)

CHECK:BIT_MACRO: Prefer using the BIT macro
#866: FILE: include/linux/mfd/mc13783-private.h:336:
+#define MC13783_ADC2_ADD10		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#867: FILE: include/linux/mfd/mc13783-private.h:337:
+#define MC13783_ADC2_ADD11		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#868: FILE: include/linux/mfd/mc13783-private.h:338:
+#define MC13783_ADC2_ADD12		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#869: FILE: include/linux/mfd/mc13783-private.h:339:
+#define MC13783_ADC2_ADD13		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#870: FILE: include/linux/mfd/mc13783-private.h:340:
+#define MC13783_ADC2_ADD14		(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#871: FILE: include/linux/mfd/mc13783-private.h:341:
+#define MC13783_ADC2_ADD15		(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#872: FILE: include/linux/mfd/mc13783-private.h:342:
+#define MC13783_ADC2_ADD16		(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#873: FILE: include/linux/mfd/mc13783-private.h:343:
+#define MC13783_ADC2_ADD17		(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#874: FILE: include/linux/mfd/mc13783-private.h:344:
+#define MC13783_ADC2_ADD18		(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#875: FILE: include/linux/mfd/mc13783-private.h:345:
+#define MC13783_ADC2_ADD19		(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#876: FILE: include/linux/mfd/mc13783-private.h:346:
+#define MC13783_ADC2_ADD20		(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#877: FILE: include/linux/mfd/mc13783-private.h:347:
+#define MC13783_ADC2_ADD21		(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#878: FILE: include/linux/mfd/mc13783-private.h:348:
+#define MC13783_ADC2_ADD22		(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#879: FILE: include/linux/mfd/mc13783-private.h:349:
+#define MC13783_ADC2_ADD23		(1 << 17)

CHECK:BIT_MACRO: Prefer using the BIT macro
#880: FILE: include/linux/mfd/mc13783-private.h:350:
+#define MC13783_ADC2_ADD24		(1 << 18)

CHECK:BIT_MACRO: Prefer using the BIT macro
#881: FILE: include/linux/mfd/mc13783-private.h:351:
+#define MC13783_ADC2_ADD25		(1 << 19)

CHECK:BIT_MACRO: Prefer using the BIT macro
#882: FILE: include/linux/mfd/mc13783-private.h:352:
+#define MC13783_ADC2_ADD26		(1 << 20)

CHECK:BIT_MACRO: Prefer using the BIT macro
#883: FILE: include/linux/mfd/mc13783-private.h:353:
+#define MC13783_ADC2_ADD27		(1 << 21)

CHECK:BIT_MACRO: Prefer using the BIT macro
#884: FILE: include/linux/mfd/mc13783-private.h:354:
+#define MC13783_ADC2_ADD28		(1 << 22)

CHECK:BIT_MACRO: Prefer using the BIT macro
#885: FILE: include/linux/mfd/mc13783-private.h:355:
+#define MC13783_ADC2_ADD29		(1 << 23)

CHECK:BIT_MACRO: Prefer using the BIT macro
#887: FILE: include/linux/mfd/mc13783-private.h:357:
+#define MC13783_ADC3_WHIGH0		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#888: FILE: include/linux/mfd/mc13783-private.h:358:
+#define MC13783_ADC3_WHIGH1		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#889: FILE: include/linux/mfd/mc13783-private.h:359:
+#define MC13783_ADC3_WHIGH2		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#890: FILE: include/linux/mfd/mc13783-private.h:360:
+#define MC13783_ADC3_WHIGH3		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#891: FILE: include/linux/mfd/mc13783-private.h:361:
+#define MC13783_ADC3_WHIGH4		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#892: FILE: include/linux/mfd/mc13783-private.h:362:
+#define MC13783_ADC3_WHIGH5		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#893: FILE: include/linux/mfd/mc13783-private.h:363:
+#define MC13783_ADC3_ICID0		(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#894: FILE: include/linux/mfd/mc13783-private.h:364:
+#define MC13783_ADC3_ICID1		(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#895: FILE: include/linux/mfd/mc13783-private.h:365:
+#define MC13783_ADC3_ICID2		(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#896: FILE: include/linux/mfd/mc13783-private.h:366:
+#define MC13783_ADC3_WLOW0		(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#897: FILE: include/linux/mfd/mc13783-private.h:367:
+#define MC13783_ADC3_WLOW1		(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#898: FILE: include/linux/mfd/mc13783-private.h:368:
+#define MC13783_ADC3_WLOW2		(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#899: FILE: include/linux/mfd/mc13783-private.h:369:
+#define MC13783_ADC3_WLOW3		(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#900: FILE: include/linux/mfd/mc13783-private.h:370:
+#define MC13783_ADC3_WLOW4		(1 << 13)

CHECK:BIT_MACRO: Prefer using the BIT macro
#901: FILE: include/linux/mfd/mc13783-private.h:371:
+#define MC13783_ADC3_WLOW5		(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#902: FILE: include/linux/mfd/mc13783-private.h:372:
+#define MC13783_ADC3_ADCBIS2		(1 << 23)

CHECK:BIT_MACRO: Prefer using the BIT macro
#904: FILE: include/linux/mfd/mc13783-private.h:374:
+#define MC13783_ADC4_ADDBIS10		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#905: FILE: include/linux/mfd/mc13783-private.h:375:
+#define MC13783_ADC4_ADDBIS11		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#906: FILE: include/linux/mfd/mc13783-private.h:376:
+#define MC13783_ADC4_ADDBIS12		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#907: FILE: include/linux/mfd/mc13783-private.h:377:
+#define MC13783_ADC4_ADDBIS13		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#908: FILE: include/linux/mfd/mc13783-private.h:378:
+#define MC13783_ADC4_ADDBIS14		(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#909: FILE: include/linux/mfd/mc13783-private.h:379:
+#define MC13783_ADC4_ADDBIS15		(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#910: FILE: include/linux/mfd/mc13783-private.h:380:
+#define MC13783_ADC4_ADDBIS16		(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#911: FILE: include/linux/mfd/mc13783-private.h:381:
+#define MC13783_ADC4_ADDBIS17		(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#912: FILE: include/linux/mfd/mc13783-private.h:382:
+#define MC13783_ADC4_ADDBIS18		(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#913: FILE: include/linux/mfd/mc13783-private.h:383:
+#define MC13783_ADC4_ADDBIS19		(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#914: FILE: include/linux/mfd/mc13783-private.h:384:
+#define MC13783_ADC4_ADDBIS20		(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#915: FILE: include/linux/mfd/mc13783-private.h:385:
+#define MC13783_ADC4_ADDBIS21		(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#916: FILE: include/linux/mfd/mc13783-private.h:386:
+#define MC13783_ADC4_ADDBIS22		(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#917: FILE: include/linux/mfd/mc13783-private.h:387:
+#define MC13783_ADC4_ADDBIS23		(1 << 17)

CHECK:BIT_MACRO: Prefer using the BIT macro
#918: FILE: include/linux/mfd/mc13783-private.h:388:
+#define MC13783_ADC4_ADDBIS24		(1 << 18)

CHECK:BIT_MACRO: Prefer using the BIT macro
#919: FILE: include/linux/mfd/mc13783-private.h:389:
+#define MC13783_ADC4_ADDBIS25		(1 << 19)

CHECK:BIT_MACRO: Prefer using the BIT macro
#920: FILE: include/linux/mfd/mc13783-private.h:390:
+#define MC13783_ADC4_ADDBIS26		(1 << 20)

CHECK:BIT_MACRO: Prefer using the BIT macro
#921: FILE: include/linux/mfd/mc13783-private.h:391:
+#define MC13783_ADC4_ADDBIS27		(1 << 21)

CHECK:BIT_MACRO: Prefer using the BIT macro
#922: FILE: include/linux/mfd/mc13783-private.h:392:
+#define MC13783_ADC4_ADDBIS28		(1 << 22)

CHECK:BIT_MACRO: Prefer using the BIT macro
#923: FILE: include/linux/mfd/mc13783-private.h:393:
+#define MC13783_ADC4_ADDBIS29		(1 << 23)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#933: FILE: include/linux/mfd/mc13783.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#950: FILE: include/linux/mfd/mc13783.h:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#951: FILE: include/linux/mfd/mc13783.h:19:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:BIT_MACRO: Prefer using the BIT macro
#972: FILE: include/linux/mfd/mc13783.h:40:
+#define MC13783_USE_TOUCHSCREEN (1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#973: FILE: include/linux/mfd/mc13783.h:41:
+#define MC13783_USE_CODEC	(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#974: FILE: include/linux/mfd/mc13783.h:42:
+#define MC13783_USE_ADC		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#975: FILE: include/linux/mfd/mc13783.h:43:
+#define MC13783_USE_RTC		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#976: FILE: include/linux/mfd/mc13783.h:44:
+#define MC13783_USE_REGULATOR	(1 << 4)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#979: FILE: include/linux/mfd/mc13783.h:47:
+int mc13783_adc_do_conversion(struct mc13783 *mc13783, unsigned int mode,
+		unsigned int channel, unsigned int *sample);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000085466.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 24 warnings, 237 checks, 930 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000085466.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
