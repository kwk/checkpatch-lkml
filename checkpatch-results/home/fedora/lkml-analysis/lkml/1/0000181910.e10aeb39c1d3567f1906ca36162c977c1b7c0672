WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
Add disable_kprobe() and enable_kprobe() to disable/enable kprobes temporarily.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#97: FILE: include/linux/kprobes.h:344:
 }
+static inline int disable_kprobe(struct kprobe *kp)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#99: FILE: include/linux/kprobes.h:346:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#101: FILE: include/linux/kprobes.h:348:
+}
+static inline int enable_kprobe(struct kprobe *kp)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#103: FILE: include/linux/kprobes.h:350:
+	return -ENOSYS;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#133: FILE: kernel/kprobes.c:525:
+	BUG_ON(kprobe_gone(ap) || kprobe_gone(p));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!old_p"
#254: FILE: kernel/kprobes.c:777:
+	if (old_p == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#297: FILE: kernel/kprobes.c:1262:
+		seq_printf(pi, "%p  %s  %s+0x%x  %s %s%s\n",
+			p->addr, kprobe_type, sym, offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: kernel/kprobes.c:1269:
+		seq_printf(pi, "%p  %s  %p %s%s\n",
+			p->addr, kprobe_type, p->addr,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p"
#327: FILE: kernel/kprobes.c:1347:
+	if (unlikely(p == NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p"
#359: FILE: kernel/kprobes.c:1379:
+	if (unlikely(p == NULL)) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000181910.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 7 checks, 378 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000181910.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
