CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mm"
#59: FILE: arch/um/kernel/skas/uaccess.c:22:
+	if (mm == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pte == NULL'
#100: FILE: arch/um/kernel/skas/uaccess.c:45:
+	if ((pte == NULL) || !pte_present(*pte) ||
+	    (is_write && !pte_write(*pte))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pte"
#100: FILE: arch/um/kernel/skas/uaccess.c:45:
+	if ((pte == NULL) || !pte_present(*pte) ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pte"
#128: FILE: arch/um/kernel/skas/uaccess.c:66:
+	if (pte == NULL)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#145: FILE: include/asm-um/pgtable.h:327:
+extern pte_t *virt_to_pte(struct mm_struct *mm, unsigned long addr);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000356728.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 0 warnings, 5 checks, 102 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000356728.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
