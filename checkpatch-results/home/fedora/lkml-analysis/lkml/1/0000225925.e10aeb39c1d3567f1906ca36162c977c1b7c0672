CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'timeout_msec != 0'
#136: FILE: fs/buffer.c:216:
+		if ((delayed_work_pending(&bdev->bd_fsfreeze_timeout))
+				|| (timeout_msec != 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#137: FILE: fs/buffer.c:217:
+		if ((delayed_work_pending(&bdev->bd_fsfreeze_timeout))
+				|| (timeout_msec != 0))

CHECK:BRACES: Unbalanced braces around else statement
#139: FILE: fs/buffer.c:219:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#176: FILE: fs/buffer.c:291:
+int thaw_bdev_core(struct block_device *bdev,
+				struct super_block *sb, int del_timeout_task)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#210: FILE: fs/ioctl.c:144:
+static int ioctl_freeze(struct file *filp, int __user *argp)
                                      ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#228: FILE: fs/ioctl.c:167:
+	if (timeout_sec < 0 || timeout_sec > UINT_MAX/1000)
 	                                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#251: FILE: fs/ioctl.c:202:
+ioctl_freeze_reset_timeout(struct file *filp, int __user *argp)
                                         ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bdev"
#263: FILE: fs/ioctl.c:214:
+	if (bdev == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#271: FILE: fs/ioctl.c:222:
+	if (timeout_sec <= 1 || timeout_sec > UINT_MAX/1000)
 	                                              ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#299: FILE: fs/ioctl.c:285:
+		error = ioctl_freeze(filp, argp);
 		                     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#307: FILE: fs/ioctl.c:293:
+		error = ioctl_freeze_reset_timeout(filp, argp);
 		                                   ^^^^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct block_device *' should also have an identifier name
#380: FILE: include/linux/buffer_head.h:172:
+struct super_block *freeze_bdev(struct block_device *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct block_device *' should also have an identifier name
#383: FILE: include/linux/buffer_head.h:175:
+int thaw_bdev_core(struct block_device *, struct super_block *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#383: FILE: include/linux/buffer_head.h:175:
+int thaw_bdev_core(struct block_device *, struct super_block *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#383: FILE: include/linux/buffer_head.h:175:
+int thaw_bdev_core(struct block_device *, struct super_block *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#420: FILE: include/linux/fs.h:2167:
+extern void add_fsfreeze_timeout(struct block_device *bdev,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#421: FILE: include/linux/fs.h:2168:
+extern void add_fsfreeze_timeout(struct block_device *bdev,
+				unsigned int timeout_msec);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#422: FILE: include/linux/fs.h:2169:
+extern void fsfreeze_timeout(struct work_struct *work);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000225925.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 10 checks, 301 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000225925.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
