WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#83: FILE: drivers/net/Kconfig:850:
+config BFIN_MAC_USE_L1
+	bool "Use L1 memory for rx/tx packets"
+	depends on BFIN_MAC && BF537
+	default y
+	help
+	  To get maximum network performace, you should use L1 memory as rx/tx buffers.
+	  Say N here if you want to reserve L1 memory for other uses.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:TYPO_SPELLING: 'performace' may be misspelled - perhaps 'performance'?
#88: FILE: drivers/net/Kconfig:855:
+	  To get maximum network performace, you should use L1 memory as rx/tx buffers.
 	                         ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#109: FILE: drivers/net/Kconfig:876:
+config BFIN_MAC_RMII
+	bool "RMII PHY Interface (EXPERIMENTAL)"
+	depends on BFIN_MAC && EXPERIMENTAL
+	default n
+	help
+	  Use Reduced PHY MII Interface
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#136: FILE: drivers/net/bfin_mac.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#137: FILE: drivers/net/bfin_mac.c:2:
+ * File:         drivers/net/bfin_mac.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#161: FILE: drivers/net/bfin_mac.c:26:
+ * If not, write to the Free Software Foundation,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#162: FILE: drivers/net/bfin_mac.c:27:
+ * 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#189: FILE: drivers/net/bfin_mac.c:54:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/delay.h> instead of <asm/delay.h>
#196: FILE: drivers/net/bfin_mac.c:61:
+#include <asm/delay.h>

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#211: FILE: drivers/net/bfin_mac.c:76:
+# define bfin_mac_free(dma_handle, ptr)    dma_free_coherent(NULL, sizeof(*ptr), ptr, dma_handle)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'ptr' may be better as '(ptr)' to avoid precedence issues
#211: FILE: drivers/net/bfin_mac.c:76:
+# define bfin_mac_free(dma_handle, ptr)    dma_free_coherent(NULL, sizeof(*ptr), ptr, dma_handle)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tx_desc"
#242: FILE: drivers/net/bfin_mac.c:107:
+	if (tx_desc == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rx_desc"
#249: FILE: drivers/net/bfin_mac.c:114:
+	if (rx_desc == NULL)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#254: FILE: drivers/net/bfin_mac.c:119:
+	for (i = 0; i < CONFIG_BFIN_TX_DESC_NUM; i++) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tmp_desc_tx->desc_b
#270: FILE: drivers/net/bfin_mac.c:135:
+		tmp_desc_tx->desc_a.next_dma_desc = &(tmp_desc_tx->desc_b);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tmp_desc_tx->status
#273: FILE: drivers/net/bfin_mac.c:138:
+		    (unsigned long)(&(tmp_desc_tx->status));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tmp_desc_tx->desc_a
#282: FILE: drivers/net/bfin_mac.c:147:
+		tx_list_tail->desc_b.next_dma_desc = &(tmp_desc_tx->desc_a);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tx_list_head->desc_a
#288: FILE: drivers/net/bfin_mac.c:153:
+	tx_list_tail->desc_b.next_dma_desc = &(tx_list_head->desc_a);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#293: FILE: drivers/net/bfin_mac.c:158:
+	for (i = 0; i < CONFIG_BFIN_RX_DESC_NUM; i++) {
+

WARNING:TYPO_SPELLING: 'allocat' may be misspelled - perhaps 'allocate'?
#301: FILE: drivers/net/bfin_mac.c:166:
+		/* allocat a new skb for next time receive */
 		   ^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#304: FILE: drivers/net/bfin_mac.c:169:
+			printk(KERN_NOTICE CARDNAME

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#304: FILE: drivers/net/bfin_mac.c:169:
+		if (!new_skb) {
+			printk(KERN_NOTICE CARDNAME

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tmp_desc_rx->desc_b
#319: FILE: drivers/net/bfin_mac.c:184:
+		tmp_desc_rx->desc_a.next_dma_desc = &(tmp_desc_rx->desc_b);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tmp_desc_rx->status
#322: FILE: drivers/net/bfin_mac.c:187:
+		    (unsigned long)(&(tmp_desc_rx->status));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around tmp_desc_rx->desc_a
#330: FILE: drivers/net/bfin_mac.c:195:
+		rx_list_tail->desc_b.next_dma_desc = &(tmp_desc_rx->desc_a);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around rx_list_head->desc_a
#336: FILE: drivers/net/bfin_mac.c:201:
+	rx_list_tail->desc_b.next_dma_desc = &(rx_list_head->desc_a);

WARNING:INDENTED_LABEL: labels should not be indented
#341: FILE: drivers/net/bfin_mac.c:206:
+      init_error:

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#343: FILE: drivers/net/bfin_mac.c:208:
+	printk(KERN_ERR CARDNAME ": kmalloc failed\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tx_desc"
#356: FILE: drivers/net/bfin_mac.c:221:
+	if (tx_desc != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tmp_desc_tx"
#359: FILE: drivers/net/bfin_mac.c:224:
+			if (tmp_desc_tx != NULL) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#365: FILE: drivers/net/bfin_mac.c:230:
+
+			}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rx_desc"
#371: FILE: drivers/net/bfin_mac.c:236:
+	if (rx_desc != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tmp_desc_rx"
#374: FILE: drivers/net/bfin_mac.c:239:
+			if (tmp_desc_rx != NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#393: FILE: drivers/net/bfin_mac.c:258:
+^I/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#394: FILE: drivers/net/bfin_mac.c:259:
+^I * FER reg bug work-around $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#394: FILE: drivers/net/bfin_mac.c:259:
+	/* 
+	 * FER reg bug work-around 

WARNING:BRACES: braces {} are not necessary for single statement blocks
#414: FILE: drivers/net/bfin_mac.c:279:
+	while ((bfin_read_EMAC_STAADD()) & STABUSY) {
+	};

CHECK:CAMELCASE: Avoid CamelCase: <PHYAddr>
#419: FILE: drivers/net/bfin_mac.c:284:
+static u16 read_phy_reg(u16 PHYAddr, u16 RegAddr)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <RegAddr>
#419: FILE: drivers/net/bfin_mac.c:284:
+static u16 read_phy_reg(u16 PHYAddr, u16 RegAddr)

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#422: FILE: drivers/net/bfin_mac.c:287:
+	bfin_write_EMAC_STAADD(SET_PHYAD(PHYAddr) | SET_REGAD(RegAddr) | STABUSY);	/* read mode */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#425: FILE: drivers/net/bfin_mac.c:290:
+	return (u16) bfin_read_EMAC_STADAT();

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Data>
#429: FILE: drivers/net/bfin_mac.c:294:
+static void raw_write_phy_reg(u16 PHYAddr, u16 RegAddr, u32 Data)

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#433: FILE: drivers/net/bfin_mac.c:298:
+	bfin_write_EMAC_STAADD(SET_PHYAD(PHYAddr) | SET_REGAD(RegAddr) | STAOP | STABUSY);	/* write mode */

WARNING:TYPO_SPELLING: 'settting' may be misspelled - perhaps 'setting'?
#451: FILE: drivers/net/bfin_mac.c:316:
+	pr_debug("start settting up phy\n");
 	                ^^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <PhyAddr>
#457: FILE: drivers/net/bfin_mac.c:322:
+	raw_write_phy_reg(lp->PhyAddr, PHYREG_MODECTL, 0x8000);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#460: FILE: drivers/net/bfin_mac.c:325:
+	udelay(500);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:CAMELCASE: Avoid CamelCase: <Negotiate>
#470: FILE: drivers/net/bfin_mac.c:335:
+	if (lp->Negotiate) {

CHECK:CAMELCASE: Avoid CamelCase: <FullDuplex>
#473: FILE: drivers/net/bfin_mac.c:338:
+		if (lp->FullDuplex) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#473: FILE: drivers/net/bfin_mac.c:338:
+		if (lp->FullDuplex) {
[...]
+		} else {
[...]

CHECK:CAMELCASE: Avoid CamelCase: <Port10>
#478: FILE: drivers/net/bfin_mac.c:343:
+		if (!lp->Port10) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#478: FILE: drivers/net/bfin_mac.c:343:
+		if (!lp->Port10) {
[...]
+		} else {
[...]

CHECK:CAMELCASE: Avoid CamelCase: <Loopback>
#485: FILE: drivers/net/bfin_mac.c:350:
+	if (lp->Loopback) {

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#487: FILE: drivers/net/bfin_mac.c:352:
+#if 0

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#493: FILE: drivers/net/bfin_mac.c:358:
+	udelay(500);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#498: FILE: drivers/net/bfin_mac.c:363:
+	if ((read_phy_reg(lp->PhyAddr, PHYREG_PHYID1) == 0x7)
+	    && ((read_phy_reg(lp->PhyAddr, PHYREG_PHYID2) & 0xfff0) == 0xC0A0)) {

WARNING:TYPO_SPELLING: 'reqest' may be misspelled - perhaps 'request'?
#499: FILE: drivers/net/bfin_mac.c:364:
+		/* we have SMSC PHY so reqest interrupt on link down condition */
 		                       ^^^^^^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#504: FILE: drivers/net/bfin_mac.c:369:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#546: FILE: drivers/net/bfin_mac.c:411:
+			printk(KERN_NOTICE CARDNAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#559: FILE: drivers/net/bfin_mac.c:424:
+		printk(KERN_INFO CARDNAME ": Network is set to half duplex\n");

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#568: FILE: drivers/net/bfin_mac.c:433:
+#if 0

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#586: FILE: drivers/net/bfin_mac.c:451:
+void setup_mac_addr(u8 * mac_addr)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#589: FILE: drivers/net/bfin_mac.c:454:
+	bfin_write_EMAC_ADDRLO(*(u32 *) & mac_addr[0]);

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#589: FILE: drivers/net/bfin_mac.c:454:
+	bfin_write_EMAC_ADDRLO(*(u32 *) & mac_addr[0]);
 	                                ^

CHECK:SPACING: No space is necessary after a cast
#590: FILE: drivers/net/bfin_mac.c:455:
+	bfin_write_EMAC_ADDRHI(*(u16 *) & mac_addr[4]);

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#590: FILE: drivers/net/bfin_mac.c:455:
+	bfin_write_EMAC_ADDRHI(*(u16 *) & mac_addr[4]);
 	                                ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#596: FILE: drivers/net/bfin_mac.c:461:
+	if (tx_list_head->status.status_word != 0
+	    && current_tx_ptr != tx_list_head) {

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#604: FILE: drivers/net/bfin_mac.c:469:
+			udelay(10);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#606: FILE: drivers/net/bfin_mac.c:471:
+			if (tx_list_head->status.status_word != 0
+			    || !(bfin_read_DMA2_IRQ_STATUS() & 0x08)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#610: FILE: drivers/net/bfin_mac.c:475:
+		if (tx_list_head->status.status_word != 0) {
+			goto adjust_head;
+		}

WARNING:INDENTED_LABEL: labels should not be indented
#617: FILE: drivers/net/bfin_mac.c:482:
+      adjust_head:

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#625: FILE: drivers/net/bfin_mac.c:490:
+			printk(KERN_ERR CARDNAME

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#630: FILE: drivers/net/bfin_mac.c:495:
+	} while (tx_list_head->status.status_word != 0
+		 && current_tx_ptr != tx_list_head);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#633: FILE: drivers/net/bfin_mac.c:498:
+
+}

WARNING:LONG_LINE_COMMENT: line length of 113 exceeds 100 columns
#641: FILE: drivers/net/bfin_mac.c:506:
+	/* Is skb->data always 16-bit aligned? Do we need to memcpy((char *)(tail->packet + 2),skb->data,len)? */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'skb->data'
#642: FILE: drivers/net/bfin_mac.c:507:
+	if ((((unsigned int)(skb->data)) & 0x02) == 2) {

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#647: FILE: drivers/net/bfin_mac.c:512:
+		blackfin_dcache_flush_range(data, (data + (skb->len)) + 2);	/* this is important! */

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'current_tx_ptr->packet'
#659: FILE: drivers/net/bfin_mac.c:524:
+		blackfin_dcache_flush_range((unsigned int)current_tx_ptr->
+					    packet,

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'current_tx_ptr->packet'
#661: FILE: drivers/net/bfin_mac.c:526:
+					    (unsigned int)(current_tx_ptr->
+							   packet + skb->len) +

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around current_tx_ptr->desc_a
#671: FILE: drivers/net/bfin_mac.c:536:
+		bfin_write_DMA2_NEXT_DESC_PTR(&(current_tx_ptr->desc_a));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around current_tx_ptr->desc_a.config
#673: FILE: drivers/net/bfin_mac.c:538:
+		bfin_write_DMA2_CONFIG(*((unsigned short *)(&(current_tx_ptr->desc_a.config))));

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#675: FILE: drivers/net/bfin_mac.c:540:
+		bfin_write_EMAC_OPMODE(bfin_read_EMAC_OPMODE() | TE);
 		                                                 ^^

WARNING:INDENTED_LABEL: labels should not be indented
#678: FILE: drivers/net/bfin_mac.c:543:
+      out:

WARNING:TYPO_SPELLING: 'allocat' may be misspelled - perhaps 'allocate'?
#693: FILE: drivers/net/bfin_mac.c:558:
+	/* allocat a new skb for next time receive */
 	   ^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#697: FILE: drivers/net/bfin_mac.c:562:
+		printk(KERN_NOTICE CARDNAME

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#707: FILE: drivers/net/bfin_mac.c:572:
+#if 0

WARNING:LINE_SPACING: Missing a blank line after declarations
#709: FILE: drivers/net/bfin_mac.c:574:
+	int i;
+	if (len >= 64) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#710: FILE: drivers/net/bfin_mac.c:575:
+		for (i=0;i<len;i++) {
 		      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#710: FILE: drivers/net/bfin_mac.c:575:
+		for (i=0;i<len;i++) {
 		        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#710: FILE: drivers/net/bfin_mac.c:575:
+		for (i=0;i<len;i++) {
 		          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#710: FILE: drivers/net/bfin_mac.c:575:
+		for (i=0;i<len;i++) {
 		              ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#711: FILE: drivers/net/bfin_mac.c:576:
+			printk("%.2x-",((unsigned char *)pkt)[i]);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#711: FILE: drivers/net/bfin_mac.c:576:
+			printk("%.2x-",((unsigned char *)pkt)[i]);
 			              ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#712: FILE: drivers/net/bfin_mac.c:577:
+			if (((i%8)==0) && (i!=0)) printk("\n");

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#712: FILE: drivers/net/bfin_mac.c:577:
+			if (((i%8)==0) && (i!=0)) printk("\n");
 			       ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#712: FILE: drivers/net/bfin_mac.c:577:
+			if (((i%8)==0) && (i!=0)) printk("\n");
 			          ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#712: FILE: drivers/net/bfin_mac.c:577:
+			if (((i%8)==0) && (i!=0)) printk("\n");
 			                    ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i!=0'
#712: FILE: drivers/net/bfin_mac.c:577:
+			if (((i%8)==0) && (i!=0)) printk("\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#712: FILE: drivers/net/bfin_mac.c:577:
+			if (((i%8)==0) && (i!=0)) printk("\n");

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#714: FILE: drivers/net/bfin_mac.c:579:
+	printk("\n");

WARNING:INDENTED_LABEL: labels should not be indented
#737: FILE: drivers/net/bfin_mac.c:602:
+      out:

WARNING:INDENTED_LABEL: labels should not be indented
#747: FILE: drivers/net/bfin_mac.c:612:
+      get_one_packet:

WARNING:INDENTED_LABEL: labels should not be indented
#760: FILE: drivers/net/bfin_mac.c:625:
+      real_rx:

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#781: FILE: drivers/net/bfin_mac.c:646:
+	opmode &= (~TE);
 	            ^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#787: FILE: drivers/net/bfin_mac.c:652:
+/*
+ * Enable Interrupts, Receive, and Transmit

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#793: FILE: drivers/net/bfin_mac.c:658:
+	pr_debug("%s: %s\n", dev->name, __FUNCTION__);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around rx_list_head->desc_a
#796: FILE: drivers/net/bfin_mac.c:661:
+	bfin_write_DMA1_NEXT_DESC_PTR(&(rx_list_head->desc_a));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around rx_list_head->desc_a.config
#799: FILE: drivers/net/bfin_mac.c:664:
+				 *)(&(rx_list_head->desc_a.config))));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#806: FILE: drivers/net/bfin_mac.c:671:
+	/* ASTP   : Enable Automatic Pad Stripping
+	   PR     : Promiscuous Mode for test

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#810: FILE: drivers/net/bfin_mac.c:675:
+	   RE     : Receiver Enable */

WARNING:TYPO_SPELLING: 'TE' may be misspelled - perhaps 'THE'?
#821: FILE: drivers/net/bfin_mac.c:686:
+	opmode |= TE;
 	          ^^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#833: FILE: drivers/net/bfin_mac.c:698:
+	pr_debug("%s: %s\n", dev->name, __FUNCTION__);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#848: FILE: drivers/net/bfin_mac.c:713:
+/*
+ * Get the current statistics.

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#856: FILE: drivers/net/bfin_mac.c:721:
+	pr_debug("%s: %s\n", dev->name, __FUNCTION__);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#862: FILE: drivers/net/bfin_mac.c:727:
+/*
+ * This routine will, depending on the values passed to it,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#872: FILE: drivers/net/bfin_mac.c:737:
+		printk(KERN_INFO "%s: set to promisc mode\n", dev->name);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#892: FILE: drivers/net/bfin_mac.c:757:
+/*
+ * this puts the device in an inactive state

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#904: FILE: drivers/net/bfin_mac.c:769:
+/*
+ * Open and Initialize the interface

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#910: FILE: drivers/net/bfin_mac.c:775:
+	pr_debug("%s: %s\n", dev->name, __FUNCTION__);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#913: FILE: drivers/net/bfin_mac.c:778:
+	/*
+	 * Check that the address is valid.  If its not, refuse

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#918: FILE: drivers/net/bfin_mac.c:783:
+		printk(KERN_WARNING CARDNAME ": no valid ethernet hw addr\n");

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#938: FILE: drivers/net/bfin_mac.c:803:
+/*
+ *

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#945: FILE: drivers/net/bfin_mac.c:810:
+	pr_debug("%s: %s\n", dev->name, __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#946: FILE: drivers/net/bfin_mac.c:811:
+^I$

CHECK:SPACING: No space is necessary after a cast
#965: FILE: drivers/net/bfin_mac.c:830:
+	*(u32 *) (&(dev->dev_addr[0])) = bfin_read_EMAC_ADDRLO();

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around dev->dev_addr[0]
#965: FILE: drivers/net/bfin_mac.c:830:
+	*(u32 *) (&(dev->dev_addr[0])) = bfin_read_EMAC_ADDRLO();

CHECK:SPACING: No space is necessary after a cast
#966: FILE: drivers/net/bfin_mac.c:831:
+	*(u16 *) (&(dev->dev_addr[4])) = (u16) bfin_read_EMAC_ADDRHI();

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around dev->dev_addr[4]
#966: FILE: drivers/net/bfin_mac.c:831:
+	*(u16 *) (&(dev->dev_addr[4])) = (u16) bfin_read_EMAC_ADDRHI();

WARNING:TYPO_SPELLING: 'proble' may be misspelled - perhaps 'probe'?
#969: FILE: drivers/net/bfin_mac.c:834:
+	/*todo: how to proble? which is revision_register */
 	               ^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#980: FILE: drivers/net/bfin_mac.c:845:
+		/* Grab the MAC from the board somehow - this is done in the
+		   arch/blackfin/boards/bf537/boardname.c */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#980: FILE: drivers/net/bfin_mac.c:845:
+		   arch/blackfin/boards/bf537/boardname.c */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#985: FILE: drivers/net/bfin_mac.c:850:
+	if (!is_valid_ether_addr(dev->dev_addr)) {
+		random_ether_addr(dev->dev_addr);
+	}

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1000: FILE: drivers/net/bfin_mac.c:865:
+#if 0

CHECK:CAMELCASE: Avoid CamelCase: <FlowControl>
#1013: FILE: drivers/net/bfin_mac.c:878:
+	lp->FlowControl = 0;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1024: FILE: drivers/net/bfin_mac.c:889:
+		printk(KERN_WARNING CARDNAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1036: FILE: drivers/net/bfin_mac.c:901:
+		printk(KERN_INFO "Blackfin mac net device registered\n");

WARNING:INDENTED_LABEL: labels should not be indented
#1039: FILE: drivers/net/bfin_mac.c:904:
+      err_out:

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1050: FILE: drivers/net/bfin_mac.c:915:
+		printk(KERN_WARNING CARDNAME ": could not allocate device\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1057: FILE: drivers/net/bfin_mac.c:922:
+		printk(KERN_WARNING CARDNAME ": not found\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1122: FILE: drivers/net/bfin_mac.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1123: FILE: drivers/net/bfin_mac.h:2:
+ * File:         drivers/net/bfin_mac.h

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1147: FILE: drivers/net/bfin_mac.h:26:
+ * If not, write to the Free Software Foundation,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1148: FILE: drivers/net/bfin_mac.h:27:
+ * 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1151: FILE: drivers/net/bfin_mac.h:30:
+/* $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1152: FILE: drivers/net/bfin_mac.h:31:
+/* 
+ * PHY REGISTER NAMES

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1179: FILE: drivers/net/bfin_mac.h:58:
+typedef struct _DMA_CONFIG {

WARNING:TYPO_SPELLING: 'Tranfer' may be misspelled - perhaps 'Transfer'?
#1182: FILE: drivers/net/bfin_mac.h:61:
+	unsigned short b_WDSIZE:2;	/* Bit 2 & 3 : DMA Tranfer Word size */
 	                          	                   ^^^^^^^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1198: FILE: drivers/net/bfin_mac.h:77:
+#if 0

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1200: FILE: drivers/net/bfin_mac.h:79:
+  unsigned short ip_hdr_chksum;         /* the IP header checksum */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1201: FILE: drivers/net/bfin_mac.h:80:
+  unsigned short ip_payload_chksum;     /* the IP header and payload checksum */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1202: FILE: drivers/net/bfin_mac.h:81:
+  unsigned long  status_word;           /* the frame status word */$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1224: FILE: drivers/net/bfin_mac.h:103:
+	volatile struct status_area_rx status;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1233: FILE: drivers/net/bfin_mac.h:112:
+	volatile unsigned char packet[1560];

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1234: FILE: drivers/net/bfin_mac.h:113:
+	volatile struct status_area_tx status;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1239: FILE: drivers/net/bfin_mac.h:118:
+	/*
+	 * these are things that the kernel wants me to keep, so users

CHECK:CAMELCASE: Avoid CamelCase: <FlowEnabled>
#1247: FILE: drivers/net/bfin_mac.h:126:
+	int FlowEnabled;	/* record if data flow is active */

CHECK:CAMELCASE: Avoid CamelCase: <EtherIntIVG>
#1248: FILE: drivers/net/bfin_mac.h:127:
+	int EtherIntIVG;	/* IVG for the ethernet interrupt */

CHECK:CAMELCASE: Avoid CamelCase: <OpMode>
#1252: FILE: drivers/net/bfin_mac.h:131:
+	int OpMode;		/* set these bits n the OPMODE regs */

CHECK:CAMELCASE: Avoid CamelCase: <GenChksums>
#1254: FILE: drivers/net/bfin_mac.h:133:
+	int GenChksums;		/* IP checksums to be calculated */

CHECK:CAMELCASE: Avoid CamelCase: <NoRcveLnth>
#1255: FILE: drivers/net/bfin_mac.h:134:
+	int NoRcveLnth;		/* dont insert recv length at start of buffer */

CHECK:CAMELCASE: Avoid CamelCase: <StripPads>
#1256: FILE: drivers/net/bfin_mac.h:135:
+	int StripPads;		/* remove trailing pad bytes */

CHECK:CAMELCASE: Avoid CamelCase: <Cache>
#1260: FILE: drivers/net/bfin_mac.h:139:
+	int Cache;		/* Buffers may be cached */

CHECK:CAMELCASE: Avoid CamelCase: <IntMask>
#1263: FILE: drivers/net/bfin_mac.h:142:
+	unsigned short IntMask;	/* interrupt mask */

CHECK:CAMELCASE: Avoid CamelCase: <Mac>
#1264: FILE: drivers/net/bfin_mac.h:143:
+	unsigned char Mac[6];	/* MAC address of the board */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1268: FILE: drivers/net/bfin_mac.h:147:
+extern void get_bf537_ether_addr(char *addr);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000461580.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 19 errors, 85 warnings, 60 checks, 1185 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000461580.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
