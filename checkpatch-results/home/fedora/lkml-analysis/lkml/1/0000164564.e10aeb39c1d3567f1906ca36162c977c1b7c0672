WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
Subject: [PATCH 1/7] [Target_Core_Mod]: Add hw_block_size and block_size device attributes

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#88: FILE: drivers/lio-core/target_core_device.c:1066:
+extern int se_dev_set_block_size (se_device_t *dev, u32 block_size)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#91: FILE: drivers/lio-core/target_core_device.c:1069:
+		printk(KERN_ERR "dev[%p]: Unable to change SE Device block_size"

WARNING:SPLIT_STRING: quoted string split across lines
#92: FILE: drivers/lio-core/target_core_device.c:1070:
+		printk(KERN_ERR "dev[%p]: Unable to change SE Device block_size"
+			" while dev_export_obj: %d count exists\n", dev,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'block_size != 512'
#97: FILE: drivers/lio-core/target_core_device.c:1075:
+	if ((block_size != 512) &&
+	    (block_size != 1024) &&
+	    (block_size != 2048) &&
+	    (block_size != 4096)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'block_size != 1024'
#97: FILE: drivers/lio-core/target_core_device.c:1075:
+	if ((block_size != 512) &&
+	    (block_size != 1024) &&
+	    (block_size != 2048) &&
+	    (block_size != 4096)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'block_size != 2048'
#97: FILE: drivers/lio-core/target_core_device.c:1075:
+	if ((block_size != 512) &&
+	    (block_size != 1024) &&
+	    (block_size != 2048) &&
+	    (block_size != 4096)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'block_size != 4096'
#97: FILE: drivers/lio-core/target_core_device.c:1075:
+	if ((block_size != 512) &&
+	    (block_size != 1024) &&
+	    (block_size != 2048) &&
+	    (block_size != 4096)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#101: FILE: drivers/lio-core/target_core_device.c:1079:
+		printk(KERN_ERR "dev[%p]: Illegal value for block_device: %u"

WARNING:SPLIT_STRING: quoted string split across lines
#102: FILE: drivers/lio-core/target_core_device.c:1080:
+		printk(KERN_ERR "dev[%p]: Illegal value for block_device: %u"
+			" for SE device, must be 512, 1024, 2048 or 4096\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#108: FILE: drivers/lio-core/target_core_device.c:1086:
+		printk(KERN_ERR "dev[%p]: Not allowed to change block_size for"

WARNING:SPLIT_STRING: quoted string split across lines
#109: FILE: drivers/lio-core/target_core_device.c:1087:
+		printk(KERN_ERR "dev[%p]: Not allowed to change block_size for"
+			" Physical Device, use for Linux/SCSI to change block_size"

WARNING:SPLIT_STRING: quoted string split across lines
#110: FILE: drivers/lio-core/target_core_device.c:1088:
+			" Physical Device, use for Linux/SCSI to change block_size"
+			" for underlying hardware\n", dev);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#115: FILE: drivers/lio-core/target_core_device.c:1093:
+	printk("dev[%p]: SE Device block_size changed to %u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#116: FILE: drivers/lio-core/target_core_device.c:1094:
+	printk("dev[%p]: SE Device block_size changed to %u\n",
+			dev, block_size);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#117: FILE: drivers/lio-core/target_core_device.c:1095:
+	return(0);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#131: FILE: drivers/lio-core/target_core_device.h:60:
+extern int se_dev_set_block_size (se_device_t *, u32);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#131: FILE: drivers/lio-core/target_core_device.h:60:
+extern int se_dev_set_block_size (se_device_t *, u32);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'se_device_t *' should also have an identifier name
#131: FILE: drivers/lio-core/target_core_device.h:60:
+extern int se_dev_set_block_size (se_device_t *, u32);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#131: FILE: drivers/lio-core/target_core_device.h:60:
+extern int se_dev_set_block_size (se_device_t *, u32);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000164564.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 13 warnings, 6 checks, 64 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000164564.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
