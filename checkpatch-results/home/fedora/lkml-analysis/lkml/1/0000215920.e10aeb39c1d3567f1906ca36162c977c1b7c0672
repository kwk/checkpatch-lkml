WARNING:REPEATED_WORD: Possible repeated word: 'the'
#43: 
Here is the the first working code for allowing configfs to handle

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#58: 
struct nameidata nd.path.dentry->d_sb == sysfs_sb.
                 ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'containg' may be misspelled - perhaps 'containing'?
#61: 
containg the symlink source from sysfs, the source link does not currently
^^^^^^^^

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Nicholas A. Bellinger'
#64: 
Signed-off-by: Nicholas A. Bellinger

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Nicholas A. Bellinger'
#104: 
Signed-off-by: Nicholas A. Bellinger

WARNING:BAD_SIGN_OFF: Duplicate signature
#104: 
Signed-off-by: Nicholas A. Bellinger

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#152: FILE: fs/configfs/symlink.c:43:
+extern struct super_block *sysfs_sb;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*sl)...) over kzalloc(sizeof(struct configfs_symlink)...)
#162: FILE: fs/configfs/symlink.c:91:
+	sl = kzalloc(sizeof(struct configfs_symlink), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*sl)...) over kzalloc(sizeof(struct configfs_symlink)...)
#191: FILE: fs/configfs/symlink.c:125:
+	sl = kzalloc(sizeof(struct configfs_symlink), GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: fs/configfs/symlink.c:134:
+^I^Iif (ret) { $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#229: FILE: fs/configfs/symlink.c:174:
+	 * Populate struct nameidata nd with Symlink SOURCE fs/ pointers..
 	                             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#231: FILE: fs/configfs/symlink.c:176:
+	if ((ret = path_lookup(symname, LOOKUP_FOLLOW|LOOKUP_DIRECTORY, &nd)) < 0)
 	                                                                 ^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#231: FILE: fs/configfs/symlink.c:176:
+	if ((ret = path_lookup(symname, LOOKUP_FOLLOW|LOOKUP_DIRECTORY, &nd)) < 0)
 	                                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#231: FILE: fs/configfs/symlink.c:176:
+	if ((ret = path_lookup(symname, LOOKUP_FOLLOW|LOOKUP_DIRECTORY, &nd)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#240: FILE: fs/configfs/symlink.c:182:
+	if (nd.path.dentry->d_sb == configfs_sb) {
 	    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#245: FILE: fs/configfs/symlink.c:187:
+		if (!(target_item = configfs_get_config_item(nd.path.dentry))) {
 		                                             ^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#245: FILE: fs/configfs/symlink.c:187:
+		if (!(target_item = configfs_get_config_item(nd.path.dentry))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#249: FILE: fs/configfs/symlink.c:191:
+		if (!(ret = type->ct_item_ops->allow_link(parent_item, target_item))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#258: FILE: fs/configfs/symlink.c:200:
+^I^I * Release reference to ConfigFS Symlink SOURCE from $

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#262: FILE: fs/configfs/symlink.c:204:
+//	} else if (nd.path.dentry->d_sb == sysfs_sb) {
   	           ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#265: FILE: fs/configfs/symlink.c:207:
+		struct sysfs_dirent *sd = (struct sysfs_dirent *)nd.path.dentry->d_fsdata;
 		                                                 ^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#275: FILE: fs/configfs/symlink.c:217:
+		printk("Using struct kobject: %s for symlink source, %s configfs destination\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#276: FILE: fs/configfs/symlink.c:218:
+		printk("Using struct kobject: %s for symlink source, %s configfs destination\n",
+				kobject_name(kobj), config_item_name(parent_item));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#278: FILE: fs/configfs/symlink.c:220:
+		if (!(ret = type->ct_item_ops->allow_link_kobject(parent_item, kobj))) {

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#306: FILE: fs/configfs/symlink.c:234:
+	path_put(&nd.path);
 	          ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#351: FILE: fs/configfs/symlink.c:286:
+		if (type && type->ct_item_ops &&
+		   type->ct_item_ops->drop_link_kobject)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000215920.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 13 warnings, 5 checks, 249 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000215920.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
