WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#61: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#66: FILE: fs/ocfs2/acl.c:1:
+/* -*- mode: c; c-basic-offset: 8; -*-

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#134: FILE: fs/ocfs2/acl.c:69:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#207: FILE: fs/ocfs2/acl.c:142:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#261: FILE: fs/ocfs2/acl.c:196:
+			mode_t mode = inode->i_mode;
+			ret = posix_acl_equiv_mode(acl, &mode);

CHECK:BRACES: braces {} should be used on all arms of this statement
#262: FILE: fs/ocfs2/acl.c:197:
+			if (ret < 0)
[...]
+			else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#264: FILE: fs/ocfs2/acl.c:199:
+				return ret;
+			else {

CHECK:BRACES: Unbalanced braces around else statement
#264: FILE: fs/ocfs2/acl.c:199:
+			else {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!acl"
#347: FILE: fs/ocfs2/acl.c:282:
+	if (acl == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: braces {} should be used on all arms of this statement
#390: FILE: fs/ocfs2/acl.c:325:
+	if (value) {
[...]
+	} else
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#392: FILE: fs/ocfs2/acl.c:327:
+		if (IS_ERR(acl))
[...]
+		else if (acl) {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#399: FILE: fs/ocfs2/acl.c:334:
+	} else

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#450: FILE: fs/ocfs2/acl.h:1:
+/* -*- mode: c; c-basic-offset: 8; -*-

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#512: FILE: fs/ocfs2/xattr.c:107:
+	[OCFS2_XATTR_INDEX_POSIX_ACL_ACCESS]
+					= &ocfs2_xattr_acl_access_handler,

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#514: FILE: fs/ocfs2/xattr.c:109:
+	[OCFS2_XATTR_INDEX_POSIX_ACL_DEFAULT]
+					= &ocfs2_xattr_acl_default_handler,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000191379.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 10 checks, 456 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000191379.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
