WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#87: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#92: FILE: drivers/isdn/mISDN/l1oip.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#104: FILE: drivers/isdn/mISDN/l1oip.h:13:
+/*
+#define REORDER_DEBUG

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#111: FILE: drivers/isdn/mISDN/l1oip.h:20:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#116: FILE: drivers/isdn/mISDN/l1oip.h:25:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#120: FILE: drivers/isdn/mISDN/l1oip.h:29:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#123: FILE: drivers/isdn/mISDN/l1oip.h:32:
+^Istruct dchannel       ^I*dch;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#124: FILE: drivers/isdn/mISDN/l1oip.h:33:
+^Istruct bchannel       ^I*bch;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#135: FILE: drivers/isdn/mISDN/l1oip.h:44:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#154: FILE: drivers/isdn/mISDN/l1oip.h:63:
+^Istruct timer_list ^Ikeep_tl;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#155: FILE: drivers/isdn/mISDN/l1oip.h:64:
+^Istruct timer_list ^Itimeout_tl;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#160: FILE: drivers/isdn/mISDN/l1oip.h:69:
+^Istruct socket ^I^I*socket;^I/* if set, socket is created */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#161: FILE: drivers/isdn/mISDN/l1oip.h:70:
+^Istruct completion ^Isocket_complete;/* completion of sock thread */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#163: FILE: drivers/isdn/mISDN/l1oip.h:72:
+^Ispinlock_t ^I^Isocket_lock;^I/* access sock outside thread */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#165: FILE: drivers/isdn/mISDN/l1oip.h:74:
+^Iu16^I ^I^Ilocalport;^I/* must always be set */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#166: FILE: drivers/isdn/mISDN/l1oip.h:75:
+^Iu16^I ^I^Iremoteport;^I/* must always be set */$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#176: FILE: drivers/isdn/mISDN/l1oip.h:85:
+extern int l1oip_law_to_4bit(u8 *data, int len, u8 *result, u32 *state);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#177: FILE: drivers/isdn/mISDN/l1oip.h:86:
+extern int l1oip_4bit_to_law(u8 *data, int len, u8 *result);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#178: FILE: drivers/isdn/mISDN/l1oip.h:87:
+extern int l1oip_alaw_to_ulaw(u8 *data, int len, u8 *result);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#179: FILE: drivers/isdn/mISDN/l1oip.h:88:
+extern int l1oip_ulaw_to_alaw(u8 *data, int len, u8 *result);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#180: FILE: drivers/isdn/mISDN/l1oip.h:89:
+extern void l1oip_4bit_free(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#181: FILE: drivers/isdn/mISDN/l1oip.h:90:
+extern int l1oip_4bit_alloc(int ulaw);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#189: FILE: drivers/isdn/mISDN/l1oip_codec.c:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#190: FILE: drivers/isdn/mISDN/l1oip_codec.c:2:
+/*
+

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#211: FILE: drivers/isdn/mISDN/l1oip_codec.c:23:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#212: FILE: drivers/isdn/mISDN/l1oip_codec.c:24:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#217: FILE: drivers/isdn/mISDN/l1oip_codec.c:29:
+/*
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#246: FILE: drivers/isdn/mISDN/l1oip_codec.c:58:
+
+

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#249: FILE: drivers/isdn/mISDN/l1oip_codec.c:61:
+static u8 alaw_to_ulaw[256] =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#286: FILE: drivers/isdn/mISDN/l1oip_codec.c:98:
+static u8 ulaw_to_alaw[256] =
+{

CHECK:LINE_SPACING: Please don't use multiple blank lines
#405: FILE: drivers/isdn/mISDN/l1oip_codec.c:217:
+
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#421: FILE: drivers/isdn/mISDN/l1oip_codec.c:233:
+		*result++ = table_com[(((*state)<<8)&0xff00) | (*data++)];
 		                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#421: FILE: drivers/isdn/mISDN/l1oip_codec.c:233:
+		*result++ = table_com[(((*state)<<8)&0xff00) | (*data++)];
 		                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#429: FILE: drivers/isdn/mISDN/l1oip_codec.c:241:
+		*result++ = table_com[(data[0]<<8) | (data[1])];
 		                              ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#456: FILE: drivers/isdn/mISDN/l1oip_codec.c:268:
+		*result++ = r>>8;
 		             ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#464: FILE: drivers/isdn/mISDN/l1oip_codec.c:276:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#494: FILE: drivers/isdn/mISDN/l1oip_codec.c:306:
+
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#536: FILE: drivers/isdn/mISDN/l1oip_codec.c:348:
+			table_com[(i1<<8) | i2] |= (c<<4);
 			             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#536: FILE: drivers/isdn/mISDN/l1oip_codec.c:348:
+			table_com[(i1<<8) | i2] |= (c<<4);
 			                             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#537: FILE: drivers/isdn/mISDN/l1oip_codec.c:349:
+			table_com[(i2<<8) | i1] |= c;
 			             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#552: FILE: drivers/isdn/mISDN/l1oip_codec.c:364:
+			table_dec[(i1<<4) | i2] |= (sample<<8);
 			             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#552: FILE: drivers/isdn/mISDN/l1oip_codec.c:364:
+			table_dec[(i1<<4) | i2] |= (sample<<8);
 			                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#553: FILE: drivers/isdn/mISDN/l1oip_codec.c:365:
+			table_dec[(i2<<4) | i1] |= sample;
 			             ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#562: FILE: drivers/isdn/mISDN/l1oip_codec.c:374:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#569: FILE: drivers/isdn/mISDN/l1oip_core.c:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#570: FILE: drivers/isdn/mISDN/l1oip_core.c:2:
+/*
+

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#588: FILE: drivers/isdn/mISDN/l1oip_core.c:20:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#589: FILE: drivers/isdn/mISDN/l1oip_core.c:21:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#616: FILE: drivers/isdn/mISDN/l1oip_core.c:48:
+	PRI: 1-30, 31-126 (126, because dchannel ist not counted here)
 	                                         ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'ressources' may be misspelled - perhaps 'resources'?
#617: FILE: drivers/isdn/mISDN/l1oip_core.c:49:
+	Also limited ressources are used for stack, resulting in less channels.
 	             ^^^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#650: FILE: drivers/isdn/mISDN/l1oip_core.c:82:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#664: FILE: drivers/isdn/mISDN/l1oip_core.c:96:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#708: FILE: drivers/isdn/mISDN/l1oip_core.c:140:
+
+

WARNING:TYPO_SPELLING: 'missmatch' may be misspelled - perhaps 'mismatch'?
#712: FILE: drivers/isdn/mISDN/l1oip_core.c:144:
+If version is missmatch, the frame must be ignored.
               ^^^^^^^^^

WARNING:TYPO_SPELLING: 'attacs' may be misspelled - perhaps 'attacks'?
#721: FILE: drivers/isdn/mISDN/l1oip_core.c:153:
+Additional ID to prevent Denial of Service attacs. Also it prevents hijacking
                                            ^^^^^^

WARNING:TYPO_SPELLING: 'arround' may be misspelled - perhaps 'around'?
#750: FILE: drivers/isdn/mISDN/l1oip_core.c:182:
+second. This causes a wrap arround each 8,192 seconds. There is no requirement
                            ^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#754: FILE: drivers/isdn/mISDN/l1oip_core.c:186:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#764: FILE: drivers/isdn/mISDN/l1oip_core.c:196:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#771: FILE: drivers/isdn/mISDN/l1oip_core.c:203:
+
+

WARNING:TYPO_SPELLING: 'usefull' may be misspelled - perhaps 'useful'?
#776: FILE: drivers/isdn/mISDN/l1oip_core.c:208:
+traffic will continue to the remote address. This is usefull for road warriors.
                                                      ^^^^^^^

WARNING:TYPO_SPELLING: 'otherwhise' may be misspelled - perhaps 'otherwise'?
#777: FILE: drivers/isdn/mISDN/l1oip_core.c:209:
+This feature only works with ID set, otherwhise it is highly unsecure.
                                      ^^^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#779: FILE: drivers/isdn/mISDN/l1oip_core.c:211:
+
+

WARNING:TYPO_SPELLING: 'wheter' may be misspelled - perhaps 'whether'?
#785: FILE: drivers/isdn/mISDN/l1oip_core.c:217:
+packet shall be sent to the socket, the hc->socket must be checked wheter not
                                                                    ^^^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#817: FILE: drivers/isdn/mISDN/l1oip_core.c:249:
+static u_int ip[MAX_CARDS*4];
                          ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#828: FILE: drivers/isdn/mISDN/l1oip_core.c:260:
+module_param_array(type, uint, NULL, S_IRUGO | S_IWUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#829: FILE: drivers/isdn/mISDN/l1oip_core.c:261:
+module_param_array(codec, uint, NULL, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#830: FILE: drivers/isdn/mISDN/l1oip_core.c:262:
+module_param_array(ip, uint, NULL, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#831: FILE: drivers/isdn/mISDN/l1oip_core.c:263:
+module_param_array(port, uint, NULL, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#832: FILE: drivers/isdn/mISDN/l1oip_core.c:264:
+module_param_array(remoteport, uint, NULL, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#833: FILE: drivers/isdn/mISDN/l1oip_core.c:265:
+module_param_array(ondemand, uint, NULL, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#834: FILE: drivers/isdn/mISDN/l1oip_core.c:266:
+module_param_array(limit, uint, NULL, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#835: FILE: drivers/isdn/mISDN/l1oip_core.c:267:
+module_param_array(id, uint, NULL, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#836: FILE: drivers/isdn/mISDN/l1oip_core.c:268:
+module_param(ulaw, uint, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#837: FILE: drivers/isdn/mISDN/l1oip_core.c:269:
+module_param(debug, uint, S_IRUGO | S_IWUSR);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#844: FILE: drivers/isdn/mISDN/l1oip_core.c:276:
+l1oip_socket_send(struct l1oip *hc, u8 localcodec, u8 channel, u32 chanmask,
+	u16 timebase, u8 *buf, int len)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#848: FILE: drivers/isdn/mISDN/l1oip_core.c:280:
+	u8 frame[len+32];
 	            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#853: FILE: drivers/isdn/mISDN/l1oip_core.c:285:
+		printk(KERN_DEBUG "%s: sending data to socket (len = %d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#854: FILE: drivers/isdn/mISDN/l1oip_core.c:286:
+		printk(KERN_DEBUG "%s: sending data to socket (len = %d)\n",
+			__func__, len);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#859: FILE: drivers/isdn/mISDN/l1oip_core.c:291:
+	if ((int)(hc->keep_tl.expires-jiffies) < 5*HZ) {
 	                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#859: FILE: drivers/isdn/mISDN/l1oip_core.c:291:
+	if ((int)(hc->keep_tl.expires-jiffies) < 5*HZ) {
 	                                          ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#859: FILE: drivers/isdn/mISDN/l1oip_core.c:291:
+	if ((int)(hc->keep_tl.expires-jiffies) < 5*HZ) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#861: FILE: drivers/isdn/mISDN/l1oip_core.c:293:
+		hc->keep_tl.expires = jiffies + L1OIP_KEEPALIVE*HZ;
 		                                               ^

CHECK:BRACES: Unbalanced braces around else statement
#863: FILE: drivers/isdn/mISDN/l1oip_core.c:295:
+	} else

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#864: FILE: drivers/isdn/mISDN/l1oip_core.c:296:
+		hc->keep_tl.expires = jiffies + L1OIP_KEEPALIVE*HZ;
 		                                               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#867: FILE: drivers/isdn/mISDN/l1oip_core.c:299:
+		printk(KERN_DEBUG "%s: resetting timer\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#872: FILE: drivers/isdn/mISDN/l1oip_core.c:304:
+			printk(KERN_DEBUG "%s: dropping frame, because remote "

WARNING:SPLIT_STRING: quoted string split across lines
#873: FILE: drivers/isdn/mISDN/l1oip_core.c:305:
+			printk(KERN_DEBUG "%s: dropping frame, because remote "
+				"IP is not set.\n", __func__);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#878: FILE: drivers/isdn/mISDN/l1oip_core.c:310:
+	*p++ = (L1OIP_VERSION<<6) /* version and coding */
 	                     ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#879: FILE: drivers/isdn/mISDN/l1oip_core.c:311:
+	     | (hc->pri?0x20:0x00) /* type */
 	               ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#879: FILE: drivers/isdn/mISDN/l1oip_core.c:311:
+	     | (hc->pri?0x20:0x00) /* type */
 	                    ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#880: FILE: drivers/isdn/mISDN/l1oip_core.c:312:
+	     | (hc->id?0x10:0x00) /* id */
 	              ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#880: FILE: drivers/isdn/mISDN/l1oip_core.c:312:
+	     | (hc->id?0x10:0x00) /* id */
 	                   ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#883: FILE: drivers/isdn/mISDN/l1oip_core.c:315:
+		*p++ = hc->id>>24; /* id */
 		             ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#884: FILE: drivers/isdn/mISDN/l1oip_core.c:316:
+		*p++ = hc->id>>16;
 		             ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#885: FILE: drivers/isdn/mISDN/l1oip_core.c:317:
+		*p++ = hc->id>>8;
 		             ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#888: FILE: drivers/isdn/mISDN/l1oip_core.c:320:
+	*p++ = (multi == 1)?0x80:0x00 + channel; /* m-flag, channel */
 	                   ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#888: FILE: drivers/isdn/mISDN/l1oip_core.c:320:
+	*p++ = (multi == 1)?0x80:0x00 + channel; /* m-flag, channel */
 	                        ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#891: FILE: drivers/isdn/mISDN/l1oip_core.c:323:
+	*p++ = timebase>>8; /* time base */
 	               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#901: FILE: drivers/isdn/mISDN/l1oip_core.c:333:
+			len = l1oip_law_to_4bit(buf, len, p,
+				&hc->chan[channel].codecstate);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#919: FILE: drivers/isdn/mISDN/l1oip_core.c:351:
+		printk(KERN_DEBUG "%s: sending packet to socket (len "

WARNING:SPLIT_STRING: quoted string split across lines
#920: FILE: drivers/isdn/mISDN/l1oip_core.c:352:
+		printk(KERN_DEBUG "%s: sending packet to socket (len "
+			"= %d)\n", __func__, len);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#933: FILE: drivers/isdn/mISDN/l1oip_core.c:365:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#939: FILE: drivers/isdn/mISDN/l1oip_core.c:371:
+l1oip_socket_recv(struct l1oip *hc, u8 remotecodec, u8 channel, u16 timebase,
+	u8 *buf, int len)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#949: FILE: drivers/isdn/mISDN/l1oip_core.c:381:
+			printk(KERN_DEBUG "%s: received empty keepalive data, "

WARNING:SPLIT_STRING: quoted string split across lines
#950: FILE: drivers/isdn/mISDN/l1oip_core.c:382:
+			printk(KERN_DEBUG "%s: received empty keepalive data, "
+				"ignoring\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#955: FILE: drivers/isdn/mISDN/l1oip_core.c:387:
+		printk(KERN_DEBUG "%s: received data, sending to mISDN (%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#956: FILE: drivers/isdn/mISDN/l1oip_core.c:388:
+		printk(KERN_DEBUG "%s: received data, sending to mISDN (%d)\n",
+			__func__, len);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#959: FILE: drivers/isdn/mISDN/l1oip_core.c:391:
+		printk(KERN_WARNING "%s: packet error - channel %d out of "

WARNING:SPLIT_STRING: quoted string split across lines
#960: FILE: drivers/isdn/mISDN/l1oip_core.c:392:
+		printk(KERN_WARNING "%s: packet error - channel %d out of "
+			"range\n", __func__, channel);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#966: FILE: drivers/isdn/mISDN/l1oip_core.c:398:
+		printk(KERN_WARNING "%s: packet error - channel %d not in "

WARNING:SPLIT_STRING: quoted string split across lines
#967: FILE: drivers/isdn/mISDN/l1oip_core.c:399:
+		printk(KERN_WARNING "%s: packet error - channel %d not in "
+			"stack\n", __func__, channel);

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#972: FILE: drivers/isdn/mISDN/l1oip_core.c:404:
+	nskb = mI_alloc_skb((remotecodec == 3)?(len<<1):len, GFP_ATOMIC);
 	                                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#972: FILE: drivers/isdn/mISDN/l1oip_core.c:404:
+	nskb = mI_alloc_skb((remotecodec == 3)?(len<<1):len, GFP_ATOMIC);
 	                                           ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#972: FILE: drivers/isdn/mISDN/l1oip_core.c:404:
+	nskb = mI_alloc_skb((remotecodec == 3)?(len<<1):len, GFP_ATOMIC);
 	                                               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#974: FILE: drivers/isdn/mISDN/l1oip_core.c:406:
+		printk(KERN_ERR "%s: No mem for skb.\n", __func__);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#974: FILE: drivers/isdn/mISDN/l1oip_core.c:406:
+	if (!nskb) {
+		printk(KERN_ERR "%s: No mem for skb.\n", __func__);

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#977: FILE: drivers/isdn/mISDN/l1oip_core.c:409:
+	p = skb_put(nskb, (remotecodec == 3)?(len<<1):len);
 	                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#977: FILE: drivers/isdn/mISDN/l1oip_core.c:409:
+	p = skb_put(nskb, (remotecodec == 3)?(len<<1):len);
 	                                         ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#977: FILE: drivers/isdn/mISDN/l1oip_core.c:409:
+	p = skb_put(nskb, (remotecodec == 3)?(len<<1):len);
 	                                             ^

CHECK:CAMELCASE: Avoid CamelCase: <recv_Dchannel>
#991: FILE: drivers/isdn/mISDN/l1oip_core.c:423:
+		recv_Dchannel(dch);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1002: FILE: drivers/isdn/mISDN/l1oip_core.c:434:
+				rx_counter = ((rx_counter & 0xffff0000)+0x10000)
 				                                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1010: FILE: drivers/isdn/mISDN/l1oip_core.c:442:
+				rx_counter = ((rx_counter & 0xffff0000)-0x10000)
 				                                       ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1019: FILE: drivers/isdn/mISDN/l1oip_core.c:451:
+			int cnt;
+			skb = hc->chan[channel].disorder_skb;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#1027: FILE: drivers/isdn/mISDN/l1oip_core.c:459:
+		if (nskb)
[...]
+		queue_ch_frame(&bch->ch, PH_DATA_IND, rx_counter, nskb);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1033: FILE: drivers/isdn/mISDN/l1oip_core.c:465:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1049: FILE: drivers/isdn/mISDN/l1oip_core.c:481:
+		printk(KERN_DEBUG "%s: received frame, parsing... (%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1050: FILE: drivers/isdn/mISDN/l1oip_core.c:482:
+		printk(KERN_DEBUG "%s: received frame, parsing... (%d)\n",
+			__func__, len);

WARNING:TYPO_SPELLING: 'lenght' may be misspelled - perhaps 'length'?
#1052: FILE: drivers/isdn/mISDN/l1oip_core.c:484:
+	/* check lenght */
 	         ^^^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1053: FILE: drivers/isdn/mISDN/l1oip_core.c:485:
+	if (len < 1+1+2) {
 	           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1053: FILE: drivers/isdn/mISDN/l1oip_core.c:485:
+	if (len < 1+1+2) {
 	             ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1054: FILE: drivers/isdn/mISDN/l1oip_core.c:486:
+		printk(KERN_WARNING "%s: packet error - length %d below "

WARNING:SPLIT_STRING: quoted string split across lines
#1055: FILE: drivers/isdn/mISDN/l1oip_core.c:487:
+		printk(KERN_WARNING "%s: packet error - length %d below "
+			"4 bytes\n", __func__, len);

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1060: FILE: drivers/isdn/mISDN/l1oip_core.c:492:
+	if (((*buf)>>6) != L1OIP_VERSION) {
 	           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1061: FILE: drivers/isdn/mISDN/l1oip_core.c:493:
+		printk(KERN_WARNING "%s: packet error - unknown version %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1062: FILE: drivers/isdn/mISDN/l1oip_core.c:494:
+		printk(KERN_WARNING "%s: packet error - unknown version %d\n",
+			__func__, buf[0]>>6);

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1062: FILE: drivers/isdn/mISDN/l1oip_core.c:494:
+			__func__, buf[0]>>6);
 			                ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1067: FILE: drivers/isdn/mISDN/l1oip_core.c:499:
+	if (((*buf)&0x20) && !hc->pri) {
 	           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1068: FILE: drivers/isdn/mISDN/l1oip_core.c:500:
+		printk(KERN_WARNING "%s: packet error - received E1 packet "

WARNING:SPLIT_STRING: quoted string split across lines
#1069: FILE: drivers/isdn/mISDN/l1oip_core.c:501:
+		printk(KERN_WARNING "%s: packet error - received E1 packet "
+			"on S0 interface\n", __func__);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1072: FILE: drivers/isdn/mISDN/l1oip_core.c:504:
+	if (!((*buf)&0x20) && hc->pri) {
 	            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1073: FILE: drivers/isdn/mISDN/l1oip_core.c:505:
+		printk(KERN_WARNING "%s: packet error - received S0 packet "

WARNING:SPLIT_STRING: quoted string split across lines
#1074: FILE: drivers/isdn/mISDN/l1oip_core.c:506:
+		printk(KERN_WARNING "%s: packet error - received S0 packet "
+			"on E1 interface\n", __func__);

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1079: FILE: drivers/isdn/mISDN/l1oip_core.c:511:
+	id = (*buf>>4)&1;
 	          ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1079: FILE: drivers/isdn/mISDN/l1oip_core.c:511:
+	id = (*buf>>4)&1;
 	              ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1084: FILE: drivers/isdn/mISDN/l1oip_core.c:516:
+		printk(KERN_WARNING "%s: packet error - remotecodec %d "

WARNING:SPLIT_STRING: quoted string split across lines
#1085: FILE: drivers/isdn/mISDN/l1oip_core.c:517:
+		printk(KERN_WARNING "%s: packet error - remotecodec %d "
+			"unsupported\n", __func__, remotecodec);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1094: FILE: drivers/isdn/mISDN/l1oip_core.c:526:
+			printk(KERN_WARNING "%s: packet error - packet has id "

WARNING:SPLIT_STRING: quoted string split across lines
#1095: FILE: drivers/isdn/mISDN/l1oip_core.c:527:
+			printk(KERN_WARNING "%s: packet error - packet has id "
+				"0x%x, but we have not\n", __func__, id);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1099: FILE: drivers/isdn/mISDN/l1oip_core.c:531:
+			printk(KERN_WARNING "%s: packet error - packet too "

WARNING:SPLIT_STRING: quoted string split across lines
#1100: FILE: drivers/isdn/mISDN/l1oip_core.c:532:
+			printk(KERN_WARNING "%s: packet error - packet too "
+				"short for ID value\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1110: FILE: drivers/isdn/mISDN/l1oip_core.c:542:
+			printk(KERN_WARNING "%s: packet error - ID mismatch, "

WARNING:SPLIT_STRING: quoted string split across lines
#1111: FILE: drivers/isdn/mISDN/l1oip_core.c:543:
+			printk(KERN_WARNING "%s: packet error - ID mismatch, "
+				"got 0x%x, we 0x%x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1117: FILE: drivers/isdn/mISDN/l1oip_core.c:549:
+			printk(KERN_WARNING "%s: packet error - packet has no "

WARNING:SPLIT_STRING: quoted string split across lines
#1118: FILE: drivers/isdn/mISDN/l1oip_core.c:550:
+			printk(KERN_WARNING "%s: packet error - packet has no "
+				"ID, but we have\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1125: FILE: drivers/isdn/mISDN/l1oip_core.c:557:
+		printk(KERN_WARNING "%s: packet error - packet too short, "

WARNING:SPLIT_STRING: quoted string split across lines
#1126: FILE: drivers/isdn/mISDN/l1oip_core.c:558:
+		printk(KERN_WARNING "%s: packet error - packet too short, "
+			"channel expected at position %d.\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1127: FILE: drivers/isdn/mISDN/l1oip_core.c:559:
+			__func__, len-len_start+1);
 			             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1127: FILE: drivers/isdn/mISDN/l1oip_core.c:559:
+			__func__, len-len_start+1);
 			                       ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1132: FILE: drivers/isdn/mISDN/l1oip_core.c:564:
+	channel = *buf&0x7f;
 	              ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1138: FILE: drivers/isdn/mISDN/l1oip_core.c:570:
+	if (m) {
[...]
+	} else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1140: FILE: drivers/isdn/mISDN/l1oip_core.c:572:
+			printk(KERN_WARNING "%s: packet error - packet too "

WARNING:SPLIT_STRING: quoted string split across lines
#1141: FILE: drivers/isdn/mISDN/l1oip_core.c:573:
+			printk(KERN_WARNING "%s: packet error - packet too "
+				"short, length expected at position %d.\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1142: FILE: drivers/isdn/mISDN/l1oip_core.c:574:
+				__func__, len_start-len-1);
 				                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1142: FILE: drivers/isdn/mISDN/l1oip_core.c:574:
+				__func__, len_start-len-1);
 				                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1150: FILE: drivers/isdn/mISDN/l1oip_core.c:582:
+		if (len < mlen+3) {
 		              ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1151: FILE: drivers/isdn/mISDN/l1oip_core.c:583:
+			printk(KERN_WARNING "%s: packet error - length %d at "

WARNING:SPLIT_STRING: quoted string split across lines
#1152: FILE: drivers/isdn/mISDN/l1oip_core.c:584:
+			printk(KERN_WARNING "%s: packet error - length %d at "
+				"position %d exceeds total length %d.\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1153: FILE: drivers/isdn/mISDN/l1oip_core.c:585:
+				__func__, mlen, len_start-len-1, len_start);
 				                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1153: FILE: drivers/isdn/mISDN/l1oip_core.c:585:
+				__func__, mlen, len_start-len-1, len_start);
 				                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1156: FILE: drivers/isdn/mISDN/l1oip_core.c:588:
+		if (len == mlen+3) {
 		               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1157: FILE: drivers/isdn/mISDN/l1oip_core.c:589:
+			printk(KERN_WARNING "%s: packet error - length %d at "

WARNING:SPLIT_STRING: quoted string split across lines
#1158: FILE: drivers/isdn/mISDN/l1oip_core.c:590:
+			printk(KERN_WARNING "%s: packet error - length %d at "
+				"position %d will not allow additional "

WARNING:SPLIT_STRING: quoted string split across lines
#1159: FILE: drivers/isdn/mISDN/l1oip_core.c:591:
+				"position %d will not allow additional "
+				"packet.\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1160: FILE: drivers/isdn/mISDN/l1oip_core.c:592:
+				__func__, mlen, len_start-len+1);
 				                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1160: FILE: drivers/isdn/mISDN/l1oip_core.c:592:
+				__func__, mlen, len_start-len+1);
 				                             ^

CHECK:BRACES: Unbalanced braces around else statement
#1163: FILE: drivers/isdn/mISDN/l1oip_core.c:595:
+	} else

WARNING:TYPO_SPELLING: 'substract' may be misspelled - perhaps 'subtract'?
#1164: FILE: drivers/isdn/mISDN/l1oip_core.c:596:
+		mlen = len-2; /* single frame, substract timebase */
 		                               ^^^^^^^^^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1164: FILE: drivers/isdn/mISDN/l1oip_core.c:596:
+		mlen = len-2; /* single frame, substract timebase */
 		          ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1167: FILE: drivers/isdn/mISDN/l1oip_core.c:599:
+		printk(KERN_WARNING "%s: packet error - packet too short, time "

WARNING:SPLIT_STRING: quoted string split across lines
#1168: FILE: drivers/isdn/mISDN/l1oip_core.c:600:
+		printk(KERN_WARNING "%s: packet error - packet too short, time "
+			"base expected at position %d.\n",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1169: FILE: drivers/isdn/mISDN/l1oip_core.c:601:
+			__func__, len-len_start+1);
 			             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1169: FILE: drivers/isdn/mISDN/l1oip_core.c:601:
+			__func__, len-len_start+1);
 			                       ^

CHECK:CAMELCASE: Avoid CamelCase: <Flags>
#1179: FILE: drivers/isdn/mISDN/l1oip_core.c:611:
+	if (!test_bit(FLG_ACTIVE, &dch->Flags)) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1180: FILE: drivers/isdn/mISDN/l1oip_core.c:612:
+		if (debug & (DEBUG_L1OIP_MSG|DEBUG_L1OIP_SOCKET))
 		                            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1181: FILE: drivers/isdn/mISDN/l1oip_core.c:613:
+			printk(KERN_DEBUG "%s: interface become active due to "

WARNING:SPLIT_STRING: quoted string split across lines
#1182: FILE: drivers/isdn/mISDN/l1oip_core.c:614:
+			printk(KERN_DEBUG "%s: interface become active due to "
+				"received packet\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1185: FILE: drivers/isdn/mISDN/l1oip_core.c:617:
+		_queue_data(&dch->dev.D, PH_ACTIVATE_IND, MISDN_ID_ANY, 0,
+			NULL, GFP_ATOMIC);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1198: FILE: drivers/isdn/mISDN/l1oip_core.c:630:
+	if ((int)(hc->timeout_tl.expires-jiffies) < 5*HZ || !hc->timeout_on) {
 	                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1198: FILE: drivers/isdn/mISDN/l1oip_core.c:630:
+	if ((int)(hc->timeout_tl.expires-jiffies) < 5*HZ || !hc->timeout_on) {
 	                                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1201: FILE: drivers/isdn/mISDN/l1oip_core.c:633:
+		hc->timeout_tl.expires = jiffies + L1OIP_TIMEOUT*HZ;
 		                                                ^

CHECK:BRACES: Unbalanced braces around else statement
#1203: FILE: drivers/isdn/mISDN/l1oip_core.c:635:
+	} else /* only adjust timer */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1204: FILE: drivers/isdn/mISDN/l1oip_core.c:636:
+		hc->timeout_tl.expires = jiffies + L1OIP_TIMEOUT*HZ;
 		                                                ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hc->sin_remote.sin_addr.s_addr != sin->sin_addr.s_addr'
#1207: FILE: drivers/isdn/mISDN/l1oip_core.c:639:
+	if ((hc->sin_remote.sin_addr.s_addr != sin->sin_addr.s_addr)
+	 || (hc->sin_remote.sin_port != sin->sin_port)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hc->sin_remote.sin_port != sin->sin_port'
#1207: FILE: drivers/isdn/mISDN/l1oip_core.c:639:
+	if ((hc->sin_remote.sin_addr.s_addr != sin->sin_addr.s_addr)
+	 || (hc->sin_remote.sin_port != sin->sin_port)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1208: FILE: drivers/isdn/mISDN/l1oip_core.c:640:
+	if ((hc->sin_remote.sin_addr.s_addr != sin->sin_addr.s_addr)
+	 || (hc->sin_remote.sin_port != sin->sin_port)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1210: FILE: drivers/isdn/mISDN/l1oip_core.c:642:
+			printk(KERN_DEBUG "%s: remote address changes from "

WARNING:SPLIT_STRING: quoted string split across lines
#1211: FILE: drivers/isdn/mISDN/l1oip_core.c:643:
+			printk(KERN_DEBUG "%s: remote address changes from "
+				"0x%08x to 0x%08x (port %d to %d)\n", __func__,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1221: FILE: drivers/isdn/mISDN/l1oip_core.c:653:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1244: FILE: drivers/isdn/mISDN/l1oip_core.c:676:
+		printk(KERN_ERR "%s: Failed to create socket.\n", __func__);

WARNING:TYPO_SPELLING: 'incomming' may be misspelled - perhaps 'incoming'?
#1258: FILE: drivers/isdn/mISDN/l1oip_core.c:690:
+	/* bind to incomming port */
 	           ^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1260: FILE: drivers/isdn/mISDN/l1oip_core.c:692:
+	if (socket->ops->bind(socket, (struct sockaddr *)&hc->sin_local,
+	    sizeof(hc->sin_local))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1261: FILE: drivers/isdn/mISDN/l1oip_core.c:693:
+		printk(KERN_ERR "%s: Failed to bind socket to port %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1262: FILE: drivers/isdn/mISDN/l1oip_core.c:694:
+		printk(KERN_ERR "%s: Failed to bind socket to port %d.\n",
+			__func__, hc->localport);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!socket->sk"
#1268: FILE: drivers/isdn/mISDN/l1oip_core.c:700:
+	if (socket->sk == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1269: FILE: drivers/isdn/mISDN/l1oip_core.c:701:
+		printk(KERN_ERR "%s: socket->sk == NULL\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1297: FILE: drivers/isdn/mISDN/l1oip_core.c:729:
+		printk(KERN_DEBUG "%s: socket created and open\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1298: FILE: drivers/isdn/mISDN/l1oip_core.c:730:
+		printk(KERN_DEBUG "%s: socket created and open\n",
+			__func__);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#1309: FILE: drivers/isdn/mISDN/l1oip_core.c:741:
+			if (debug & DEBUG_L1OIP_SOCKET)
+			    printk(KERN_WARNING "%s: broken pipe on socket\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1310: FILE: drivers/isdn/mISDN/l1oip_core.c:742:
+			    printk(KERN_WARNING "%s: broken pipe on socket\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1311: FILE: drivers/isdn/mISDN/l1oip_core.c:743:
+			    printk(KERN_WARNING "%s: broken pipe on socket\n",
+				__func__);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1320: FILE: drivers/isdn/mISDN/l1oip_core.c:752:
+		schedule_timeout(HZ/10);
 		                   ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1327: FILE: drivers/isdn/mISDN/l1oip_core.c:759:
+		printk(KERN_DEBUG "%s: socket thread terminating\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1328: FILE: drivers/isdn/mISDN/l1oip_core.c:760:
+		printk(KERN_DEBUG "%s: socket thread terminating\n",
+			__func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1340: FILE: drivers/isdn/mISDN/l1oip_core.c:772:
+		printk(KERN_DEBUG "%s: socket thread terminated\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1341: FILE: drivers/isdn/mISDN/l1oip_core.c:773:
+		printk(KERN_DEBUG "%s: socket thread terminated\n",
+			__func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1351: FILE: drivers/isdn/mISDN/l1oip_core.c:783:
+			printk(KERN_DEBUG "%s: socket thread exists, "

WARNING:SPLIT_STRING: quoted string split across lines
#1352: FILE: drivers/isdn/mISDN/l1oip_core.c:784:
+			printk(KERN_DEBUG "%s: socket thread exists, "
+				"killing...\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1368: FILE: drivers/isdn/mISDN/l1oip_core.c:800:
+	hc->socket_thread = kthread_run(l1oip_socket_thread, hc, "l1oip_%s",
+		hc->name);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1371: FILE: drivers/isdn/mISDN/l1oip_core.c:803:
+		int err = PTR_ERR(hc->socket_thread);
+		printk(KERN_ERR "%s: Failed (%d) to create socket process.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1371: FILE: drivers/isdn/mISDN/l1oip_core.c:803:
+		printk(KERN_ERR "%s: Failed (%d) to create socket process.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1372: FILE: drivers/isdn/mISDN/l1oip_core.c:804:
+		printk(KERN_ERR "%s: Failed (%d) to create socket process.\n",
+			__func__, err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1378: FILE: drivers/isdn/mISDN/l1oip_core.c:810:
+		printk(KERN_DEBUG "%s: socket thread created\n", __func__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1383: FILE: drivers/isdn/mISDN/l1oip_core.c:815:
+
+

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1389: FILE: drivers/isdn/mISDN/l1oip_core.c:821:
+	if (debug & (DEBUG_L1OIP_MSG|DEBUG_L1OIP_SOCKET))
 	                            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1390: FILE: drivers/isdn/mISDN/l1oip_core.c:822:
+		printk(KERN_DEBUG "%s: keepalive timer expired, sending empty "

WARNING:SPLIT_STRING: quoted string split across lines
#1391: FILE: drivers/isdn/mISDN/l1oip_core.c:823:
+		printk(KERN_DEBUG "%s: keepalive timer expired, sending empty "
+			"frame on dchannel\n", __func__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1397: FILE: drivers/isdn/mISDN/l1oip_core.c:829:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1416: FILE: drivers/isdn/mISDN/l1oip_core.c:848:
+		printk(KERN_DEBUG "%s: timeout timer expired, turn layer one "

WARNING:SPLIT_STRING: quoted string split across lines
#1417: FILE: drivers/isdn/mISDN/l1oip_core.c:849:
+		printk(KERN_DEBUG "%s: timeout timer expired, turn layer one "
+			"down.\n", __func__);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1423: FILE: drivers/isdn/mISDN/l1oip_core.c:855:
+		if (debug & (DEBUG_L1OIP_MSG|DEBUG_L1OIP_SOCKET))
 		                            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1424: FILE: drivers/isdn/mISDN/l1oip_core.c:856:
+			printk(KERN_DEBUG "%s: interface become deactivated "

WARNING:SPLIT_STRING: quoted string split across lines
#1425: FILE: drivers/isdn/mISDN/l1oip_core.c:857:
+			printk(KERN_DEBUG "%s: interface become deactivated "
+				"due to timeout\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1428: FILE: drivers/isdn/mISDN/l1oip_core.c:860:
+		_queue_data(&dch->dev.D, PH_DEACTIVATE_IND, MISDN_ID_ANY, 0,
+			NULL, GFP_ATOMIC);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1434: FILE: drivers/isdn/mISDN/l1oip_core.c:866:
+			printk(KERN_DEBUG "%s: on demand causes ip address to "

WARNING:SPLIT_STRING: quoted string split across lines
#1435: FILE: drivers/isdn/mISDN/l1oip_core.c:867:
+			printk(KERN_DEBUG "%s: on demand causes ip address to "
+				"be removed\n", __func__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1440: FILE: drivers/isdn/mISDN/l1oip_core.c:872:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <mISDNchannel>
#1445: FILE: drivers/isdn/mISDN/l1oip_core.c:877:
+handle_dmsg(struct mISDNchannel *ch, struct sk_buff *skb)

CHECK:CAMELCASE: Avoid CamelCase: <mISDNdevice>
#1447: FILE: drivers/isdn/mISDN/l1oip_core.c:879:
+	struct mISDNdevice	*dev = container_of(ch, struct mISDNdevice, D);

CHECK:CAMELCASE: Avoid CamelCase: <mISDNhead>
#1450: FILE: drivers/isdn/mISDN/l1oip_core.c:882:
+	struct mISDNhead	*hh = mISDN_HEAD_P(skb);

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_HEAD_P>
#1450: FILE: drivers/isdn/mISDN/l1oip_core.c:882:
+	struct mISDNhead	*hh = mISDN_HEAD_P(skb);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1458: FILE: drivers/isdn/mISDN/l1oip_core.c:890:
+			printk(KERN_WARNING "%s: skb too small\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1459: FILE: drivers/isdn/mISDN/l1oip_core.c:891:
+			printk(KERN_WARNING "%s: skb too small\n",
+				__func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1463: FILE: drivers/isdn/mISDN/l1oip_core.c:895:
+			printk(KERN_WARNING "%s: skb too large\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1464: FILE: drivers/isdn/mISDN/l1oip_core.c:896:
+			printk(KERN_WARNING "%s: skb too large\n",
+				__func__);

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1471: FILE: drivers/isdn/mISDN/l1oip_core.c:903:
+			ll = (l < L1OIP_MAX_PERFRAME)?l:L1OIP_MAX_PERFRAME;
 			                             ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1471: FILE: drivers/isdn/mISDN/l1oip_core.c:903:
+			ll = (l < L1OIP_MAX_PERFRAME)?l:L1OIP_MAX_PERFRAME;
 			                               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1473: FILE: drivers/isdn/mISDN/l1oip_core.c:905:
+			l1oip_socket_send(hc, 0, dch->slot, 0,
+				hc->chan[dch->slot].tx_counter++, p, ll);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1481: FILE: drivers/isdn/mISDN/l1oip_core.c:913:
+		if (debug & (DEBUG_L1OIP_MSG|DEBUG_L1OIP_SOCKET))
 		                            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1482: FILE: drivers/isdn/mISDN/l1oip_core.c:914:
+			printk(KERN_DEBUG "%s: PH_ACTIVATE channel %d (1..%d)\n"

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1483: FILE: drivers/isdn/mISDN/l1oip_core.c:915:
+				, __func__, dch->slot, hc->b_num+1);
 				                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1491: FILE: drivers/isdn/mISDN/l1oip_core.c:923:
+		if (debug & (DEBUG_L1OIP_MSG|DEBUG_L1OIP_SOCKET))
 		                            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1492: FILE: drivers/isdn/mISDN/l1oip_core.c:924:
+			printk(KERN_DEBUG "%s: PH_DEACTIVATE channel %d "

WARNING:SPLIT_STRING: quoted string split across lines
#1493: FILE: drivers/isdn/mISDN/l1oip_core.c:925:
+			printk(KERN_DEBUG "%s: PH_DEACTIVATE channel %d "
+				"(1..%d)\n", __func__, dch->slot,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1494: FILE: drivers/isdn/mISDN/l1oip_core.c:926:
+				hc->b_num+1);
 				         ^

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_ctrl_req>
#1508: FILE: drivers/isdn/mISDN/l1oip_core.c:940:
+channel_dctrl(struct dchannel *dch, struct mISDN_ctrl_req *cq)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1524: FILE: drivers/isdn/mISDN/l1oip_core.c:956:
+			printk(KERN_DEBUG "%s: got new ip address from user "

WARNING:SPLIT_STRING: quoted string split across lines
#1525: FILE: drivers/isdn/mISDN/l1oip_core.c:957:
+			printk(KERN_DEBUG "%s: got new ip address from user "
+				"space.\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1530: FILE: drivers/isdn/mISDN/l1oip_core.c:962:
+			printk(KERN_DEBUG "%s: removing ip address.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1531: FILE: drivers/isdn/mISDN/l1oip_core.c:963:
+			printk(KERN_DEBUG "%s: removing ip address.\n",
+				__func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1536: FILE: drivers/isdn/mISDN/l1oip_core.c:968:
+		printk(KERN_WARNING "%s: unknown Op %x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1537: FILE: drivers/isdn/mISDN/l1oip_core.c:969:
+		printk(KERN_WARNING "%s: unknown Op %x\n",
+		    __func__, cq->op);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1548: FILE: drivers/isdn/mISDN/l1oip_core.c:980:
+		printk(KERN_DEBUG "%s: dev(%d) open from %p\n", __func__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1549: FILE: drivers/isdn/mISDN/l1oip_core.c:981:
+		printk(KERN_DEBUG "%s: dev(%d) open from %p\n", __func__,
+		    dch->dev.id, __builtin_return_address(0));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dch->dev.D.protocol != ISDN_P_NONE'
#1552: FILE: drivers/isdn/mISDN/l1oip_core.c:984:
+	if ((dch->dev.D.protocol != ISDN_P_NONE) &&
+	    (dch->dev.D.protocol != rq->protocol)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dch->dev.D.protocol != rq->protocol'
#1552: FILE: drivers/isdn/mISDN/l1oip_core.c:984:
+	if ((dch->dev.D.protocol != ISDN_P_NONE) &&
+	    (dch->dev.D.protocol != rq->protocol)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1555: FILE: drivers/isdn/mISDN/l1oip_core.c:987:
+			printk(KERN_WARNING "%s: change protocol %x to %x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1556: FILE: drivers/isdn/mISDN/l1oip_core.c:988:
+			printk(KERN_WARNING "%s: change protocol %x to %x\n",
+			__func__, dch->dev.D.protocol, rq->protocol);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1563: FILE: drivers/isdn/mISDN/l1oip_core.c:995:
+		_queue_data(&dch->dev.D, PH_ACTIVATE_IND, MISDN_ID_ANY,
+		    0, NULL, GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1567: FILE: drivers/isdn/mISDN/l1oip_core.c:999:
+		printk(KERN_WARNING "%s:cannot get module\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1578: FILE: drivers/isdn/mISDN/l1oip_core.c:1010:
+	if (!test_bit(rq->adr.channel & 0x1f,
+		&dch->dev.channelmap[rq->adr.channel >> 5]))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1585: FILE: drivers/isdn/mISDN/l1oip_core.c:1017:
+		printk(KERN_ERR "%s:internal error ch %d has no bch\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1586: FILE: drivers/isdn/mISDN/l1oip_core.c:1018:
+		printk(KERN_ERR "%s:internal error ch %d has no bch\n",
+		    __func__, ch);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1594: FILE: drivers/isdn/mISDN/l1oip_core.c:1026:
+		printk(KERN_WARNING "%s:cannot get module\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1608: FILE: drivers/isdn/mISDN/l1oip_core.c:1040:
+		printk(KERN_DEBUG "%s: cmd:%x %p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1609: FILE: drivers/isdn/mISDN/l1oip_core.c:1041:
+		printk(KERN_DEBUG "%s: cmd:%x %p\n",
+		    __func__, cmd, arg);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1636: FILE: drivers/isdn/mISDN/l1oip_core.c:1068:
+			printk(KERN_DEBUG "%s: dev(%d) close from %p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1637: FILE: drivers/isdn/mISDN/l1oip_core.c:1069:
+			printk(KERN_DEBUG "%s: dev(%d) close from %p\n",
+			    __func__, dch->dev.id,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1646: FILE: drivers/isdn/mISDN/l1oip_core.c:1078:
+			printk(KERN_DEBUG "%s: unknown command %x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1647: FILE: drivers/isdn/mISDN/l1oip_core.c:1079:
+			printk(KERN_DEBUG "%s: unknown command %x\n",
+			    __func__, cmd);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1666: FILE: drivers/isdn/mISDN/l1oip_core.c:1098:
+			printk(KERN_WARNING "%s: skb too small\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1667: FILE: drivers/isdn/mISDN/l1oip_core.c:1099:
+			printk(KERN_WARNING "%s: skb too small\n",
+				__func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1671: FILE: drivers/isdn/mISDN/l1oip_core.c:1103:
+			printk(KERN_WARNING "%s: skb too large\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1672: FILE: drivers/isdn/mISDN/l1oip_core.c:1104:
+			printk(KERN_WARNING "%s: skb too large\n",
+				__func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1684: FILE: drivers/isdn/mISDN/l1oip_core.c:1116:
+				printk(KERN_DEBUG "%s: got AIS, not sending, "

WARNING:SPLIT_STRING: quoted string split across lines
#1685: FILE: drivers/isdn/mISDN/l1oip_core.c:1117:
+				printk(KERN_DEBUG "%s: got AIS, not sending, "
+					"but counting\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1700: FILE: drivers/isdn/mISDN/l1oip_core.c:1132:
+				printk(KERN_DEBUG "%s: got silence, not sending"

WARNING:SPLIT_STRING: quoted string split across lines
#1701: FILE: drivers/isdn/mISDN/l1oip_core.c:1133:
+				printk(KERN_DEBUG "%s: got silence, not sending"
+					", but counting\n", __func__);

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1712: FILE: drivers/isdn/mISDN/l1oip_core.c:1144:
+			ll = (l < L1OIP_MAX_PERFRAME)?l:L1OIP_MAX_PERFRAME;
 			                             ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1712: FILE: drivers/isdn/mISDN/l1oip_core.c:1144:
+			ll = (l < L1OIP_MAX_PERFRAME)?l:L1OIP_MAX_PERFRAME;
 			                               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1714: FILE: drivers/isdn/mISDN/l1oip_core.c:1146:
+			l1oip_socket_send(hc, hc->codec, bch->slot, 0,
+				hc->chan[bch->slot].tx_counter, p, ll);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1723: FILE: drivers/isdn/mISDN/l1oip_core.c:1155:
+		if (debug & (DEBUG_L1OIP_MSG|DEBUG_L1OIP_SOCKET))
 		                            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1724: FILE: drivers/isdn/mISDN/l1oip_core.c:1156:
+			printk(KERN_DEBUG "%s: PH_ACTIVATE channel %d (1..%d)\n"

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1725: FILE: drivers/isdn/mISDN/l1oip_core.c:1157:
+				, __func__, bch->slot, hc->b_num+1);
 				                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1732: FILE: drivers/isdn/mISDN/l1oip_core.c:1164:
+		if (debug & (DEBUG_L1OIP_MSG|DEBUG_L1OIP_SOCKET))
 		                            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1733: FILE: drivers/isdn/mISDN/l1oip_core.c:1165:
+			printk(KERN_DEBUG "%s: PH_DEACTIVATE channel %d "

WARNING:SPLIT_STRING: quoted string split across lines
#1734: FILE: drivers/isdn/mISDN/l1oip_core.c:1166:
+			printk(KERN_DEBUG "%s: PH_DEACTIVATE channel %d "
+				"(1..%d)\n", __func__, bch->slot,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1735: FILE: drivers/isdn/mISDN/l1oip_core.c:1167:
+				hc->b_num+1);
 				         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1759: FILE: drivers/isdn/mISDN/l1oip_core.c:1191:
+			printk(KERN_DEBUG "%s: HW_FEATURE request\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1760: FILE: drivers/isdn/mISDN/l1oip_core.c:1192:
+			printk(KERN_DEBUG "%s: HW_FEATURE request\n",
+			    __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1766: FILE: drivers/isdn/mISDN/l1oip_core.c:1198:
+		printk(KERN_WARNING "%s: unknown Op %x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1767: FILE: drivers/isdn/mISDN/l1oip_core.c:1199:
+		printk(KERN_WARNING "%s: unknown Op %x\n",
+		    __func__, cq->op);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1781: FILE: drivers/isdn/mISDN/l1oip_core.c:1213:
+		printk(KERN_DEBUG "%s: cmd:%x %p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1782: FILE: drivers/isdn/mISDN/l1oip_core.c:1214:
+		printk(KERN_DEBUG "%s: cmd:%x %p\n",
+		    __func__, cmd, arg);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1796: FILE: drivers/isdn/mISDN/l1oip_core.c:1228:
+		printk(KERN_WARNING "%s: unknown prim(%x)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1797: FILE: drivers/isdn/mISDN/l1oip_core.c:1229:
+		printk(KERN_WARNING "%s: unknown prim(%x)\n",
+			__func__, cmd);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1802: FILE: drivers/isdn/mISDN/l1oip_core.c:1234:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_unregister_device>
#1821: FILE: drivers/isdn/mISDN/l1oip_core.c:1253:
+		mISDN_unregister_device(&hc->chan[hc->d_idx].dch->dev);

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_freedchannel>
#1824: FILE: drivers/isdn/mISDN/l1oip_core.c:1256:
+			mISDN_freedchannel(hc->chan[ch].dch);

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_freebchannel>
#1828: FILE: drivers/isdn/mISDN/l1oip_core.c:1260:
+			mISDN_freebchannel(hc->chan[ch].bch);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1855: FILE: drivers/isdn/mISDN/l1oip_core.c:1287:
+
+

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1870: FILE: drivers/isdn/mISDN/l1oip_core.c:1302:
+	hc->d_idx = pri?16:3;
 	               ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1870: FILE: drivers/isdn/mISDN/l1oip_core.c:1302:
+	hc->d_idx = pri?16:3;
 	                  ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1871: FILE: drivers/isdn/mISDN/l1oip_core.c:1303:
+	hc->b_num = pri?30:2;
 	               ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1871: FILE: drivers/isdn/mISDN/l1oip_core.c:1303:
+	hc->b_num = pri?30:2;
 	                  ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1885: FILE: drivers/isdn/mISDN/l1oip_core.c:1317:
+		printk(KERN_ERR "Codec(%d) not supported.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1886: FILE: drivers/isdn/mISDN/l1oip_core.c:1318:
+		printk(KERN_ERR "Codec(%d) not supported.\n",
+			codec[l1oip_cnt]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1891: FILE: drivers/isdn/mISDN/l1oip_core.c:1323:
+		printk(KERN_DEBUG "%s: using codec %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1892: FILE: drivers/isdn/mISDN/l1oip_core.c:1324:
+		printk(KERN_DEBUG "%s: using codec %d\n",
+			__func__, hc->codec);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1895: FILE: drivers/isdn/mISDN/l1oip_core.c:1327:
+		printk(KERN_WARNING "Warning: No 'id' value given or "

WARNING:SPLIT_STRING: quoted string split across lines
#1896: FILE: drivers/isdn/mISDN/l1oip_core.c:1328:
+		printk(KERN_WARNING "Warning: No 'id' value given or "
+			"0, this is highly unsecure. Please use 32 "

WARNING:TYPO_SPELLING: 'randmom' may be misspelled - perhaps 'random'?
#1897: FILE: drivers/isdn/mISDN/l1oip_core.c:1329:
+			"bit randmom number 0x...\n");
 			     ^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1897: FILE: drivers/isdn/mISDN/l1oip_core.c:1329:
+			"0, this is highly unsecure. Please use 32 "
+			"bit randmom number 0x...\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1901: FILE: drivers/isdn/mISDN/l1oip_core.c:1333:
+		printk(KERN_DEBUG "%s: using id 0x%x\n", __func__, hc->id);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1905: FILE: drivers/isdn/mISDN/l1oip_core.c:1337:
+		printk(KERN_ERR "%s: ondemand option only allowed in "

WARNING:SPLIT_STRING: quoted string split across lines
#1906: FILE: drivers/isdn/mISDN/l1oip_core.c:1338:
+		printk(KERN_ERR "%s: ondemand option only allowed in "
+			"conjunction with non 0 ID\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1913: FILE: drivers/isdn/mISDN/l1oip_core.c:1345:
+		printk(KERN_ERR "Maximum limit for BRI interface is 2 "

WARNING:SPLIT_STRING: quoted string split across lines
#1914: FILE: drivers/isdn/mISDN/l1oip_core.c:1346:
+		printk(KERN_ERR "Maximum limit for BRI interface is 2 "
+			"channels.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1918: FILE: drivers/isdn/mISDN/l1oip_core.c:1350:
+		printk(KERN_ERR "Maximum limit for PRI interface is 126 "

WARNING:SPLIT_STRING: quoted string split across lines
#1919: FILE: drivers/isdn/mISDN/l1oip_core.c:1351:
+		printk(KERN_ERR "Maximum limit for PRI interface is 126 "
+			"channels.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1923: FILE: drivers/isdn/mISDN/l1oip_core.c:1355:
+		printk(KERN_WARNING "Maximum limit for BRI interface is 30 "

WARNING:SPLIT_STRING: quoted string split across lines
#1924: FILE: drivers/isdn/mISDN/l1oip_core.c:1356:
+		printk(KERN_WARNING "Maximum limit for BRI interface is 30 "
+			"channels.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1925: FILE: drivers/isdn/mISDN/l1oip_core.c:1357:
+		printk(KERN_WARNING "Your selection of %d channels must be "

WARNING:SPLIT_STRING: quoted string split across lines
#1926: FILE: drivers/isdn/mISDN/l1oip_core.c:1358:
+		printk(KERN_WARNING "Your selection of %d channels must be "
+			"supported by application.\n", hc->limit);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1929: FILE: drivers/isdn/mISDN/l1oip_core.c:1361:
+	hc->remoteip = ip[l1oip_cnt<<2] << 24
 	                           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1930: FILE: drivers/isdn/mISDN/l1oip_core.c:1362:
+		     | ip[(l1oip_cnt<<2)+1] << 16
 		                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1930: FILE: drivers/isdn/mISDN/l1oip_core.c:1362:
+		     | ip[(l1oip_cnt<<2)+1] << 16
 		                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1931: FILE: drivers/isdn/mISDN/l1oip_core.c:1363:
+		     | ip[(l1oip_cnt<<2)+2] << 8
 		                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1931: FILE: drivers/isdn/mISDN/l1oip_core.c:1363:
+		     | ip[(l1oip_cnt<<2)+2] << 8
 		                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1932: FILE: drivers/isdn/mISDN/l1oip_core.c:1364:
+		     | ip[(l1oip_cnt<<2)+3];
 		                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1932: FILE: drivers/isdn/mISDN/l1oip_core.c:1364:
+		     | ip[(l1oip_cnt<<2)+3];
 		                        ^

CHECK:SPACING: spaces required around that '?:' (ctx:VxV)
#1933: FILE: drivers/isdn/mISDN/l1oip_core.c:1365:
+	hc->localport = port[l1oip_cnt]?:(L1OIP_DEFAULTPORT+l1oip_cnt);
 	                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1933: FILE: drivers/isdn/mISDN/l1oip_core.c:1365:
+	hc->localport = port[l1oip_cnt]?:(L1OIP_DEFAULTPORT+l1oip_cnt);
 	                                                   ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1939: FILE: drivers/isdn/mISDN/l1oip_core.c:1371:
+		printk(KERN_DEBUG "%s: using local port %d remote ip "

WARNING:SPLIT_STRING: quoted string split across lines
#1940: FILE: drivers/isdn/mISDN/l1oip_core.c:1372:
+		printk(KERN_DEBUG "%s: using local port %d remote ip "
+			"%d.%d.%d.%d port %d ondemand %d\n", __func__,

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dch)...) over kzalloc(sizeof(struct dchannel)...)
#1946: FILE: drivers/isdn/mISDN/l1oip_core.c:1378:
+	dch = kzalloc(sizeof(struct dchannel), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_initdchannel>
#1950: FILE: drivers/isdn/mISDN/l1oip_core.c:1382:
+	mISDN_initdchannel(dch, MAX_DFRAME_LEN_L1, NULL);

CHECK:CAMELCASE: Avoid CamelCase: <Dprotocols>
#1953: FILE: drivers/isdn/mISDN/l1oip_core.c:1385:
+		dch->dev.Dprotocols = (1 << ISDN_P_TE_E1) | (1 << ISDN_P_NT_E1);

CHECK:CAMELCASE: Avoid CamelCase: <Bprotocols>
#1956: FILE: drivers/isdn/mISDN/l1oip_core.c:1388:
+	dch->dev.Bprotocols = (1 << (ISDN_P_B_RAW & ISDN_P_B_MASK)) |

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*bch)...) over kzalloc(sizeof(struct bchannel)...)
#1967: FILE: drivers/isdn/mISDN/l1oip_core.c:1399:
+		bch = kzalloc(sizeof(struct bchannel), GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1969: FILE: drivers/isdn/mISDN/l1oip_core.c:1401:
+			printk(KERN_ERR "%s: no memory for bchannel\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1970: FILE: drivers/isdn/mISDN/l1oip_core.c:1402:
+			printk(KERN_ERR "%s: no memory for bchannel\n",
+			    __func__);

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_initbchannel>
#1976: FILE: drivers/isdn/mISDN/l1oip_core.c:1408:
+		mISDN_initbchannel(bch, MAX_DATA_MEM);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1984: FILE: drivers/isdn/mISDN/l1oip_core.c:1416:
+		test_and_set_bit(bch->nr & 0x1f,
+			&dch->dev.channelmap[bch->nr >> 5]);

CHECK:CAMELCASE: Avoid CamelCase: <mISDN_register_device>
#1986: FILE: drivers/isdn/mISDN/l1oip_core.c:1418:
+	ret = mISDN_register_device(&dch->dev, hc->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1992: FILE: drivers/isdn/mISDN/l1oip_core.c:1424:
+		printk(KERN_DEBUG "%s: Setting up network card(%d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1993: FILE: drivers/isdn/mISDN/l1oip_core.c:1425:
+		printk(KERN_DEBUG "%s: Setting up network card(%d)\n",
+			__func__, l1oip_cnt + 1);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2001: FILE: drivers/isdn/mISDN/l1oip_core.c:1433:
+	hc->keep_tl.expires = jiffies + 2*HZ; /* two seconds first time */
 	                                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2019: FILE: drivers/isdn/mISDN/l1oip_core.c:1451:
+	printk(KERN_INFO "mISDN: Layer-1-over-IP driver Rev. %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2020: FILE: drivers/isdn/mISDN/l1oip_core.c:1452:
+	printk(KERN_INFO "mISDN: Layer-1-over-IP driver Rev. %s\n",
+		l1oip_revision);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2048: FILE: drivers/isdn/mISDN/l1oip_core.c:1480:
+			printk(KERN_ERR "Card type(%d) not supported.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2049: FILE: drivers/isdn/mISDN/l1oip_core.c:1481:
+			printk(KERN_ERR "Card type(%d) not supported.\n",
+				type[l1oip_cnt] & 0xff);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2055: FILE: drivers/isdn/mISDN/l1oip_core.c:1487:
+			printk(KERN_DEBUG "%s: interface %d is %s with %s.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2056: FILE: drivers/isdn/mISDN/l1oip_core.c:1488:
+			printk(KERN_DEBUG "%s: interface %d is %s with %s.\n",
+				__func__, l1oip_cnt, pri?"PRI":"BRI",

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#2056: FILE: drivers/isdn/mISDN/l1oip_core.c:1488:
+				__func__, l1oip_cnt, pri?"PRI":"BRI",
 				                        ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2056: FILE: drivers/isdn/mISDN/l1oip_core.c:1488:
+				__func__, l1oip_cnt, pri?"PRI":"BRI",
 				                              ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#2057: FILE: drivers/isdn/mISDN/l1oip_core.c:1489:
+				bundle?"bundled IP packet for all B-channels"
 				      ^

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#2058: FILE: drivers/isdn/mISDN/l1oip_core.c:1490:
+				 :"seperate IP packets for every B-channel");
 				   ^^^^^^^^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#2058: FILE: drivers/isdn/mISDN/l1oip_core.c:1490:
+				 :"seperate IP packets for every B-channel");
 				 ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*hc)...) over kzalloc(sizeof(struct l1oip)...)
#2060: FILE: drivers/isdn/mISDN/l1oip_core.c:1492:
+		hc = kzalloc(sizeof(struct l1oip), GFP_ATOMIC);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2062: FILE: drivers/isdn/mISDN/l1oip_core.c:1494:
+			printk(KERN_ERR "No kmem for L1-over-IP driver.\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#2062: FILE: drivers/isdn/mISDN/l1oip_core.c:1494:
+		if (!hc) {
+			printk(KERN_ERR "No kmem for L1-over-IP driver.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2080: FILE: drivers/isdn/mISDN/l1oip_core.c:1512:
+	printk(KERN_INFO "%d virtual devices registered\n", l1oip_cnt);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000249179.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 167 warnings, 198 checks, 2016 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000249179.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
