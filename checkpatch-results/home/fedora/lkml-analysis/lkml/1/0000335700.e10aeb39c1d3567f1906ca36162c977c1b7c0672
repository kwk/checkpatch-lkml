WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#53: 
> > Unlike previous drivers (which were never in mainline) this uses DMA and

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#75: 
--- a/drivers/block/Kconfig	2008-01-14 22:32:26.000000000 +0000

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#99: FILE: drivers/cdrom/gdrom.c:1:
+/* GD ROM driver for the SEGA Dreamcast

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#115: FILE: drivers/cdrom/gdrom.c:17:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#116: FILE: drivers/cdrom/gdrom.c:18:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#137: FILE: drivers/cdrom/gdrom.c:39:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/delay.h> instead of <asm/delay.h>
#139: FILE: drivers/cdrom/gdrom.c:41:
+#include <asm/delay.h>

CHECK:CAMELCASE: Avoid CamelCase: <padA>
#225: FILE: drivers/cdrom/gdrom.c:127:
+	char padA[13];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <padB>
#229: FILE: drivers/cdrom/gdrom.c:131:
+	char padB[16];

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#234: FILE: drivers/cdrom/gdrom.c:136:
+static int gdrom_packetcommand(struct cdrom_device_info *cd_info,
+	struct packet_command *command);

WARNING:LINE_SPACING: Missing a blank line after declarations
#250: FILE: drivers/cdrom/gdrom.c:152:
+	unsigned long timeout = jiffies + GDROM_DEFAULT_TIMEOUT;
+	while ((ctrl_inb(GDROM_ALTSTATUS_REG) & 0x80) &&

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#251: FILE: drivers/cdrom/gdrom.c:153:
+	while ((ctrl_inb(GDROM_ALTSTATUS_REG) & 0x80) &&
+		(time_before(jiffies, timeout)))

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#272: FILE: drivers/cdrom/gdrom.c:174:
+	/* If the device won't clear it has probably
+	* been hit by a serious failure - but we'll

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#273: FILE: drivers/cdrom/gdrom.c:175:
+	* try to return a sense key even so */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#318: FILE: drivers/cdrom/gdrom.c:220:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#344: FILE: drivers/cdrom/gdrom.c:246:
+	struct packet_command *spin_command;
+	spin_command = kzalloc(sizeof(struct packet_command), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*spin_command)...) over kzalloc(sizeof(struct packet_command)...)
#344: FILE: drivers/cdrom/gdrom.c:246:
+	spin_command = kzalloc(sizeof(struct packet_command), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#354: FILE: drivers/cdrom/gdrom.c:256:
+	wait_event_interruptible_timeout(command_queue, gd.pending == 0,
+		GDROM_DEFAULT_TIMEOUT);

WARNING:REPEATED_WORD: Possible repeated word: 'byte'
#370: FILE: drivers/cdrom/gdrom.c:272:
+ * byte 3 = sizeof TOC >> 8  ie upper byte
+ * byte 4 = sizeof TOC & 0xff ie lower byte

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*toc_command)...) over kzalloc(sizeof(struct packet_command)...)
#378: FILE: drivers/cdrom/gdrom.c:280:
+	toc_command = kzalloc(sizeof(struct packet_command), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#394: FILE: drivers/cdrom/gdrom.c:296:
+	wait_event_interruptible_timeout(command_queue, gd.pending == 0,
+		GDROM_DEFAULT_TIMEOUT);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#399: FILE: drivers/cdrom/gdrom.c:301:
+	insw(PHYSADDR(GDROM_DATA_REG), toc, tocsize/2);
 	                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#427: FILE: drivers/cdrom/gdrom.c:329:
+static int gdrom_get_last_session(struct cdrom_device_info *cd_info,
+	struct cdrom_multisession *ms_info)

WARNING:LINE_SPACING: Missing a blank line after declarations
#430: FILE: drivers/cdrom/gdrom.c:332:
+	int fentry, lentry, track, data, tocuse, err;
+	if (!gd.toc)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#440: FILE: drivers/cdrom/gdrom.c:342:
+			printk(KERN_INFO "GDROM: Could not get CD "

WARNING:SPLIT_STRING: quoted string split across lines
#441: FILE: drivers/cdrom/gdrom.c:343:
+			printk(KERN_INFO "GDROM: Could not get CD "
+				"table of contents\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'track > 100'
#457: FILE: drivers/cdrom/gdrom.c:359:
+	if ((track > 100) || (track < get_entry_track(gd.toc->first))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'track < get_entry_track(gd.toc->first)'
#457: FILE: drivers/cdrom/gdrom.c:359:
+	if ((track > 100) || (track < get_entry_track(gd.toc->first))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#458: FILE: drivers/cdrom/gdrom.c:360:
+		printk(KERN_INFO "GDROM: No data on the last "

WARNING:SPLIT_STRING: quoted string split across lines
#459: FILE: drivers/cdrom/gdrom.c:361:
+		printk(KERN_INFO "GDROM: No data on the last "
+			"session of the CD\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#485: FILE: drivers/cdrom/gdrom.c:387:
+	char sense = ctrl_inb(GDROM_ERROR_REG);
+	sense &= 0xF0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#504: FILE: drivers/cdrom/gdrom.c:406:
+	int count;
+	ctrl_outl(0x1fffff, GDROM_RESET_REG);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#511: FILE: drivers/cdrom/gdrom.c:413:
+ * CD Rom specification  - returning int */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#513: FILE: drivers/cdrom/gdrom.c:415:
+static int gdrom_packetcommand(struct cdrom_device_info *cd_info,
+	struct packet_command *command)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*sense_command)...) over kzalloc(sizeof(struct packet_command)...)
#532: FILE: drivers/cdrom/gdrom.c:434:
+	sense_command = kzalloc(sizeof(struct packet_command), GFP_KERNEL);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#539: FILE: drivers/cdrom/gdrom.c:441:
+	* the sense key if possible */

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#539: FILE: drivers/cdrom/gdrom.c:441:
+	/* even if something is pending try to get
+	* the sense key if possible */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#547: FILE: drivers/cdrom/gdrom.c:449:
+	wait_event_interruptible_timeout(command_queue, gd.pending == 0,
+		GDROM_DEFAULT_TIMEOUT);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#550: FILE: drivers/cdrom/gdrom.c:452:
+	insw(PHYSADDR(GDROM_DATA_REG), &sense, sense_command->buflen/2);
 	                                                            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#552: FILE: drivers/cdrom/gdrom.c:454:
+		printk(KERN_INFO "GDROM: Drive not ready - command aborted\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#557: FILE: drivers/cdrom/gdrom.c:459:
+		printk(KERN_INFO "GDROM: %s\n", sense_texts[sense_key].text);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#559: FILE: drivers/cdrom/gdrom.c:461:
+		printk(KERN_ERR "GDROM: Unknown sense key: %d\n", sense_key);

WARNING:TYPO_SPELLING: 'addional' may be misspelled - perhaps 'additional'?
#560: FILE: drivers/cdrom/gdrom.c:462:
+	if (bufstring) /* return addional sense data */
 	                         ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#600: FILE: drivers/cdrom/gdrom.c:502:
+static int gdrom_bdops_ioctl(struct inode *inode, struct file *file,
+	unsigned cmd, unsigned long arg)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#600: FILE: drivers/cdrom/gdrom.c:502:
+	unsigned cmd, unsigned long arg)

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#605: FILE: drivers/cdrom/gdrom.c:507:
+static struct block_device_operations gdrom_bdops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#633: FILE: drivers/cdrom/gdrom.c:535:
+static int __devinit gdrom_set_interrupt_handlers(void)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#638: FILE: drivers/cdrom/gdrom.c:540:
+	err = request_irq(HW_EVENT_GDROM_CMD, gdrom_command_interrupt,
+		IRQF_DISABLED, "gdrom_command", &gd);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#642: FILE: drivers/cdrom/gdrom.c:544:
+	err = request_irq(HW_EVENT_GDROM_DMA, gdrom_dma_interrupt,
+		IRQF_DISABLED, "gdrom_dma", &gd);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*read_command)...) over kzalloc(sizeof(struct packet_command)...)
#668: FILE: drivers/cdrom/gdrom.c:570:
+	read_command = kzalloc(sizeof(struct packet_command), GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#677: FILE: drivers/cdrom/gdrom.c:579:
+		block = req->sector/GD_TO_BLK + GD_SESSION_OFFSET;
 		                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#678: FILE: drivers/cdrom/gdrom.c:580:
+		block_cnt = req->nr_sectors/GD_TO_BLK;
 		                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#712: FILE: drivers/cdrom/gdrom.c:614:
+		while (ctrl_inb(GDROM_DMA_STATUS_REG) &&
+			time_before(jiffies, timeout))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#717: FILE: drivers/cdrom/gdrom.c:619:
+		wait_event_interruptible_timeout(request_queue,
+			gd.transfer == 0, GDROM_DEFAULT_TIMEOUT);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#722: FILE: drivers/cdrom/gdrom.c:624:
+		* before handling ending the request */

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#722: FILE: drivers/cdrom/gdrom.c:624:
+		/* now seek to take the request spinlock
+		* before handling ending the request */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#734: FILE: drivers/cdrom/gdrom.c:636:
+	* and then schedule workqueue */

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#734: FILE: drivers/cdrom/gdrom.c:636:
+	/* dequeue, add to list of deferred work
+	* and then schedule workqueue */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#746: FILE: drivers/cdrom/gdrom.c:648:
+			printk(KERN_DEBUG "GDROM: Non-fs request ignored\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#750: FILE: drivers/cdrom/gdrom.c:652:
+			printk(KERN_NOTICE "GDROM: Read only device -");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#751: FILE: drivers/cdrom/gdrom.c:653:
+			printk(" write request ignored\n");

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#762: FILE: drivers/cdrom/gdrom.c:664:
+static int __devinit gdrom_outputversion(void)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*id)...) over kzalloc(sizeof(struct gdrom_id)...)
#769: FILE: drivers/cdrom/gdrom.c:671:
+	id = kzalloc(sizeof(struct gdrom_id), GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#782: FILE: drivers/cdrom/gdrom.c:684:
+	printk(KERN_INFO "GDROM: %s from %s with firmware %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#783: FILE: drivers/cdrom/gdrom.c:685:
+	printk(KERN_INFO "GDROM: %s from %s with firmware %s\n",
+		model_name, manuf_name, firmw_ver);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#796: FILE: drivers/cdrom/gdrom.c:698:
+static int __devinit gdrom_init_dma_mode(void)

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#806: FILE: drivers/cdrom/gdrom.c:708:
+	/* Memory protection setting for GDROM DMA
+	* Bits 31 - 16 security: 0x8843

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#811: FILE: drivers/cdrom/gdrom.c:713:
+	* (0x7F | 0x80) = end range at 0x0FFFFFFF */

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#817: FILE: drivers/cdrom/gdrom.c:719:
+static void __devinit probe_gdrom_setupcd(void)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#822: FILE: drivers/cdrom/gdrom.c:724:
+	gd.cd_info->mask = CDC_CLOSE_TRAY|CDC_OPEN_TRAY|CDC_LOCK|
 	                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#822: FILE: drivers/cdrom/gdrom.c:724:
+	gd.cd_info->mask = CDC_CLOSE_TRAY|CDC_OPEN_TRAY|CDC_LOCK|
 	                                               ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#822: FILE: drivers/cdrom/gdrom.c:724:
+	gd.cd_info->mask = CDC_CLOSE_TRAY|CDC_OPEN_TRAY|CDC_LOCK|
 	                                                        ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#826: FILE: drivers/cdrom/gdrom.c:728:
+static void __devinit probe_gdrom_setupdisk(void)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#834: FILE: drivers/cdrom/gdrom.c:736:
+static int __devinit probe_gdrom_setupqueue(void)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#849: FILE: drivers/cdrom/gdrom.c:751:
+static int __devinit probe_gdrom(struct platform_device *devptr)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#854: FILE: drivers/cdrom/gdrom.c:756:
+		printk(KERN_WARNING "GDROM: ATA Probe for GDROM failed.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#864: FILE: drivers/cdrom/gdrom.c:766:
+	printk(KERN_INFO "GDROM: Registered with major number %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#865: FILE: drivers/cdrom/gdrom.c:767:
+	printk(KERN_INFO "GDROM: Registered with major number %d\n",
+		gdrom_major);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*gd.cd_info)...) over kzalloc(sizeof(struct cdrom_device_info)...)
#867: FILE: drivers/cdrom/gdrom.c:769:
+	gd.cd_info = kzalloc(sizeof(struct cdrom_device_info), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*gd.toc)...) over kzalloc(sizeof(struct gdromtoc)...)
#896: FILE: drivers/cdrom/gdrom.c:798:
+	gd.toc = kzalloc(sizeof(struct gdromtoc), GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#915: FILE: drivers/cdrom/gdrom.c:817:
+	printk(KERN_WARNING "GDROM: Probe failed - error is 0x%X\n", err);

WARNING:LINE_SPACING: Missing a blank line after declarations
#942: FILE: drivers/cdrom/gdrom.c:844:
+	int rc;
+	gd.toc = NULL;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000335700.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 46 warnings, 33 checks, 888 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000335700.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
