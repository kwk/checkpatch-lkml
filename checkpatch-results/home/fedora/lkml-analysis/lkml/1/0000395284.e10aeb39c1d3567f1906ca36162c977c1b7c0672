ERROR:SPACING: space required after that ',' (ctx:VxV)
#70: FILE: include/asm-m68k/sun3_pgalloc.h:34:
+#define __pte_free_tlb(tlb,pte,address) tlb_remove_page((tlb),(pte))
                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#70: FILE: include/asm-m68k/sun3_pgalloc.h:34:
+#define __pte_free_tlb(tlb,pte,address) tlb_remove_page((tlb),(pte))
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#70: FILE: include/asm-m68k/sun3_pgalloc.h:34:
+#define __pte_free_tlb(tlb,pte,address) tlb_remove_page((tlb),(pte))
                                                              ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tlb' - possible side-effects?
#92: FILE: include/asm-generic/tlb.h:126:
+#define pte_free_tlb(tlb, ptep, address)			\
 	do {							\
 		tlb->need_flush = 1;				\
+		__pte_free_tlb(tlb, ptep, address);		\
 	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'tlb' may be better as '(tlb)' to avoid precedence issues
#92: FILE: include/asm-generic/tlb.h:126:
+#define pte_free_tlb(tlb, ptep, address)			\
 	do {							\
 		tlb->need_flush = 1;				\
+		__pte_free_tlb(tlb, ptep, address);		\
 	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tlb' - possible side-effects?
#101: FILE: include/asm-generic/tlb.h:133:
+#define pud_free_tlb(tlb, pudp, address)			\
 	do {							\
 		tlb->need_flush = 1;				\
+		__pud_free_tlb(tlb, pudp, address);		\
 	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'tlb' may be better as '(tlb)' to avoid precedence issues
#101: FILE: include/asm-generic/tlb.h:133:
+#define pud_free_tlb(tlb, pudp, address)			\
 	do {							\
 		tlb->need_flush = 1;				\
+		__pud_free_tlb(tlb, pudp, address);		\
 	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tlb' - possible side-effects?
#110: FILE: include/asm-generic/tlb.h:140:
+#define pmd_free_tlb(tlb, pmdp, address)			\
 	do {							\
 		tlb->need_flush = 1;				\
+		__pmd_free_tlb(tlb, pmdp, address);		\
 	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'tlb' may be better as '(tlb)' to avoid precedence issues
#110: FILE: include/asm-generic/tlb.h:140:
+#define pmd_free_tlb(tlb, pmdp, address)			\
 	do {							\
 		tlb->need_flush = 1;				\
+		__pmd_free_tlb(tlb, pmdp, address);		\
 	} while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#128: FILE: include/asm-alpha/tlb.h:12:
+#define __pte_free_tlb(tlb,pte,address)		pte_free((tlb)->mm, pte)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#128: FILE: include/asm-alpha/tlb.h:12:
+#define __pte_free_tlb(tlb,pte,address)		pte_free((tlb)->mm, pte)
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#129: FILE: include/asm-alpha/tlb.h:13:
+#define __pmd_free_tlb(tlb,pmd,address)		pmd_free((tlb)->mm, pmd)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#129: FILE: include/asm-alpha/tlb.h:13:
+#define __pmd_free_tlb(tlb,pmd,address)		pmd_free((tlb)->mm, pmd)
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#142: FILE: include/asm-arm/tlb.h:88:
+#define pte_free_tlb(tlb,ptep,address)	pte_free((tlb)->mm, ptep)
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#142: FILE: include/asm-arm/tlb.h:88:
+#define pte_free_tlb(tlb,ptep,address)	pte_free((tlb)->mm, ptep)
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#143: FILE: include/asm-arm/tlb.h:89:
+#define pmd_free_tlb(tlb,pmdp,address)	pmd_free((tlb)->mm, pmdp)
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#143: FILE: include/asm-arm/tlb.h:89:
+#define pmd_free_tlb(tlb,pmdp,address)	pmd_free((tlb)->mm, pmdp)
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#156: FILE: include/asm-cris/pgalloc.h:48:
+#define __pte_free_tlb(tlb,pte,address) tlb_remove_page((tlb),(pte))
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#156: FILE: include/asm-cris/pgalloc.h:48:
+#define __pte_free_tlb(tlb,pte,address) tlb_remove_page((tlb),(pte))
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#156: FILE: include/asm-cris/pgalloc.h:48:
+#define __pte_free_tlb(tlb,pte,address) tlb_remove_page((tlb),(pte))
                                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#169: FILE: include/asm-frv/pgalloc.h:50:
+#define __pte_free_tlb(tlb,pte,address)		tlb_remove_page((tlb),(pte))
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#169: FILE: include/asm-frv/pgalloc.h:50:
+#define __pte_free_tlb(tlb,pte,address)		tlb_remove_page((tlb),(pte))
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#169: FILE: include/asm-frv/pgalloc.h:50:
+#define __pte_free_tlb(tlb,pte,address)		tlb_remove_page((tlb),(pte))
                                        		                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#178: FILE: include/asm-frv/pgalloc.h:59:
+#define __pmd_free_tlb(tlb,x,a)		do { } while (0)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#178: FILE: include/asm-frv/pgalloc.h:59:
+#define __pmd_free_tlb(tlb,x,a)		do { } while (0)
                             ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#191: FILE: include/asm-i386/pgalloc.h:52:
+#define __pte_free_tlb(tlb,pte,address) ^I^I^I^I^I\$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#191: FILE: include/asm-i386/pgalloc.h:52:
+#define __pte_free_tlb(tlb,pte,address) 					\
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#191: FILE: include/asm-i386/pgalloc.h:52:
+#define __pte_free_tlb(tlb,pte,address) 					\
                               ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pte' - possible side-effects?
#191: FILE: include/asm-i386/pgalloc.h:52:
+#define __pte_free_tlb(tlb,pte,address) 					\
 do {									\
 	paravirt_release_pt(page_to_pfn(pte));				\
 	tlb_remove_page((tlb),(pte));					\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#200: FILE: include/asm-i386/pgalloc.h:64:
+#define __pmd_free_tlb(tlb,x,a)		do { } while (0)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#200: FILE: include/asm-i386/pgalloc.h:64:
+#define __pmd_free_tlb(tlb,x,a)		do { } while (0)
                             ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#213: FILE: include/asm-ia64/pgalloc.h:51:
 }
+#define __pud_free_tlb(tlb, pud, address)	pud_free((tlb)->mm, pud)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#289: FILE: include/asm-mips/pgalloc.h:98:
+#define __pte_free_tlb(tlb,pte,address)	tlb_remove_page((tlb),(pte))
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#289: FILE: include/asm-mips/pgalloc.h:98:
+#define __pte_free_tlb(tlb,pte,address)	tlb_remove_page((tlb),(pte))
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#289: FILE: include/asm-mips/pgalloc.h:98:
+#define __pte_free_tlb(tlb,pte,address)	tlb_remove_page((tlb),(pte))
                                        	                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#298: FILE: include/asm-mips/pgalloc.h:107:
+#define __pmd_free_tlb(tlb,x,a)		do { } while (0)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#298: FILE: include/asm-mips/pgalloc.h:107:
+#define __pmd_free_tlb(tlb,x,a)		do { } while (0)
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#307: FILE: include/asm-mips/pgalloc.h:128:
+#define __pmd_free_tlb(tlb,x,a)	pmd_free((tlb)->mm, x)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#307: FILE: include/asm-mips/pgalloc.h:128:
+#define __pmd_free_tlb(tlb,x,a)	pmd_free((tlb)->mm, x)
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#334: FILE: include/asm-powerpc/pgalloc-32.h:17:
+#define __pmd_free_tlb(tlb,x,a)		do { } while (0)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#334: FILE: include/asm-powerpc/pgalloc-32.h:17:
+#define __pmd_free_tlb(tlb,x,a)		do { } while (0)
                             ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#360: FILE: include/asm-powerpc/pgalloc-64.h:137:
+#define __pmd_free_tlb(tlb, pmd, address) ^I\$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#378: FILE: include/asm-ppc/pgalloc.h:18:
+#define __pmd_free_tlb(tlb,x,a)		do { } while (0)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#378: FILE: include/asm-ppc/pgalloc.h:18:
+#define __pmd_free_tlb(tlb,x,a)		do { } while (0)
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#400: FILE: include/asm-s390/pgalloc.h:87:
+#define __pmd_free_tlb(tlb,x,a)		do { } while (0)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#400: FILE: include/asm-s390/pgalloc.h:87:
+#define __pmd_free_tlb(tlb,x,a)		do { } while (0)
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#409: FILE: include/asm-s390/pgalloc.h:123:
+#define __pmd_free_tlb(tlb,pmd,address)		\
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#409: FILE: include/asm-s390/pgalloc.h:123:
+#define __pmd_free_tlb(tlb,pmd,address)		\
                               ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tlb' - possible side-effects?
#409: FILE: include/asm-s390/pgalloc.h:123:
+#define __pmd_free_tlb(tlb,pmd,address)		\
 	do {					\
 		tlb_flush_mmu(tlb, 0, 0);	\
 		pmd_free((tlb)->mm, pmd);	\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#431: FILE: include/asm-sh/pgalloc.h:67:
+#define __pte_free_tlb(tlb,pte,address) tlb_remove_page((tlb),(pte))
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#431: FILE: include/asm-sh/pgalloc.h:67:
+#define __pte_free_tlb(tlb,pte,address) tlb_remove_page((tlb),(pte))
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#431: FILE: include/asm-sh/pgalloc.h:67:
+#define __pte_free_tlb(tlb,pte,address) tlb_remove_page((tlb),(pte))
                                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#440: FILE: include/asm-sh/pgalloc.h:75:
+#define __pmd_free_tlb(tlb,x,a)		do { } while (0)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#440: FILE: include/asm-sh/pgalloc.h:75:
+#define __pmd_free_tlb(tlb,x,a)		do { } while (0)
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#453: FILE: include/asm-sh64/pgalloc.h:77:
+#define __pte_free_tlb(tlb,pte,address) tlb_remove_page((tlb),(pte))
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#453: FILE: include/asm-sh64/pgalloc.h:77:
+#define __pte_free_tlb(tlb,pte,address) tlb_remove_page((tlb),(pte))
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#453: FILE: include/asm-sh64/pgalloc.h:77:
+#define __pte_free_tlb(tlb,pte,address) tlb_remove_page((tlb),(pte))
                                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#463: FILE: include/asm-sh64/pgalloc.h:89:
+#define __pmd_free_tlb(tlb,pmd,addr)	do { } while (0)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#463: FILE: include/asm-sh64/pgalloc.h:89:
+#define __pmd_free_tlb(tlb,pmd,addr)	do { } while (0)
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#472: FILE: include/asm-sh64/pgalloc.h:104:
+#define __pmd_free_tlb(tlb,pmd,addr)	pmd_free((tlb)->mm, pmd)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#472: FILE: include/asm-sh64/pgalloc.h:104:
+#define __pmd_free_tlb(tlb,pmd,addr)	pmd_free((tlb)->mm, pmd)
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#508: FILE: include/asm-sparc64/tlb.h:51:
+#define __tlb_remove_tlb_entry(mp,ptep,addr)	do { } while (0)
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#508: FILE: include/asm-sparc64/tlb.h:51:
+#define __tlb_remove_tlb_entry(mp,ptep,addr)	do { } while (0)
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#509: FILE: include/asm-sparc64/tlb.h:52:
+#define __pte_free_tlb(mp,ptepage,address)	pte_free((mp)->mm,ptepage)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#509: FILE: include/asm-sparc64/tlb.h:52:
+#define __pte_free_tlb(mp,ptepage,address)	pte_free((mp)->mm,ptepage)
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#509: FILE: include/asm-sparc64/tlb.h:52:
+#define __pte_free_tlb(mp,ptepage,address)	pte_free((mp)->mm,ptepage)
                                           	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#510: FILE: include/asm-sparc64/tlb.h:53:
+#define __pmd_free_tlb(mp,pmdp,address)		pmd_free((mp)->mm,pmdp)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#510: FILE: include/asm-sparc64/tlb.h:53:
+#define __pmd_free_tlb(mp,pmdp,address)		pmd_free((mp)->mm,pmdp)
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#510: FILE: include/asm-sparc64/tlb.h:53:
+#define __pmd_free_tlb(mp,pmdp,address)		pmd_free((mp)->mm,pmdp)
                                        		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#523: FILE: include/asm-x86_64/pgalloc.h:134:
+#define __pte_free_tlb(tlb,pte,addr)  quicklist_free_page(QUICK_PT, NULL,(pte))
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#523: FILE: include/asm-x86_64/pgalloc.h:134:
+#define __pte_free_tlb(tlb,pte,addr)  quicklist_free_page(QUICK_PT, NULL,(pte))
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#523: FILE: include/asm-x86_64/pgalloc.h:134:
+#define __pte_free_tlb(tlb,pte,addr)  quicklist_free_page(QUICK_PT, NULL,(pte))
                                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#527: FILE: include/asm-x86_64/pgalloc.h:136:
+#define __pmd_free_tlb(tlb,x,addr)    quicklist_free(QUICK_PT, NULL, (x))
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#527: FILE: include/asm-x86_64/pgalloc.h:136:
+#define __pmd_free_tlb(tlb,x,addr)    quicklist_free(QUICK_PT, NULL, (x))
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#528: FILE: include/asm-x86_64/pgalloc.h:137:
+#define __pud_free_tlb(tlb,x,addr)    quicklist_free(QUICK_PT, NULL, (x))
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#528: FILE: include/asm-x86_64/pgalloc.h:137:
+#define __pud_free_tlb(tlb,x,addr)    quicklist_free(QUICK_PT, NULL, (x))
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#541: FILE: include/asm-xtensa/tlb.h:23:
+#define __pte_free_tlb(tlb,pte,address)		pte_free((tlb)->mm, pte)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#541: FILE: include/asm-xtensa/tlb.h:23:
+#define __pte_free_tlb(tlb,pte,address)		pte_free((tlb)->mm, pte)
                               ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tlb' - possible side-effects?
#622: FILE: include/asm-ia64/tlb.h:213:
+#define pte_free_tlb(tlb, ptep, addr)			\
 do {							\
 	tlb->need_flush = 1;				\
+	__pte_free_tlb(tlb, ptep, addr);		\
 } while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'tlb' may be better as '(tlb)' to avoid precedence issues
#622: FILE: include/asm-ia64/tlb.h:213:
+#define pte_free_tlb(tlb, ptep, addr)			\
 do {							\
 	tlb->need_flush = 1;				\
+	__pte_free_tlb(tlb, ptep, addr);		\
 } while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tlb' - possible side-effects?
#630: FILE: include/asm-ia64/tlb.h:219:
+#define pmd_free_tlb(tlb, ptep, addr)			\
 do {							\
 	tlb->need_flush = 1;				\
+	__pmd_free_tlb(tlb, ptep, addr);		\
 } while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'tlb' may be better as '(tlb)' to avoid precedence issues
#630: FILE: include/asm-ia64/tlb.h:219:
+#define pmd_free_tlb(tlb, ptep, addr)			\
 do {							\
 	tlb->need_flush = 1;				\
+	__pmd_free_tlb(tlb, ptep, addr);		\
 } while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tlb' - possible side-effects?
#638: FILE: include/asm-ia64/tlb.h:225:
+#define pud_free_tlb(tlb, pudp, addr)			\
 do {							\
 	tlb->need_flush = 1;				\
+	__pud_free_tlb(tlb, pudp, addr);		\
 } while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'tlb' may be better as '(tlb)' to avoid precedence issues
#638: FILE: include/asm-ia64/tlb.h:225:
+#define pud_free_tlb(tlb, pudp, addr)			\
 do {							\
 	tlb->need_flush = 1;				\
+	__pud_free_tlb(tlb, pudp, addr);		\
 } while (0)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000395284.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 67 errors, 2 warnings, 15 checks, 466 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000395284.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
