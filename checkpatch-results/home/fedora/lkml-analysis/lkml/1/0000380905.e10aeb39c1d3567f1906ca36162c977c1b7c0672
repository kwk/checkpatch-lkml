WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#49: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#84: FILE: Documentation/dst/algorithms.txt:31:
+^I^I^I    Figure 1. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'algoritm' may be misspelled - perhaps 'algorithm'?
#91: FILE: Documentation/dst/algorithms.txt:38:
+the nearest node - algoritm keeps track of previous operation
                    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#92: FILE: Documentation/dst/algorithms.txt:39:
+and knows where it was stopped, so that subsequent seek to the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#130: FILE: Documentation/dst/algorithms.txt:77:
+stage algorithm can add node into private map. $

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#144: FILE: Documentation/dst/algorithms.txt:91:
+It must return zero on success or negative value otherwise. It is upto
                                                                   ^^^^

WARNING:TYPO_SPELLING: 'happend' may be misspelled - perhaps 'happened'?
#154: FILE: Documentation/dst/algorithms.txt:101:
+This callback is invoked for each error, which happend when processed
                                                ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#164: FILE: Documentation/dst/algorithms.txt:111:
+Algorithm must provide its name and above structure to the $

WARNING:TYPO_SPELLING: 'explaination' may be misspelled - perhaps 'explanation'?
#188: FILE: Documentation/dst/dst.txt:14:
+Here goes small explaination of basic therms.
                 ^^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#199: FILE: Documentation/dst/dst.txt:25:
+to its data via network. Remote clients can connect to given local $

WARNING:TYPO_SPELLING: 'errorneous' may be misspelled - perhaps 'erroneous'?
#236: FILE: Documentation/dst/dst.txt:62:
+to failed node and no requests are marked as errorneous, instead
                                              ^^^^^^^^^^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#269: FILE: drivers/block/dst/Kconfig:1:
+config DST
+	tristate "Distributed storage"
+	depends on NET
+	select CONNECTOR
+	---help---
+	This driver allows to create a distributed storage.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#276: FILE: drivers/block/dst/Kconfig:8:
+config DST_ALG_LINEAR
+	tristate "Linear distribution algorithm"
+	depends on DST
+	---help---
+	This module allows to create linear mapping of the nodes
+	in the distributed storage.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#283: FILE: drivers/block/dst/Kconfig:15:
+config DST_ALG_MIRROR
+	tristate "Mirror distribution algorithm"
+	depends on DST
+	---help---
+	This module allows to create a mirror of the noes in the
+	distributed storage.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#307: FILE: drivers/block/dst/alg_linear.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#380: FILE: drivers/block/dst/alg_linear.c:74:
+^I.add_node ^I= dst_linear_add_node,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#381: FILE: drivers/block/dst/alg_linear.c:75:
+^I.del_node ^I= dst_linear_del_node,$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#386: FILE: drivers/block/dst/alg_linear.c:80:
+static int __devinit alg_linear_init(void)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#395: FILE: drivers/block/dst/alg_linear.c:89:
+static void __devexit alg_linear_exit(void)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#412: FILE: drivers/block/dst/alg_mirror.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#415: FILE: drivers/block/dst/alg_mirror.c:4:
+ * $

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#436: FILE: drivers/block/dst/alg_mirror.c:25:
+struct dst_mirror_priv
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#441: FILE: drivers/block/dst/alg_mirror.c:30:
+	spinlock_t		backlog_lock;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#451: FILE: drivers/block/dst/alg_mirror.c:40:
+static ssize_t dst_mirror_chunk_mask_show(struct device *dev,
+		struct device_attribute *attr, char *buf)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#458: FILE: drivers/block/dst/alg_mirror.c:47:
+	for (i = 0; i < priv->chunk_num/BITS_PER_LONG; ++i) {
 	                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#463: FILE: drivers/block/dst/alg_mirror.c:52:
+			sprintf(buf, "%c", (bit)?'+':'-');
 			                        ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#463: FILE: drivers/block/dst/alg_mirror.c:52:
+			sprintf(buf, "%c", (bit)?'+':'-');
 			                            ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'dst_mirror_chunk_mask_show' to 'chunks_show'
#474: FILE: drivers/block/dst/alg_mirror.c:63:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:LINE_SPACING: Missing a blank line after declarations
#499: FILE: drivers/block/dst/alg_mirror.c:88:
+		int err;
+		err = device_create_file(&n->device, &dev_attr_chunks);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*priv)...) over kzalloc(sizeof(struct dst_mirror_priv)...)
#516: FILE: drivers/block/dst/alg_mirror.c:105:
+	priv = kzalloc(sizeof(struct dst_mirror_priv), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#522: FILE: drivers/block/dst/alg_mirror.c:111:
+	priv->chunk = vmalloc(priv->chunk_num/BITS_PER_LONG * sizeof(long));
 	                                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#526: FILE: drivers/block/dst/alg_mirror.c:115:
+	memset(priv->chunk, 0, priv->chunk_num/BITS_PER_LONG * sizeof(long));
 	                                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#532: FILE: drivers/block/dst/alg_mirror.c:121:
+	dprintk("%s: %llu:%llu, chunk_num: %u, disk_size: %llu.\n",
+			__func__, n->start, n->size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#569: FILE: drivers/block/dst/alg_mirror.c:158:
+			req = list_entry(p->backlog_list.next,
+					struct dst_request,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#583: FILE: drivers/block/dst/alg_mirror.c:172:
+		for (i=0; i<num; ++i)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#583: FILE: drivers/block/dst/alg_mirror.c:172:
+		for (i=0; i<num; ++i)
 		           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#584: FILE: drivers/block/dst/alg_mirror.c:173:
+			if (test_bit(idx+i, p->chunk))
 			                ^

WARNING:SPLIT_STRING: quoted string split across lines
#588: FILE: drivers/block/dst/alg_mirror.c:177:
+		dprintk("%s: idx: %u, num: %u, i: %u, req: %p, "
+				"start: %llu, size: %llu.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#589: FILE: drivers/block/dst/alg_mirror.c:178:
+^I^I^I^I__func__, idx, num, i, req, $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#596: FILE: drivers/block/dst/alg_mirror.c:185:
+				printk("%s: congestion [%c]: req: %p, "

WARNING:SPLIT_STRING: quoted string split across lines
#597: FILE: drivers/block/dst/alg_mirror.c:186:
+				printk("%s: congestion [%c]: req: %p, "
+						"start: %llu, size: %llu.\n",

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#599: FILE: drivers/block/dst/alg_mirror.c:188:
+					(bio_rw(req->bio) == WRITE)?'W':'R',
 					                           ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#599: FILE: drivers/block/dst/alg_mirror.c:188:
+					(bio_rw(req->bio) == WRITE)?'W':'R',
 					                               ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#617: FILE: drivers/block/dst/alg_mirror.c:206:
+		printk("%s: node: %p, %llu:%llu synchronization "

WARNING:SPLIT_STRING: quoted string split across lines
#618: FILE: drivers/block/dst/alg_mirror.c:207:
+		printk("%s: node: %p, %llu:%llu synchronization "
+				"has been completed.\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#627: FILE: drivers/block/dst/alg_mirror.c:216:
+		printk("%s: not synced node n: %p.\n", __func__, n);

WARNING:LINE_SPACING: Missing a blank line after declarations
#640: FILE: drivers/block/dst/alg_mirror.c:229:
+	unsigned int num, idx;
+	void (*process_bit[])(int nr, volatile void *addr) =

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#640: FILE: drivers/block/dst/alg_mirror.c:229:
+	void (*process_bit[])(int nr, volatile void *addr) =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#641: FILE: drivers/block/dst/alg_mirror.c:230:
+	void (*process_bit[])(int nr, volatile void *addr) =
+		{&__clear_bit, &__set_bit};

WARNING:SPLIT_STRING: quoted string split across lines
#655: FILE: drivers/block/dst/alg_mirror.c:244:
+	dprintk("%s: req_priv: %p, chunk %p, %llu:%llu start: %llu, size: %llu, "
+		"chunk_num: %u, idx: %d, num: %d, err: %d.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#656: FILE: drivers/block/dst/alg_mirror.c:245:
+^I^I__func__, req->priv, priv->chunk, req->node->start, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#657: FILE: drivers/block/dst/alg_mirror.c:246:
+^I^Ireq->node->size, start, req->orig_size, priv->chunk_num, $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#661: FILE: drivers/block/dst/alg_mirror.c:250:
+		printk("%s: %llu:%llu req: %p, start: %llu, orig_size: %llu, "

WARNING:SPLIT_STRING: quoted string split across lines
#662: FILE: drivers/block/dst/alg_mirror.c:251:
+		printk("%s: %llu:%llu req: %p, start: %llu, orig_size: %llu, "
+			"req_start: %llu, req_size: %llu, "

WARNING:SPLIT_STRING: quoted string split across lines
#663: FILE: drivers/block/dst/alg_mirror.c:252:
+			"req_start: %llu, req_size: %llu, "
+			"chunk_num: %u, idx: %d, num: %d, err: %d.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#665: FILE: drivers/block/dst/alg_mirror.c:254:
+^I^I^Istart, req->orig_size, $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#671: FILE: drivers/block/dst/alg_mirror.c:260:
+	for (i=0; i<num; ++i)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#671: FILE: drivers/block/dst/alg_mirror.c:260:
+	for (i=0; i<num; ++i)
 	           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#672: FILE: drivers/block/dst/alg_mirror.c:261:
+		process_bit[!!err](idx+i, priv->chunk);
 		                      ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#683: FILE: drivers/block/dst/alg_mirror.c:272:
+	printk("%s: freeing bio: %p, bi_size: %u, "

WARNING:SPLIT_STRING: quoted string split across lines
#684: FILE: drivers/block/dst/alg_mirror.c:273:
+	printk("%s: freeing bio: %p, bi_size: %u, "
+			"orig_size: %llu, req: %p, node: %p.\n",

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#690: FILE: drivers/block/dst/alg_mirror.c:279:
+	for (i = 0; i < priv->chunk_num/BITS_PER_LONG; ++i) {
 	                               ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#708: FILE: drivers/block/dst/alg_mirror.c:297:
+	printk("%s: bio: %p, err: %d, size: %u, req: %p.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#709: FILE: drivers/block/dst/alg_mirror.c:298:
+	printk("%s: bio: %p, err: %d, size: %u, req: %p.\n",
+			__func__, bio, err, bio->bi_size, req);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#731: FILE: drivers/block/dst/alg_mirror.c:320:
+static int dst_mirror_sync_block(struct dst_node *n,
+		int bit_start, int bit_num)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#735: FILE: drivers/block/dst/alg_mirror.c:324:
+	unsigned int nr_pages = to_bytes(bit_num)/PAGE_SIZE, i;
 	                                         ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#740: FILE: drivers/block/dst/alg_mirror.c:329:
+	printk("%s: bit_start: %d, bit_num: %d, start: %llu, nr_pages: %u, "

WARNING:SPLIT_STRING: quoted string split across lines
#741: FILE: drivers/block/dst/alg_mirror.c:330:
+	printk("%s: bit_start: %d, bit_num: %d, start: %llu, nr_pages: %u, "
+			"disk_size: %llu.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#769: FILE: drivers/block/dst/alg_mirror.c:358:
+			err = bio_add_pc_page(n->st->queue, bio,
+					page, PAGE_SIZE, 0);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#781: FILE: drivers/block/dst/alg_mirror.c:370:
+		req->size = req->orig_size = bio->bi_size;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SPLIT_STRING: quoted string split across lines
#789: FILE: drivers/block/dst/alg_mirror.c:378:
+		dprintk("%s: start: %llu, size(pages): %u, bio: %p, "
+				"size: %u, cnt: %d, req: %p, size: %llu.\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#827: FILE: drivers/block/dst/alg_mirror.c:416:
+	printk("%s: node: %p, %llu:%llu synchronization has been started.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#828: FILE: drivers/block/dst/alg_mirror.c:417:
+	printk("%s: node: %p, %llu:%llu synchronization has been started.\n",
+			__func__, n, n->start, n->size);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#830: FILE: drivers/block/dst/alg_mirror.c:419:
+	for (i = 0; i < priv->chunk_num/BITS_PER_LONG; ++i) {
 	                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#844: FILE: drivers/block/dst/alg_mirror.c:433:
+			word >>= (bit+1);
 			             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#848: FILE: drivers/block/dst/alg_mirror.c:437:
+			err = dst_mirror_sync_block(n, start + i*BITS_PER_LONG,
 			                                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#849: FILE: drivers/block/dst/alg_mirror.c:438:
+			err = dst_mirror_sync_block(n, start + i*BITS_PER_LONG,
+					num);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#876: FILE: drivers/block/dst/alg_mirror.c:465:
+	dprintk("%s: req: %p, bio: %p, req->bio: %p, err: %d.\n",
+			__func__, req, bio, req->bio, err);

WARNING:SPLIT_STRING: quoted string split across lines
#897: FILE: drivers/block/dst/alg_mirror.c:486:
+	dprintk("%s: req: %p, priv: %p err: %d, bio: %p, "
+			"cnt: %d, orig_size: %llu.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#909: FILE: drivers/block/dst/alg_mirror.c:498:
+static int dst_mirror_process_request(struct dst_request *req,
+		struct dst_node *n)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#928: FILE: drivers/block/dst/alg_mirror.c:517:
+		dprintk("%s: clone: %p, bio: %p, req: %p.\n",
+				__func__, clone, req->bio, req);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#934: FILE: drivers/block/dst/alg_mirror.c:523:
+^I^I * Network state processing engine will clone request $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#950: FILE: drivers/block/dst/alg_mirror.c:539:
+	dprintk("%s: req: %p, n: %p, bdev: %p, err: %d.\n",
+			__func__, req, n, n->bdev, err);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#974: FILE: drivers/block/dst/alg_mirror.c:563:
+	orig_num = num = atomic_read(&req->node->shared_num) + 1;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#980: FILE: drivers/block/dst/alg_mirror.c:569:
+	dprintk("\n%s: req: %p, mirror to %d nodes.\n",
+			__func__, req, num);

WARNING:SPLIT_STRING: quoted string split across lines
#989: FILE: drivers/block/dst/alg_mirror.c:578:
+			dprintk("\n%s: req: %p, start: %llu, size: %llu, "
+					"num: %d, n: %p, state: %p.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#990: FILE: drivers/block/dst/alg_mirror.c:579:
+^I^I^I^I__func__, req, req->start, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1004: FILE: drivers/block/dst/alg_mirror.c:593:
+		dprintk("%s: req: %p, num: %d, err: %d.\n",
+				__func__, req, num, err);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1024: FILE: drivers/block/dst/alg_mirror.c:613:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1024: FILE: drivers/block/dst/alg_mirror.c:613:
+ $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1071: FILE: drivers/block/dst/alg_mirror.c:660:
+			printk("%s: 1 req: %p, bio: %p, node: %p, err: %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1072: FILE: drivers/block/dst/alg_mirror.c:661:
+			printk("%s: 1 req: %p, bio: %p, node: %p, err: %d.\n",
+				__func__, req, req->bio, min_dist_node, err);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1078: FILE: drivers/block/dst/alg_mirror.c:667:
+		printk("%s: req: %p, bio: %p, node: %p, err: %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1079: FILE: drivers/block/dst/alg_mirror.c:668:
+		printk("%s: req: %p, bio: %p, node: %p, err: %d.\n",
+			__func__, req, req->bio, min_dist_node, err);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1091: FILE: drivers/block/dst/alg_mirror.c:680:
+^Iint (*remap[])(struct dst_request *) = $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1092: FILE: drivers/block/dst/alg_mirror.c:681:
+	int (*remap[])(struct dst_request *) = 
+		{&dst_mirror_read, &dst_mirror_write};

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1106: FILE: drivers/block/dst/alg_mirror.c:695:
+		if (test_bit(DST_NODE_NOTSYNC, &st->node->flags)) {
+			return dst_mirror_resync(st->node);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1116: FILE: drivers/block/dst/alg_mirror.c:705:
+	list_for_each_entry_safe(req, tmp, &st->request_list,
+					request_list_entry) {

WARNING:SPLIT_STRING: quoted string split across lines
#1119: FILE: drivers/block/dst/alg_mirror.c:708:
+		dprintk("%s: requeue [%c], start: %llu, idx: %d,"
+				" num: %d, size: %llu, offset: %u, err: %d.\n",

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1120: FILE: drivers/block/dst/alg_mirror.c:709:
+			__func__, (bio_rw(req->bio) == WRITE)?'W':'R',
 			                                     ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1120: FILE: drivers/block/dst/alg_mirror.c:709:
+			__func__, (bio_rw(req->bio) == WRITE)?'W':'R',
 			                                         ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1149: FILE: drivers/block/dst/alg_mirror.c:738:
+static int __devinit alg_mirror_init(void)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1168: FILE: drivers/block/dst/alg_mirror.c:757:
+static void __devexit alg_mirror_exit(void)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1186: FILE: drivers/block/dst/dcore.c:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1254: FILE: drivers/block/dst/dcore.c:69:
+^I.name ^I^I= "dst",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1255: FILE: drivers/block/dst/dcore.c:70:
+^I.match ^I^I= &dst_dev_match,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1259: FILE: drivers/block/dst/dcore.c:74:
+^I.bus ^I^I= &dst_dev_bus_type,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1260: FILE: drivers/block/dst/dcore.c:75:
+^I.release ^I= &dst_dev_release$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1268: FILE: drivers/block/dst/dcore.c:83:
+^I.release ^I= &dst_node_release$

WARNING:TYPO_SPELLING: 'splitted' may be misspelled - perhaps 'split'?
#1280: FILE: drivers/block/dst/dcore.c:95:
+ * which are splitted between nodes (part with local node destination
              ^^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1311: FILE: drivers/block/dst/dcore.c:126:
+		dprintk("%s: start: %llu, num: %d, idx: %d, offset: %u, "
+				"size: %llu, bi_idx: %d, bi_vcnt: %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1316: FILE: drivers/block/dst/dcore.c:131:
+		if (likely(bio->bi_idx == req->idx &&
+					bio->bi_vcnt == req->num)) {

WARNING:SPLIT_STRING: quoted string split across lines
#1343: FILE: drivers/block/dst/dcore.c:158:
+			dprintk("%s: start: %llu, num: %d, idx: %d, "
+				"offset: %u, size: %llu, "

WARNING:SPLIT_STRING: quoted string split across lines
#1344: FILE: drivers/block/dst/dcore.c:159:
+				"offset: %u, size: %llu, "
+				"bi_idx: %d, bi_vcnt: %d, req: %p, bio: %p.\n",

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1349: FILE: drivers/block/dst/dcore.c:164:
+
+		}

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1367: FILE: drivers/block/dst/dcore.c:182:
+	unsigned int bio_sectors = bio->bi_size>>9;
 	                                       ^

WARNING:SPLIT_STRING: quoted string split across lines
#1378: FILE: drivers/block/dst/dcore.c:193:
+		dprintk("%s: failed to find a node for bio: %p, "
+				"sector: %llu.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1384: FILE: drivers/block/dst/dcore.c:199:
+	dprintk("%s: bio: %llu-%llu, dev: %llu-%llu, in sectors.\n",
+			__func__, bio->bi_sector, bio->bi_sector+bio_sectors,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1384: FILE: drivers/block/dst/dcore.c:199:
+			__func__, bio->bi_sector, bio->bi_sector+bio_sectors,
 			                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1385: FILE: drivers/block/dst/dcore.c:200:
+			n->start, n->start+n->size);
 			                  ^

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#1392: FILE: drivers/block/dst/dcore.c:207:
+	req.flags = (test_bit(DST_NODE_FROZEN, &n->flags))?
 	                                                  ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1393: FILE: drivers/block/dst/dcore.c:208:
+				DST_REQ_ALWAYS_QUEUE:0;
 				                    ^

WARNING:SPLIT_STRING: quoted string split across lines
#1436: FILE: drivers/block/dst/dcore.c:251:
+			dprintk("%s: split: start: %llu/%llu, size: %llu, "
+					"total_size: %llu, diff: %u, idx: %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#1437: FILE: drivers/block/dst/dcore.c:252:
+					"total_size: %llu, diff: %u, idx: %d, "
+					"num: %d, bv_len: %u, bv_offset: %u.\n",

ERROR:SPACING: spaces required around that '?' (ctx:VxE)
#1453: FILE: drivers/block/dst/dcore.c:268:
+			req.flags = (test_bit(DST_NODE_FROZEN, &n->flags))?
 			                                                  ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1454: FILE: drivers/block/dst/dcore.c:269:
+				DST_REQ_ALWAYS_QUEUE:0;
 				                    ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1455: FILE: drivers/block/dst/dcore.c:270:
+			req.orig_size = req.size = diff;

WARNING:SPLIT_STRING: quoted string split across lines
#1466: FILE: drivers/block/dst/dcore.c:281:
+			dprintk("%s: next: start: %llu, size: %llu, "
+				"total_size: %llu, diff: %u, idx: %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#1467: FILE: drivers/block/dst/dcore.c:282:
+				"total_size: %llu, diff: %u, idx: %d, "
+				"num: %d, offset: %u, bv_len: %u, "

WARNING:SPLIT_STRING: quoted string split across lines
#1468: FILE: drivers/block/dst/dcore.c:283:
+				"num: %d, offset: %u, bv_len: %u, "
+				"bv_offset: %u.\n",

WARNING:SPLIT_STRING: quoted string split across lines
#1480: FILE: drivers/block/dst/dcore.c:295:
+				dprintk("%s: failed to find a split node for "
+				  "bio: %p, sector: %llu, start: %llu.\n",

WARNING:SPLIT_STRING: quoted string split across lines
#1492: FILE: drivers/block/dst/dcore.c:307:
+			dprintk("%s: req.start: %llu, start: %llu, "
+					"dev_start: %llu, dev_size: %llu, "

WARNING:SPLIT_STRING: quoted string split across lines
#1493: FILE: drivers/block/dst/dcore.c:308:
+					"dev_start: %llu, dev_size: %llu, "
+					"rest_in_node: %llu.\n",

WARNING:SPLIT_STRING: quoted string split across lines
#1503: FILE: drivers/block/dst/dcore.c:318:
+	dprintk("%s: last request: start: %llu, size: %llu, "
+			"total_size: %llu.\n", __func__,

WARNING:SPLIT_STRING: quoted string split across lines
#1511: FILE: drivers/block/dst/dcore.c:326:
+		dprintk("%s: last: start: %llu/%llu, size: %llu, "
+				"total_size: %llu, idx: %d, num: %d.\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1519: FILE: drivers/block/dst/dcore.c:334:
+			BUG_ON(total_size != 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1527: FILE: drivers/block/dst/dcore.c:342:
+
+

WARNING:TYPO_SPELLING: 'spcific' may be misspelled - perhaps 'specific'?
#1530: FILE: drivers/block/dst/dcore.c:345:
+ * It calls algorithm spcific remapping code only.
                       ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1538: FILE: drivers/block/dst/dcore.c:353:
+	dprintk("\n%s: start: st: %p, bio: %p, cnt: %u.\n",
+			__func__, st, bio, bio->bi_vcnt);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1543: FILE: drivers/block/dst/dcore.c:358:
+	dprintk("%s: end: st: %p, bio: %p, err: %d.\n",
+			__func__, st, bio, err);

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#1556: FILE: drivers/block/dst/dcore.c:371:
+static struct block_device_operations dst_blk_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1590: FILE: drivers/block/dst/dcore.c:405:
+	snprintf(st->disk->disk_name, sizeof(st->disk->disk_name),
+			"dst-%s-%d", st->name, st->disk->first_minor);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1611: FILE: drivers/block/dst/dcore.c:426:
+static ssize_t dst_name_show(struct device *dev,
+		struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1627: FILE: drivers/block/dst/dcore.c:442:
+		dprintk("%s: n: %p, start: %llu, size: %llu.\n",
+				__func__, n, n->start, n->size);

WARNING:TYPO_SPELLING: 'syfs' may be misspelled - perhaps 'sysfs'?
#1643: FILE: drivers/block/dst/dcore.c:458:
+ * Shows node layout in syfs.
                         ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1646: FILE: drivers/block/dst/dcore.c:461:
+static ssize_t dst_nodes_show(struct device *dev,
+		struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1683: FILE: drivers/block/dst/dcore.c:498:
+static ssize_t dst_alg_show(struct device *dev,
+		struct device_attribute *attr, char *buf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1686: FILE: drivers/block/dst/dcore.c:501:
+	struct dst_storage *st = container_of(dev, struct dst_storage, device);
+	return sprintf(buf, "%s\n", st->alg->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1694: FILE: drivers/block/dst/dcore.c:509:
+static ssize_t dst_remove_nodes(struct device *dev,
+		struct device_attribute *attr,

WARNING:LINE_SPACING: Missing a blank line after declarations
#1698: FILE: drivers/block/dst/dcore.c:513:
+	struct dst_storage *st = container_of(dev, struct dst_storage, device);
+	dst_remove_all_nodes(st);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'dst_name_show' to 'name_show'
#1700: FILE: drivers/block/dst/dcore.c:515:
+}

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'dst_nodes_show' to 'nodes_show'
#1703: FILE: drivers/block/dst/dcore.c:518:
+static DEVICE_ATTR(nodes, 0444, dst_nodes_show, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'dst_alg_show' to 'alg_show'
#1704: FILE: drivers/block/dst/dcore.c:519:
+static DEVICE_ATTR(alg, 0444, dst_alg_show, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'dst_remove_nodes' to 'remove_all_nodes_store'
#1705: FILE: drivers/block/dst/dcore.c:520:
+static DEVICE_ATTR(remove_all_nodes, 0644, NULL, dst_remove_nodes);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1759: FILE: drivers/block/dst/dcore.c:574:
+static ssize_t dst_show_start(struct device *dev,
+		struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1767: FILE: drivers/block/dst/dcore.c:582:
+static ssize_t dst_show_size(struct device *dev,
+		struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1779: FILE: drivers/block/dst/dcore.c:594:
+static ssize_t dst_show_type(struct device *dev,
+		struct device_attribute *attr, char *buf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1799: FILE: drivers/block/dst/dcore.c:614:
+		struct sockaddr_in *sin = (struct sockaddr_in *)&addr;
+		return sprintf(buf, "R: %u.%u.%u.%u:%d\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#1803: FILE: drivers/block/dst/dcore.c:618:
+		struct sockaddr_in6 *sin = (struct sockaddr_in6 *)&addr;
+		return sprintf(buf,

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'dst_show_start' to 'start_show'
#1808: FILE: drivers/block/dst/dcore.c:623:
+}

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'dst_show_size' to 'size_show'
#1811: FILE: drivers/block/dst/dcore.c:626:
+static DEVICE_ATTR(size, 0444, dst_show_size, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'dst_show_type' to 'type_show'
#1812: FILE: drivers/block/dst/dcore.c:627:
+static DEVICE_ATTR(type, 0444, dst_show_type, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1849: FILE: drivers/block/dst/dcore.c:664:
+	snprintf(n->device.bus_id, sizeof(n->device.bus_id),
+			"n-%llu-%p", n->start, n);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*st)...) over kzalloc(sizeof(struct dst_storage)...)
#1889: FILE: drivers/block/dst/dcore.c:704:
+	st = kzalloc(sizeof(struct dst_storage), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*alg)...) over kzalloc(sizeof(struct dst_alg)...)
#1946: FILE: drivers/block/dst/dcore.c:761:
+	alg = kzalloc(sizeof(struct dst_alg), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1975: FILE: drivers/block/dst/dcore.c:790:
+	dprintk("%s: alg: %p, refcnt: %d.\n",
+			__func__, alg, atomic_read(&alg->refcnt));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2022: FILE: drivers/block/dst/dcore.c:837:
+	BUG_ON(rb_first(&st->tree_root) != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rb_first"
#2022: FILE: drivers/block/dst/dcore.c:837:
+	BUG_ON(rb_first(&st->tree_root) != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2031: FILE: drivers/block/dst/dcore.c:846:
+	dprintk("%s: st: %p, refcnt: %d.\n",
+			__func__, st, atomic_read(&st->refcnt));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2039: FILE: drivers/block/dst/dcore.c:854:
+	dprintk("%s: node: %p, start: %llu, size: %llu, refcnt: %d.\n",
+			__func__, n, n->start, n->size,

WARNING:SPLIT_STRING: quoted string split across lines
#2046: FILE: drivers/block/dst/dcore.c:861:
+		dprintk("%s: freeing node: %p, start: %llu, size: %llu, "
+				"refcnt: %d.\n",

WARNING:REPEATED_WORD: Possible repeated word: 'of'
#2066: FILE: drivers/block/dst/dcore.c:881:
+ * Tree of of the nodes, which form the storage.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2081: FILE: drivers/block/dst/dcore.c:896:
+			__func__, dn->start, dn->start+dn->size, start);
 			                              ^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#2082: FILE: drivers/block/dst/dcore.c:897:
+		if (cmp < 0)
[...]
+		else if (cmp > 0)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2086: FILE: drivers/block/dst/dcore.c:901:
+		else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2116: FILE: drivers/block/dst/dcore.c:931:
+static struct dst_node *dst_storage_tree_add(struct dst_node *new,
+		struct dst_storage *st)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2128: FILE: drivers/block/dst/dcore.c:943:
+		dprintk("%s: tree: %llu-%llu, new: %llu.\n",
+				__func__, dn->start, dn->start+dn->size,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2128: FILE: drivers/block/dst/dcore.c:943:
+				__func__, dn->start, dn->start+dn->size,
 				                              ^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#2130: FILE: drivers/block/dst/dcore.c:945:
+		if (cmp < 0)
[...]
+		else if (cmp > 0)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2134: FILE: drivers/block/dst/dcore.c:949:
+		else {

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#2151: FILE: drivers/block/dst/dcore.c:966:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#2154: FILE: drivers/block/dst/dcore.c:969:
+	err = path_lookup(path, LOOKUP_FOLLOW, &nd);
 	                                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#2158: FILE: drivers/block/dst/dcore.c:973:
+	inode = nd.dentry->d_inode;
 	        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#2172: FILE: drivers/block/dst/dcore.c:987:
+	path_release(&nd);
 	              ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2206: FILE: drivers/block/dst/dcore.c:1021:
+static int dst_setup_local(struct dst_node *n, struct dst_ctl *ctl,
+		struct dst_local_ctl *l)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2215: FILE: drivers/block/dst/dcore.c:1030:
+	n->bdev = open_by_devnum(dev, FMODE_READ|FMODE_WRITE);
 	                                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2226: FILE: drivers/block/dst/dcore.c:1041:
+static int dst_setup_local_export(struct dst_node *n, struct dst_ctl *ctl,
+		struct dst_le_template *tmp)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2303: FILE: drivers/block/dst/dcore.c:1118:
+static int dst_setup_remote(struct dst_node *n, struct dst_ctl *ctl,
+		struct dst_remote_ctl *r)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2312: FILE: drivers/block/dst/dcore.c:1127:
+	sock->sk->sk_sndtimeo = sock->sk->sk_rcvtimeo =

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2386: FILE: drivers/block/dst/dcore.c:1201:
+static struct dst_node *dst_alloc_node(struct dst_ctl *ctl,
+		void (*cleanup)(struct dst_node *))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*n)...) over kzalloc(sizeof(struct dst_node)...)
#2395: FILE: drivers/block/dst/dcore.c:1210:
+	n = kzalloc(sizeof(struct dst_node), GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2458: FILE: drivers/block/dst/dcore.c:1273:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2484: FILE: drivers/block/dst/dcore.c:1299:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2567: FILE: drivers/block/dst/dcore.c:1382:
+		dprintk("%s: STARTED st: %p, disk_size: %llu.\n",
+				__func__, st, st->disk_size);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2635: FILE: drivers/block/dst/dcore.c:1450:
+^Idst_commands[ctl->cmd](ctl, msg->data + sizeof(struct dst_ctl), $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2654: FILE: drivers/block/dst/dcore.c:1469:
+	dst_request_cache = kmem_cache_create("dst", sizeof(struct dst_request),
+				       0, 0, NULL, NULL);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2719: FILE: drivers/block/dst/kst.c:1:
+/*

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2749: FILE: drivers/block/dst/kst.c:31:
+struct kst_poll_helper
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2750: FILE: drivers/block/dst/kst.c:32:
+^Ipoll_table ^I^Ipt;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2761: FILE: drivers/block/dst/kst.c:43:
+static int kst_sock_create(struct kst_state *st, struct saddr *addr,
+		int type, int proto, int backlog)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2813: FILE: drivers/block/dst/kst.c:95:
+static int kst_state_wake_callback(wait_queue_t *wait, unsigned mode,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2814: FILE: drivers/block/dst/kst.c:96:
+static int kst_state_wake_callback(wait_queue_t *wait, unsigned mode,
+		int sync, void *key)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2817: FILE: drivers/block/dst/kst.c:99:
+	struct kst_state *st = container_of(wait, struct kst_state, wait);
+	kst_wake(st);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2822: FILE: drivers/block/dst/kst.c:104:
+static void kst_queue_func(struct file *file, wait_queue_head_t *whead,
+				 poll_table *pt)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2858: FILE: drivers/block/dst/kst.c:140:
+		req = list_entry(st->request_list.next, struct dst_request,
+				request_list_entry);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2878: FILE: drivers/block/dst/kst.c:160:
+static inline int dst_compare_request_id(struct dst_request *old,
+		struct dst_request *new)

WARNING:SPLIT_STRING: quoted string split across lines
#2888: FILE: drivers/block/dst/kst.c:170:
+	dprintk("%s: old: op: %lu, start: %llu, size: %llu, off: %u, "
+		"new: op: %lu, start: %llu, size: %llu, off: %u, cmp: %d.\n",

CHECK:BRACES: braces {} should be used on all arms of this statement
#2912: FILE: drivers/block/dst/kst.c:194:
+		if (cmp < 0)
[...]
+		else if (cmp > 0)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2916: FILE: drivers/block/dst/kst.c:198:
+		else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2917: FILE: drivers/block/dst/kst.c:199:
+			printk("%s: [%c] old_req: %p, start: %llu, "

WARNING:SPLIT_STRING: quoted string split across lines
#2918: FILE: drivers/block/dst/kst.c:200:
+			printk("%s: [%c] old_req: %p, start: %llu, "
+					"size: %llu.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2919: FILE: drivers/block/dst/kst.c:201:
+^I^I^I^I^I__func__, $

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#2920: FILE: drivers/block/dst/kst.c:202:
+					(bio_rw(old->bio) == WRITE)?'W':'R',
 					                           ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2920: FILE: drivers/block/dst/kst.c:202:
+					(bio_rw(old->bio) == WRITE)?'W':'R',
 					                               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2949: FILE: drivers/block/dst/kst.c:231:
+	dprintk("%s: bio: %p, size: %u, idx: %d, num: %d.\n",
+			__func__, bio, bio->bi_size, bio->bi_idx,

WARNING:SPLIT_STRING: quoted string split across lines
#2966: FILE: drivers/block/dst/kst.c:248:
+	dprintk("%s: bio: %p, req: %p, size: %llu, orig_size: %llu, "
+			"bi_size: %u, err: %d, flags: %u.\n",

CHECK:BRACES: braces {} should be used on all arms of this statement
#2971: FILE: drivers/block/dst/kst.c:253:
+		if (req->flags & DST_REQ_EXPORT_WRITE) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2974: FILE: drivers/block/dst/kst.c:256:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3008: FILE: drivers/block/dst/kst.c:290:
+static struct kst_state *kst_state_init(struct dst_node *node,
+		unsigned int permissions,

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*st)...) over kzalloc(sizeof(struct kst_state)...)
#3014: FILE: drivers/block/dst/kst.c:296:
+	st = kzalloc(sizeof(struct kst_state), GFP_KERNEL);

WARNING:TYPO_SPELLING: 'successfull' may be misspelled - perhaps 'successful'?
#3076: FILE: drivers/block/dst/kst.c:358:
+ * callbacks in case of errors or successfull operation finish.
                                   ^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3099: FILE: drivers/block/dst/kst.c:381:
+	list_for_each_entry_safe(req, tmp, &st->request_list,
+			request_list_entry) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3108: FILE: drivers/block/dst/kst.c:390:
+		dprintk("%s: callback returned, st: %p, err: %d.\n",
+				__func__, st, err);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'st != st->node->state'
#3117: FILE: drivers/block/dst/kst.c:399:
+		if (err && (st != st->node->state)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3119: FILE: drivers/block/dst/kst.c:401:
+			dprintk("%s: err: %d, st: %p, node->state: %p.\n",
+					__func__, err, st, st->node->state);

WARNING:TYPO_SPELLING: 'explicitely' may be misspelled - perhaps 'explicitly'?
#3122: FILE: drivers/block/dst/kst.c:404:
+			 * node, so it must be freed explicitely.
 			                             ^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3150: FILE: drivers/block/dst/kst.c:432:
+		wait_event_interruptible_timeout(w->wait,
+				!list_empty(&w->ready_list) ||

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*w)...) over kzalloc(sizeof(struct kst_worker)...)
#3181: FILE: drivers/block/dst/kst.c:463:
+	w = kzalloc(sizeof(struct kst_worker), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3280: FILE: drivers/block/dst/kst.c:562:
+static int kst_data_send_header(struct kst_state *st,
+		struct dst_remote_request *r)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3304: FILE: drivers/block/dst/kst.c:586:
+static int kst_data_recv_bio_vec(struct kst_state *st, struct bio_vec *bv,
+		unsigned int offset, unsigned int size)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3325: FILE: drivers/block/dst/kst.c:607:
+	err = kernel_recvmsg(st->socket, &msg, &iov, 1, iov.iov_len,
+			msg.msg_flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3336: FILE: drivers/block/dst/kst.c:618:
+static int kst_data_send_bio_vec(struct kst_state *st, struct bio_vec *bv,
+		unsigned int offset, unsigned int size)

WARNING:SPLIT_STRING: quoted string split across lines
#3383: FILE: drivers/block/dst/kst.c:665:
+	dprintk("%s: start: [%c], start: %llu, idx: %d, num: %d, "
+			"size: %llu, offset: %u.\n",

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#3384: FILE: drivers/block/dst/kst.c:666:
+			__func__, (bio_rw(req->bio) == WRITE)?'W':'R',
 			                                     ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#3384: FILE: drivers/block/dst/kst.c:666:
+			__func__, (bio_rw(req->bio) == WRITE)?'W':'R',
 			                                         ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3393: FILE: drivers/block/dst/kst.c:675:
+			printk("%s: %d/%d: start: %llu, "

WARNING:SPLIT_STRING: quoted string split across lines
#3394: FILE: drivers/block/dst/kst.c:676:
+			printk("%s: %d/%d: start: %llu, "
+				"bv_offset: %u, bv_len: %u, "

WARNING:SPLIT_STRING: quoted string split across lines
#3395: FILE: drivers/block/dst/kst.c:677:
+				"bv_offset: %u, bv_len: %u, "
+				"req_offset: %u, req_size: %llu, "

WARNING:SPLIT_STRING: quoted string split across lines
#3396: FILE: drivers/block/dst/kst.c:678:
+				"req_offset: %u, req_size: %llu, "
+				"req: %p, bio: %p, err: %d.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3397: FILE: drivers/block/dst/kst.c:679:
+^I^I^I^I__func__, req->idx, req->num, req->start, $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3401: FILE: drivers/block/dst/kst.c:683:
+			BUG();

WARNING:SPLIT_STRING: quoted string split across lines
#3412: FILE: drivers/block/dst/kst.c:694:
+				dprintk("%s: %d/%d: header: start: %llu, "
+					"bv_offset: %u, bv_len: %u, "

WARNING:SPLIT_STRING: quoted string split across lines
#3413: FILE: drivers/block/dst/kst.c:695:
+					"bv_offset: %u, bv_len: %u, "
+					"a offset: %u, offset: %u, "

WARNING:SPLIT_STRING: quoted string split across lines
#3414: FILE: drivers/block/dst/kst.c:696:
+					"a offset: %u, offset: %u, "
+					"cur_size: %u, err: %d.\n",

WARNING:SPLIT_STRING: quoted string split across lines
#3436: FILE: drivers/block/dst/kst.c:718:
+			dprintk("%s: %d/%d: this: start: %llu, bv_offset: %u, "
+				"bv_len: %u, a offset: %u, offset: %u, "

WARNING:SPLIT_STRING: quoted string split across lines
#3437: FILE: drivers/block/dst/kst.c:719:
+				"bv_len: %u, a offset: %u, offset: %u, "
+				"cur_size: %u, err: %d.\n",

CHECK:BRACES: braces {} should be used on all arms of this statement
#3452: FILE: drivers/block/dst/kst.c:734:
+	if (err <= 0 && err != -EAGAIN) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3455: FILE: drivers/block/dst/kst.c:737:
+	} else

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#3458: FILE: drivers/block/dst/kst.c:740:
+	if (req->size) {
[...]
+	} else if (partial) {
[...]

WARNING:SPLIT_STRING: quoted string split across lines
#3466: FILE: drivers/block/dst/kst.c:748:
+		dprintk("%s: return: idx: %d, num: %d, offset: %u, "
+				"size: %llu, err: %d.\n",

WARNING:SPLIT_STRING: quoted string split across lines
#3471: FILE: drivers/block/dst/kst.c:753:
+	dprintk("%s: end: start: %llu, idx: %d, num: %d, "
+			"size: %llu, offset: %u.\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3481: FILE: drivers/block/dst/kst.c:763:
+		printk("%s: freeing bio: %p, bi_size: %u, "

WARNING:SPLIT_STRING: quoted string split across lines
#3482: FILE: drivers/block/dst/kst.c:764:
+		printk("%s: freeing bio: %p, bi_size: %u, "
+			"orig_size: %llu, req: %p.\n",

WARNING:SPLIT_STRING: quoted string split across lines
#3496: FILE: drivers/block/dst/kst.c:778:
+	dprintk("%s: req: %p, num: %d, idx: %d, bio: %p, "
+			"revents: %x, flags: %x.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3509: FILE: drivers/block/dst/kst.c:791:
+		dprintk("%s: complete: req: %p, bio: %p.\n",
+				__func__, req, req->bio);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3533: FILE: drivers/block/dst/kst.c:815:
+ * ^Iblock request crosses an area of the another block request which$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3534: FILE: drivers/block/dst/kst.c:816:
+ * ^Iis not yet sent to the remote node.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3540: FILE: drivers/block/dst/kst.c:822:
+ * ^Ibio must be ended, request is completed.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3542: FILE: drivers/block/dst/kst.c:824:
+ * ^Irequest must be processed as usual$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3544: FILE: drivers/block/dst/kst.c:826:
+ * ^Inew request must be allocated and processed.$

CHECK:BRACES: braces {} should be used on all arms of this statement
#3557: FILE: drivers/block/dst/kst.c:839:
+		if (cmp < 0)
[...]
+		else if (cmp > 0)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#3561: FILE: drivers/block/dst/kst.c:843:
+		else {

WARNING:SPLIT_STRING: quoted string split across lines
#3571: FILE: drivers/block/dst/kst.c:853:
+	dprintk("%s: old: op: %lu, start: %llu, size: %llu, off: %u, "
+			"new: op: %lu, start: %llu, size: %llu, off: %u.\n",

WARNING:BRACES: braces {} are not necessary for single statement blocks
#3576: FILE: drivers/block/dst/kst.c:858:
+	if ((bio_rw(old->bio) != WRITE) && (bio_rw(req->bio) != WRITE)) {
+		return KST_CONG_QUEUE;
+	}

WARNING:TYPO_SPELLING: 'differnt' may be misspelled - perhaps 'different'?
#3599: FILE: drivers/block/dst/kst.c:881:
+	 * So, only process if new request is differnt from old one,
 	                                      ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3658: FILE: drivers/block/dst/kst.c:940:
+	dprintk("%s: req: %p, new_req: %p, bio: %p.\n",
+			__func__, req, new_req, req->bio);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3684: FILE: drivers/block/dst/kst.c:966:
+	dprintk("%s: free req: %p, pool: %p, bio: %p, state: %p, node: %p.\n",
+			__func__, req, req->node->w->req_pool,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3703: FILE: drivers/block/dst/kst.c:985:
+	dprintk("%s: start: %llu, size: %llu, bio: %p.\n",
+			__func__, req->start, req->size, req->bio);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3720: FILE: drivers/block/dst/kst.c:1002:
+			dprintk("%s: st: %p, bio: %p, revents: %x.\n",
+					__func__, st, req->bio, revents);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#3750: FILE: drivers/block/dst/kst.c:1032:
+		printk(KERN_NOTICE "%s: congestion [%c], start: %llu, idx: %d,"

WARNING:SPLIT_STRING: quoted string split across lines
#3751: FILE: drivers/block/dst/kst.c:1033:
+		printk(KERN_NOTICE "%s: congestion [%c], start: %llu, idx: %d,"
+				" num: %d, size: %llu, offset: %u, err: %d.\n",

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#3752: FILE: drivers/block/dst/kst.c:1034:
+			__func__, (bio_rw(req->bio) == WRITE)?'W':'R',
 			                                     ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#3752: FILE: drivers/block/dst/kst.c:1034:
+			__func__, (bio_rw(req->bio) == WRITE)?'W':'R',
 			                                         ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3775: FILE: drivers/block/dst/kst.c:1057:
+		printk("%s: error [%c], start: %llu, idx: %d, num: %d, "

WARNING:SPLIT_STRING: quoted string split across lines
#3776: FILE: drivers/block/dst/kst.c:1058:
+		printk("%s: error [%c], start: %llu, idx: %d, num: %d, "
+				"size: %llu, offset: %u, err: %d.\n",

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#3777: FILE: drivers/block/dst/kst.c:1059:
+			__func__, (bio_rw(req->bio) == WRITE)?'W':'R',
 			                                     ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#3777: FILE: drivers/block/dst/kst.c:1059:
+			__func__, (bio_rw(req->bio) == WRITE)?'W':'R',
 			                                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3799: FILE: drivers/block/dst/kst.c:1081:
+	st->socket->sk->sk_sndbuf = st->socket->sk->sk_sndbuf = 1024*1024*10;
 	                                                            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3799: FILE: drivers/block/dst/kst.c:1081:
+	st->socket->sk->sk_sndbuf = st->socket->sk->sk_sndbuf = 1024*1024*10;
 	                                                                 ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#3799: FILE: drivers/block/dst/kst.c:1081:
+	st->socket->sk->sk_sndbuf = st->socket->sk->sk_sndbuf = 1024*1024*10;

WARNING:SPLIT_STRING: quoted string split across lines
#3820: FILE: drivers/block/dst/kst.c:1102:
+		dprintk("%s: state %p does not know how "
+				"to recover from error %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3826: FILE: drivers/block/dst/kst.c:1108:
+	err = sock_create(st->socket->ops->family, st->socket->type,
+			st->socket->sk->sk_protocol, &sock);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#3830: FILE: drivers/block/dst/kst.c:1112:
+	sock->sk->sk_sndtimeo = sock->sk->sk_rcvtimeo =

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#3907: FILE: drivers/block/dst/kst.c:1189:
+	bio->bi_size = req->size = req->orig_size;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3950: FILE: drivers/block/dst/kst.c:1232:
+	err = kernel_recvmsg(st->socket, &msg, &iov, 1,
+			iov.iov_len, msg.msg_flags);

WARNING:SPLIT_STRING: quoted string split across lines
#3959: FILE: drivers/block/dst/kst.c:1241:
+	dprintk("\n%s: cmd: %u, sector: %llu, size: %u, "
+			"flags: %x, offset: %u.\n",

WARNING:UNSPECIFIED_INT: Prefer 'signed int' to bare use of 'signed'
#3967: FILE: drivers/block/dst/kst.c:1249:
+	if ((signed)(r.sector + to_sector(r.size)) < 0 ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3968: FILE: drivers/block/dst/kst.c:1250:
+	if ((signed)(r.sector + to_sector(r.size)) < 0 ||
+			(signed)(r.sector + to_sector(r.size)) > data_size ||

WARNING:UNSPECIFIED_INT: Prefer 'signed int' to bare use of 'signed'
#3968: FILE: drivers/block/dst/kst.c:1250:
+			(signed)(r.sector + to_sector(r.size)) > data_size ||

WARNING:UNSPECIFIED_INT: Prefer 'signed int' to bare use of 'signed'
#3969: FILE: drivers/block/dst/kst.c:1251:
+			(signed)r.sector > data_size)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3996: FILE: drivers/block/dst/kst.c:1278:
+	nr = r.size/PAGE_SIZE + 1;
 	           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4009: FILE: drivers/block/dst/kst.c:1291:
+		dprintk("%s: alloc req: %p, pool: %p.\n",
+				__func__, req, st->node->w->req_pool);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4030: FILE: drivers/block/dst/kst.c:1312:
+^I^I * So, to process writing to the exported node we need first $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4031: FILE: drivers/block/dst/kst.c:1313:
+^I^I * to receive data from the net (i.e. to perform READ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4032: FILE: drivers/block/dst/kst.c:1314:
+^I^I * operationin terms of usual node), and then put it to the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4033: FILE: drivers/block/dst/kst.c:1315:
+^I^I * storage (WRITE command, so it will be changed before $

WARNING:SPLIT_STRING: quoted string split across lines
#4062: FILE: drivers/block/dst/kst.c:1344:
+			dprintk("%s: %d/%d: page: %p, size: %u, offset: %u, "
+					"err: %d.\n",

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#4087: FILE: drivers/block/dst/kst.c:1369:
+		req->size = req->orig_size = bio->bi_size;

WARNING:SPLIT_STRING: quoted string split across lines
#4093: FILE: drivers/block/dst/kst.c:1375:
+		dprintk("%s: submitting: bio: %p, req: %p, start: %llu, "
+			"size: %llu, idx: %d, num: %d, offset: %u, err: %d.\n",

WARNING:BRACES: braces {} are not necessary for single statement blocks
#4101: FILE: drivers/block/dst/kst.c:1383:
+		if (r.cmd == DST_READ) {
+			generic_make_request(bio);
+		}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4154: FILE: drivers/block/dst/kst.c:1436:
+	err = sock_create(st->socket->ops->family, st->socket->type,
+			st->socket->sk->sk_protocol, &newsock);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4174: FILE: drivers/block/dst/kst.c:1456:
+^I^Iif (!memcmp(sec_addr, new_addr,^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4175: FILE: drivers/block/dst/kst.c:1457:
+		if (!memcmp(sec_addr, new_addr,	
+				addr.sa_data_len - s->sec.check_offset)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#4194: FILE: drivers/block/dst/kst.c:1476:
+		struct sockaddr_in *sin = (struct sockaddr_in *)&addr;
+		printk(KERN_INFO "%s: Client: %u.%u.%u.%u:%d.\n", __func__,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#4194: FILE: drivers/block/dst/kst.c:1476:
+		printk(KERN_INFO "%s: Client: %u.%u.%u.%u:%d.\n", __func__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4195: FILE: drivers/block/dst/kst.c:1477:
+		printk(KERN_INFO "%s: Client: %u.%u.%u.%u:%d.\n", __func__,
+			NIPQUAD(sin->sin_addr.s_addr), ntohs(sin->sin_port));

WARNING:LINE_SPACING: Missing a blank line after declarations
#4198: FILE: drivers/block/dst/kst.c:1480:
+		struct sockaddr_in6 *sin = (struct sockaddr_in6 *)&addr;
+		printk(KERN_INFO "%s: Client: "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#4198: FILE: drivers/block/dst/kst.c:1480:
+		printk(KERN_INFO "%s: Client: "

WARNING:SPLIT_STRING: quoted string split across lines
#4199: FILE: drivers/block/dst/kst.c:1481:
+		printk(KERN_INFO "%s: Client: "
+			"%04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x:%d",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4200: FILE: drivers/block/dst/kst.c:1482:
+^I^I^I__func__, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4206: FILE: drivers/block/dst/kst.c:1488:
+	newst = kst_state_init(st->node, permissions,
+			&kst_data_export_ops, newsock);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4213: FILE: drivers/block/dst/kst.c:1495:
+^I * Negative return value means error, positive - stop this state $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#4232: FILE: drivers/block/dst/kst.c:1514:
+	for (i=0; i<tmp->le->secure_attr_num; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#4232: FILE: drivers/block/dst/kst.c:1514:
+	for (i=0; i<tmp->le->secure_attr_num; ++i) {
 	           ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*s)...) over kmalloc(sizeof(struct dst_secure)...)
#4233: FILE: drivers/block/dst/kst.c:1515:
+		s = kmalloc(sizeof(struct dst_secure), GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4243: FILE: drivers/block/dst/kst.c:1525:
+^I^I^Istruct sockaddr_in *sin = $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#4245: FILE: drivers/block/dst/kst.c:1527:
+			printk(KERN_INFO "%s: Client: %u.%u.%u.%u:%d, "

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4246: FILE: drivers/block/dst/kst.c:1528:
+^I^I^I^I^I"permissions: %x.\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#4246: FILE: drivers/block/dst/kst.c:1528:
+			printk(KERN_INFO "%s: Client: %u.%u.%u.%u:%d, "
+					"permissions: %x.\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4247: FILE: drivers/block/dst/kst.c:1529:
+^I^I^I^I__func__, NIPQUAD(sin->sin_addr.s_addr), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4250: FILE: drivers/block/dst/kst.c:1532:
+^I^I^Istruct sockaddr_in6 *sin = $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#4252: FILE: drivers/block/dst/kst.c:1534:
+			printk(KERN_INFO "%s: Client: "

WARNING:SPLIT_STRING: quoted string split across lines
#4253: FILE: drivers/block/dst/kst.c:1535:
+			printk(KERN_INFO "%s: Client: "
+				"%04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x:%d, "

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4254: FILE: drivers/block/dst/kst.c:1536:
+^I^I^I^I"permissions: %x.\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#4254: FILE: drivers/block/dst/kst.c:1536:
+				"%04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x:%d, "
+				"permissions: %x.\n", 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4255: FILE: drivers/block/dst/kst.c:1537:
+^I^I^I^I__func__, NIP6(sin->sin6_addr), $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4261: FILE: drivers/block/dst/kst.c:1543:
+	err = kst_sock_create(st, &tmp->le->rctl.addr, tmp->le->rctl.type,
+			tmp->le->rctl.proto, tmp->le->backlog);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4282: FILE: drivers/block/dst/kst.c:1564:
+ * ^Ito remote node, which contain data.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4284: FILE: drivers/block/dst/kst.c:1566:
+ * ^Istorage's node connects to given node to get/put data.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4286: FILE: drivers/block/dst/kst.c:1568:
+ * ^Istate.$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4293: FILE: drivers/block/dst/kst.c:1575:
+};
+static struct kst_state_ops kst_data_ops = {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4301: FILE: drivers/block/dst/kst.c:1583:
+struct kst_state *kst_listener_state_init(struct dst_node *node,
+		struct dst_le_template *tmp)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4308: FILE: drivers/block/dst/kst.c:1590:
+struct kst_state *kst_data_state_init(struct dst_node *node,
+		struct socket *newsock)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4348: FILE: include/linux/dst.h:1:
+/*

WARNING:LONG_LINE_COMMENT: line length of 121 exceeds 100 columns
#4376: FILE: include/linux/dst.h:29:
+	DST_ADD_LOCAL_EXPORT,	/* Add local node with given id to the storage to be exported and used by remote peers */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#4377: FILE: include/linux/dst.h:30:
+	DST_START_STORAGE,	/* Array is ready and storage can be started, if there will be new nodes

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#4378: FILE: include/linux/dst.h:31:
+				 * added to the storage, they will be checked against existing size and

WARNING:LONG_LINE_COMMENT: line length of 110 exceeds 100 columns
#4379: FILE: include/linux/dst.h:32:
+				 * probably be dropped (for example in mirror format when new node has smaller

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4386: FILE: include/linux/dst.h:39:
+#define DST_CTL_FLAGS_REMOTE	(1<<0)
                             	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#4386: FILE: include/linux/dst.h:39:
+#define DST_CTL_FLAGS_REMOTE	(1<<0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4387: FILE: include/linux/dst.h:40:
+#define DST_CTL_FLAGS_EXPORT	(1<<1)
                             	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#4387: FILE: include/linux/dst.h:40:
+#define DST_CTL_FLAGS_EXPORT	(1<<1)

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#4390: FILE: include/linux/dst.h:43:
+struct dst_ctl
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#4398: FILE: include/linux/dst.h:51:
+struct dst_local_ctl
+{

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#4407: FILE: include/linux/dst.h:60:
+	unsigned short		sa_data_len;			/* Number of bytes used in sa_data */

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#4411: FILE: include/linux/dst.h:64:
+struct dst_remote_ctl
+{

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4417: FILE: include/linux/dst.h:70:
+#define DST_PERM_READ		(1<<0)
                      		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#4417: FILE: include/linux/dst.h:70:
+#define DST_PERM_READ		(1<<0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4418: FILE: include/linux/dst.h:71:
+#define DST_PERM_WRITE		(1<<1)
                       		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#4418: FILE: include/linux/dst.h:71:
+#define DST_PERM_WRITE		(1<<1)

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#4427: FILE: include/linux/dst.h:80:
+struct dst_secure_user
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#4434: FILE: include/linux/dst.h:87:
+struct dst_local_export_ctl
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4442: FILE: include/linux/dst.h:95:
+^IDST_REMOTE_CFG^I^I= 1, ^I^I/* Request remote configuration */$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#4449: FILE: include/linux/dst.h:102:
+struct dst_remote_request
+{

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#4469: FILE: include/linux/dst.h:122:
+#define dprintk(f, a...) printk(KERN_NOTICE f, ##a)

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#4475: FILE: include/linux/dst.h:128:
+struct kst_worker
+{

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#4479: FILE: include/linux/dst.h:132:
+	struct mutex		state_mutex;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#4482: FILE: include/linux/dst.h:135:
+	spinlock_t		ready_lock;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4488: FILE: include/linux/dst.h:141:
+^Iwait_queue_head_t ^Iwait;$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4496: FILE: include/linux/dst.h:149:
+#define DST_REQ_HEADER_SENT	(1<<0)
                            	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#4496: FILE: include/linux/dst.h:149:
+#define DST_REQ_HEADER_SENT	(1<<0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4497: FILE: include/linux/dst.h:150:
+#define DST_REQ_EXPORT		(1<<1)
                       		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#4497: FILE: include/linux/dst.h:150:
+#define DST_REQ_EXPORT		(1<<1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4498: FILE: include/linux/dst.h:151:
+#define DST_REQ_EXPORT_WRITE	(1<<2)
                             	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#4498: FILE: include/linux/dst.h:151:
+#define DST_REQ_EXPORT_WRITE	(1<<2)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4499: FILE: include/linux/dst.h:152:
+#define DST_REQ_EXPORT_READ	(1<<3)
                            	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#4499: FILE: include/linux/dst.h:152:
+#define DST_REQ_EXPORT_READ	(1<<3)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4500: FILE: include/linux/dst.h:153:
+#define DST_REQ_ALWAYS_QUEUE	(1<<4)
                             	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#4500: FILE: include/linux/dst.h:153:
+#define DST_REQ_ALWAYS_QUEUE	(1<<4)

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#4503: FILE: include/linux/dst.h:156:
+struct dst_request
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4507: FILE: include/linux/dst.h:160:
+^Istruct kst_state ^I*state;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4508: FILE: include/linux/dst.h:161:
+^Istruct dst_node ^I*node;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4512: FILE: include/linux/dst.h:165:
+^Iint ^I^I^I(*callback)(struct dst_request *dst,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4513: FILE: include/linux/dst.h:166:
+	int 			(*callback)(struct dst_request *dst,
+						unsigned int revents);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#4514: FILE: include/linux/dst.h:167:
+^Ivoid^I^I^I(*bio_endio)(struct dst_request *dst, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4515: FILE: include/linux/dst.h:168:
+	void			(*bio_endio)(struct dst_request *dst, 
+						int err);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#4526: FILE: include/linux/dst.h:179:
+struct kst_state_ops
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4527: FILE: include/linux/dst.h:180:
+^Iint ^I^I(*init)(struct kst_state *, void *);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kst_state *' should also have an identifier name
#4527: FILE: include/linux/dst.h:180:
+	int 		(*init)(struct kst_state *, void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#4527: FILE: include/linux/dst.h:180:
+	int 		(*init)(struct kst_state *, void *);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4528: FILE: include/linux/dst.h:181:
+^Iint ^I^I(*push)(struct dst_request *req);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kst_state *' should also have an identifier name
#4529: FILE: include/linux/dst.h:182:
+	int		(*ready)(struct kst_state *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kst_state *' should also have an identifier name
#4530: FILE: include/linux/dst.h:183:
+	int		(*recovery)(struct kst_state *, int err);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4531: FILE: include/linux/dst.h:184:
+^Ivoid ^I^I(*exit)(struct kst_state *);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kst_state *' should also have an identifier name
#4531: FILE: include/linux/dst.h:184:
+	void 		(*exit)(struct kst_state *);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4534: FILE: include/linux/dst.h:187:
+#define KST_FLAG_PARTIAL		(1<<0)
                         		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#4534: FILE: include/linux/dst.h:187:
+#define KST_FLAG_PARTIAL		(1<<0)

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#4537: FILE: include/linux/dst.h:190:
+struct kst_state
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4541: FILE: include/linux/dst.h:194:
+^Iwait_queue_t ^I^Iwait;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4542: FILE: include/linux/dst.h:195:
+^Iwait_queue_head_t ^I*whead;$

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#4550: FILE: include/linux/dst.h:203:
+	struct mutex		request_lock;

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#4561: FILE: include/linux/dst.h:214:
+struct dst_alg_ops
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4564: FILE: include/linux/dst.h:217:
+^Iint ^I^I^I(*remap)(struct dst_request *req);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4566: FILE: include/linux/dst.h:219:
+^Istruct module ^I^I*owner;$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#4570: FILE: include/linux/dst.h:223:
+struct dst_alg
+{

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4577: FILE: include/linux/dst.h:230:
+#define DST_ST_STARTED		(1<<0)
                       		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#4577: FILE: include/linux/dst.h:230:
+#define DST_ST_STARTED		(1<<0)

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#4580: FILE: include/linux/dst.h:233:
+struct dst_storage
+{

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#4585: FILE: include/linux/dst.h:238:
+	struct mutex		tree_lock;

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#4601: FILE: include/linux/dst.h:254:
+struct dst_node
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4607: FILE: include/linux/dst.h:260:
+^Istruct block_device ^I*bdev;$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dst_node *' should also have an identifier name
#4615: FILE: include/linux/dst.h:268:
+	void			(*cleanup)(struct dst_node *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dst_node *' should also have an identifier name
#4621: FILE: include/linux/dst.h:274:
+	void			(*priv_callback)(struct dst_node *);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#4628: FILE: include/linux/dst.h:281:
+struct dst_le_template
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4630: FILE: include/linux/dst.h:283:
+^Ivoid ^I^I^I^I*data;$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#4634: FILE: include/linux/dst.h:287:
+struct dst_secure
+{

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4645: FILE: include/linux/dst.h:298:
+struct kst_state *kst_listener_state_init(struct dst_node *node,
+		struct dst_le_template *tmp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4647: FILE: include/linux/dst.h:300:
+struct kst_state *kst_data_state_init(struct dst_node *node,
+		struct socket *newsock);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000380905.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 60 errors, 178 warnings, 170 checks, 4585 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000380905.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
