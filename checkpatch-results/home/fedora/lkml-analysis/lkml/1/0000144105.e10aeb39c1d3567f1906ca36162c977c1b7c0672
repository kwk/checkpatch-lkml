WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
This patch adds support for SCSI MIBs through /proc/scsi_target/mib following RFC-4455.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#43: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#48: FILE: drivers/target/target_core_mib.c:1:
+/*******************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#68: FILE: drivers/target/target_core_mib.c:21:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#69: FILE: drivers/target/target_core_mib.c:22:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#73: FILE: drivers/target/target_core_mib.c:26:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#102: FILE: drivers/target/target_core_mib.c:55:
+#define INITIAL_JIFFIES ((unsigned long)(unsigned int) (-300*HZ))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#102: FILE: drivers/target/target_core_mib.c:55:
+#define INITIAL_JIFFIES ((unsigned long)(unsigned int) (-300*HZ))
                                                             ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#110: FILE: drivers/target/target_core_mib.c:63:
+#define ISPRINT(a)   ((a >= ' ') && (a <= '~'))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'a' may be better as '(a)' to avoid precedence issues
#110: FILE: drivers/target/target_core_mib.c:63:
+#define ISPRINT(a)   ((a >= ' ') && (a <= '~'))

WARNING:NEW_TYPEDEFS: do not add new typedefs
#113: FILE: drivers/target/target_core_mib.c:66:
+typedef struct table_iter_s {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#145: FILE: drivers/target/target_core_mib.c:98:
+		seq_printf(seq, "plugin: %s version: %s\n",
+				hba->transport->name,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#166: FILE: drivers/target/target_core_mib.c:119:
+static void *locate_hba_start(

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#182: FILE: drivers/target/target_core_mib.c:135:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#183: FILE: drivers/target/target_core_mib.c:136:
+	printk(KERN_INFO "%s[%d] - Allocating iterp: %p\n", current->comm,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#184: FILE: drivers/target/target_core_mib.c:137:
+	printk(KERN_INFO "%s[%d] - Allocating iterp: %p\n", current->comm,
+			current->pid, tpg_iter);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#202: FILE: drivers/target/target_core_mib.c:155:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#203: FILE: drivers/target/target_core_mib.c:156:
+			printk(KERN_INFO "[%d]: Incremented dev_mib_access"

WARNING:SPLIT_STRING: quoted string split across lines
#204: FILE: drivers/target/target_core_mib.c:157:
+			printk(KERN_INFO "[%d]: Incremented dev_mib_access"
+				"_count: %d\n", hba->hba_id,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:MISSING_SPACE: break quoted strings at a space character
#204: FILE: drivers/target/target_core_mib.c:157:
+			printk(KERN_INFO "[%d]: Incremented dev_mib_access"
+				"_count: %d\n", hba->hba_id,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#218: FILE: drivers/target/target_core_mib.c:171:
+static void *locate_hba_next(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#241: FILE: drivers/target/target_core_mib.c:194:
+	list_for_each_entry_continue(dev_p, &dev->se_hba->hba_dev_list,
+			dev_list) {

WARNING:RETURN_VOID: void function return statements are not generally useful
#294: FILE: drivers/target/target_core_mib.c:247:
+	return;
+}

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#355: FILE: drivers/target/target_core_mib.c:308:
+			str[k+9] = ISPRINT(DEV_T10_WWN(dev)->model[k]) ?
 			     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#429: FILE: drivers/target/target_core_mib.c:382:
+		list_for_each_entry_safe(sep, sep_tmp, &dev->dev_sep_list,
+				sep_list) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#431: FILE: drivers/target/target_core_mib.c:384:
+			seq_printf(seq, "%u %u %u %s%u %u\n", hba->hba_index,
+				dev->dev_index, sep->sep_index, "Device",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#508: FILE: drivers/target/target_core_mib.c:461:
+		list_for_each_entry_safe(se, se_tmp, &dev->dev_sep_list,
+				sep_list) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#511: FILE: drivers/target/target_core_mib.c:464:
+			sprintf(buf, "scsiTransport%s",
+					TPG_TFO(tpg)->get_fabric_name());

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#514: FILE: drivers/target/target_core_mib.c:467:
+			seq_printf(seq, "%u %s %u %s+%s\n",
+				hba->hba_index, /* scsiTransportIndex */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#570: FILE: drivers/target/target_core_mib.c:523:
+
+

WARNING:SPLIT_STRING: quoted string split across lines
#582: FILE: drivers/target/target_core_mib.c:535:
+		seq_puts(seq, "inst indx num_LUs status non_access_LUs"
+			" resets\n");

WARNING:SPLIT_STRING: quoted string split across lines
#678: FILE: drivers/target/target_core_mib.c:631:
+		seq_puts(seq, "inst device indx name port_index in_cmds"
+			" write_mbytes read_mbytes hs_in_cmds\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#691: FILE: drivers/target/target_core_mib.c:644:
+		list_for_each_entry_safe(sep, sep_tmp, &dev->dev_sep_list,
+				sep_list) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#697: FILE: drivers/target/target_core_mib.c:650:
+			seq_printf(seq, "%u %u %u %s%d %s%s%d ",
+			     hba->hba_index,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#711: FILE: drivers/target/target_core_mib.c:664:
+			seq_printf(seq, "%llu %u %u %u\n", num_cmds,
+				rx_mbytes, tx_mbytes, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#756: FILE: drivers/target/target_core_mib.c:709:
+static void *scsi_auth_intr_seq_next(struct seq_file *seq, void *v,
+					 loff_t *pos)

WARNING:SPLIT_STRING: quoted string split across lines
#784: FILE: drivers/target/target_core_mib.c:737:
+		seq_puts(seq, "inst dev port indx dev_or_port intr_name "
+			 "map_indx att_count num_cmds read_mbytes "

WARNING:SPLIT_STRING: quoted string split across lines
#785: FILE: drivers/target/target_core_mib.c:738:
+			 "map_indx att_count num_cmds read_mbytes "
+			 "write_mbytes hs_num_cmds creation_time row_status\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!deve->se_lun'
#795: FILE: drivers/target/target_core_mib.c:748:
+			if (!(deve->lun_flags &
+					TRANSPORT_LUNFLAGS_INITIATOR_ACCESS) ||
+			    (!deve->se_lun))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lun->lun_type != TRANSPORT_LUN_TYPE_DEVICE'
#800: FILE: drivers/target/target_core_mib.c:753:
+			if ((lun->lun_type != TRANSPORT_LUN_TYPE_DEVICE) ||
+			    (!lun->se_dev))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!lun->se_dev'
#800: FILE: drivers/target/target_core_mib.c:753:
+			if ((lun->lun_type != TRANSPORT_LUN_TYPE_DEVICE) ||
+			    (!lun->se_dev))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#804: FILE: drivers/target/target_core_mib.c:757:
+			seq_printf(seq,"%u %u %u %u %u %s %u %u %u %u %u %u"
 			              ^

WARNING:SPLIT_STRING: quoted string split across lines
#805: FILE: drivers/target/target_core_mib.c:758:
+			seq_printf(seq,"%u %u %u %u %u %s %u %u %u %u %u %u"
+						" %u %s\n",

WARNING:TYPO_SPELLING: 'fo' may be misspelled - perhaps 'of'?
#868: FILE: drivers/target/target_core_mib.c:821:
+ * to list the info fo this table.
                     ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPLIT_STRING: quoted string split across lines
#901: FILE: drivers/target/target_core_mib.c:854:
+		seq_puts(seq, "inst dev port indx port_auth_indx port_name"
+			" port_ident\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!se_sess->se_node_acl'
#908: FILE: drivers/target/target_core_mib.c:861:
+		if ((TPG_TFO(se_tpg)->sess_logged_in(se_sess)) ||
+		    (!se_sess->se_node_acl) ||
+		    (!se_sess->se_node_acl->device_list))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!se_sess->se_node_acl->device_list'
#908: FILE: drivers/target/target_core_mib.c:861:
+		if ((TPG_TFO(se_tpg)->sess_logged_in(se_sess)) ||
+		    (!se_sess->se_node_acl) ||
+		    (!se_sess->se_node_acl->device_list))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!deve->se_lun'
#918: FILE: drivers/target/target_core_mib.c:871:
+			if (!(deve->lun_flags &
+					TRANSPORT_LUNFLAGS_INITIATOR_ACCESS) ||
+			   (!deve->se_lun))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'lun->lun_type != TRANSPORT_LUN_TYPE_DEVICE'
#924: FILE: drivers/target/target_core_mib.c:877:
+			if ((lun->lun_type != TRANSPORT_LUN_TYPE_DEVICE) ||
+			    (!lun->se_dev))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!lun->se_dev'
#924: FILE: drivers/target/target_core_mib.c:877:
+			if ((lun->lun_type != TRANSPORT_LUN_TYPE_DEVICE) ||
+			    (!lun->se_dev))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#930: FILE: drivers/target/target_core_mib.c:883:
+			TPG_TFO(se_tpg)->sess_get_initiator_wwn(se_sess,
+					(unsigned char *)&buf[0], 64);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#932: FILE: drivers/target/target_core_mib.c:885:
+			seq_printf(seq,"%u %u %u %u %u %s+i+%s\n",
 			              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#933: FILE: drivers/target/target_core_mib.c:886:
+			seq_printf(seq,"%u %u %u %u %u %s+i+%s\n",
+				/* scsiInstIndex */

WARNING:SPLIT_STRING: quoted string split across lines
#1005: FILE: drivers/target/target_core_mib.c:958:
+		seq_puts(seq, "inst dev indx LUN lu_name vend prod rev"
+		" dev_type status state-bit num_cmds read_mbytes"

WARNING:SPLIT_STRING: quoted string split across lines
#1006: FILE: drivers/target/target_core_mib.c:959:
+		" dev_type status state-bit num_cmds read_mbytes"
+		" write_mbytes resets full_stat hs_num_cmds creation_time\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1019: FILE: drivers/target/target_core_mib.c:972:
+		seq_printf(seq, "%u %u %u %llu %s", hba->hba_index,
+				dev->dev_index, SCSI_LU_INDEX,

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned long long)0' could be '0ULL'
#1020: FILE: drivers/target/target_core_mib.c:973:
+				(unsigned long long)0, /* FIXME: scsiLuDefaultLun */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1049: FILE: drivers/target/target_core_mib.c:1002:
+		seq_printf(seq, " %u %s %s %llu %u %u %u %u %u %u\n",
+			/* scsiLuPeripheralType */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1053: FILE: drivers/target/target_core_mib.c:1006:
+^I^I^I"exposed", ^I/* scsiLuState */$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1130: FILE: drivers/target/target_core_mib.c:1083:
+		printk("proc_mkdir() failed.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1200: FILE: drivers/target/target_core_mib.c:1153:
+	printk(KERN_ERR "create_proc_entry() failed.\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type < 0'
#1222: FILE: drivers/target/target_core_mib.c:1175:
+	if ((type < 0) || (type >= SCSI_INDEX_TYPE_MAX)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type >= SCSI_INDEX_TYPE_MAX'
#1222: FILE: drivers/target/target_core_mib.c:1175:
+	if ((type < 0) || (type >= SCSI_INDEX_TYPE_MAX)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1223: FILE: drivers/target/target_core_mib.c:1176:
+		printk(KERN_ERR "Invalid index type %d\n", type);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1242: FILE: include/target/target_core_mib.h:1:
+/*******************************************************************************

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1262: FILE: include/target/target_core_mib.h:21:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1263: FILE: include/target/target_core_mib.h:22:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1267: FILE: include/target/target_core_mib.h:26:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1273: FILE: include/target/target_core_mib.h:32:
+typedef enum {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1280: FILE: include/target/target_core_mib.h:39:
+typedef struct scsi_index_table_s {

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1281: FILE: include/target/target_core_mib.h:40:
+	spinlock_t	lock;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1282: FILE: include/target/target_core_mib.h:41:
+^Iu32 ^I^Iscsi_mib_index[SCSI_INDEX_TYPE_MAX];$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1286: FILE: include/target/target_core_mib.h:45:
+typedef struct scsi_port_stats_s {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1292: FILE: include/target/target_core_mib.h:51:
+extern int init_scsi_target_mib(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1293: FILE: include/target/target_core_mib.h:52:
+extern void remove_scsi_target_mib(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1294: FILE: include/target/target_core_mib.h:53:
+extern void init_scsi_index_table(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1295: FILE: include/target/target_core_mib.h:54:
+extern u32 scsi_get_new_index(scsi_index_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'scsi_index_t' should also have an identifier name
#1295: FILE: include/target/target_core_mib.h:54:
+extern u32 scsi_get_new_index(scsi_index_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000144105.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 31 warnings, 41 checks, 1245 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000144105.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
