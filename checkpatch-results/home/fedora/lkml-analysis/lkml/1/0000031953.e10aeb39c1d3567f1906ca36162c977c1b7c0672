WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#46: FILE: include/linux/percpu.h:554:
+static inline unsigned long __this_cpu_add_return_generic(volatile void *ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#47: FILE: include/linux/percpu.h:555:
+static inline unsigned long __this_cpu_add_return_generic(volatile void *ptr,
+		unsigned long val, int size)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#52: FILE: include/linux/percpu.h:560:
+	case 1: result = (*__this_cpu_ptr((u8 *)ptr) += val);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#54: FILE: include/linux/percpu.h:562:
+	case 2: result = (*__this_cpu_ptr((u16 *)ptr) += val);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#56: FILE: include/linux/percpu.h:564:
+	case 4: result = (*__this_cpu_ptr((u32 *)ptr) += val);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#58: FILE: include/linux/percpu.h:566:
+	case 8: result = (*__this_cpu_ptr((u64 *)ptr) += val);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#66: FILE: include/linux/percpu.h:574:
+static inline unsigned long this_cpu_add_return_generic(volatile void *ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#67: FILE: include/linux/percpu.h:575:
+static inline unsigned long this_cpu_add_return_generic(volatile void *ptr,
+		unsigned long val, int size)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#123: FILE: include/linux/percpu.h:969:
+static inline unsigned long irqsafe_cpu_add_return_generic(volatile void *ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#124: FILE: include/linux/percpu.h:970:
+static inline unsigned long irqsafe_cpu_add_return_generic(volatile void *ptr,
+		unsigned long val, int size)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#136: FILE: include/linux/percpu.h:982:
+#  define irqsafe_cpu_add_return_1(pcp, val) irqsafe_cpu_add_return_generic(((pcp), (val), 1)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#139: FILE: include/linux/percpu.h:985:
+#  define irqsafe_cpu_add_return_2(pcp, val) irqsafe_cpu_add_return_generic(((pcp), (val), 2)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#142: FILE: include/linux/percpu.h:988:
+#  define irqsafe_cpu_add_return_4(pcp, val) irqsafe_cpu_add_return_generic(((pcp), (val), 4)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#145: FILE: include/linux/percpu.h:991:
+#  define irqsafe_cpu_add_return_8(pcp, val) irqsafe_cpu_add_return_generic(((pcp), (val), 8)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000031953.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 3 warnings, 3 checks, 106 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000031953.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
