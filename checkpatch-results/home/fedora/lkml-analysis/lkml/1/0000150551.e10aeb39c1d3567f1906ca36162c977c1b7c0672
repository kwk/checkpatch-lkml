WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#65: FILE: drivers/ata/libata-sff.c:2207:
+ *	failing to complete. In some cases this is neccessary before a
   	                                           ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!qc"
#76: FILE: drivers/ata/libata-sff.c:2218:
+	if (qc == NULL || qc->dma_dir == DMA_TO_DEVICE)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#82: FILE: drivers/ata/libata-sff.c:2224:
+	for (count = 0; (ap->ops->sff_check_status(ap) & ATA_DRQ)
+						&& count < 32768; count++)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#88: FILE: drivers/ata/libata-sff.c:2230:
+		ata_port_printk(ap, KERN_DEBUG,
+			"drained %d bytes to clear DRQ.\n", count);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#90: FILE: drivers/ata/libata-sff.c:2232:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#103: FILE: drivers/ata/libata-sff.c:2277:
+		if (qc->err_mask == AC_ERR_TIMEOUT
+						&& (host_stat & ATA_DMA_ERR)) {

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#148: FILE: drivers/ata/pata_pcmcia.c:134:
+ *	failing to complete. In some cases this is neccessary before a
   	                                           ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#152: FILE: drivers/ata/pata_pcmcia.c:138:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: drivers/ata/pata_pcmcia.c:138:
+ $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!qc"
#159: FILE: drivers/ata/pata_pcmcia.c:145:
+	if (qc == NULL || qc->dma_dir == DMA_TO_DEVICE)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#166: FILE: drivers/ata/pata_pcmcia.c:152:
+	for (count = 0; (ap->ops->sff_check_status(ap) & ATA_DRQ)
+							&& count++ < 65536;)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#171: FILE: drivers/ata/pata_pcmcia.c:157:
+		ata_port_printk(ap, KERN_WARNING, "drained %d bytes to clear DRQ.\n",
+								count);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#173: FILE: drivers/ata/pata_pcmcia.c:159:
+
+}

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#202: FILE: include/linux/libata.h:1589:
+extern void ata_sff_drain_fifo(struct ata_queued_cmd *qc);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000150551.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 3 warnings, 10 checks, 138 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000150551.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
