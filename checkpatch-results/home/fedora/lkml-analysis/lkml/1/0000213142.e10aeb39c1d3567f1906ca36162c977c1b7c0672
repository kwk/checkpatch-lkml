WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
man-page for readlink syscalls prototype with buffer size as type of size_t:

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#104: FILE: fs/ecryptfs/inode.c:605:
+ecryptfs_readlink(struct dentry *dentry, char __user * buf, size_t bufsiz)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#205: FILE: fs/proc/base.c:1360:
+static int proc_pid_readlink(struct dentry * dentry, char __user * buffer, size_t buflen)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#205: FILE: fs/proc/base.c:1360:
+static int proc_pid_readlink(struct dentry * dentry, char __user * buffer, size_t buflen)

WARNING:SPACING: Unnecessary space before function pointer arguments
#257: FILE: include/linux/fs.h:1336:
+	int (*readlink) (struct dentry *, char __user *,size_t);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:OxV)
#257: FILE: include/linux/fs.h:1336:
+	int (*readlink) (struct dentry *, char __user *,size_t);
 	                                               ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#257: FILE: include/linux/fs.h:1336:
+	int (*readlink) (struct dentry *, char __user *,size_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char __user *' should also have an identifier name
#257: FILE: include/linux/fs.h:1336:
+	int (*readlink) (struct dentry *, char __user *,size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#257: FILE: include/linux/fs.h:1336:
+	int (*readlink) (struct dentry *, char __user *,size_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#266: FILE: include/linux/fs.h:2032:
+extern int vfs_readlink(struct dentry *, char __user *, size_t, const char *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#266: FILE: include/linux/fs.h:2032:
+extern int vfs_readlink(struct dentry *, char __user *, size_t, const char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char __user *' should also have an identifier name
#266: FILE: include/linux/fs.h:2032:
+extern int vfs_readlink(struct dentry *, char __user *, size_t, const char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#266: FILE: include/linux/fs.h:2032:
+extern int vfs_readlink(struct dentry *, char __user *, size_t, const char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#266: FILE: include/linux/fs.h:2032:
+extern int vfs_readlink(struct dentry *, char __user *, size_t, const char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#269: FILE: include/linux/fs.h:2034:
+extern int page_readlink(struct dentry *, char __user *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#269: FILE: include/linux/fs.h:2034:
+extern int page_readlink(struct dentry *, char __user *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char __user *' should also have an identifier name
#269: FILE: include/linux/fs.h:2034:
+extern int page_readlink(struct dentry *, char __user *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#269: FILE: include/linux/fs.h:2034:
+extern int page_readlink(struct dentry *, char __user *, size_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#277: FILE: include/linux/fs.h:2041:
+extern int generic_readlink(struct dentry *, char __user *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#277: FILE: include/linux/fs.h:2041:
+extern int generic_readlink(struct dentry *, char __user *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char __user *' should also have an identifier name
#277: FILE: include/linux/fs.h:2041:
+extern int generic_readlink(struct dentry *, char __user *, size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#277: FILE: include/linux/fs.h:2041:
+extern int generic_readlink(struct dentry *, char __user *, size_t);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000213142.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 15 warnings, 3 checks, 179 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000213142.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
