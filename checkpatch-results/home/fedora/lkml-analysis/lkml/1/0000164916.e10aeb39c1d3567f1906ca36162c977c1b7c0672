WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#59: 
 arch/arm/{mach-pxa => plat-pxa}/gpio.c |   30 +---------------

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#151: FILE: arch/arm/plat-pxa/gpio.c:2:
+ *  linux/arch/arm/plat-pxa/gpio.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#196: FILE: arch/arm/plat-pxa/include/plat/gpio.h:1:
+#ifndef __PLAT_GPIO_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#227: FILE: arch/arm/plat-pxa/include/plat/gpio.h:32:
+static inline int gpio_get_value(unsigned gpio)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'gpio < NR_BUILTIN_GPIO'
#229: FILE: arch/arm/plat-pxa/include/plat/gpio.h:34:
+	if (__builtin_constant_p(gpio) && (gpio < NR_BUILTIN_GPIO))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#235: FILE: arch/arm/plat-pxa/include/plat/gpio.h:40:
+static inline void gpio_set_value(unsigned gpio, int value)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'gpio < NR_BUILTIN_GPIO'
#237: FILE: arch/arm/plat-pxa/include/plat/gpio.h:42:
+	if (__builtin_constant_p(gpio) && (gpio < NR_BUILTIN_GPIO)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#237: FILE: arch/arm/plat-pxa/include/plat/gpio.h:42:
+	if (__builtin_constant_p(gpio) && (gpio < NR_BUILTIN_GPIO)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#242: FILE: arch/arm/plat-pxa/include/plat/gpio.h:47:
+	} else

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#256: FILE: arch/arm/plat-pxa/include/plat/gpio.h:61:
+extern void pxa_init_gpio(int mux_irq, int start, int end, set_wake_t fn);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000164916.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 5 checks, 162 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000164916.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
