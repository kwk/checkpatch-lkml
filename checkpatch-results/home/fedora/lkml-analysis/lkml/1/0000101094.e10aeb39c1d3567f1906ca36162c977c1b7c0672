CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lock' - possible side-effects?
#77: FILE: include/linux/spinlock_api_up.h:27:
+#define __LOCK(type, lock) \
+  do { typecheck(type*, lock); preempt_disable(); __acquire(lock); } while (0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: include/linux/spinlock_api_up.h:28:
+  do { typecheck(type*, lock); preempt_disable(); __acquire(lock); } while (0)$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxO)
#78: FILE: include/linux/spinlock_api_up.h:28:
+  do { typecheck(type*, lock); preempt_disable(); __acquire(lock); } while (0)
                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: include/linux/spinlock_api_up.h:31:
+  do { local_bh_disable(); __LOCK(type, lock); } while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: include/linux/spinlock_api_up.h:34:
+  do { local_irq_disable(); __LOCK(type, lock); } while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: include/linux/spinlock_api_up.h:37:
+  do { local_irq_save(flags); __LOCK(type, lock); } while (0)$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lock' - possible side-effects?
#97: FILE: include/linux/spinlock_api_up.h:39:
+#define __UNLOCK(type, lock) \
+  do { typecheck(type*, lock); preempt_enable(); __release(lock); } while (0)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: include/linux/spinlock_api_up.h:40:
+  do { typecheck(type*, lock); preempt_enable(); __release(lock); } while (0)$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxO)
#98: FILE: include/linux/spinlock_api_up.h:40:
+  do { typecheck(type*, lock); preempt_enable(); __release(lock); } while (0)
                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lock' - possible side-effects?
#102: FILE: include/linux/spinlock_api_up.h:42:
+#define __UNLOCK_BH(type, lock) \
+  do { typecheck(type*, lock); preempt_enable_no_resched(); local_bh_enable(); __release(lock); } while (0)

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#103: FILE: include/linux/spinlock_api_up.h:43:
+  do { typecheck(type*, lock); preempt_enable_no_resched(); local_bh_enable(); __release(lock); } while (0)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: include/linux/spinlock_api_up.h:43:
+  do { typecheck(type*, lock); preempt_enable_no_resched(); local_bh_enable(); __release(lock); } while (0)$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxO)
#103: FILE: include/linux/spinlock_api_up.h:43:
+  do { typecheck(type*, lock); preempt_enable_no_resched(); local_bh_enable(); __release(lock); } while (0)
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: include/linux/spinlock_api_up.h:46:
+  do { local_irq_enable(); __UNLOCK(type, lock); } while (0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: include/linux/spinlock_api_up.h:49:
+  do { local_irq_restore(flags); __UNLOCK(type, lock); } while (0)$

CHECK:SPACING: No space is necessary after a cast
#184: FILE: net/ipv4/route.c:245:
+# define rt_hash_lock_addr(slot) ((spinlock_t *) NULL)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000101094.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 7 checks, 111 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000101094.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
