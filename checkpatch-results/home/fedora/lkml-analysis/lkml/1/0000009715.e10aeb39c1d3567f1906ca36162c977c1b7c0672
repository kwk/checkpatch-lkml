WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
This patch adds a new type of alternative, denoted by replacementlen = 0xff.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: arch/x86/include/asm/alternative.h:95:
+      "661:\n\t" oldinstr "\n662:\n"^I^I^I^I    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: arch/x86/include/asm/alternative.h:96:
+      ".section .altinstructions,\"a\"\n"^I^I^I       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: arch/x86/include/asm/alternative.h:97:
+      _ASM_ALIGN "\n"^I^I^I^I^I^I   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: arch/x86/include/asm/alternative.h:98:
+      _ASM_PTR "661b\n"^I^I^I /* label^I   */   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: arch/x86/include/asm/alternative.h:99:
+      _ASM_PTR func "\n"^I^I^I/* new instruction */   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: arch/x86/include/asm/alternative.h:100:
+      "  .byte " __stringify(feature) "\n"      /* feature bit     */   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: arch/x86/include/asm/alternative.h:101:
+      "  .byte 662b-661b\n"^I^I     /* sourcelen       */   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: arch/x86/include/asm/alternative.h:102:
+      "  .byte 0xff\n"^I^I^I  /* replacementlen  */   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: arch/x86/include/asm/alternative.h:103:
+      "  .byte 0\n"^I^I^I     /* pad */^I       \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: arch/x86/include/asm/alternative.h:104:
+      ".previous\n"^I^I^I^I^I^I     \$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#78: FILE: arch/x86/include/asm/alternative.h:106:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#106: FILE: arch/x86/kernel/alternative.c:229:
+			int v32 = (int)v;
+			BUG_ON(5 > a->instrlen);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#106: FILE: arch/x86/kernel/alternative.c:229:
+			BUG_ON(5 > a->instrlen);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#106: FILE: arch/x86/kernel/alternative.c:229:
+			BUG_ON(5 > a->instrlen);

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#115: FILE: arch/x86/kernel/alternative.c:238:
+			BUG_ON(a->replacementlen > a->instrlen);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#120: FILE: arch/x86/kernel/alternative.c:243:
+		add_nops(insnbuf + len,
+			a->instrlen - len);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000009715.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 15 warnings, 2 checks, 56 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000009715.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
