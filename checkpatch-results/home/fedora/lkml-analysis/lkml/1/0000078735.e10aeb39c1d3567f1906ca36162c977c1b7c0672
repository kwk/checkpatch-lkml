WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#42: FILE: drivers/scsi/bfa/ms.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#59: FILE: drivers/scsi/bfa/ms.c:18:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#143: FILE: drivers/scsi/bfa/ms.c:102:
+ * ^I^IStart in offline state - awaiting NS to send start.$

CHECK:SPACING: No space is necessary after a cast
#438: FILE: drivers/scsi/bfa/ms.c:397:
+	cthdr = (struct ct_hdr_s *) BFA_FCXP_RSP_PLD(fcxp);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#460: FILE: drivers/scsi/bfa/ms.c:419:
+			     sizeof(gmal_entry->prefix)) == 0) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around gmal_entry->prefix[0]
#466: FILE: drivers/scsi/bfa/ms.c:425:
+				rsp_str = &(gmal_entry->prefix[0]);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#476: FILE: drivers/scsi/bfa/ms.c:435:
+				break;
+			} else {

CHECK:SPACING: No space is necessary after a cast
#632: FILE: drivers/scsi/bfa/ms.c:591:
+	cthdr = (struct ct_hdr_s *) BFA_FCXP_RSP_PLD(fcxp);

CHECK:SPACING: No space is necessary after a cast
#636: FILE: drivers/scsi/bfa/ms.c:595:
+		gfn_resp = (wwn_t *) (cthdr + 1);

CHECK:SPACING: No space is necessary after a cast
#716: FILE: drivers/scsi/bfa/ms.c:675:
+	els_cmd = (struct fc_els_cmd_s *) BFA_FCXP_RSP_PLD(fcxp);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#719: FILE: drivers/scsi/bfa/ms.c:678:
+	switch (els_cmd->els_code) {
+

CHECK:SPACING: No space is necessary after a cast
#732: FILE: drivers/scsi/bfa/ms.c:691:
+		ls_rjt = (struct fc_ls_rjt_s *) BFA_FCXP_RSP_PLD(fcxp);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#757: FILE: drivers/scsi/bfa/ms.c:716:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#805: FILE: drivers/scsi/bfa/n2n.c:1:
+/*

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rport"
#885: FILE: drivers/scsi/bfa/n2n.c:81:
+			bfa_assert(rport != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please don't use multiple blank lines
#909: FILE: drivers/scsi/bfa/n2n.c:105:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#914: FILE: drivers/scsi/bfa/ns.c:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#937: FILE: drivers/scsi/bfa/ns.c:24:
+ * ^Iimg ns_sm.jpg$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1061: FILE: drivers/scsi/bfa/ns.c:148:
+ * ^I^IStart in offline state - awaiting linkup$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1436: FILE: drivers/scsi/bfa/ns.c:523:
+}
+static void

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1546: FILE: drivers/scsi/bfa/ns.c:633:
+
+

CHECK:SPACING: No space is necessary after a cast
#1611: FILE: drivers/scsi/bfa/ns.c:698:
+	els_cmd = (struct fc_els_cmd_s *) BFA_FCXP_RSP_PLD(fcxp);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1614: FILE: drivers/scsi/bfa/ns.c:701:
+	switch (els_cmd->els_code) {
+

CHECK:SPACING: No space is necessary after a cast
#1627: FILE: drivers/scsi/bfa/ns.c:714:
+		ls_rjt = (struct fc_ls_rjt_s *) BFA_FCXP_RSP_PLD(fcxp);

CHECK:SPACING: No space is necessary after a cast
#1699: FILE: drivers/scsi/bfa/ns.c:786:
+		psymbl = (u8 *) &(bfa_fcs_port_get_psym_name(port));

CHECK:SPACING: No space is necessary after a cast
#1736: FILE: drivers/scsi/bfa/ns.c:823:
+	cthdr = (struct ct_hdr_s *) BFA_FCXP_RSP_PLD(fcxp);

CHECK:SPACING: No space is necessary after a cast
#1809: FILE: drivers/scsi/bfa/ns.c:896:
+	cthdr = (struct ct_hdr_s *) BFA_FCXP_RSP_PLD(fcxp);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1825: FILE: drivers/scsi/bfa/ns.c:912:
+/**
+* Register FC4-Features : Should be done after RFT_ID

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1826: FILE: drivers/scsi/bfa/ns.c:913:
+* Register FC4-Features : Should be done after RFT_ID
+ */

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1848: FILE: drivers/scsi/bfa/ns.c:935:
+	if (BFA_FCS_VPORT_IS_INITIATOR_MODE(ns->port)) {
[...]
+	} else if (BFA_FCS_VPORT_IS_TARGET_MODE(ns->port)) {
[...]

CHECK:SPACING: No space is necessary after a cast
#1888: FILE: drivers/scsi/bfa/ns.c:975:
+	cthdr = (struct ct_hdr_s *) BFA_FCXP_RSP_PLD(fcxp);

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1914: FILE: drivers/scsi/bfa/ns.c:1001:
+ *
+*  TBD : Need to use a local (FCS private) response buffer, since the response

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1915: FILE: drivers/scsi/bfa/ns.c:1002:
+*  TBD : Need to use a local (FCS private) response buffer, since the response
+ * can be larger than 2K.

CHECK:SPACING: No space is necessary after a cast
#1986: FILE: drivers/scsi/bfa/ns.c:1073:
+	cthdr = (struct ct_hdr_s *) BFA_FCXP_RSP_PLD(fcxp);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1990: FILE: drivers/scsi/bfa/ns.c:1077:
+	switch (cthdr->cmd_rsp_code) {
+

CHECK:SPACING: No space is necessary after a cast
#1997: FILE: drivers/scsi/bfa/ns.c:1084:
+						   (u32 *) (cthdr + 1),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cthdr->reason_code == CT_RSN_UNABLE_TO_PERF'
#2012: FILE: drivers/scsi/bfa/ns.c:1099:
+		if ((cthdr->reason_code == CT_RSN_UNABLE_TO_PERF)
+		    && (cthdr->exp_code == CT_NS_EXP_FT_NOT_REG)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cthdr->exp_code == CT_NS_EXP_FT_NOT_REG'
#2012: FILE: drivers/scsi/bfa/ns.c:1099:
+		if ((cthdr->reason_code == CT_RSN_UNABLE_TO_PERF)
+		    && (cthdr->exp_code == CT_NS_EXP_FT_NOT_REG)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2013: FILE: drivers/scsi/bfa/ns.c:1100:
+		if ((cthdr->reason_code == CT_RSN_UNABLE_TO_PERF)
+		    && (cthdr->exp_code == CT_NS_EXP_FT_NOT_REG)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2014: FILE: drivers/scsi/bfa/ns.c:1101:
+		    && (cthdr->exp_code == CT_NS_EXP_FT_NOT_REG)) {
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2034: FILE: drivers/scsi/bfa/ns.c:1121:
+ * ^Iparam[in] ^Iport ^I- pointer to bfa_fcs_port_t.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2036: FILE: drivers/scsi/bfa/ns.c:1123:
+ * ^Ireturn$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2037: FILE: drivers/scsi/bfa/ns.c:1124:
+ * ^I^Ivoid$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2039: FILE: drivers/scsi/bfa/ns.c:1126:
+* ^ISpecial Considerations:$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2039: FILE: drivers/scsi/bfa/ns.c:1126:
+ *
+* 	Special Considerations:

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2040: FILE: drivers/scsi/bfa/ns.c:1127:
+* 	Special Considerations:
+ *

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2041: FILE: drivers/scsi/bfa/ns.c:1128:
+ * ^Inote$

CHECK:SPACING: No space is necessary after a cast
#2064: FILE: drivers/scsi/bfa/ns.c:1151:
+		gidft_entry = (struct fcgs_gidft_resp_s *) &pid_buf[ii];

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rport"
#2073: FILE: drivers/scsi/bfa/ns.c:1160:
+		if (rport == NULL) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2142: FILE: drivers/scsi/bfa/ns.c:1229:
+{
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2156: FILE: drivers/scsi/bfa/ns.c:1243:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2161: FILE: drivers/scsi/bfa/plog.c:1:
+/*

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pl_rec->log_type != BFA_PL_LOG_TYPE_INT'
#2185: FILE: drivers/scsi/bfa/plog.c:25:
+	if ((pl_rec->log_type != BFA_PL_LOG_TYPE_INT)
+	    && (pl_rec->log_type != BFA_PL_LOG_TYPE_STRING))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pl_rec->log_type != BFA_PL_LOG_TYPE_STRING'
#2185: FILE: drivers/scsi/bfa/plog.c:25:
+	if ((pl_rec->log_type != BFA_PL_LOG_TYPE_INT)
+	    && (pl_rec->log_type != BFA_PL_LOG_TYPE_STRING))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2186: FILE: drivers/scsi/bfa/plog.c:26:
+	if ((pl_rec->log_type != BFA_PL_LOG_TYPE_INT)
+	    && (pl_rec->log_type != BFA_PL_LOG_TYPE_STRING))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pl_rec->log_type != BFA_PL_LOG_TYPE_INT'
#2189: FILE: drivers/scsi/bfa/plog.c:29:
+	if ((pl_rec->log_type != BFA_PL_LOG_TYPE_INT)
+	    && (pl_rec->log_num_ints > BFA_PL_INT_LOG_SZ))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pl_rec->log_num_ints > BFA_PL_INT_LOG_SZ'
#2189: FILE: drivers/scsi/bfa/plog.c:29:
+	if ((pl_rec->log_type != BFA_PL_LOG_TYPE_INT)
+	    && (pl_rec->log_num_ints > BFA_PL_INT_LOG_SZ))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2190: FILE: drivers/scsi/bfa/plog.c:30:
+	if ((pl_rec->log_type != BFA_PL_LOG_TYPE_INT)
+	    && (pl_rec->log_num_ints > BFA_PL_INT_LOG_SZ))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around plog->plog_recs[tail]
#2212: FILE: drivers/scsi/bfa/plog.c:52:
+	pl_recp = &(plog->plog_recs[tail]);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2229: FILE: drivers/scsi/bfa/plog.c:69:
+	plog->head = plog->tail = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2235: FILE: drivers/scsi/bfa/plog.c:75:
+bfa_plog_str(struct bfa_plog_s *plog, enum bfa_plog_mid mid,
+		enum bfa_plog_eid event,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2273: FILE: drivers/scsi/bfa/plog.c:113:
+			bfa_os_assign(lp.log_entry.int_log[i],
+					intarr[i]);

CHECK:SPACING: No space is necessary after a cast
#2275: FILE: drivers/scsi/bfa/plog.c:115:
+		lp.log_num_ints = (u8) num_ints;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2283: FILE: drivers/scsi/bfa/plog.c:123:
+bfa_plog_fchdr(struct bfa_plog_s *plog, enum bfa_plog_mid mid,
+			enum bfa_plog_eid event,

CHECK:SPACING: No space is necessary after a cast
#2287: FILE: drivers/scsi/bfa/plog.c:127:
+	u32       *tmp_int = (u32 *) fchdr;

CHECK:SPACING: No space is necessary after a cast
#2307: FILE: drivers/scsi/bfa/plog.c:147:
+	u32       *tmp_int = (u32 *) fchdr;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2325: FILE: drivers/scsi/bfa/plog.c:165:
+	plog->head = plog->tail = 0;

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#2343: FILE: drivers/scsi/bfa/plog.c:183:
+	return((bfa_boolean_t)plog->plog_enabled);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078735.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 20 warnings, 47 checks, 2291 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000078735.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
