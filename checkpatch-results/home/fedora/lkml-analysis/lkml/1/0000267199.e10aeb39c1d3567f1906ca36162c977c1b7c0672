WARNING:TYPO_SPELLING: 'realted' may be misspelled - perhaps 'related'?
#25: 
This file contains functions realted to managing GRU resources provided
                             ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
to the user. Examples include GRU context assignment, load, unload, migration, etc..

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#40: FILE: drivers/misc/sgi-gru/grumain.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#108: FILE: drivers/misc/sgi-gru/grumain.c:69:
+ *   ^I0---------------x------------x---------------------x----|$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#109: FILE: drivers/misc/sgi-gru/grumain.c:70:
+ *^I  ^-next^I^-limit^I   ^I^I^I^I^-MAX_ASID$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'inuse_asid > asid'
#157: FILE: drivers/misc/sgi-gru/grumain.c:118:
+		if ((inuse_asid > asid) && (inuse_asid < limit))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'inuse_asid < limit'
#157: FILE: drivers/misc/sgi-gru/grumain.c:118:
+		if ((inuse_asid > asid) && (inuse_asid < limit))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#196: FILE: drivers/misc/sgi-gru/grumain.c:157:
+			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#249: FILE: drivers/misc/sgi-gru/grumain.c:210:
+	return hweight64(gru->gs_cbr_map) >= cbr_au_count
+		&& hweight64(gru->gs_dsr_map) >= dsr_au_count

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#250: FILE: drivers/misc/sgi-gru/grumain.c:211:
+		&& hweight64(gru->gs_dsr_map) >= dsr_au_count
+		&& gru->gs_active_contexts < max_active_contexts;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#276: FILE: drivers/misc/sgi-gru/grumain.c:237:
+	BUG_ON(asids->mt_ctxbitmap & ctxbitmap);

ERROR:PRINTF_0XDECIMAL: Prefixing 0x with decimal output is defective
#283: FILE: drivers/misc/sgi-gru/grumain.c:244:
+		"gru %x, gms %p, ctxnum 0x%d, asid 0x%x, asidmap 0x%lx\n",

Prefixing 0x with decimal output is defective and should be corrected.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#297: FILE: drivers/misc/sgi-gru/grumain.c:258:
+	BUG_ON((asids->mt_ctxbitmap & ctxbitmap) != ctxbitmap);

ERROR:PRINTF_0XDECIMAL: Prefixing 0x with decimal output is defective
#299: FILE: drivers/misc/sgi-gru/grumain.c:260:
+	gru_dbg(grudev, "gru %x, gms %p, ctxnum 0x%d, asidmap 0x%lx\n",

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#325: FILE: drivers/misc/sgi-gru/grumain.c:286:
+	list_for_each_entry(gts, &vdata->vd_head, ts_next)
+	    if (gts->ts_tsid == tsid)

WARNING:TABSTOP: Statements should start on a tabstop
#326: FILE: drivers/misc/sgi-gru/grumain.c:287:
+	    if (gts->ts_tsid == tsid)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#393: FILE: drivers/misc/sgi-gru/grumain.c:354:
+struct gru_thread_state *gru_find_thread_state(struct vm_area_struct *vma,
+					int tsid)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#410: FILE: drivers/misc/sgi-gru/grumain.c:371:
+struct gru_thread_state *gru_alloc_thread_state(struct vm_area_struct *vma,
+					int tsid)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#446: FILE: drivers/misc/sgi-gru/grumain.c:407:
+	BUG_ON(test_bit(gts->ts_ctxnum, &gru->gs_context_map) == 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#536: FILE: drivers/misc/sgi-gru/grumain.c:497:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#546: FILE: drivers/misc/sgi-gru/grumain.c:507:
+		BUG();

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#571: FILE: drivers/misc/sgi-gru/grumain.c:532:
+	    (gts->ts_user_options == GRU_OPT_MISS_FMM_POLL
+	     || gts->ts_user_options == GRU_OPT_MISS_FMM_INTR);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#583: FILE: drivers/misc/sgi-gru/grumain.c:544:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#590: FILE: drivers/misc/sgi-gru/grumain.c:551:
+		BUG();

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#598: FILE: drivers/misc/sgi-gru/grumain.c:559:
+ * ^I- retarget interrupts on local blade$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#599: FILE: drivers/misc/sgi-gru/grumain.c:560:
+ * ^I- force a delayed context unload by clearing the CCH asids. This$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#600: FILE: drivers/misc/sgi-gru/grumain.c:561:
+ * ^I  forces TLB misses for new GRU instructions. The context is unloaded$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#601: FILE: drivers/misc/sgi-gru/grumain.c:562:
+ * ^I  when the next TLB miss occurs.$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#616: FILE: drivers/misc/sgi-gru/grumain.c:577:
+			BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#628: FILE: drivers/misc/sgi-gru/grumain.c:589:
+			BUG();

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#638: FILE: drivers/misc/sgi-gru/grumain.c:599:
+ * ^I- task's GRU context is loaded into a GRU$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#639: FILE: drivers/misc/sgi-gru/grumain.c:600:
+ * ^I- task is using interrupt notification for TLB faults$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#640: FILE: drivers/misc/sgi-gru/grumain.c:601:
+ * ^I- task has migrated to a different cpu on the same blade where$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#641: FILE: drivers/misc/sgi-gru/grumain.c:602:
+ * ^I  it was previously running.$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#646: FILE: drivers/misc/sgi-gru/grumain.c:607:
+	if (gts->ts_tlb_int_select < 0
+	    || gts->ts_tlb_int_select == gru_cpu_fault_map_id())

CHECK:LINE_SPACING: Please don't use multiple blank lines
#654: FILE: drivers/misc/sgi-gru/grumain.c:615:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'n' - possible side-effects?
#659: FILE: drivers/misc/sgi-gru/grumain.c:620:
+#define next_ctxnum(n)	((n) <  GRU_NUM_CCH - 2 ? (n) + 1 : 0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#660: FILE: drivers/misc/sgi-gru/grumain.c:621:
+#define next_gru(b, g)	(((g) < &(b)->bs_grus[GRU_CHIPLETS_PER_BLADE - 1]) ?  \
+				 ((g)+1) : &(b)->bs_grus[0])

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'g' - possible side-effects?
#660: FILE: drivers/misc/sgi-gru/grumain.c:621:
+#define next_gru(b, g)	(((g) < &(b)->bs_grus[GRU_CHIPLETS_PER_BLADE - 1]) ?  \
+				 ((g)+1) : &(b)->bs_grus[0])

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#661: FILE: drivers/misc/sgi-gru/grumain.c:622:
+				 ((g)+1) : &(b)->bs_grus[0])
 				     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#763: FILE: drivers/misc/sgi-gru/grumain.c:724:
+		BUG_ON(gts->ts_ctxnum == GRU_NUM_CCH);

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#821: FILE: drivers/misc/sgi-gru/grumain.c:782:
+			if (gts->ts_steal_jiffies + GRU_STEAL_DELAY < jiffies)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000267199.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 27 warnings, 13 checks, 798 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000267199.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
