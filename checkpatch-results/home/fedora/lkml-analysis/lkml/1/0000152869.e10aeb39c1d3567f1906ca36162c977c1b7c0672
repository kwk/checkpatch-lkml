WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#49: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#54: FILE: arch/microblaze/include/asm/cache.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#103: FILE: arch/microblaze/include/asm/cacheflush.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#156: FILE: arch/microblaze/include/asm/cacheflush.h:54:
+extern void __invalidate_icache_all(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#157: FILE: arch/microblaze/include/asm/cacheflush.h:55:
+extern void __invalidate_icache_range(unsigned long start, unsigned long end);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#158: FILE: arch/microblaze/include/asm/cacheflush.h:56:
+extern void __invalidate_icache_page(struct vm_area_struct *vma,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#159: FILE: arch/microblaze/include/asm/cacheflush.h:57:
+extern void __invalidate_icache_page(struct vm_area_struct *vma,
+				struct page *page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#160: FILE: arch/microblaze/include/asm/cacheflush.h:58:
+extern void __invalidate_icache_user_range(struct vm_area_struct *vma,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: arch/microblaze/include/asm/cacheflush.h:59:
+extern void __invalidate_icache_user_range(struct vm_area_struct *vma,
+				struct page *page,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#163: FILE: arch/microblaze/include/asm/cacheflush.h:61:
+extern void __invalidate_cache_sigtramp(unsigned long addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#165: FILE: arch/microblaze/include/asm/cacheflush.h:63:
+extern void __invalidate_dcache_all(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#166: FILE: arch/microblaze/include/asm/cacheflush.h:64:
+extern void __invalidate_dcache_range(unsigned long start, unsigned long end);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#167: FILE: arch/microblaze/include/asm/cacheflush.h:65:
+extern void __invalidate_dcache_page(struct vm_area_struct *vma,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#168: FILE: arch/microblaze/include/asm/cacheflush.h:66:
+extern void __invalidate_dcache_page(struct vm_area_struct *vma,
+				struct page *page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#169: FILE: arch/microblaze/include/asm/cacheflush.h:67:
+extern void __invalidate_dcache_user_range(struct vm_area_struct *vma,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#170: FILE: arch/microblaze/include/asm/cacheflush.h:68:
+extern void __invalidate_dcache_user_range(struct vm_area_struct *vma,
+				struct page *page,

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'dst' - possible side-effects?
#179: FILE: arch/microblaze/include/asm/cacheflush.h:77:
+#define copy_to_user_page(vma, page, vaddr, dst, src, len) \
+do { memcpy((dst), (src), (len)); \
+	flush_icache_range((unsigned) (dst), (unsigned) (dst) + (len)); \
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'len' - possible side-effects?
#179: FILE: arch/microblaze/include/asm/cacheflush.h:77:
+#define copy_to_user_page(vma, page, vaddr, dst, src, len) \
+do { memcpy((dst), (src), (len)); \
+	flush_icache_range((unsigned) (dst), (unsigned) (dst) + (len)); \
+} while (0)

CHECK:SPACING: No space is necessary after a cast
#181: FILE: arch/microblaze/include/asm/cacheflush.h:79:
+	flush_icache_range((unsigned) (dst), (unsigned) (dst) + (len)); \

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#181: FILE: arch/microblaze/include/asm/cacheflush.h:79:
+	flush_icache_range((unsigned) (dst), (unsigned) (dst) + (len)); \

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#181: FILE: arch/microblaze/include/asm/cacheflush.h:79:
+	flush_icache_range((unsigned) (dst), (unsigned) (dst) + (len)); \

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#194: FILE: arch/microblaze/kernel/cpu/cache.c:1:
+/*

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#206: FILE: arch/microblaze/kernel/cpu/cache.c:13:
+#include <asm/cacheflush.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#216: FILE: arch/microblaze/kernel/cpu/cache.c:23:
+		__asm__ __volatile__ ("					\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#218: FILE: arch/microblaze/kernel/cpu/cache.c:25:
+				nop; "					\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#218: FILE: arch/microblaze/kernel/cpu/cache.c:25:
+				nop; "					\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#223: FILE: arch/microblaze/kernel/cpu/cache.c:30:
+		__asm__ __volatile__ ("					\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#228: FILE: arch/microblaze/kernel/cpu/cache.c:35:
+				nop; "					\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#228: FILE: arch/microblaze/kernel/cpu/cache.c:35:
+				nop; "					\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#240: FILE: arch/microblaze/kernel/cpu/cache.c:47:
+		__asm__ __volatile__ ("					\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#242: FILE: arch/microblaze/kernel/cpu/cache.c:49:
+				nop; "					\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#242: FILE: arch/microblaze/kernel/cpu/cache.c:49:
+				nop; "					\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#247: FILE: arch/microblaze/kernel/cpu/cache.c:54:
+		__asm__ __volatile__ ("					\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#252: FILE: arch/microblaze/kernel/cpu/cache.c:59:
+				nop; "					\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#252: FILE: arch/microblaze/kernel/cpu/cache.c:59:
+				nop; "					\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#263: FILE: arch/microblaze/kernel/cpu/cache.c:70:
+		__asm__ __volatile__ ("					\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#264: FILE: arch/microblaze/kernel/cpu/cache.c:71:
+				wic	%0, r0"				\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#264: FILE: arch/microblaze/kernel/cpu/cache.c:71:
+				wic	%0, r0"				\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#274: FILE: arch/microblaze/kernel/cpu/cache.c:81:
+		__asm__ __volatile__ ("					\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#276: FILE: arch/microblaze/kernel/cpu/cache.c:83:
+				nop; "					\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#276: FILE: arch/microblaze/kernel/cpu/cache.c:83:
+				nop; "					\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#281: FILE: arch/microblaze/kernel/cpu/cache.c:88:
+		__asm__ __volatile__ ("					\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#286: FILE: arch/microblaze/kernel/cpu/cache.c:93:
+				nop; "					\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#286: FILE: arch/microblaze/kernel/cpu/cache.c:93:
+				nop; "					\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#298: FILE: arch/microblaze/kernel/cpu/cache.c:105:
+		__asm__ __volatile__ ("					\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#300: FILE: arch/microblaze/kernel/cpu/cache.c:107:
+				nop; "					\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#300: FILE: arch/microblaze/kernel/cpu/cache.c:107:
+				nop; "					\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#305: FILE: arch/microblaze/kernel/cpu/cache.c:112:
+		__asm__ __volatile__ ("					\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#310: FILE: arch/microblaze/kernel/cpu/cache.c:117:
+				nop; "					\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#310: FILE: arch/microblaze/kernel/cpu/cache.c:117:
+				nop; "					\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#321: FILE: arch/microblaze/kernel/cpu/cache.c:128:
+		__asm__ __volatile__ ("					\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#322: FILE: arch/microblaze/kernel/cpu/cache.c:129:
+				wdc	%0, r0"				\

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#322: FILE: arch/microblaze/kernel/cpu/cache.c:129:
+				wdc	%0, r0"				\

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#330: FILE: arch/microblaze/kernel/cpu/cache.c:137:
+	unsigned flags;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#337: FILE: arch/microblaze/kernel/cpu/cache.c:144:
+		/* Just loop through cache size and invalidate, no need to add
+			CACHE_BASE address */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#337: FILE: arch/microblaze/kernel/cpu/cache.c:144:
+			CACHE_BASE address */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#338: FILE: arch/microblaze/kernel/cpu/cache.c:145:
+		for (i = 0; i < cpuinfo.icache_size;
[...]
+				__invalidate_icache(i);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#350: FILE: arch/microblaze/kernel/cpu/cache.c:157:
+	unsigned flags;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#381: FILE: arch/microblaze/kernel/cpu/cache.c:188:
+void __invalidate_icache_user_range(struct vm_area_struct *vma,
+				struct page *page, unsigned long adr,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#395: FILE: arch/microblaze/kernel/cpu/cache.c:202:
+	unsigned flags;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#405: FILE: arch/microblaze/kernel/cpu/cache.c:212:
+		for (i = 0; i < cpuinfo.dcache_size;
[...]
+				__invalidate_dcache(i);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#417: FILE: arch/microblaze/kernel/cpu/cache.c:224:
+	unsigned flags;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#447: FILE: arch/microblaze/kernel/cpu/cache.c:254:
+void __invalidate_dcache_user_range(struct vm_area_struct *vma,
+				struct page *page, unsigned long adr,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000152869.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 44 warnings, 19 checks, 386 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000152869.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
