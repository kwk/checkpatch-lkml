ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#61: FILE: drivers/gpu/drm/Kconfig:8:
support)"

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LINE_SPACING: Missing a blank line after declarations
#108: FILE: drivers/gpu/drm/drm_bufs.c:46:
+		struct resource *r;
+		r = platform_get_resource(dev->platformdev, IORESOURCE_MEM,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#109: FILE: drivers/gpu/drm/drm_bufs.c:47:
+		r = platform_get_resource(dev->platformdev, IORESOURCE_MEM,
+					     resource);

WARNING:LINE_SPACING: Missing a blank line after declarations
#127: FILE: drivers/gpu/drm/drm_bufs.c:64:
+		struct resource *r;
+		r = platform_get_resource(dev->platformdev, IORESOURCE_MEM,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#128: FILE: drivers/gpu/drm/drm_bufs.c:65:
+		r = platform_get_resource(dev->platformdev, IORESOURCE_MEM,
+			resource);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#148: FILE: drivers/gpu/drm/drm_bufs.c:216:
+#if !defined(__sparc__) && !defined(__alpha__) && !defined(__ia64__) && $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#249: FILE: drivers/gpu/drm/drm_info.c:57:
+			seq_printf(m, "%s %s\n",
+					dev->driver->platform_device->name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#253: FILE: drivers/gpu/drm/drm_info.c:61:
+			seq_printf(m, "%s\n",
+				dev->driver->platform_device->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#260: FILE: drivers/gpu/drm/drm_info.c:66:
+			seq_printf(m, "%s %s %s\n",
+				dev->driver->pci_driver.name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#264: FILE: drivers/gpu/drm/drm_info.c:70:
+			seq_printf(m, "%s %s\n", dev->driver->pci_driver.name,
+				pci_name(dev->pdev));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!master->unique"
#297: FILE: drivers/gpu/drm/drm_ioctl.c:140:
+		if (master->unique == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#311: FILE: drivers/gpu/drm/drm_ioctl.c:144:
+		len = snprintf(master->unique, master->unique_len,
+			"platform:%s", dev->platformdev->name);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->devname"
#326: FILE: drivers/gpu/drm/drm_ioctl.c:153:
+		if (dev->devname == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!master->unique"
#336: FILE: drivers/gpu/drm/drm_ioctl.c:163:
+		if (master->unique == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#340: FILE: drivers/gpu/drm/drm_ioctl.c:167:
+		len = snprintf(master->unique, master->unique_len,
+			"pci:%04x:%02x:%02x.%d",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->devname"
#354: FILE: drivers/gpu/drm/drm_ioctl.c:181:
+		if (dev->devname == NULL)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!dev->irq_enabled'
#434: FILE: drivers/gpu/drm/drm_irq.c:656:
+	if ((!drm_dev_to_irq(dev)) || (!dev->irq_enabled))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#493: FILE: drivers/gpu/drm/drm_pci.c:165:
+	if ((ret = drm_fill_in_dev(dev, ent, driver))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#494: FILE: drivers/gpu/drm/drm_pci.c:166:
+		printk(KERN_ERR "DRM: Fill_in_dev failed.\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#505: FILE: drivers/gpu/drm/drm_pci.c:177:
+	if ((ret = drm_get_minor(dev, &dev->primary, DRM_MINOR_LEGACY)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#517: FILE: drivers/gpu/drm/drm_pci.c:189:
+		ret = drm_mode_group_init_legacy_group(dev,
+						&dev->primary->mode_group);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#598: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#603: FILE: drivers/gpu/drm/drm_platform.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#606: FILE: drivers/gpu/drm/drm_platform.c:4:
+ * Copyright 2003 José Fonseca.
                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#612: FILE: drivers/gpu/drm/drm_platform.c:10:
+ * copy of this software and associated documentation files (the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#614: FILE: drivers/gpu/drm/drm_platform.c:11:
+ * to deal in the Software without restriction, including without $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#620: FILE: drivers/gpu/drm/drm_platform.c:16:
+ * The above copyright notice and this permission notice (including the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#622: FILE: drivers/gpu/drm/drm_platform.c:17:
+ * paragraph) shall be included in all copies or substantial portions $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#626: FILE: drivers/gpu/drm/drm_platform.c:20:
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#629: FILE: drivers/gpu/drm/drm_platform.c:22:
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#631: FILE: drivers/gpu/drm/drm_platform.c:23:
+ * AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#633: FILE: drivers/gpu/drm/drm_platform.c:24:
+ * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN $

WARNING:TYPO_SPELLING: 'struture' may be misspelled - perhaps 'structure'?
#643: FILE: drivers/gpu/drm/drm_platform.c:33:
+ * \param platdev - Platform device struture
                                     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#668: FILE: drivers/gpu/drm/drm_platform.c:58:
+		printk(KERN_ERR "DRM: Fill_in_dev failed.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#692: FILE: drivers/gpu/drm/drm_platform.c:82:
+		ret = drm_mode_group_init_legacy_group(dev,
+				&dev->primary->mode_group);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#750: FILE: drivers/gpu/drm/drm_stub.c:227:
+int drm_fill_in_dev(struct drm_device *dev,
  			   const struct pci_device_id *ent,
  			   struct drm_driver *driver)
  {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#751: FILE: drivers/gpu/drm/drm_stub.c:228:
+int drm_fill_in_dev(struct drm_device *dev,
  			   const struct pci_device_id *ent,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#777: FILE: drivers/gpu/drm/drm_stub.c:316:
+int drm_get_minor(struct drm_device *dev, struct drm_minor **minor, int $

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#777: FILE: drivers/gpu/drm/drm_stub.c:316:
+int drm_get_minor(struct drm_device *dev, struct drm_minor **minor, int 
type)
  {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "minor->dev->platformdev"
#883: FILE: drivers/gpu/drm/drm_sysfs.c:490:
+	if (minor->dev->platformdev != NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#933: FILE: drivers/gpu/drm/drm_vm.c:632:
+		if (remap_pfn_range(vma, vma->vm_start,
+					(map->offset + offset) >> PAGE_SHIFT,

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#954: FILE: drivers/gpu/drm/i915/i915_drv.c:392:
  static int __devinit

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#968: FILE: drivers/gpu/drm/radeon/radeon_drv.c:223:
  static int __devinit

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1058: FILE: include/drm/drmP.h:1363:
+extern int drm_get_pci_dev(struct pci_dev *pdev,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1061: FILE: include/drm/drmP.h:1366:
+extern int drm_get_platform_dev(struct platform_device *pdev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1103: FILE: include/drm/drmP.h:1588:
+extern int drm_platform_init(struct drm_driver *driver);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1104: FILE: include/drm/drmP.h:1589:
+extern int drm_pci_init(struct drm_driver *driver);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1105: FILE: include/drm/drmP.h:1590:
+extern int drm_fill_in_dev(struct drm_device *dev,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1108: FILE: include/drm/drmP.h:1593:
+int drm_get_minor(struct drm_device *dev, struct drm_minor **minor, int $

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000005888.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 16 errors, 9 warnings, 24 checks, 950 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000005888.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
