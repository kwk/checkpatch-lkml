WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
  ssh://master.kernel.org/pub/scm/linux/kernel/git/hskinnemoen/avr32-2.6.git for-linus

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#332: FILE: arch/avr32/kernel/entry-avr32b.S:546:
+	rcall	trace_hardirqs_off
 	^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#335: FILE: arch/avr32/kernel/entry-avr32b.S:549:
+	rcall	do_debug
 	^^^^^

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#359: FILE: arch/avr32/kernel/entry-avr32b.S:573:
+	rcall	trace_hardirqs_on
 	^^^^^

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#408: FILE: arch/avr32/kernel/entry-avr32b.S:606:
+	rcall	trace_hardirqs_on
 	^^^^^

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#524: FILE: arch/avr32/kernel/entry-avr32b.S:697:
+	rcall	trace_hardirqs_on
 	^^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#643: FILE: arch/avr32/kernel/process.c:290:
+	printk("%sMode bits: %c%c%c%c%c%c%c%c%c%c\n", log_lvl,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ptrace_read_user', this function's name, in a string
#731: FILE: arch/avr32/kernel/ptrace.c:84:
+	pr_debug("ptrace_read_user(%s[%u], %#lx, %p) -> %#lx\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ptrace_write_user', this function's name, in a string
#741: FILE: arch/avr32/kernel/ptrace.c:100:
+	pr_debug("ptrace_write_user(%s[%u], %#lx, %#lx)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#742: FILE: arch/avr32/kernel/ptrace.c:101:
+	pr_debug("ptrace_write_user(%s[%u], %#lx, %#lx)\n",
+			tsk->comm, tsk->pid, offset, value);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'do_debug', this function's name, in a string
#874: FILE: arch/avr32/kernel/ptrace.c:287:
+	pr_debug("do_debug: status=0x%08x PC=0x%08lx SR=0x%08lx tif=0x%08lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#875: FILE: arch/avr32/kernel/ptrace.c:288:
+	pr_debug("do_debug: status=0x%08x PC=0x%08lx SR=0x%08lx tif=0x%08lx\n",
+			status, regs->pc, regs->sr, ti->flags);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#888: FILE: arch/avr32/kernel/ptrace.c:301:
+		if ((status & (1 << OCD_DS_SWB_BIT))
+				&& test_and_clear_ti_thread_flag(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#888: FILE: arch/avr32/kernel/ptrace.c:301:
+				&& test_and_clear_ti_thread_flag(

WARNING:SPLIT_STRING: quoted string split across lines
#899: FILE: arch/avr32/kernel/ptrace.c:312:
+			pr_debug("  -> TIF_BREAKPOINT done, adjusted regs:"
+					"PC=0x%08lx SR=0x%08lx\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#901: FILE: arch/avr32/kernel/ptrace.c:314:
+			BUG_ON(!user_mode(regs));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#914: FILE: arch/avr32/kernel/ptrace.c:327:
+		} else if ((status & (1 << OCD_DS_SSS_BIT))
+				&& test_ti_thread_flag(ti, TIF_SINGLE_STEP)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#915: FILE: arch/avr32/kernel/ptrace.c:328:
+				&& test_ti_thread_flag(ti, TIF_SINGLE_STEP)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#917: FILE: arch/avr32/kernel/ptrace.c:330:
+			pr_debug("Stepped into something, "
+					"setting TIF_BREAKPOINT...\n");

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#933: FILE: arch/avr32/kernel/ptrace.c:346:
+				trampoline_addr
+					= (unsigned long)&debug_trampoline;

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#941: FILE: arch/avr32/kernel/ptrace.c:354:
+				BUG_ON(ti->rsr_saved & MODE_MASK);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#961: FILE: arch/avr32/kernel/ptrace.c:374:
+			return regs;
+		} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#962: FILE: arch/avr32/kernel/ptrace.c:375:
+			printk(KERN_ERR "Unexpected OCD_DS value: 0x%08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#963: FILE: arch/avr32/kernel/ptrace.c:376:
+			printk(KERN_ERR "Unexpected OCD_DS value: 0x%08x\n",
+					status);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#964: FILE: arch/avr32/kernel/ptrace.c:377:
+			printk(KERN_ERR "Thread flags: 0x%08lx\n", ti->flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#966: FILE: arch/avr32/kernel/ptrace.c:379:
+			die("Unhandled debug trap in kernel mode",
+					regs, SIGTRAP);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#989: FILE: arch/avr32/kernel/ptrace.c:391:
+	pr_debug("Sending SIGTRAP: code=%d PC=0x%08lx SR=0x%08lx\n",
+			code, regs->pc, regs->sr);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#1004: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1009: FILE: arch/avr32/kernel/stacktrace.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1118: FILE: arch/avr32/mm/cache.c:154:
+void copy_to_user_page(struct vm_area_struct *vma, struct page *page,
+		unsigned long vaddr, void *dst, const void *src,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1124: FILE: arch/avr32/mm/cache.c:160:
+		flush_icache_range((unsigned long)dst,
+				(unsigned long)dst + len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1144: FILE: include/asm-avr32/cacheflush.h:120:
+extern void copy_to_user_page(struct vm_area_struct *vma, struct page *page,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1145: FILE: include/asm-avr32/cacheflush.h:121:
+extern void copy_to_user_page(struct vm_area_struct *vma, struct page *page,
+		unsigned long vaddr, void *dst, const void *src,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1149: FILE: include/asm-avr32/cacheflush.h:125:
+static inline void copy_from_user_page(struct vm_area_struct *vma,
+		struct page *page, unsigned long vaddr, void *dst,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1840: FILE: include/asm-avr32/thread_info.h:30:
+	__u32			rsr_saved;	/* ...and status register
+						   saved by debug handler

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1842: FILE: include/asm-avr32/thread_info.h:32:
+						   trampoline */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000349850.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 21 warnings, 15 checks, 1693 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000349850.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
