WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: kernel/sched.c:719:
+       long tokens;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: kernel/sched.c:720:
+       unsigned long last_update;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: kernel/sched.c:721:
+       int starve_count;$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'p' may be better as '(p)' to avoid precedence issues
#121: FILE: kernel/sched.c:724:
+#define task_starving(p)	(p->flags & PF_STARVING)

WARNING:TYPO_SPELLING: 'didnt' may be misspelled - perhaps 'didn't'?
#123: FILE: kernel/sched.c:726:
+/* Mark a task starving - either we shortcircuited its timeslice or we didnt
                                                                        ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#179: FILE: kernel/sched.c:782:
+		rq->last_update += (delta/HZ) * HZ;
 		                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: kernel/sched.c:809:
+^I ^Ireturn 0;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#206: FILE: kernel/sched.c:809:
+^I ^Ireturn 0;$

ERROR:SPACING: space required after that ';' (ctx:VxV)
#229: FILE: kernel/sched.c:832:
+static int is_user_starving(struct task_struct *p) { return 0;}
                                                              ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#274: FILE: kernel/sched.c:3300:
+		if (!TASK_INTERACTIVE(p) || expired_starving(rq)
[...]
 		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#275: FILE: kernel/sched.c:3301:
+		if (!TASK_INTERACTIVE(p) || expired_starving(rq)
+						|| task_over_cpu_limit(p)) {

WARNING:TYPO_SPELLING: 'cant' may be misspelled - perhaps 'can't'?
#337: FILE: kernel/sched.c:3657:
+	/* If we have done an array switch twice, it means we cant find any
 	                                                      ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#342: FILE: kernel/sched.c:3662:
+	if (array_switch < 2 && (task_over_cpu_limit(next) ||
+			(!task_starving(next) && is_user_starving(next)))) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000474453.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 6 warnings, 5 checks, 285 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000474453.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
