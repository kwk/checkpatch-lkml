WARNING:EMAIL_SUBJECT: A patch subject line should describe the change not the tool that found it
#13: 
Subject: [PATCH] x86-kernel: fix sparse warnings

Naming the tool that found the issue is not very useful in the
subject line.  A good subject line summarizes the change that
the patch brings.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#187: FILE: arch/x86/kernel/cpu/mtrr/generic.c:216:
+		unsigned mlo, mhi;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#293: FILE: arch/x86/kernel/setup_32.c:384:
+			if (maxlow_pfn-highmem_pages <
 			              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#294: FILE: arch/x86/kernel/setup_32.c:385:
+			    64*1024*1024/PAGE_SIZE){
 			      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#294: FILE: arch/x86/kernel/setup_32.c:385:
+			    64*1024*1024/PAGE_SIZE){
 			           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#294: FILE: arch/x86/kernel/setup_32.c:385:
+			    64*1024*1024/PAGE_SIZE){
 			                ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#392: FILE: include/asm-x86/apic.h:130:
+extern void smp_apic_timer_interrupt(struct pt_regs *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#392: FILE: include/asm-x86/apic.h:130:
+extern void smp_apic_timer_interrupt(struct pt_regs *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#393: FILE: include/asm-x86/apic.h:131:
+extern int setup_profiling_timer(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#393: FILE: include/asm-x86/apic.h:131:
+extern int setup_profiling_timer(unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#394: FILE: include/asm-x86/apic.h:132:
+extern void smp_spurious_interrupt(struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#394: FILE: include/asm-x86/apic.h:132:
+extern void smp_spurious_interrupt(struct pt_regs *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#395: FILE: include/asm-x86/apic.h:133:
+extern void smp_error_interrupt(struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#395: FILE: include/asm-x86/apic.h:133:
+extern void smp_error_interrupt(struct pt_regs *);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#445: FILE: include/asm-x86/dma.h:155:
+struct page *dma_alloc_pages(struct device *, gfp_t, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#445: FILE: include/asm-x86/dma.h:155:
+struct page *dma_alloc_pages(struct device *, gfp_t, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gfp_t' should also have an identifier name
#445: FILE: include/asm-x86/dma.h:155:
+struct page *dma_alloc_pages(struct device *, gfp_t, unsigned);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#445: FILE: include/asm-x86/dma.h:155:
+struct page *dma_alloc_pages(struct device *, gfp_t, unsigned);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#470: FILE: include/asm-x86/i387.h:27:
+extern int dump_fpu(struct pt_regs *, struct user_i387_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#470: FILE: include/asm-x86/i387.h:27:
+extern int dump_fpu(struct pt_regs *, struct user_i387_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct user_i387_struct *' should also have an identifier name
#470: FILE: include/asm-x86/i387.h:27:
+extern int dump_fpu(struct pt_regs *, struct user_i387_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#499: FILE: include/asm-x86/mach-default/mach_traps.h:43:
+void math_error(void __user *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#500: FILE: include/asm-x86/mach-default/mach_traps.h:44:
+void do_coprocessor_error(struct pt_regs *, long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long' should also have an identifier name
#500: FILE: include/asm-x86/mach-default/mach_traps.h:44:
+void do_coprocessor_error(struct pt_regs *, long);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#501: FILE: include/asm-x86/mach-default/mach_traps.h:45:
+unsigned long patch_espfix_desc(unsigned long , unsigned long);
                                               ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#501: FILE: include/asm-x86/mach-default/mach_traps.h:45:
+unsigned long patch_espfix_desc(unsigned long , unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#501: FILE: include/asm-x86/mach-default/mach_traps.h:45:
+unsigned long patch_espfix_desc(unsigned long , unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#513: FILE: include/asm-x86/mpspec.h:45:
+extern void __init early_get_smp_config(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#514: FILE: include/asm-x86/mpspec.h:46:
+extern void __init early_find_smp_config(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#528: FILE: include/asm-x86/pci-direct.h:18:
+extern int is_vsmp_box(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#529: FILE: include/asm-x86/pci-direct.h:19:
+extern void __init vsmp_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#549: FILE: include/asm-x86/processor.h:145:
+extern void __init early_cpu_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#550: FILE: include/asm-x86/processor.h:146:
+extern struct pt_regs * __cpuinit idle_regs(struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#550: FILE: include/asm-x86/processor.h:146:
+extern struct pt_regs * __cpuinit idle_regs(struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#563: FILE: include/asm-x86/ptrace.h:142:
+int do_syscall_trace(struct pt_regs *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#563: FILE: include/asm-x86/ptrace.h:142:
+int do_syscall_trace(struct pt_regs *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#579: FILE: include/asm-x86/setup.h:15:
+extern unsigned long find_max_low_pfn(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#580: FILE: include/asm-x86/setup.h:16:
+extern void setup_bootmem_allocator(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#582: FILE: include/asm-x86/setup.h:18:
+extern void i386_start_kernel(void);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#596: FILE: include/asm-x86/signal.h:144:
+void do_notify_resume(struct pt_regs *, void *, __u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#596: FILE: include/asm-x86/signal.h:144:
+void do_notify_resume(struct pt_regs *, void *, __u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u32' should also have an identifier name
#596: FILE: include/asm-x86/signal.h:144:
+void do_notify_resume(struct pt_regs *, void *, __u32);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#602: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#607: FILE: include/asm-x86/syscalls.h:1:
+#ifndef _ASM_X86_SYSCALLS_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000255564.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 25 warnings, 18 checks, 368 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000255564.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
