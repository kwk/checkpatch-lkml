WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct perf_pending_entry *' should also have an identifier name
#105: FILE: include/linux/perf_counter.h:336:
+	void (*func)(struct perf_pending_entry *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#124: FILE: include/linux/perf_counter.h:503:
+extern void perf_counter_overflow(struct perf_counter *counter,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cmpxchg"
#169: FILE: kernel/perf_counter.c:1594:
+	if (cmpxchg(&entry->next, NULL, PENDING_TAIL) != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct perf_pending_entry *' should also have an identifier name
#201: FILE: kernel/perf_counter.c:1617:
+		void (*func)(struct perf_pending_entry *);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!counter->pending.next"
#226: FILE: kernel/perf_counter.c:1653:
+	return counter->pending.next == NULL;

CHECK:BRACES: braces {} should be used on all arms of this statement
#237: FILE: kernel/perf_counter.c:1692:
+	if (handle->nmi) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#240: FILE: kernel/perf_counter.c:1695:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#276: FILE: kernel/perf_counter.c:2041:
+		if (nmi) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#279: FILE: kernel/perf_counter.c:2044:
+		} else

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000145503.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 7 checks, 219 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000145503.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
