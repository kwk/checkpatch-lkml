WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#50: FILE: Makefile:4:
+EXTRAVERSION = .7
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BRACES: braces {} are not necessary for single statement blocks
#399: FILE: drivers/gpu/drm/radeon/radeon_fb.c:123:
+	if (var->pixclock != 0) {
 		return -EINVAL;
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#484: FILE: drivers/isdn/hisax/hfc_usb.c:821:
+		if (fifo->skbuff->len > 3 &&
+				!fifo->skbuff->data[fifo->skbuff->len - 1]) {

CHECK:CAMELCASE: Avoid CamelCase: <MaxSector>
#500: FILE: drivers/md/md.c:6500:
+		mddev->resync_max = MaxSector;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:BRACES: Unbalanced braces around else statement
#513: FILE: drivers/md/raid1.c:1646:
+			} else

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#520: FILE: drivers/md/raid1.c:1651:
+			if ((disk=read_balance(conf, r1_bio)) == -1) {
 			         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#520: FILE: drivers/md/raid1.c:1651:
+			if ((disk=read_balance(conf, r1_bio)) == -1) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#629: FILE: drivers/media/dvb/frontends/dib7000p.c:1348:
+	/* FIXME: make sure the dev.parent field is initialized, or else
+	request_firmware() will hit an OOPS (this should be moved somewhere

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#630: FILE: drivers/media/dvb/frontends/dib7000p.c:1349:
+	more common) */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tvnorm->cropcap'
#679: FILE: drivers/media/video/bt8xx/bttv-driver.c:1302:
+	if (memcmp(&bttv_tvnorms[btv->tvnorm].cropcap, &tvnorm->cropcap,
 		    sizeof (tvnorm->cropcap))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#680: FILE: drivers/media/video/bt8xx/bttv-driver.c:1303:
+	if (memcmp(&bttv_tvnorms[btv->tvnorm].cropcap, &tvnorm->cropcap,
 		    sizeof (tvnorm->cropcap))) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#713: FILE: drivers/media/video/bt8xx/bttv-driver.c:3827:
+			 * algorithms.) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#997: FILE: drivers/media/video/v4l1-compat.c:569:
+	 * so we should ignore any errors. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1011: FILE: drivers/media/video/v4l1-compat.c:780:
+	 * so we should ignore any errors. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#1174: FILE: drivers/net/wireless/ath/ath5k/phy.c:744:
+			u8 *pdg_curve_to_idx = ee->ee_pdc_to_idx[ee_mode];
+			if (ee->ee_pd_gains[ee_mode] > 1) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <stepL>
#1201: FILE: drivers/net/wireless/ath/ath5k/phy.c:1910:
+	if (stepL[0] == stepL[1] || stepR[0] == stepR[1])

CHECK:CAMELCASE: Avoid CamelCase: <stepR>
#1201: FILE: drivers/net/wireless/ath/ath5k/phy.c:1910:
+	if (stepL[0] == stepL[1] || stepR[0] == stepR[1])

CHECK:CAMELCASE: Avoid CamelCase: <pwrL>
#1202: FILE: drivers/net/wireless/ath/ath5k/phy.c:1911:
+		return max(pwrL[0], pwrR[0]);

CHECK:CAMELCASE: Avoid CamelCase: <pwrR>
#1202: FILE: drivers/net/wireless/ath/ath5k/phy.c:1911:
+		return max(pwrL[0], pwrR[0]);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1251: FILE: drivers/net/wireless/b43/dma.c:1349:
+		 * For now, just refuse the transmit. */

WARNING:LIKELY_MISUSE: nested (un)?likely() calls, WARN already uses unlikely() internally
#1258: FILE: drivers/net/wireless/b43/dma.c:1356:
+	if (unlikely(WARN_ON(free_slots(ring) < TX_SLOTS_PER_FRAME))) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1260: FILE: drivers/net/wireless/b43/dma.c:1358:
+		 * full, but queues not stopped. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1271: FILE: drivers/net/wireless/b43/dma.c:1370:
+	 * into the skb data or cb now. */

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1335: FILE: drivers/net/wireless/iwlwifi/iwl-agn-rs.c:420:
+		/*
+		 * switch to RTS/CTS if it is the prefer protection method

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1364: FILE: drivers/net/wireless/iwlwifi/iwl-agn.c:218:
+		/*
+		 * allow CTS-to-self if possible for new association.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1624: FILE: drivers/platform/x86/acerhdf.c:495:
 
+

WARNING:SPLIT_STRING: quoted string split across lines
#1669: FILE: drivers/platform/x86/acerhdf.c:530:
+		pr_err("unknown (unsupported) BIOS version %s/%s/%s, "
+			"please report, aborting!\n", vendor, product, version);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#1700: FILE: drivers/platform/x86/thinkpad_acpi.c:5866:
+	return (rc == -EINTR)? -ERESTARTSYS : rc;
 	                     ^

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1749: FILE: drivers/pps/kapi.c:326:
+	/* Wake up iif captured somthing */
 	           ^^^

WARNING:TYPO_SPELLING: 'somthing' may be misspelled - perhaps 'something'?
#1749: FILE: drivers/pps/kapi.c:326:
+	/* Wake up iif captured somthing */
 	                        ^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1804: FILE: drivers/scsi/gdth.c:2903:
+    if (eindex < 0 || eindex >= MAX_EVENTS) {$

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1813: FILE: drivers/serial/of_serial.c:161:
 static struct of_device_id __devinitdata of_platform_serial_table[] = {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#1857: FILE: drivers/usb/gadget/amd5536udc.c:1216:
+		} else if (ep->in) {
[...]
+				tmp = readl(&dev->regs->ep_irqmsk);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1897: FILE: drivers/usb/gadget/amd5536udc.c:2487:
+			tmp = readl(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1901: FILE: drivers/usb/gadget/amd5536udc.c:2491:
+			writel(tmp,
+				&dev->regs->ep_irqmsk);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2007: FILE: drivers/usb/host/ehci-q.c:490:
+					ehci_clear_tt_buffer(ehci, qh, urb,
+							token);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2078: FILE: drivers/usb/host/ohci-hcd.c:101:
 }
+static inline void sb800_prefetch(struct ohci_hcd *ohci, int on)

WARNING:RETURN_VOID: void function return statements are not generally useful
#2081: FILE: drivers/usb/host/ohci-hcd.c:104:
+	return;
+}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rev >= 0x40'
#2095: FILE: drivers/usb/host/ohci-pci.c:182:
+	if ((rev >= 0x40) && (rev <= 0x4f)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rev <= 0x4f'
#2095: FILE: drivers/usb/host/ohci-pci.c:182:
+	if ((rev >= 0x40) && (rev <= 0x4f)) {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2175: FILE: drivers/usb/host/ohci.h:437:
 }
+static inline int quirk_amdprefetch(struct ohci_hcd *ohci)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2186: FILE: drivers/usb/host/ohci.h:454:
 }
+static inline int quirk_amdprefetch(struct ohci_hcd *ohci)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2284: FILE: drivers/usb/mon/mon_bin.c:550:
+			delta = (ep->len_cap + PKT_ALIGN-1) & ~(PKT_ALIGN-1);
 			                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2284: FILE: drivers/usb/mon/mon_bin.c:550:
+			delta = (ep->len_cap + PKT_ALIGN-1) & ~(PKT_ALIGN-1);
 			                                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2286: FILE: drivers/usb/mon/mon_bin.c:552:
+			delta -= (ep->len_cap + PKT_ALIGN-1) & ~(PKT_ALIGN-1);
 			                                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2286: FILE: drivers/usb/mon/mon_bin.c:552:
+			delta -= (ep->len_cap + PKT_ALIGN-1) & ~(PKT_ALIGN-1);
 			                                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2504: FILE: drivers/usb/serial/cp210x.c:758:
+		cp210x_tiocmset_port(p, NULL,  TIOCM_DTR|TIOCM_RTS, 0);
 		                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2506: FILE: drivers/usb/serial/cp210x.c:760:
+		cp210x_tiocmset_port(p, NULL,  0, TIOCM_DTR|TIOCM_RTS);
 		                                           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2519: FILE: drivers/usb/serial/cp210x.c:788:
+	unsigned int control;
+	cp210x_get_config(p, CP210X_GET_MDMSTS, &control, 1);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2591: FILE: fs/cifs/cifsproto.h:392:
+extern void cifs_autodisable_serverino(struct cifs_sb_info *cifs_sb);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#2632: FILE: fs/cifs/dir.c:649:
+	if (nd && (nd->flags & LOOKUP_EXCL)) {
 	    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#2641: FILE: fs/cifs/dir.c:681:
+		if (nd && !(nd->flags & (LOOKUP_PARENT | LOOKUP_DIRECTORY)) &&
 		    ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2642: FILE: fs/cifs/dir.c:682:
+		if (nd && !(nd->flags & (LOOKUP_PARENT | LOOKUP_DIRECTORY)) &&
 		     (nd->flags & LOOKUP_OPEN) && !pTcon->broken_posix_open &&

CHECK:CAMELCASE: Avoid CamelCase: <cERROR>
#2679: FILE: fs/cifs/misc.c:714:
+		cERROR(1, ("Autodisabling the use of server inode numbers on "

WARNING:SPLIT_STRING: quoted string split across lines
#2680: FILE: fs/cifs/misc.c:715:
+		cERROR(1, ("Autodisabling the use of server inode numbers on "
+			   "%s. This server doesn't seem to support them "

WARNING:SPLIT_STRING: quoted string split across lines
#2681: FILE: fs/cifs/misc.c:716:
+			   "%s. This server doesn't seem to support them "
+			   "properly. Hardlinks will not be recognized on this "

WARNING:SPLIT_STRING: quoted string split across lines
#2682: FILE: fs/cifs/misc.c:717:
+			   "properly. Hardlinks will not be recognized on this "
+			   "mount. Consider mounting with the \"noserverino\" "

WARNING:SPLIT_STRING: quoted string split across lines
#2683: FILE: fs/cifs/misc.c:718:
+			   "mount. Consider mounting with the \"noserverino\" "
+			   "option to silence this message.",

CHECK:CAMELCASE: Avoid CamelCase: <treeName>
#2684: FILE: fs/cifs/misc.c:719:
+			   cifs_sb->tcon->treeName));

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2725: FILE: fs/compat_ioctl.c:2805:
+		error = ioctl_preallocate(filp, compat_ptr(arg));
 		                          ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2754: FILE: fs/jffs2/read.c:169:
+	 * end of the file). */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#2789: FILE: fs/nilfs2/ioctl.c:301:
+		printk(KERN_CRIT "%s: conflicting %s buffer: ino=%llu, "

WARNING:SPLIT_STRING: quoted string split across lines
#2790: FILE: fs/nilfs2/ioctl.c:302:
+		printk(KERN_CRIT "%s: conflicting %s buffer: ino=%llu, "
+		       "cno=%llu, offset=%llu, blocknr=%llu, vblocknr=%llu\n",

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2859: FILE: include/linux/skbuff.h:1764:
+extern void	       skb_free_datagram_locked(struct sock *sk,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2909: FILE: include/net/netfilter/nf_nat_helper.h:36:
+extern s16 nf_nat_get_offset(const struct nf_conn *ct,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2953: FILE: kernel/module.c:1183:
+		if (sechdrs[i].sh_flags & SHF_ALLOC
+		    && sechdrs[i].sh_size)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cpu_isolated_map"
#3005: FILE: kernel/sched.c:9394:
+	if (cpu_isolated_map == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space prohibited before that close parenthesis ')'
#3062: FILE: mm/highmem.c:462:
+			type == KM_NMI_PTE ) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#3155: FILE: net/ipv4/netfilter/nf_nat_core.c:753:
+	BUG_ON(nf_ct_nat_offset != NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "nf_ct_nat_offset"
#3155: FILE: net/ipv4/netfilter/nf_nat_core.c:753:
+	BUG_ON(nf_ct_nat_offset != NULL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3235: FILE: net/ipv4/udp.c:834:
 
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3253: FILE: net/ipv4/udp.c:852:
+	while ((skb = skb_peek(rcvq)) != NULL &&
+		udp_lib_checksum_complete(skb)) {

WARNING:TYPO_SPELLING: 'BA' may be misspelled - perhaps 'BY'?
#3395: FILE: net/mac80211/agg-tx.c:134:
+	printk(KERN_DEBUG "Tx BA session stop requested for %pM tid %u\n",
 	                      ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3395: FILE: net/mac80211/agg-tx.c:134:
+	printk(KERN_DEBUG "Tx BA session stop requested for %pM tid %u\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "get_offset"
#3511: FILE: net/netfilter/nf_conntrack_proto_tcp.c:502:
+	return get_offset != NULL ? get_offset(ct, dir, seq) : 0;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#3513: FILE: net/netfilter/nf_conntrack_proto_tcp.c:504:
+}
+#define NAT_OFFSET(pf, ct, dir, seq) \

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'pf' may be better as '(pf)' to avoid precedence issues
#3513: FILE: net/netfilter/nf_conntrack_proto_tcp.c:504:
+#define NAT_OFFSET(pf, ct, dir, seq) \
+	(pf == NFPROTO_IPV4 ? nat_offset(ct, dir, seq) : 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#3647: FILE: net/netfilter/xt_connlimit.c:208:
+^I                         &info->mask, par->family);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3876: FILE: sound/pci/hda/patch_sigmatel.c:1821:
+	SND_PCI_QUIRK(PCI_VENDOR_ID_DELL, 0x02bd,
+				"Dell Studio 1557", STAC_DELL_M6_DMIC),

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3909: FILE: sound/soc/soc-dapm.c:778:
+			 * power. */

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#3933: FILE: sound/usb/usbaudio.h:213:
+#define combine_word(s)    ((*(s)) | ((unsigned int)(s)[1] << 8))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000037503.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 37 warnings, 40 checks, 3131 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000037503.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
