WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#35: 
Signed-off-by:  Kristen Carlson Accardi <kristen.c.accardi@intel.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#87: FILE: drivers/ata/ahci.c:219:
+^Iu32 ^I^I^Iem_loc; /* enclosure management location */$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#128: FILE: drivers/ata/ahci.c:933:
+static int ahci_transmit_led_message(struct ata_port *ap, int led_num,
+			int state)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#134: FILE: drivers/ata/ahci.c:939:
+	u32 message[] = {0,0};
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: drivers/ata/ahci.c:942:
+ ^I * if we are still busy transmitting a previous message,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#137: FILE: drivers/ata/ahci.c:942:
+ ^I * if we are still busy transmitting a previous message,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: drivers/ata/ahci.c:943:
+ ^I * do not allow$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#138: FILE: drivers/ata/ahci.c:943:
+ ^I * do not allow$

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: drivers/ata/ahci.c:944:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#139: FILE: drivers/ata/ahci.c:944:
+ ^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: drivers/ata/ahci.c:950:
+ ^I * create message header - this is all zero except for$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#145: FILE: drivers/ata/ahci.c:950:
+ ^I * create message header - this is all zero except for$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: drivers/ata/ahci.c:951:
+ ^I * the message size, which is 4 bytes.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#146: FILE: drivers/ata/ahci.c:951:
+ ^I * the message size, which is 4 bytes.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: drivers/ata/ahci.c:952:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#147: FILE: drivers/ata/ahci.c:952:
+ ^I */$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#150: FILE: drivers/ata/ahci.c:955:
+	pp->led_state &= ~(9 << (3*led_num));
 	                          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: drivers/ata/ahci.c:958:
+ ^I * create the actual message$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#153: FILE: drivers/ata/ahci.c:958:
+ ^I * create the actual message$

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: drivers/ata/ahci.c:959:
+ ^I * XXX will need Port Multiplier support$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#154: FILE: drivers/ata/ahci.c:959:
+ ^I * XXX will need Port Multiplier support$

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: drivers/ata/ahci.c:960:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#155: FILE: drivers/ata/ahci.c:960:
+ ^I */$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#159: FILE: drivers/ata/ahci.c:964:
+	message[1] |= (state << (16 + (3*led_num)));
 	                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#163: FILE: drivers/ata/ahci.c:968:
+	writel(message[1], mmio + hpriv->em_loc+4);
 	                                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: drivers/ata/ahci.c:974:
+ ^I * tell hardware to transmit the message$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#169: FILE: drivers/ata/ahci.c:974:
+ ^I * tell hardware to transmit the message$

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: drivers/ata/ahci.c:975:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#170: FILE: drivers/ata/ahci.c:975:
+ ^I */$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#176: FILE: drivers/ata/ahci.c:981:
+static ssize_t ahci_led_locate_store(struct device *dev,
+	struct device_attribute *attr, const char *buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#187: FILE: drivers/ata/ahci.c:992:
+	state = simple_strtoul(buf, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions 'S_IWUGO' used
#195: FILE: drivers/ata/ahci.c:1000:
+}

The permissions used in DEVICE_ATTR are unusual.
Typically only three permissions are used - 0644 (RW), 0444 (RO)
and 0200 (WO).

See: https://www.kernel.org/doc/html/latest/filesystems/sysfs.html#attributes

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#196: FILE: drivers/ata/ahci.c:1001:
+static DEVICE_ATTR(locate, S_IWUGO, NULL, ahci_led_locate_store);

Exporting world writable sysfs/debugfs files is usually a bad thing.
When done arbitrarily they can introduce serious security bugs.
In the past, some of the debugfs vulnerabilities would seemingly allow
any local user to write arbitrary values into device registers - a
situation from which little good can be expected to emerge.

See: https://lore.kernel.org/linux-arm-kernel/cover.1296818921.git.segoon@openwall.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO' are not preferred. Consider using octal permissions '0222'.
#196: FILE: drivers/ata/ahci.c:1001:
+static DEVICE_ATTR(locate, S_IWUGO, NULL, ahci_led_locate_store);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#199: FILE: drivers/ata/ahci.c:1004:
+static ssize_t ahci_led_fault_store(struct device *dev,
+	struct device_attribute *attr, const char *buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#210: FILE: drivers/ata/ahci.c:1015:
+	state = simple_strtoul(buf, NULL, 0);

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions 'S_IWUGO' used
#218: FILE: drivers/ata/ahci.c:1023:
+}

WARNING:EXPORTED_WORLD_WRITABLE: Exporting world writable files is usually an error. Consider more restrictive permissions.
#219: FILE: drivers/ata/ahci.c:1024:
+static DEVICE_ATTR(fault, S_IWUGO, NULL, ahci_led_fault_store);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO' are not preferred. Consider using octal permissions '0222'.
#219: FILE: drivers/ata/ahci.c:1024:
+static DEVICE_ATTR(fault, S_IWUGO, NULL, ahci_led_fault_store);

WARNING:SPLIT_STRING: quoted string split across lines
#235: FILE: drivers/ata/ahci.c:2064:
 		"%s%s%s%s%s%s%s"
+		"%s%s%s%s%s%s%s%s\n"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#245: FILE: drivers/ata/ahci.c:2082:
+		cap & (1 << 6) ? "ems ": ""
 		                       ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ahci_em_messages == 1'
#262: FILE: drivers/ata/ahci.c:2176:
+		if ((messages & 0x01) && (ahci_em_messages == 1)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#293: FILE: include/linux/libata.h:874:
+struct ata_device * ata_scsi_find_dev(struct ata_port *ap,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#294: FILE: include/linux/libata.h:875:
+struct ata_device * ata_scsi_find_dev(struct ata_port *ap,
+					    const struct scsi_device *scsidev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#307: FILE: drivers/ata/libata-scsi.c:58:
+struct ata_device * ata_scsi_find_dev(struct ata_port *ap,

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#307: FILE: drivers/ata/libata-scsi.c:58:
+struct ata_device * ata_scsi_find_dev(struct ata_port *ap,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#308: FILE: drivers/ata/libata-scsi.c:59:
+struct ata_device * ata_scsi_find_dev(struct ata_port *ap,
 					    const struct scsi_device *scsidev);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000368721.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 15 errors, 23 warnings, 9 checks, 257 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000368721.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
