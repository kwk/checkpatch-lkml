WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#90: FILE: arch/um/os-Linux/signal.c:37:
+	void (*handler)(int, struct uml_pt_regs *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct uml_pt_regs *' should also have an identifier name
#90: FILE: arch/um/os-Linux/signal.c:37:
+	void (*handler)(int, struct uml_pt_regs *);

CHECK:BRACES: braces {} should be used on all arms of this statement
#99: FILE: arch/um/os-Linux/signal.c:46:
+	if (sig == SIGSEGV) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#110: FILE: arch/um/os-Linux/signal.c:57:
+	} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sig == SIGFPE'
#115: FILE: arch/um/os-Linux/signal.c:62:
+	if ((sig == SIGFPE) || (sig == SIGSEGV) || (sig == SIGBUS) ||
+	    (sig == SIGILL) || (sig == SIGTRAP))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sig == SIGSEGV'
#115: FILE: arch/um/os-Linux/signal.c:62:
+	if ((sig == SIGFPE) || (sig == SIGSEGV) || (sig == SIGBUS) ||
+	    (sig == SIGILL) || (sig == SIGTRAP))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sig == SIGBUS'
#115: FILE: arch/um/os-Linux/signal.c:62:
+	if ((sig == SIGFPE) || (sig == SIGSEGV) || (sig == SIGBUS) ||
+	    (sig == SIGILL) || (sig == SIGTRAP))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sig == SIGILL'
#115: FILE: arch/um/os-Linux/signal.c:62:
+	if ((sig == SIGFPE) || (sig == SIGSEGV) || (sig == SIGBUS) ||
+	    (sig == SIGILL) || (sig == SIGTRAP))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sig == SIGTRAP'
#115: FILE: arch/um/os-Linux/signal.c:62:
+	if ((sig == SIGFPE) || (sig == SIGSEGV) || (sig == SIGBUS) ||
+	    (sig == SIGILL) || (sig == SIGTRAP))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sig != SIGIO'
#124: FILE: arch/um/os-Linux/signal.c:71:
+	if ((sig != SIGIO) && (sig != SIGWINCH) && (sig != SIGVTALRM))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sig != SIGWINCH'
#124: FILE: arch/um/os-Linux/signal.c:71:
+	if ((sig != SIGIO) && (sig != SIGWINCH) && (sig != SIGVTALRM))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sig != SIGVTALRM'
#124: FILE: arch/um/os-Linux/signal.c:71:
+	if ((sig != SIGIO) && (sig != SIGWINCH) && (sig != SIGVTALRM))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000348017.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 10 checks, 96 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000348017.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
