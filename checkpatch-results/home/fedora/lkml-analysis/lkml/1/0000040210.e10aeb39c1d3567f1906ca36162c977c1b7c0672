CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: arch/powerpc/include/asm/trace.h:12:
+BARNEY(irq_entry,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#131: FILE: arch/powerpc/include/asm/trace.h:29:
+BARNEY(irq_exit,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: arch/powerpc/include/asm/trace.h:46:
+BARNEY(timer_interrupt_entry,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#149: FILE: arch/powerpc/include/asm/trace.h:63:
+BARNEY(timer_interrupt_exit,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#158: FILE: arch/powerpc/include/asm/trace.h:84:
+BARNEY_FN(hcall_entry,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#167: FILE: arch/powerpc/include/asm/trace.h:103:
+BARNEY_FN(hcall_exit,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#180: FILE: arch/powerpc/kvm/trace.h:15:
+BARNEY(kvm_ppc_instr,
 	TP_PROTO(unsigned int inst, unsigned long pc, unsigned int emulate),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#189: FILE: arch/powerpc/kvm/trace.h:35:
+BARNEY(kvm_stlb_inval,
 	TP_PROTO(unsigned int stlb_index),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#198: FILE: arch/powerpc/kvm/trace.h:50:
+BARNEY(kvm_stlb_write,
 	TP_PROTO(unsigned int victim, unsigned int tid, unsigned int word0,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#207: FILE: arch/powerpc/kvm/trace.h:76:
+BARNEY(kvm_gtlb_write,
 	TP_PROTO(unsigned int gtlb_index, unsigned int tid, unsigned int word0,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#220: FILE: arch/powerpc/platforms/cell/spufs/sputrace.h:10:
+BARNEY(spufs_context,
 	TP_PROTO(struct spu_context *ctx, struct spu *spu, const char *name),

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#232: FILE: arch/x86/kvm/mmutrace.h:57:
+BARNEY(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#241: FILE: arch/x86/kvm/mmutrace.h:79:
+BARNEY(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#250: FILE: arch/x86/kvm/mmutrace.h:98:
+BARNEY(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#259: FILE: arch/x86/kvm/mmutrace.h:116:
+BARNEY(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#268: FILE: arch/x86/kvm/mmutrace.h:133:
+BARNEY(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#277: FILE: arch/x86/kvm/mmutrace.h:150:
+BARNEY(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#286: FILE: arch/x86/kvm/mmutrace.h:169:
+BARNEY(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#295: FILE: arch/x86/kvm/mmutrace.h:185:
+BARNEY(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#304: FILE: arch/x86/kvm/mmutrace.h:201:
+BARNEY(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#318: FILE: arch/x86/kvm/trace.h:15:
+BARNEY(kvm_entry,
 	TP_PROTO(unsigned int vcpu_id),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#327: FILE: arch/x86/kvm/trace.h:33:
+BARNEY(kvm_hypercall,
 	TP_PROTO(unsigned long nr, unsigned long a0, unsigned long a1,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#336: FILE: arch/x86/kvm/trace.h:62:
+BARNEY(kvm_pio,
 	TP_PROTO(unsigned int rw, unsigned int port, unsigned int size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#345: FILE: arch/x86/kvm/trace.h:89:
+BARNEY(kvm_cpuid,
 	TP_PROTO(unsigned int function, unsigned long rax, unsigned long rbx,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#354: FILE: arch/x86/kvm/trace.h:127:
+BARNEY(kvm_apic,
 	TP_PROTO(unsigned int rw, unsigned int reg, unsigned int val),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#363: FILE: arch/x86/kvm/trace.h:155:
+BARNEY(kvm_exit,
 	TP_PROTO(unsigned int exit_reason, unsigned long guest_rip),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#372: FILE: arch/x86/kvm/trace.h:178:
+BARNEY(kvm_inj_virq,
 	TP_PROTO(unsigned int irq),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#381: FILE: arch/x86/kvm/trace.h:196:
+BARNEY(kvm_page_fault,
 	TP_PROTO(unsigned long fault_address, unsigned int error_code),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#390: FILE: arch/x86/kvm/trace.h:217:
+BARNEY(kvm_msr,
 	TP_PROTO(unsigned int rw, unsigned int ecx, unsigned long data),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#399: FILE: arch/x86/kvm/trace.h:244:
+BARNEY(kvm_cr,
 	TP_PROTO(unsigned int rw, unsigned int cr, unsigned long val),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#408: FILE: arch/x86/kvm/trace.h:268:
+BARNEY(kvm_pic_set_irq,
 	    TP_PROTO(__u8 chip, __u8 pin, __u8 elcr, __u8 imr, bool coalesced),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#417: FILE: arch/x86/kvm/trace.h:301:
+BARNEY(kvm_apic_ipi,
 	    TP_PROTO(__u32 icr_low, __u32 dest_id),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#426: FILE: arch/x86/kvm/trace.h:326:
+BARNEY(kvm_apic_accept_irq,
 	    TP_PROTO(__u32 apicid, __u16 dm, __u8 tm, __u8 vec, bool coalesced),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#439: FILE: drivers/gpu/drm/i915/i915_trace.h:18:
+BARNEY(i915_gem_object_create,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#448: FILE: drivers/gpu/drm/i915/i915_trace.h:37:
+BARNEY(i915_gem_object_bind,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#457: FILE: drivers/gpu/drm/i915/i915_trace.h:57:
+BARNEY(i915_gem_object_clflush,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#466: FILE: drivers/gpu/drm/i915/i915_trace.h:74:
+BARNEY(i915_gem_object_change_domain,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#475: FILE: drivers/gpu/drm/i915/i915_trace.h:97:
+BARNEY(i915_gem_object_get_fence,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#484: FILE: drivers/gpu/drm/i915/i915_trace.h:119:
+BARNEY(i915_gem_object_unbind,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#493: FILE: drivers/gpu/drm/i915/i915_trace.h:136:
+BARNEY(i915_gem_object_destroy,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#502: FILE: drivers/gpu/drm/i915/i915_trace.h:155:
+BARNEY(i915_gem_request_submit,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#511: FILE: drivers/gpu/drm/i915/i915_trace.h:175:
+BARNEY(i915_gem_request_flush,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#520: FILE: drivers/gpu/drm/i915/i915_trace.h:202:
+BARNEY(i915_gem_request_complete,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#529: FILE: drivers/gpu/drm/i915/i915_trace.h:221:
+BARNEY(i915_gem_request_retire,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#538: FILE: drivers/gpu/drm/i915/i915_trace.h:240:
+BARNEY(i915_gem_request_wait_begin,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#547: FILE: drivers/gpu/drm/i915/i915_trace.h:259:
+BARNEY(i915_gem_request_wait_end,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#556: FILE: drivers/gpu/drm/i915/i915_trace.h:278:
+BARNEY(i915_ring_wait_begin,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#565: FILE: drivers/gpu/drm/i915/i915_trace.h:295:
+BARNEY(i915_ring_wait_end,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#578: FILE: fs/gfs2/trace_gfs2.h:72:
+BARNEY(gfs2_glock_state_change,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#587: FILE: fs/gfs2/trace_gfs2.h:111:
+BARNEY(gfs2_glock_put,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#596: FILE: fs/gfs2/trace_gfs2.h:143:
+BARNEY(gfs2_demote_rq,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#605: FILE: fs/gfs2/trace_gfs2.h:177:
+BARNEY(gfs2_promote,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#614: FILE: fs/gfs2/trace_gfs2.h:207:
+BARNEY(gfs2_glock_queue,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#623: FILE: fs/gfs2/trace_gfs2.h:245:
+BARNEY(gfs2_pin,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#632: FILE: fs/gfs2/trace_gfs2.h:276:
+BARNEY(gfs2_log_flush,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#641: FILE: fs/gfs2/trace_gfs2.h:301:
+BARNEY(gfs2_log_blocks,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#650: FILE: fs/gfs2/trace_gfs2.h:330:
+BARNEY(gfs2_bmap,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#659: FILE: fs/gfs2/trace_gfs2.h:370:
+BARNEY(gfs2_block_alloc,
 

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#696: FILE: include/linux/ftrace_event.h:1:
+#ifndef _LINUX_FBARNEY_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#833: FILE: include/trace/events/bkl.h:10:
+BARNEY(lock_kernel,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#842: FILE: include/trace/events/bkl.h:35:
+BARNEY(unlock_kernel,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#855: FILE: include/trace/events/block.h:12:
+FRED(block_rq_with_error,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#864: FILE: include/trace/events/block.h:44:
+WILMA(block_rq_with_error, block_rq_abort,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#872: FILE: include/trace/events/block.h:51:
+WILMA(block_rq_with_error, block_rq_requeue,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#880: FILE: include/trace/events/block.h:58:
+WILMA(block_rq_with_error, block_rq_complete,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#888: FILE: include/trace/events/block.h:65:
+FRED(block_rq,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#897: FILE: include/trace/events/block.h:99:
+WILMA(block_rq, block_rq_insert,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#905: FILE: include/trace/events/block.h:106:
+WILMA(block_rq, block_rq_issue,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#913: FILE: include/trace/events/block.h:113:
+BARNEY(block_bio_bounce,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#922: FILE: include/trace/events/block.h:142:
+BARNEY(block_bio_complete,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#931: FILE: include/trace/events/block.h:169:
+FRED(block_bio,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#940: FILE: include/trace/events/block.h:197:
+WILMA(block_bio, block_bio_backmerge,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#948: FILE: include/trace/events/block.h:204:
+WILMA(block_bio, block_bio_frontmerge,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#956: FILE: include/trace/events/block.h:211:
+WILMA(block_bio, block_bio_queue,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#964: FILE: include/trace/events/block.h:218:
+FRED(block_get_rq,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#973: FILE: include/trace/events/block.h:247:
+WILMA(block_get_rq, block_getrq,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#981: FILE: include/trace/events/block.h:254:
+WILMA(block_get_rq, block_sleeprq,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#989: FILE: include/trace/events/block.h:261:
+BARNEY(block_plug,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#998: FILE: include/trace/events/block.h:278:
+FRED(block_unplug,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1007: FILE: include/trace/events/block.h:297:
+WILMA(block_unplug, block_unplug_timer,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1015: FILE: include/trace/events/block.h:304:
+WILMA(block_unplug, block_unplug_io,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1023: FILE: include/trace/events/block.h:311:
+BARNEY(block_split,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1032: FILE: include/trace/events/block.h:341:
+BARNEY(block_remap,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1041: FILE: include/trace/events/block.h:374:
+BARNEY(block_rq_remap,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1054: FILE: include/trace/events/ext4.h:19:
+BARNEY(ext4_free_inode,
 	TP_PROTO(struct inode *inode),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1063: FILE: include/trace/events/ext4.h:48:
+BARNEY(ext4_request_inode,
 	TP_PROTO(struct inode *dir, int mode),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1072: FILE: include/trace/events/ext4.h:70:
+BARNEY(ext4_allocate_inode,
 	TP_PROTO(struct inode *inode, struct inode *dir, int mode),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1081: FILE: include/trace/events/ext4.h:94:
+FRED(ext4__write_begin,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1090: FILE: include/trace/events/ext4.h:122:
+WILMA(ext4__write_begin, ext4_write_begin,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1099: FILE: include/trace/events/ext4.h:130:
+WILMA(ext4__write_begin, ext4_da_write_begin,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1108: FILE: include/trace/events/ext4.h:138:
+FRED(ext4__write_end,
 	TP_PROTO(struct inode *inode, loff_t pos, unsigned int len,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1117: FILE: include/trace/events/ext4.h:165:
+WILMA(ext4__write_end, ext4_ordered_write_end,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1126: FILE: include/trace/events/ext4.h:173:
+WILMA(ext4__write_end, ext4_writeback_write_end,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1135: FILE: include/trace/events/ext4.h:181:
+WILMA(ext4__write_end, ext4_journalled_write_end,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1144: FILE: include/trace/events/ext4.h:189:
+WILMA(ext4__write_end, ext4_da_write_end,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1153: FILE: include/trace/events/ext4.h:197:
+BARNEY(ext4_writepage,
 	TP_PROTO(struct inode *inode, struct page *page),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1162: FILE: include/trace/events/ext4.h:220:
+BARNEY(ext4_da_writepages,
 	TP_PROTO(struct inode *inode, struct writeback_control *wbc),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1171: FILE: include/trace/events/ext4.h:263:
+BARNEY(ext4_da_write_pages,
 	TP_PROTO(struct inode *inode, struct mpage_da_data *mpd),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1180: FILE: include/trace/events/ext4.h:297:
+BARNEY(ext4_da_writepages_result,
 	TP_PROTO(struct inode *inode, struct writeback_control *wbc,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1189: FILE: include/trace/events/ext4.h:336:
+BARNEY(ext4_discard_blocks,
 	TP_PROTO(struct super_block *sb, unsigned long long blk,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1198: FILE: include/trace/events/ext4.h:359:
+BARNEY(ext4_mb_new_inode_pa,
 	TP_PROTO(struct ext4_allocation_context *ac,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1207: FILE: include/trace/events/ext4.h:387:
+BARNEY(ext4_mb_new_group_pa,
 	TP_PROTO(struct ext4_allocation_context *ac,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1216: FILE: include/trace/events/ext4.h:415:
+BARNEY(ext4_mb_release_inode_pa,
 	TP_PROTO(struct ext4_allocation_context *ac,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1225: FILE: include/trace/events/ext4.h:442:
+BARNEY(ext4_mb_release_group_pa,
 	TP_PROTO(struct ext4_allocation_context *ac,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1234: FILE: include/trace/events/ext4.h:467:
+BARNEY(ext4_discard_preallocations,
 	TP_PROTO(struct inode *inode),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1243: FILE: include/trace/events/ext4.h:487:
+BARNEY(ext4_mb_discard_preallocations,
 	TP_PROTO(struct super_block *sb, int needed),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1252: FILE: include/trace/events/ext4.h:507:
+BARNEY(ext4_request_blocks,
 	TP_PROTO(struct ext4_allocation_request *ar),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1261: FILE: include/trace/events/ext4.h:549:
+BARNEY(ext4_allocate_blocks,
 	TP_PROTO(struct ext4_allocation_request *ar, unsigned long long block),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1270: FILE: include/trace/events/ext4.h:593:
+BARNEY(ext4_free_blocks,
 	TP_PROTO(struct inode *inode, __u64 block, unsigned long count,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1279: FILE: include/trace/events/ext4.h:621:
+BARNEY(ext4_sync_file,
 	TP_PROTO(struct file *file, struct dentry *dentry, int datasync),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1288: FILE: include/trace/events/ext4.h:645:
+BARNEY(ext4_sync_fs,
 	TP_PROTO(struct super_block *sb, int wait),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1297: FILE: include/trace/events/ext4.h:665:
+BARNEY(ext4_alloc_da_blocks,
 	TP_PROTO(struct inode *inode),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1306: FILE: include/trace/events/ext4.h:689:
+BARNEY(ext4_mballoc_alloc,
 	TP_PROTO(struct ext4_allocation_context *ac),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1315: FILE: include/trace/events/ext4.h:755:
+BARNEY(ext4_mballoc_prealloc,
 	TP_PROTO(struct ext4_allocation_context *ac),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1324: FILE: include/trace/events/ext4.h:794:
+BARNEY(ext4_mballoc_discard,
 	TP_PROTO(struct ext4_allocation_context *ac),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1333: FILE: include/trace/events/ext4.h:823:
+BARNEY(ext4_mballoc_free,
 	TP_PROTO(struct ext4_allocation_context *ac),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1346: FILE: include/trace/events/irq.h:36:
+BARNEY(irq_handler_entry,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1355: FILE: include/trace/events/irq.h:66:
+BARNEY(irq_handler_exit,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1364: FILE: include/trace/events/irq.h:86:
+FRED(softirq,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1373: FILE: include/trace/events/irq.h:115:
+WILMA(softirq, softirq_entry,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1382: FILE: include/trace/events/irq.h:133:
+WILMA(softirq, softirq_exit,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1395: FILE: include/trace/events/jbd2.h:14:
+BARNEY(jbd2_checkpoint,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1404: FILE: include/trace/events/jbd2.h:34:
+FRED(jbd2_commit,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1413: FILE: include/trace/events/jbd2.h:57:
+WILMA(jbd2_commit, jbd2_start_commit,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1421: FILE: include/trace/events/jbd2.h:64:
+WILMA(jbd2_commit, jbd2_commit_locking,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1429: FILE: include/trace/events/jbd2.h:71:
+WILMA(jbd2_commit, jbd2_commit_flushing,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1437: FILE: include/trace/events/jbd2.h:78:
+WILMA(jbd2_commit, jbd2_commit_logging,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1445: FILE: include/trace/events/jbd2.h:85:
+BARNEY(jbd2_end_commit,
 	TP_PROTO(journal_t *journal, transaction_t *commit_transaction),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1454: FILE: include/trace/events/jbd2.h:109:
+BARNEY(jbd2_submit_inode_data,
 	TP_PROTO(struct inode *inode),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1463: FILE: include/trace/events/jbd2.h:128:
+BARNEY(jbd2_run_stats,
 	TP_PROTO(dev_t dev, unsigned long tid,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1472: FILE: include/trace/events/jbd2.h:172:
+BARNEY(jbd2_checkpoint_stats,
 	TP_PROTO(dev_t dev, unsigned long tid,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1485: FILE: include/trace/events/kmem.h:48:
+FRED(kmem_alloc,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1494: FILE: include/trace/events/kmem.h:82:
+WILMA(kmem_alloc, kmalloc,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1503: FILE: include/trace/events/kmem.h:90:
+WILMA(kmem_alloc, kmem_cache_alloc,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1512: FILE: include/trace/events/kmem.h:98:
+FRED(kmem_alloc_node,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1521: FILE: include/trace/events/kmem.h:136:
+WILMA(kmem_alloc_node, kmalloc_node,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1530: FILE: include/trace/events/kmem.h:145:
+WILMA(kmem_alloc_node, kmem_cache_alloc_node,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1539: FILE: include/trace/events/kmem.h:154:
+FRED(kmem_free,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1548: FILE: include/trace/events/kmem.h:173:
+WILMA(kmem_free, kfree,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1556: FILE: include/trace/events/kmem.h:180:
+WILMA(kmem_free, kmem_cache_free,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1564: FILE: include/trace/events/kmem.h:187:
+BARNEY(mm_page_free_direct,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1573: FILE: include/trace/events/kmem.h:209:
+BARNEY(mm_pagevec_free,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1582: FILE: include/trace/events/kmem.h:231:
+BARNEY(mm_page_alloc,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1591: FILE: include/trace/events/kmem.h:260:
+FRED(mm_page,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1600: FILE: include/trace/events/kmem.h:286:
+WILMA(mm_page, mm_page_alloc_zone_locked,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1608: FILE: include/trace/events/kmem.h:293:
+WILMA_PRINT(mm_page, mm_page_pcpu_drain,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1617: FILE: include/trace/events/kmem.h:304:
+BARNEY(mm_page_alloc_extfrag,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1630: FILE: include/trace/events/kvm.h:12:
+BARNEY(kvm_set_irq,
 	TP_PROTO(unsigned int gsi, int level, int irq_source_id),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1639: FILE: include/trace/events/kvm.h:42:
+BARNEY(kvm_ioapic_set_irq,
 	    TP_PROTO(__u64 e, int pin, bool coalesced),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1648: FILE: include/trace/events/kvm.h:67:
+BARNEY(kvm_msi_set_irq,
 	    TP_PROTO(__u64 address, __u64 data),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1657: FILE: include/trace/events/kvm.h:94:
+BARNEY(kvm_ack_irq,
 	TP_PROTO(unsigned int irqchip, unsigned int pin),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1666: FILE: include/trace/events/kvm.h:126:
+BARNEY(kvm_mmio,
 	TP_PROTO(int type, int len, u64 gpa, u64 val),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1679: FILE: include/trace/events/lock.h:13:
+BARNEY(lock_acquire,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1688: FILE: include/trace/events/lock.h:36:
+BARNEY(lock_release,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1697: FILE: include/trace/events/lock.h:55:
+BARNEY(lock_contended,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1706: FILE: include/trace/events/lock.h:72:
+BARNEY(lock_acquired,
 	TP_PROTO(struct lockdep_map *lock, unsigned long ip, s64 waittime),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1719: FILE: include/trace/events/module.h:19:
+BARNEY(module_load,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1728: FILE: include/trace/events/module.h:38:
+BARNEY(module_free,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1737: FILE: include/trace/events/module.h:55:
+FRED(module_refcnt,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1746: FILE: include/trace/events/module.h:77:
+WILMA(module_refcnt, module_get,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1754: FILE: include/trace/events/module.h:84:
+WILMA(module_refcnt, module_put,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1762: FILE: include/trace/events/module.h:91:
+BARNEY(module_request,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1775: FILE: include/trace/events/power.h:20:
+FRED(power,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1784: FILE: include/trace/events/power.h:39:
+WILMA(power, power_start,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1792: FILE: include/trace/events/power.h:46:
+WILMA(power, power_frequency,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1800: FILE: include/trace/events/power.h:53:
+BARNEY(power_end,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1813: FILE: include/trace/events/sched.h:14:
+BARNEY(sched_kthread_stop,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1822: FILE: include/trace/events/sched.h:36:
+BARNEY(sched_kthread_stop_ret,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1831: FILE: include/trace/events/sched.h:59:
+BARNEY(sched_wait_task,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1840: FILE: include/trace/events/sched.h:87:
+FRED(sched_wakeup_template,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1849: FILE: include/trace/events/sched.h:114:
+WILMA(sched_wakeup_template, sched_wakeup,
 	     TP_PROTO(struct rq *rq, struct task_struct *p, int success),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1858: FILE: include/trace/events/sched.h:124:
+WILMA(sched_wakeup_template, sched_wakeup_new,
 	     TP_PROTO(struct rq *rq, struct task_struct *p, int success),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1867: FILE: include/trace/events/sched.h:134:
+BARNEY(sched_switch,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1876: FILE: include/trace/events/sched.h:174:
+BARNEY(sched_migrate_task,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1885: FILE: include/trace/events/sched.h:201:
+FRED(sched_process_template,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1894: FILE: include/trace/events/sched.h:226:
+WILMA(sched_process_template, sched_process_free,
 	     TP_PROTO(struct task_struct *p),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1903: FILE: include/trace/events/sched.h:234:
+WILMA(sched_process_template, sched_process_exit,
 	     TP_PROTO(struct task_struct *p),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1911: FILE: include/trace/events/sched.h:241:
+BARNEY(sched_process_wait,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1920: FILE: include/trace/events/sched.h:266:
+BARNEY(sched_process_fork,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1929: FILE: include/trace/events/sched.h:295:
+FRED(sched_stat_template,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1938: FILE: include/trace/events/sched.h:326:
+WILMA(sched_stat_template, sched_stat_wait,
 	     TP_PROTO(struct task_struct *tsk, u64 delay),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1947: FILE: include/trace/events/sched.h:334:
+WILMA(sched_stat_template, sched_stat_sleep,
 	     TP_PROTO(struct task_struct *tsk, u64 delay),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1956: FILE: include/trace/events/sched.h:342:
+WILMA(sched_stat_template, sched_stat_iowait,
 	     TP_PROTO(struct task_struct *tsk, u64 delay),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1965: FILE: include/trace/events/sched.h:350:
+BARNEY(sched_stat_runtime,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1978: FILE: include/trace/events/signal.h:38:
+BARNEY(signal_generate,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1987: FILE: include/trace/events/signal.h:78:
+BARNEY(signal_deliver,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1996: FILE: include/trace/events/signal.h:115:
+BARNEY(signal_overflow_fail,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2005: FILE: include/trace/events/signal.h:149:
+BARNEY(signal_lose_info,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2018: FILE: include/trace/events/skb.h:15:
+BARNEY(kfree_skb,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2027: FILE: include/trace/events/skb.h:39:
+BARNEY(skb_copy_datagram_iovec,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2051: FILE: include/trace/events/syscalls.h:19:
+BARNEY_FN(sys_enter,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2060: FILE: include/trace/events/syscalls.h:43:
+BARNEY_FN(sys_exit,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2082: FILE: include/trace/events/timer.h:16:
+BARNEY(timer_init,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2091: FILE: include/trace/events/timer.h:38:
+BARNEY(timer_start,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2100: FILE: include/trace/events/timer.h:69:
+BARNEY(timer_expire_entry,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2109: FILE: include/trace/events/timer.h:98:
+BARNEY(timer_expire_exit,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2118: FILE: include/trace/events/timer.h:119:
+BARNEY(timer_cancel,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2127: FILE: include/trace/events/timer.h:142:
+BARNEY(hrtimer_init,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2136: FILE: include/trace/events/timer.h:172:
+BARNEY(hrtimer_start,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2145: FILE: include/trace/events/timer.h:208:
+BARNEY(hrtimer_expire_entry,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2154: FILE: include/trace/events/timer.h:235:
+BARNEY(hrtimer_expire_exit,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2163: FILE: include/trace/events/timer.h:256:
+BARNEY(hrtimer_cancel,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2172: FILE: include/trace/events/timer.h:280:
+BARNEY(itimer_state,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2181: FILE: include/trace/events/timer.h:317:
+BARNEY(itimer_expire,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2194: FILE: include/trace/events/workqueue.h:12:
+FRED(workqueue,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2203: FILE: include/trace/events/workqueue.h:34:
+WILMA(workqueue, workqueue_insertion,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2211: FILE: include/trace/events/workqueue.h:41:
+WILMA(workqueue, workqueue_execution,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2220: FILE: include/trace/events/workqueue.h:49:
+BARNEY(workqueue_creation,
 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2229: FILE: include/trace/events/workqueue.h:71:
+BARNEY(workqueue_destruction,
 

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#2256: FILE: include/trace/ftrace.h:31:
+#define BARNEY(name, proto, args, tstruct, assign, print) \
+	FRED(name,			       \
 			     PARAMS(proto),		       \
 			     PARAMS(args),		       \
 			     PARAMS(tstruct),		       \
 			     PARAMS(assign),		       \
 			     PARAMS(print));		       \
+	WILMA(name, name, PARAMS(proto), PARAMS(args));

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#2256: FILE: include/trace/ftrace.h:31:
+#define BARNEY(name, proto, args, tstruct, assign, print) \
+	FRED(name,			       \
 			     PARAMS(proto),		       \
 			     PARAMS(args),		       \
 			     PARAMS(tstruct),		       \
 			     PARAMS(assign),		       \
 			     PARAMS(print));		       \
+	WILMA(name, name, PARAMS(proto), PARAMS(args));

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'proto' - possible side-effects?
#2256: FILE: include/trace/ftrace.h:31:
+#define BARNEY(name, proto, args, tstruct, assign, print) \
+	FRED(name,			       \
 			     PARAMS(proto),		       \
 			     PARAMS(args),		       \
 			     PARAMS(tstruct),		       \
 			     PARAMS(assign),		       \
 			     PARAMS(print));		       \
+	WILMA(name, name, PARAMS(proto), PARAMS(args));

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'args' - possible side-effects?
#2256: FILE: include/trace/ftrace.h:31:
+#define BARNEY(name, proto, args, tstruct, assign, print) \
+	FRED(name,			       \
 			     PARAMS(proto),		       \
 			     PARAMS(args),		       \
 			     PARAMS(tstruct),		       \
 			     PARAMS(assign),		       \
 			     PARAMS(print));		       \
+	WILMA(name, name, PARAMS(proto), PARAMS(args));

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2256: FILE: include/trace/ftrace.h:31:
+#define BARNEY(name, proto, args, tstruct, assign, print) \
+	FRED(name,			       \
 			     PARAMS(proto),		       \
 			     PARAMS(args),		       \
 			     PARAMS(tstruct),		       \
 			     PARAMS(assign),		       \
 			     PARAMS(print));		       \
+	WILMA(name, name, PARAMS(proto), PARAMS(args));

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2275: FILE: include/trace/ftrace.h:60:
+#define FRED(name, proto, args, tstruct, assign, print)	\
 	struct ftrace_raw_##name {					\
 		struct trace_entry	ent;				\
 		tstruct							\
 		char			__data[0];			\
 	};

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2315: FILE: include/trace/ftrace.h:119:
+#define FRED(call, proto, args, tstruct, assign, print)	\
 	struct ftrace_data_offsets_##call {				\
 		tstruct;						\
 	};

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2605: FILE: kernel/trace/trace_output.h:1:
+#ifndef __BARNEYS_H

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2631: FILE: net/mac80211/driver-trace.h:34:
+BARNEY(drv_start,
 	TP_PROTO(struct ieee80211_local *local, int ret),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2640: FILE: net/mac80211/driver-trace.h:54:
+BARNEY(drv_stop,
 	TP_PROTO(struct ieee80211_local *local),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2649: FILE: net/mac80211/driver-trace.h:72:
+BARNEY(drv_add_interface,
 	TP_PROTO(struct ieee80211_local *local,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2658: FILE: net/mac80211/driver-trace.h:100:
+BARNEY(drv_remove_interface,
 	TP_PROTO(struct ieee80211_local *local,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2667: FILE: net/mac80211/driver-trace.h:124:
+BARNEY(drv_config,
 	TP_PROTO(struct ieee80211_local *local,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2676: FILE: net/mac80211/driver-trace.h:149:
+BARNEY(drv_bss_info_changed,
 	TP_PROTO(struct ieee80211_local *local,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2685: FILE: net/mac80211/driver-trace.h:195:
+BARNEY(drv_prepare_multicast,
 	TP_PROTO(struct ieee80211_local *local, int mc_count, u64 ret),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2694: FILE: net/mac80211/driver-trace.h:219:
+BARNEY(drv_configure_filter,
 	TP_PROTO(struct ieee80211_local *local,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2703: FILE: net/mac80211/driver-trace.h:247:
+BARNEY(drv_set_tim,
 	TP_PROTO(struct ieee80211_local *local,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2712: FILE: net/mac80211/driver-trace.h:273:
+BARNEY(drv_set_key,
 	TP_PROTO(struct ieee80211_local *local,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2721: FILE: net/mac80211/driver-trace.h:309:
+BARNEY(drv_update_tkip_key,
 	TP_PROTO(struct ieee80211_local *local,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2730: FILE: net/mac80211/driver-trace.h:334:
+BARNEY(drv_hw_scan,
 	TP_PROTO(struct ieee80211_local *local,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2739: FILE: net/mac80211/driver-trace.h:356:
+BARNEY(drv_sw_scan_start,
 	TP_PROTO(struct ieee80211_local *local),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2748: FILE: net/mac80211/driver-trace.h:374:
+BARNEY(drv_sw_scan_complete,
 	TP_PROTO(struct ieee80211_local *local),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2757: FILE: net/mac80211/driver-trace.h:392:
+BARNEY(drv_get_stats,
 	TP_PROTO(struct ieee80211_local *local,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2766: FILE: net/mac80211/driver-trace.h:423:
+BARNEY(drv_get_tkip_seq,
 	TP_PROTO(struct ieee80211_local *local,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2775: FILE: net/mac80211/driver-trace.h:448:
+BARNEY(drv_set_rts_threshold,
 	TP_PROTO(struct ieee80211_local *local, u32 value, int ret),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2784: FILE: net/mac80211/driver-trace.h:471:
+BARNEY(drv_sta_notify,
 	TP_PROTO(struct ieee80211_local *local,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2793: FILE: net/mac80211/driver-trace.h:499:
+BARNEY(drv_conf_tx,
 	TP_PROTO(struct ieee80211_local *local, u16 queue,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2802: FILE: net/mac80211/driver-trace.h:532:
+BARNEY(drv_get_tx_stats,
 	TP_PROTO(struct ieee80211_local *local,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2811: FILE: net/mac80211/driver-trace.h:555:
+BARNEY(drv_get_tsf,
 	TP_PROTO(struct ieee80211_local *local, u64 ret),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2820: FILE: net/mac80211/driver-trace.h:576:
+BARNEY(drv_set_tsf,
 	TP_PROTO(struct ieee80211_local *local, u64 tsf),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2829: FILE: net/mac80211/driver-trace.h:597:
+BARNEY(drv_reset_tsf,
 	TP_PROTO(struct ieee80211_local *local),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2838: FILE: net/mac80211/driver-trace.h:615:
+BARNEY(drv_tx_last_beacon,
 	TP_PROTO(struct ieee80211_local *local, int ret),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2847: FILE: net/mac80211/driver-trace.h:636:
+BARNEY(drv_ampdu_action,
 	TP_PROTO(struct ieee80211_local *local,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2880: FILE: samples/trace_events/trace-events-sample.h:78:
+BARNEY(foo_bar,
 

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2890: FILE: tools/perf/util/trace-event.h:1:
+#ifndef __PERF_BARNEYS_H

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000040210.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 6 warnings, 237 checks, 2409 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000040210.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
